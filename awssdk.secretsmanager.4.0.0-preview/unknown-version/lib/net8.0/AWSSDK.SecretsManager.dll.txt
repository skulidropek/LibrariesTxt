public class Amazon.SecretsManager.AmazonSecretsManagerClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private ISecretsManagerPaginatorFactory _paginators;
    public ISecretsManagerPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonSecretsManagerClient(RegionEndpoint region);
    public AmazonSecretsManagerClient(AmazonSecretsManagerConfig config);
    public AmazonSecretsManagerClient(AWSCredentials credentials);
    public AmazonSecretsManagerClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonSecretsManagerClient(AWSCredentials credentials, AmazonSecretsManagerConfig clientConfig);
    public AmazonSecretsManagerClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonSecretsManagerClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonSecretsManagerClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonSecretsManagerConfig clientConfig);
    public AmazonSecretsManagerClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonSecretsManagerClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonSecretsManagerClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonSecretsManagerConfig clientConfig);
    private static AmazonSecretsManagerClient();
    public sealed virtual ISecretsManagerPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual BatchGetSecretValueResponse BatchGetSecretValue(BatchGetSecretValueRequest request);
    public virtual Task`1<BatchGetSecretValueResponse> BatchGetSecretValueAsync(BatchGetSecretValueRequest request, CancellationToken cancellationToken);
    internal virtual CancelRotateSecretResponse CancelRotateSecret(CancelRotateSecretRequest request);
    public virtual Task`1<CancelRotateSecretResponse> CancelRotateSecretAsync(CancelRotateSecretRequest request, CancellationToken cancellationToken);
    internal virtual CreateSecretResponse CreateSecret(CreateSecretRequest request);
    public virtual Task`1<CreateSecretResponse> CreateSecretAsync(CreateSecretRequest request, CancellationToken cancellationToken);
    internal virtual DeleteResourcePolicyResponse DeleteResourcePolicy(DeleteResourcePolicyRequest request);
    public virtual Task`1<DeleteResourcePolicyResponse> DeleteResourcePolicyAsync(DeleteResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual DeleteSecretResponse DeleteSecret(DeleteSecretRequest request);
    public virtual Task`1<DeleteSecretResponse> DeleteSecretAsync(DeleteSecretRequest request, CancellationToken cancellationToken);
    internal virtual DescribeSecretResponse DescribeSecret(DescribeSecretRequest request);
    public virtual Task`1<DescribeSecretResponse> DescribeSecretAsync(DescribeSecretRequest request, CancellationToken cancellationToken);
    internal virtual GetRandomPasswordResponse GetRandomPassword(GetRandomPasswordRequest request);
    public virtual Task`1<GetRandomPasswordResponse> GetRandomPasswordAsync(GetRandomPasswordRequest request, CancellationToken cancellationToken);
    internal virtual GetResourcePolicyResponse GetResourcePolicy(GetResourcePolicyRequest request);
    public virtual Task`1<GetResourcePolicyResponse> GetResourcePolicyAsync(GetResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual GetSecretValueResponse GetSecretValue(GetSecretValueRequest request);
    public virtual Task`1<GetSecretValueResponse> GetSecretValueAsync(GetSecretValueRequest request, CancellationToken cancellationToken);
    internal virtual ListSecretsResponse ListSecrets(ListSecretsRequest request);
    public virtual Task`1<ListSecretsResponse> ListSecretsAsync(ListSecretsRequest request, CancellationToken cancellationToken);
    internal virtual ListSecretVersionIdsResponse ListSecretVersionIds(ListSecretVersionIdsRequest request);
    public virtual Task`1<ListSecretVersionIdsResponse> ListSecretVersionIdsAsync(ListSecretVersionIdsRequest request, CancellationToken cancellationToken);
    internal virtual PutResourcePolicyResponse PutResourcePolicy(PutResourcePolicyRequest request);
    public virtual Task`1<PutResourcePolicyResponse> PutResourcePolicyAsync(PutResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual PutSecretValueResponse PutSecretValue(PutSecretValueRequest request);
    public virtual Task`1<PutSecretValueResponse> PutSecretValueAsync(PutSecretValueRequest request, CancellationToken cancellationToken);
    internal virtual RemoveRegionsFromReplicationResponse RemoveRegionsFromReplication(RemoveRegionsFromReplicationRequest request);
    public virtual Task`1<RemoveRegionsFromReplicationResponse> RemoveRegionsFromReplicationAsync(RemoveRegionsFromReplicationRequest request, CancellationToken cancellationToken);
    internal virtual ReplicateSecretToRegionsResponse ReplicateSecretToRegions(ReplicateSecretToRegionsRequest request);
    public virtual Task`1<ReplicateSecretToRegionsResponse> ReplicateSecretToRegionsAsync(ReplicateSecretToRegionsRequest request, CancellationToken cancellationToken);
    internal virtual RestoreSecretResponse RestoreSecret(RestoreSecretRequest request);
    public virtual Task`1<RestoreSecretResponse> RestoreSecretAsync(RestoreSecretRequest request, CancellationToken cancellationToken);
    internal virtual RotateSecretResponse RotateSecret(RotateSecretRequest request);
    public virtual Task`1<RotateSecretResponse> RotateSecretAsync(RotateSecretRequest request, CancellationToken cancellationToken);
    internal virtual StopReplicationToReplicaResponse StopReplicationToReplica(StopReplicationToReplicaRequest request);
    public virtual Task`1<StopReplicationToReplicaResponse> StopReplicationToReplicaAsync(StopReplicationToReplicaRequest request, CancellationToken cancellationToken);
    internal virtual TagResourceResponse TagResource(TagResourceRequest request);
    public virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    internal virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    internal virtual UpdateSecretResponse UpdateSecret(UpdateSecretRequest request);
    public virtual Task`1<UpdateSecretResponse> UpdateSecretAsync(UpdateSecretRequest request, CancellationToken cancellationToken);
    internal virtual UpdateSecretVersionStageResponse UpdateSecretVersionStage(UpdateSecretVersionStageRequest request);
    public virtual Task`1<UpdateSecretVersionStageResponse> UpdateSecretVersionStageAsync(UpdateSecretVersionStageRequest request, CancellationToken cancellationToken);
    internal virtual ValidateResourcePolicyResponse ValidateResourcePolicy(ValidateResourcePolicyRequest request);
    public virtual Task`1<ValidateResourcePolicyResponse> ValidateResourcePolicyAsync(ValidateResourcePolicyRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.SecretsManager.AmazonSecretsManagerConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonSecretsManagerEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonSecretsManagerConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.SecretsManager.AmazonSecretsManagerDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonSecretsManagerDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.SecretsManager.AmazonSecretsManagerException : AmazonServiceException {
    public AmazonSecretsManagerException(string message);
    public AmazonSecretsManagerException(string message, Exception innerException);
    public AmazonSecretsManagerException(Exception innerException);
    public AmazonSecretsManagerException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonSecretsManagerException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SecretsManager.AmazonSecretsManagerRequest : AmazonWebServiceRequest {
}
public class Amazon.SecretsManager.Endpoints.SecretsManagerEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.SecretsManager.FilterNameStringType : ConstantClass {
    public static FilterNameStringType All;
    public static FilterNameStringType Description;
    public static FilterNameStringType Name;
    public static FilterNameStringType OwningService;
    public static FilterNameStringType PrimaryRegion;
    public static FilterNameStringType TagKey;
    public static FilterNameStringType TagValue;
    public FilterNameStringType(string value);
    private static FilterNameStringType();
    public static FilterNameStringType FindValue(string value);
    public static FilterNameStringType op_Implicit(string value);
}
public interface Amazon.SecretsManager.IAmazonSecretsManager {
    public ISecretsManagerPaginatorFactory Paginators { get; }
    public abstract virtual ISecretsManagerPaginatorFactory get_Paginators();
    public abstract virtual Task`1<BatchGetSecretValueResponse> BatchGetSecretValueAsync(BatchGetSecretValueRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelRotateSecretResponse> CancelRotateSecretAsync(CancelRotateSecretRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateSecretResponse> CreateSecretAsync(CreateSecretRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteResourcePolicyResponse> DeleteResourcePolicyAsync(DeleteResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteSecretResponse> DeleteSecretAsync(DeleteSecretRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSecretResponse> DescribeSecretAsync(DescribeSecretRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetRandomPasswordResponse> GetRandomPasswordAsync(GetRandomPasswordRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetResourcePolicyResponse> GetResourcePolicyAsync(GetResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetSecretValueResponse> GetSecretValueAsync(GetSecretValueRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListSecretsResponse> ListSecretsAsync(ListSecretsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListSecretVersionIdsResponse> ListSecretVersionIdsAsync(ListSecretVersionIdsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutResourcePolicyResponse> PutResourcePolicyAsync(PutResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutSecretValueResponse> PutSecretValueAsync(PutSecretValueRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemoveRegionsFromReplicationResponse> RemoveRegionsFromReplicationAsync(RemoveRegionsFromReplicationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReplicateSecretToRegionsResponse> ReplicateSecretToRegionsAsync(ReplicateSecretToRegionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RestoreSecretResponse> RestoreSecretAsync(RestoreSecretRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RotateSecretResponse> RotateSecretAsync(RotateSecretRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StopReplicationToReplicaResponse> StopReplicationToReplicaAsync(StopReplicationToReplicaRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateSecretResponse> UpdateSecretAsync(UpdateSecretRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateSecretVersionStageResponse> UpdateSecretVersionStageAsync(UpdateSecretVersionStageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ValidateResourcePolicyResponse> ValidateResourcePolicyAsync(ValidateResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    [DynamicDependencyAttribute("512", "Amazon.SecretsManager.AmazonSecretsManagerConfig")]
private static override ClientConfig Amazon.Runtime.IAmazonService.CreateDefaultClientConfig();
    [UnconditionalSuppressMessageAttribute("AssemblyLoadTrimming", "IL2026:RequiresUnreferencedCode")]
private static override IAmazonService Amazon.Runtime.IAmazonService.CreateDefaultServiceClient(AWSCredentials awsCredentials, ClientConfig clientConfig);
}
public class Amazon.SecretsManager.Internal.AmazonSecretsManagerEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.SecretsManager.Internal.AmazonSecretsManagerEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.SecretsManager.Internal.AmazonSecretsManagerMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.SecretsManager.Model.APIErrorType : object {
    private string _errorCode;
    private string _message;
    private string _secretId;
    public string ErrorCode { get; public set; }
    public string Message { get; public set; }
    [AWSPropertyAttribute]
public string SecretId { get; public set; }
    public string get_ErrorCode();
    public void set_ErrorCode(string value);
    internal bool IsSetErrorCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public string get_SecretId();
    public void set_SecretId(string value);
    internal bool IsSetSecretId();
}
internal class Amazon.SecretsManager.Model.BatchGetSecretValuePaginator : object {
    private IAmazonSecretsManager _client;
    private BatchGetSecretValueRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<BatchGetSecretValueResponse> Responses { get; }
    internal BatchGetSecretValuePaginator(IAmazonSecretsManager client, BatchGetSecretValueRequest request);
    public sealed virtual IPaginatedEnumerable`1<BatchGetSecretValueResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.SecretsManager.Model.BatchGetSecretValuePaginator/<Amazon-Runtime-IPaginator<Amazon-SecretsManager-Model-BatchGetSecretValueResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<BatchGetSecretValueResponse> Amazon.Runtime.IPaginator<Amazon.SecretsManager.Model.BatchGetSecretValueResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SecretsManager.Model.BatchGetSecretValueRequest : AmazonSecretsManagerRequest {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _secretIdList;
    [AWSPropertyAttribute]
public List`1<Filter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SecretIdList { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_SecretIdList();
    public void set_SecretIdList(List`1<string> value);
    internal bool IsSetSecretIdList();
}
public class Amazon.SecretsManager.Model.BatchGetSecretValueResponse : AmazonWebServiceResponse {
    private List`1<APIErrorType> _errors;
    private string _nextToken;
    private List`1<SecretValueEntry> _secretValues;
    public List`1<APIErrorType> Errors { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<SecretValueEntry> SecretValues { get; public set; }
    public List`1<APIErrorType> get_Errors();
    public void set_Errors(List`1<APIErrorType> value);
    internal bool IsSetErrors();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<SecretValueEntry> get_SecretValues();
    public void set_SecretValues(List`1<SecretValueEntry> value);
    internal bool IsSetSecretValues();
}
public class Amazon.SecretsManager.Model.CancelRotateSecretRequest : AmazonSecretsManagerRequest {
    private string _secretId;
    [AWSPropertyAttribute]
public string SecretId { get; public set; }
    public string get_SecretId();
    public void set_SecretId(string value);
    internal bool IsSetSecretId();
}
public class Amazon.SecretsManager.Model.CancelRotateSecretResponse : AmazonWebServiceResponse {
    private string _arn;
    private string _name;
    private string _versionId;
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string VersionId { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
}
public class Amazon.SecretsManager.Model.CreateSecretRequest : AmazonSecretsManagerRequest {
    private List`1<ReplicaRegionType> _addReplicaRegions;
    private string _clientRequestToken;
    private string _description;
    private Nullable`1<bool> _forceOverwriteReplicaSecret;
    private string _kmsKeyId;
    private string _name;
    private MemoryStream _secretBinary;
    private string _secretString;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public List`1<ReplicaRegionType> AddReplicaRegions { get; public set; }
    [AWSPropertyAttribute]
public string ClientRequestToken { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public Nullable`1<bool> ForceOverwriteReplicaSecret { get; public set; }
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public MemoryStream SecretBinary { get; public set; }
    [AWSPropertyAttribute]
public string SecretString { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public List`1<ReplicaRegionType> get_AddReplicaRegions();
    public void set_AddReplicaRegions(List`1<ReplicaRegionType> value);
    internal bool IsSetAddReplicaRegions();
    public string get_ClientRequestToken();
    public void set_ClientRequestToken(string value);
    internal bool IsSetClientRequestToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_ForceOverwriteReplicaSecret();
    public void set_ForceOverwriteReplicaSecret(Nullable`1<bool> value);
    internal bool IsSetForceOverwriteReplicaSecret();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public MemoryStream get_SecretBinary();
    public void set_SecretBinary(MemoryStream value);
    internal bool IsSetSecretBinary();
    public string get_SecretString();
    public void set_SecretString(string value);
    internal bool IsSetSecretString();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.SecretsManager.Model.CreateSecretResponse : AmazonWebServiceResponse {
    private string _arn;
    private string _name;
    private List`1<ReplicationStatusType> _replicationStatus;
    private string _versionId;
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<ReplicationStatusType> ReplicationStatus { get; public set; }
    [AWSPropertyAttribute]
public string VersionId { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<ReplicationStatusType> get_ReplicationStatus();
    public void set_ReplicationStatus(List`1<ReplicationStatusType> value);
    internal bool IsSetReplicationStatus();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
}
public class Amazon.SecretsManager.Model.DecryptionFailureException : AmazonSecretsManagerException {
    public DecryptionFailureException(string message);
    public DecryptionFailureException(string message, Exception innerException);
    public DecryptionFailureException(Exception innerException);
    public DecryptionFailureException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DecryptionFailureException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SecretsManager.Model.DeleteResourcePolicyRequest : AmazonSecretsManagerRequest {
    private string _secretId;
    [AWSPropertyAttribute]
public string SecretId { get; public set; }
    public string get_SecretId();
    public void set_SecretId(string value);
    internal bool IsSetSecretId();
}
public class Amazon.SecretsManager.Model.DeleteResourcePolicyResponse : AmazonWebServiceResponse {
    private string _arn;
    private string _name;
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SecretsManager.Model.DeleteSecretRequest : AmazonSecretsManagerRequest {
    private Nullable`1<bool> _forceDeleteWithoutRecovery;
    private Nullable`1<long> _recoveryWindowInDays;
    private string _secretId;
    public Nullable`1<bool> ForceDeleteWithoutRecovery { get; public set; }
    public Nullable`1<long> RecoveryWindowInDays { get; public set; }
    [AWSPropertyAttribute]
public string SecretId { get; public set; }
    public Nullable`1<bool> get_ForceDeleteWithoutRecovery();
    public void set_ForceDeleteWithoutRecovery(Nullable`1<bool> value);
    internal bool IsSetForceDeleteWithoutRecovery();
    public Nullable`1<long> get_RecoveryWindowInDays();
    public void set_RecoveryWindowInDays(Nullable`1<long> value);
    internal bool IsSetRecoveryWindowInDays();
    public string get_SecretId();
    public void set_SecretId(string value);
    internal bool IsSetSecretId();
}
public class Amazon.SecretsManager.Model.DeleteSecretResponse : AmazonWebServiceResponse {
    private string _arn;
    private Nullable`1<DateTime> _deletionDate;
    private string _name;
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    public Nullable`1<DateTime> DeletionDate { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public Nullable`1<DateTime> get_DeletionDate();
    public void set_DeletionDate(Nullable`1<DateTime> value);
    internal bool IsSetDeletionDate();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SecretsManager.Model.DescribeSecretRequest : AmazonSecretsManagerRequest {
    private string _secretId;
    [AWSPropertyAttribute]
public string SecretId { get; public set; }
    public string get_SecretId();
    public void set_SecretId(string value);
    internal bool IsSetSecretId();
}
public class Amazon.SecretsManager.Model.DescribeSecretResponse : AmazonWebServiceResponse {
    private string _arn;
    private Nullable`1<DateTime> _createdDate;
    private Nullable`1<DateTime> _deletedDate;
    private string _description;
    private string _kmsKeyId;
    private Nullable`1<DateTime> _lastAccessedDate;
    private Nullable`1<DateTime> _lastChangedDate;
    private Nullable`1<DateTime> _lastRotatedDate;
    private string _name;
    private Nullable`1<DateTime> _nextRotationDate;
    private string _owningService;
    private string _primaryRegion;
    private List`1<ReplicationStatusType> _replicationStatus;
    private Nullable`1<bool> _rotationEnabled;
    private string _rotationLambdaARN;
    private RotationRulesType _rotationRules;
    private List`1<Tag> _tags;
    private Dictionary`2<string, List`1<string>> _versionIdsToStages;
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public Nullable`1<DateTime> DeletedDate { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    public Nullable`1<DateTime> LastAccessedDate { get; public set; }
    public Nullable`1<DateTime> LastChangedDate { get; public set; }
    public Nullable`1<DateTime> LastRotatedDate { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<DateTime> NextRotationDate { get; public set; }
    [AWSPropertyAttribute]
public string OwningService { get; public set; }
    [AWSPropertyAttribute]
public string PrimaryRegion { get; public set; }
    public List`1<ReplicationStatusType> ReplicationStatus { get; public set; }
    public Nullable`1<bool> RotationEnabled { get; public set; }
    [AWSPropertyAttribute]
public string RotationLambdaARN { get; public set; }
    public RotationRulesType RotationRules { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public Dictionary`2<string, List`1<string>> VersionIdsToStages { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public Nullable`1<DateTime> get_DeletedDate();
    public void set_DeletedDate(Nullable`1<DateTime> value);
    internal bool IsSetDeletedDate();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<DateTime> get_LastAccessedDate();
    public void set_LastAccessedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastAccessedDate();
    public Nullable`1<DateTime> get_LastChangedDate();
    public void set_LastChangedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastChangedDate();
    public Nullable`1<DateTime> get_LastRotatedDate();
    public void set_LastRotatedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastRotatedDate();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<DateTime> get_NextRotationDate();
    public void set_NextRotationDate(Nullable`1<DateTime> value);
    internal bool IsSetNextRotationDate();
    public string get_OwningService();
    public void set_OwningService(string value);
    internal bool IsSetOwningService();
    public string get_PrimaryRegion();
    public void set_PrimaryRegion(string value);
    internal bool IsSetPrimaryRegion();
    public List`1<ReplicationStatusType> get_ReplicationStatus();
    public void set_ReplicationStatus(List`1<ReplicationStatusType> value);
    internal bool IsSetReplicationStatus();
    public Nullable`1<bool> get_RotationEnabled();
    public void set_RotationEnabled(Nullable`1<bool> value);
    internal bool IsSetRotationEnabled();
    public string get_RotationLambdaARN();
    public void set_RotationLambdaARN(string value);
    internal bool IsSetRotationLambdaARN();
    public RotationRulesType get_RotationRules();
    public void set_RotationRules(RotationRulesType value);
    internal bool IsSetRotationRules();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public Dictionary`2<string, List`1<string>> get_VersionIdsToStages();
    public void set_VersionIdsToStages(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetVersionIdsToStages();
}
public class Amazon.SecretsManager.Model.EncryptionFailureException : AmazonSecretsManagerException {
    public EncryptionFailureException(string message);
    public EncryptionFailureException(string message, Exception innerException);
    public EncryptionFailureException(Exception innerException);
    public EncryptionFailureException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EncryptionFailureException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SecretsManager.Model.Filter : object {
    private FilterNameStringType _key;
    private List`1<string> _values;
    public FilterNameStringType Key { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Values { get; public set; }
    public FilterNameStringType get_Key();
    public void set_Key(FilterNameStringType value);
    internal bool IsSetKey();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.SecretsManager.Model.GetRandomPasswordRequest : AmazonSecretsManagerRequest {
    private string _excludeCharacters;
    private Nullable`1<bool> _excludeLowercase;
    private Nullable`1<bool> _excludeNumbers;
    private Nullable`1<bool> _excludePunctuation;
    private Nullable`1<bool> _excludeUppercase;
    private Nullable`1<bool> _includeSpace;
    private Nullable`1<long> _passwordLength;
    private Nullable`1<bool> _requireEachIncludedType;
    [AWSPropertyAttribute]
public string ExcludeCharacters { get; public set; }
    public Nullable`1<bool> ExcludeLowercase { get; public set; }
    public Nullable`1<bool> ExcludeNumbers { get; public set; }
    public Nullable`1<bool> ExcludePunctuation { get; public set; }
    public Nullable`1<bool> ExcludeUppercase { get; public set; }
    public Nullable`1<bool> IncludeSpace { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> PasswordLength { get; public set; }
    public Nullable`1<bool> RequireEachIncludedType { get; public set; }
    public string get_ExcludeCharacters();
    public void set_ExcludeCharacters(string value);
    internal bool IsSetExcludeCharacters();
    public Nullable`1<bool> get_ExcludeLowercase();
    public void set_ExcludeLowercase(Nullable`1<bool> value);
    internal bool IsSetExcludeLowercase();
    public Nullable`1<bool> get_ExcludeNumbers();
    public void set_ExcludeNumbers(Nullable`1<bool> value);
    internal bool IsSetExcludeNumbers();
    public Nullable`1<bool> get_ExcludePunctuation();
    public void set_ExcludePunctuation(Nullable`1<bool> value);
    internal bool IsSetExcludePunctuation();
    public Nullable`1<bool> get_ExcludeUppercase();
    public void set_ExcludeUppercase(Nullable`1<bool> value);
    internal bool IsSetExcludeUppercase();
    public Nullable`1<bool> get_IncludeSpace();
    public void set_IncludeSpace(Nullable`1<bool> value);
    internal bool IsSetIncludeSpace();
    public Nullable`1<long> get_PasswordLength();
    public void set_PasswordLength(Nullable`1<long> value);
    internal bool IsSetPasswordLength();
    public Nullable`1<bool> get_RequireEachIncludedType();
    public void set_RequireEachIncludedType(Nullable`1<bool> value);
    internal bool IsSetRequireEachIncludedType();
}
public class Amazon.SecretsManager.Model.GetRandomPasswordResponse : AmazonWebServiceResponse {
    private string _randomPassword;
    [AWSPropertyAttribute]
public string RandomPassword { get; public set; }
    public string get_RandomPassword();
    public void set_RandomPassword(string value);
    internal bool IsSetRandomPassword();
}
public class Amazon.SecretsManager.Model.GetResourcePolicyRequest : AmazonSecretsManagerRequest {
    private string _secretId;
    [AWSPropertyAttribute]
public string SecretId { get; public set; }
    public string get_SecretId();
    public void set_SecretId(string value);
    internal bool IsSetSecretId();
}
public class Amazon.SecretsManager.Model.GetResourcePolicyResponse : AmazonWebServiceResponse {
    private string _arn;
    private string _name;
    private string _resourcePolicy;
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string ResourcePolicy { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_ResourcePolicy();
    public void set_ResourcePolicy(string value);
    internal bool IsSetResourcePolicy();
}
public class Amazon.SecretsManager.Model.GetSecretValueRequest : AmazonSecretsManagerRequest {
    private string _secretId;
    private string _versionId;
    private string _versionStage;
    [AWSPropertyAttribute]
public string SecretId { get; public set; }
    [AWSPropertyAttribute]
public string VersionId { get; public set; }
    [AWSPropertyAttribute]
public string VersionStage { get; public set; }
    public string get_SecretId();
    public void set_SecretId(string value);
    internal bool IsSetSecretId();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
    public string get_VersionStage();
    public void set_VersionStage(string value);
    internal bool IsSetVersionStage();
}
public class Amazon.SecretsManager.Model.GetSecretValueResponse : AmazonWebServiceResponse {
    private string _arn;
    private Nullable`1<DateTime> _createdDate;
    private string _name;
    private MemoryStream _secretBinary;
    private string _secretString;
    private string _versionId;
    private List`1<string> _versionStages;
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public MemoryStream SecretBinary { get; public set; }
    [AWSPropertyAttribute]
public string SecretString { get; public set; }
    [AWSPropertyAttribute]
public string VersionId { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> VersionStages { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public MemoryStream get_SecretBinary();
    public void set_SecretBinary(MemoryStream value);
    internal bool IsSetSecretBinary();
    public string get_SecretString();
    public void set_SecretString(string value);
    internal bool IsSetSecretString();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
    public List`1<string> get_VersionStages();
    public void set_VersionStages(List`1<string> value);
    internal bool IsSetVersionStages();
}
public interface Amazon.SecretsManager.Model.IBatchGetSecretValuePaginator {
    public IPaginatedEnumerable`1<BatchGetSecretValueResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<BatchGetSecretValueResponse> get_Responses();
}
public interface Amazon.SecretsManager.Model.IListSecretsPaginator {
    public IPaginatedEnumerable`1<ListSecretsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListSecretsResponse> get_Responses();
}
public interface Amazon.SecretsManager.Model.IListSecretVersionIdsPaginator {
    public IPaginatedEnumerable`1<ListSecretVersionIdsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListSecretVersionIdsResponse> get_Responses();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.APIErrorTypeUnmarshaller : object {
    private static APIErrorTypeUnmarshaller _instance;
    public static APIErrorTypeUnmarshaller Instance { get; }
    private static APIErrorTypeUnmarshaller();
    private sealed virtual override APIErrorType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SecretsManager.Model.APIErrorType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual APIErrorType Unmarshall(JsonUnmarshallerContext context);
    public static APIErrorTypeUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.BatchGetSecretValueRequestMarshaller : object {
    private static BatchGetSecretValueRequestMarshaller _instance;
    public static BatchGetSecretValueRequestMarshaller Instance { get; }
    private static BatchGetSecretValueRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchGetSecretValueRequest publicRequest);
    internal static BatchGetSecretValueRequestMarshaller GetInstance();
    public static BatchGetSecretValueRequestMarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.BatchGetSecretValueResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchGetSecretValueResponseUnmarshaller _instance;
    public static BatchGetSecretValueResponseUnmarshaller Instance { get; }
    private static BatchGetSecretValueResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchGetSecretValueResponseUnmarshaller GetInstance();
    public static BatchGetSecretValueResponseUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.CancelRotateSecretRequestMarshaller : object {
    private static CancelRotateSecretRequestMarshaller _instance;
    public static CancelRotateSecretRequestMarshaller Instance { get; }
    private static CancelRotateSecretRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelRotateSecretRequest publicRequest);
    internal static CancelRotateSecretRequestMarshaller GetInstance();
    public static CancelRotateSecretRequestMarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.CancelRotateSecretResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CancelRotateSecretResponseUnmarshaller _instance;
    public static CancelRotateSecretResponseUnmarshaller Instance { get; }
    private static CancelRotateSecretResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelRotateSecretResponseUnmarshaller GetInstance();
    public static CancelRotateSecretResponseUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.CreateSecretRequestMarshaller : object {
    private static CreateSecretRequestMarshaller _instance;
    public static CreateSecretRequestMarshaller Instance { get; }
    private static CreateSecretRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateSecretRequest publicRequest);
    internal static CreateSecretRequestMarshaller GetInstance();
    public static CreateSecretRequestMarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.CreateSecretResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateSecretResponseUnmarshaller _instance;
    public static CreateSecretResponseUnmarshaller Instance { get; }
    private static CreateSecretResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateSecretResponseUnmarshaller GetInstance();
    public static CreateSecretResponseUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.DecryptionFailureExceptionUnmarshaller : object {
    private static DecryptionFailureExceptionUnmarshaller _instance;
    public static DecryptionFailureExceptionUnmarshaller Instance { get; }
    private static DecryptionFailureExceptionUnmarshaller();
    public sealed virtual DecryptionFailureException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual DecryptionFailureException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static DecryptionFailureExceptionUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller : object {
    private static DeleteResourcePolicyRequestMarshaller _instance;
    public static DeleteResourcePolicyRequestMarshaller Instance { get; }
    private static DeleteResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteResourcePolicyRequest publicRequest);
    internal static DeleteResourcePolicyRequestMarshaller GetInstance();
    public static DeleteResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteResourcePolicyResponseUnmarshaller _instance;
    public static DeleteResourcePolicyResponseUnmarshaller Instance { get; }
    private static DeleteResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteResourcePolicyResponseUnmarshaller GetInstance();
    public static DeleteResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteSecretRequestMarshaller : object {
    private static DeleteSecretRequestMarshaller _instance;
    public static DeleteSecretRequestMarshaller Instance { get; }
    private static DeleteSecretRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteSecretRequest publicRequest);
    internal static DeleteSecretRequestMarshaller GetInstance();
    public static DeleteSecretRequestMarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteSecretResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteSecretResponseUnmarshaller _instance;
    public static DeleteSecretResponseUnmarshaller Instance { get; }
    private static DeleteSecretResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteSecretResponseUnmarshaller GetInstance();
    public static DeleteSecretResponseUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.DescribeSecretRequestMarshaller : object {
    private static DescribeSecretRequestMarshaller _instance;
    public static DescribeSecretRequestMarshaller Instance { get; }
    private static DescribeSecretRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSecretRequest publicRequest);
    internal static DescribeSecretRequestMarshaller GetInstance();
    public static DescribeSecretRequestMarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.DescribeSecretResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeSecretResponseUnmarshaller _instance;
    public static DescribeSecretResponseUnmarshaller Instance { get; }
    private static DescribeSecretResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSecretResponseUnmarshaller GetInstance();
    public static DescribeSecretResponseUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.EncryptionFailureExceptionUnmarshaller : object {
    private static EncryptionFailureExceptionUnmarshaller _instance;
    public static EncryptionFailureExceptionUnmarshaller Instance { get; }
    private static EncryptionFailureExceptionUnmarshaller();
    public sealed virtual EncryptionFailureException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual EncryptionFailureException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static EncryptionFailureExceptionUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.FilterMarshaller : object {
    public static FilterMarshaller Instance;
    private static FilterMarshaller();
    public sealed virtual void Marshall(Filter requestObject, JsonMarshallerContext context);
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetRandomPasswordRequestMarshaller : object {
    private static GetRandomPasswordRequestMarshaller _instance;
    public static GetRandomPasswordRequestMarshaller Instance { get; }
    private static GetRandomPasswordRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetRandomPasswordRequest publicRequest);
    internal static GetRandomPasswordRequestMarshaller GetInstance();
    public static GetRandomPasswordRequestMarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetRandomPasswordResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetRandomPasswordResponseUnmarshaller _instance;
    public static GetRandomPasswordResponseUnmarshaller Instance { get; }
    private static GetRandomPasswordResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetRandomPasswordResponseUnmarshaller GetInstance();
    public static GetRandomPasswordResponseUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetResourcePolicyRequestMarshaller : object {
    private static GetResourcePolicyRequestMarshaller _instance;
    public static GetResourcePolicyRequestMarshaller Instance { get; }
    private static GetResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetResourcePolicyRequest publicRequest);
    internal static GetResourcePolicyRequestMarshaller GetInstance();
    public static GetResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetResourcePolicyResponseUnmarshaller _instance;
    public static GetResourcePolicyResponseUnmarshaller Instance { get; }
    private static GetResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetResourcePolicyResponseUnmarshaller GetInstance();
    public static GetResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetSecretValueRequestMarshaller : object {
    private static GetSecretValueRequestMarshaller _instance;
    public static GetSecretValueRequestMarshaller Instance { get; }
    private static GetSecretValueRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetSecretValueRequest publicRequest);
    internal static GetSecretValueRequestMarshaller GetInstance();
    public static GetSecretValueRequestMarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetSecretValueResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetSecretValueResponseUnmarshaller _instance;
    public static GetSecretValueResponseUnmarshaller Instance { get; }
    private static GetSecretValueResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetSecretValueResponseUnmarshaller GetInstance();
    public static GetSecretValueResponseUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.InternalServiceErrorExceptionUnmarshaller : object {
    private static InternalServiceErrorExceptionUnmarshaller _instance;
    public static InternalServiceErrorExceptionUnmarshaller Instance { get; }
    private static InternalServiceErrorExceptionUnmarshaller();
    public sealed virtual InternalServiceErrorException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InternalServiceErrorException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InternalServiceErrorExceptionUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidNextTokenExceptionUnmarshaller : object {
    private static InvalidNextTokenExceptionUnmarshaller _instance;
    public static InvalidNextTokenExceptionUnmarshaller Instance { get; }
    private static InvalidNextTokenExceptionUnmarshaller();
    public sealed virtual InvalidNextTokenException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidNextTokenException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidNextTokenExceptionUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller : object {
    private static InvalidParameterExceptionUnmarshaller _instance;
    public static InvalidParameterExceptionUnmarshaller Instance { get; }
    private static InvalidParameterExceptionUnmarshaller();
    public sealed virtual InvalidParameterException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidParameterException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidParameterExceptionUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidRequestExceptionUnmarshaller : object {
    private static InvalidRequestExceptionUnmarshaller _instance;
    public static InvalidRequestExceptionUnmarshaller Instance { get; }
    private static InvalidRequestExceptionUnmarshaller();
    public sealed virtual InvalidRequestException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidRequestException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidRequestExceptionUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller : object {
    private static LimitExceededExceptionUnmarshaller _instance;
    public static LimitExceededExceptionUnmarshaller Instance { get; }
    private static LimitExceededExceptionUnmarshaller();
    public sealed virtual LimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual LimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static LimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretsRequestMarshaller : object {
    private static ListSecretsRequestMarshaller _instance;
    public static ListSecretsRequestMarshaller Instance { get; }
    private static ListSecretsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListSecretsRequest publicRequest);
    internal static ListSecretsRequestMarshaller GetInstance();
    public static ListSecretsRequestMarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListSecretsResponseUnmarshaller _instance;
    public static ListSecretsResponseUnmarshaller Instance { get; }
    private static ListSecretsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListSecretsResponseUnmarshaller GetInstance();
    public static ListSecretsResponseUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretVersionIdsRequestMarshaller : object {
    private static ListSecretVersionIdsRequestMarshaller _instance;
    public static ListSecretVersionIdsRequestMarshaller Instance { get; }
    private static ListSecretVersionIdsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListSecretVersionIdsRequest publicRequest);
    internal static ListSecretVersionIdsRequestMarshaller GetInstance();
    public static ListSecretVersionIdsRequestMarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretVersionIdsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListSecretVersionIdsResponseUnmarshaller _instance;
    public static ListSecretVersionIdsResponseUnmarshaller Instance { get; }
    private static ListSecretVersionIdsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListSecretVersionIdsResponseUnmarshaller GetInstance();
    public static ListSecretVersionIdsResponseUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.MalformedPolicyDocumentExceptionUnmarshaller : object {
    private static MalformedPolicyDocumentExceptionUnmarshaller _instance;
    public static MalformedPolicyDocumentExceptionUnmarshaller Instance { get; }
    private static MalformedPolicyDocumentExceptionUnmarshaller();
    public sealed virtual MalformedPolicyDocumentException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual MalformedPolicyDocumentException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static MalformedPolicyDocumentExceptionUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.PreconditionNotMetExceptionUnmarshaller : object {
    private static PreconditionNotMetExceptionUnmarshaller _instance;
    public static PreconditionNotMetExceptionUnmarshaller Instance { get; }
    private static PreconditionNotMetExceptionUnmarshaller();
    public sealed virtual PreconditionNotMetException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual PreconditionNotMetException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static PreconditionNotMetExceptionUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.PublicPolicyExceptionUnmarshaller : object {
    private static PublicPolicyExceptionUnmarshaller _instance;
    public static PublicPolicyExceptionUnmarshaller Instance { get; }
    private static PublicPolicyExceptionUnmarshaller();
    public sealed virtual PublicPolicyException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual PublicPolicyException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static PublicPolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller : object {
    private static PutResourcePolicyRequestMarshaller _instance;
    public static PutResourcePolicyRequestMarshaller Instance { get; }
    private static PutResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutResourcePolicyRequest publicRequest);
    internal static PutResourcePolicyRequestMarshaller GetInstance();
    public static PutResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutResourcePolicyResponseUnmarshaller _instance;
    public static PutResourcePolicyResponseUnmarshaller Instance { get; }
    private static PutResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutResourcePolicyResponseUnmarshaller GetInstance();
    public static PutResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutSecretValueRequestMarshaller : object {
    private static PutSecretValueRequestMarshaller _instance;
    public static PutSecretValueRequestMarshaller Instance { get; }
    private static PutSecretValueRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutSecretValueRequest publicRequest);
    internal static PutSecretValueRequestMarshaller GetInstance();
    public static PutSecretValueRequestMarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutSecretValueResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutSecretValueResponseUnmarshaller _instance;
    public static PutSecretValueResponseUnmarshaller Instance { get; }
    private static PutSecretValueResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutSecretValueResponseUnmarshaller GetInstance();
    public static PutSecretValueResponseUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.RemoveRegionsFromReplicationRequestMarshaller : object {
    private static RemoveRegionsFromReplicationRequestMarshaller _instance;
    public static RemoveRegionsFromReplicationRequestMarshaller Instance { get; }
    private static RemoveRegionsFromReplicationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemoveRegionsFromReplicationRequest publicRequest);
    internal static RemoveRegionsFromReplicationRequestMarshaller GetInstance();
    public static RemoveRegionsFromReplicationRequestMarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.RemoveRegionsFromReplicationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RemoveRegionsFromReplicationResponseUnmarshaller _instance;
    public static RemoveRegionsFromReplicationResponseUnmarshaller Instance { get; }
    private static RemoveRegionsFromReplicationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemoveRegionsFromReplicationResponseUnmarshaller GetInstance();
    public static RemoveRegionsFromReplicationResponseUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicaRegionTypeMarshaller : object {
    public static ReplicaRegionTypeMarshaller Instance;
    private static ReplicaRegionTypeMarshaller();
    public sealed virtual void Marshall(ReplicaRegionType requestObject, JsonMarshallerContext context);
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicateSecretToRegionsRequestMarshaller : object {
    private static ReplicateSecretToRegionsRequestMarshaller _instance;
    public static ReplicateSecretToRegionsRequestMarshaller Instance { get; }
    private static ReplicateSecretToRegionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReplicateSecretToRegionsRequest publicRequest);
    internal static ReplicateSecretToRegionsRequestMarshaller GetInstance();
    public static ReplicateSecretToRegionsRequestMarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicateSecretToRegionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ReplicateSecretToRegionsResponseUnmarshaller _instance;
    public static ReplicateSecretToRegionsResponseUnmarshaller Instance { get; }
    private static ReplicateSecretToRegionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReplicateSecretToRegionsResponseUnmarshaller GetInstance();
    public static ReplicateSecretToRegionsResponseUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicationStatusTypeUnmarshaller : object {
    private static ReplicationStatusTypeUnmarshaller _instance;
    public static ReplicationStatusTypeUnmarshaller Instance { get; }
    private static ReplicationStatusTypeUnmarshaller();
    private sealed virtual override ReplicationStatusType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SecretsManager.Model.ReplicationStatusType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationStatusType Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationStatusTypeUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.ResourceExistsExceptionUnmarshaller : object {
    private static ResourceExistsExceptionUnmarshaller _instance;
    public static ResourceExistsExceptionUnmarshaller Instance { get; }
    private static ResourceExistsExceptionUnmarshaller();
    public sealed virtual ResourceExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller : object {
    private static ResourceNotFoundExceptionUnmarshaller _instance;
    public static ResourceNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourceNotFoundExceptionUnmarshaller();
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.RestoreSecretRequestMarshaller : object {
    private static RestoreSecretRequestMarshaller _instance;
    public static RestoreSecretRequestMarshaller Instance { get; }
    private static RestoreSecretRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RestoreSecretRequest publicRequest);
    internal static RestoreSecretRequestMarshaller GetInstance();
    public static RestoreSecretRequestMarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.RestoreSecretResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RestoreSecretResponseUnmarshaller _instance;
    public static RestoreSecretResponseUnmarshaller Instance { get; }
    private static RestoreSecretResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RestoreSecretResponseUnmarshaller GetInstance();
    public static RestoreSecretResponseUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotateSecretRequestMarshaller : object {
    private static RotateSecretRequestMarshaller _instance;
    public static RotateSecretRequestMarshaller Instance { get; }
    private static RotateSecretRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RotateSecretRequest publicRequest);
    internal static RotateSecretRequestMarshaller GetInstance();
    public static RotateSecretRequestMarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotateSecretResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RotateSecretResponseUnmarshaller _instance;
    public static RotateSecretResponseUnmarshaller Instance { get; }
    private static RotateSecretResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RotateSecretResponseUnmarshaller GetInstance();
    public static RotateSecretResponseUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotationRulesTypeMarshaller : object {
    public static RotationRulesTypeMarshaller Instance;
    private static RotationRulesTypeMarshaller();
    public sealed virtual void Marshall(RotationRulesType requestObject, JsonMarshallerContext context);
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotationRulesTypeUnmarshaller : object {
    private static RotationRulesTypeUnmarshaller _instance;
    public static RotationRulesTypeUnmarshaller Instance { get; }
    private static RotationRulesTypeUnmarshaller();
    private sealed virtual override RotationRulesType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SecretsManager.Model.RotationRulesType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RotationRulesType Unmarshall(JsonUnmarshallerContext context);
    public static RotationRulesTypeUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.SecretListEntryUnmarshaller : object {
    private static SecretListEntryUnmarshaller _instance;
    public static SecretListEntryUnmarshaller Instance { get; }
    private static SecretListEntryUnmarshaller();
    private sealed virtual override SecretListEntry Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SecretsManager.Model.SecretListEntry,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SecretListEntry Unmarshall(JsonUnmarshallerContext context);
    public static SecretListEntryUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.SecretValueEntryUnmarshaller : object {
    private static SecretValueEntryUnmarshaller _instance;
    public static SecretValueEntryUnmarshaller Instance { get; }
    private static SecretValueEntryUnmarshaller();
    private sealed virtual override SecretValueEntry Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SecretsManager.Model.SecretValueEntry,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SecretValueEntry Unmarshall(JsonUnmarshallerContext context);
    public static SecretValueEntryUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.SecretVersionsListEntryUnmarshaller : object {
    private static SecretVersionsListEntryUnmarshaller _instance;
    public static SecretVersionsListEntryUnmarshaller Instance { get; }
    private static SecretVersionsListEntryUnmarshaller();
    private sealed virtual override SecretVersionsListEntry Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SecretsManager.Model.SecretVersionsListEntry,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SecretVersionsListEntry Unmarshall(JsonUnmarshallerContext context);
    public static SecretVersionsListEntryUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.StopReplicationToReplicaRequestMarshaller : object {
    private static StopReplicationToReplicaRequestMarshaller _instance;
    public static StopReplicationToReplicaRequestMarshaller Instance { get; }
    private static StopReplicationToReplicaRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopReplicationToReplicaRequest publicRequest);
    internal static StopReplicationToReplicaRequestMarshaller GetInstance();
    public static StopReplicationToReplicaRequestMarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.StopReplicationToReplicaResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StopReplicationToReplicaResponseUnmarshaller _instance;
    public static StopReplicationToReplicaResponseUnmarshaller Instance { get; }
    private static StopReplicationToReplicaResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopReplicationToReplicaResponseUnmarshaller GetInstance();
    public static StopReplicationToReplicaResponseUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagMarshaller : object {
    public static TagMarshaller Instance;
    private static TagMarshaller();
    public sealed virtual void Marshall(Tag requestObject, JsonMarshallerContext context);
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller : object {
    private static TagResourceRequestMarshaller _instance;
    public static TagResourceRequestMarshaller Instance { get; }
    private static TagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TagResourceRequest publicRequest);
    internal static TagResourceRequestMarshaller GetInstance();
    public static TagResourceRequestMarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TagResourceResponseUnmarshaller _instance;
    public static TagResourceResponseUnmarshaller Instance { get; }
    private static TagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TagResourceResponseUnmarshaller GetInstance();
    public static TagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagUnmarshaller : object {
    private static TagUnmarshaller _instance;
    public static TagUnmarshaller Instance { get; }
    private static TagUnmarshaller();
    private sealed virtual override Tag Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SecretsManager.Model.Tag,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tag Unmarshall(JsonUnmarshallerContext context);
    public static TagUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller : object {
    private static UntagResourceRequestMarshaller _instance;
    public static UntagResourceRequestMarshaller Instance { get; }
    private static UntagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UntagResourceRequest publicRequest);
    internal static UntagResourceRequestMarshaller GetInstance();
    public static UntagResourceRequestMarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UntagResourceResponseUnmarshaller _instance;
    public static UntagResourceResponseUnmarshaller Instance { get; }
    private static UntagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UntagResourceResponseUnmarshaller GetInstance();
    public static UntagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretRequestMarshaller : object {
    private static UpdateSecretRequestMarshaller _instance;
    public static UpdateSecretRequestMarshaller Instance { get; }
    private static UpdateSecretRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateSecretRequest publicRequest);
    internal static UpdateSecretRequestMarshaller GetInstance();
    public static UpdateSecretRequestMarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateSecretResponseUnmarshaller _instance;
    public static UpdateSecretResponseUnmarshaller Instance { get; }
    private static UpdateSecretResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateSecretResponseUnmarshaller GetInstance();
    public static UpdateSecretResponseUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretVersionStageRequestMarshaller : object {
    private static UpdateSecretVersionStageRequestMarshaller _instance;
    public static UpdateSecretVersionStageRequestMarshaller Instance { get; }
    private static UpdateSecretVersionStageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateSecretVersionStageRequest publicRequest);
    internal static UpdateSecretVersionStageRequestMarshaller GetInstance();
    public static UpdateSecretVersionStageRequestMarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretVersionStageResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateSecretVersionStageResponseUnmarshaller _instance;
    public static UpdateSecretVersionStageResponseUnmarshaller Instance { get; }
    private static UpdateSecretVersionStageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateSecretVersionStageResponseUnmarshaller GetInstance();
    public static UpdateSecretVersionStageResponseUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidateResourcePolicyRequestMarshaller : object {
    private static ValidateResourcePolicyRequestMarshaller _instance;
    public static ValidateResourcePolicyRequestMarshaller Instance { get; }
    private static ValidateResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ValidateResourcePolicyRequest publicRequest);
    internal static ValidateResourcePolicyRequestMarshaller GetInstance();
    public static ValidateResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidateResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ValidateResourcePolicyResponseUnmarshaller _instance;
    public static ValidateResourcePolicyResponseUnmarshaller Instance { get; }
    private static ValidateResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ValidateResourcePolicyResponseUnmarshaller GetInstance();
    public static ValidateResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidationErrorsEntryUnmarshaller : object {
    private static ValidationErrorsEntryUnmarshaller _instance;
    public static ValidationErrorsEntryUnmarshaller Instance { get; }
    private static ValidationErrorsEntryUnmarshaller();
    private sealed virtual override ValidationErrorsEntry Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SecretsManager.Model.ValidationErrorsEntry,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ValidationErrorsEntry Unmarshall(JsonUnmarshallerContext context);
    public static ValidationErrorsEntryUnmarshaller get_Instance();
}
public class Amazon.SecretsManager.Model.InternalServiceErrorException : AmazonSecretsManagerException {
    public InternalServiceErrorException(string message);
    public InternalServiceErrorException(string message, Exception innerException);
    public InternalServiceErrorException(Exception innerException);
    public InternalServiceErrorException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InternalServiceErrorException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SecretsManager.Model.InvalidNextTokenException : AmazonSecretsManagerException {
    public InvalidNextTokenException(string message);
    public InvalidNextTokenException(string message, Exception innerException);
    public InvalidNextTokenException(Exception innerException);
    public InvalidNextTokenException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidNextTokenException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SecretsManager.Model.InvalidParameterException : AmazonSecretsManagerException {
    public InvalidParameterException(string message);
    public InvalidParameterException(string message, Exception innerException);
    public InvalidParameterException(Exception innerException);
    public InvalidParameterException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidParameterException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SecretsManager.Model.InvalidRequestException : AmazonSecretsManagerException {
    public InvalidRequestException(string message);
    public InvalidRequestException(string message, Exception innerException);
    public InvalidRequestException(Exception innerException);
    public InvalidRequestException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidRequestException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public interface Amazon.SecretsManager.Model.ISecretsManagerPaginatorFactory {
    public abstract virtual IBatchGetSecretValuePaginator BatchGetSecretValue(BatchGetSecretValueRequest request);
    public abstract virtual IListSecretsPaginator ListSecrets(ListSecretsRequest request);
    public abstract virtual IListSecretVersionIdsPaginator ListSecretVersionIds(ListSecretVersionIdsRequest request);
}
public class Amazon.SecretsManager.Model.LimitExceededException : AmazonSecretsManagerException {
    public LimitExceededException(string message);
    public LimitExceededException(string message, Exception innerException);
    public LimitExceededException(Exception innerException);
    public LimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public LimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
internal class Amazon.SecretsManager.Model.ListSecretsPaginator : object {
    private IAmazonSecretsManager _client;
    private ListSecretsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListSecretsResponse> Responses { get; }
    internal ListSecretsPaginator(IAmazonSecretsManager client, ListSecretsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListSecretsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.SecretsManager.Model.ListSecretsPaginator/<Amazon-Runtime-IPaginator<Amazon-SecretsManager-Model-ListSecretsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListSecretsResponse> Amazon.Runtime.IPaginator<Amazon.SecretsManager.Model.ListSecretsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SecretsManager.Model.ListSecretsRequest : AmazonSecretsManagerRequest {
    private List`1<Filter> _filters;
    private Nullable`1<bool> _includePlannedDeletion;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private SortOrderType _sortOrder;
    [AWSPropertyAttribute]
public List`1<Filter> Filters { get; public set; }
    public Nullable`1<bool> IncludePlannedDeletion { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public SortOrderType SortOrder { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<bool> get_IncludePlannedDeletion();
    public void set_IncludePlannedDeletion(Nullable`1<bool> value);
    internal bool IsSetIncludePlannedDeletion();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public SortOrderType get_SortOrder();
    public void set_SortOrder(SortOrderType value);
    internal bool IsSetSortOrder();
}
public class Amazon.SecretsManager.Model.ListSecretsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<SecretListEntry> _secretList;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<SecretListEntry> SecretList { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<SecretListEntry> get_SecretList();
    public void set_SecretList(List`1<SecretListEntry> value);
    internal bool IsSetSecretList();
}
internal class Amazon.SecretsManager.Model.ListSecretVersionIdsPaginator : object {
    private IAmazonSecretsManager _client;
    private ListSecretVersionIdsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListSecretVersionIdsResponse> Responses { get; }
    internal ListSecretVersionIdsPaginator(IAmazonSecretsManager client, ListSecretVersionIdsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListSecretVersionIdsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.SecretsManager.Model.ListSecretVersionIdsPaginator/<Amazon-Runtime-IPaginator<Amazon-SecretsManager-Model-ListSecretVersionIdsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListSecretVersionIdsResponse> Amazon.Runtime.IPaginator<Amazon.SecretsManager.Model.ListSecretVersionIdsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SecretsManager.Model.ListSecretVersionIdsRequest : AmazonSecretsManagerRequest {
    private Nullable`1<bool> _includeDeprecated;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _secretId;
    public Nullable`1<bool> IncludeDeprecated { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string SecretId { get; public set; }
    public Nullable`1<bool> get_IncludeDeprecated();
    public void set_IncludeDeprecated(Nullable`1<bool> value);
    internal bool IsSetIncludeDeprecated();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_SecretId();
    public void set_SecretId(string value);
    internal bool IsSetSecretId();
}
public class Amazon.SecretsManager.Model.ListSecretVersionIdsResponse : AmazonWebServiceResponse {
    private string _arn;
    private string _name;
    private string _nextToken;
    private List`1<SecretVersionsListEntry> _versions;
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<SecretVersionsListEntry> Versions { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<SecretVersionsListEntry> get_Versions();
    public void set_Versions(List`1<SecretVersionsListEntry> value);
    internal bool IsSetVersions();
}
public class Amazon.SecretsManager.Model.MalformedPolicyDocumentException : AmazonSecretsManagerException {
    public MalformedPolicyDocumentException(string message);
    public MalformedPolicyDocumentException(string message, Exception innerException);
    public MalformedPolicyDocumentException(Exception innerException);
    public MalformedPolicyDocumentException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public MalformedPolicyDocumentException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SecretsManager.Model.PreconditionNotMetException : AmazonSecretsManagerException {
    public PreconditionNotMetException(string message);
    public PreconditionNotMetException(string message, Exception innerException);
    public PreconditionNotMetException(Exception innerException);
    public PreconditionNotMetException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PreconditionNotMetException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SecretsManager.Model.PublicPolicyException : AmazonSecretsManagerException {
    public PublicPolicyException(string message);
    public PublicPolicyException(string message, Exception innerException);
    public PublicPolicyException(Exception innerException);
    public PublicPolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PublicPolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SecretsManager.Model.PutResourcePolicyRequest : AmazonSecretsManagerRequest {
    private Nullable`1<bool> _blockPublicPolicy;
    private string _resourcePolicy;
    private string _secretId;
    public Nullable`1<bool> BlockPublicPolicy { get; public set; }
    [AWSPropertyAttribute]
public string ResourcePolicy { get; public set; }
    [AWSPropertyAttribute]
public string SecretId { get; public set; }
    public Nullable`1<bool> get_BlockPublicPolicy();
    public void set_BlockPublicPolicy(Nullable`1<bool> value);
    internal bool IsSetBlockPublicPolicy();
    public string get_ResourcePolicy();
    public void set_ResourcePolicy(string value);
    internal bool IsSetResourcePolicy();
    public string get_SecretId();
    public void set_SecretId(string value);
    internal bool IsSetSecretId();
}
public class Amazon.SecretsManager.Model.PutResourcePolicyResponse : AmazonWebServiceResponse {
    private string _arn;
    private string _name;
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SecretsManager.Model.PutSecretValueRequest : AmazonSecretsManagerRequest {
    private string _clientRequestToken;
    private string _rotationToken;
    private MemoryStream _secretBinary;
    private string _secretId;
    private string _secretString;
    private List`1<string> _versionStages;
    [AWSPropertyAttribute]
public string ClientRequestToken { get; public set; }
    [AWSPropertyAttribute]
public string RotationToken { get; public set; }
    [AWSPropertyAttribute]
public MemoryStream SecretBinary { get; public set; }
    [AWSPropertyAttribute]
public string SecretId { get; public set; }
    [AWSPropertyAttribute]
public string SecretString { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> VersionStages { get; public set; }
    public string get_ClientRequestToken();
    public void set_ClientRequestToken(string value);
    internal bool IsSetClientRequestToken();
    public string get_RotationToken();
    public void set_RotationToken(string value);
    internal bool IsSetRotationToken();
    public MemoryStream get_SecretBinary();
    public void set_SecretBinary(MemoryStream value);
    internal bool IsSetSecretBinary();
    public string get_SecretId();
    public void set_SecretId(string value);
    internal bool IsSetSecretId();
    public string get_SecretString();
    public void set_SecretString(string value);
    internal bool IsSetSecretString();
    public List`1<string> get_VersionStages();
    public void set_VersionStages(List`1<string> value);
    internal bool IsSetVersionStages();
}
public class Amazon.SecretsManager.Model.PutSecretValueResponse : AmazonWebServiceResponse {
    private string _arn;
    private string _name;
    private string _versionId;
    private List`1<string> _versionStages;
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string VersionId { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> VersionStages { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
    public List`1<string> get_VersionStages();
    public void set_VersionStages(List`1<string> value);
    internal bool IsSetVersionStages();
}
public class Amazon.SecretsManager.Model.RemoveRegionsFromReplicationRequest : AmazonSecretsManagerRequest {
    private List`1<string> _removeReplicaRegions;
    private string _secretId;
    [AWSPropertyAttribute]
public List`1<string> RemoveReplicaRegions { get; public set; }
    [AWSPropertyAttribute]
public string SecretId { get; public set; }
    public List`1<string> get_RemoveReplicaRegions();
    public void set_RemoveReplicaRegions(List`1<string> value);
    internal bool IsSetRemoveReplicaRegions();
    public string get_SecretId();
    public void set_SecretId(string value);
    internal bool IsSetSecretId();
}
public class Amazon.SecretsManager.Model.RemoveRegionsFromReplicationResponse : AmazonWebServiceResponse {
    private string _arn;
    private List`1<ReplicationStatusType> _replicationStatus;
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    public List`1<ReplicationStatusType> ReplicationStatus { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public List`1<ReplicationStatusType> get_ReplicationStatus();
    public void set_ReplicationStatus(List`1<ReplicationStatusType> value);
    internal bool IsSetReplicationStatus();
}
public class Amazon.SecretsManager.Model.ReplicaRegionType : object {
    private string _kmsKeyId;
    private string _region;
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    [AWSPropertyAttribute]
public string Region { get; public set; }
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_Region();
    public void set_Region(string value);
    internal bool IsSetRegion();
}
public class Amazon.SecretsManager.Model.ReplicateSecretToRegionsRequest : AmazonSecretsManagerRequest {
    private List`1<ReplicaRegionType> _addReplicaRegions;
    private Nullable`1<bool> _forceOverwriteReplicaSecret;
    private string _secretId;
    [AWSPropertyAttribute]
public List`1<ReplicaRegionType> AddReplicaRegions { get; public set; }
    public Nullable`1<bool> ForceOverwriteReplicaSecret { get; public set; }
    [AWSPropertyAttribute]
public string SecretId { get; public set; }
    public List`1<ReplicaRegionType> get_AddReplicaRegions();
    public void set_AddReplicaRegions(List`1<ReplicaRegionType> value);
    internal bool IsSetAddReplicaRegions();
    public Nullable`1<bool> get_ForceOverwriteReplicaSecret();
    public void set_ForceOverwriteReplicaSecret(Nullable`1<bool> value);
    internal bool IsSetForceOverwriteReplicaSecret();
    public string get_SecretId();
    public void set_SecretId(string value);
    internal bool IsSetSecretId();
}
public class Amazon.SecretsManager.Model.ReplicateSecretToRegionsResponse : AmazonWebServiceResponse {
    private string _arn;
    private List`1<ReplicationStatusType> _replicationStatus;
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    public List`1<ReplicationStatusType> ReplicationStatus { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public List`1<ReplicationStatusType> get_ReplicationStatus();
    public void set_ReplicationStatus(List`1<ReplicationStatusType> value);
    internal bool IsSetReplicationStatus();
}
public class Amazon.SecretsManager.Model.ReplicationStatusType : object {
    private string _kmsKeyId;
    private Nullable`1<DateTime> _lastAccessedDate;
    private string _region;
    private StatusType _status;
    private string _statusMessage;
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    public Nullable`1<DateTime> LastAccessedDate { get; public set; }
    [AWSPropertyAttribute]
public string Region { get; public set; }
    public StatusType Status { get; public set; }
    [AWSPropertyAttribute]
public string StatusMessage { get; public set; }
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<DateTime> get_LastAccessedDate();
    public void set_LastAccessedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastAccessedDate();
    public string get_Region();
    public void set_Region(string value);
    internal bool IsSetRegion();
    public StatusType get_Status();
    public void set_Status(StatusType value);
    internal bool IsSetStatus();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
}
public class Amazon.SecretsManager.Model.ResourceExistsException : AmazonSecretsManagerException {
    public ResourceExistsException(string message);
    public ResourceExistsException(string message, Exception innerException);
    public ResourceExistsException(Exception innerException);
    public ResourceExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SecretsManager.Model.ResourceNotFoundException : AmazonSecretsManagerException {
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SecretsManager.Model.RestoreSecretRequest : AmazonSecretsManagerRequest {
    private string _secretId;
    [AWSPropertyAttribute]
public string SecretId { get; public set; }
    public string get_SecretId();
    public void set_SecretId(string value);
    internal bool IsSetSecretId();
}
public class Amazon.SecretsManager.Model.RestoreSecretResponse : AmazonWebServiceResponse {
    private string _arn;
    private string _name;
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SecretsManager.Model.RotateSecretRequest : AmazonSecretsManagerRequest {
    private string _clientRequestToken;
    private Nullable`1<bool> _rotateImmediately;
    private string _rotationLambdaARN;
    private RotationRulesType _rotationRules;
    private string _secretId;
    [AWSPropertyAttribute]
public string ClientRequestToken { get; public set; }
    public Nullable`1<bool> RotateImmediately { get; public set; }
    [AWSPropertyAttribute]
public string RotationLambdaARN { get; public set; }
    public RotationRulesType RotationRules { get; public set; }
    [AWSPropertyAttribute]
public string SecretId { get; public set; }
    public string get_ClientRequestToken();
    public void set_ClientRequestToken(string value);
    internal bool IsSetClientRequestToken();
    public Nullable`1<bool> get_RotateImmediately();
    public void set_RotateImmediately(Nullable`1<bool> value);
    internal bool IsSetRotateImmediately();
    public string get_RotationLambdaARN();
    public void set_RotationLambdaARN(string value);
    internal bool IsSetRotationLambdaARN();
    public RotationRulesType get_RotationRules();
    public void set_RotationRules(RotationRulesType value);
    internal bool IsSetRotationRules();
    public string get_SecretId();
    public void set_SecretId(string value);
    internal bool IsSetSecretId();
}
public class Amazon.SecretsManager.Model.RotateSecretResponse : AmazonWebServiceResponse {
    private string _arn;
    private string _name;
    private string _versionId;
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string VersionId { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
}
public class Amazon.SecretsManager.Model.RotationRulesType : object {
    private Nullable`1<long> _automaticallyAfterDays;
    private string _duration;
    private string _scheduleExpression;
    [AWSPropertyAttribute]
public Nullable`1<long> AutomaticallyAfterDays { get; public set; }
    [AWSPropertyAttribute]
public string Duration { get; public set; }
    [AWSPropertyAttribute]
public string ScheduleExpression { get; public set; }
    public Nullable`1<long> get_AutomaticallyAfterDays();
    public void set_AutomaticallyAfterDays(Nullable`1<long> value);
    internal bool IsSetAutomaticallyAfterDays();
    public string get_Duration();
    public void set_Duration(string value);
    internal bool IsSetDuration();
    public string get_ScheduleExpression();
    public void set_ScheduleExpression(string value);
    internal bool IsSetScheduleExpression();
}
public class Amazon.SecretsManager.Model.SecretListEntry : object {
    private string _arn;
    private Nullable`1<DateTime> _createdDate;
    private Nullable`1<DateTime> _deletedDate;
    private string _description;
    private string _kmsKeyId;
    private Nullable`1<DateTime> _lastAccessedDate;
    private Nullable`1<DateTime> _lastChangedDate;
    private Nullable`1<DateTime> _lastRotatedDate;
    private string _name;
    private Nullable`1<DateTime> _nextRotationDate;
    private string _owningService;
    private string _primaryRegion;
    private Nullable`1<bool> _rotationEnabled;
    private string _rotationLambdaARN;
    private RotationRulesType _rotationRules;
    private Dictionary`2<string, List`1<string>> _secretVersionsToStages;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public Nullable`1<DateTime> DeletedDate { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    public Nullable`1<DateTime> LastAccessedDate { get; public set; }
    public Nullable`1<DateTime> LastChangedDate { get; public set; }
    public Nullable`1<DateTime> LastRotatedDate { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<DateTime> NextRotationDate { get; public set; }
    [AWSPropertyAttribute]
public string OwningService { get; public set; }
    [AWSPropertyAttribute]
public string PrimaryRegion { get; public set; }
    public Nullable`1<bool> RotationEnabled { get; public set; }
    [AWSPropertyAttribute]
public string RotationLambdaARN { get; public set; }
    public RotationRulesType RotationRules { get; public set; }
    public Dictionary`2<string, List`1<string>> SecretVersionsToStages { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public Nullable`1<DateTime> get_DeletedDate();
    public void set_DeletedDate(Nullable`1<DateTime> value);
    internal bool IsSetDeletedDate();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<DateTime> get_LastAccessedDate();
    public void set_LastAccessedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastAccessedDate();
    public Nullable`1<DateTime> get_LastChangedDate();
    public void set_LastChangedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastChangedDate();
    public Nullable`1<DateTime> get_LastRotatedDate();
    public void set_LastRotatedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastRotatedDate();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<DateTime> get_NextRotationDate();
    public void set_NextRotationDate(Nullable`1<DateTime> value);
    internal bool IsSetNextRotationDate();
    public string get_OwningService();
    public void set_OwningService(string value);
    internal bool IsSetOwningService();
    public string get_PrimaryRegion();
    public void set_PrimaryRegion(string value);
    internal bool IsSetPrimaryRegion();
    public Nullable`1<bool> get_RotationEnabled();
    public void set_RotationEnabled(Nullable`1<bool> value);
    internal bool IsSetRotationEnabled();
    public string get_RotationLambdaARN();
    public void set_RotationLambdaARN(string value);
    internal bool IsSetRotationLambdaARN();
    public RotationRulesType get_RotationRules();
    public void set_RotationRules(RotationRulesType value);
    internal bool IsSetRotationRules();
    public Dictionary`2<string, List`1<string>> get_SecretVersionsToStages();
    public void set_SecretVersionsToStages(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetSecretVersionsToStages();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.SecretsManager.Model.SecretsManagerPaginatorFactory : object {
    private IAmazonSecretsManager client;
    internal SecretsManagerPaginatorFactory(IAmazonSecretsManager client);
    public sealed virtual IBatchGetSecretValuePaginator BatchGetSecretValue(BatchGetSecretValueRequest request);
    public sealed virtual IListSecretsPaginator ListSecrets(ListSecretsRequest request);
    public sealed virtual IListSecretVersionIdsPaginator ListSecretVersionIds(ListSecretVersionIdsRequest request);
}
public class Amazon.SecretsManager.Model.SecretValueEntry : object {
    private string _arn;
    private Nullable`1<DateTime> _createdDate;
    private string _name;
    private MemoryStream _secretBinary;
    private string _secretString;
    private string _versionId;
    private List`1<string> _versionStages;
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public MemoryStream SecretBinary { get; public set; }
    [AWSPropertyAttribute]
public string SecretString { get; public set; }
    [AWSPropertyAttribute]
public string VersionId { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> VersionStages { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public MemoryStream get_SecretBinary();
    public void set_SecretBinary(MemoryStream value);
    internal bool IsSetSecretBinary();
    public string get_SecretString();
    public void set_SecretString(string value);
    internal bool IsSetSecretString();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
    public List`1<string> get_VersionStages();
    public void set_VersionStages(List`1<string> value);
    internal bool IsSetVersionStages();
}
public class Amazon.SecretsManager.Model.SecretVersionsListEntry : object {
    private Nullable`1<DateTime> _createdDate;
    private List`1<string> _kmsKeyIds;
    private Nullable`1<DateTime> _lastAccessedDate;
    private string _versionId;
    private List`1<string> _versionStages;
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public List`1<string> KmsKeyIds { get; public set; }
    public Nullable`1<DateTime> LastAccessedDate { get; public set; }
    [AWSPropertyAttribute]
public string VersionId { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> VersionStages { get; public set; }
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public List`1<string> get_KmsKeyIds();
    public void set_KmsKeyIds(List`1<string> value);
    internal bool IsSetKmsKeyIds();
    public Nullable`1<DateTime> get_LastAccessedDate();
    public void set_LastAccessedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastAccessedDate();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
    public List`1<string> get_VersionStages();
    public void set_VersionStages(List`1<string> value);
    internal bool IsSetVersionStages();
}
public class Amazon.SecretsManager.Model.StopReplicationToReplicaRequest : AmazonSecretsManagerRequest {
    private string _secretId;
    [AWSPropertyAttribute]
public string SecretId { get; public set; }
    public string get_SecretId();
    public void set_SecretId(string value);
    internal bool IsSetSecretId();
}
public class Amazon.SecretsManager.Model.StopReplicationToReplicaResponse : AmazonWebServiceResponse {
    private string _arn;
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
}
public class Amazon.SecretsManager.Model.Tag : object {
    private string _key;
    private string _value;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.SecretsManager.Model.TagResourceRequest : AmazonSecretsManagerRequest {
    private string _secretId;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string SecretId { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_SecretId();
    public void set_SecretId(string value);
    internal bool IsSetSecretId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.SecretsManager.Model.TagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.SecretsManager.Model.UntagResourceRequest : AmazonSecretsManagerRequest {
    private string _secretId;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string SecretId { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_SecretId();
    public void set_SecretId(string value);
    internal bool IsSetSecretId();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.SecretsManager.Model.UntagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.SecretsManager.Model.UpdateSecretRequest : AmazonSecretsManagerRequest {
    private string _clientRequestToken;
    private string _description;
    private string _kmsKeyId;
    private MemoryStream _secretBinary;
    private string _secretId;
    private string _secretString;
    [AWSPropertyAttribute]
public string ClientRequestToken { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    [AWSPropertyAttribute]
public MemoryStream SecretBinary { get; public set; }
    [AWSPropertyAttribute]
public string SecretId { get; public set; }
    [AWSPropertyAttribute]
public string SecretString { get; public set; }
    public string get_ClientRequestToken();
    public void set_ClientRequestToken(string value);
    internal bool IsSetClientRequestToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public MemoryStream get_SecretBinary();
    public void set_SecretBinary(MemoryStream value);
    internal bool IsSetSecretBinary();
    public string get_SecretId();
    public void set_SecretId(string value);
    internal bool IsSetSecretId();
    public string get_SecretString();
    public void set_SecretString(string value);
    internal bool IsSetSecretString();
}
public class Amazon.SecretsManager.Model.UpdateSecretResponse : AmazonWebServiceResponse {
    private string _arn;
    private string _name;
    private string _versionId;
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string VersionId { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
}
public class Amazon.SecretsManager.Model.UpdateSecretVersionStageRequest : AmazonSecretsManagerRequest {
    private string _moveToVersionId;
    private string _removeFromVersionId;
    private string _secretId;
    private string _versionStage;
    [AWSPropertyAttribute]
public string MoveToVersionId { get; public set; }
    [AWSPropertyAttribute]
public string RemoveFromVersionId { get; public set; }
    [AWSPropertyAttribute]
public string SecretId { get; public set; }
    [AWSPropertyAttribute]
public string VersionStage { get; public set; }
    public string get_MoveToVersionId();
    public void set_MoveToVersionId(string value);
    internal bool IsSetMoveToVersionId();
    public string get_RemoveFromVersionId();
    public void set_RemoveFromVersionId(string value);
    internal bool IsSetRemoveFromVersionId();
    public string get_SecretId();
    public void set_SecretId(string value);
    internal bool IsSetSecretId();
    public string get_VersionStage();
    public void set_VersionStage(string value);
    internal bool IsSetVersionStage();
}
public class Amazon.SecretsManager.Model.UpdateSecretVersionStageResponse : AmazonWebServiceResponse {
    private string _arn;
    private string _name;
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SecretsManager.Model.ValidateResourcePolicyRequest : AmazonSecretsManagerRequest {
    private string _resourcePolicy;
    private string _secretId;
    [AWSPropertyAttribute]
public string ResourcePolicy { get; public set; }
    [AWSPropertyAttribute]
public string SecretId { get; public set; }
    public string get_ResourcePolicy();
    public void set_ResourcePolicy(string value);
    internal bool IsSetResourcePolicy();
    public string get_SecretId();
    public void set_SecretId(string value);
    internal bool IsSetSecretId();
}
public class Amazon.SecretsManager.Model.ValidateResourcePolicyResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _policyValidationPassed;
    private List`1<ValidationErrorsEntry> _validationErrors;
    public Nullable`1<bool> PolicyValidationPassed { get; public set; }
    public List`1<ValidationErrorsEntry> ValidationErrors { get; public set; }
    public Nullable`1<bool> get_PolicyValidationPassed();
    public void set_PolicyValidationPassed(Nullable`1<bool> value);
    internal bool IsSetPolicyValidationPassed();
    public List`1<ValidationErrorsEntry> get_ValidationErrors();
    public void set_ValidationErrors(List`1<ValidationErrorsEntry> value);
    internal bool IsSetValidationErrors();
}
public class Amazon.SecretsManager.Model.ValidationErrorsEntry : object {
    private string _checkName;
    private string _errorMessage;
    [AWSPropertyAttribute]
public string CheckName { get; public set; }
    public string ErrorMessage { get; public set; }
    public string get_CheckName();
    public void set_CheckName(string value);
    internal bool IsSetCheckName();
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    internal bool IsSetErrorMessage();
}
public class Amazon.SecretsManager.SortOrderType : ConstantClass {
    public static SortOrderType Asc;
    public static SortOrderType Desc;
    public SortOrderType(string value);
    private static SortOrderType();
    public static SortOrderType FindValue(string value);
    public static SortOrderType op_Implicit(string value);
}
public class Amazon.SecretsManager.StatusType : ConstantClass {
    public static StatusType Failed;
    public static StatusType InProgress;
    public static StatusType InSync;
    public StatusType(string value);
    private static StatusType();
    public static StatusType FindValue(string value);
    public static StatusType op_Implicit(string value);
}
