public class Amazon.SimpleEmail.AmazonSimpleEmailServiceClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private ISimpleEmailPaginatorFactory _paginators;
    public ISimpleEmailPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonSimpleEmailServiceClient(RegionEndpoint region);
    public AmazonSimpleEmailServiceClient(AmazonSimpleEmailServiceConfig config);
    public AmazonSimpleEmailServiceClient(AWSCredentials credentials);
    public AmazonSimpleEmailServiceClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonSimpleEmailServiceClient(AWSCredentials credentials, AmazonSimpleEmailServiceConfig clientConfig);
    public AmazonSimpleEmailServiceClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonSimpleEmailServiceClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonSimpleEmailServiceClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonSimpleEmailServiceConfig clientConfig);
    public AmazonSimpleEmailServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonSimpleEmailServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonSimpleEmailServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonSimpleEmailServiceConfig clientConfig);
    private static AmazonSimpleEmailServiceClient();
    public sealed virtual ISimpleEmailPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual CloneReceiptRuleSetResponse CloneReceiptRuleSet(CloneReceiptRuleSetRequest request);
    public virtual Task`1<CloneReceiptRuleSetResponse> CloneReceiptRuleSetAsync(CloneReceiptRuleSetRequest request, CancellationToken cancellationToken);
    internal virtual CreateConfigurationSetResponse CreateConfigurationSet(CreateConfigurationSetRequest request);
    public virtual Task`1<CreateConfigurationSetResponse> CreateConfigurationSetAsync(CreateConfigurationSetRequest request, CancellationToken cancellationToken);
    internal virtual CreateConfigurationSetEventDestinationResponse CreateConfigurationSetEventDestination(CreateConfigurationSetEventDestinationRequest request);
    public virtual Task`1<CreateConfigurationSetEventDestinationResponse> CreateConfigurationSetEventDestinationAsync(CreateConfigurationSetEventDestinationRequest request, CancellationToken cancellationToken);
    internal virtual CreateConfigurationSetTrackingOptionsResponse CreateConfigurationSetTrackingOptions(CreateConfigurationSetTrackingOptionsRequest request);
    public virtual Task`1<CreateConfigurationSetTrackingOptionsResponse> CreateConfigurationSetTrackingOptionsAsync(CreateConfigurationSetTrackingOptionsRequest request, CancellationToken cancellationToken);
    internal virtual CreateCustomVerificationEmailTemplateResponse CreateCustomVerificationEmailTemplate(CreateCustomVerificationEmailTemplateRequest request);
    public virtual Task`1<CreateCustomVerificationEmailTemplateResponse> CreateCustomVerificationEmailTemplateAsync(CreateCustomVerificationEmailTemplateRequest request, CancellationToken cancellationToken);
    internal virtual CreateReceiptFilterResponse CreateReceiptFilter(CreateReceiptFilterRequest request);
    public virtual Task`1<CreateReceiptFilterResponse> CreateReceiptFilterAsync(CreateReceiptFilterRequest request, CancellationToken cancellationToken);
    internal virtual CreateReceiptRuleResponse CreateReceiptRule(CreateReceiptRuleRequest request);
    public virtual Task`1<CreateReceiptRuleResponse> CreateReceiptRuleAsync(CreateReceiptRuleRequest request, CancellationToken cancellationToken);
    internal virtual CreateReceiptRuleSetResponse CreateReceiptRuleSet(CreateReceiptRuleSetRequest request);
    public virtual Task`1<CreateReceiptRuleSetResponse> CreateReceiptRuleSetAsync(CreateReceiptRuleSetRequest request, CancellationToken cancellationToken);
    internal virtual CreateTemplateResponse CreateTemplate(CreateTemplateRequest request);
    public virtual Task`1<CreateTemplateResponse> CreateTemplateAsync(CreateTemplateRequest request, CancellationToken cancellationToken);
    internal virtual DeleteConfigurationSetResponse DeleteConfigurationSet(DeleteConfigurationSetRequest request);
    public virtual Task`1<DeleteConfigurationSetResponse> DeleteConfigurationSetAsync(DeleteConfigurationSetRequest request, CancellationToken cancellationToken);
    internal virtual DeleteConfigurationSetEventDestinationResponse DeleteConfigurationSetEventDestination(DeleteConfigurationSetEventDestinationRequest request);
    public virtual Task`1<DeleteConfigurationSetEventDestinationResponse> DeleteConfigurationSetEventDestinationAsync(DeleteConfigurationSetEventDestinationRequest request, CancellationToken cancellationToken);
    internal virtual DeleteConfigurationSetTrackingOptionsResponse DeleteConfigurationSetTrackingOptions(DeleteConfigurationSetTrackingOptionsRequest request);
    public virtual Task`1<DeleteConfigurationSetTrackingOptionsResponse> DeleteConfigurationSetTrackingOptionsAsync(DeleteConfigurationSetTrackingOptionsRequest request, CancellationToken cancellationToken);
    internal virtual DeleteCustomVerificationEmailTemplateResponse DeleteCustomVerificationEmailTemplate(DeleteCustomVerificationEmailTemplateRequest request);
    public virtual Task`1<DeleteCustomVerificationEmailTemplateResponse> DeleteCustomVerificationEmailTemplateAsync(DeleteCustomVerificationEmailTemplateRequest request, CancellationToken cancellationToken);
    internal virtual DeleteIdentityResponse DeleteIdentity(DeleteIdentityRequest request);
    public virtual Task`1<DeleteIdentityResponse> DeleteIdentityAsync(DeleteIdentityRequest request, CancellationToken cancellationToken);
    internal virtual DeleteIdentityPolicyResponse DeleteIdentityPolicy(DeleteIdentityPolicyRequest request);
    public virtual Task`1<DeleteIdentityPolicyResponse> DeleteIdentityPolicyAsync(DeleteIdentityPolicyRequest request, CancellationToken cancellationToken);
    internal virtual DeleteReceiptFilterResponse DeleteReceiptFilter(DeleteReceiptFilterRequest request);
    public virtual Task`1<DeleteReceiptFilterResponse> DeleteReceiptFilterAsync(DeleteReceiptFilterRequest request, CancellationToken cancellationToken);
    internal virtual DeleteReceiptRuleResponse DeleteReceiptRule(DeleteReceiptRuleRequest request);
    public virtual Task`1<DeleteReceiptRuleResponse> DeleteReceiptRuleAsync(DeleteReceiptRuleRequest request, CancellationToken cancellationToken);
    internal virtual DeleteReceiptRuleSetResponse DeleteReceiptRuleSet(DeleteReceiptRuleSetRequest request);
    public virtual Task`1<DeleteReceiptRuleSetResponse> DeleteReceiptRuleSetAsync(DeleteReceiptRuleSetRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTemplateResponse DeleteTemplate(DeleteTemplateRequest request);
    public virtual Task`1<DeleteTemplateResponse> DeleteTemplateAsync(DeleteTemplateRequest request, CancellationToken cancellationToken);
    internal virtual DeleteVerifiedEmailAddressResponse DeleteVerifiedEmailAddress(DeleteVerifiedEmailAddressRequest request);
    public virtual Task`1<DeleteVerifiedEmailAddressResponse> DeleteVerifiedEmailAddressAsync(DeleteVerifiedEmailAddressRequest request, CancellationToken cancellationToken);
    internal virtual DescribeActiveReceiptRuleSetResponse DescribeActiveReceiptRuleSet(DescribeActiveReceiptRuleSetRequest request);
    public virtual Task`1<DescribeActiveReceiptRuleSetResponse> DescribeActiveReceiptRuleSetAsync(DescribeActiveReceiptRuleSetRequest request, CancellationToken cancellationToken);
    internal virtual DescribeConfigurationSetResponse DescribeConfigurationSet(DescribeConfigurationSetRequest request);
    public virtual Task`1<DescribeConfigurationSetResponse> DescribeConfigurationSetAsync(DescribeConfigurationSetRequest request, CancellationToken cancellationToken);
    internal virtual DescribeReceiptRuleResponse DescribeReceiptRule(DescribeReceiptRuleRequest request);
    public virtual Task`1<DescribeReceiptRuleResponse> DescribeReceiptRuleAsync(DescribeReceiptRuleRequest request, CancellationToken cancellationToken);
    internal virtual DescribeReceiptRuleSetResponse DescribeReceiptRuleSet(DescribeReceiptRuleSetRequest request);
    public virtual Task`1<DescribeReceiptRuleSetResponse> DescribeReceiptRuleSetAsync(DescribeReceiptRuleSetRequest request, CancellationToken cancellationToken);
    internal virtual GetAccountSendingEnabledResponse GetAccountSendingEnabled(GetAccountSendingEnabledRequest request);
    public virtual Task`1<GetAccountSendingEnabledResponse> GetAccountSendingEnabledAsync(GetAccountSendingEnabledRequest request, CancellationToken cancellationToken);
    internal virtual GetCustomVerificationEmailTemplateResponse GetCustomVerificationEmailTemplate(GetCustomVerificationEmailTemplateRequest request);
    public virtual Task`1<GetCustomVerificationEmailTemplateResponse> GetCustomVerificationEmailTemplateAsync(GetCustomVerificationEmailTemplateRequest request, CancellationToken cancellationToken);
    internal virtual GetIdentityDkimAttributesResponse GetIdentityDkimAttributes(GetIdentityDkimAttributesRequest request);
    public virtual Task`1<GetIdentityDkimAttributesResponse> GetIdentityDkimAttributesAsync(GetIdentityDkimAttributesRequest request, CancellationToken cancellationToken);
    internal virtual GetIdentityMailFromDomainAttributesResponse GetIdentityMailFromDomainAttributes(GetIdentityMailFromDomainAttributesRequest request);
    public virtual Task`1<GetIdentityMailFromDomainAttributesResponse> GetIdentityMailFromDomainAttributesAsync(GetIdentityMailFromDomainAttributesRequest request, CancellationToken cancellationToken);
    internal virtual GetIdentityNotificationAttributesResponse GetIdentityNotificationAttributes(GetIdentityNotificationAttributesRequest request);
    public virtual Task`1<GetIdentityNotificationAttributesResponse> GetIdentityNotificationAttributesAsync(GetIdentityNotificationAttributesRequest request, CancellationToken cancellationToken);
    internal virtual GetIdentityPoliciesResponse GetIdentityPolicies(GetIdentityPoliciesRequest request);
    public virtual Task`1<GetIdentityPoliciesResponse> GetIdentityPoliciesAsync(GetIdentityPoliciesRequest request, CancellationToken cancellationToken);
    internal virtual GetIdentityVerificationAttributesResponse GetIdentityVerificationAttributes(GetIdentityVerificationAttributesRequest request);
    public virtual Task`1<GetIdentityVerificationAttributesResponse> GetIdentityVerificationAttributesAsync(GetIdentityVerificationAttributesRequest request, CancellationToken cancellationToken);
    internal virtual GetSendQuotaResponse GetSendQuota();
    internal virtual GetSendQuotaResponse GetSendQuota(GetSendQuotaRequest request);
    public virtual Task`1<GetSendQuotaResponse> GetSendQuotaAsync(CancellationToken cancellationToken);
    public virtual Task`1<GetSendQuotaResponse> GetSendQuotaAsync(GetSendQuotaRequest request, CancellationToken cancellationToken);
    internal virtual GetSendStatisticsResponse GetSendStatistics();
    internal virtual GetSendStatisticsResponse GetSendStatistics(GetSendStatisticsRequest request);
    public virtual Task`1<GetSendStatisticsResponse> GetSendStatisticsAsync(CancellationToken cancellationToken);
    public virtual Task`1<GetSendStatisticsResponse> GetSendStatisticsAsync(GetSendStatisticsRequest request, CancellationToken cancellationToken);
    internal virtual GetTemplateResponse GetTemplate(GetTemplateRequest request);
    public virtual Task`1<GetTemplateResponse> GetTemplateAsync(GetTemplateRequest request, CancellationToken cancellationToken);
    internal virtual ListConfigurationSetsResponse ListConfigurationSets(ListConfigurationSetsRequest request);
    public virtual Task`1<ListConfigurationSetsResponse> ListConfigurationSetsAsync(ListConfigurationSetsRequest request, CancellationToken cancellationToken);
    internal virtual ListCustomVerificationEmailTemplatesResponse ListCustomVerificationEmailTemplates(ListCustomVerificationEmailTemplatesRequest request);
    public virtual Task`1<ListCustomVerificationEmailTemplatesResponse> ListCustomVerificationEmailTemplatesAsync(ListCustomVerificationEmailTemplatesRequest request, CancellationToken cancellationToken);
    internal virtual ListIdentitiesResponse ListIdentities();
    internal virtual ListIdentitiesResponse ListIdentities(ListIdentitiesRequest request);
    public virtual Task`1<ListIdentitiesResponse> ListIdentitiesAsync(CancellationToken cancellationToken);
    public virtual Task`1<ListIdentitiesResponse> ListIdentitiesAsync(ListIdentitiesRequest request, CancellationToken cancellationToken);
    internal virtual ListIdentityPoliciesResponse ListIdentityPolicies(ListIdentityPoliciesRequest request);
    public virtual Task`1<ListIdentityPoliciesResponse> ListIdentityPoliciesAsync(ListIdentityPoliciesRequest request, CancellationToken cancellationToken);
    internal virtual ListReceiptFiltersResponse ListReceiptFilters(ListReceiptFiltersRequest request);
    public virtual Task`1<ListReceiptFiltersResponse> ListReceiptFiltersAsync(ListReceiptFiltersRequest request, CancellationToken cancellationToken);
    internal virtual ListReceiptRuleSetsResponse ListReceiptRuleSets(ListReceiptRuleSetsRequest request);
    public virtual Task`1<ListReceiptRuleSetsResponse> ListReceiptRuleSetsAsync(ListReceiptRuleSetsRequest request, CancellationToken cancellationToken);
    internal virtual ListTemplatesResponse ListTemplates(ListTemplatesRequest request);
    public virtual Task`1<ListTemplatesResponse> ListTemplatesAsync(ListTemplatesRequest request, CancellationToken cancellationToken);
    internal virtual ListVerifiedEmailAddressesResponse ListVerifiedEmailAddresses();
    internal virtual ListVerifiedEmailAddressesResponse ListVerifiedEmailAddresses(ListVerifiedEmailAddressesRequest request);
    public virtual Task`1<ListVerifiedEmailAddressesResponse> ListVerifiedEmailAddressesAsync(CancellationToken cancellationToken);
    public virtual Task`1<ListVerifiedEmailAddressesResponse> ListVerifiedEmailAddressesAsync(ListVerifiedEmailAddressesRequest request, CancellationToken cancellationToken);
    internal virtual PutConfigurationSetDeliveryOptionsResponse PutConfigurationSetDeliveryOptions(PutConfigurationSetDeliveryOptionsRequest request);
    public virtual Task`1<PutConfigurationSetDeliveryOptionsResponse> PutConfigurationSetDeliveryOptionsAsync(PutConfigurationSetDeliveryOptionsRequest request, CancellationToken cancellationToken);
    internal virtual PutIdentityPolicyResponse PutIdentityPolicy(PutIdentityPolicyRequest request);
    public virtual Task`1<PutIdentityPolicyResponse> PutIdentityPolicyAsync(PutIdentityPolicyRequest request, CancellationToken cancellationToken);
    internal virtual ReorderReceiptRuleSetResponse ReorderReceiptRuleSet(ReorderReceiptRuleSetRequest request);
    public virtual Task`1<ReorderReceiptRuleSetResponse> ReorderReceiptRuleSetAsync(ReorderReceiptRuleSetRequest request, CancellationToken cancellationToken);
    internal virtual SendBounceResponse SendBounce(SendBounceRequest request);
    public virtual Task`1<SendBounceResponse> SendBounceAsync(SendBounceRequest request, CancellationToken cancellationToken);
    internal virtual SendBulkTemplatedEmailResponse SendBulkTemplatedEmail(SendBulkTemplatedEmailRequest request);
    public virtual Task`1<SendBulkTemplatedEmailResponse> SendBulkTemplatedEmailAsync(SendBulkTemplatedEmailRequest request, CancellationToken cancellationToken);
    internal virtual SendCustomVerificationEmailResponse SendCustomVerificationEmail(SendCustomVerificationEmailRequest request);
    public virtual Task`1<SendCustomVerificationEmailResponse> SendCustomVerificationEmailAsync(SendCustomVerificationEmailRequest request, CancellationToken cancellationToken);
    internal virtual SendEmailResponse SendEmail(SendEmailRequest request);
    public virtual Task`1<SendEmailResponse> SendEmailAsync(SendEmailRequest request, CancellationToken cancellationToken);
    internal virtual SendRawEmailResponse SendRawEmail(SendRawEmailRequest request);
    public virtual Task`1<SendRawEmailResponse> SendRawEmailAsync(SendRawEmailRequest request, CancellationToken cancellationToken);
    internal virtual SendTemplatedEmailResponse SendTemplatedEmail(SendTemplatedEmailRequest request);
    public virtual Task`1<SendTemplatedEmailResponse> SendTemplatedEmailAsync(SendTemplatedEmailRequest request, CancellationToken cancellationToken);
    internal virtual SetActiveReceiptRuleSetResponse SetActiveReceiptRuleSet(SetActiveReceiptRuleSetRequest request);
    public virtual Task`1<SetActiveReceiptRuleSetResponse> SetActiveReceiptRuleSetAsync(SetActiveReceiptRuleSetRequest request, CancellationToken cancellationToken);
    internal virtual SetIdentityDkimEnabledResponse SetIdentityDkimEnabled(SetIdentityDkimEnabledRequest request);
    public virtual Task`1<SetIdentityDkimEnabledResponse> SetIdentityDkimEnabledAsync(SetIdentityDkimEnabledRequest request, CancellationToken cancellationToken);
    internal virtual SetIdentityFeedbackForwardingEnabledResponse SetIdentityFeedbackForwardingEnabled(SetIdentityFeedbackForwardingEnabledRequest request);
    public virtual Task`1<SetIdentityFeedbackForwardingEnabledResponse> SetIdentityFeedbackForwardingEnabledAsync(SetIdentityFeedbackForwardingEnabledRequest request, CancellationToken cancellationToken);
    internal virtual SetIdentityHeadersInNotificationsEnabledResponse SetIdentityHeadersInNotificationsEnabled(SetIdentityHeadersInNotificationsEnabledRequest request);
    public virtual Task`1<SetIdentityHeadersInNotificationsEnabledResponse> SetIdentityHeadersInNotificationsEnabledAsync(SetIdentityHeadersInNotificationsEnabledRequest request, CancellationToken cancellationToken);
    internal virtual SetIdentityMailFromDomainResponse SetIdentityMailFromDomain(SetIdentityMailFromDomainRequest request);
    public virtual Task`1<SetIdentityMailFromDomainResponse> SetIdentityMailFromDomainAsync(SetIdentityMailFromDomainRequest request, CancellationToken cancellationToken);
    internal virtual SetIdentityNotificationTopicResponse SetIdentityNotificationTopic(SetIdentityNotificationTopicRequest request);
    public virtual Task`1<SetIdentityNotificationTopicResponse> SetIdentityNotificationTopicAsync(SetIdentityNotificationTopicRequest request, CancellationToken cancellationToken);
    internal virtual SetReceiptRulePositionResponse SetReceiptRulePosition(SetReceiptRulePositionRequest request);
    public virtual Task`1<SetReceiptRulePositionResponse> SetReceiptRulePositionAsync(SetReceiptRulePositionRequest request, CancellationToken cancellationToken);
    internal virtual TestRenderTemplateResponse TestRenderTemplate(TestRenderTemplateRequest request);
    public virtual Task`1<TestRenderTemplateResponse> TestRenderTemplateAsync(TestRenderTemplateRequest request, CancellationToken cancellationToken);
    internal virtual UpdateAccountSendingEnabledResponse UpdateAccountSendingEnabled(UpdateAccountSendingEnabledRequest request);
    public virtual Task`1<UpdateAccountSendingEnabledResponse> UpdateAccountSendingEnabledAsync(UpdateAccountSendingEnabledRequest request, CancellationToken cancellationToken);
    internal virtual UpdateConfigurationSetEventDestinationResponse UpdateConfigurationSetEventDestination(UpdateConfigurationSetEventDestinationRequest request);
    public virtual Task`1<UpdateConfigurationSetEventDestinationResponse> UpdateConfigurationSetEventDestinationAsync(UpdateConfigurationSetEventDestinationRequest request, CancellationToken cancellationToken);
    internal virtual UpdateConfigurationSetReputationMetricsEnabledResponse UpdateConfigurationSetReputationMetricsEnabled(UpdateConfigurationSetReputationMetricsEnabledRequest request);
    public virtual Task`1<UpdateConfigurationSetReputationMetricsEnabledResponse> UpdateConfigurationSetReputationMetricsEnabledAsync(UpdateConfigurationSetReputationMetricsEnabledRequest request, CancellationToken cancellationToken);
    internal virtual UpdateConfigurationSetSendingEnabledResponse UpdateConfigurationSetSendingEnabled(UpdateConfigurationSetSendingEnabledRequest request);
    public virtual Task`1<UpdateConfigurationSetSendingEnabledResponse> UpdateConfigurationSetSendingEnabledAsync(UpdateConfigurationSetSendingEnabledRequest request, CancellationToken cancellationToken);
    internal virtual UpdateConfigurationSetTrackingOptionsResponse UpdateConfigurationSetTrackingOptions(UpdateConfigurationSetTrackingOptionsRequest request);
    public virtual Task`1<UpdateConfigurationSetTrackingOptionsResponse> UpdateConfigurationSetTrackingOptionsAsync(UpdateConfigurationSetTrackingOptionsRequest request, CancellationToken cancellationToken);
    internal virtual UpdateCustomVerificationEmailTemplateResponse UpdateCustomVerificationEmailTemplate(UpdateCustomVerificationEmailTemplateRequest request);
    public virtual Task`1<UpdateCustomVerificationEmailTemplateResponse> UpdateCustomVerificationEmailTemplateAsync(UpdateCustomVerificationEmailTemplateRequest request, CancellationToken cancellationToken);
    internal virtual UpdateReceiptRuleResponse UpdateReceiptRule(UpdateReceiptRuleRequest request);
    public virtual Task`1<UpdateReceiptRuleResponse> UpdateReceiptRuleAsync(UpdateReceiptRuleRequest request, CancellationToken cancellationToken);
    internal virtual UpdateTemplateResponse UpdateTemplate(UpdateTemplateRequest request);
    public virtual Task`1<UpdateTemplateResponse> UpdateTemplateAsync(UpdateTemplateRequest request, CancellationToken cancellationToken);
    internal virtual VerifyDomainDkimResponse VerifyDomainDkim(VerifyDomainDkimRequest request);
    public virtual Task`1<VerifyDomainDkimResponse> VerifyDomainDkimAsync(VerifyDomainDkimRequest request, CancellationToken cancellationToken);
    internal virtual VerifyDomainIdentityResponse VerifyDomainIdentity(VerifyDomainIdentityRequest request);
    public virtual Task`1<VerifyDomainIdentityResponse> VerifyDomainIdentityAsync(VerifyDomainIdentityRequest request, CancellationToken cancellationToken);
    internal virtual VerifyEmailAddressResponse VerifyEmailAddress(VerifyEmailAddressRequest request);
    public virtual Task`1<VerifyEmailAddressResponse> VerifyEmailAddressAsync(VerifyEmailAddressRequest request, CancellationToken cancellationToken);
    internal virtual VerifyEmailIdentityResponse VerifyEmailIdentity(VerifyEmailIdentityRequest request);
    public virtual Task`1<VerifyEmailIdentityResponse> VerifyEmailIdentityAsync(VerifyEmailIdentityRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.SimpleEmail.AmazonSimpleEmailServiceConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonSimpleEmailServiceEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonSimpleEmailServiceConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.SimpleEmail.AmazonSimpleEmailServiceDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonSimpleEmailServiceDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.SimpleEmail.AmazonSimpleEmailServiceException : AmazonServiceException {
    public AmazonSimpleEmailServiceException(string message);
    public AmazonSimpleEmailServiceException(string message, Exception innerException);
    public AmazonSimpleEmailServiceException(Exception innerException);
    public AmazonSimpleEmailServiceException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonSimpleEmailServiceException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleEmail.AmazonSimpleEmailServiceRequest : AmazonWebServiceRequest {
}
public class Amazon.SimpleEmail.BehaviorOnMXFailure : ConstantClass {
    public static BehaviorOnMXFailure RejectMessage;
    public static BehaviorOnMXFailure UseDefaultValue;
    public BehaviorOnMXFailure(string value);
    private static BehaviorOnMXFailure();
    public static BehaviorOnMXFailure FindValue(string value);
    public static BehaviorOnMXFailure op_Implicit(string value);
}
public class Amazon.SimpleEmail.BounceType : ConstantClass {
    public static BounceType ContentRejected;
    public static BounceType DoesNotExist;
    public static BounceType ExceededQuota;
    public static BounceType MessageTooLarge;
    public static BounceType TemporaryFailure;
    public static BounceType Undefined;
    public BounceType(string value);
    private static BounceType();
    public static BounceType FindValue(string value);
    public static BounceType op_Implicit(string value);
}
public class Amazon.SimpleEmail.BulkEmailStatus : ConstantClass {
    public static BulkEmailStatus AccountDailyQuotaExceeded;
    public static BulkEmailStatus AccountSendingPaused;
    public static BulkEmailStatus AccountSuspended;
    public static BulkEmailStatus AccountThrottled;
    public static BulkEmailStatus ConfigurationSetDoesNotExist;
    public static BulkEmailStatus ConfigurationSetSendingPaused;
    public static BulkEmailStatus Failed;
    public static BulkEmailStatus InvalidParameterValue;
    public static BulkEmailStatus InvalidSendingPoolName;
    public static BulkEmailStatus MailFromDomainNotVerified;
    public static BulkEmailStatus MessageRejected;
    public static BulkEmailStatus Success;
    public static BulkEmailStatus TemplateDoesNotExist;
    public static BulkEmailStatus TransientFailure;
    public BulkEmailStatus(string value);
    private static BulkEmailStatus();
    public static BulkEmailStatus FindValue(string value);
    public static BulkEmailStatus op_Implicit(string value);
}
public class Amazon.SimpleEmail.ConfigurationSetAttribute : ConstantClass {
    public static ConfigurationSetAttribute DeliveryOptions;
    public static ConfigurationSetAttribute EventDestinations;
    public static ConfigurationSetAttribute ReputationOptions;
    public static ConfigurationSetAttribute TrackingOptions;
    public ConfigurationSetAttribute(string value);
    private static ConfigurationSetAttribute();
    public static ConfigurationSetAttribute FindValue(string value);
    public static ConfigurationSetAttribute op_Implicit(string value);
}
public class Amazon.SimpleEmail.CustomMailFromStatus : ConstantClass {
    public static CustomMailFromStatus Failed;
    public static CustomMailFromStatus Pending;
    public static CustomMailFromStatus Success;
    public static CustomMailFromStatus TemporaryFailure;
    public CustomMailFromStatus(string value);
    private static CustomMailFromStatus();
    public static CustomMailFromStatus FindValue(string value);
    public static CustomMailFromStatus op_Implicit(string value);
}
public class Amazon.SimpleEmail.DimensionValueSource : ConstantClass {
    public static DimensionValueSource EmailHeader;
    public static DimensionValueSource LinkTag;
    public static DimensionValueSource MessageTag;
    public DimensionValueSource(string value);
    private static DimensionValueSource();
    public static DimensionValueSource FindValue(string value);
    public static DimensionValueSource op_Implicit(string value);
}
public class Amazon.SimpleEmail.DsnAction : ConstantClass {
    public static DsnAction Delayed;
    public static DsnAction Delivered;
    public static DsnAction Expanded;
    public static DsnAction Failed;
    public static DsnAction Relayed;
    public DsnAction(string value);
    private static DsnAction();
    public static DsnAction FindValue(string value);
    public static DsnAction op_Implicit(string value);
}
public class Amazon.SimpleEmail.Endpoints.SimpleEmailServiceEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.SimpleEmail.EventType : ConstantClass {
    public static EventType Bounce;
    public static EventType Click;
    public static EventType Complaint;
    public static EventType Delivery;
    public static EventType Open;
    public static EventType Reject;
    public static EventType RenderingFailure;
    public static EventType Send;
    public EventType(string value);
    private static EventType();
    public static EventType FindValue(string value);
    public static EventType op_Implicit(string value);
}
public interface Amazon.SimpleEmail.IAmazonSimpleEmailService {
    public ISimpleEmailPaginatorFactory Paginators { get; }
    public abstract virtual ISimpleEmailPaginatorFactory get_Paginators();
    public abstract virtual Task`1<CloneReceiptRuleSetResponse> CloneReceiptRuleSetAsync(CloneReceiptRuleSetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateConfigurationSetResponse> CreateConfigurationSetAsync(CreateConfigurationSetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateConfigurationSetEventDestinationResponse> CreateConfigurationSetEventDestinationAsync(CreateConfigurationSetEventDestinationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateConfigurationSetTrackingOptionsResponse> CreateConfigurationSetTrackingOptionsAsync(CreateConfigurationSetTrackingOptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateCustomVerificationEmailTemplateResponse> CreateCustomVerificationEmailTemplateAsync(CreateCustomVerificationEmailTemplateRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateReceiptFilterResponse> CreateReceiptFilterAsync(CreateReceiptFilterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateReceiptRuleResponse> CreateReceiptRuleAsync(CreateReceiptRuleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateReceiptRuleSetResponse> CreateReceiptRuleSetAsync(CreateReceiptRuleSetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTemplateResponse> CreateTemplateAsync(CreateTemplateRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteConfigurationSetResponse> DeleteConfigurationSetAsync(DeleteConfigurationSetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteConfigurationSetEventDestinationResponse> DeleteConfigurationSetEventDestinationAsync(DeleteConfigurationSetEventDestinationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteConfigurationSetTrackingOptionsResponse> DeleteConfigurationSetTrackingOptionsAsync(DeleteConfigurationSetTrackingOptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteCustomVerificationEmailTemplateResponse> DeleteCustomVerificationEmailTemplateAsync(DeleteCustomVerificationEmailTemplateRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteIdentityResponse> DeleteIdentityAsync(DeleteIdentityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteIdentityPolicyResponse> DeleteIdentityPolicyAsync(DeleteIdentityPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteReceiptFilterResponse> DeleteReceiptFilterAsync(DeleteReceiptFilterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteReceiptRuleResponse> DeleteReceiptRuleAsync(DeleteReceiptRuleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteReceiptRuleSetResponse> DeleteReceiptRuleSetAsync(DeleteReceiptRuleSetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTemplateResponse> DeleteTemplateAsync(DeleteTemplateRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVerifiedEmailAddressResponse> DeleteVerifiedEmailAddressAsync(DeleteVerifiedEmailAddressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeActiveReceiptRuleSetResponse> DescribeActiveReceiptRuleSetAsync(DescribeActiveReceiptRuleSetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeConfigurationSetResponse> DescribeConfigurationSetAsync(DescribeConfigurationSetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReceiptRuleResponse> DescribeReceiptRuleAsync(DescribeReceiptRuleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReceiptRuleSetResponse> DescribeReceiptRuleSetAsync(DescribeReceiptRuleSetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAccountSendingEnabledResponse> GetAccountSendingEnabledAsync(GetAccountSendingEnabledRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCustomVerificationEmailTemplateResponse> GetCustomVerificationEmailTemplateAsync(GetCustomVerificationEmailTemplateRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetIdentityDkimAttributesResponse> GetIdentityDkimAttributesAsync(GetIdentityDkimAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetIdentityMailFromDomainAttributesResponse> GetIdentityMailFromDomainAttributesAsync(GetIdentityMailFromDomainAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetIdentityNotificationAttributesResponse> GetIdentityNotificationAttributesAsync(GetIdentityNotificationAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetIdentityPoliciesResponse> GetIdentityPoliciesAsync(GetIdentityPoliciesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetIdentityVerificationAttributesResponse> GetIdentityVerificationAttributesAsync(GetIdentityVerificationAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetSendQuotaResponse> GetSendQuotaAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<GetSendQuotaResponse> GetSendQuotaAsync(GetSendQuotaRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetSendStatisticsResponse> GetSendStatisticsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<GetSendStatisticsResponse> GetSendStatisticsAsync(GetSendStatisticsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetTemplateResponse> GetTemplateAsync(GetTemplateRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListConfigurationSetsResponse> ListConfigurationSetsAsync(ListConfigurationSetsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListCustomVerificationEmailTemplatesResponse> ListCustomVerificationEmailTemplatesAsync(ListCustomVerificationEmailTemplatesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListIdentitiesResponse> ListIdentitiesAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<ListIdentitiesResponse> ListIdentitiesAsync(ListIdentitiesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListIdentityPoliciesResponse> ListIdentityPoliciesAsync(ListIdentityPoliciesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListReceiptFiltersResponse> ListReceiptFiltersAsync(ListReceiptFiltersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListReceiptRuleSetsResponse> ListReceiptRuleSetsAsync(ListReceiptRuleSetsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTemplatesResponse> ListTemplatesAsync(ListTemplatesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListVerifiedEmailAddressesResponse> ListVerifiedEmailAddressesAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<ListVerifiedEmailAddressesResponse> ListVerifiedEmailAddressesAsync(ListVerifiedEmailAddressesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutConfigurationSetDeliveryOptionsResponse> PutConfigurationSetDeliveryOptionsAsync(PutConfigurationSetDeliveryOptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutIdentityPolicyResponse> PutIdentityPolicyAsync(PutIdentityPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReorderReceiptRuleSetResponse> ReorderReceiptRuleSetAsync(ReorderReceiptRuleSetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SendBounceResponse> SendBounceAsync(SendBounceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SendBulkTemplatedEmailResponse> SendBulkTemplatedEmailAsync(SendBulkTemplatedEmailRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SendCustomVerificationEmailResponse> SendCustomVerificationEmailAsync(SendCustomVerificationEmailRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SendEmailResponse> SendEmailAsync(SendEmailRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SendRawEmailResponse> SendRawEmailAsync(SendRawEmailRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SendTemplatedEmailResponse> SendTemplatedEmailAsync(SendTemplatedEmailRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetActiveReceiptRuleSetResponse> SetActiveReceiptRuleSetAsync(SetActiveReceiptRuleSetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetIdentityDkimEnabledResponse> SetIdentityDkimEnabledAsync(SetIdentityDkimEnabledRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetIdentityFeedbackForwardingEnabledResponse> SetIdentityFeedbackForwardingEnabledAsync(SetIdentityFeedbackForwardingEnabledRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetIdentityHeadersInNotificationsEnabledResponse> SetIdentityHeadersInNotificationsEnabledAsync(SetIdentityHeadersInNotificationsEnabledRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetIdentityMailFromDomainResponse> SetIdentityMailFromDomainAsync(SetIdentityMailFromDomainRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetIdentityNotificationTopicResponse> SetIdentityNotificationTopicAsync(SetIdentityNotificationTopicRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetReceiptRulePositionResponse> SetReceiptRulePositionAsync(SetReceiptRulePositionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TestRenderTemplateResponse> TestRenderTemplateAsync(TestRenderTemplateRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateAccountSendingEnabledResponse> UpdateAccountSendingEnabledAsync(UpdateAccountSendingEnabledRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateConfigurationSetEventDestinationResponse> UpdateConfigurationSetEventDestinationAsync(UpdateConfigurationSetEventDestinationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateConfigurationSetReputationMetricsEnabledResponse> UpdateConfigurationSetReputationMetricsEnabledAsync(UpdateConfigurationSetReputationMetricsEnabledRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateConfigurationSetSendingEnabledResponse> UpdateConfigurationSetSendingEnabledAsync(UpdateConfigurationSetSendingEnabledRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateConfigurationSetTrackingOptionsResponse> UpdateConfigurationSetTrackingOptionsAsync(UpdateConfigurationSetTrackingOptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateCustomVerificationEmailTemplateResponse> UpdateCustomVerificationEmailTemplateAsync(UpdateCustomVerificationEmailTemplateRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateReceiptRuleResponse> UpdateReceiptRuleAsync(UpdateReceiptRuleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateTemplateResponse> UpdateTemplateAsync(UpdateTemplateRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<VerifyDomainDkimResponse> VerifyDomainDkimAsync(VerifyDomainDkimRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<VerifyDomainIdentityResponse> VerifyDomainIdentityAsync(VerifyDomainIdentityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<VerifyEmailAddressResponse> VerifyEmailAddressAsync(VerifyEmailAddressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<VerifyEmailIdentityResponse> VerifyEmailIdentityAsync(VerifyEmailIdentityRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    [DynamicDependencyAttribute("512", "Amazon.SimpleEmail.AmazonSimpleEmailServiceConfig")]
private static override ClientConfig Amazon.Runtime.IAmazonService.CreateDefaultClientConfig();
    [UnconditionalSuppressMessageAttribute("AssemblyLoadTrimming", "IL2026:RequiresUnreferencedCode")]
private static override IAmazonService Amazon.Runtime.IAmazonService.CreateDefaultServiceClient(AWSCredentials awsCredentials, ClientConfig clientConfig);
}
public class Amazon.SimpleEmail.IdentityType : ConstantClass {
    public static IdentityType Domain;
    public static IdentityType EmailAddress;
    public IdentityType(string value);
    private static IdentityType();
    public static IdentityType FindValue(string value);
    public static IdentityType op_Implicit(string value);
}
public class Amazon.SimpleEmail.Internal.AmazonSimpleEmailServiceEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.SimpleEmail.Internal.AmazonSimpleEmailServiceEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.SimpleEmail.Internal.AmazonSimpleEmailServiceMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.SimpleEmail.InvocationType : ConstantClass {
    public static InvocationType Event;
    public static InvocationType RequestResponse;
    public InvocationType(string value);
    private static InvocationType();
    public static InvocationType FindValue(string value);
    public static InvocationType op_Implicit(string value);
}
public class Amazon.SimpleEmail.Model.AccountSendingPausedException : AmazonSimpleEmailServiceException {
    public AccountSendingPausedException(string message);
    public AccountSendingPausedException(string message, Exception innerException);
    public AccountSendingPausedException(Exception innerException);
    public AccountSendingPausedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccountSendingPausedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleEmail.Model.AddHeaderAction : object {
    private string _headerName;
    private string _headerValue;
    [AWSPropertyAttribute]
public string HeaderName { get; public set; }
    [AWSPropertyAttribute]
public string HeaderValue { get; public set; }
    public string get_HeaderName();
    public void set_HeaderName(string value);
    internal bool IsSetHeaderName();
    public string get_HeaderValue();
    public void set_HeaderValue(string value);
    internal bool IsSetHeaderValue();
}
public class Amazon.SimpleEmail.Model.AlreadyExistsException : AmazonSimpleEmailServiceException {
    private string _name;
    public string Name { get; public set; }
    public AlreadyExistsException(string message);
    public AlreadyExistsException(string message, Exception innerException);
    public AlreadyExistsException(Exception innerException);
    public AlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleEmail.Model.Body : object {
    private Content _html;
    private Content _text;
    public Content Html { get; public set; }
    public Content Text { get; public set; }
    public Body(Content text);
    public Content get_Html();
    public void set_Html(Content value);
    internal bool IsSetHtml();
    public Content get_Text();
    public void set_Text(Content value);
    internal bool IsSetText();
}
public class Amazon.SimpleEmail.Model.BounceAction : object {
    private string _message;
    private string _sender;
    private string _smtpReplyCode;
    private string _statusCode;
    private string _topicArn;
    [AWSPropertyAttribute]
public string Message { get; public set; }
    [AWSPropertyAttribute]
public string Sender { get; public set; }
    [AWSPropertyAttribute]
public string SmtpReplyCode { get; public set; }
    public string StatusCode { get; public set; }
    public string TopicArn { get; public set; }
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public string get_Sender();
    public void set_Sender(string value);
    internal bool IsSetSender();
    public string get_SmtpReplyCode();
    public void set_SmtpReplyCode(string value);
    internal bool IsSetSmtpReplyCode();
    public string get_StatusCode();
    public void set_StatusCode(string value);
    internal bool IsSetStatusCode();
    public string get_TopicArn();
    public void set_TopicArn(string value);
    internal bool IsSetTopicArn();
}
public class Amazon.SimpleEmail.Model.BouncedRecipientInfo : object {
    private BounceType _bounceType;
    private string _recipient;
    private string _recipientArn;
    private RecipientDsnFields _recipientDsnFields;
    public BounceType BounceType { get; public set; }
    [AWSPropertyAttribute]
public string Recipient { get; public set; }
    public string RecipientArn { get; public set; }
    public RecipientDsnFields RecipientDsnFields { get; public set; }
    public BounceType get_BounceType();
    public void set_BounceType(BounceType value);
    internal bool IsSetBounceType();
    public string get_Recipient();
    public void set_Recipient(string value);
    internal bool IsSetRecipient();
    public string get_RecipientArn();
    public void set_RecipientArn(string value);
    internal bool IsSetRecipientArn();
    public RecipientDsnFields get_RecipientDsnFields();
    public void set_RecipientDsnFields(RecipientDsnFields value);
    internal bool IsSetRecipientDsnFields();
}
public class Amazon.SimpleEmail.Model.BulkEmailDestination : object {
    private Destination _destination;
    private List`1<MessageTag> _replacementTags;
    private string _replacementTemplateData;
    [AWSPropertyAttribute]
public Destination Destination { get; public set; }
    public List`1<MessageTag> ReplacementTags { get; public set; }
    [AWSPropertyAttribute]
public string ReplacementTemplateData { get; public set; }
    public Destination get_Destination();
    public void set_Destination(Destination value);
    internal bool IsSetDestination();
    public List`1<MessageTag> get_ReplacementTags();
    public void set_ReplacementTags(List`1<MessageTag> value);
    internal bool IsSetReplacementTags();
    public string get_ReplacementTemplateData();
    public void set_ReplacementTemplateData(string value);
    internal bool IsSetReplacementTemplateData();
}
public class Amazon.SimpleEmail.Model.BulkEmailDestinationStatus : object {
    private string _error;
    private string _messageId;
    private BulkEmailStatus _status;
    public string Error { get; public set; }
    public string MessageId { get; public set; }
    public BulkEmailStatus Status { get; public set; }
    public string get_Error();
    public void set_Error(string value);
    internal bool IsSetError();
    public string get_MessageId();
    public void set_MessageId(string value);
    internal bool IsSetMessageId();
    public BulkEmailStatus get_Status();
    public void set_Status(BulkEmailStatus value);
    internal bool IsSetStatus();
}
public class Amazon.SimpleEmail.Model.CannotDeleteException : AmazonSimpleEmailServiceException {
    private string _name;
    public string Name { get; public set; }
    public CannotDeleteException(string message);
    public CannotDeleteException(string message, Exception innerException);
    public CannotDeleteException(Exception innerException);
    public CannotDeleteException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CannotDeleteException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleEmail.Model.CloneReceiptRuleSetRequest : AmazonSimpleEmailServiceRequest {
    private string _originalRuleSetName;
    private string _ruleSetName;
    [AWSPropertyAttribute]
public string OriginalRuleSetName { get; public set; }
    [AWSPropertyAttribute]
public string RuleSetName { get; public set; }
    public string get_OriginalRuleSetName();
    public void set_OriginalRuleSetName(string value);
    internal bool IsSetOriginalRuleSetName();
    public string get_RuleSetName();
    public void set_RuleSetName(string value);
    internal bool IsSetRuleSetName();
}
public class Amazon.SimpleEmail.Model.CloneReceiptRuleSetResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.CloudWatchDestination : object {
    private List`1<CloudWatchDimensionConfiguration> _dimensionConfigurations;
    [AWSPropertyAttribute]
public List`1<CloudWatchDimensionConfiguration> DimensionConfigurations { get; public set; }
    public List`1<CloudWatchDimensionConfiguration> get_DimensionConfigurations();
    public void set_DimensionConfigurations(List`1<CloudWatchDimensionConfiguration> value);
    internal bool IsSetDimensionConfigurations();
}
public class Amazon.SimpleEmail.Model.CloudWatchDimensionConfiguration : object {
    private string _defaultDimensionValue;
    private string _dimensionName;
    private DimensionValueSource _dimensionValueSource;
    [AWSPropertyAttribute]
public string DefaultDimensionValue { get; public set; }
    [AWSPropertyAttribute]
public string DimensionName { get; public set; }
    [AWSPropertyAttribute]
public DimensionValueSource DimensionValueSource { get; public set; }
    public string get_DefaultDimensionValue();
    public void set_DefaultDimensionValue(string value);
    internal bool IsSetDefaultDimensionValue();
    public string get_DimensionName();
    public void set_DimensionName(string value);
    internal bool IsSetDimensionName();
    public DimensionValueSource get_DimensionValueSource();
    public void set_DimensionValueSource(DimensionValueSource value);
    internal bool IsSetDimensionValueSource();
}
public class Amazon.SimpleEmail.Model.ConfigurationSet : object {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleEmail.Model.ConfigurationSetAlreadyExistsException : AmazonSimpleEmailServiceException {
    private string _configurationSetName;
    public string ConfigurationSetName { get; public set; }
    public ConfigurationSetAlreadyExistsException(string message);
    public ConfigurationSetAlreadyExistsException(string message, Exception innerException);
    public ConfigurationSetAlreadyExistsException(Exception innerException);
    public ConfigurationSetAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConfigurationSetAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
}
public class Amazon.SimpleEmail.Model.ConfigurationSetDoesNotExistException : AmazonSimpleEmailServiceException {
    private string _configurationSetName;
    public string ConfigurationSetName { get; public set; }
    public ConfigurationSetDoesNotExistException(string message);
    public ConfigurationSetDoesNotExistException(string message, Exception innerException);
    public ConfigurationSetDoesNotExistException(Exception innerException);
    public ConfigurationSetDoesNotExistException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConfigurationSetDoesNotExistException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
}
public class Amazon.SimpleEmail.Model.ConfigurationSetSendingPausedException : AmazonSimpleEmailServiceException {
    private string _configurationSetName;
    public string ConfigurationSetName { get; public set; }
    public ConfigurationSetSendingPausedException(string message);
    public ConfigurationSetSendingPausedException(string message, Exception innerException);
    public ConfigurationSetSendingPausedException(Exception innerException);
    public ConfigurationSetSendingPausedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConfigurationSetSendingPausedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
}
public class Amazon.SimpleEmail.Model.Content : object {
    private string _charset;
    private string _data;
    public string Charset { get; public set; }
    [AWSPropertyAttribute]
public string Data { get; public set; }
    public Content(string data);
    public string get_Charset();
    public void set_Charset(string value);
    internal bool IsSetCharset();
    public string get_Data();
    public void set_Data(string value);
    internal bool IsSetData();
}
public class Amazon.SimpleEmail.Model.CreateConfigurationSetEventDestinationRequest : AmazonSimpleEmailServiceRequest {
    private string _configurationSetName;
    private EventDestination _eventDestination;
    [AWSPropertyAttribute]
public string ConfigurationSetName { get; public set; }
    [AWSPropertyAttribute]
public EventDestination EventDestination { get; public set; }
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
    public EventDestination get_EventDestination();
    public void set_EventDestination(EventDestination value);
    internal bool IsSetEventDestination();
}
public class Amazon.SimpleEmail.Model.CreateConfigurationSetEventDestinationResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.CreateConfigurationSetRequest : AmazonSimpleEmailServiceRequest {
    private ConfigurationSet _configurationSet;
    [AWSPropertyAttribute]
public ConfigurationSet ConfigurationSet { get; public set; }
    public ConfigurationSet get_ConfigurationSet();
    public void set_ConfigurationSet(ConfigurationSet value);
    internal bool IsSetConfigurationSet();
}
public class Amazon.SimpleEmail.Model.CreateConfigurationSetResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.CreateConfigurationSetTrackingOptionsRequest : AmazonSimpleEmailServiceRequest {
    private string _configurationSetName;
    private TrackingOptions _trackingOptions;
    [AWSPropertyAttribute]
public string ConfigurationSetName { get; public set; }
    [AWSPropertyAttribute]
public TrackingOptions TrackingOptions { get; public set; }
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
    public TrackingOptions get_TrackingOptions();
    public void set_TrackingOptions(TrackingOptions value);
    internal bool IsSetTrackingOptions();
}
public class Amazon.SimpleEmail.Model.CreateConfigurationSetTrackingOptionsResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.CreateCustomVerificationEmailTemplateRequest : AmazonSimpleEmailServiceRequest {
    private string _failureRedirectionURL;
    private string _fromEmailAddress;
    private string _successRedirectionURL;
    private string _templateContent;
    private string _templateName;
    private string _templateSubject;
    [AWSPropertyAttribute]
public string FailureRedirectionURL { get; public set; }
    [AWSPropertyAttribute]
public string FromEmailAddress { get; public set; }
    [AWSPropertyAttribute]
public string SuccessRedirectionURL { get; public set; }
    [AWSPropertyAttribute]
public string TemplateContent { get; public set; }
    [AWSPropertyAttribute]
public string TemplateName { get; public set; }
    [AWSPropertyAttribute]
public string TemplateSubject { get; public set; }
    public string get_FailureRedirectionURL();
    public void set_FailureRedirectionURL(string value);
    internal bool IsSetFailureRedirectionURL();
    public string get_FromEmailAddress();
    public void set_FromEmailAddress(string value);
    internal bool IsSetFromEmailAddress();
    public string get_SuccessRedirectionURL();
    public void set_SuccessRedirectionURL(string value);
    internal bool IsSetSuccessRedirectionURL();
    public string get_TemplateContent();
    public void set_TemplateContent(string value);
    internal bool IsSetTemplateContent();
    public string get_TemplateName();
    public void set_TemplateName(string value);
    internal bool IsSetTemplateName();
    public string get_TemplateSubject();
    public void set_TemplateSubject(string value);
    internal bool IsSetTemplateSubject();
}
public class Amazon.SimpleEmail.Model.CreateCustomVerificationEmailTemplateResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.CreateReceiptFilterRequest : AmazonSimpleEmailServiceRequest {
    private ReceiptFilter _filter;
    [AWSPropertyAttribute]
public ReceiptFilter Filter { get; public set; }
    public ReceiptFilter get_Filter();
    public void set_Filter(ReceiptFilter value);
    internal bool IsSetFilter();
}
public class Amazon.SimpleEmail.Model.CreateReceiptFilterResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.CreateReceiptRuleRequest : AmazonSimpleEmailServiceRequest {
    private string _after;
    private ReceiptRule _rule;
    private string _ruleSetName;
    public string After { get; public set; }
    [AWSPropertyAttribute]
public ReceiptRule Rule { get; public set; }
    [AWSPropertyAttribute]
public string RuleSetName { get; public set; }
    public string get_After();
    public void set_After(string value);
    internal bool IsSetAfter();
    public ReceiptRule get_Rule();
    public void set_Rule(ReceiptRule value);
    internal bool IsSetRule();
    public string get_RuleSetName();
    public void set_RuleSetName(string value);
    internal bool IsSetRuleSetName();
}
public class Amazon.SimpleEmail.Model.CreateReceiptRuleResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.CreateReceiptRuleSetRequest : AmazonSimpleEmailServiceRequest {
    private string _ruleSetName;
    [AWSPropertyAttribute]
public string RuleSetName { get; public set; }
    public string get_RuleSetName();
    public void set_RuleSetName(string value);
    internal bool IsSetRuleSetName();
}
public class Amazon.SimpleEmail.Model.CreateReceiptRuleSetResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.CreateTemplateRequest : AmazonSimpleEmailServiceRequest {
    private Template _template;
    [AWSPropertyAttribute]
public Template Template { get; public set; }
    public Template get_Template();
    public void set_Template(Template value);
    internal bool IsSetTemplate();
}
public class Amazon.SimpleEmail.Model.CreateTemplateResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.CustomVerificationEmailInvalidContentException : AmazonSimpleEmailServiceException {
    public CustomVerificationEmailInvalidContentException(string message);
    public CustomVerificationEmailInvalidContentException(string message, Exception innerException);
    public CustomVerificationEmailInvalidContentException(Exception innerException);
    public CustomVerificationEmailInvalidContentException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CustomVerificationEmailInvalidContentException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleEmail.Model.CustomVerificationEmailTemplate : object {
    private string _failureRedirectionURL;
    private string _fromEmailAddress;
    private string _successRedirectionURL;
    private string _templateName;
    private string _templateSubject;
    public string FailureRedirectionURL { get; public set; }
    public string FromEmailAddress { get; public set; }
    public string SuccessRedirectionURL { get; public set; }
    public string TemplateName { get; public set; }
    public string TemplateSubject { get; public set; }
    public string get_FailureRedirectionURL();
    public void set_FailureRedirectionURL(string value);
    internal bool IsSetFailureRedirectionURL();
    public string get_FromEmailAddress();
    public void set_FromEmailAddress(string value);
    internal bool IsSetFromEmailAddress();
    public string get_SuccessRedirectionURL();
    public void set_SuccessRedirectionURL(string value);
    internal bool IsSetSuccessRedirectionURL();
    public string get_TemplateName();
    public void set_TemplateName(string value);
    internal bool IsSetTemplateName();
    public string get_TemplateSubject();
    public void set_TemplateSubject(string value);
    internal bool IsSetTemplateSubject();
}
public class Amazon.SimpleEmail.Model.CustomVerificationEmailTemplateAlreadyExistsException : AmazonSimpleEmailServiceException {
    private string _customVerificationEmailTemplateName;
    public string CustomVerificationEmailTemplateName { get; public set; }
    public CustomVerificationEmailTemplateAlreadyExistsException(string message);
    public CustomVerificationEmailTemplateAlreadyExistsException(string message, Exception innerException);
    public CustomVerificationEmailTemplateAlreadyExistsException(Exception innerException);
    public CustomVerificationEmailTemplateAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CustomVerificationEmailTemplateAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_CustomVerificationEmailTemplateName();
    public void set_CustomVerificationEmailTemplateName(string value);
    internal bool IsSetCustomVerificationEmailTemplateName();
}
public class Amazon.SimpleEmail.Model.CustomVerificationEmailTemplateDoesNotExistException : AmazonSimpleEmailServiceException {
    private string _customVerificationEmailTemplateName;
    public string CustomVerificationEmailTemplateName { get; public set; }
    public CustomVerificationEmailTemplateDoesNotExistException(string message);
    public CustomVerificationEmailTemplateDoesNotExistException(string message, Exception innerException);
    public CustomVerificationEmailTemplateDoesNotExistException(Exception innerException);
    public CustomVerificationEmailTemplateDoesNotExistException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CustomVerificationEmailTemplateDoesNotExistException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_CustomVerificationEmailTemplateName();
    public void set_CustomVerificationEmailTemplateName(string value);
    internal bool IsSetCustomVerificationEmailTemplateName();
}
public class Amazon.SimpleEmail.Model.DeleteConfigurationSetEventDestinationRequest : AmazonSimpleEmailServiceRequest {
    private string _configurationSetName;
    private string _eventDestinationName;
    [AWSPropertyAttribute]
public string ConfigurationSetName { get; public set; }
    [AWSPropertyAttribute]
public string EventDestinationName { get; public set; }
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
    public string get_EventDestinationName();
    public void set_EventDestinationName(string value);
    internal bool IsSetEventDestinationName();
}
public class Amazon.SimpleEmail.Model.DeleteConfigurationSetEventDestinationResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.DeleteConfigurationSetRequest : AmazonSimpleEmailServiceRequest {
    private string _configurationSetName;
    [AWSPropertyAttribute]
public string ConfigurationSetName { get; public set; }
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
}
public class Amazon.SimpleEmail.Model.DeleteConfigurationSetResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.DeleteConfigurationSetTrackingOptionsRequest : AmazonSimpleEmailServiceRequest {
    private string _configurationSetName;
    [AWSPropertyAttribute]
public string ConfigurationSetName { get; public set; }
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
}
public class Amazon.SimpleEmail.Model.DeleteConfigurationSetTrackingOptionsResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.DeleteCustomVerificationEmailTemplateRequest : AmazonSimpleEmailServiceRequest {
    private string _templateName;
    [AWSPropertyAttribute]
public string TemplateName { get; public set; }
    public string get_TemplateName();
    public void set_TemplateName(string value);
    internal bool IsSetTemplateName();
}
public class Amazon.SimpleEmail.Model.DeleteCustomVerificationEmailTemplateResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.DeleteIdentityPolicyRequest : AmazonSimpleEmailServiceRequest {
    private string _identity;
    private string _policyName;
    [AWSPropertyAttribute]
public string Identity { get; public set; }
    [AWSPropertyAttribute]
public string PolicyName { get; public set; }
    public string get_Identity();
    public void set_Identity(string value);
    internal bool IsSetIdentity();
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
}
public class Amazon.SimpleEmail.Model.DeleteIdentityPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.DeleteIdentityRequest : AmazonSimpleEmailServiceRequest {
    private string _identity;
    [AWSPropertyAttribute]
public string Identity { get; public set; }
    public string get_Identity();
    public void set_Identity(string value);
    internal bool IsSetIdentity();
}
public class Amazon.SimpleEmail.Model.DeleteIdentityResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.DeleteReceiptFilterRequest : AmazonSimpleEmailServiceRequest {
    private string _filterName;
    [AWSPropertyAttribute]
public string FilterName { get; public set; }
    public string get_FilterName();
    public void set_FilterName(string value);
    internal bool IsSetFilterName();
}
public class Amazon.SimpleEmail.Model.DeleteReceiptFilterResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.DeleteReceiptRuleRequest : AmazonSimpleEmailServiceRequest {
    private string _ruleName;
    private string _ruleSetName;
    [AWSPropertyAttribute]
public string RuleName { get; public set; }
    [AWSPropertyAttribute]
public string RuleSetName { get; public set; }
    public string get_RuleName();
    public void set_RuleName(string value);
    internal bool IsSetRuleName();
    public string get_RuleSetName();
    public void set_RuleSetName(string value);
    internal bool IsSetRuleSetName();
}
public class Amazon.SimpleEmail.Model.DeleteReceiptRuleResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.DeleteReceiptRuleSetRequest : AmazonSimpleEmailServiceRequest {
    private string _ruleSetName;
    [AWSPropertyAttribute]
public string RuleSetName { get; public set; }
    public string get_RuleSetName();
    public void set_RuleSetName(string value);
    internal bool IsSetRuleSetName();
}
public class Amazon.SimpleEmail.Model.DeleteReceiptRuleSetResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.DeleteTemplateRequest : AmazonSimpleEmailServiceRequest {
    private string _templateName;
    [AWSPropertyAttribute]
public string TemplateName { get; public set; }
    public string get_TemplateName();
    public void set_TemplateName(string value);
    internal bool IsSetTemplateName();
}
public class Amazon.SimpleEmail.Model.DeleteTemplateResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.DeleteVerifiedEmailAddressRequest : AmazonSimpleEmailServiceRequest {
    private string _emailAddress;
    [AWSPropertyAttribute]
public string EmailAddress { get; public set; }
    public string get_EmailAddress();
    public void set_EmailAddress(string value);
    internal bool IsSetEmailAddress();
}
public class Amazon.SimpleEmail.Model.DeleteVerifiedEmailAddressResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.DeliveryOptions : object {
    private TlsPolicy _tlsPolicy;
    public TlsPolicy TlsPolicy { get; public set; }
    public TlsPolicy get_TlsPolicy();
    public void set_TlsPolicy(TlsPolicy value);
    internal bool IsSetTlsPolicy();
}
public class Amazon.SimpleEmail.Model.DescribeActiveReceiptRuleSetRequest : AmazonSimpleEmailServiceRequest {
}
public class Amazon.SimpleEmail.Model.DescribeActiveReceiptRuleSetResponse : AmazonWebServiceResponse {
    private ReceiptRuleSetMetadata _metadata;
    private List`1<ReceiptRule> _rules;
    public ReceiptRuleSetMetadata Metadata { get; public set; }
    public List`1<ReceiptRule> Rules { get; public set; }
    public ReceiptRuleSetMetadata get_Metadata();
    public void set_Metadata(ReceiptRuleSetMetadata value);
    internal bool IsSetMetadata();
    public List`1<ReceiptRule> get_Rules();
    public void set_Rules(List`1<ReceiptRule> value);
    internal bool IsSetRules();
}
public class Amazon.SimpleEmail.Model.DescribeConfigurationSetRequest : AmazonSimpleEmailServiceRequest {
    private List`1<string> _configurationSetAttributeNames;
    private string _configurationSetName;
    public List`1<string> ConfigurationSetAttributeNames { get; public set; }
    [AWSPropertyAttribute]
public string ConfigurationSetName { get; public set; }
    public List`1<string> get_ConfigurationSetAttributeNames();
    public void set_ConfigurationSetAttributeNames(List`1<string> value);
    internal bool IsSetConfigurationSetAttributeNames();
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
}
public class Amazon.SimpleEmail.Model.DescribeConfigurationSetResponse : AmazonWebServiceResponse {
    private ConfigurationSet _configurationSet;
    private DeliveryOptions _deliveryOptions;
    private List`1<EventDestination> _eventDestinations;
    private ReputationOptions _reputationOptions;
    private TrackingOptions _trackingOptions;
    public ConfigurationSet ConfigurationSet { get; public set; }
    public DeliveryOptions DeliveryOptions { get; public set; }
    public List`1<EventDestination> EventDestinations { get; public set; }
    public ReputationOptions ReputationOptions { get; public set; }
    public TrackingOptions TrackingOptions { get; public set; }
    public ConfigurationSet get_ConfigurationSet();
    public void set_ConfigurationSet(ConfigurationSet value);
    internal bool IsSetConfigurationSet();
    public DeliveryOptions get_DeliveryOptions();
    public void set_DeliveryOptions(DeliveryOptions value);
    internal bool IsSetDeliveryOptions();
    public List`1<EventDestination> get_EventDestinations();
    public void set_EventDestinations(List`1<EventDestination> value);
    internal bool IsSetEventDestinations();
    public ReputationOptions get_ReputationOptions();
    public void set_ReputationOptions(ReputationOptions value);
    internal bool IsSetReputationOptions();
    public TrackingOptions get_TrackingOptions();
    public void set_TrackingOptions(TrackingOptions value);
    internal bool IsSetTrackingOptions();
}
public class Amazon.SimpleEmail.Model.DescribeReceiptRuleRequest : AmazonSimpleEmailServiceRequest {
    private string _ruleName;
    private string _ruleSetName;
    [AWSPropertyAttribute]
public string RuleName { get; public set; }
    [AWSPropertyAttribute]
public string RuleSetName { get; public set; }
    public string get_RuleName();
    public void set_RuleName(string value);
    internal bool IsSetRuleName();
    public string get_RuleSetName();
    public void set_RuleSetName(string value);
    internal bool IsSetRuleSetName();
}
public class Amazon.SimpleEmail.Model.DescribeReceiptRuleResponse : AmazonWebServiceResponse {
    private ReceiptRule _rule;
    public ReceiptRule Rule { get; public set; }
    public ReceiptRule get_Rule();
    public void set_Rule(ReceiptRule value);
    internal bool IsSetRule();
}
public class Amazon.SimpleEmail.Model.DescribeReceiptRuleSetRequest : AmazonSimpleEmailServiceRequest {
    private string _ruleSetName;
    [AWSPropertyAttribute]
public string RuleSetName { get; public set; }
    public string get_RuleSetName();
    public void set_RuleSetName(string value);
    internal bool IsSetRuleSetName();
}
public class Amazon.SimpleEmail.Model.DescribeReceiptRuleSetResponse : AmazonWebServiceResponse {
    private ReceiptRuleSetMetadata _metadata;
    private List`1<ReceiptRule> _rules;
    public ReceiptRuleSetMetadata Metadata { get; public set; }
    public List`1<ReceiptRule> Rules { get; public set; }
    public ReceiptRuleSetMetadata get_Metadata();
    public void set_Metadata(ReceiptRuleSetMetadata value);
    internal bool IsSetMetadata();
    public List`1<ReceiptRule> get_Rules();
    public void set_Rules(List`1<ReceiptRule> value);
    internal bool IsSetRules();
}
public class Amazon.SimpleEmail.Model.Destination : object {
    private List`1<string> _bccAddresses;
    private List`1<string> _ccAddresses;
    private List`1<string> _toAddresses;
    public List`1<string> BccAddresses { get; public set; }
    public List`1<string> CcAddresses { get; public set; }
    public List`1<string> ToAddresses { get; public set; }
    public Destination(List`1<string> toAddresses);
    public List`1<string> get_BccAddresses();
    public void set_BccAddresses(List`1<string> value);
    internal bool IsSetBccAddresses();
    public List`1<string> get_CcAddresses();
    public void set_CcAddresses(List`1<string> value);
    internal bool IsSetCcAddresses();
    public List`1<string> get_ToAddresses();
    public void set_ToAddresses(List`1<string> value);
    internal bool IsSetToAddresses();
}
public class Amazon.SimpleEmail.Model.EventDestination : object {
    private CloudWatchDestination _cloudWatchDestination;
    private Nullable`1<bool> _enabled;
    private KinesisFirehoseDestination _kinesisFirehoseDestination;
    private List`1<string> _matchingEventTypes;
    private string _name;
    private SNSDestination _snsDestination;
    public CloudWatchDestination CloudWatchDestination { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    public KinesisFirehoseDestination KinesisFirehoseDestination { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> MatchingEventTypes { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public SNSDestination SNSDestination { get; public set; }
    public CloudWatchDestination get_CloudWatchDestination();
    public void set_CloudWatchDestination(CloudWatchDestination value);
    internal bool IsSetCloudWatchDestination();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public KinesisFirehoseDestination get_KinesisFirehoseDestination();
    public void set_KinesisFirehoseDestination(KinesisFirehoseDestination value);
    internal bool IsSetKinesisFirehoseDestination();
    public List`1<string> get_MatchingEventTypes();
    public void set_MatchingEventTypes(List`1<string> value);
    internal bool IsSetMatchingEventTypes();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public SNSDestination get_SNSDestination();
    public void set_SNSDestination(SNSDestination value);
    internal bool IsSetSNSDestination();
}
public class Amazon.SimpleEmail.Model.EventDestinationAlreadyExistsException : AmazonSimpleEmailServiceException {
    private string _configurationSetName;
    private string _eventDestinationName;
    public string ConfigurationSetName { get; public set; }
    public string EventDestinationName { get; public set; }
    public EventDestinationAlreadyExistsException(string message);
    public EventDestinationAlreadyExistsException(string message, Exception innerException);
    public EventDestinationAlreadyExistsException(Exception innerException);
    public EventDestinationAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EventDestinationAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
    public string get_EventDestinationName();
    public void set_EventDestinationName(string value);
    internal bool IsSetEventDestinationName();
}
public class Amazon.SimpleEmail.Model.EventDestinationDoesNotExistException : AmazonSimpleEmailServiceException {
    private string _configurationSetName;
    private string _eventDestinationName;
    public string ConfigurationSetName { get; public set; }
    public string EventDestinationName { get; public set; }
    public EventDestinationDoesNotExistException(string message);
    public EventDestinationDoesNotExistException(string message, Exception innerException);
    public EventDestinationDoesNotExistException(Exception innerException);
    public EventDestinationDoesNotExistException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EventDestinationDoesNotExistException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
    public string get_EventDestinationName();
    public void set_EventDestinationName(string value);
    internal bool IsSetEventDestinationName();
}
public class Amazon.SimpleEmail.Model.ExtensionField : object {
    private string _name;
    private string _value;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.SimpleEmail.Model.FromEmailAddressNotVerifiedException : AmazonSimpleEmailServiceException {
    private string _fromEmailAddress;
    public string FromEmailAddress { get; public set; }
    public FromEmailAddressNotVerifiedException(string message);
    public FromEmailAddressNotVerifiedException(string message, Exception innerException);
    public FromEmailAddressNotVerifiedException(Exception innerException);
    public FromEmailAddressNotVerifiedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public FromEmailAddressNotVerifiedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_FromEmailAddress();
    public void set_FromEmailAddress(string value);
    internal bool IsSetFromEmailAddress();
}
public class Amazon.SimpleEmail.Model.GetAccountSendingEnabledRequest : AmazonSimpleEmailServiceRequest {
}
public class Amazon.SimpleEmail.Model.GetAccountSendingEnabledResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _enabled;
    public Nullable`1<bool> Enabled { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.SimpleEmail.Model.GetCustomVerificationEmailTemplateRequest : AmazonSimpleEmailServiceRequest {
    private string _templateName;
    [AWSPropertyAttribute]
public string TemplateName { get; public set; }
    public string get_TemplateName();
    public void set_TemplateName(string value);
    internal bool IsSetTemplateName();
}
public class Amazon.SimpleEmail.Model.GetCustomVerificationEmailTemplateResponse : AmazonWebServiceResponse {
    private string _failureRedirectionURL;
    private string _fromEmailAddress;
    private string _successRedirectionURL;
    private string _templateContent;
    private string _templateName;
    private string _templateSubject;
    public string FailureRedirectionURL { get; public set; }
    public string FromEmailAddress { get; public set; }
    public string SuccessRedirectionURL { get; public set; }
    public string TemplateContent { get; public set; }
    public string TemplateName { get; public set; }
    public string TemplateSubject { get; public set; }
    public string get_FailureRedirectionURL();
    public void set_FailureRedirectionURL(string value);
    internal bool IsSetFailureRedirectionURL();
    public string get_FromEmailAddress();
    public void set_FromEmailAddress(string value);
    internal bool IsSetFromEmailAddress();
    public string get_SuccessRedirectionURL();
    public void set_SuccessRedirectionURL(string value);
    internal bool IsSetSuccessRedirectionURL();
    public string get_TemplateContent();
    public void set_TemplateContent(string value);
    internal bool IsSetTemplateContent();
    public string get_TemplateName();
    public void set_TemplateName(string value);
    internal bool IsSetTemplateName();
    public string get_TemplateSubject();
    public void set_TemplateSubject(string value);
    internal bool IsSetTemplateSubject();
}
public class Amazon.SimpleEmail.Model.GetIdentityDkimAttributesRequest : AmazonSimpleEmailServiceRequest {
    private List`1<string> _identities;
    [AWSPropertyAttribute]
public List`1<string> Identities { get; public set; }
    public List`1<string> get_Identities();
    public void set_Identities(List`1<string> value);
    internal bool IsSetIdentities();
}
public class Amazon.SimpleEmail.Model.GetIdentityDkimAttributesResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, IdentityDkimAttributes> _dkimAttributes;
    [AWSPropertyAttribute]
public Dictionary`2<string, IdentityDkimAttributes> DkimAttributes { get; public set; }
    public Dictionary`2<string, IdentityDkimAttributes> get_DkimAttributes();
    public void set_DkimAttributes(Dictionary`2<string, IdentityDkimAttributes> value);
    internal bool IsSetDkimAttributes();
}
public class Amazon.SimpleEmail.Model.GetIdentityMailFromDomainAttributesRequest : AmazonSimpleEmailServiceRequest {
    private List`1<string> _identities;
    [AWSPropertyAttribute]
public List`1<string> Identities { get; public set; }
    public List`1<string> get_Identities();
    public void set_Identities(List`1<string> value);
    internal bool IsSetIdentities();
}
public class Amazon.SimpleEmail.Model.GetIdentityMailFromDomainAttributesResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, IdentityMailFromDomainAttributes> _mailFromDomainAttributes;
    [AWSPropertyAttribute]
public Dictionary`2<string, IdentityMailFromDomainAttributes> MailFromDomainAttributes { get; public set; }
    public Dictionary`2<string, IdentityMailFromDomainAttributes> get_MailFromDomainAttributes();
    public void set_MailFromDomainAttributes(Dictionary`2<string, IdentityMailFromDomainAttributes> value);
    internal bool IsSetMailFromDomainAttributes();
}
public class Amazon.SimpleEmail.Model.GetIdentityNotificationAttributesRequest : AmazonSimpleEmailServiceRequest {
    private List`1<string> _identities;
    [AWSPropertyAttribute]
public List`1<string> Identities { get; public set; }
    public List`1<string> get_Identities();
    public void set_Identities(List`1<string> value);
    internal bool IsSetIdentities();
}
public class Amazon.SimpleEmail.Model.GetIdentityNotificationAttributesResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, IdentityNotificationAttributes> _notificationAttributes;
    [AWSPropertyAttribute]
public Dictionary`2<string, IdentityNotificationAttributes> NotificationAttributes { get; public set; }
    public Dictionary`2<string, IdentityNotificationAttributes> get_NotificationAttributes();
    public void set_NotificationAttributes(Dictionary`2<string, IdentityNotificationAttributes> value);
    internal bool IsSetNotificationAttributes();
}
public class Amazon.SimpleEmail.Model.GetIdentityPoliciesRequest : AmazonSimpleEmailServiceRequest {
    private string _identity;
    private List`1<string> _policyNames;
    [AWSPropertyAttribute]
public string Identity { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> PolicyNames { get; public set; }
    public string get_Identity();
    public void set_Identity(string value);
    internal bool IsSetIdentity();
    public List`1<string> get_PolicyNames();
    public void set_PolicyNames(List`1<string> value);
    internal bool IsSetPolicyNames();
}
public class Amazon.SimpleEmail.Model.GetIdentityPoliciesResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _policies;
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Policies { get; public set; }
    public Dictionary`2<string, string> get_Policies();
    public void set_Policies(Dictionary`2<string, string> value);
    internal bool IsSetPolicies();
}
public class Amazon.SimpleEmail.Model.GetIdentityVerificationAttributesRequest : AmazonSimpleEmailServiceRequest {
    private List`1<string> _identities;
    [AWSPropertyAttribute]
public List`1<string> Identities { get; public set; }
    public List`1<string> get_Identities();
    public void set_Identities(List`1<string> value);
    internal bool IsSetIdentities();
}
public class Amazon.SimpleEmail.Model.GetIdentityVerificationAttributesResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, IdentityVerificationAttributes> _verificationAttributes;
    [AWSPropertyAttribute]
public Dictionary`2<string, IdentityVerificationAttributes> VerificationAttributes { get; public set; }
    public Dictionary`2<string, IdentityVerificationAttributes> get_VerificationAttributes();
    public void set_VerificationAttributes(Dictionary`2<string, IdentityVerificationAttributes> value);
    internal bool IsSetVerificationAttributes();
}
public class Amazon.SimpleEmail.Model.GetSendQuotaRequest : AmazonSimpleEmailServiceRequest {
}
public class Amazon.SimpleEmail.Model.GetSendQuotaResponse : AmazonWebServiceResponse {
    private Nullable`1<double> _max24HourSend;
    private Nullable`1<double> _maxSendRate;
    private Nullable`1<double> _sentLast24Hours;
    public Nullable`1<double> Max24HourSend { get; public set; }
    public Nullable`1<double> MaxSendRate { get; public set; }
    public Nullable`1<double> SentLast24Hours { get; public set; }
    public Nullable`1<double> get_Max24HourSend();
    public void set_Max24HourSend(Nullable`1<double> value);
    internal bool IsSetMax24HourSend();
    public Nullable`1<double> get_MaxSendRate();
    public void set_MaxSendRate(Nullable`1<double> value);
    internal bool IsSetMaxSendRate();
    public Nullable`1<double> get_SentLast24Hours();
    public void set_SentLast24Hours(Nullable`1<double> value);
    internal bool IsSetSentLast24Hours();
}
public class Amazon.SimpleEmail.Model.GetSendStatisticsRequest : AmazonSimpleEmailServiceRequest {
}
public class Amazon.SimpleEmail.Model.GetSendStatisticsResponse : AmazonWebServiceResponse {
    private List`1<SendDataPoint> _sendDataPoints;
    public List`1<SendDataPoint> SendDataPoints { get; public set; }
    public List`1<SendDataPoint> get_SendDataPoints();
    public void set_SendDataPoints(List`1<SendDataPoint> value);
    internal bool IsSetSendDataPoints();
}
public class Amazon.SimpleEmail.Model.GetTemplateRequest : AmazonSimpleEmailServiceRequest {
    private string _templateName;
    [AWSPropertyAttribute]
public string TemplateName { get; public set; }
    public string get_TemplateName();
    public void set_TemplateName(string value);
    internal bool IsSetTemplateName();
}
public class Amazon.SimpleEmail.Model.GetTemplateResponse : AmazonWebServiceResponse {
    private Template _template;
    public Template Template { get; public set; }
    public Template get_Template();
    public void set_Template(Template value);
    internal bool IsSetTemplate();
}
public class Amazon.SimpleEmail.Model.IdentityDkimAttributes : object {
    private Nullable`1<bool> _dkimEnabled;
    private List`1<string> _dkimTokens;
    private VerificationStatus _dkimVerificationStatus;
    [AWSPropertyAttribute]
public Nullable`1<bool> DkimEnabled { get; public set; }
    public List`1<string> DkimTokens { get; public set; }
    [AWSPropertyAttribute]
public VerificationStatus DkimVerificationStatus { get; public set; }
    public Nullable`1<bool> get_DkimEnabled();
    public void set_DkimEnabled(Nullable`1<bool> value);
    internal bool IsSetDkimEnabled();
    public List`1<string> get_DkimTokens();
    public void set_DkimTokens(List`1<string> value);
    internal bool IsSetDkimTokens();
    public VerificationStatus get_DkimVerificationStatus();
    public void set_DkimVerificationStatus(VerificationStatus value);
    internal bool IsSetDkimVerificationStatus();
}
public class Amazon.SimpleEmail.Model.IdentityMailFromDomainAttributes : object {
    private BehaviorOnMXFailure _behaviorOnMXFailure;
    private string _mailFromDomain;
    private CustomMailFromStatus _mailFromDomainStatus;
    [AWSPropertyAttribute]
public BehaviorOnMXFailure BehaviorOnMXFailure { get; public set; }
    [AWSPropertyAttribute]
public string MailFromDomain { get; public set; }
    [AWSPropertyAttribute]
public CustomMailFromStatus MailFromDomainStatus { get; public set; }
    public BehaviorOnMXFailure get_BehaviorOnMXFailure();
    public void set_BehaviorOnMXFailure(BehaviorOnMXFailure value);
    internal bool IsSetBehaviorOnMXFailure();
    public string get_MailFromDomain();
    public void set_MailFromDomain(string value);
    internal bool IsSetMailFromDomain();
    public CustomMailFromStatus get_MailFromDomainStatus();
    public void set_MailFromDomainStatus(CustomMailFromStatus value);
    internal bool IsSetMailFromDomainStatus();
}
public class Amazon.SimpleEmail.Model.IdentityNotificationAttributes : object {
    private string _bounceTopic;
    private string _complaintTopic;
    private string _deliveryTopic;
    private Nullable`1<bool> _forwardingEnabled;
    private Nullable`1<bool> _headersInBounceNotificationsEnabled;
    private Nullable`1<bool> _headersInComplaintNotificationsEnabled;
    private Nullable`1<bool> _headersInDeliveryNotificationsEnabled;
    [AWSPropertyAttribute]
public string BounceTopic { get; public set; }
    [AWSPropertyAttribute]
public string ComplaintTopic { get; public set; }
    [AWSPropertyAttribute]
public string DeliveryTopic { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> ForwardingEnabled { get; public set; }
    public Nullable`1<bool> HeadersInBounceNotificationsEnabled { get; public set; }
    public Nullable`1<bool> HeadersInComplaintNotificationsEnabled { get; public set; }
    public Nullable`1<bool> HeadersInDeliveryNotificationsEnabled { get; public set; }
    public string get_BounceTopic();
    public void set_BounceTopic(string value);
    internal bool IsSetBounceTopic();
    public string get_ComplaintTopic();
    public void set_ComplaintTopic(string value);
    internal bool IsSetComplaintTopic();
    public string get_DeliveryTopic();
    public void set_DeliveryTopic(string value);
    internal bool IsSetDeliveryTopic();
    public Nullable`1<bool> get_ForwardingEnabled();
    public void set_ForwardingEnabled(Nullable`1<bool> value);
    internal bool IsSetForwardingEnabled();
    public Nullable`1<bool> get_HeadersInBounceNotificationsEnabled();
    public void set_HeadersInBounceNotificationsEnabled(Nullable`1<bool> value);
    internal bool IsSetHeadersInBounceNotificationsEnabled();
    public Nullable`1<bool> get_HeadersInComplaintNotificationsEnabled();
    public void set_HeadersInComplaintNotificationsEnabled(Nullable`1<bool> value);
    internal bool IsSetHeadersInComplaintNotificationsEnabled();
    public Nullable`1<bool> get_HeadersInDeliveryNotificationsEnabled();
    public void set_HeadersInDeliveryNotificationsEnabled(Nullable`1<bool> value);
    internal bool IsSetHeadersInDeliveryNotificationsEnabled();
}
public class Amazon.SimpleEmail.Model.IdentityVerificationAttributes : object {
    private VerificationStatus _verificationStatus;
    private string _verificationToken;
    [AWSPropertyAttribute]
public VerificationStatus VerificationStatus { get; public set; }
    public string VerificationToken { get; public set; }
    public VerificationStatus get_VerificationStatus();
    public void set_VerificationStatus(VerificationStatus value);
    internal bool IsSetVerificationStatus();
    public string get_VerificationToken();
    public void set_VerificationToken(string value);
    internal bool IsSetVerificationToken();
}
public interface Amazon.SimpleEmail.Model.IListCustomVerificationEmailTemplatesPaginator {
    public IPaginatedEnumerable`1<ListCustomVerificationEmailTemplatesResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListCustomVerificationEmailTemplatesResponse> get_Responses();
}
public interface Amazon.SimpleEmail.Model.IListIdentitiesPaginator {
    public IPaginatedEnumerable`1<ListIdentitiesResponse> Responses { get; }
    public IPaginatedEnumerable`1<string> Identities { get; }
    public abstract virtual IPaginatedEnumerable`1<ListIdentitiesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<string> get_Identities();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.AccountSendingPausedExceptionUnmarshaller : object {
    private static AccountSendingPausedExceptionUnmarshaller _instance;
    public static AccountSendingPausedExceptionUnmarshaller Instance { get; }
    private static AccountSendingPausedExceptionUnmarshaller();
    public sealed virtual AccountSendingPausedException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccountSendingPausedException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static AccountSendingPausedExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.AddHeaderActionUnmarshaller : object {
    private static AddHeaderActionUnmarshaller _instance;
    public static AddHeaderActionUnmarshaller Instance { get; }
    private static AddHeaderActionUnmarshaller();
    public sealed virtual AddHeaderAction Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AddHeaderAction Unmarshall(JsonUnmarshallerContext context);
    public static AddHeaderActionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.AlreadyExistsExceptionUnmarshaller : object {
    private static AlreadyExistsExceptionUnmarshaller _instance;
    public static AlreadyExistsExceptionUnmarshaller Instance { get; }
    private static AlreadyExistsExceptionUnmarshaller();
    public sealed virtual AlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static AlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.BounceActionUnmarshaller : object {
    private static BounceActionUnmarshaller _instance;
    public static BounceActionUnmarshaller Instance { get; }
    private static BounceActionUnmarshaller();
    public sealed virtual BounceAction Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BounceAction Unmarshall(JsonUnmarshallerContext context);
    public static BounceActionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.BulkEmailDestinationStatusUnmarshaller : object {
    private static BulkEmailDestinationStatusUnmarshaller _instance;
    public static BulkEmailDestinationStatusUnmarshaller Instance { get; }
    private static BulkEmailDestinationStatusUnmarshaller();
    public sealed virtual BulkEmailDestinationStatus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BulkEmailDestinationStatus Unmarshall(JsonUnmarshallerContext context);
    public static BulkEmailDestinationStatusUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CannotDeleteExceptionUnmarshaller : object {
    private static CannotDeleteExceptionUnmarshaller _instance;
    public static CannotDeleteExceptionUnmarshaller Instance { get; }
    private static CannotDeleteExceptionUnmarshaller();
    public sealed virtual CannotDeleteException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CannotDeleteException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static CannotDeleteExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CloneReceiptRuleSetRequestMarshaller : object {
    private static CloneReceiptRuleSetRequestMarshaller _instance;
    public static CloneReceiptRuleSetRequestMarshaller Instance { get; }
    private static CloneReceiptRuleSetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CloneReceiptRuleSetRequest publicRequest);
    internal static CloneReceiptRuleSetRequestMarshaller GetInstance();
    public static CloneReceiptRuleSetRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CloneReceiptRuleSetResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CloneReceiptRuleSetResponseUnmarshaller _instance;
    public static CloneReceiptRuleSetResponseUnmarshaller Instance { get; }
    private static CloneReceiptRuleSetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CloneReceiptRuleSetResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CloneReceiptRuleSetResponseUnmarshaller GetInstance();
    public static CloneReceiptRuleSetResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CloudWatchDestinationUnmarshaller : object {
    private static CloudWatchDestinationUnmarshaller _instance;
    public static CloudWatchDestinationUnmarshaller Instance { get; }
    private static CloudWatchDestinationUnmarshaller();
    public sealed virtual CloudWatchDestination Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CloudWatchDestination Unmarshall(JsonUnmarshallerContext context);
    public static CloudWatchDestinationUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CloudWatchDimensionConfigurationUnmarshaller : object {
    private static CloudWatchDimensionConfigurationUnmarshaller _instance;
    public static CloudWatchDimensionConfigurationUnmarshaller Instance { get; }
    private static CloudWatchDimensionConfigurationUnmarshaller();
    public sealed virtual CloudWatchDimensionConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CloudWatchDimensionConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static CloudWatchDimensionConfigurationUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ConfigurationSetAlreadyExistsExceptionUnmarshaller : object {
    private static ConfigurationSetAlreadyExistsExceptionUnmarshaller _instance;
    public static ConfigurationSetAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static ConfigurationSetAlreadyExistsExceptionUnmarshaller();
    public sealed virtual ConfigurationSetAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConfigurationSetAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConfigurationSetAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ConfigurationSetDoesNotExistExceptionUnmarshaller : object {
    private static ConfigurationSetDoesNotExistExceptionUnmarshaller _instance;
    public static ConfigurationSetDoesNotExistExceptionUnmarshaller Instance { get; }
    private static ConfigurationSetDoesNotExistExceptionUnmarshaller();
    public sealed virtual ConfigurationSetDoesNotExistException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConfigurationSetDoesNotExistException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConfigurationSetDoesNotExistExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ConfigurationSetSendingPausedExceptionUnmarshaller : object {
    private static ConfigurationSetSendingPausedExceptionUnmarshaller _instance;
    public static ConfigurationSetSendingPausedExceptionUnmarshaller Instance { get; }
    private static ConfigurationSetSendingPausedExceptionUnmarshaller();
    public sealed virtual ConfigurationSetSendingPausedException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConfigurationSetSendingPausedException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConfigurationSetSendingPausedExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ConfigurationSetUnmarshaller : object {
    private static ConfigurationSetUnmarshaller _instance;
    public static ConfigurationSetUnmarshaller Instance { get; }
    private static ConfigurationSetUnmarshaller();
    public sealed virtual ConfigurationSet Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConfigurationSet Unmarshall(JsonUnmarshallerContext context);
    public static ConfigurationSetUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateConfigurationSetEventDestinationRequestMarshaller : object {
    private static CreateConfigurationSetEventDestinationRequestMarshaller _instance;
    public static CreateConfigurationSetEventDestinationRequestMarshaller Instance { get; }
    private static CreateConfigurationSetEventDestinationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateConfigurationSetEventDestinationRequest publicRequest);
    internal static CreateConfigurationSetEventDestinationRequestMarshaller GetInstance();
    public static CreateConfigurationSetEventDestinationRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateConfigurationSetEventDestinationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateConfigurationSetEventDestinationResponseUnmarshaller _instance;
    public static CreateConfigurationSetEventDestinationResponseUnmarshaller Instance { get; }
    private static CreateConfigurationSetEventDestinationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateConfigurationSetEventDestinationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateConfigurationSetEventDestinationResponseUnmarshaller GetInstance();
    public static CreateConfigurationSetEventDestinationResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateConfigurationSetRequestMarshaller : object {
    private static CreateConfigurationSetRequestMarshaller _instance;
    public static CreateConfigurationSetRequestMarshaller Instance { get; }
    private static CreateConfigurationSetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateConfigurationSetRequest publicRequest);
    internal static CreateConfigurationSetRequestMarshaller GetInstance();
    public static CreateConfigurationSetRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateConfigurationSetResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateConfigurationSetResponseUnmarshaller _instance;
    public static CreateConfigurationSetResponseUnmarshaller Instance { get; }
    private static CreateConfigurationSetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateConfigurationSetResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateConfigurationSetResponseUnmarshaller GetInstance();
    public static CreateConfigurationSetResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateConfigurationSetTrackingOptionsRequestMarshaller : object {
    private static CreateConfigurationSetTrackingOptionsRequestMarshaller _instance;
    public static CreateConfigurationSetTrackingOptionsRequestMarshaller Instance { get; }
    private static CreateConfigurationSetTrackingOptionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateConfigurationSetTrackingOptionsRequest publicRequest);
    internal static CreateConfigurationSetTrackingOptionsRequestMarshaller GetInstance();
    public static CreateConfigurationSetTrackingOptionsRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateConfigurationSetTrackingOptionsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateConfigurationSetTrackingOptionsResponseUnmarshaller _instance;
    public static CreateConfigurationSetTrackingOptionsResponseUnmarshaller Instance { get; }
    private static CreateConfigurationSetTrackingOptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateConfigurationSetTrackingOptionsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateConfigurationSetTrackingOptionsResponseUnmarshaller GetInstance();
    public static CreateConfigurationSetTrackingOptionsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateCustomVerificationEmailTemplateRequestMarshaller : object {
    private static CreateCustomVerificationEmailTemplateRequestMarshaller _instance;
    public static CreateCustomVerificationEmailTemplateRequestMarshaller Instance { get; }
    private static CreateCustomVerificationEmailTemplateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateCustomVerificationEmailTemplateRequest publicRequest);
    internal static CreateCustomVerificationEmailTemplateRequestMarshaller GetInstance();
    public static CreateCustomVerificationEmailTemplateRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateCustomVerificationEmailTemplateResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateCustomVerificationEmailTemplateResponseUnmarshaller _instance;
    public static CreateCustomVerificationEmailTemplateResponseUnmarshaller Instance { get; }
    private static CreateCustomVerificationEmailTemplateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateCustomVerificationEmailTemplateResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateCustomVerificationEmailTemplateResponseUnmarshaller GetInstance();
    public static CreateCustomVerificationEmailTemplateResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptFilterRequestMarshaller : object {
    private static CreateReceiptFilterRequestMarshaller _instance;
    public static CreateReceiptFilterRequestMarshaller Instance { get; }
    private static CreateReceiptFilterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateReceiptFilterRequest publicRequest);
    internal static CreateReceiptFilterRequestMarshaller GetInstance();
    public static CreateReceiptFilterRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptFilterResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateReceiptFilterResponseUnmarshaller _instance;
    public static CreateReceiptFilterResponseUnmarshaller Instance { get; }
    private static CreateReceiptFilterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateReceiptFilterResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateReceiptFilterResponseUnmarshaller GetInstance();
    public static CreateReceiptFilterResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptRuleRequestMarshaller : object {
    private static CreateReceiptRuleRequestMarshaller _instance;
    public static CreateReceiptRuleRequestMarshaller Instance { get; }
    private static CreateReceiptRuleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateReceiptRuleRequest publicRequest);
    internal static CreateReceiptRuleRequestMarshaller GetInstance();
    public static CreateReceiptRuleRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptRuleResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateReceiptRuleResponseUnmarshaller _instance;
    public static CreateReceiptRuleResponseUnmarshaller Instance { get; }
    private static CreateReceiptRuleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateReceiptRuleResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateReceiptRuleResponseUnmarshaller GetInstance();
    public static CreateReceiptRuleResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptRuleSetRequestMarshaller : object {
    private static CreateReceiptRuleSetRequestMarshaller _instance;
    public static CreateReceiptRuleSetRequestMarshaller Instance { get; }
    private static CreateReceiptRuleSetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateReceiptRuleSetRequest publicRequest);
    internal static CreateReceiptRuleSetRequestMarshaller GetInstance();
    public static CreateReceiptRuleSetRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptRuleSetResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateReceiptRuleSetResponseUnmarshaller _instance;
    public static CreateReceiptRuleSetResponseUnmarshaller Instance { get; }
    private static CreateReceiptRuleSetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateReceiptRuleSetResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateReceiptRuleSetResponseUnmarshaller GetInstance();
    public static CreateReceiptRuleSetResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateTemplateRequestMarshaller : object {
    private static CreateTemplateRequestMarshaller _instance;
    public static CreateTemplateRequestMarshaller Instance { get; }
    private static CreateTemplateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTemplateRequest publicRequest);
    internal static CreateTemplateRequestMarshaller GetInstance();
    public static CreateTemplateRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateTemplateResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateTemplateResponseUnmarshaller _instance;
    public static CreateTemplateResponseUnmarshaller Instance { get; }
    private static CreateTemplateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateTemplateResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTemplateResponseUnmarshaller GetInstance();
    public static CreateTemplateResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CustomVerificationEmailInvalidContentExceptionUnmarshaller : object {
    private static CustomVerificationEmailInvalidContentExceptionUnmarshaller _instance;
    public static CustomVerificationEmailInvalidContentExceptionUnmarshaller Instance { get; }
    private static CustomVerificationEmailInvalidContentExceptionUnmarshaller();
    public sealed virtual CustomVerificationEmailInvalidContentException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CustomVerificationEmailInvalidContentException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static CustomVerificationEmailInvalidContentExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CustomVerificationEmailTemplateAlreadyExistsExceptionUnmarshaller : object {
    private static CustomVerificationEmailTemplateAlreadyExistsExceptionUnmarshaller _instance;
    public static CustomVerificationEmailTemplateAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static CustomVerificationEmailTemplateAlreadyExistsExceptionUnmarshaller();
    public sealed virtual CustomVerificationEmailTemplateAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CustomVerificationEmailTemplateAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static CustomVerificationEmailTemplateAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CustomVerificationEmailTemplateDoesNotExistExceptionUnmarshaller : object {
    private static CustomVerificationEmailTemplateDoesNotExistExceptionUnmarshaller _instance;
    public static CustomVerificationEmailTemplateDoesNotExistExceptionUnmarshaller Instance { get; }
    private static CustomVerificationEmailTemplateDoesNotExistExceptionUnmarshaller();
    public sealed virtual CustomVerificationEmailTemplateDoesNotExistException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CustomVerificationEmailTemplateDoesNotExistException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static CustomVerificationEmailTemplateDoesNotExistExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CustomVerificationEmailTemplateUnmarshaller : object {
    private static CustomVerificationEmailTemplateUnmarshaller _instance;
    public static CustomVerificationEmailTemplateUnmarshaller Instance { get; }
    private static CustomVerificationEmailTemplateUnmarshaller();
    public sealed virtual CustomVerificationEmailTemplate Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CustomVerificationEmailTemplate Unmarshall(JsonUnmarshallerContext context);
    public static CustomVerificationEmailTemplateUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteConfigurationSetEventDestinationRequestMarshaller : object {
    private static DeleteConfigurationSetEventDestinationRequestMarshaller _instance;
    public static DeleteConfigurationSetEventDestinationRequestMarshaller Instance { get; }
    private static DeleteConfigurationSetEventDestinationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteConfigurationSetEventDestinationRequest publicRequest);
    internal static DeleteConfigurationSetEventDestinationRequestMarshaller GetInstance();
    public static DeleteConfigurationSetEventDestinationRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteConfigurationSetEventDestinationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteConfigurationSetEventDestinationResponseUnmarshaller _instance;
    public static DeleteConfigurationSetEventDestinationResponseUnmarshaller Instance { get; }
    private static DeleteConfigurationSetEventDestinationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteConfigurationSetEventDestinationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteConfigurationSetEventDestinationResponseUnmarshaller GetInstance();
    public static DeleteConfigurationSetEventDestinationResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteConfigurationSetRequestMarshaller : object {
    private static DeleteConfigurationSetRequestMarshaller _instance;
    public static DeleteConfigurationSetRequestMarshaller Instance { get; }
    private static DeleteConfigurationSetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteConfigurationSetRequest publicRequest);
    internal static DeleteConfigurationSetRequestMarshaller GetInstance();
    public static DeleteConfigurationSetRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteConfigurationSetResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteConfigurationSetResponseUnmarshaller _instance;
    public static DeleteConfigurationSetResponseUnmarshaller Instance { get; }
    private static DeleteConfigurationSetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteConfigurationSetResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteConfigurationSetResponseUnmarshaller GetInstance();
    public static DeleteConfigurationSetResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteConfigurationSetTrackingOptionsRequestMarshaller : object {
    private static DeleteConfigurationSetTrackingOptionsRequestMarshaller _instance;
    public static DeleteConfigurationSetTrackingOptionsRequestMarshaller Instance { get; }
    private static DeleteConfigurationSetTrackingOptionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteConfigurationSetTrackingOptionsRequest publicRequest);
    internal static DeleteConfigurationSetTrackingOptionsRequestMarshaller GetInstance();
    public static DeleteConfigurationSetTrackingOptionsRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteConfigurationSetTrackingOptionsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteConfigurationSetTrackingOptionsResponseUnmarshaller _instance;
    public static DeleteConfigurationSetTrackingOptionsResponseUnmarshaller Instance { get; }
    private static DeleteConfigurationSetTrackingOptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteConfigurationSetTrackingOptionsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteConfigurationSetTrackingOptionsResponseUnmarshaller GetInstance();
    public static DeleteConfigurationSetTrackingOptionsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteCustomVerificationEmailTemplateRequestMarshaller : object {
    private static DeleteCustomVerificationEmailTemplateRequestMarshaller _instance;
    public static DeleteCustomVerificationEmailTemplateRequestMarshaller Instance { get; }
    private static DeleteCustomVerificationEmailTemplateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteCustomVerificationEmailTemplateRequest publicRequest);
    internal static DeleteCustomVerificationEmailTemplateRequestMarshaller GetInstance();
    public static DeleteCustomVerificationEmailTemplateRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteCustomVerificationEmailTemplateResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteCustomVerificationEmailTemplateResponseUnmarshaller _instance;
    public static DeleteCustomVerificationEmailTemplateResponseUnmarshaller Instance { get; }
    private static DeleteCustomVerificationEmailTemplateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteCustomVerificationEmailTemplateResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteCustomVerificationEmailTemplateResponseUnmarshaller GetInstance();
    public static DeleteCustomVerificationEmailTemplateResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteIdentityPolicyRequestMarshaller : object {
    private static DeleteIdentityPolicyRequestMarshaller _instance;
    public static DeleteIdentityPolicyRequestMarshaller Instance { get; }
    private static DeleteIdentityPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteIdentityPolicyRequest publicRequest);
    internal static DeleteIdentityPolicyRequestMarshaller GetInstance();
    public static DeleteIdentityPolicyRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteIdentityPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteIdentityPolicyResponseUnmarshaller _instance;
    public static DeleteIdentityPolicyResponseUnmarshaller Instance { get; }
    private static DeleteIdentityPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteIdentityPolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteIdentityPolicyResponseUnmarshaller GetInstance();
    public static DeleteIdentityPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteIdentityRequestMarshaller : object {
    private static DeleteIdentityRequestMarshaller _instance;
    public static DeleteIdentityRequestMarshaller Instance { get; }
    private static DeleteIdentityRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteIdentityRequest publicRequest);
    internal static DeleteIdentityRequestMarshaller GetInstance();
    public static DeleteIdentityRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteIdentityResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteIdentityResponseUnmarshaller _instance;
    public static DeleteIdentityResponseUnmarshaller Instance { get; }
    private static DeleteIdentityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteIdentityResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteIdentityResponseUnmarshaller GetInstance();
    public static DeleteIdentityResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptFilterRequestMarshaller : object {
    private static DeleteReceiptFilterRequestMarshaller _instance;
    public static DeleteReceiptFilterRequestMarshaller Instance { get; }
    private static DeleteReceiptFilterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteReceiptFilterRequest publicRequest);
    internal static DeleteReceiptFilterRequestMarshaller GetInstance();
    public static DeleteReceiptFilterRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptFilterResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteReceiptFilterResponseUnmarshaller _instance;
    public static DeleteReceiptFilterResponseUnmarshaller Instance { get; }
    private static DeleteReceiptFilterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteReceiptFilterResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteReceiptFilterResponseUnmarshaller GetInstance();
    public static DeleteReceiptFilterResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptRuleRequestMarshaller : object {
    private static DeleteReceiptRuleRequestMarshaller _instance;
    public static DeleteReceiptRuleRequestMarshaller Instance { get; }
    private static DeleteReceiptRuleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteReceiptRuleRequest publicRequest);
    internal static DeleteReceiptRuleRequestMarshaller GetInstance();
    public static DeleteReceiptRuleRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptRuleResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteReceiptRuleResponseUnmarshaller _instance;
    public static DeleteReceiptRuleResponseUnmarshaller Instance { get; }
    private static DeleteReceiptRuleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteReceiptRuleResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteReceiptRuleResponseUnmarshaller GetInstance();
    public static DeleteReceiptRuleResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptRuleSetRequestMarshaller : object {
    private static DeleteReceiptRuleSetRequestMarshaller _instance;
    public static DeleteReceiptRuleSetRequestMarshaller Instance { get; }
    private static DeleteReceiptRuleSetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteReceiptRuleSetRequest publicRequest);
    internal static DeleteReceiptRuleSetRequestMarshaller GetInstance();
    public static DeleteReceiptRuleSetRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptRuleSetResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteReceiptRuleSetResponseUnmarshaller _instance;
    public static DeleteReceiptRuleSetResponseUnmarshaller Instance { get; }
    private static DeleteReceiptRuleSetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteReceiptRuleSetResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteReceiptRuleSetResponseUnmarshaller GetInstance();
    public static DeleteReceiptRuleSetResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteTemplateRequestMarshaller : object {
    private static DeleteTemplateRequestMarshaller _instance;
    public static DeleteTemplateRequestMarshaller Instance { get; }
    private static DeleteTemplateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTemplateRequest publicRequest);
    internal static DeleteTemplateRequestMarshaller GetInstance();
    public static DeleteTemplateRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteTemplateResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteTemplateResponseUnmarshaller _instance;
    public static DeleteTemplateResponseUnmarshaller Instance { get; }
    private static DeleteTemplateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteTemplateResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTemplateResponseUnmarshaller GetInstance();
    public static DeleteTemplateResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteVerifiedEmailAddressRequestMarshaller : object {
    private static DeleteVerifiedEmailAddressRequestMarshaller _instance;
    public static DeleteVerifiedEmailAddressRequestMarshaller Instance { get; }
    private static DeleteVerifiedEmailAddressRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVerifiedEmailAddressRequest publicRequest);
    internal static DeleteVerifiedEmailAddressRequestMarshaller GetInstance();
    public static DeleteVerifiedEmailAddressRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteVerifiedEmailAddressResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteVerifiedEmailAddressResponseUnmarshaller _instance;
    public static DeleteVerifiedEmailAddressResponseUnmarshaller Instance { get; }
    private static DeleteVerifiedEmailAddressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteVerifiedEmailAddressResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVerifiedEmailAddressResponseUnmarshaller GetInstance();
    public static DeleteVerifiedEmailAddressResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeliveryOptionsUnmarshaller : object {
    private static DeliveryOptionsUnmarshaller _instance;
    public static DeliveryOptionsUnmarshaller Instance { get; }
    private static DeliveryOptionsUnmarshaller();
    public sealed virtual DeliveryOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeliveryOptions Unmarshall(JsonUnmarshallerContext context);
    public static DeliveryOptionsUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeActiveReceiptRuleSetRequestMarshaller : object {
    private static DescribeActiveReceiptRuleSetRequestMarshaller _instance;
    public static DescribeActiveReceiptRuleSetRequestMarshaller Instance { get; }
    private static DescribeActiveReceiptRuleSetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeActiveReceiptRuleSetRequest publicRequest);
    internal static DescribeActiveReceiptRuleSetRequestMarshaller GetInstance();
    public static DescribeActiveReceiptRuleSetRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeActiveReceiptRuleSetResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeActiveReceiptRuleSetResponseUnmarshaller _instance;
    public static DescribeActiveReceiptRuleSetResponseUnmarshaller Instance { get; }
    private static DescribeActiveReceiptRuleSetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeActiveReceiptRuleSetResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeActiveReceiptRuleSetResponseUnmarshaller GetInstance();
    public static DescribeActiveReceiptRuleSetResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeConfigurationSetRequestMarshaller : object {
    private static DescribeConfigurationSetRequestMarshaller _instance;
    public static DescribeConfigurationSetRequestMarshaller Instance { get; }
    private static DescribeConfigurationSetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeConfigurationSetRequest publicRequest);
    internal static DescribeConfigurationSetRequestMarshaller GetInstance();
    public static DescribeConfigurationSetRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeConfigurationSetResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeConfigurationSetResponseUnmarshaller _instance;
    public static DescribeConfigurationSetResponseUnmarshaller Instance { get; }
    private static DescribeConfigurationSetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeConfigurationSetResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeConfigurationSetResponseUnmarshaller GetInstance();
    public static DescribeConfigurationSetResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeReceiptRuleRequestMarshaller : object {
    private static DescribeReceiptRuleRequestMarshaller _instance;
    public static DescribeReceiptRuleRequestMarshaller Instance { get; }
    private static DescribeReceiptRuleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReceiptRuleRequest publicRequest);
    internal static DescribeReceiptRuleRequestMarshaller GetInstance();
    public static DescribeReceiptRuleRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeReceiptRuleResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeReceiptRuleResponseUnmarshaller _instance;
    public static DescribeReceiptRuleResponseUnmarshaller Instance { get; }
    private static DescribeReceiptRuleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeReceiptRuleResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReceiptRuleResponseUnmarshaller GetInstance();
    public static DescribeReceiptRuleResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeReceiptRuleSetRequestMarshaller : object {
    private static DescribeReceiptRuleSetRequestMarshaller _instance;
    public static DescribeReceiptRuleSetRequestMarshaller Instance { get; }
    private static DescribeReceiptRuleSetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReceiptRuleSetRequest publicRequest);
    internal static DescribeReceiptRuleSetRequestMarshaller GetInstance();
    public static DescribeReceiptRuleSetRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeReceiptRuleSetResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeReceiptRuleSetResponseUnmarshaller _instance;
    public static DescribeReceiptRuleSetResponseUnmarshaller Instance { get; }
    private static DescribeReceiptRuleSetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeReceiptRuleSetResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReceiptRuleSetResponseUnmarshaller GetInstance();
    public static DescribeReceiptRuleSetResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.EventDestinationAlreadyExistsExceptionUnmarshaller : object {
    private static EventDestinationAlreadyExistsExceptionUnmarshaller _instance;
    public static EventDestinationAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static EventDestinationAlreadyExistsExceptionUnmarshaller();
    public sealed virtual EventDestinationAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EventDestinationAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static EventDestinationAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.EventDestinationDoesNotExistExceptionUnmarshaller : object {
    private static EventDestinationDoesNotExistExceptionUnmarshaller _instance;
    public static EventDestinationDoesNotExistExceptionUnmarshaller Instance { get; }
    private static EventDestinationDoesNotExistExceptionUnmarshaller();
    public sealed virtual EventDestinationDoesNotExistException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EventDestinationDoesNotExistException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static EventDestinationDoesNotExistExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.EventDestinationUnmarshaller : object {
    private static EventDestinationUnmarshaller _instance;
    public static EventDestinationUnmarshaller Instance { get; }
    private static EventDestinationUnmarshaller();
    public sealed virtual EventDestination Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EventDestination Unmarshall(JsonUnmarshallerContext context);
    public static EventDestinationUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.FromEmailAddressNotVerifiedExceptionUnmarshaller : object {
    private static FromEmailAddressNotVerifiedExceptionUnmarshaller _instance;
    public static FromEmailAddressNotVerifiedExceptionUnmarshaller Instance { get; }
    private static FromEmailAddressNotVerifiedExceptionUnmarshaller();
    public sealed virtual FromEmailAddressNotVerifiedException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FromEmailAddressNotVerifiedException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static FromEmailAddressNotVerifiedExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetAccountSendingEnabledRequestMarshaller : object {
    private static GetAccountSendingEnabledRequestMarshaller _instance;
    public static GetAccountSendingEnabledRequestMarshaller Instance { get; }
    private static GetAccountSendingEnabledRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAccountSendingEnabledRequest publicRequest);
    internal static GetAccountSendingEnabledRequestMarshaller GetInstance();
    public static GetAccountSendingEnabledRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetAccountSendingEnabledResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetAccountSendingEnabledResponseUnmarshaller _instance;
    public static GetAccountSendingEnabledResponseUnmarshaller Instance { get; }
    private static GetAccountSendingEnabledResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetAccountSendingEnabledResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAccountSendingEnabledResponseUnmarshaller GetInstance();
    public static GetAccountSendingEnabledResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetCustomVerificationEmailTemplateRequestMarshaller : object {
    private static GetCustomVerificationEmailTemplateRequestMarshaller _instance;
    public static GetCustomVerificationEmailTemplateRequestMarshaller Instance { get; }
    private static GetCustomVerificationEmailTemplateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetCustomVerificationEmailTemplateRequest publicRequest);
    internal static GetCustomVerificationEmailTemplateRequestMarshaller GetInstance();
    public static GetCustomVerificationEmailTemplateRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetCustomVerificationEmailTemplateResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetCustomVerificationEmailTemplateResponseUnmarshaller _instance;
    public static GetCustomVerificationEmailTemplateResponseUnmarshaller Instance { get; }
    private static GetCustomVerificationEmailTemplateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetCustomVerificationEmailTemplateResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetCustomVerificationEmailTemplateResponseUnmarshaller GetInstance();
    public static GetCustomVerificationEmailTemplateResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityDkimAttributesRequestMarshaller : object {
    private static GetIdentityDkimAttributesRequestMarshaller _instance;
    public static GetIdentityDkimAttributesRequestMarshaller Instance { get; }
    private static GetIdentityDkimAttributesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIdentityDkimAttributesRequest publicRequest);
    internal static GetIdentityDkimAttributesRequestMarshaller GetInstance();
    public static GetIdentityDkimAttributesRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityDkimAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetIdentityDkimAttributesResponseUnmarshaller _instance;
    public static GetIdentityDkimAttributesResponseUnmarshaller Instance { get; }
    private static GetIdentityDkimAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetIdentityDkimAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIdentityDkimAttributesResponseUnmarshaller GetInstance();
    public static GetIdentityDkimAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityMailFromDomainAttributesRequestMarshaller : object {
    private static GetIdentityMailFromDomainAttributesRequestMarshaller _instance;
    public static GetIdentityMailFromDomainAttributesRequestMarshaller Instance { get; }
    private static GetIdentityMailFromDomainAttributesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIdentityMailFromDomainAttributesRequest publicRequest);
    internal static GetIdentityMailFromDomainAttributesRequestMarshaller GetInstance();
    public static GetIdentityMailFromDomainAttributesRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityMailFromDomainAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetIdentityMailFromDomainAttributesResponseUnmarshaller _instance;
    public static GetIdentityMailFromDomainAttributesResponseUnmarshaller Instance { get; }
    private static GetIdentityMailFromDomainAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetIdentityMailFromDomainAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIdentityMailFromDomainAttributesResponseUnmarshaller GetInstance();
    public static GetIdentityMailFromDomainAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityNotificationAttributesRequestMarshaller : object {
    private static GetIdentityNotificationAttributesRequestMarshaller _instance;
    public static GetIdentityNotificationAttributesRequestMarshaller Instance { get; }
    private static GetIdentityNotificationAttributesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIdentityNotificationAttributesRequest publicRequest);
    internal static GetIdentityNotificationAttributesRequestMarshaller GetInstance();
    public static GetIdentityNotificationAttributesRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityNotificationAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetIdentityNotificationAttributesResponseUnmarshaller _instance;
    public static GetIdentityNotificationAttributesResponseUnmarshaller Instance { get; }
    private static GetIdentityNotificationAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetIdentityNotificationAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIdentityNotificationAttributesResponseUnmarshaller GetInstance();
    public static GetIdentityNotificationAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityPoliciesRequestMarshaller : object {
    private static GetIdentityPoliciesRequestMarshaller _instance;
    public static GetIdentityPoliciesRequestMarshaller Instance { get; }
    private static GetIdentityPoliciesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIdentityPoliciesRequest publicRequest);
    internal static GetIdentityPoliciesRequestMarshaller GetInstance();
    public static GetIdentityPoliciesRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityPoliciesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetIdentityPoliciesResponseUnmarshaller _instance;
    public static GetIdentityPoliciesResponseUnmarshaller Instance { get; }
    private static GetIdentityPoliciesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetIdentityPoliciesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIdentityPoliciesResponseUnmarshaller GetInstance();
    public static GetIdentityPoliciesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityVerificationAttributesRequestMarshaller : object {
    private static GetIdentityVerificationAttributesRequestMarshaller _instance;
    public static GetIdentityVerificationAttributesRequestMarshaller Instance { get; }
    private static GetIdentityVerificationAttributesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIdentityVerificationAttributesRequest publicRequest);
    internal static GetIdentityVerificationAttributesRequestMarshaller GetInstance();
    public static GetIdentityVerificationAttributesRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityVerificationAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetIdentityVerificationAttributesResponseUnmarshaller _instance;
    public static GetIdentityVerificationAttributesResponseUnmarshaller Instance { get; }
    private static GetIdentityVerificationAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetIdentityVerificationAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIdentityVerificationAttributesResponseUnmarshaller GetInstance();
    public static GetIdentityVerificationAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendQuotaRequestMarshaller : object {
    private static GetSendQuotaRequestMarshaller _instance;
    public static GetSendQuotaRequestMarshaller Instance { get; }
    private static GetSendQuotaRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetSendQuotaRequest publicRequest);
    internal static GetSendQuotaRequestMarshaller GetInstance();
    public static GetSendQuotaRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendQuotaResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetSendQuotaResponseUnmarshaller _instance;
    public static GetSendQuotaResponseUnmarshaller Instance { get; }
    private static GetSendQuotaResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetSendQuotaResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetSendQuotaResponseUnmarshaller GetInstance();
    public static GetSendQuotaResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendStatisticsRequestMarshaller : object {
    private static GetSendStatisticsRequestMarshaller _instance;
    public static GetSendStatisticsRequestMarshaller Instance { get; }
    private static GetSendStatisticsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetSendStatisticsRequest publicRequest);
    internal static GetSendStatisticsRequestMarshaller GetInstance();
    public static GetSendStatisticsRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendStatisticsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetSendStatisticsResponseUnmarshaller _instance;
    public static GetSendStatisticsResponseUnmarshaller Instance { get; }
    private static GetSendStatisticsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetSendStatisticsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetSendStatisticsResponseUnmarshaller GetInstance();
    public static GetSendStatisticsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetTemplateRequestMarshaller : object {
    private static GetTemplateRequestMarshaller _instance;
    public static GetTemplateRequestMarshaller Instance { get; }
    private static GetTemplateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTemplateRequest publicRequest);
    internal static GetTemplateRequestMarshaller GetInstance();
    public static GetTemplateRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetTemplateResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetTemplateResponseUnmarshaller _instance;
    public static GetTemplateResponseUnmarshaller Instance { get; }
    private static GetTemplateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetTemplateResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTemplateResponseUnmarshaller GetInstance();
    public static GetTemplateResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityDkimAttributesUnmarshaller : object {
    private static IdentityDkimAttributesUnmarshaller _instance;
    public static IdentityDkimAttributesUnmarshaller Instance { get; }
    private static IdentityDkimAttributesUnmarshaller();
    public sealed virtual IdentityDkimAttributes Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IdentityDkimAttributes Unmarshall(JsonUnmarshallerContext context);
    public static IdentityDkimAttributesUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityMailFromDomainAttributesUnmarshaller : object {
    private static IdentityMailFromDomainAttributesUnmarshaller _instance;
    public static IdentityMailFromDomainAttributesUnmarshaller Instance { get; }
    private static IdentityMailFromDomainAttributesUnmarshaller();
    public sealed virtual IdentityMailFromDomainAttributes Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IdentityMailFromDomainAttributes Unmarshall(JsonUnmarshallerContext context);
    public static IdentityMailFromDomainAttributesUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityNotificationAttributesUnmarshaller : object {
    private static IdentityNotificationAttributesUnmarshaller _instance;
    public static IdentityNotificationAttributesUnmarshaller Instance { get; }
    private static IdentityNotificationAttributesUnmarshaller();
    public sealed virtual IdentityNotificationAttributes Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IdentityNotificationAttributes Unmarshall(JsonUnmarshallerContext context);
    public static IdentityNotificationAttributesUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityVerificationAttributesUnmarshaller : object {
    private static IdentityVerificationAttributesUnmarshaller _instance;
    public static IdentityVerificationAttributesUnmarshaller Instance { get; }
    private static IdentityVerificationAttributesUnmarshaller();
    public sealed virtual IdentityVerificationAttributes Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IdentityVerificationAttributes Unmarshall(JsonUnmarshallerContext context);
    public static IdentityVerificationAttributesUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.InvalidCloudWatchDestinationExceptionUnmarshaller : object {
    private static InvalidCloudWatchDestinationExceptionUnmarshaller _instance;
    public static InvalidCloudWatchDestinationExceptionUnmarshaller Instance { get; }
    private static InvalidCloudWatchDestinationExceptionUnmarshaller();
    public sealed virtual InvalidCloudWatchDestinationException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidCloudWatchDestinationException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidCloudWatchDestinationExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.InvalidConfigurationSetExceptionUnmarshaller : object {
    private static InvalidConfigurationSetExceptionUnmarshaller _instance;
    public static InvalidConfigurationSetExceptionUnmarshaller Instance { get; }
    private static InvalidConfigurationSetExceptionUnmarshaller();
    public sealed virtual InvalidConfigurationSetException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidConfigurationSetException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidConfigurationSetExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.InvalidDeliveryOptionsExceptionUnmarshaller : object {
    private static InvalidDeliveryOptionsExceptionUnmarshaller _instance;
    public static InvalidDeliveryOptionsExceptionUnmarshaller Instance { get; }
    private static InvalidDeliveryOptionsExceptionUnmarshaller();
    public sealed virtual InvalidDeliveryOptionsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidDeliveryOptionsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDeliveryOptionsExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.InvalidFirehoseDestinationExceptionUnmarshaller : object {
    private static InvalidFirehoseDestinationExceptionUnmarshaller _instance;
    public static InvalidFirehoseDestinationExceptionUnmarshaller Instance { get; }
    private static InvalidFirehoseDestinationExceptionUnmarshaller();
    public sealed virtual InvalidFirehoseDestinationException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidFirehoseDestinationException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidFirehoseDestinationExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.InvalidLambdaFunctionExceptionUnmarshaller : object {
    private static InvalidLambdaFunctionExceptionUnmarshaller _instance;
    public static InvalidLambdaFunctionExceptionUnmarshaller Instance { get; }
    private static InvalidLambdaFunctionExceptionUnmarshaller();
    public sealed virtual InvalidLambdaFunctionException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidLambdaFunctionException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidLambdaFunctionExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.InvalidPolicyExceptionUnmarshaller : object {
    private static InvalidPolicyExceptionUnmarshaller _instance;
    public static InvalidPolicyExceptionUnmarshaller Instance { get; }
    private static InvalidPolicyExceptionUnmarshaller();
    public sealed virtual InvalidPolicyException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidPolicyException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidPolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.InvalidRenderingParameterExceptionUnmarshaller : object {
    private static InvalidRenderingParameterExceptionUnmarshaller _instance;
    public static InvalidRenderingParameterExceptionUnmarshaller Instance { get; }
    private static InvalidRenderingParameterExceptionUnmarshaller();
    public sealed virtual InvalidRenderingParameterException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidRenderingParameterException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidRenderingParameterExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.InvalidS3ConfigurationExceptionUnmarshaller : object {
    private static InvalidS3ConfigurationExceptionUnmarshaller _instance;
    public static InvalidS3ConfigurationExceptionUnmarshaller Instance { get; }
    private static InvalidS3ConfigurationExceptionUnmarshaller();
    public sealed virtual InvalidS3ConfigurationException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidS3ConfigurationException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidS3ConfigurationExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.InvalidSNSDestinationExceptionUnmarshaller : object {
    private static InvalidSNSDestinationExceptionUnmarshaller _instance;
    public static InvalidSNSDestinationExceptionUnmarshaller Instance { get; }
    private static InvalidSNSDestinationExceptionUnmarshaller();
    public sealed virtual InvalidSNSDestinationException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidSNSDestinationException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidSNSDestinationExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.InvalidSnsTopicExceptionUnmarshaller : object {
    private static InvalidSnsTopicExceptionUnmarshaller _instance;
    public static InvalidSnsTopicExceptionUnmarshaller Instance { get; }
    private static InvalidSnsTopicExceptionUnmarshaller();
    public sealed virtual InvalidSnsTopicException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidSnsTopicException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidSnsTopicExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.InvalidTemplateExceptionUnmarshaller : object {
    private static InvalidTemplateExceptionUnmarshaller _instance;
    public static InvalidTemplateExceptionUnmarshaller Instance { get; }
    private static InvalidTemplateExceptionUnmarshaller();
    public sealed virtual InvalidTemplateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidTemplateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidTemplateExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.InvalidTrackingOptionsExceptionUnmarshaller : object {
    private static InvalidTrackingOptionsExceptionUnmarshaller _instance;
    public static InvalidTrackingOptionsExceptionUnmarshaller Instance { get; }
    private static InvalidTrackingOptionsExceptionUnmarshaller();
    public sealed virtual InvalidTrackingOptionsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidTrackingOptionsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidTrackingOptionsExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.KinesisFirehoseDestinationUnmarshaller : object {
    private static KinesisFirehoseDestinationUnmarshaller _instance;
    public static KinesisFirehoseDestinationUnmarshaller Instance { get; }
    private static KinesisFirehoseDestinationUnmarshaller();
    public sealed virtual KinesisFirehoseDestination Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KinesisFirehoseDestination Unmarshall(JsonUnmarshallerContext context);
    public static KinesisFirehoseDestinationUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.LambdaActionUnmarshaller : object {
    private static LambdaActionUnmarshaller _instance;
    public static LambdaActionUnmarshaller Instance { get; }
    private static LambdaActionUnmarshaller();
    public sealed virtual LambdaAction Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LambdaAction Unmarshall(JsonUnmarshallerContext context);
    public static LambdaActionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller : object {
    private static LimitExceededExceptionUnmarshaller _instance;
    public static LimitExceededExceptionUnmarshaller Instance { get; }
    private static LimitExceededExceptionUnmarshaller();
    public sealed virtual LimitExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LimitExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static LimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListConfigurationSetsRequestMarshaller : object {
    private static ListConfigurationSetsRequestMarshaller _instance;
    public static ListConfigurationSetsRequestMarshaller Instance { get; }
    private static ListConfigurationSetsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListConfigurationSetsRequest publicRequest);
    internal static ListConfigurationSetsRequestMarshaller GetInstance();
    public static ListConfigurationSetsRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListConfigurationSetsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListConfigurationSetsResponseUnmarshaller _instance;
    public static ListConfigurationSetsResponseUnmarshaller Instance { get; }
    private static ListConfigurationSetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListConfigurationSetsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListConfigurationSetsResponseUnmarshaller GetInstance();
    public static ListConfigurationSetsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListCustomVerificationEmailTemplatesRequestMarshaller : object {
    private static ListCustomVerificationEmailTemplatesRequestMarshaller _instance;
    public static ListCustomVerificationEmailTemplatesRequestMarshaller Instance { get; }
    private static ListCustomVerificationEmailTemplatesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListCustomVerificationEmailTemplatesRequest publicRequest);
    internal static ListCustomVerificationEmailTemplatesRequestMarshaller GetInstance();
    public static ListCustomVerificationEmailTemplatesRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListCustomVerificationEmailTemplatesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListCustomVerificationEmailTemplatesResponseUnmarshaller _instance;
    public static ListCustomVerificationEmailTemplatesResponseUnmarshaller Instance { get; }
    private static ListCustomVerificationEmailTemplatesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListCustomVerificationEmailTemplatesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListCustomVerificationEmailTemplatesResponseUnmarshaller GetInstance();
    public static ListCustomVerificationEmailTemplatesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListIdentitiesRequestMarshaller : object {
    private static ListIdentitiesRequestMarshaller _instance;
    public static ListIdentitiesRequestMarshaller Instance { get; }
    private static ListIdentitiesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListIdentitiesRequest publicRequest);
    internal static ListIdentitiesRequestMarshaller GetInstance();
    public static ListIdentitiesRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListIdentitiesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListIdentitiesResponseUnmarshaller _instance;
    public static ListIdentitiesResponseUnmarshaller Instance { get; }
    private static ListIdentitiesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListIdentitiesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListIdentitiesResponseUnmarshaller GetInstance();
    public static ListIdentitiesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListIdentityPoliciesRequestMarshaller : object {
    private static ListIdentityPoliciesRequestMarshaller _instance;
    public static ListIdentityPoliciesRequestMarshaller Instance { get; }
    private static ListIdentityPoliciesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListIdentityPoliciesRequest publicRequest);
    internal static ListIdentityPoliciesRequestMarshaller GetInstance();
    public static ListIdentityPoliciesRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListIdentityPoliciesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListIdentityPoliciesResponseUnmarshaller _instance;
    public static ListIdentityPoliciesResponseUnmarshaller Instance { get; }
    private static ListIdentityPoliciesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListIdentityPoliciesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListIdentityPoliciesResponseUnmarshaller GetInstance();
    public static ListIdentityPoliciesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListReceiptFiltersRequestMarshaller : object {
    private static ListReceiptFiltersRequestMarshaller _instance;
    public static ListReceiptFiltersRequestMarshaller Instance { get; }
    private static ListReceiptFiltersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListReceiptFiltersRequest publicRequest);
    internal static ListReceiptFiltersRequestMarshaller GetInstance();
    public static ListReceiptFiltersRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListReceiptFiltersResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListReceiptFiltersResponseUnmarshaller _instance;
    public static ListReceiptFiltersResponseUnmarshaller Instance { get; }
    private static ListReceiptFiltersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListReceiptFiltersResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListReceiptFiltersResponseUnmarshaller GetInstance();
    public static ListReceiptFiltersResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListReceiptRuleSetsRequestMarshaller : object {
    private static ListReceiptRuleSetsRequestMarshaller _instance;
    public static ListReceiptRuleSetsRequestMarshaller Instance { get; }
    private static ListReceiptRuleSetsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListReceiptRuleSetsRequest publicRequest);
    internal static ListReceiptRuleSetsRequestMarshaller GetInstance();
    public static ListReceiptRuleSetsRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListReceiptRuleSetsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListReceiptRuleSetsResponseUnmarshaller _instance;
    public static ListReceiptRuleSetsResponseUnmarshaller Instance { get; }
    private static ListReceiptRuleSetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListReceiptRuleSetsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListReceiptRuleSetsResponseUnmarshaller GetInstance();
    public static ListReceiptRuleSetsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListTemplatesRequestMarshaller : object {
    private static ListTemplatesRequestMarshaller _instance;
    public static ListTemplatesRequestMarshaller Instance { get; }
    private static ListTemplatesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTemplatesRequest publicRequest);
    internal static ListTemplatesRequestMarshaller GetInstance();
    public static ListTemplatesRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListTemplatesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListTemplatesResponseUnmarshaller _instance;
    public static ListTemplatesResponseUnmarshaller Instance { get; }
    private static ListTemplatesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListTemplatesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTemplatesResponseUnmarshaller GetInstance();
    public static ListTemplatesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListVerifiedEmailAddressesRequestMarshaller : object {
    private static ListVerifiedEmailAddressesRequestMarshaller _instance;
    public static ListVerifiedEmailAddressesRequestMarshaller Instance { get; }
    private static ListVerifiedEmailAddressesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListVerifiedEmailAddressesRequest publicRequest);
    internal static ListVerifiedEmailAddressesRequestMarshaller GetInstance();
    public static ListVerifiedEmailAddressesRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListVerifiedEmailAddressesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListVerifiedEmailAddressesResponseUnmarshaller _instance;
    public static ListVerifiedEmailAddressesResponseUnmarshaller Instance { get; }
    private static ListVerifiedEmailAddressesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListVerifiedEmailAddressesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListVerifiedEmailAddressesResponseUnmarshaller GetInstance();
    public static ListVerifiedEmailAddressesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.MailFromDomainNotVerifiedExceptionUnmarshaller : object {
    private static MailFromDomainNotVerifiedExceptionUnmarshaller _instance;
    public static MailFromDomainNotVerifiedExceptionUnmarshaller Instance { get; }
    private static MailFromDomainNotVerifiedExceptionUnmarshaller();
    public sealed virtual MailFromDomainNotVerifiedException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MailFromDomainNotVerifiedException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static MailFromDomainNotVerifiedExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.MessageRejectedExceptionUnmarshaller : object {
    private static MessageRejectedExceptionUnmarshaller _instance;
    public static MessageRejectedExceptionUnmarshaller Instance { get; }
    private static MessageRejectedExceptionUnmarshaller();
    public sealed virtual MessageRejectedException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MessageRejectedException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static MessageRejectedExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.MissingRenderingAttributeExceptionUnmarshaller : object {
    private static MissingRenderingAttributeExceptionUnmarshaller _instance;
    public static MissingRenderingAttributeExceptionUnmarshaller Instance { get; }
    private static MissingRenderingAttributeExceptionUnmarshaller();
    public sealed virtual MissingRenderingAttributeException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MissingRenderingAttributeException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static MissingRenderingAttributeExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ProductionAccessNotGrantedExceptionUnmarshaller : object {
    private static ProductionAccessNotGrantedExceptionUnmarshaller _instance;
    public static ProductionAccessNotGrantedExceptionUnmarshaller Instance { get; }
    private static ProductionAccessNotGrantedExceptionUnmarshaller();
    public sealed virtual ProductionAccessNotGrantedException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ProductionAccessNotGrantedException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static ProductionAccessNotGrantedExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.PutConfigurationSetDeliveryOptionsRequestMarshaller : object {
    private static PutConfigurationSetDeliveryOptionsRequestMarshaller _instance;
    public static PutConfigurationSetDeliveryOptionsRequestMarshaller Instance { get; }
    private static PutConfigurationSetDeliveryOptionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutConfigurationSetDeliveryOptionsRequest publicRequest);
    internal static PutConfigurationSetDeliveryOptionsRequestMarshaller GetInstance();
    public static PutConfigurationSetDeliveryOptionsRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.PutConfigurationSetDeliveryOptionsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutConfigurationSetDeliveryOptionsResponseUnmarshaller _instance;
    public static PutConfigurationSetDeliveryOptionsResponseUnmarshaller Instance { get; }
    private static PutConfigurationSetDeliveryOptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PutConfigurationSetDeliveryOptionsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutConfigurationSetDeliveryOptionsResponseUnmarshaller GetInstance();
    public static PutConfigurationSetDeliveryOptionsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.PutIdentityPolicyRequestMarshaller : object {
    private static PutIdentityPolicyRequestMarshaller _instance;
    public static PutIdentityPolicyRequestMarshaller Instance { get; }
    private static PutIdentityPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutIdentityPolicyRequest publicRequest);
    internal static PutIdentityPolicyRequestMarshaller GetInstance();
    public static PutIdentityPolicyRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.PutIdentityPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutIdentityPolicyResponseUnmarshaller _instance;
    public static PutIdentityPolicyResponseUnmarshaller Instance { get; }
    private static PutIdentityPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PutIdentityPolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutIdentityPolicyResponseUnmarshaller GetInstance();
    public static PutIdentityPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptActionUnmarshaller : object {
    private static ReceiptActionUnmarshaller _instance;
    public static ReceiptActionUnmarshaller Instance { get; }
    private static ReceiptActionUnmarshaller();
    public sealed virtual ReceiptAction Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReceiptAction Unmarshall(JsonUnmarshallerContext context);
    public static ReceiptActionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptFilterUnmarshaller : object {
    private static ReceiptFilterUnmarshaller _instance;
    public static ReceiptFilterUnmarshaller Instance { get; }
    private static ReceiptFilterUnmarshaller();
    public sealed virtual ReceiptFilter Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReceiptFilter Unmarshall(JsonUnmarshallerContext context);
    public static ReceiptFilterUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptIpFilterUnmarshaller : object {
    private static ReceiptIpFilterUnmarshaller _instance;
    public static ReceiptIpFilterUnmarshaller Instance { get; }
    private static ReceiptIpFilterUnmarshaller();
    public sealed virtual ReceiptIpFilter Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReceiptIpFilter Unmarshall(JsonUnmarshallerContext context);
    public static ReceiptIpFilterUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptRuleSetMetadataUnmarshaller : object {
    private static ReceiptRuleSetMetadataUnmarshaller _instance;
    public static ReceiptRuleSetMetadataUnmarshaller Instance { get; }
    private static ReceiptRuleSetMetadataUnmarshaller();
    public sealed virtual ReceiptRuleSetMetadata Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReceiptRuleSetMetadata Unmarshall(JsonUnmarshallerContext context);
    public static ReceiptRuleSetMetadataUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptRuleUnmarshaller : object {
    private static ReceiptRuleUnmarshaller _instance;
    public static ReceiptRuleUnmarshaller Instance { get; }
    private static ReceiptRuleUnmarshaller();
    public sealed virtual ReceiptRule Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReceiptRule Unmarshall(JsonUnmarshallerContext context);
    public static ReceiptRuleUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReorderReceiptRuleSetRequestMarshaller : object {
    private static ReorderReceiptRuleSetRequestMarshaller _instance;
    public static ReorderReceiptRuleSetRequestMarshaller Instance { get; }
    private static ReorderReceiptRuleSetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReorderReceiptRuleSetRequest publicRequest);
    internal static ReorderReceiptRuleSetRequestMarshaller GetInstance();
    public static ReorderReceiptRuleSetRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReorderReceiptRuleSetResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ReorderReceiptRuleSetResponseUnmarshaller _instance;
    public static ReorderReceiptRuleSetResponseUnmarshaller Instance { get; }
    private static ReorderReceiptRuleSetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ReorderReceiptRuleSetResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReorderReceiptRuleSetResponseUnmarshaller GetInstance();
    public static ReorderReceiptRuleSetResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReputationOptionsUnmarshaller : object {
    private static ReputationOptionsUnmarshaller _instance;
    public static ReputationOptionsUnmarshaller Instance { get; }
    private static ReputationOptionsUnmarshaller();
    public sealed virtual ReputationOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReputationOptions Unmarshall(JsonUnmarshallerContext context);
    public static ReputationOptionsUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.RuleDoesNotExistExceptionUnmarshaller : object {
    private static RuleDoesNotExistExceptionUnmarshaller _instance;
    public static RuleDoesNotExistExceptionUnmarshaller Instance { get; }
    private static RuleDoesNotExistExceptionUnmarshaller();
    public sealed virtual RuleDoesNotExistException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RuleDoesNotExistException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static RuleDoesNotExistExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.RuleSetDoesNotExistExceptionUnmarshaller : object {
    private static RuleSetDoesNotExistExceptionUnmarshaller _instance;
    public static RuleSetDoesNotExistExceptionUnmarshaller Instance { get; }
    private static RuleSetDoesNotExistExceptionUnmarshaller();
    public sealed virtual RuleSetDoesNotExistException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RuleSetDoesNotExistException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static RuleSetDoesNotExistExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.S3ActionUnmarshaller : object {
    private static S3ActionUnmarshaller _instance;
    public static S3ActionUnmarshaller Instance { get; }
    private static S3ActionUnmarshaller();
    public sealed virtual S3Action Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3Action Unmarshall(JsonUnmarshallerContext context);
    public static S3ActionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendBounceRequestMarshaller : object {
    private static SendBounceRequestMarshaller _instance;
    public static SendBounceRequestMarshaller Instance { get; }
    private static SendBounceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SendBounceRequest publicRequest);
    internal static SendBounceRequestMarshaller GetInstance();
    public static SendBounceRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendBounceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SendBounceResponseUnmarshaller _instance;
    public static SendBounceResponseUnmarshaller Instance { get; }
    private static SendBounceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SendBounceResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SendBounceResponseUnmarshaller GetInstance();
    public static SendBounceResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendBulkTemplatedEmailRequestMarshaller : object {
    private static SendBulkTemplatedEmailRequestMarshaller _instance;
    public static SendBulkTemplatedEmailRequestMarshaller Instance { get; }
    private static SendBulkTemplatedEmailRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SendBulkTemplatedEmailRequest publicRequest);
    internal static SendBulkTemplatedEmailRequestMarshaller GetInstance();
    public static SendBulkTemplatedEmailRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendBulkTemplatedEmailResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SendBulkTemplatedEmailResponseUnmarshaller _instance;
    public static SendBulkTemplatedEmailResponseUnmarshaller Instance { get; }
    private static SendBulkTemplatedEmailResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SendBulkTemplatedEmailResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SendBulkTemplatedEmailResponseUnmarshaller GetInstance();
    public static SendBulkTemplatedEmailResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendCustomVerificationEmailRequestMarshaller : object {
    private static SendCustomVerificationEmailRequestMarshaller _instance;
    public static SendCustomVerificationEmailRequestMarshaller Instance { get; }
    private static SendCustomVerificationEmailRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SendCustomVerificationEmailRequest publicRequest);
    internal static SendCustomVerificationEmailRequestMarshaller GetInstance();
    public static SendCustomVerificationEmailRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendCustomVerificationEmailResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SendCustomVerificationEmailResponseUnmarshaller _instance;
    public static SendCustomVerificationEmailResponseUnmarshaller Instance { get; }
    private static SendCustomVerificationEmailResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SendCustomVerificationEmailResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SendCustomVerificationEmailResponseUnmarshaller GetInstance();
    public static SendCustomVerificationEmailResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendDataPointUnmarshaller : object {
    private static SendDataPointUnmarshaller _instance;
    public static SendDataPointUnmarshaller Instance { get; }
    private static SendDataPointUnmarshaller();
    public sealed virtual SendDataPoint Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SendDataPoint Unmarshall(JsonUnmarshallerContext context);
    public static SendDataPointUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendEmailRequestMarshaller : object {
    private static SendEmailRequestMarshaller _instance;
    public static SendEmailRequestMarshaller Instance { get; }
    private static SendEmailRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SendEmailRequest publicRequest);
    internal static SendEmailRequestMarshaller GetInstance();
    public static SendEmailRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendEmailResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SendEmailResponseUnmarshaller _instance;
    public static SendEmailResponseUnmarshaller Instance { get; }
    private static SendEmailResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SendEmailResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SendEmailResponseUnmarshaller GetInstance();
    public static SendEmailResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendRawEmailRequestMarshaller : object {
    private static SendRawEmailRequestMarshaller _instance;
    public static SendRawEmailRequestMarshaller Instance { get; }
    private static SendRawEmailRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SendRawEmailRequest publicRequest);
    internal static SendRawEmailRequestMarshaller GetInstance();
    public static SendRawEmailRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendRawEmailResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SendRawEmailResponseUnmarshaller _instance;
    public static SendRawEmailResponseUnmarshaller Instance { get; }
    private static SendRawEmailResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SendRawEmailResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SendRawEmailResponseUnmarshaller GetInstance();
    public static SendRawEmailResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendTemplatedEmailRequestMarshaller : object {
    private static SendTemplatedEmailRequestMarshaller _instance;
    public static SendTemplatedEmailRequestMarshaller Instance { get; }
    private static SendTemplatedEmailRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SendTemplatedEmailRequest publicRequest);
    internal static SendTemplatedEmailRequestMarshaller GetInstance();
    public static SendTemplatedEmailRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendTemplatedEmailResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SendTemplatedEmailResponseUnmarshaller _instance;
    public static SendTemplatedEmailResponseUnmarshaller Instance { get; }
    private static SendTemplatedEmailResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SendTemplatedEmailResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SendTemplatedEmailResponseUnmarshaller GetInstance();
    public static SendTemplatedEmailResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetActiveReceiptRuleSetRequestMarshaller : object {
    private static SetActiveReceiptRuleSetRequestMarshaller _instance;
    public static SetActiveReceiptRuleSetRequestMarshaller Instance { get; }
    private static SetActiveReceiptRuleSetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetActiveReceiptRuleSetRequest publicRequest);
    internal static SetActiveReceiptRuleSetRequestMarshaller GetInstance();
    public static SetActiveReceiptRuleSetRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetActiveReceiptRuleSetResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetActiveReceiptRuleSetResponseUnmarshaller _instance;
    public static SetActiveReceiptRuleSetResponseUnmarshaller Instance { get; }
    private static SetActiveReceiptRuleSetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetActiveReceiptRuleSetResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetActiveReceiptRuleSetResponseUnmarshaller GetInstance();
    public static SetActiveReceiptRuleSetResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityDkimEnabledRequestMarshaller : object {
    private static SetIdentityDkimEnabledRequestMarshaller _instance;
    public static SetIdentityDkimEnabledRequestMarshaller Instance { get; }
    private static SetIdentityDkimEnabledRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetIdentityDkimEnabledRequest publicRequest);
    internal static SetIdentityDkimEnabledRequestMarshaller GetInstance();
    public static SetIdentityDkimEnabledRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityDkimEnabledResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetIdentityDkimEnabledResponseUnmarshaller _instance;
    public static SetIdentityDkimEnabledResponseUnmarshaller Instance { get; }
    private static SetIdentityDkimEnabledResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetIdentityDkimEnabledResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetIdentityDkimEnabledResponseUnmarshaller GetInstance();
    public static SetIdentityDkimEnabledResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityFeedbackForwardingEnabledRequestMarshaller : object {
    private static SetIdentityFeedbackForwardingEnabledRequestMarshaller _instance;
    public static SetIdentityFeedbackForwardingEnabledRequestMarshaller Instance { get; }
    private static SetIdentityFeedbackForwardingEnabledRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetIdentityFeedbackForwardingEnabledRequest publicRequest);
    internal static SetIdentityFeedbackForwardingEnabledRequestMarshaller GetInstance();
    public static SetIdentityFeedbackForwardingEnabledRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityFeedbackForwardingEnabledResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetIdentityFeedbackForwardingEnabledResponseUnmarshaller _instance;
    public static SetIdentityFeedbackForwardingEnabledResponseUnmarshaller Instance { get; }
    private static SetIdentityFeedbackForwardingEnabledResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetIdentityFeedbackForwardingEnabledResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetIdentityFeedbackForwardingEnabledResponseUnmarshaller GetInstance();
    public static SetIdentityFeedbackForwardingEnabledResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityHeadersInNotificationsEnabledRequestMarshaller : object {
    private static SetIdentityHeadersInNotificationsEnabledRequestMarshaller _instance;
    public static SetIdentityHeadersInNotificationsEnabledRequestMarshaller Instance { get; }
    private static SetIdentityHeadersInNotificationsEnabledRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetIdentityHeadersInNotificationsEnabledRequest publicRequest);
    internal static SetIdentityHeadersInNotificationsEnabledRequestMarshaller GetInstance();
    public static SetIdentityHeadersInNotificationsEnabledRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityHeadersInNotificationsEnabledResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetIdentityHeadersInNotificationsEnabledResponseUnmarshaller _instance;
    public static SetIdentityHeadersInNotificationsEnabledResponseUnmarshaller Instance { get; }
    private static SetIdentityHeadersInNotificationsEnabledResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetIdentityHeadersInNotificationsEnabledResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetIdentityHeadersInNotificationsEnabledResponseUnmarshaller GetInstance();
    public static SetIdentityHeadersInNotificationsEnabledResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityMailFromDomainRequestMarshaller : object {
    private static SetIdentityMailFromDomainRequestMarshaller _instance;
    public static SetIdentityMailFromDomainRequestMarshaller Instance { get; }
    private static SetIdentityMailFromDomainRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetIdentityMailFromDomainRequest publicRequest);
    internal static SetIdentityMailFromDomainRequestMarshaller GetInstance();
    public static SetIdentityMailFromDomainRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityMailFromDomainResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetIdentityMailFromDomainResponseUnmarshaller _instance;
    public static SetIdentityMailFromDomainResponseUnmarshaller Instance { get; }
    private static SetIdentityMailFromDomainResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetIdentityMailFromDomainResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetIdentityMailFromDomainResponseUnmarshaller GetInstance();
    public static SetIdentityMailFromDomainResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityNotificationTopicRequestMarshaller : object {
    private static SetIdentityNotificationTopicRequestMarshaller _instance;
    public static SetIdentityNotificationTopicRequestMarshaller Instance { get; }
    private static SetIdentityNotificationTopicRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetIdentityNotificationTopicRequest publicRequest);
    internal static SetIdentityNotificationTopicRequestMarshaller GetInstance();
    public static SetIdentityNotificationTopicRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityNotificationTopicResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetIdentityNotificationTopicResponseUnmarshaller _instance;
    public static SetIdentityNotificationTopicResponseUnmarshaller Instance { get; }
    private static SetIdentityNotificationTopicResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetIdentityNotificationTopicResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetIdentityNotificationTopicResponseUnmarshaller GetInstance();
    public static SetIdentityNotificationTopicResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetReceiptRulePositionRequestMarshaller : object {
    private static SetReceiptRulePositionRequestMarshaller _instance;
    public static SetReceiptRulePositionRequestMarshaller Instance { get; }
    private static SetReceiptRulePositionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetReceiptRulePositionRequest publicRequest);
    internal static SetReceiptRulePositionRequestMarshaller GetInstance();
    public static SetReceiptRulePositionRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetReceiptRulePositionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetReceiptRulePositionResponseUnmarshaller _instance;
    public static SetReceiptRulePositionResponseUnmarshaller Instance { get; }
    private static SetReceiptRulePositionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetReceiptRulePositionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetReceiptRulePositionResponseUnmarshaller GetInstance();
    public static SetReceiptRulePositionResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SNSActionUnmarshaller : object {
    private static SNSActionUnmarshaller _instance;
    public static SNSActionUnmarshaller Instance { get; }
    private static SNSActionUnmarshaller();
    public sealed virtual SNSAction Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SNSAction Unmarshall(JsonUnmarshallerContext context);
    public static SNSActionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SNSDestinationUnmarshaller : object {
    private static SNSDestinationUnmarshaller _instance;
    public static SNSDestinationUnmarshaller Instance { get; }
    private static SNSDestinationUnmarshaller();
    public sealed virtual SNSDestination Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SNSDestination Unmarshall(JsonUnmarshallerContext context);
    public static SNSDestinationUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.StopActionUnmarshaller : object {
    private static StopActionUnmarshaller _instance;
    public static StopActionUnmarshaller Instance { get; }
    private static StopActionUnmarshaller();
    public sealed virtual StopAction Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StopAction Unmarshall(JsonUnmarshallerContext context);
    public static StopActionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.TemplateDoesNotExistExceptionUnmarshaller : object {
    private static TemplateDoesNotExistExceptionUnmarshaller _instance;
    public static TemplateDoesNotExistExceptionUnmarshaller Instance { get; }
    private static TemplateDoesNotExistExceptionUnmarshaller();
    public sealed virtual TemplateDoesNotExistException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TemplateDoesNotExistException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TemplateDoesNotExistExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.TemplateMetadataUnmarshaller : object {
    private static TemplateMetadataUnmarshaller _instance;
    public static TemplateMetadataUnmarshaller Instance { get; }
    private static TemplateMetadataUnmarshaller();
    public sealed virtual TemplateMetadata Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TemplateMetadata Unmarshall(JsonUnmarshallerContext context);
    public static TemplateMetadataUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.TemplateUnmarshaller : object {
    private static TemplateUnmarshaller _instance;
    public static TemplateUnmarshaller Instance { get; }
    private static TemplateUnmarshaller();
    public sealed virtual Template Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Template Unmarshall(JsonUnmarshallerContext context);
    public static TemplateUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.TestRenderTemplateRequestMarshaller : object {
    private static TestRenderTemplateRequestMarshaller _instance;
    public static TestRenderTemplateRequestMarshaller Instance { get; }
    private static TestRenderTemplateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TestRenderTemplateRequest publicRequest);
    internal static TestRenderTemplateRequestMarshaller GetInstance();
    public static TestRenderTemplateRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.TestRenderTemplateResponseUnmarshaller : XmlResponseUnmarshaller {
    private static TestRenderTemplateResponseUnmarshaller _instance;
    public static TestRenderTemplateResponseUnmarshaller Instance { get; }
    private static TestRenderTemplateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, TestRenderTemplateResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TestRenderTemplateResponseUnmarshaller GetInstance();
    public static TestRenderTemplateResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.TrackingOptionsAlreadyExistsExceptionUnmarshaller : object {
    private static TrackingOptionsAlreadyExistsExceptionUnmarshaller _instance;
    public static TrackingOptionsAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static TrackingOptionsAlreadyExistsExceptionUnmarshaller();
    public sealed virtual TrackingOptionsAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TrackingOptionsAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TrackingOptionsAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.TrackingOptionsDoesNotExistExceptionUnmarshaller : object {
    private static TrackingOptionsDoesNotExistExceptionUnmarshaller _instance;
    public static TrackingOptionsDoesNotExistExceptionUnmarshaller Instance { get; }
    private static TrackingOptionsDoesNotExistExceptionUnmarshaller();
    public sealed virtual TrackingOptionsDoesNotExistException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TrackingOptionsDoesNotExistException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TrackingOptionsDoesNotExistExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.TrackingOptionsUnmarshaller : object {
    private static TrackingOptionsUnmarshaller _instance;
    public static TrackingOptionsUnmarshaller Instance { get; }
    private static TrackingOptionsUnmarshaller();
    public sealed virtual TrackingOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TrackingOptions Unmarshall(JsonUnmarshallerContext context);
    public static TrackingOptionsUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateAccountSendingEnabledRequestMarshaller : object {
    private static UpdateAccountSendingEnabledRequestMarshaller _instance;
    public static UpdateAccountSendingEnabledRequestMarshaller Instance { get; }
    private static UpdateAccountSendingEnabledRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateAccountSendingEnabledRequest publicRequest);
    internal static UpdateAccountSendingEnabledRequestMarshaller GetInstance();
    public static UpdateAccountSendingEnabledRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateAccountSendingEnabledResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateAccountSendingEnabledResponseUnmarshaller _instance;
    public static UpdateAccountSendingEnabledResponseUnmarshaller Instance { get; }
    private static UpdateAccountSendingEnabledResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateAccountSendingEnabledResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateAccountSendingEnabledResponseUnmarshaller GetInstance();
    public static UpdateAccountSendingEnabledResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateConfigurationSetEventDestinationRequestMarshaller : object {
    private static UpdateConfigurationSetEventDestinationRequestMarshaller _instance;
    public static UpdateConfigurationSetEventDestinationRequestMarshaller Instance { get; }
    private static UpdateConfigurationSetEventDestinationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateConfigurationSetEventDestinationRequest publicRequest);
    internal static UpdateConfigurationSetEventDestinationRequestMarshaller GetInstance();
    public static UpdateConfigurationSetEventDestinationRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateConfigurationSetEventDestinationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateConfigurationSetEventDestinationResponseUnmarshaller _instance;
    public static UpdateConfigurationSetEventDestinationResponseUnmarshaller Instance { get; }
    private static UpdateConfigurationSetEventDestinationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateConfigurationSetEventDestinationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateConfigurationSetEventDestinationResponseUnmarshaller GetInstance();
    public static UpdateConfigurationSetEventDestinationResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateConfigurationSetReputationMetricsEnabledRequestMarshaller : object {
    private static UpdateConfigurationSetReputationMetricsEnabledRequestMarshaller _instance;
    public static UpdateConfigurationSetReputationMetricsEnabledRequestMarshaller Instance { get; }
    private static UpdateConfigurationSetReputationMetricsEnabledRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateConfigurationSetReputationMetricsEnabledRequest publicRequest);
    internal static UpdateConfigurationSetReputationMetricsEnabledRequestMarshaller GetInstance();
    public static UpdateConfigurationSetReputationMetricsEnabledRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateConfigurationSetReputationMetricsEnabledResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateConfigurationSetReputationMetricsEnabledResponseUnmarshaller _instance;
    public static UpdateConfigurationSetReputationMetricsEnabledResponseUnmarshaller Instance { get; }
    private static UpdateConfigurationSetReputationMetricsEnabledResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateConfigurationSetReputationMetricsEnabledResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateConfigurationSetReputationMetricsEnabledResponseUnmarshaller GetInstance();
    public static UpdateConfigurationSetReputationMetricsEnabledResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateConfigurationSetSendingEnabledRequestMarshaller : object {
    private static UpdateConfigurationSetSendingEnabledRequestMarshaller _instance;
    public static UpdateConfigurationSetSendingEnabledRequestMarshaller Instance { get; }
    private static UpdateConfigurationSetSendingEnabledRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateConfigurationSetSendingEnabledRequest publicRequest);
    internal static UpdateConfigurationSetSendingEnabledRequestMarshaller GetInstance();
    public static UpdateConfigurationSetSendingEnabledRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateConfigurationSetSendingEnabledResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateConfigurationSetSendingEnabledResponseUnmarshaller _instance;
    public static UpdateConfigurationSetSendingEnabledResponseUnmarshaller Instance { get; }
    private static UpdateConfigurationSetSendingEnabledResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateConfigurationSetSendingEnabledResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateConfigurationSetSendingEnabledResponseUnmarshaller GetInstance();
    public static UpdateConfigurationSetSendingEnabledResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateConfigurationSetTrackingOptionsRequestMarshaller : object {
    private static UpdateConfigurationSetTrackingOptionsRequestMarshaller _instance;
    public static UpdateConfigurationSetTrackingOptionsRequestMarshaller Instance { get; }
    private static UpdateConfigurationSetTrackingOptionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateConfigurationSetTrackingOptionsRequest publicRequest);
    internal static UpdateConfigurationSetTrackingOptionsRequestMarshaller GetInstance();
    public static UpdateConfigurationSetTrackingOptionsRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateConfigurationSetTrackingOptionsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateConfigurationSetTrackingOptionsResponseUnmarshaller _instance;
    public static UpdateConfigurationSetTrackingOptionsResponseUnmarshaller Instance { get; }
    private static UpdateConfigurationSetTrackingOptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateConfigurationSetTrackingOptionsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateConfigurationSetTrackingOptionsResponseUnmarshaller GetInstance();
    public static UpdateConfigurationSetTrackingOptionsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateCustomVerificationEmailTemplateRequestMarshaller : object {
    private static UpdateCustomVerificationEmailTemplateRequestMarshaller _instance;
    public static UpdateCustomVerificationEmailTemplateRequestMarshaller Instance { get; }
    private static UpdateCustomVerificationEmailTemplateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateCustomVerificationEmailTemplateRequest publicRequest);
    internal static UpdateCustomVerificationEmailTemplateRequestMarshaller GetInstance();
    public static UpdateCustomVerificationEmailTemplateRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateCustomVerificationEmailTemplateResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateCustomVerificationEmailTemplateResponseUnmarshaller _instance;
    public static UpdateCustomVerificationEmailTemplateResponseUnmarshaller Instance { get; }
    private static UpdateCustomVerificationEmailTemplateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateCustomVerificationEmailTemplateResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateCustomVerificationEmailTemplateResponseUnmarshaller GetInstance();
    public static UpdateCustomVerificationEmailTemplateResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateReceiptRuleRequestMarshaller : object {
    private static UpdateReceiptRuleRequestMarshaller _instance;
    public static UpdateReceiptRuleRequestMarshaller Instance { get; }
    private static UpdateReceiptRuleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateReceiptRuleRequest publicRequest);
    internal static UpdateReceiptRuleRequestMarshaller GetInstance();
    public static UpdateReceiptRuleRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateReceiptRuleResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateReceiptRuleResponseUnmarshaller _instance;
    public static UpdateReceiptRuleResponseUnmarshaller Instance { get; }
    private static UpdateReceiptRuleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateReceiptRuleResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateReceiptRuleResponseUnmarshaller GetInstance();
    public static UpdateReceiptRuleResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateTemplateRequestMarshaller : object {
    private static UpdateTemplateRequestMarshaller _instance;
    public static UpdateTemplateRequestMarshaller Instance { get; }
    private static UpdateTemplateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateTemplateRequest publicRequest);
    internal static UpdateTemplateRequestMarshaller GetInstance();
    public static UpdateTemplateRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateTemplateResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateTemplateResponseUnmarshaller _instance;
    public static UpdateTemplateResponseUnmarshaller Instance { get; }
    private static UpdateTemplateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateTemplateResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateTemplateResponseUnmarshaller GetInstance();
    public static UpdateTemplateResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainDkimRequestMarshaller : object {
    private static VerifyDomainDkimRequestMarshaller _instance;
    public static VerifyDomainDkimRequestMarshaller Instance { get; }
    private static VerifyDomainDkimRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(VerifyDomainDkimRequest publicRequest);
    internal static VerifyDomainDkimRequestMarshaller GetInstance();
    public static VerifyDomainDkimRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainDkimResponseUnmarshaller : XmlResponseUnmarshaller {
    private static VerifyDomainDkimResponseUnmarshaller _instance;
    public static VerifyDomainDkimResponseUnmarshaller Instance { get; }
    private static VerifyDomainDkimResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, VerifyDomainDkimResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static VerifyDomainDkimResponseUnmarshaller GetInstance();
    public static VerifyDomainDkimResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainIdentityRequestMarshaller : object {
    private static VerifyDomainIdentityRequestMarshaller _instance;
    public static VerifyDomainIdentityRequestMarshaller Instance { get; }
    private static VerifyDomainIdentityRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(VerifyDomainIdentityRequest publicRequest);
    internal static VerifyDomainIdentityRequestMarshaller GetInstance();
    public static VerifyDomainIdentityRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainIdentityResponseUnmarshaller : XmlResponseUnmarshaller {
    private static VerifyDomainIdentityResponseUnmarshaller _instance;
    public static VerifyDomainIdentityResponseUnmarshaller Instance { get; }
    private static VerifyDomainIdentityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, VerifyDomainIdentityResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static VerifyDomainIdentityResponseUnmarshaller GetInstance();
    public static VerifyDomainIdentityResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailAddressRequestMarshaller : object {
    private static VerifyEmailAddressRequestMarshaller _instance;
    public static VerifyEmailAddressRequestMarshaller Instance { get; }
    private static VerifyEmailAddressRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(VerifyEmailAddressRequest publicRequest);
    internal static VerifyEmailAddressRequestMarshaller GetInstance();
    public static VerifyEmailAddressRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailAddressResponseUnmarshaller : XmlResponseUnmarshaller {
    private static VerifyEmailAddressResponseUnmarshaller _instance;
    public static VerifyEmailAddressResponseUnmarshaller Instance { get; }
    private static VerifyEmailAddressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, VerifyEmailAddressResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static VerifyEmailAddressResponseUnmarshaller GetInstance();
    public static VerifyEmailAddressResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailIdentityRequestMarshaller : object {
    private static VerifyEmailIdentityRequestMarshaller _instance;
    public static VerifyEmailIdentityRequestMarshaller Instance { get; }
    private static VerifyEmailIdentityRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(VerifyEmailIdentityRequest publicRequest);
    internal static VerifyEmailIdentityRequestMarshaller GetInstance();
    public static VerifyEmailIdentityRequestMarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailIdentityResponseUnmarshaller : XmlResponseUnmarshaller {
    private static VerifyEmailIdentityResponseUnmarshaller _instance;
    public static VerifyEmailIdentityResponseUnmarshaller Instance { get; }
    private static VerifyEmailIdentityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, VerifyEmailIdentityResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static VerifyEmailIdentityResponseUnmarshaller GetInstance();
    public static VerifyEmailIdentityResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.WorkmailActionUnmarshaller : object {
    private static WorkmailActionUnmarshaller _instance;
    public static WorkmailActionUnmarshaller Instance { get; }
    private static WorkmailActionUnmarshaller();
    public sealed virtual WorkmailAction Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual WorkmailAction Unmarshall(JsonUnmarshallerContext context);
    public static WorkmailActionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.InvalidCloudWatchDestinationException : AmazonSimpleEmailServiceException {
    private string _configurationSetName;
    private string _eventDestinationName;
    public string ConfigurationSetName { get; public set; }
    public string EventDestinationName { get; public set; }
    public InvalidCloudWatchDestinationException(string message);
    public InvalidCloudWatchDestinationException(string message, Exception innerException);
    public InvalidCloudWatchDestinationException(Exception innerException);
    public InvalidCloudWatchDestinationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidCloudWatchDestinationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
    public string get_EventDestinationName();
    public void set_EventDestinationName(string value);
    internal bool IsSetEventDestinationName();
}
public class Amazon.SimpleEmail.Model.InvalidConfigurationSetException : AmazonSimpleEmailServiceException {
    public InvalidConfigurationSetException(string message);
    public InvalidConfigurationSetException(string message, Exception innerException);
    public InvalidConfigurationSetException(Exception innerException);
    public InvalidConfigurationSetException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidConfigurationSetException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleEmail.Model.InvalidDeliveryOptionsException : AmazonSimpleEmailServiceException {
    public InvalidDeliveryOptionsException(string message);
    public InvalidDeliveryOptionsException(string message, Exception innerException);
    public InvalidDeliveryOptionsException(Exception innerException);
    public InvalidDeliveryOptionsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDeliveryOptionsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleEmail.Model.InvalidFirehoseDestinationException : AmazonSimpleEmailServiceException {
    private string _configurationSetName;
    private string _eventDestinationName;
    public string ConfigurationSetName { get; public set; }
    public string EventDestinationName { get; public set; }
    public InvalidFirehoseDestinationException(string message);
    public InvalidFirehoseDestinationException(string message, Exception innerException);
    public InvalidFirehoseDestinationException(Exception innerException);
    public InvalidFirehoseDestinationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidFirehoseDestinationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
    public string get_EventDestinationName();
    public void set_EventDestinationName(string value);
    internal bool IsSetEventDestinationName();
}
public class Amazon.SimpleEmail.Model.InvalidLambdaFunctionException : AmazonSimpleEmailServiceException {
    private string _functionArn;
    public string FunctionArn { get; public set; }
    public InvalidLambdaFunctionException(string message);
    public InvalidLambdaFunctionException(string message, Exception innerException);
    public InvalidLambdaFunctionException(Exception innerException);
    public InvalidLambdaFunctionException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidLambdaFunctionException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
}
public class Amazon.SimpleEmail.Model.InvalidPolicyException : AmazonSimpleEmailServiceException {
    public InvalidPolicyException(string message);
    public InvalidPolicyException(string message, Exception innerException);
    public InvalidPolicyException(Exception innerException);
    public InvalidPolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidPolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleEmail.Model.InvalidRenderingParameterException : AmazonSimpleEmailServiceException {
    private string _templateName;
    public string TemplateName { get; public set; }
    public InvalidRenderingParameterException(string message);
    public InvalidRenderingParameterException(string message, Exception innerException);
    public InvalidRenderingParameterException(Exception innerException);
    public InvalidRenderingParameterException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidRenderingParameterException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_TemplateName();
    public void set_TemplateName(string value);
    internal bool IsSetTemplateName();
}
public class Amazon.SimpleEmail.Model.InvalidS3ConfigurationException : AmazonSimpleEmailServiceException {
    private string _bucket;
    public string Bucket { get; public set; }
    public InvalidS3ConfigurationException(string message);
    public InvalidS3ConfigurationException(string message, Exception innerException);
    public InvalidS3ConfigurationException(Exception innerException);
    public InvalidS3ConfigurationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidS3ConfigurationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
}
public class Amazon.SimpleEmail.Model.InvalidSNSDestinationException : AmazonSimpleEmailServiceException {
    private string _configurationSetName;
    private string _eventDestinationName;
    public string ConfigurationSetName { get; public set; }
    public string EventDestinationName { get; public set; }
    public InvalidSNSDestinationException(string message);
    public InvalidSNSDestinationException(string message, Exception innerException);
    public InvalidSNSDestinationException(Exception innerException);
    public InvalidSNSDestinationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidSNSDestinationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
    public string get_EventDestinationName();
    public void set_EventDestinationName(string value);
    internal bool IsSetEventDestinationName();
}
public class Amazon.SimpleEmail.Model.InvalidSnsTopicException : AmazonSimpleEmailServiceException {
    private string _topic;
    public string Topic { get; public set; }
    public InvalidSnsTopicException(string message);
    public InvalidSnsTopicException(string message, Exception innerException);
    public InvalidSnsTopicException(Exception innerException);
    public InvalidSnsTopicException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidSnsTopicException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Topic();
    public void set_Topic(string value);
    internal bool IsSetTopic();
}
public class Amazon.SimpleEmail.Model.InvalidTemplateException : AmazonSimpleEmailServiceException {
    private string _templateName;
    public string TemplateName { get; public set; }
    public InvalidTemplateException(string message);
    public InvalidTemplateException(string message, Exception innerException);
    public InvalidTemplateException(Exception innerException);
    public InvalidTemplateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidTemplateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_TemplateName();
    public void set_TemplateName(string value);
    internal bool IsSetTemplateName();
}
public class Amazon.SimpleEmail.Model.InvalidTrackingOptionsException : AmazonSimpleEmailServiceException {
    public InvalidTrackingOptionsException(string message);
    public InvalidTrackingOptionsException(string message, Exception innerException);
    public InvalidTrackingOptionsException(Exception innerException);
    public InvalidTrackingOptionsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidTrackingOptionsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public interface Amazon.SimpleEmail.Model.ISimpleEmailPaginatorFactory {
    public abstract virtual IListCustomVerificationEmailTemplatesPaginator ListCustomVerificationEmailTemplates(ListCustomVerificationEmailTemplatesRequest request);
    public abstract virtual IListIdentitiesPaginator ListIdentities(ListIdentitiesRequest request);
}
public class Amazon.SimpleEmail.Model.KinesisFirehoseDestination : object {
    private string _deliveryStreamARN;
    private string _iamRoleARN;
    [AWSPropertyAttribute]
public string DeliveryStreamARN { get; public set; }
    [AWSPropertyAttribute]
public string IAMRoleARN { get; public set; }
    public string get_DeliveryStreamARN();
    public void set_DeliveryStreamARN(string value);
    internal bool IsSetDeliveryStreamARN();
    public string get_IAMRoleARN();
    public void set_IAMRoleARN(string value);
    internal bool IsSetIAMRoleARN();
}
public class Amazon.SimpleEmail.Model.LambdaAction : object {
    private string _functionArn;
    private InvocationType _invocationType;
    private string _topicArn;
    [AWSPropertyAttribute]
public string FunctionArn { get; public set; }
    public InvocationType InvocationType { get; public set; }
    public string TopicArn { get; public set; }
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public InvocationType get_InvocationType();
    public void set_InvocationType(InvocationType value);
    internal bool IsSetInvocationType();
    public string get_TopicArn();
    public void set_TopicArn(string value);
    internal bool IsSetTopicArn();
}
public class Amazon.SimpleEmail.Model.LimitExceededException : AmazonSimpleEmailServiceException {
    public LimitExceededException(string message);
    public LimitExceededException(string message, Exception innerException);
    public LimitExceededException(Exception innerException);
    public LimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public LimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleEmail.Model.ListConfigurationSetsRequest : AmazonSimpleEmailServiceRequest {
    private Nullable`1<int> _maxItems;
    private string _nextToken;
    public Nullable`1<int> MaxItems { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleEmail.Model.ListConfigurationSetsResponse : AmazonWebServiceResponse {
    private List`1<ConfigurationSet> _configurationSets;
    private string _nextToken;
    public List`1<ConfigurationSet> ConfigurationSets { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ConfigurationSet> get_ConfigurationSets();
    public void set_ConfigurationSets(List`1<ConfigurationSet> value);
    internal bool IsSetConfigurationSets();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.SimpleEmail.Model.ListCustomVerificationEmailTemplatesPaginator : object {
    private IAmazonSimpleEmailService _client;
    private ListCustomVerificationEmailTemplatesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListCustomVerificationEmailTemplatesResponse> Responses { get; }
    internal ListCustomVerificationEmailTemplatesPaginator(IAmazonSimpleEmailService client, ListCustomVerificationEmailTemplatesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListCustomVerificationEmailTemplatesResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleEmail.Model.ListCustomVerificationEmailTemplatesPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleEmail-Model-ListCustomVerificationEmailTemplatesResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListCustomVerificationEmailTemplatesResponse> Amazon.Runtime.IPaginator<Amazon.SimpleEmail.Model.ListCustomVerificationEmailTemplatesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleEmail.Model.ListCustomVerificationEmailTemplatesRequest : AmazonSimpleEmailServiceRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleEmail.Model.ListCustomVerificationEmailTemplatesResponse : AmazonWebServiceResponse {
    private List`1<CustomVerificationEmailTemplate> _customVerificationEmailTemplates;
    private string _nextToken;
    public List`1<CustomVerificationEmailTemplate> CustomVerificationEmailTemplates { get; public set; }
    public string NextToken { get; public set; }
    public List`1<CustomVerificationEmailTemplate> get_CustomVerificationEmailTemplates();
    public void set_CustomVerificationEmailTemplates(List`1<CustomVerificationEmailTemplate> value);
    internal bool IsSetCustomVerificationEmailTemplates();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.SimpleEmail.Model.ListIdentitiesPaginator : object {
    private IAmazonSimpleEmailService _client;
    private ListIdentitiesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListIdentitiesResponse> Responses { get; }
    public IPaginatedEnumerable`1<string> Identities { get; }
    internal ListIdentitiesPaginator(IAmazonSimpleEmailService client, ListIdentitiesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListIdentitiesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<string> get_Identities();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleEmail.Model.ListIdentitiesPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleEmail-Model-ListIdentitiesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListIdentitiesResponse> Amazon.Runtime.IPaginator<Amazon.SimpleEmail.Model.ListIdentitiesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleEmail.Model.ListIdentitiesRequest : AmazonSimpleEmailServiceRequest {
    private IdentityType _identityType;
    private Nullable`1<int> _maxItems;
    private string _nextToken;
    public IdentityType IdentityType { get; public set; }
    public Nullable`1<int> MaxItems { get; public set; }
    public string NextToken { get; public set; }
    public IdentityType get_IdentityType();
    public void set_IdentityType(IdentityType value);
    internal bool IsSetIdentityType();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleEmail.Model.ListIdentitiesResponse : AmazonWebServiceResponse {
    private List`1<string> _identities;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<string> Identities { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_Identities();
    public void set_Identities(List`1<string> value);
    internal bool IsSetIdentities();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleEmail.Model.ListIdentityPoliciesRequest : AmazonSimpleEmailServiceRequest {
    private string _identity;
    [AWSPropertyAttribute]
public string Identity { get; public set; }
    public string get_Identity();
    public void set_Identity(string value);
    internal bool IsSetIdentity();
}
public class Amazon.SimpleEmail.Model.ListIdentityPoliciesResponse : AmazonWebServiceResponse {
    private List`1<string> _policyNames;
    [AWSPropertyAttribute]
public List`1<string> PolicyNames { get; public set; }
    public List`1<string> get_PolicyNames();
    public void set_PolicyNames(List`1<string> value);
    internal bool IsSetPolicyNames();
}
public class Amazon.SimpleEmail.Model.ListReceiptFiltersRequest : AmazonSimpleEmailServiceRequest {
}
public class Amazon.SimpleEmail.Model.ListReceiptFiltersResponse : AmazonWebServiceResponse {
    private List`1<ReceiptFilter> _filters;
    public List`1<ReceiptFilter> Filters { get; public set; }
    public List`1<ReceiptFilter> get_Filters();
    public void set_Filters(List`1<ReceiptFilter> value);
    internal bool IsSetFilters();
}
public class Amazon.SimpleEmail.Model.ListReceiptRuleSetsRequest : AmazonSimpleEmailServiceRequest {
    private string _nextToken;
    public string NextToken { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleEmail.Model.ListReceiptRuleSetsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ReceiptRuleSetMetadata> _ruleSets;
    public string NextToken { get; public set; }
    public List`1<ReceiptRuleSetMetadata> RuleSets { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ReceiptRuleSetMetadata> get_RuleSets();
    public void set_RuleSets(List`1<ReceiptRuleSetMetadata> value);
    internal bool IsSetRuleSets();
}
public class Amazon.SimpleEmail.Model.ListTemplatesRequest : AmazonSimpleEmailServiceRequest {
    private Nullable`1<int> _maxItems;
    private string _nextToken;
    public Nullable`1<int> MaxItems { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleEmail.Model.ListTemplatesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TemplateMetadata> _templatesMetadata;
    public string NextToken { get; public set; }
    public List`1<TemplateMetadata> TemplatesMetadata { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TemplateMetadata> get_TemplatesMetadata();
    public void set_TemplatesMetadata(List`1<TemplateMetadata> value);
    internal bool IsSetTemplatesMetadata();
}
public class Amazon.SimpleEmail.Model.ListVerifiedEmailAddressesRequest : AmazonSimpleEmailServiceRequest {
}
public class Amazon.SimpleEmail.Model.ListVerifiedEmailAddressesResponse : AmazonWebServiceResponse {
    private List`1<string> _verifiedEmailAddresses;
    public List`1<string> VerifiedEmailAddresses { get; public set; }
    public List`1<string> get_VerifiedEmailAddresses();
    public void set_VerifiedEmailAddresses(List`1<string> value);
    internal bool IsSetVerifiedEmailAddresses();
}
public class Amazon.SimpleEmail.Model.MailFromDomainNotVerifiedException : AmazonSimpleEmailServiceException {
    public MailFromDomainNotVerifiedException(string message);
    public MailFromDomainNotVerifiedException(string message, Exception innerException);
    public MailFromDomainNotVerifiedException(Exception innerException);
    public MailFromDomainNotVerifiedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public MailFromDomainNotVerifiedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleEmail.Model.Message : object {
    private Body _body;
    private Content _subject;
    [AWSPropertyAttribute]
public Body Body { get; public set; }
    [AWSPropertyAttribute]
public Content Subject { get; public set; }
    public Message(Content subject, Body body);
    public Body get_Body();
    public void set_Body(Body value);
    internal bool IsSetBody();
    public Content get_Subject();
    public void set_Subject(Content value);
    internal bool IsSetSubject();
}
public class Amazon.SimpleEmail.Model.MessageDsn : object {
    private Nullable`1<DateTime> _arrivalDateUtc;
    private List`1<ExtensionField> _extensionFields;
    private string _reportingMta;
    private Nullable`1<DateTime> _arrivalDate;
    public Nullable`1<DateTime> ArrivalDateUtc { get; public set; }
    public List`1<ExtensionField> ExtensionFields { get; public set; }
    [AWSPropertyAttribute]
public string ReportingMta { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use ArrivalDateUtc instead. Setting either ArrivalDate or ArrivalDateUtc results in both ArrivalDate and ArrivalDateUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. ArrivalDate is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> ArrivalDate { get; public set; }
    public Nullable`1<DateTime> get_ArrivalDateUtc();
    public void set_ArrivalDateUtc(Nullable`1<DateTime> value);
    internal bool IsSetArrivalDateUtc();
    public List`1<ExtensionField> get_ExtensionFields();
    public void set_ExtensionFields(List`1<ExtensionField> value);
    internal bool IsSetExtensionFields();
    public string get_ReportingMta();
    public void set_ReportingMta(string value);
    internal bool IsSetReportingMta();
    public Nullable`1<DateTime> get_ArrivalDate();
    public void set_ArrivalDate(Nullable`1<DateTime> value);
}
public class Amazon.SimpleEmail.Model.MessageRejectedException : AmazonSimpleEmailServiceException {
    public MessageRejectedException(string message);
    public MessageRejectedException(string message, Exception innerException);
    public MessageRejectedException(Exception innerException);
    public MessageRejectedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public MessageRejectedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleEmail.Model.MessageTag : object {
    private string _name;
    private string _value;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.SimpleEmail.Model.MissingRenderingAttributeException : AmazonSimpleEmailServiceException {
    private string _templateName;
    public string TemplateName { get; public set; }
    public MissingRenderingAttributeException(string message);
    public MissingRenderingAttributeException(string message, Exception innerException);
    public MissingRenderingAttributeException(Exception innerException);
    public MissingRenderingAttributeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public MissingRenderingAttributeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_TemplateName();
    public void set_TemplateName(string value);
    internal bool IsSetTemplateName();
}
public class Amazon.SimpleEmail.Model.ProductionAccessNotGrantedException : AmazonSimpleEmailServiceException {
    public ProductionAccessNotGrantedException(string message);
    public ProductionAccessNotGrantedException(string message, Exception innerException);
    public ProductionAccessNotGrantedException(Exception innerException);
    public ProductionAccessNotGrantedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ProductionAccessNotGrantedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleEmail.Model.PutConfigurationSetDeliveryOptionsRequest : AmazonSimpleEmailServiceRequest {
    private string _configurationSetName;
    private DeliveryOptions _deliveryOptions;
    [AWSPropertyAttribute]
public string ConfigurationSetName { get; public set; }
    public DeliveryOptions DeliveryOptions { get; public set; }
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
    public DeliveryOptions get_DeliveryOptions();
    public void set_DeliveryOptions(DeliveryOptions value);
    internal bool IsSetDeliveryOptions();
}
public class Amazon.SimpleEmail.Model.PutConfigurationSetDeliveryOptionsResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.PutIdentityPolicyRequest : AmazonSimpleEmailServiceRequest {
    private string _identity;
    private string _policy;
    private string _policyName;
    [AWSPropertyAttribute]
public string Identity { get; public set; }
    [AWSPropertyAttribute]
public string Policy { get; public set; }
    [AWSPropertyAttribute]
public string PolicyName { get; public set; }
    public string get_Identity();
    public void set_Identity(string value);
    internal bool IsSetIdentity();
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
}
public class Amazon.SimpleEmail.Model.PutIdentityPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.RawMessage : object {
    private MemoryStream _data;
    [AWSPropertyAttribute]
public MemoryStream Data { get; public set; }
    public RawMessage(MemoryStream data);
    public MemoryStream get_Data();
    public void set_Data(MemoryStream value);
    internal bool IsSetData();
}
public class Amazon.SimpleEmail.Model.ReceiptAction : object {
    private AddHeaderAction _addHeaderAction;
    private BounceAction _bounceAction;
    private LambdaAction _lambdaAction;
    private S3Action _s3Action;
    private SNSAction _snsAction;
    private StopAction _stopAction;
    private WorkmailAction _workmailAction;
    public AddHeaderAction AddHeaderAction { get; public set; }
    public BounceAction BounceAction { get; public set; }
    public LambdaAction LambdaAction { get; public set; }
    public S3Action S3Action { get; public set; }
    public SNSAction SNSAction { get; public set; }
    public StopAction StopAction { get; public set; }
    public WorkmailAction WorkmailAction { get; public set; }
    public AddHeaderAction get_AddHeaderAction();
    public void set_AddHeaderAction(AddHeaderAction value);
    internal bool IsSetAddHeaderAction();
    public BounceAction get_BounceAction();
    public void set_BounceAction(BounceAction value);
    internal bool IsSetBounceAction();
    public LambdaAction get_LambdaAction();
    public void set_LambdaAction(LambdaAction value);
    internal bool IsSetLambdaAction();
    public S3Action get_S3Action();
    public void set_S3Action(S3Action value);
    internal bool IsSetS3Action();
    public SNSAction get_SNSAction();
    public void set_SNSAction(SNSAction value);
    internal bool IsSetSNSAction();
    public StopAction get_StopAction();
    public void set_StopAction(StopAction value);
    internal bool IsSetStopAction();
    public WorkmailAction get_WorkmailAction();
    public void set_WorkmailAction(WorkmailAction value);
    internal bool IsSetWorkmailAction();
}
public class Amazon.SimpleEmail.Model.ReceiptFilter : object {
    private ReceiptIpFilter _ipFilter;
    private string _name;
    [AWSPropertyAttribute]
public ReceiptIpFilter IpFilter { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public ReceiptIpFilter get_IpFilter();
    public void set_IpFilter(ReceiptIpFilter value);
    internal bool IsSetIpFilter();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleEmail.Model.ReceiptIpFilter : object {
    private string _cidr;
    private ReceiptFilterPolicy _policy;
    [AWSPropertyAttribute]
public string Cidr { get; public set; }
    [AWSPropertyAttribute]
public ReceiptFilterPolicy Policy { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
    public ReceiptFilterPolicy get_Policy();
    public void set_Policy(ReceiptFilterPolicy value);
    internal bool IsSetPolicy();
}
public class Amazon.SimpleEmail.Model.ReceiptRule : object {
    private List`1<ReceiptAction> _actions;
    private Nullable`1<bool> _enabled;
    private string _name;
    private List`1<string> _recipients;
    private Nullable`1<bool> _scanEnabled;
    private TlsPolicy _tlsPolicy;
    public List`1<ReceiptAction> Actions { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<string> Recipients { get; public set; }
    public Nullable`1<bool> ScanEnabled { get; public set; }
    public TlsPolicy TlsPolicy { get; public set; }
    public List`1<ReceiptAction> get_Actions();
    public void set_Actions(List`1<ReceiptAction> value);
    internal bool IsSetActions();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_Recipients();
    public void set_Recipients(List`1<string> value);
    internal bool IsSetRecipients();
    public Nullable`1<bool> get_ScanEnabled();
    public void set_ScanEnabled(Nullable`1<bool> value);
    internal bool IsSetScanEnabled();
    public TlsPolicy get_TlsPolicy();
    public void set_TlsPolicy(TlsPolicy value);
    internal bool IsSetTlsPolicy();
}
public class Amazon.SimpleEmail.Model.ReceiptRuleSetMetadata : object {
    private Nullable`1<DateTime> _createdTimestamp;
    private string _name;
    public Nullable`1<DateTime> CreatedTimestamp { get; public set; }
    public string Name { get; public set; }
    public Nullable`1<DateTime> get_CreatedTimestamp();
    public void set_CreatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTimestamp();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleEmail.Model.RecipientDsnFields : object {
    private DsnAction _action;
    private string _diagnosticCode;
    private List`1<ExtensionField> _extensionFields;
    private string _finalRecipient;
    private Nullable`1<DateTime> _lastAttemptDateUtc;
    private string _remoteMta;
    private string _status;
    private Nullable`1<DateTime> _lastAttemptDate;
    [AWSPropertyAttribute]
public DsnAction Action { get; public set; }
    public string DiagnosticCode { get; public set; }
    public List`1<ExtensionField> ExtensionFields { get; public set; }
    public string FinalRecipient { get; public set; }
    public Nullable`1<DateTime> LastAttemptDateUtc { get; public set; }
    public string RemoteMta { get; public set; }
    [AWSPropertyAttribute]
public string Status { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use LastAttemptDateUtc instead. Setting either LastAttemptDate or LastAttemptDateUtc results in both LastAttemptDate and LastAttemptDateUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. LastAttemptDate is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> LastAttemptDate { get; public set; }
    public DsnAction get_Action();
    public void set_Action(DsnAction value);
    internal bool IsSetAction();
    public string get_DiagnosticCode();
    public void set_DiagnosticCode(string value);
    internal bool IsSetDiagnosticCode();
    public List`1<ExtensionField> get_ExtensionFields();
    public void set_ExtensionFields(List`1<ExtensionField> value);
    internal bool IsSetExtensionFields();
    public string get_FinalRecipient();
    public void set_FinalRecipient(string value);
    internal bool IsSetFinalRecipient();
    public Nullable`1<DateTime> get_LastAttemptDateUtc();
    public void set_LastAttemptDateUtc(Nullable`1<DateTime> value);
    internal bool IsSetLastAttemptDateUtc();
    public string get_RemoteMta();
    public void set_RemoteMta(string value);
    internal bool IsSetRemoteMta();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public Nullable`1<DateTime> get_LastAttemptDate();
    public void set_LastAttemptDate(Nullable`1<DateTime> value);
}
public class Amazon.SimpleEmail.Model.ReorderReceiptRuleSetRequest : AmazonSimpleEmailServiceRequest {
    private List`1<string> _ruleNames;
    private string _ruleSetName;
    [AWSPropertyAttribute]
public List`1<string> RuleNames { get; public set; }
    [AWSPropertyAttribute]
public string RuleSetName { get; public set; }
    public List`1<string> get_RuleNames();
    public void set_RuleNames(List`1<string> value);
    internal bool IsSetRuleNames();
    public string get_RuleSetName();
    public void set_RuleSetName(string value);
    internal bool IsSetRuleSetName();
}
public class Amazon.SimpleEmail.Model.ReorderReceiptRuleSetResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.ReputationOptions : object {
    private Nullable`1<DateTime> _lastFreshStart;
    private Nullable`1<bool> _reputationMetricsEnabled;
    private Nullable`1<bool> _sendingEnabled;
    public Nullable`1<DateTime> LastFreshStart { get; public set; }
    public Nullable`1<bool> ReputationMetricsEnabled { get; public set; }
    public Nullable`1<bool> SendingEnabled { get; public set; }
    public Nullable`1<DateTime> get_LastFreshStart();
    public void set_LastFreshStart(Nullable`1<DateTime> value);
    internal bool IsSetLastFreshStart();
    public Nullable`1<bool> get_ReputationMetricsEnabled();
    public void set_ReputationMetricsEnabled(Nullable`1<bool> value);
    internal bool IsSetReputationMetricsEnabled();
    public Nullable`1<bool> get_SendingEnabled();
    public void set_SendingEnabled(Nullable`1<bool> value);
    internal bool IsSetSendingEnabled();
}
public class Amazon.SimpleEmail.Model.RuleDoesNotExistException : AmazonSimpleEmailServiceException {
    private string _name;
    public string Name { get; public set; }
    public RuleDoesNotExistException(string message);
    public RuleDoesNotExistException(string message, Exception innerException);
    public RuleDoesNotExistException(Exception innerException);
    public RuleDoesNotExistException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public RuleDoesNotExistException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleEmail.Model.RuleSetDoesNotExistException : AmazonSimpleEmailServiceException {
    private string _name;
    public string Name { get; public set; }
    public RuleSetDoesNotExistException(string message);
    public RuleSetDoesNotExistException(string message, Exception innerException);
    public RuleSetDoesNotExistException(Exception innerException);
    public RuleSetDoesNotExistException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public RuleSetDoesNotExistException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleEmail.Model.S3Action : object {
    private string _bucketName;
    private string _kmsKeyArn;
    private string _objectKeyPrefix;
    private string _topicArn;
    [AWSPropertyAttribute]
public string BucketName { get; public set; }
    public string KmsKeyArn { get; public set; }
    public string ObjectKeyPrefix { get; public set; }
    public string TopicArn { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_KmsKeyArn();
    public void set_KmsKeyArn(string value);
    internal bool IsSetKmsKeyArn();
    public string get_ObjectKeyPrefix();
    public void set_ObjectKeyPrefix(string value);
    internal bool IsSetObjectKeyPrefix();
    public string get_TopicArn();
    public void set_TopicArn(string value);
    internal bool IsSetTopicArn();
}
public class Amazon.SimpleEmail.Model.SendBounceRequest : AmazonSimpleEmailServiceRequest {
    private List`1<BouncedRecipientInfo> _bouncedRecipientInfoList;
    private string _bounceSender;
    private string _bounceSenderArn;
    private string _explanation;
    private MessageDsn _messageDsn;
    private string _originalMessageId;
    [AWSPropertyAttribute]
public List`1<BouncedRecipientInfo> BouncedRecipientInfoList { get; public set; }
    [AWSPropertyAttribute]
public string BounceSender { get; public set; }
    public string BounceSenderArn { get; public set; }
    public string Explanation { get; public set; }
    public MessageDsn MessageDsn { get; public set; }
    [AWSPropertyAttribute]
public string OriginalMessageId { get; public set; }
    public List`1<BouncedRecipientInfo> get_BouncedRecipientInfoList();
    public void set_BouncedRecipientInfoList(List`1<BouncedRecipientInfo> value);
    internal bool IsSetBouncedRecipientInfoList();
    public string get_BounceSender();
    public void set_BounceSender(string value);
    internal bool IsSetBounceSender();
    public string get_BounceSenderArn();
    public void set_BounceSenderArn(string value);
    internal bool IsSetBounceSenderArn();
    public string get_Explanation();
    public void set_Explanation(string value);
    internal bool IsSetExplanation();
    public MessageDsn get_MessageDsn();
    public void set_MessageDsn(MessageDsn value);
    internal bool IsSetMessageDsn();
    public string get_OriginalMessageId();
    public void set_OriginalMessageId(string value);
    internal bool IsSetOriginalMessageId();
}
public class Amazon.SimpleEmail.Model.SendBounceResponse : AmazonWebServiceResponse {
    private string _messageId;
    public string MessageId { get; public set; }
    public string get_MessageId();
    public void set_MessageId(string value);
    internal bool IsSetMessageId();
}
public class Amazon.SimpleEmail.Model.SendBulkTemplatedEmailRequest : AmazonSimpleEmailServiceRequest {
    private string _configurationSetName;
    private List`1<MessageTag> _defaultTags;
    private string _defaultTemplateData;
    private List`1<BulkEmailDestination> _destinations;
    private List`1<string> _replyToAddresses;
    private string _returnPath;
    private string _returnPathArn;
    private string _source;
    private string _sourceArn;
    private string _template;
    private string _templateArn;
    public string ConfigurationSetName { get; public set; }
    public List`1<MessageTag> DefaultTags { get; public set; }
    [AWSPropertyAttribute]
public string DefaultTemplateData { get; public set; }
    [AWSPropertyAttribute]
public List`1<BulkEmailDestination> Destinations { get; public set; }
    public List`1<string> ReplyToAddresses { get; public set; }
    public string ReturnPath { get; public set; }
    public string ReturnPathArn { get; public set; }
    [AWSPropertyAttribute]
public string Source { get; public set; }
    public string SourceArn { get; public set; }
    [AWSPropertyAttribute]
public string Template { get; public set; }
    public string TemplateArn { get; public set; }
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
    public List`1<MessageTag> get_DefaultTags();
    public void set_DefaultTags(List`1<MessageTag> value);
    internal bool IsSetDefaultTags();
    public string get_DefaultTemplateData();
    public void set_DefaultTemplateData(string value);
    internal bool IsSetDefaultTemplateData();
    public List`1<BulkEmailDestination> get_Destinations();
    public void set_Destinations(List`1<BulkEmailDestination> value);
    internal bool IsSetDestinations();
    public List`1<string> get_ReplyToAddresses();
    public void set_ReplyToAddresses(List`1<string> value);
    internal bool IsSetReplyToAddresses();
    public string get_ReturnPath();
    public void set_ReturnPath(string value);
    internal bool IsSetReturnPath();
    public string get_ReturnPathArn();
    public void set_ReturnPathArn(string value);
    internal bool IsSetReturnPathArn();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
    public string get_Template();
    public void set_Template(string value);
    internal bool IsSetTemplate();
    public string get_TemplateArn();
    public void set_TemplateArn(string value);
    internal bool IsSetTemplateArn();
}
public class Amazon.SimpleEmail.Model.SendBulkTemplatedEmailResponse : AmazonWebServiceResponse {
    private List`1<BulkEmailDestinationStatus> _status;
    [AWSPropertyAttribute]
public List`1<BulkEmailDestinationStatus> Status { get; public set; }
    public List`1<BulkEmailDestinationStatus> get_Status();
    public void set_Status(List`1<BulkEmailDestinationStatus> value);
    internal bool IsSetStatus();
}
public class Amazon.SimpleEmail.Model.SendCustomVerificationEmailRequest : AmazonSimpleEmailServiceRequest {
    private string _configurationSetName;
    private string _emailAddress;
    private string _templateName;
    public string ConfigurationSetName { get; public set; }
    [AWSPropertyAttribute]
public string EmailAddress { get; public set; }
    [AWSPropertyAttribute]
public string TemplateName { get; public set; }
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
    public string get_EmailAddress();
    public void set_EmailAddress(string value);
    internal bool IsSetEmailAddress();
    public string get_TemplateName();
    public void set_TemplateName(string value);
    internal bool IsSetTemplateName();
}
public class Amazon.SimpleEmail.Model.SendCustomVerificationEmailResponse : AmazonWebServiceResponse {
    private string _messageId;
    public string MessageId { get; public set; }
    public string get_MessageId();
    public void set_MessageId(string value);
    internal bool IsSetMessageId();
}
public class Amazon.SimpleEmail.Model.SendDataPoint : object {
    private Nullable`1<long> _bounces;
    private Nullable`1<long> _complaints;
    private Nullable`1<long> _deliveryAttempts;
    private Nullable`1<long> _rejects;
    private Nullable`1<DateTime> _timestamp;
    public Nullable`1<long> Bounces { get; public set; }
    public Nullable`1<long> Complaints { get; public set; }
    public Nullable`1<long> DeliveryAttempts { get; public set; }
    public Nullable`1<long> Rejects { get; public set; }
    public Nullable`1<DateTime> Timestamp { get; public set; }
    public Nullable`1<long> get_Bounces();
    public void set_Bounces(Nullable`1<long> value);
    internal bool IsSetBounces();
    public Nullable`1<long> get_Complaints();
    public void set_Complaints(Nullable`1<long> value);
    internal bool IsSetComplaints();
    public Nullable`1<long> get_DeliveryAttempts();
    public void set_DeliveryAttempts(Nullable`1<long> value);
    internal bool IsSetDeliveryAttempts();
    public Nullable`1<long> get_Rejects();
    public void set_Rejects(Nullable`1<long> value);
    internal bool IsSetRejects();
    public Nullable`1<DateTime> get_Timestamp();
    public void set_Timestamp(Nullable`1<DateTime> value);
    internal bool IsSetTimestamp();
}
public class Amazon.SimpleEmail.Model.SendEmailRequest : AmazonSimpleEmailServiceRequest {
    private string _configurationSetName;
    private Destination _destination;
    private Message _message;
    private List`1<string> _replyToAddresses;
    private string _returnPath;
    private string _returnPathArn;
    private string _source;
    private string _sourceArn;
    private List`1<MessageTag> _tags;
    public string ConfigurationSetName { get; public set; }
    [AWSPropertyAttribute]
public Destination Destination { get; public set; }
    [AWSPropertyAttribute]
public Message Message { get; public set; }
    public List`1<string> ReplyToAddresses { get; public set; }
    public string ReturnPath { get; public set; }
    public string ReturnPathArn { get; public set; }
    [AWSPropertyAttribute]
public string Source { get; public set; }
    public string SourceArn { get; public set; }
    public List`1<MessageTag> Tags { get; public set; }
    public SendEmailRequest(string source, Destination destination, Message message);
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
    public Destination get_Destination();
    public void set_Destination(Destination value);
    internal bool IsSetDestination();
    public Message get_Message();
    public void set_Message(Message value);
    internal bool IsSetMessage();
    public List`1<string> get_ReplyToAddresses();
    public void set_ReplyToAddresses(List`1<string> value);
    internal bool IsSetReplyToAddresses();
    public string get_ReturnPath();
    public void set_ReturnPath(string value);
    internal bool IsSetReturnPath();
    public string get_ReturnPathArn();
    public void set_ReturnPathArn(string value);
    internal bool IsSetReturnPathArn();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
    public List`1<MessageTag> get_Tags();
    public void set_Tags(List`1<MessageTag> value);
    internal bool IsSetTags();
}
public class Amazon.SimpleEmail.Model.SendEmailResponse : AmazonWebServiceResponse {
    private string _messageId;
    [AWSPropertyAttribute]
public string MessageId { get; public set; }
    public string get_MessageId();
    public void set_MessageId(string value);
    internal bool IsSetMessageId();
}
public class Amazon.SimpleEmail.Model.SendRawEmailRequest : AmazonSimpleEmailServiceRequest {
    private string _configurationSetName;
    private List`1<string> _destinations;
    private string _fromArn;
    private RawMessage _rawMessage;
    private string _returnPathArn;
    private string _source;
    private string _sourceArn;
    private List`1<MessageTag> _tags;
    public string ConfigurationSetName { get; public set; }
    public List`1<string> Destinations { get; public set; }
    public string FromArn { get; public set; }
    [AWSPropertyAttribute]
public RawMessage RawMessage { get; public set; }
    public string ReturnPathArn { get; public set; }
    public string Source { get; public set; }
    public string SourceArn { get; public set; }
    public List`1<MessageTag> Tags { get; public set; }
    public SendRawEmailRequest(RawMessage rawMessage);
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
    public List`1<string> get_Destinations();
    public void set_Destinations(List`1<string> value);
    internal bool IsSetDestinations();
    public string get_FromArn();
    public void set_FromArn(string value);
    internal bool IsSetFromArn();
    public RawMessage get_RawMessage();
    public void set_RawMessage(RawMessage value);
    internal bool IsSetRawMessage();
    public string get_ReturnPathArn();
    public void set_ReturnPathArn(string value);
    internal bool IsSetReturnPathArn();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
    public List`1<MessageTag> get_Tags();
    public void set_Tags(List`1<MessageTag> value);
    internal bool IsSetTags();
}
public class Amazon.SimpleEmail.Model.SendRawEmailResponse : AmazonWebServiceResponse {
    private string _messageId;
    [AWSPropertyAttribute]
public string MessageId { get; public set; }
    public string get_MessageId();
    public void set_MessageId(string value);
    internal bool IsSetMessageId();
}
public class Amazon.SimpleEmail.Model.SendTemplatedEmailRequest : AmazonSimpleEmailServiceRequest {
    private string _configurationSetName;
    private Destination _destination;
    private List`1<string> _replyToAddresses;
    private string _returnPath;
    private string _returnPathArn;
    private string _source;
    private string _sourceArn;
    private List`1<MessageTag> _tags;
    private string _template;
    private string _templateArn;
    private string _templateData;
    public string ConfigurationSetName { get; public set; }
    [AWSPropertyAttribute]
public Destination Destination { get; public set; }
    public List`1<string> ReplyToAddresses { get; public set; }
    public string ReturnPath { get; public set; }
    public string ReturnPathArn { get; public set; }
    [AWSPropertyAttribute]
public string Source { get; public set; }
    public string SourceArn { get; public set; }
    public List`1<MessageTag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string Template { get; public set; }
    public string TemplateArn { get; public set; }
    [AWSPropertyAttribute]
public string TemplateData { get; public set; }
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
    public Destination get_Destination();
    public void set_Destination(Destination value);
    internal bool IsSetDestination();
    public List`1<string> get_ReplyToAddresses();
    public void set_ReplyToAddresses(List`1<string> value);
    internal bool IsSetReplyToAddresses();
    public string get_ReturnPath();
    public void set_ReturnPath(string value);
    internal bool IsSetReturnPath();
    public string get_ReturnPathArn();
    public void set_ReturnPathArn(string value);
    internal bool IsSetReturnPathArn();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
    public List`1<MessageTag> get_Tags();
    public void set_Tags(List`1<MessageTag> value);
    internal bool IsSetTags();
    public string get_Template();
    public void set_Template(string value);
    internal bool IsSetTemplate();
    public string get_TemplateArn();
    public void set_TemplateArn(string value);
    internal bool IsSetTemplateArn();
    public string get_TemplateData();
    public void set_TemplateData(string value);
    internal bool IsSetTemplateData();
}
public class Amazon.SimpleEmail.Model.SendTemplatedEmailResponse : AmazonWebServiceResponse {
    private string _messageId;
    [AWSPropertyAttribute]
public string MessageId { get; public set; }
    public string get_MessageId();
    public void set_MessageId(string value);
    internal bool IsSetMessageId();
}
public class Amazon.SimpleEmail.Model.SetActiveReceiptRuleSetRequest : AmazonSimpleEmailServiceRequest {
    private string _ruleSetName;
    public string RuleSetName { get; public set; }
    public string get_RuleSetName();
    public void set_RuleSetName(string value);
    internal bool IsSetRuleSetName();
}
public class Amazon.SimpleEmail.Model.SetActiveReceiptRuleSetResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.SetIdentityDkimEnabledRequest : AmazonSimpleEmailServiceRequest {
    private Nullable`1<bool> _dkimEnabled;
    private string _identity;
    [AWSPropertyAttribute]
public Nullable`1<bool> DkimEnabled { get; public set; }
    [AWSPropertyAttribute]
public string Identity { get; public set; }
    public Nullable`1<bool> get_DkimEnabled();
    public void set_DkimEnabled(Nullable`1<bool> value);
    internal bool IsSetDkimEnabled();
    public string get_Identity();
    public void set_Identity(string value);
    internal bool IsSetIdentity();
}
public class Amazon.SimpleEmail.Model.SetIdentityDkimEnabledResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.SetIdentityFeedbackForwardingEnabledRequest : AmazonSimpleEmailServiceRequest {
    private Nullable`1<bool> _forwardingEnabled;
    private string _identity;
    [AWSPropertyAttribute]
public Nullable`1<bool> ForwardingEnabled { get; public set; }
    [AWSPropertyAttribute]
public string Identity { get; public set; }
    public Nullable`1<bool> get_ForwardingEnabled();
    public void set_ForwardingEnabled(Nullable`1<bool> value);
    internal bool IsSetForwardingEnabled();
    public string get_Identity();
    public void set_Identity(string value);
    internal bool IsSetIdentity();
}
public class Amazon.SimpleEmail.Model.SetIdentityFeedbackForwardingEnabledResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.SetIdentityHeadersInNotificationsEnabledRequest : AmazonSimpleEmailServiceRequest {
    private Nullable`1<bool> _enabled;
    private string _identity;
    private NotificationType _notificationType;
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    [AWSPropertyAttribute]
public string Identity { get; public set; }
    [AWSPropertyAttribute]
public NotificationType NotificationType { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public string get_Identity();
    public void set_Identity(string value);
    internal bool IsSetIdentity();
    public NotificationType get_NotificationType();
    public void set_NotificationType(NotificationType value);
    internal bool IsSetNotificationType();
}
public class Amazon.SimpleEmail.Model.SetIdentityHeadersInNotificationsEnabledResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.SetIdentityMailFromDomainRequest : AmazonSimpleEmailServiceRequest {
    private BehaviorOnMXFailure _behaviorOnMXFailure;
    private string _identity;
    private string _mailFromDomain;
    public BehaviorOnMXFailure BehaviorOnMXFailure { get; public set; }
    [AWSPropertyAttribute]
public string Identity { get; public set; }
    public string MailFromDomain { get; public set; }
    public BehaviorOnMXFailure get_BehaviorOnMXFailure();
    public void set_BehaviorOnMXFailure(BehaviorOnMXFailure value);
    internal bool IsSetBehaviorOnMXFailure();
    public string get_Identity();
    public void set_Identity(string value);
    internal bool IsSetIdentity();
    public string get_MailFromDomain();
    public void set_MailFromDomain(string value);
    internal bool IsSetMailFromDomain();
}
public class Amazon.SimpleEmail.Model.SetIdentityMailFromDomainResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.SetIdentityNotificationTopicRequest : AmazonSimpleEmailServiceRequest {
    private string _identity;
    private NotificationType _notificationType;
    private string _snsTopic;
    [AWSPropertyAttribute]
public string Identity { get; public set; }
    [AWSPropertyAttribute]
public NotificationType NotificationType { get; public set; }
    public string SnsTopic { get; public set; }
    public string get_Identity();
    public void set_Identity(string value);
    internal bool IsSetIdentity();
    public NotificationType get_NotificationType();
    public void set_NotificationType(NotificationType value);
    internal bool IsSetNotificationType();
    public string get_SnsTopic();
    public void set_SnsTopic(string value);
    internal bool IsSetSnsTopic();
}
public class Amazon.SimpleEmail.Model.SetIdentityNotificationTopicResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.SetReceiptRulePositionRequest : AmazonSimpleEmailServiceRequest {
    private string _after;
    private string _ruleName;
    private string _ruleSetName;
    public string After { get; public set; }
    [AWSPropertyAttribute]
public string RuleName { get; public set; }
    [AWSPropertyAttribute]
public string RuleSetName { get; public set; }
    public string get_After();
    public void set_After(string value);
    internal bool IsSetAfter();
    public string get_RuleName();
    public void set_RuleName(string value);
    internal bool IsSetRuleName();
    public string get_RuleSetName();
    public void set_RuleSetName(string value);
    internal bool IsSetRuleSetName();
}
public class Amazon.SimpleEmail.Model.SetReceiptRulePositionResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.SimpleEmailPaginatorFactory : object {
    private IAmazonSimpleEmailService client;
    internal SimpleEmailPaginatorFactory(IAmazonSimpleEmailService client);
    public sealed virtual IListCustomVerificationEmailTemplatesPaginator ListCustomVerificationEmailTemplates(ListCustomVerificationEmailTemplatesRequest request);
    public sealed virtual IListIdentitiesPaginator ListIdentities(ListIdentitiesRequest request);
}
public class Amazon.SimpleEmail.Model.SNSAction : object {
    private SNSActionEncoding _encoding;
    private string _topicArn;
    public SNSActionEncoding Encoding { get; public set; }
    [AWSPropertyAttribute]
public string TopicArn { get; public set; }
    public SNSActionEncoding get_Encoding();
    public void set_Encoding(SNSActionEncoding value);
    internal bool IsSetEncoding();
    public string get_TopicArn();
    public void set_TopicArn(string value);
    internal bool IsSetTopicArn();
}
public class Amazon.SimpleEmail.Model.SNSDestination : object {
    private string _topicARN;
    [AWSPropertyAttribute]
public string TopicARN { get; public set; }
    public string get_TopicARN();
    public void set_TopicARN(string value);
    internal bool IsSetTopicARN();
}
public class Amazon.SimpleEmail.Model.StopAction : object {
    private StopScope _scope;
    private string _topicArn;
    [AWSPropertyAttribute]
public StopScope Scope { get; public set; }
    public string TopicArn { get; public set; }
    public StopScope get_Scope();
    public void set_Scope(StopScope value);
    internal bool IsSetScope();
    public string get_TopicArn();
    public void set_TopicArn(string value);
    internal bool IsSetTopicArn();
}
public class Amazon.SimpleEmail.Model.Template : object {
    private string _htmlPart;
    private string _subjectPart;
    private string _templateName;
    private string _textPart;
    public string HtmlPart { get; public set; }
    public string SubjectPart { get; public set; }
    [AWSPropertyAttribute]
public string TemplateName { get; public set; }
    public string TextPart { get; public set; }
    public string get_HtmlPart();
    public void set_HtmlPart(string value);
    internal bool IsSetHtmlPart();
    public string get_SubjectPart();
    public void set_SubjectPart(string value);
    internal bool IsSetSubjectPart();
    public string get_TemplateName();
    public void set_TemplateName(string value);
    internal bool IsSetTemplateName();
    public string get_TextPart();
    public void set_TextPart(string value);
    internal bool IsSetTextPart();
}
public class Amazon.SimpleEmail.Model.TemplateDoesNotExistException : AmazonSimpleEmailServiceException {
    private string _templateName;
    public string TemplateName { get; public set; }
    public TemplateDoesNotExistException(string message);
    public TemplateDoesNotExistException(string message, Exception innerException);
    public TemplateDoesNotExistException(Exception innerException);
    public TemplateDoesNotExistException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TemplateDoesNotExistException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_TemplateName();
    public void set_TemplateName(string value);
    internal bool IsSetTemplateName();
}
public class Amazon.SimpleEmail.Model.TemplateMetadata : object {
    private Nullable`1<DateTime> _createdTimestamp;
    private string _name;
    public Nullable`1<DateTime> CreatedTimestamp { get; public set; }
    public string Name { get; public set; }
    public Nullable`1<DateTime> get_CreatedTimestamp();
    public void set_CreatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTimestamp();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleEmail.Model.TestRenderTemplateRequest : AmazonSimpleEmailServiceRequest {
    private string _templateData;
    private string _templateName;
    [AWSPropertyAttribute]
public string TemplateData { get; public set; }
    [AWSPropertyAttribute]
public string TemplateName { get; public set; }
    public string get_TemplateData();
    public void set_TemplateData(string value);
    internal bool IsSetTemplateData();
    public string get_TemplateName();
    public void set_TemplateName(string value);
    internal bool IsSetTemplateName();
}
public class Amazon.SimpleEmail.Model.TestRenderTemplateResponse : AmazonWebServiceResponse {
    private string _renderedTemplate;
    public string RenderedTemplate { get; public set; }
    public string get_RenderedTemplate();
    public void set_RenderedTemplate(string value);
    internal bool IsSetRenderedTemplate();
}
public class Amazon.SimpleEmail.Model.TrackingOptions : object {
    private string _customRedirectDomain;
    public string CustomRedirectDomain { get; public set; }
    public string get_CustomRedirectDomain();
    public void set_CustomRedirectDomain(string value);
    internal bool IsSetCustomRedirectDomain();
}
public class Amazon.SimpleEmail.Model.TrackingOptionsAlreadyExistsException : AmazonSimpleEmailServiceException {
    private string _configurationSetName;
    public string ConfigurationSetName { get; public set; }
    public TrackingOptionsAlreadyExistsException(string message);
    public TrackingOptionsAlreadyExistsException(string message, Exception innerException);
    public TrackingOptionsAlreadyExistsException(Exception innerException);
    public TrackingOptionsAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TrackingOptionsAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
}
public class Amazon.SimpleEmail.Model.TrackingOptionsDoesNotExistException : AmazonSimpleEmailServiceException {
    private string _configurationSetName;
    public string ConfigurationSetName { get; public set; }
    public TrackingOptionsDoesNotExistException(string message);
    public TrackingOptionsDoesNotExistException(string message, Exception innerException);
    public TrackingOptionsDoesNotExistException(Exception innerException);
    public TrackingOptionsDoesNotExistException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TrackingOptionsDoesNotExistException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
}
public class Amazon.SimpleEmail.Model.UpdateAccountSendingEnabledRequest : AmazonSimpleEmailServiceRequest {
    private Nullable`1<bool> _enabled;
    public Nullable`1<bool> Enabled { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.SimpleEmail.Model.UpdateAccountSendingEnabledResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.UpdateConfigurationSetEventDestinationRequest : AmazonSimpleEmailServiceRequest {
    private string _configurationSetName;
    private EventDestination _eventDestination;
    [AWSPropertyAttribute]
public string ConfigurationSetName { get; public set; }
    [AWSPropertyAttribute]
public EventDestination EventDestination { get; public set; }
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
    public EventDestination get_EventDestination();
    public void set_EventDestination(EventDestination value);
    internal bool IsSetEventDestination();
}
public class Amazon.SimpleEmail.Model.UpdateConfigurationSetEventDestinationResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.UpdateConfigurationSetReputationMetricsEnabledRequest : AmazonSimpleEmailServiceRequest {
    private string _configurationSetName;
    private Nullable`1<bool> _enabled;
    [AWSPropertyAttribute]
public string ConfigurationSetName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.SimpleEmail.Model.UpdateConfigurationSetReputationMetricsEnabledResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.UpdateConfigurationSetSendingEnabledRequest : AmazonSimpleEmailServiceRequest {
    private string _configurationSetName;
    private Nullable`1<bool> _enabled;
    [AWSPropertyAttribute]
public string ConfigurationSetName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.SimpleEmail.Model.UpdateConfigurationSetSendingEnabledResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.UpdateConfigurationSetTrackingOptionsRequest : AmazonSimpleEmailServiceRequest {
    private string _configurationSetName;
    private TrackingOptions _trackingOptions;
    [AWSPropertyAttribute]
public string ConfigurationSetName { get; public set; }
    [AWSPropertyAttribute]
public TrackingOptions TrackingOptions { get; public set; }
    public string get_ConfigurationSetName();
    public void set_ConfigurationSetName(string value);
    internal bool IsSetConfigurationSetName();
    public TrackingOptions get_TrackingOptions();
    public void set_TrackingOptions(TrackingOptions value);
    internal bool IsSetTrackingOptions();
}
public class Amazon.SimpleEmail.Model.UpdateConfigurationSetTrackingOptionsResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.UpdateCustomVerificationEmailTemplateRequest : AmazonSimpleEmailServiceRequest {
    private string _failureRedirectionURL;
    private string _fromEmailAddress;
    private string _successRedirectionURL;
    private string _templateContent;
    private string _templateName;
    private string _templateSubject;
    public string FailureRedirectionURL { get; public set; }
    public string FromEmailAddress { get; public set; }
    public string SuccessRedirectionURL { get; public set; }
    public string TemplateContent { get; public set; }
    [AWSPropertyAttribute]
public string TemplateName { get; public set; }
    public string TemplateSubject { get; public set; }
    public string get_FailureRedirectionURL();
    public void set_FailureRedirectionURL(string value);
    internal bool IsSetFailureRedirectionURL();
    public string get_FromEmailAddress();
    public void set_FromEmailAddress(string value);
    internal bool IsSetFromEmailAddress();
    public string get_SuccessRedirectionURL();
    public void set_SuccessRedirectionURL(string value);
    internal bool IsSetSuccessRedirectionURL();
    public string get_TemplateContent();
    public void set_TemplateContent(string value);
    internal bool IsSetTemplateContent();
    public string get_TemplateName();
    public void set_TemplateName(string value);
    internal bool IsSetTemplateName();
    public string get_TemplateSubject();
    public void set_TemplateSubject(string value);
    internal bool IsSetTemplateSubject();
}
public class Amazon.SimpleEmail.Model.UpdateCustomVerificationEmailTemplateResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.UpdateReceiptRuleRequest : AmazonSimpleEmailServiceRequest {
    private ReceiptRule _rule;
    private string _ruleSetName;
    [AWSPropertyAttribute]
public ReceiptRule Rule { get; public set; }
    [AWSPropertyAttribute]
public string RuleSetName { get; public set; }
    public ReceiptRule get_Rule();
    public void set_Rule(ReceiptRule value);
    internal bool IsSetRule();
    public string get_RuleSetName();
    public void set_RuleSetName(string value);
    internal bool IsSetRuleSetName();
}
public class Amazon.SimpleEmail.Model.UpdateReceiptRuleResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.UpdateTemplateRequest : AmazonSimpleEmailServiceRequest {
    private Template _template;
    [AWSPropertyAttribute]
public Template Template { get; public set; }
    public Template get_Template();
    public void set_Template(Template value);
    internal bool IsSetTemplate();
}
public class Amazon.SimpleEmail.Model.UpdateTemplateResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.VerifyDomainDkimRequest : AmazonSimpleEmailServiceRequest {
    private string _domain;
    [AWSPropertyAttribute]
public string Domain { get; public set; }
    public string get_Domain();
    public void set_Domain(string value);
    internal bool IsSetDomain();
}
public class Amazon.SimpleEmail.Model.VerifyDomainDkimResponse : AmazonWebServiceResponse {
    private List`1<string> _dkimTokens;
    [AWSPropertyAttribute]
public List`1<string> DkimTokens { get; public set; }
    public List`1<string> get_DkimTokens();
    public void set_DkimTokens(List`1<string> value);
    internal bool IsSetDkimTokens();
}
public class Amazon.SimpleEmail.Model.VerifyDomainIdentityRequest : AmazonSimpleEmailServiceRequest {
    private string _domain;
    [AWSPropertyAttribute]
public string Domain { get; public set; }
    public string get_Domain();
    public void set_Domain(string value);
    internal bool IsSetDomain();
}
public class Amazon.SimpleEmail.Model.VerifyDomainIdentityResponse : AmazonWebServiceResponse {
    private string _verificationToken;
    [AWSPropertyAttribute]
public string VerificationToken { get; public set; }
    public string get_VerificationToken();
    public void set_VerificationToken(string value);
    internal bool IsSetVerificationToken();
}
public class Amazon.SimpleEmail.Model.VerifyEmailAddressRequest : AmazonSimpleEmailServiceRequest {
    private string _emailAddress;
    [AWSPropertyAttribute]
public string EmailAddress { get; public set; }
    public string get_EmailAddress();
    public void set_EmailAddress(string value);
    internal bool IsSetEmailAddress();
}
public class Amazon.SimpleEmail.Model.VerifyEmailAddressResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.VerifyEmailIdentityRequest : AmazonSimpleEmailServiceRequest {
    private string _emailAddress;
    [AWSPropertyAttribute]
public string EmailAddress { get; public set; }
    public string get_EmailAddress();
    public void set_EmailAddress(string value);
    internal bool IsSetEmailAddress();
}
public class Amazon.SimpleEmail.Model.VerifyEmailIdentityResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.WorkmailAction : object {
    private string _organizationArn;
    private string _topicArn;
    [AWSPropertyAttribute]
public string OrganizationArn { get; public set; }
    public string TopicArn { get; public set; }
    public string get_OrganizationArn();
    public void set_OrganizationArn(string value);
    internal bool IsSetOrganizationArn();
    public string get_TopicArn();
    public void set_TopicArn(string value);
    internal bool IsSetTopicArn();
}
public class Amazon.SimpleEmail.NotificationType : ConstantClass {
    public static NotificationType Bounce;
    public static NotificationType Complaint;
    public static NotificationType Delivery;
    public NotificationType(string value);
    private static NotificationType();
    public static NotificationType FindValue(string value);
    public static NotificationType op_Implicit(string value);
}
public class Amazon.SimpleEmail.ReceiptFilterPolicy : ConstantClass {
    public static ReceiptFilterPolicy Allow;
    public static ReceiptFilterPolicy Block;
    public ReceiptFilterPolicy(string value);
    private static ReceiptFilterPolicy();
    public static ReceiptFilterPolicy FindValue(string value);
    public static ReceiptFilterPolicy op_Implicit(string value);
}
public class Amazon.SimpleEmail.SNSActionEncoding : ConstantClass {
    public static SNSActionEncoding Base64;
    public static SNSActionEncoding UTF8;
    public SNSActionEncoding(string value);
    private static SNSActionEncoding();
    public static SNSActionEncoding FindValue(string value);
    public static SNSActionEncoding op_Implicit(string value);
}
public class Amazon.SimpleEmail.StopScope : ConstantClass {
    public static StopScope RuleSet;
    public StopScope(string value);
    private static StopScope();
    public static StopScope FindValue(string value);
    public static StopScope op_Implicit(string value);
}
public class Amazon.SimpleEmail.TlsPolicy : ConstantClass {
    public static TlsPolicy Optional;
    public static TlsPolicy Require;
    public TlsPolicy(string value);
    private static TlsPolicy();
    public static TlsPolicy FindValue(string value);
    public static TlsPolicy op_Implicit(string value);
}
public class Amazon.SimpleEmail.VerificationStatus : ConstantClass {
    public static VerificationStatus Failed;
    public static VerificationStatus NotStarted;
    public static VerificationStatus Pending;
    public static VerificationStatus Success;
    public static VerificationStatus TemporaryFailure;
    public VerificationStatus(string value);
    private static VerificationStatus();
    public static VerificationStatus FindValue(string value);
    public static VerificationStatus op_Implicit(string value);
}
