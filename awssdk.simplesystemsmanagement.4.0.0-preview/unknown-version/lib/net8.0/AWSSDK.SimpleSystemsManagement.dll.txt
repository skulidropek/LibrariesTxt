public class Amazon.SimpleSystemsManagement.AmazonSimpleSystemsManagementClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private ISimpleSystemsManagementPaginatorFactory _paginators;
    public ISimpleSystemsManagementPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonSimpleSystemsManagementClient(RegionEndpoint region);
    public AmazonSimpleSystemsManagementClient(AmazonSimpleSystemsManagementConfig config);
    public AmazonSimpleSystemsManagementClient(AWSCredentials credentials);
    public AmazonSimpleSystemsManagementClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonSimpleSystemsManagementClient(AWSCredentials credentials, AmazonSimpleSystemsManagementConfig clientConfig);
    public AmazonSimpleSystemsManagementClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonSimpleSystemsManagementClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonSimpleSystemsManagementClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonSimpleSystemsManagementConfig clientConfig);
    public AmazonSimpleSystemsManagementClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonSimpleSystemsManagementClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonSimpleSystemsManagementClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonSimpleSystemsManagementConfig clientConfig);
    private static AmazonSimpleSystemsManagementClient();
    public sealed virtual ISimpleSystemsManagementPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual AddTagsToResourceResponse AddTagsToResource(AddTagsToResourceRequest request);
    public virtual Task`1<AddTagsToResourceResponse> AddTagsToResourceAsync(AddTagsToResourceRequest request, CancellationToken cancellationToken);
    internal virtual AssociateOpsItemRelatedItemResponse AssociateOpsItemRelatedItem(AssociateOpsItemRelatedItemRequest request);
    public virtual Task`1<AssociateOpsItemRelatedItemResponse> AssociateOpsItemRelatedItemAsync(AssociateOpsItemRelatedItemRequest request, CancellationToken cancellationToken);
    internal virtual CancelCommandResponse CancelCommand(CancelCommandRequest request);
    public virtual Task`1<CancelCommandResponse> CancelCommandAsync(string commandId, CancellationToken cancellationToken);
    public virtual Task`1<CancelCommandResponse> CancelCommandAsync(string commandId, List`1<string> instanceIds, CancellationToken cancellationToken);
    public virtual Task`1<CancelCommandResponse> CancelCommandAsync(CancelCommandRequest request, CancellationToken cancellationToken);
    internal virtual CancelMaintenanceWindowExecutionResponse CancelMaintenanceWindowExecution(CancelMaintenanceWindowExecutionRequest request);
    public virtual Task`1<CancelMaintenanceWindowExecutionResponse> CancelMaintenanceWindowExecutionAsync(CancelMaintenanceWindowExecutionRequest request, CancellationToken cancellationToken);
    internal virtual CreateActivationResponse CreateActivation(CreateActivationRequest request);
    public virtual Task`1<CreateActivationResponse> CreateActivationAsync(CreateActivationRequest request, CancellationToken cancellationToken);
    internal virtual CreateAssociationResponse CreateAssociation(CreateAssociationRequest request);
    public virtual Task`1<CreateAssociationResponse> CreateAssociationAsync(string instanceId, string name, CancellationToken cancellationToken);
    public virtual Task`1<CreateAssociationResponse> CreateAssociationAsync(CreateAssociationRequest request, CancellationToken cancellationToken);
    internal virtual CreateAssociationBatchResponse CreateAssociationBatch(CreateAssociationBatchRequest request);
    public virtual Task`1<CreateAssociationBatchResponse> CreateAssociationBatchAsync(CreateAssociationBatchRequest request, CancellationToken cancellationToken);
    internal virtual CreateDocumentResponse CreateDocument(CreateDocumentRequest request);
    public virtual Task`1<CreateDocumentResponse> CreateDocumentAsync(string content, string name, CancellationToken cancellationToken);
    public virtual Task`1<CreateDocumentResponse> CreateDocumentAsync(CreateDocumentRequest request, CancellationToken cancellationToken);
    internal virtual CreateMaintenanceWindowResponse CreateMaintenanceWindow(CreateMaintenanceWindowRequest request);
    public virtual Task`1<CreateMaintenanceWindowResponse> CreateMaintenanceWindowAsync(CreateMaintenanceWindowRequest request, CancellationToken cancellationToken);
    internal virtual CreateOpsItemResponse CreateOpsItem(CreateOpsItemRequest request);
    public virtual Task`1<CreateOpsItemResponse> CreateOpsItemAsync(CreateOpsItemRequest request, CancellationToken cancellationToken);
    internal virtual CreateOpsMetadataResponse CreateOpsMetadata(CreateOpsMetadataRequest request);
    public virtual Task`1<CreateOpsMetadataResponse> CreateOpsMetadataAsync(CreateOpsMetadataRequest request, CancellationToken cancellationToken);
    internal virtual CreatePatchBaselineResponse CreatePatchBaseline(CreatePatchBaselineRequest request);
    public virtual Task`1<CreatePatchBaselineResponse> CreatePatchBaselineAsync(CreatePatchBaselineRequest request, CancellationToken cancellationToken);
    internal virtual CreateResourceDataSyncResponse CreateResourceDataSync(CreateResourceDataSyncRequest request);
    public virtual Task`1<CreateResourceDataSyncResponse> CreateResourceDataSyncAsync(CreateResourceDataSyncRequest request, CancellationToken cancellationToken);
    internal virtual DeleteActivationResponse DeleteActivation(DeleteActivationRequest request);
    public virtual Task`1<DeleteActivationResponse> DeleteActivationAsync(DeleteActivationRequest request, CancellationToken cancellationToken);
    internal virtual DeleteAssociationResponse DeleteAssociation(DeleteAssociationRequest request);
    public virtual Task`1<DeleteAssociationResponse> DeleteAssociationAsync(string instanceId, string name, CancellationToken cancellationToken);
    public virtual Task`1<DeleteAssociationResponse> DeleteAssociationAsync(DeleteAssociationRequest request, CancellationToken cancellationToken);
    internal virtual DeleteDocumentResponse DeleteDocument(DeleteDocumentRequest request);
    public virtual Task`1<DeleteDocumentResponse> DeleteDocumentAsync(string name, CancellationToken cancellationToken);
    public virtual Task`1<DeleteDocumentResponse> DeleteDocumentAsync(DeleteDocumentRequest request, CancellationToken cancellationToken);
    internal virtual DeleteInventoryResponse DeleteInventory(DeleteInventoryRequest request);
    public virtual Task`1<DeleteInventoryResponse> DeleteInventoryAsync(DeleteInventoryRequest request, CancellationToken cancellationToken);
    internal virtual DeleteMaintenanceWindowResponse DeleteMaintenanceWindow(DeleteMaintenanceWindowRequest request);
    public virtual Task`1<DeleteMaintenanceWindowResponse> DeleteMaintenanceWindowAsync(DeleteMaintenanceWindowRequest request, CancellationToken cancellationToken);
    internal virtual DeleteOpsItemResponse DeleteOpsItem(DeleteOpsItemRequest request);
    public virtual Task`1<DeleteOpsItemResponse> DeleteOpsItemAsync(DeleteOpsItemRequest request, CancellationToken cancellationToken);
    internal virtual DeleteOpsMetadataResponse DeleteOpsMetadata(DeleteOpsMetadataRequest request);
    public virtual Task`1<DeleteOpsMetadataResponse> DeleteOpsMetadataAsync(DeleteOpsMetadataRequest request, CancellationToken cancellationToken);
    internal virtual DeleteParameterResponse DeleteParameter(DeleteParameterRequest request);
    public virtual Task`1<DeleteParameterResponse> DeleteParameterAsync(DeleteParameterRequest request, CancellationToken cancellationToken);
    internal virtual DeleteParametersResponse DeleteParameters(DeleteParametersRequest request);
    public virtual Task`1<DeleteParametersResponse> DeleteParametersAsync(DeleteParametersRequest request, CancellationToken cancellationToken);
    internal virtual DeletePatchBaselineResponse DeletePatchBaseline(DeletePatchBaselineRequest request);
    public virtual Task`1<DeletePatchBaselineResponse> DeletePatchBaselineAsync(DeletePatchBaselineRequest request, CancellationToken cancellationToken);
    internal virtual DeleteResourceDataSyncResponse DeleteResourceDataSync(DeleteResourceDataSyncRequest request);
    public virtual Task`1<DeleteResourceDataSyncResponse> DeleteResourceDataSyncAsync(DeleteResourceDataSyncRequest request, CancellationToken cancellationToken);
    internal virtual DeleteResourcePolicyResponse DeleteResourcePolicy(DeleteResourcePolicyRequest request);
    public virtual Task`1<DeleteResourcePolicyResponse> DeleteResourcePolicyAsync(DeleteResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual DeregisterManagedInstanceResponse DeregisterManagedInstance(DeregisterManagedInstanceRequest request);
    public virtual Task`1<DeregisterManagedInstanceResponse> DeregisterManagedInstanceAsync(DeregisterManagedInstanceRequest request, CancellationToken cancellationToken);
    internal virtual DeregisterPatchBaselineForPatchGroupResponse DeregisterPatchBaselineForPatchGroup(DeregisterPatchBaselineForPatchGroupRequest request);
    public virtual Task`1<DeregisterPatchBaselineForPatchGroupResponse> DeregisterPatchBaselineForPatchGroupAsync(DeregisterPatchBaselineForPatchGroupRequest request, CancellationToken cancellationToken);
    internal virtual DeregisterTargetFromMaintenanceWindowResponse DeregisterTargetFromMaintenanceWindow(DeregisterTargetFromMaintenanceWindowRequest request);
    public virtual Task`1<DeregisterTargetFromMaintenanceWindowResponse> DeregisterTargetFromMaintenanceWindowAsync(DeregisterTargetFromMaintenanceWindowRequest request, CancellationToken cancellationToken);
    internal virtual DeregisterTaskFromMaintenanceWindowResponse DeregisterTaskFromMaintenanceWindow(DeregisterTaskFromMaintenanceWindowRequest request);
    public virtual Task`1<DeregisterTaskFromMaintenanceWindowResponse> DeregisterTaskFromMaintenanceWindowAsync(DeregisterTaskFromMaintenanceWindowRequest request, CancellationToken cancellationToken);
    internal virtual DescribeActivationsResponse DescribeActivations(DescribeActivationsRequest request);
    public virtual Task`1<DescribeActivationsResponse> DescribeActivationsAsync(DescribeActivationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeAssociationResponse DescribeAssociation(DescribeAssociationRequest request);
    public virtual Task`1<DescribeAssociationResponse> DescribeAssociationAsync(string instanceId, string name, CancellationToken cancellationToken);
    public virtual Task`1<DescribeAssociationResponse> DescribeAssociationAsync(DescribeAssociationRequest request, CancellationToken cancellationToken);
    internal virtual DescribeAssociationExecutionsResponse DescribeAssociationExecutions(DescribeAssociationExecutionsRequest request);
    public virtual Task`1<DescribeAssociationExecutionsResponse> DescribeAssociationExecutionsAsync(DescribeAssociationExecutionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeAssociationExecutionTargetsResponse DescribeAssociationExecutionTargets(DescribeAssociationExecutionTargetsRequest request);
    public virtual Task`1<DescribeAssociationExecutionTargetsResponse> DescribeAssociationExecutionTargetsAsync(DescribeAssociationExecutionTargetsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeAutomationExecutionsResponse DescribeAutomationExecutions(DescribeAutomationExecutionsRequest request);
    public virtual Task`1<DescribeAutomationExecutionsResponse> DescribeAutomationExecutionsAsync(DescribeAutomationExecutionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeAutomationStepExecutionsResponse DescribeAutomationStepExecutions(DescribeAutomationStepExecutionsRequest request);
    public virtual Task`1<DescribeAutomationStepExecutionsResponse> DescribeAutomationStepExecutionsAsync(DescribeAutomationStepExecutionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeAvailablePatchesResponse DescribeAvailablePatches(DescribeAvailablePatchesRequest request);
    public virtual Task`1<DescribeAvailablePatchesResponse> DescribeAvailablePatchesAsync(DescribeAvailablePatchesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDocumentResponse DescribeDocument(DescribeDocumentRequest request);
    public virtual Task`1<DescribeDocumentResponse> DescribeDocumentAsync(string name, CancellationToken cancellationToken);
    public virtual Task`1<DescribeDocumentResponse> DescribeDocumentAsync(DescribeDocumentRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDocumentPermissionResponse DescribeDocumentPermission(DescribeDocumentPermissionRequest request);
    public virtual Task`1<DescribeDocumentPermissionResponse> DescribeDocumentPermissionAsync(DescribeDocumentPermissionRequest request, CancellationToken cancellationToken);
    internal virtual DescribeEffectiveInstanceAssociationsResponse DescribeEffectiveInstanceAssociations(DescribeEffectiveInstanceAssociationsRequest request);
    public virtual Task`1<DescribeEffectiveInstanceAssociationsResponse> DescribeEffectiveInstanceAssociationsAsync(DescribeEffectiveInstanceAssociationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeEffectivePatchesForPatchBaselineResponse DescribeEffectivePatchesForPatchBaseline(DescribeEffectivePatchesForPatchBaselineRequest request);
    public virtual Task`1<DescribeEffectivePatchesForPatchBaselineResponse> DescribeEffectivePatchesForPatchBaselineAsync(DescribeEffectivePatchesForPatchBaselineRequest request, CancellationToken cancellationToken);
    internal virtual DescribeInstanceAssociationsStatusResponse DescribeInstanceAssociationsStatus(DescribeInstanceAssociationsStatusRequest request);
    public virtual Task`1<DescribeInstanceAssociationsStatusResponse> DescribeInstanceAssociationsStatusAsync(DescribeInstanceAssociationsStatusRequest request, CancellationToken cancellationToken);
    internal virtual DescribeInstanceInformationResponse DescribeInstanceInformation();
    internal virtual DescribeInstanceInformationResponse DescribeInstanceInformation(DescribeInstanceInformationRequest request);
    public virtual Task`1<DescribeInstanceInformationResponse> DescribeInstanceInformationAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeInstanceInformationResponse> DescribeInstanceInformationAsync(DescribeInstanceInformationRequest request, CancellationToken cancellationToken);
    internal virtual DescribeInstancePatchesResponse DescribeInstancePatches(DescribeInstancePatchesRequest request);
    public virtual Task`1<DescribeInstancePatchesResponse> DescribeInstancePatchesAsync(DescribeInstancePatchesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeInstancePatchStatesResponse DescribeInstancePatchStates(DescribeInstancePatchStatesRequest request);
    public virtual Task`1<DescribeInstancePatchStatesResponse> DescribeInstancePatchStatesAsync(DescribeInstancePatchStatesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeInstancePatchStatesForPatchGroupResponse DescribeInstancePatchStatesForPatchGroup(DescribeInstancePatchStatesForPatchGroupRequest request);
    public virtual Task`1<DescribeInstancePatchStatesForPatchGroupResponse> DescribeInstancePatchStatesForPatchGroupAsync(DescribeInstancePatchStatesForPatchGroupRequest request, CancellationToken cancellationToken);
    internal virtual DescribeInstancePropertiesResponse DescribeInstanceProperties(DescribeInstancePropertiesRequest request);
    public virtual Task`1<DescribeInstancePropertiesResponse> DescribeInstancePropertiesAsync(DescribeInstancePropertiesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeInventoryDeletionsResponse DescribeInventoryDeletions(DescribeInventoryDeletionsRequest request);
    public virtual Task`1<DescribeInventoryDeletionsResponse> DescribeInventoryDeletionsAsync(DescribeInventoryDeletionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeMaintenanceWindowExecutionsResponse DescribeMaintenanceWindowExecutions(DescribeMaintenanceWindowExecutionsRequest request);
    public virtual Task`1<DescribeMaintenanceWindowExecutionsResponse> DescribeMaintenanceWindowExecutionsAsync(DescribeMaintenanceWindowExecutionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeMaintenanceWindowExecutionTaskInvocationsResponse DescribeMaintenanceWindowExecutionTaskInvocations(DescribeMaintenanceWindowExecutionTaskInvocationsRequest request);
    public virtual Task`1<DescribeMaintenanceWindowExecutionTaskInvocationsResponse> DescribeMaintenanceWindowExecutionTaskInvocationsAsync(DescribeMaintenanceWindowExecutionTaskInvocationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeMaintenanceWindowExecutionTasksResponse DescribeMaintenanceWindowExecutionTasks(DescribeMaintenanceWindowExecutionTasksRequest request);
    public virtual Task`1<DescribeMaintenanceWindowExecutionTasksResponse> DescribeMaintenanceWindowExecutionTasksAsync(DescribeMaintenanceWindowExecutionTasksRequest request, CancellationToken cancellationToken);
    internal virtual DescribeMaintenanceWindowsResponse DescribeMaintenanceWindows(DescribeMaintenanceWindowsRequest request);
    public virtual Task`1<DescribeMaintenanceWindowsResponse> DescribeMaintenanceWindowsAsync(DescribeMaintenanceWindowsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeMaintenanceWindowScheduleResponse DescribeMaintenanceWindowSchedule(DescribeMaintenanceWindowScheduleRequest request);
    public virtual Task`1<DescribeMaintenanceWindowScheduleResponse> DescribeMaintenanceWindowScheduleAsync(DescribeMaintenanceWindowScheduleRequest request, CancellationToken cancellationToken);
    internal virtual DescribeMaintenanceWindowsForTargetResponse DescribeMaintenanceWindowsForTarget(DescribeMaintenanceWindowsForTargetRequest request);
    public virtual Task`1<DescribeMaintenanceWindowsForTargetResponse> DescribeMaintenanceWindowsForTargetAsync(DescribeMaintenanceWindowsForTargetRequest request, CancellationToken cancellationToken);
    internal virtual DescribeMaintenanceWindowTargetsResponse DescribeMaintenanceWindowTargets(DescribeMaintenanceWindowTargetsRequest request);
    public virtual Task`1<DescribeMaintenanceWindowTargetsResponse> DescribeMaintenanceWindowTargetsAsync(DescribeMaintenanceWindowTargetsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeMaintenanceWindowTasksResponse DescribeMaintenanceWindowTasks(DescribeMaintenanceWindowTasksRequest request);
    public virtual Task`1<DescribeMaintenanceWindowTasksResponse> DescribeMaintenanceWindowTasksAsync(DescribeMaintenanceWindowTasksRequest request, CancellationToken cancellationToken);
    internal virtual DescribeOpsItemsResponse DescribeOpsItems(DescribeOpsItemsRequest request);
    public virtual Task`1<DescribeOpsItemsResponse> DescribeOpsItemsAsync(DescribeOpsItemsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeParametersResponse DescribeParameters(DescribeParametersRequest request);
    public virtual Task`1<DescribeParametersResponse> DescribeParametersAsync(DescribeParametersRequest request, CancellationToken cancellationToken);
    internal virtual DescribePatchBaselinesResponse DescribePatchBaselines(DescribePatchBaselinesRequest request);
    public virtual Task`1<DescribePatchBaselinesResponse> DescribePatchBaselinesAsync(DescribePatchBaselinesRequest request, CancellationToken cancellationToken);
    internal virtual DescribePatchGroupsResponse DescribePatchGroups(DescribePatchGroupsRequest request);
    public virtual Task`1<DescribePatchGroupsResponse> DescribePatchGroupsAsync(DescribePatchGroupsRequest request, CancellationToken cancellationToken);
    internal virtual DescribePatchGroupStateResponse DescribePatchGroupState(DescribePatchGroupStateRequest request);
    public virtual Task`1<DescribePatchGroupStateResponse> DescribePatchGroupStateAsync(DescribePatchGroupStateRequest request, CancellationToken cancellationToken);
    internal virtual DescribePatchPropertiesResponse DescribePatchProperties(DescribePatchPropertiesRequest request);
    public virtual Task`1<DescribePatchPropertiesResponse> DescribePatchPropertiesAsync(DescribePatchPropertiesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeSessionsResponse DescribeSessions(DescribeSessionsRequest request);
    public virtual Task`1<DescribeSessionsResponse> DescribeSessionsAsync(DescribeSessionsRequest request, CancellationToken cancellationToken);
    internal virtual DisassociateOpsItemRelatedItemResponse DisassociateOpsItemRelatedItem(DisassociateOpsItemRelatedItemRequest request);
    public virtual Task`1<DisassociateOpsItemRelatedItemResponse> DisassociateOpsItemRelatedItemAsync(DisassociateOpsItemRelatedItemRequest request, CancellationToken cancellationToken);
    internal virtual GetAutomationExecutionResponse GetAutomationExecution(GetAutomationExecutionRequest request);
    public virtual Task`1<GetAutomationExecutionResponse> GetAutomationExecutionAsync(GetAutomationExecutionRequest request, CancellationToken cancellationToken);
    internal virtual GetCalendarStateResponse GetCalendarState(GetCalendarStateRequest request);
    public virtual Task`1<GetCalendarStateResponse> GetCalendarStateAsync(GetCalendarStateRequest request, CancellationToken cancellationToken);
    internal virtual GetCommandInvocationResponse GetCommandInvocation(GetCommandInvocationRequest request);
    public virtual Task`1<GetCommandInvocationResponse> GetCommandInvocationAsync(GetCommandInvocationRequest request, CancellationToken cancellationToken);
    internal virtual GetConnectionStatusResponse GetConnectionStatus(GetConnectionStatusRequest request);
    public virtual Task`1<GetConnectionStatusResponse> GetConnectionStatusAsync(GetConnectionStatusRequest request, CancellationToken cancellationToken);
    internal virtual GetDefaultPatchBaselineResponse GetDefaultPatchBaseline(GetDefaultPatchBaselineRequest request);
    public virtual Task`1<GetDefaultPatchBaselineResponse> GetDefaultPatchBaselineAsync(GetDefaultPatchBaselineRequest request, CancellationToken cancellationToken);
    internal virtual GetDeployablePatchSnapshotForInstanceResponse GetDeployablePatchSnapshotForInstance(GetDeployablePatchSnapshotForInstanceRequest request);
    public virtual Task`1<GetDeployablePatchSnapshotForInstanceResponse> GetDeployablePatchSnapshotForInstanceAsync(GetDeployablePatchSnapshotForInstanceRequest request, CancellationToken cancellationToken);
    internal virtual GetDocumentResponse GetDocument(GetDocumentRequest request);
    public virtual Task`1<GetDocumentResponse> GetDocumentAsync(string name, CancellationToken cancellationToken);
    public virtual Task`1<GetDocumentResponse> GetDocumentAsync(GetDocumentRequest request, CancellationToken cancellationToken);
    internal virtual GetInventoryResponse GetInventory(GetInventoryRequest request);
    public virtual Task`1<GetInventoryResponse> GetInventoryAsync(GetInventoryRequest request, CancellationToken cancellationToken);
    internal virtual GetInventorySchemaResponse GetInventorySchema(GetInventorySchemaRequest request);
    public virtual Task`1<GetInventorySchemaResponse> GetInventorySchemaAsync(GetInventorySchemaRequest request, CancellationToken cancellationToken);
    internal virtual GetMaintenanceWindowResponse GetMaintenanceWindow(GetMaintenanceWindowRequest request);
    public virtual Task`1<GetMaintenanceWindowResponse> GetMaintenanceWindowAsync(GetMaintenanceWindowRequest request, CancellationToken cancellationToken);
    internal virtual GetMaintenanceWindowExecutionResponse GetMaintenanceWindowExecution(GetMaintenanceWindowExecutionRequest request);
    public virtual Task`1<GetMaintenanceWindowExecutionResponse> GetMaintenanceWindowExecutionAsync(GetMaintenanceWindowExecutionRequest request, CancellationToken cancellationToken);
    internal virtual GetMaintenanceWindowExecutionTaskResponse GetMaintenanceWindowExecutionTask(GetMaintenanceWindowExecutionTaskRequest request);
    public virtual Task`1<GetMaintenanceWindowExecutionTaskResponse> GetMaintenanceWindowExecutionTaskAsync(GetMaintenanceWindowExecutionTaskRequest request, CancellationToken cancellationToken);
    internal virtual GetMaintenanceWindowExecutionTaskInvocationResponse GetMaintenanceWindowExecutionTaskInvocation(GetMaintenanceWindowExecutionTaskInvocationRequest request);
    public virtual Task`1<GetMaintenanceWindowExecutionTaskInvocationResponse> GetMaintenanceWindowExecutionTaskInvocationAsync(GetMaintenanceWindowExecutionTaskInvocationRequest request, CancellationToken cancellationToken);
    internal virtual GetMaintenanceWindowTaskResponse GetMaintenanceWindowTask(GetMaintenanceWindowTaskRequest request);
    public virtual Task`1<GetMaintenanceWindowTaskResponse> GetMaintenanceWindowTaskAsync(GetMaintenanceWindowTaskRequest request, CancellationToken cancellationToken);
    internal virtual GetOpsItemResponse GetOpsItem(GetOpsItemRequest request);
    public virtual Task`1<GetOpsItemResponse> GetOpsItemAsync(GetOpsItemRequest request, CancellationToken cancellationToken);
    internal virtual GetOpsMetadataResponse GetOpsMetadata(GetOpsMetadataRequest request);
    public virtual Task`1<GetOpsMetadataResponse> GetOpsMetadataAsync(GetOpsMetadataRequest request, CancellationToken cancellationToken);
    internal virtual GetOpsSummaryResponse GetOpsSummary(GetOpsSummaryRequest request);
    public virtual Task`1<GetOpsSummaryResponse> GetOpsSummaryAsync(GetOpsSummaryRequest request, CancellationToken cancellationToken);
    internal virtual GetParameterResponse GetParameter(GetParameterRequest request);
    public virtual Task`1<GetParameterResponse> GetParameterAsync(GetParameterRequest request, CancellationToken cancellationToken);
    internal virtual GetParameterHistoryResponse GetParameterHistory(GetParameterHistoryRequest request);
    public virtual Task`1<GetParameterHistoryResponse> GetParameterHistoryAsync(GetParameterHistoryRequest request, CancellationToken cancellationToken);
    internal virtual GetParametersResponse GetParameters(GetParametersRequest request);
    public virtual Task`1<GetParametersResponse> GetParametersAsync(GetParametersRequest request, CancellationToken cancellationToken);
    internal virtual GetParametersByPathResponse GetParametersByPath(GetParametersByPathRequest request);
    public virtual Task`1<GetParametersByPathResponse> GetParametersByPathAsync(GetParametersByPathRequest request, CancellationToken cancellationToken);
    internal virtual GetPatchBaselineResponse GetPatchBaseline(GetPatchBaselineRequest request);
    public virtual Task`1<GetPatchBaselineResponse> GetPatchBaselineAsync(GetPatchBaselineRequest request, CancellationToken cancellationToken);
    internal virtual GetPatchBaselineForPatchGroupResponse GetPatchBaselineForPatchGroup(GetPatchBaselineForPatchGroupRequest request);
    public virtual Task`1<GetPatchBaselineForPatchGroupResponse> GetPatchBaselineForPatchGroupAsync(GetPatchBaselineForPatchGroupRequest request, CancellationToken cancellationToken);
    internal virtual GetResourcePoliciesResponse GetResourcePolicies(GetResourcePoliciesRequest request);
    public virtual Task`1<GetResourcePoliciesResponse> GetResourcePoliciesAsync(GetResourcePoliciesRequest request, CancellationToken cancellationToken);
    internal virtual GetServiceSettingResponse GetServiceSetting(GetServiceSettingRequest request);
    public virtual Task`1<GetServiceSettingResponse> GetServiceSettingAsync(GetServiceSettingRequest request, CancellationToken cancellationToken);
    internal virtual LabelParameterVersionResponse LabelParameterVersion(LabelParameterVersionRequest request);
    public virtual Task`1<LabelParameterVersionResponse> LabelParameterVersionAsync(LabelParameterVersionRequest request, CancellationToken cancellationToken);
    internal virtual ListAssociationsResponse ListAssociations(ListAssociationsRequest request);
    public virtual Task`1<ListAssociationsResponse> ListAssociationsAsync(ListAssociationsRequest request, CancellationToken cancellationToken);
    internal virtual ListAssociationVersionsResponse ListAssociationVersions(ListAssociationVersionsRequest request);
    public virtual Task`1<ListAssociationVersionsResponse> ListAssociationVersionsAsync(ListAssociationVersionsRequest request, CancellationToken cancellationToken);
    internal virtual ListCommandInvocationsResponse ListCommandInvocations();
    internal virtual ListCommandInvocationsResponse ListCommandInvocations(ListCommandInvocationsRequest request);
    public virtual Task`1<ListCommandInvocationsResponse> ListCommandInvocationsAsync(CancellationToken cancellationToken);
    public virtual Task`1<ListCommandInvocationsResponse> ListCommandInvocationsAsync(string commandId, CancellationToken cancellationToken);
    public virtual Task`1<ListCommandInvocationsResponse> ListCommandInvocationsAsync(ListCommandInvocationsRequest request, CancellationToken cancellationToken);
    internal virtual ListCommandsResponse ListCommands();
    internal virtual ListCommandsResponse ListCommands(ListCommandsRequest request);
    public virtual Task`1<ListCommandsResponse> ListCommandsAsync(CancellationToken cancellationToken);
    public virtual Task`1<ListCommandsResponse> ListCommandsAsync(string commandId, CancellationToken cancellationToken);
    public virtual Task`1<ListCommandsResponse> ListCommandsAsync(ListCommandsRequest request, CancellationToken cancellationToken);
    internal virtual ListComplianceItemsResponse ListComplianceItems(ListComplianceItemsRequest request);
    public virtual Task`1<ListComplianceItemsResponse> ListComplianceItemsAsync(ListComplianceItemsRequest request, CancellationToken cancellationToken);
    internal virtual ListComplianceSummariesResponse ListComplianceSummaries(ListComplianceSummariesRequest request);
    public virtual Task`1<ListComplianceSummariesResponse> ListComplianceSummariesAsync(ListComplianceSummariesRequest request, CancellationToken cancellationToken);
    internal virtual ListDocumentMetadataHistoryResponse ListDocumentMetadataHistory(ListDocumentMetadataHistoryRequest request);
    public virtual Task`1<ListDocumentMetadataHistoryResponse> ListDocumentMetadataHistoryAsync(ListDocumentMetadataHistoryRequest request, CancellationToken cancellationToken);
    internal virtual ListDocumentsResponse ListDocuments();
    internal virtual ListDocumentsResponse ListDocuments(ListDocumentsRequest request);
    public virtual Task`1<ListDocumentsResponse> ListDocumentsAsync(CancellationToken cancellationToken);
    public virtual Task`1<ListDocumentsResponse> ListDocumentsAsync(ListDocumentsRequest request, CancellationToken cancellationToken);
    internal virtual ListDocumentVersionsResponse ListDocumentVersions(ListDocumentVersionsRequest request);
    public virtual Task`1<ListDocumentVersionsResponse> ListDocumentVersionsAsync(ListDocumentVersionsRequest request, CancellationToken cancellationToken);
    internal virtual ListInventoryEntriesResponse ListInventoryEntries(ListInventoryEntriesRequest request);
    public virtual Task`1<ListInventoryEntriesResponse> ListInventoryEntriesAsync(ListInventoryEntriesRequest request, CancellationToken cancellationToken);
    internal virtual ListOpsItemEventsResponse ListOpsItemEvents(ListOpsItemEventsRequest request);
    public virtual Task`1<ListOpsItemEventsResponse> ListOpsItemEventsAsync(ListOpsItemEventsRequest request, CancellationToken cancellationToken);
    internal virtual ListOpsItemRelatedItemsResponse ListOpsItemRelatedItems(ListOpsItemRelatedItemsRequest request);
    public virtual Task`1<ListOpsItemRelatedItemsResponse> ListOpsItemRelatedItemsAsync(ListOpsItemRelatedItemsRequest request, CancellationToken cancellationToken);
    internal virtual ListOpsMetadataResponse ListOpsMetadata(ListOpsMetadataRequest request);
    public virtual Task`1<ListOpsMetadataResponse> ListOpsMetadataAsync(ListOpsMetadataRequest request, CancellationToken cancellationToken);
    internal virtual ListResourceComplianceSummariesResponse ListResourceComplianceSummaries(ListResourceComplianceSummariesRequest request);
    public virtual Task`1<ListResourceComplianceSummariesResponse> ListResourceComplianceSummariesAsync(ListResourceComplianceSummariesRequest request, CancellationToken cancellationToken);
    internal virtual ListResourceDataSyncResponse ListResourceDataSync(ListResourceDataSyncRequest request);
    public virtual Task`1<ListResourceDataSyncResponse> ListResourceDataSyncAsync(ListResourceDataSyncRequest request, CancellationToken cancellationToken);
    internal virtual ListTagsForResourceResponse ListTagsForResource(ListTagsForResourceRequest request);
    public virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    internal virtual ModifyDocumentPermissionResponse ModifyDocumentPermission(ModifyDocumentPermissionRequest request);
    public virtual Task`1<ModifyDocumentPermissionResponse> ModifyDocumentPermissionAsync(ModifyDocumentPermissionRequest request, CancellationToken cancellationToken);
    internal virtual PutComplianceItemsResponse PutComplianceItems(PutComplianceItemsRequest request);
    public virtual Task`1<PutComplianceItemsResponse> PutComplianceItemsAsync(PutComplianceItemsRequest request, CancellationToken cancellationToken);
    internal virtual PutInventoryResponse PutInventory(PutInventoryRequest request);
    public virtual Task`1<PutInventoryResponse> PutInventoryAsync(PutInventoryRequest request, CancellationToken cancellationToken);
    internal virtual PutParameterResponse PutParameter(PutParameterRequest request);
    public virtual Task`1<PutParameterResponse> PutParameterAsync(PutParameterRequest request, CancellationToken cancellationToken);
    internal virtual PutResourcePolicyResponse PutResourcePolicy(PutResourcePolicyRequest request);
    public virtual Task`1<PutResourcePolicyResponse> PutResourcePolicyAsync(PutResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual RegisterDefaultPatchBaselineResponse RegisterDefaultPatchBaseline(RegisterDefaultPatchBaselineRequest request);
    public virtual Task`1<RegisterDefaultPatchBaselineResponse> RegisterDefaultPatchBaselineAsync(RegisterDefaultPatchBaselineRequest request, CancellationToken cancellationToken);
    internal virtual RegisterPatchBaselineForPatchGroupResponse RegisterPatchBaselineForPatchGroup(RegisterPatchBaselineForPatchGroupRequest request);
    public virtual Task`1<RegisterPatchBaselineForPatchGroupResponse> RegisterPatchBaselineForPatchGroupAsync(RegisterPatchBaselineForPatchGroupRequest request, CancellationToken cancellationToken);
    internal virtual RegisterTargetWithMaintenanceWindowResponse RegisterTargetWithMaintenanceWindow(RegisterTargetWithMaintenanceWindowRequest request);
    public virtual Task`1<RegisterTargetWithMaintenanceWindowResponse> RegisterTargetWithMaintenanceWindowAsync(RegisterTargetWithMaintenanceWindowRequest request, CancellationToken cancellationToken);
    internal virtual RegisterTaskWithMaintenanceWindowResponse RegisterTaskWithMaintenanceWindow(RegisterTaskWithMaintenanceWindowRequest request);
    public virtual Task`1<RegisterTaskWithMaintenanceWindowResponse> RegisterTaskWithMaintenanceWindowAsync(RegisterTaskWithMaintenanceWindowRequest request, CancellationToken cancellationToken);
    internal virtual RemoveTagsFromResourceResponse RemoveTagsFromResource(RemoveTagsFromResourceRequest request);
    public virtual Task`1<RemoveTagsFromResourceResponse> RemoveTagsFromResourceAsync(RemoveTagsFromResourceRequest request, CancellationToken cancellationToken);
    internal virtual ResetServiceSettingResponse ResetServiceSetting(ResetServiceSettingRequest request);
    public virtual Task`1<ResetServiceSettingResponse> ResetServiceSettingAsync(ResetServiceSettingRequest request, CancellationToken cancellationToken);
    internal virtual ResumeSessionResponse ResumeSession(ResumeSessionRequest request);
    public virtual Task`1<ResumeSessionResponse> ResumeSessionAsync(ResumeSessionRequest request, CancellationToken cancellationToken);
    internal virtual SendAutomationSignalResponse SendAutomationSignal(SendAutomationSignalRequest request);
    public virtual Task`1<SendAutomationSignalResponse> SendAutomationSignalAsync(SendAutomationSignalRequest request, CancellationToken cancellationToken);
    internal virtual SendCommandResponse SendCommand(SendCommandRequest request);
    public virtual Task`1<SendCommandResponse> SendCommandAsync(string documentName, List`1<string> instanceIds, CancellationToken cancellationToken);
    public virtual Task`1<SendCommandResponse> SendCommandAsync(SendCommandRequest request, CancellationToken cancellationToken);
    internal virtual StartAssociationsOnceResponse StartAssociationsOnce(StartAssociationsOnceRequest request);
    public virtual Task`1<StartAssociationsOnceResponse> StartAssociationsOnceAsync(StartAssociationsOnceRequest request, CancellationToken cancellationToken);
    internal virtual StartAutomationExecutionResponse StartAutomationExecution(StartAutomationExecutionRequest request);
    public virtual Task`1<StartAutomationExecutionResponse> StartAutomationExecutionAsync(StartAutomationExecutionRequest request, CancellationToken cancellationToken);
    internal virtual StartChangeRequestExecutionResponse StartChangeRequestExecution(StartChangeRequestExecutionRequest request);
    public virtual Task`1<StartChangeRequestExecutionResponse> StartChangeRequestExecutionAsync(StartChangeRequestExecutionRequest request, CancellationToken cancellationToken);
    internal virtual StartSessionResponse StartSession(StartSessionRequest request);
    public virtual Task`1<StartSessionResponse> StartSessionAsync(StartSessionRequest request, CancellationToken cancellationToken);
    internal virtual StopAutomationExecutionResponse StopAutomationExecution(StopAutomationExecutionRequest request);
    public virtual Task`1<StopAutomationExecutionResponse> StopAutomationExecutionAsync(StopAutomationExecutionRequest request, CancellationToken cancellationToken);
    internal virtual TerminateSessionResponse TerminateSession(TerminateSessionRequest request);
    public virtual Task`1<TerminateSessionResponse> TerminateSessionAsync(TerminateSessionRequest request, CancellationToken cancellationToken);
    internal virtual UnlabelParameterVersionResponse UnlabelParameterVersion(UnlabelParameterVersionRequest request);
    public virtual Task`1<UnlabelParameterVersionResponse> UnlabelParameterVersionAsync(UnlabelParameterVersionRequest request, CancellationToken cancellationToken);
    internal virtual UpdateAssociationResponse UpdateAssociation(UpdateAssociationRequest request);
    public virtual Task`1<UpdateAssociationResponse> UpdateAssociationAsync(UpdateAssociationRequest request, CancellationToken cancellationToken);
    internal virtual UpdateAssociationStatusResponse UpdateAssociationStatus(UpdateAssociationStatusRequest request);
    public virtual Task`1<UpdateAssociationStatusResponse> UpdateAssociationStatusAsync(UpdateAssociationStatusRequest request, CancellationToken cancellationToken);
    internal virtual UpdateDocumentResponse UpdateDocument(UpdateDocumentRequest request);
    public virtual Task`1<UpdateDocumentResponse> UpdateDocumentAsync(UpdateDocumentRequest request, CancellationToken cancellationToken);
    internal virtual UpdateDocumentDefaultVersionResponse UpdateDocumentDefaultVersion(UpdateDocumentDefaultVersionRequest request);
    public virtual Task`1<UpdateDocumentDefaultVersionResponse> UpdateDocumentDefaultVersionAsync(UpdateDocumentDefaultVersionRequest request, CancellationToken cancellationToken);
    internal virtual UpdateDocumentMetadataResponse UpdateDocumentMetadata(UpdateDocumentMetadataRequest request);
    public virtual Task`1<UpdateDocumentMetadataResponse> UpdateDocumentMetadataAsync(UpdateDocumentMetadataRequest request, CancellationToken cancellationToken);
    internal virtual UpdateMaintenanceWindowResponse UpdateMaintenanceWindow(UpdateMaintenanceWindowRequest request);
    public virtual Task`1<UpdateMaintenanceWindowResponse> UpdateMaintenanceWindowAsync(UpdateMaintenanceWindowRequest request, CancellationToken cancellationToken);
    internal virtual UpdateMaintenanceWindowTargetResponse UpdateMaintenanceWindowTarget(UpdateMaintenanceWindowTargetRequest request);
    public virtual Task`1<UpdateMaintenanceWindowTargetResponse> UpdateMaintenanceWindowTargetAsync(UpdateMaintenanceWindowTargetRequest request, CancellationToken cancellationToken);
    internal virtual UpdateMaintenanceWindowTaskResponse UpdateMaintenanceWindowTask(UpdateMaintenanceWindowTaskRequest request);
    public virtual Task`1<UpdateMaintenanceWindowTaskResponse> UpdateMaintenanceWindowTaskAsync(UpdateMaintenanceWindowTaskRequest request, CancellationToken cancellationToken);
    internal virtual UpdateManagedInstanceRoleResponse UpdateManagedInstanceRole(UpdateManagedInstanceRoleRequest request);
    public virtual Task`1<UpdateManagedInstanceRoleResponse> UpdateManagedInstanceRoleAsync(UpdateManagedInstanceRoleRequest request, CancellationToken cancellationToken);
    internal virtual UpdateOpsItemResponse UpdateOpsItem(UpdateOpsItemRequest request);
    public virtual Task`1<UpdateOpsItemResponse> UpdateOpsItemAsync(UpdateOpsItemRequest request, CancellationToken cancellationToken);
    internal virtual UpdateOpsMetadataResponse UpdateOpsMetadata(UpdateOpsMetadataRequest request);
    public virtual Task`1<UpdateOpsMetadataResponse> UpdateOpsMetadataAsync(UpdateOpsMetadataRequest request, CancellationToken cancellationToken);
    internal virtual UpdatePatchBaselineResponse UpdatePatchBaseline(UpdatePatchBaselineRequest request);
    public virtual Task`1<UpdatePatchBaselineResponse> UpdatePatchBaselineAsync(UpdatePatchBaselineRequest request, CancellationToken cancellationToken);
    internal virtual UpdateResourceDataSyncResponse UpdateResourceDataSync(UpdateResourceDataSyncRequest request);
    public virtual Task`1<UpdateResourceDataSyncResponse> UpdateResourceDataSyncAsync(UpdateResourceDataSyncRequest request, CancellationToken cancellationToken);
    internal virtual UpdateServiceSettingResponse UpdateServiceSetting(UpdateServiceSettingRequest request);
    public virtual Task`1<UpdateServiceSettingResponse> UpdateServiceSettingAsync(UpdateServiceSettingRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.SimpleSystemsManagement.AmazonSimpleSystemsManagementConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonSimpleSystemsManagementEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonSimpleSystemsManagementConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.SimpleSystemsManagement.AmazonSimpleSystemsManagementDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonSimpleSystemsManagementDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.SimpleSystemsManagement.AmazonSimpleSystemsManagementException : AmazonServiceException {
    public AmazonSimpleSystemsManagementException(string message);
    public AmazonSimpleSystemsManagementException(string message, Exception innerException);
    public AmazonSimpleSystemsManagementException(Exception innerException);
    public AmazonSimpleSystemsManagementException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonSimpleSystemsManagementException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.AmazonSimpleSystemsManagementRequest : AmazonWebServiceRequest {
}
public class Amazon.SimpleSystemsManagement.AssociationComplianceSeverity : ConstantClass {
    public static AssociationComplianceSeverity CRITICAL;
    public static AssociationComplianceSeverity HIGH;
    public static AssociationComplianceSeverity LOW;
    public static AssociationComplianceSeverity MEDIUM;
    public static AssociationComplianceSeverity UNSPECIFIED;
    public AssociationComplianceSeverity(string value);
    private static AssociationComplianceSeverity();
    public static AssociationComplianceSeverity FindValue(string value);
    public static AssociationComplianceSeverity op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.AssociationExecutionFilterKey : ConstantClass {
    public static AssociationExecutionFilterKey CreatedTime;
    public static AssociationExecutionFilterKey ExecutionId;
    public static AssociationExecutionFilterKey Status;
    public AssociationExecutionFilterKey(string value);
    private static AssociationExecutionFilterKey();
    public static AssociationExecutionFilterKey FindValue(string value);
    public static AssociationExecutionFilterKey op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.AssociationExecutionTargetsFilterKey : ConstantClass {
    public static AssociationExecutionTargetsFilterKey ResourceId;
    public static AssociationExecutionTargetsFilterKey ResourceType;
    public static AssociationExecutionTargetsFilterKey Status;
    public AssociationExecutionTargetsFilterKey(string value);
    private static AssociationExecutionTargetsFilterKey();
    public static AssociationExecutionTargetsFilterKey FindValue(string value);
    public static AssociationExecutionTargetsFilterKey op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.AssociationFilterKey : ConstantClass {
    public static AssociationFilterKey AssociationId;
    public static AssociationFilterKey AssociationName;
    public static AssociationFilterKey AssociationStatusName;
    public static AssociationFilterKey InstanceId;
    public static AssociationFilterKey LastExecutedAfter;
    public static AssociationFilterKey LastExecutedBefore;
    public static AssociationFilterKey Name;
    public static AssociationFilterKey ResourceGroupName;
    public AssociationFilterKey(string value);
    private static AssociationFilterKey();
    public static AssociationFilterKey FindValue(string value);
    public static AssociationFilterKey op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.AssociationFilterOperatorType : ConstantClass {
    public static AssociationFilterOperatorType EQUAL;
    public static AssociationFilterOperatorType GREATER_THAN;
    public static AssociationFilterOperatorType LESS_THAN;
    public AssociationFilterOperatorType(string value);
    private static AssociationFilterOperatorType();
    public static AssociationFilterOperatorType FindValue(string value);
    public static AssociationFilterOperatorType op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.AssociationStatusName : ConstantClass {
    public static AssociationStatusName Failed;
    public static AssociationStatusName Pending;
    public static AssociationStatusName Success;
    public AssociationStatusName(string value);
    private static AssociationStatusName();
    public static AssociationStatusName FindValue(string value);
    public static AssociationStatusName op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.AssociationSyncCompliance : ConstantClass {
    public static AssociationSyncCompliance AUTO;
    public static AssociationSyncCompliance MANUAL;
    public AssociationSyncCompliance(string value);
    private static AssociationSyncCompliance();
    public static AssociationSyncCompliance FindValue(string value);
    public static AssociationSyncCompliance op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.AttachmentHashType : ConstantClass {
    public static AttachmentHashType Sha256;
    public AttachmentHashType(string value);
    private static AttachmentHashType();
    public static AttachmentHashType FindValue(string value);
    public static AttachmentHashType op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.AttachmentsSourceKey : ConstantClass {
    public static AttachmentsSourceKey AttachmentReference;
    public static AttachmentsSourceKey S3FileUrl;
    public static AttachmentsSourceKey SourceUrl;
    public AttachmentsSourceKey(string value);
    private static AttachmentsSourceKey();
    public static AttachmentsSourceKey FindValue(string value);
    public static AttachmentsSourceKey op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.AutomationExecutionFilterKey : ConstantClass {
    public static AutomationExecutionFilterKey AutomationSubtype;
    public static AutomationExecutionFilterKey AutomationType;
    public static AutomationExecutionFilterKey CurrentAction;
    public static AutomationExecutionFilterKey DocumentNamePrefix;
    public static AutomationExecutionFilterKey ExecutionId;
    public static AutomationExecutionFilterKey ExecutionStatus;
    public static AutomationExecutionFilterKey OpsItemId;
    public static AutomationExecutionFilterKey ParentExecutionId;
    public static AutomationExecutionFilterKey StartTimeAfter;
    public static AutomationExecutionFilterKey StartTimeBefore;
    public static AutomationExecutionFilterKey TagKey;
    public static AutomationExecutionFilterKey TargetResourceGroup;
    public AutomationExecutionFilterKey(string value);
    private static AutomationExecutionFilterKey();
    public static AutomationExecutionFilterKey FindValue(string value);
    public static AutomationExecutionFilterKey op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.AutomationExecutionStatus : ConstantClass {
    public static AutomationExecutionStatus Approved;
    public static AutomationExecutionStatus Cancelled;
    public static AutomationExecutionStatus Cancelling;
    public static AutomationExecutionStatus ChangeCalendarOverrideApproved;
    public static AutomationExecutionStatus ChangeCalendarOverrideRejected;
    public static AutomationExecutionStatus CompletedWithFailure;
    public static AutomationExecutionStatus CompletedWithSuccess;
    public static AutomationExecutionStatus Exited;
    public static AutomationExecutionStatus Failed;
    public static AutomationExecutionStatus InProgress;
    public static AutomationExecutionStatus Pending;
    public static AutomationExecutionStatus PendingApproval;
    public static AutomationExecutionStatus PendingChangeCalendarOverride;
    public static AutomationExecutionStatus Rejected;
    public static AutomationExecutionStatus RunbookInProgress;
    public static AutomationExecutionStatus Scheduled;
    public static AutomationExecutionStatus Success;
    public static AutomationExecutionStatus TimedOut;
    public static AutomationExecutionStatus Waiting;
    public AutomationExecutionStatus(string value);
    private static AutomationExecutionStatus();
    public static AutomationExecutionStatus FindValue(string value);
    public static AutomationExecutionStatus op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.AutomationSubtype : ConstantClass {
    public static AutomationSubtype ChangeRequest;
    public AutomationSubtype(string value);
    private static AutomationSubtype();
    public static AutomationSubtype FindValue(string value);
    public static AutomationSubtype op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.AutomationType : ConstantClass {
    public static AutomationType CrossAccount;
    public static AutomationType Local;
    public AutomationType(string value);
    private static AutomationType();
    public static AutomationType FindValue(string value);
    public static AutomationType op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.CalendarState : ConstantClass {
    public static CalendarState CLOSED;
    public static CalendarState OPEN;
    public CalendarState(string value);
    private static CalendarState();
    public static CalendarState FindValue(string value);
    public static CalendarState op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.CommandFilterKey : ConstantClass {
    public static CommandFilterKey DocumentName;
    public static CommandFilterKey ExecutionStage;
    public static CommandFilterKey InvokedAfter;
    public static CommandFilterKey InvokedBefore;
    public static CommandFilterKey Status;
    public CommandFilterKey(string value);
    private static CommandFilterKey();
    public static CommandFilterKey FindValue(string value);
    public static CommandFilterKey op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.CommandInvocationStatus : ConstantClass {
    public static CommandInvocationStatus Cancelled;
    public static CommandInvocationStatus Cancelling;
    public static CommandInvocationStatus Delayed;
    public static CommandInvocationStatus Failed;
    public static CommandInvocationStatus InProgress;
    public static CommandInvocationStatus Pending;
    public static CommandInvocationStatus Success;
    public static CommandInvocationStatus TimedOut;
    public CommandInvocationStatus(string value);
    private static CommandInvocationStatus();
    public static CommandInvocationStatus FindValue(string value);
    public static CommandInvocationStatus op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.CommandPluginStatus : ConstantClass {
    public static CommandPluginStatus Cancelled;
    public static CommandPluginStatus Failed;
    public static CommandPluginStatus InProgress;
    public static CommandPluginStatus Pending;
    public static CommandPluginStatus Success;
    public static CommandPluginStatus TimedOut;
    public CommandPluginStatus(string value);
    private static CommandPluginStatus();
    public static CommandPluginStatus FindValue(string value);
    public static CommandPluginStatus op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.CommandStatus : ConstantClass {
    public static CommandStatus Cancelled;
    public static CommandStatus Cancelling;
    public static CommandStatus Failed;
    public static CommandStatus InProgress;
    public static CommandStatus Pending;
    public static CommandStatus Success;
    public static CommandStatus TimedOut;
    public CommandStatus(string value);
    private static CommandStatus();
    public static CommandStatus FindValue(string value);
    public static CommandStatus op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.ComplianceQueryOperatorType : ConstantClass {
    public static ComplianceQueryOperatorType BEGIN_WITH;
    public static ComplianceQueryOperatorType EQUAL;
    public static ComplianceQueryOperatorType GREATER_THAN;
    public static ComplianceQueryOperatorType LESS_THAN;
    public static ComplianceQueryOperatorType NOT_EQUAL;
    public ComplianceQueryOperatorType(string value);
    private static ComplianceQueryOperatorType();
    public static ComplianceQueryOperatorType FindValue(string value);
    public static ComplianceQueryOperatorType op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.ComplianceSeverity : ConstantClass {
    public static ComplianceSeverity CRITICAL;
    public static ComplianceSeverity HIGH;
    public static ComplianceSeverity INFORMATIONAL;
    public static ComplianceSeverity LOW;
    public static ComplianceSeverity MEDIUM;
    public static ComplianceSeverity UNSPECIFIED;
    public ComplianceSeverity(string value);
    private static ComplianceSeverity();
    public static ComplianceSeverity FindValue(string value);
    public static ComplianceSeverity op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.ComplianceStatus : ConstantClass {
    public static ComplianceStatus COMPLIANT;
    public static ComplianceStatus NON_COMPLIANT;
    public ComplianceStatus(string value);
    private static ComplianceStatus();
    public static ComplianceStatus FindValue(string value);
    public static ComplianceStatus op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.ComplianceUploadType : ConstantClass {
    public static ComplianceUploadType COMPLETE;
    public static ComplianceUploadType PARTIAL;
    public ComplianceUploadType(string value);
    private static ComplianceUploadType();
    public static ComplianceUploadType FindValue(string value);
    public static ComplianceUploadType op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.ConnectionStatus : ConstantClass {
    public static ConnectionStatus Connected;
    public static ConnectionStatus Notconnected;
    public ConnectionStatus(string value);
    private static ConnectionStatus();
    public static ConnectionStatus FindValue(string value);
    public static ConnectionStatus op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.DescribeActivationsFilterKeys : ConstantClass {
    public static DescribeActivationsFilterKeys ActivationIds;
    public static DescribeActivationsFilterKeys DefaultInstanceName;
    public static DescribeActivationsFilterKeys IamRole;
    public DescribeActivationsFilterKeys(string value);
    private static DescribeActivationsFilterKeys();
    public static DescribeActivationsFilterKeys FindValue(string value);
    public static DescribeActivationsFilterKeys op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.DocumentFilterKey : ConstantClass {
    public static DocumentFilterKey DocumentType;
    public static DocumentFilterKey Name;
    public static DocumentFilterKey Owner;
    public static DocumentFilterKey PlatformTypes;
    public DocumentFilterKey(string value);
    private static DocumentFilterKey();
    public static DocumentFilterKey FindValue(string value);
    public static DocumentFilterKey op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.DocumentFormat : ConstantClass {
    public static DocumentFormat JSON;
    public static DocumentFormat TEXT;
    public static DocumentFormat YAML;
    public DocumentFormat(string value);
    private static DocumentFormat();
    public static DocumentFormat FindValue(string value);
    public static DocumentFormat op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.DocumentHashType : ConstantClass {
    public static DocumentHashType Sha1;
    public static DocumentHashType Sha256;
    public DocumentHashType(string value);
    private static DocumentHashType();
    public static DocumentHashType FindValue(string value);
    public static DocumentHashType op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.DocumentMetadataEnum : ConstantClass {
    public static DocumentMetadataEnum DocumentReviews;
    public DocumentMetadataEnum(string value);
    private static DocumentMetadataEnum();
    public static DocumentMetadataEnum FindValue(string value);
    public static DocumentMetadataEnum op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.DocumentParameterType : ConstantClass {
    public static DocumentParameterType String;
    public static DocumentParameterType StringList;
    public DocumentParameterType(string value);
    private static DocumentParameterType();
    public static DocumentParameterType FindValue(string value);
    public static DocumentParameterType op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.DocumentPermissionType : ConstantClass {
    public static DocumentPermissionType Share;
    public DocumentPermissionType(string value);
    private static DocumentPermissionType();
    public static DocumentPermissionType FindValue(string value);
    public static DocumentPermissionType op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.DocumentReviewAction : ConstantClass {
    public static DocumentReviewAction Approve;
    public static DocumentReviewAction Reject;
    public static DocumentReviewAction SendForReview;
    public static DocumentReviewAction UpdateReview;
    public DocumentReviewAction(string value);
    private static DocumentReviewAction();
    public static DocumentReviewAction FindValue(string value);
    public static DocumentReviewAction op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.DocumentReviewCommentType : ConstantClass {
    public static DocumentReviewCommentType Comment;
    public DocumentReviewCommentType(string value);
    private static DocumentReviewCommentType();
    public static DocumentReviewCommentType FindValue(string value);
    public static DocumentReviewCommentType op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.DocumentStatus : ConstantClass {
    public static DocumentStatus Active;
    public static DocumentStatus Creating;
    public static DocumentStatus Deleting;
    public static DocumentStatus Failed;
    public static DocumentStatus Updating;
    public DocumentStatus(string value);
    private static DocumentStatus();
    public static DocumentStatus FindValue(string value);
    public static DocumentStatus op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.DocumentType : ConstantClass {
    public static DocumentType ApplicationConfiguration;
    public static DocumentType ApplicationConfigurationSchema;
    public static DocumentType Automation;
    public static DocumentType AutomationChangeTemplate;
    public static DocumentType ChangeCalendar;
    public static DocumentType CloudFormation;
    public static DocumentType Command;
    public static DocumentType ConformancePackTemplate;
    public static DocumentType DeploymentStrategy;
    public static DocumentType Package;
    public static DocumentType Policy;
    public static DocumentType ProblemAnalysis;
    public static DocumentType ProblemAnalysisTemplate;
    public static DocumentType QuickSetup;
    public static DocumentType Session;
    public DocumentType(string value);
    private static DocumentType();
    public static DocumentType FindValue(string value);
    public static DocumentType op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.Endpoints.SimpleSystemsManagementEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.SimpleSystemsManagement.ExecutionMode : ConstantClass {
    public static ExecutionMode Auto;
    public static ExecutionMode Interactive;
    public ExecutionMode(string value);
    private static ExecutionMode();
    public static ExecutionMode FindValue(string value);
    public static ExecutionMode op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.ExternalAlarmState : ConstantClass {
    public static ExternalAlarmState ALARM;
    public static ExternalAlarmState UNKNOWN;
    public ExternalAlarmState(string value);
    private static ExternalAlarmState();
    public static ExternalAlarmState FindValue(string value);
    public static ExternalAlarmState op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.Fault : ConstantClass {
    public static Fault Client;
    public static Fault Server;
    public static Fault Unknown;
    public Fault(string value);
    private static Fault();
    public static Fault FindValue(string value);
    public static Fault op_Implicit(string value);
}
public interface Amazon.SimpleSystemsManagement.IAmazonSimpleSystemsManagement {
    public ISimpleSystemsManagementPaginatorFactory Paginators { get; }
    public abstract virtual ISimpleSystemsManagementPaginatorFactory get_Paginators();
    public abstract virtual Task`1<AddTagsToResourceResponse> AddTagsToResourceAsync(AddTagsToResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssociateOpsItemRelatedItemResponse> AssociateOpsItemRelatedItemAsync(AssociateOpsItemRelatedItemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelCommandResponse> CancelCommandAsync(string commandId, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelCommandResponse> CancelCommandAsync(string commandId, List`1<string> instanceIds, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelCommandResponse> CancelCommandAsync(CancelCommandRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelMaintenanceWindowExecutionResponse> CancelMaintenanceWindowExecutionAsync(CancelMaintenanceWindowExecutionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateActivationResponse> CreateActivationAsync(CreateActivationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateAssociationResponse> CreateAssociationAsync(string instanceId, string name, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateAssociationResponse> CreateAssociationAsync(CreateAssociationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateAssociationBatchResponse> CreateAssociationBatchAsync(CreateAssociationBatchRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDocumentResponse> CreateDocumentAsync(string content, string name, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDocumentResponse> CreateDocumentAsync(CreateDocumentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateMaintenanceWindowResponse> CreateMaintenanceWindowAsync(CreateMaintenanceWindowRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateOpsItemResponse> CreateOpsItemAsync(CreateOpsItemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateOpsMetadataResponse> CreateOpsMetadataAsync(CreateOpsMetadataRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreatePatchBaselineResponse> CreatePatchBaselineAsync(CreatePatchBaselineRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateResourceDataSyncResponse> CreateResourceDataSyncAsync(CreateResourceDataSyncRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteActivationResponse> DeleteActivationAsync(DeleteActivationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteAssociationResponse> DeleteAssociationAsync(string instanceId, string name, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteAssociationResponse> DeleteAssociationAsync(DeleteAssociationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDocumentResponse> DeleteDocumentAsync(string name, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDocumentResponse> DeleteDocumentAsync(DeleteDocumentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteInventoryResponse> DeleteInventoryAsync(DeleteInventoryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteMaintenanceWindowResponse> DeleteMaintenanceWindowAsync(DeleteMaintenanceWindowRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteOpsItemResponse> DeleteOpsItemAsync(DeleteOpsItemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteOpsMetadataResponse> DeleteOpsMetadataAsync(DeleteOpsMetadataRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteParameterResponse> DeleteParameterAsync(DeleteParameterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteParametersResponse> DeleteParametersAsync(DeleteParametersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeletePatchBaselineResponse> DeletePatchBaselineAsync(DeletePatchBaselineRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteResourceDataSyncResponse> DeleteResourceDataSyncAsync(DeleteResourceDataSyncRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteResourcePolicyResponse> DeleteResourcePolicyAsync(DeleteResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeregisterManagedInstanceResponse> DeregisterManagedInstanceAsync(DeregisterManagedInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeregisterPatchBaselineForPatchGroupResponse> DeregisterPatchBaselineForPatchGroupAsync(DeregisterPatchBaselineForPatchGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeregisterTargetFromMaintenanceWindowResponse> DeregisterTargetFromMaintenanceWindowAsync(DeregisterTargetFromMaintenanceWindowRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeregisterTaskFromMaintenanceWindowResponse> DeregisterTaskFromMaintenanceWindowAsync(DeregisterTaskFromMaintenanceWindowRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeActivationsResponse> DescribeActivationsAsync(DescribeActivationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAssociationResponse> DescribeAssociationAsync(string instanceId, string name, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAssociationResponse> DescribeAssociationAsync(DescribeAssociationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAssociationExecutionsResponse> DescribeAssociationExecutionsAsync(DescribeAssociationExecutionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAssociationExecutionTargetsResponse> DescribeAssociationExecutionTargetsAsync(DescribeAssociationExecutionTargetsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAutomationExecutionsResponse> DescribeAutomationExecutionsAsync(DescribeAutomationExecutionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAutomationStepExecutionsResponse> DescribeAutomationStepExecutionsAsync(DescribeAutomationStepExecutionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAvailablePatchesResponse> DescribeAvailablePatchesAsync(DescribeAvailablePatchesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDocumentResponse> DescribeDocumentAsync(string name, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDocumentResponse> DescribeDocumentAsync(DescribeDocumentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDocumentPermissionResponse> DescribeDocumentPermissionAsync(DescribeDocumentPermissionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeEffectiveInstanceAssociationsResponse> DescribeEffectiveInstanceAssociationsAsync(DescribeEffectiveInstanceAssociationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeEffectivePatchesForPatchBaselineResponse> DescribeEffectivePatchesForPatchBaselineAsync(DescribeEffectivePatchesForPatchBaselineRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInstanceAssociationsStatusResponse> DescribeInstanceAssociationsStatusAsync(DescribeInstanceAssociationsStatusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInstanceInformationResponse> DescribeInstanceInformationAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInstanceInformationResponse> DescribeInstanceInformationAsync(DescribeInstanceInformationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInstancePatchesResponse> DescribeInstancePatchesAsync(DescribeInstancePatchesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInstancePatchStatesResponse> DescribeInstancePatchStatesAsync(DescribeInstancePatchStatesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInstancePatchStatesForPatchGroupResponse> DescribeInstancePatchStatesForPatchGroupAsync(DescribeInstancePatchStatesForPatchGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInstancePropertiesResponse> DescribeInstancePropertiesAsync(DescribeInstancePropertiesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInventoryDeletionsResponse> DescribeInventoryDeletionsAsync(DescribeInventoryDeletionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeMaintenanceWindowExecutionsResponse> DescribeMaintenanceWindowExecutionsAsync(DescribeMaintenanceWindowExecutionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeMaintenanceWindowExecutionTaskInvocationsResponse> DescribeMaintenanceWindowExecutionTaskInvocationsAsync(DescribeMaintenanceWindowExecutionTaskInvocationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeMaintenanceWindowExecutionTasksResponse> DescribeMaintenanceWindowExecutionTasksAsync(DescribeMaintenanceWindowExecutionTasksRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeMaintenanceWindowsResponse> DescribeMaintenanceWindowsAsync(DescribeMaintenanceWindowsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeMaintenanceWindowScheduleResponse> DescribeMaintenanceWindowScheduleAsync(DescribeMaintenanceWindowScheduleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeMaintenanceWindowsForTargetResponse> DescribeMaintenanceWindowsForTargetAsync(DescribeMaintenanceWindowsForTargetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeMaintenanceWindowTargetsResponse> DescribeMaintenanceWindowTargetsAsync(DescribeMaintenanceWindowTargetsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeMaintenanceWindowTasksResponse> DescribeMaintenanceWindowTasksAsync(DescribeMaintenanceWindowTasksRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeOpsItemsResponse> DescribeOpsItemsAsync(DescribeOpsItemsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeParametersResponse> DescribeParametersAsync(DescribeParametersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribePatchBaselinesResponse> DescribePatchBaselinesAsync(DescribePatchBaselinesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribePatchGroupsResponse> DescribePatchGroupsAsync(DescribePatchGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribePatchGroupStateResponse> DescribePatchGroupStateAsync(DescribePatchGroupStateRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribePatchPropertiesResponse> DescribePatchPropertiesAsync(DescribePatchPropertiesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSessionsResponse> DescribeSessionsAsync(DescribeSessionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisassociateOpsItemRelatedItemResponse> DisassociateOpsItemRelatedItemAsync(DisassociateOpsItemRelatedItemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAutomationExecutionResponse> GetAutomationExecutionAsync(GetAutomationExecutionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCalendarStateResponse> GetCalendarStateAsync(GetCalendarStateRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCommandInvocationResponse> GetCommandInvocationAsync(GetCommandInvocationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetConnectionStatusResponse> GetConnectionStatusAsync(GetConnectionStatusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetDefaultPatchBaselineResponse> GetDefaultPatchBaselineAsync(GetDefaultPatchBaselineRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetDeployablePatchSnapshotForInstanceResponse> GetDeployablePatchSnapshotForInstanceAsync(GetDeployablePatchSnapshotForInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetDocumentResponse> GetDocumentAsync(string name, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetDocumentResponse> GetDocumentAsync(GetDocumentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetInventoryResponse> GetInventoryAsync(GetInventoryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetInventorySchemaResponse> GetInventorySchemaAsync(GetInventorySchemaRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetMaintenanceWindowResponse> GetMaintenanceWindowAsync(GetMaintenanceWindowRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetMaintenanceWindowExecutionResponse> GetMaintenanceWindowExecutionAsync(GetMaintenanceWindowExecutionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetMaintenanceWindowExecutionTaskResponse> GetMaintenanceWindowExecutionTaskAsync(GetMaintenanceWindowExecutionTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetMaintenanceWindowExecutionTaskInvocationResponse> GetMaintenanceWindowExecutionTaskInvocationAsync(GetMaintenanceWindowExecutionTaskInvocationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetMaintenanceWindowTaskResponse> GetMaintenanceWindowTaskAsync(GetMaintenanceWindowTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetOpsItemResponse> GetOpsItemAsync(GetOpsItemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetOpsMetadataResponse> GetOpsMetadataAsync(GetOpsMetadataRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetOpsSummaryResponse> GetOpsSummaryAsync(GetOpsSummaryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetParameterResponse> GetParameterAsync(GetParameterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetParameterHistoryResponse> GetParameterHistoryAsync(GetParameterHistoryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetParametersResponse> GetParametersAsync(GetParametersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetParametersByPathResponse> GetParametersByPathAsync(GetParametersByPathRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetPatchBaselineResponse> GetPatchBaselineAsync(GetPatchBaselineRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetPatchBaselineForPatchGroupResponse> GetPatchBaselineForPatchGroupAsync(GetPatchBaselineForPatchGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetResourcePoliciesResponse> GetResourcePoliciesAsync(GetResourcePoliciesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetServiceSettingResponse> GetServiceSettingAsync(GetServiceSettingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<LabelParameterVersionResponse> LabelParameterVersionAsync(LabelParameterVersionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListAssociationsResponse> ListAssociationsAsync(ListAssociationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListAssociationVersionsResponse> ListAssociationVersionsAsync(ListAssociationVersionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListCommandInvocationsResponse> ListCommandInvocationsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<ListCommandInvocationsResponse> ListCommandInvocationsAsync(string commandId, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListCommandInvocationsResponse> ListCommandInvocationsAsync(ListCommandInvocationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListCommandsResponse> ListCommandsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<ListCommandsResponse> ListCommandsAsync(string commandId, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListCommandsResponse> ListCommandsAsync(ListCommandsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListComplianceItemsResponse> ListComplianceItemsAsync(ListComplianceItemsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListComplianceSummariesResponse> ListComplianceSummariesAsync(ListComplianceSummariesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDocumentMetadataHistoryResponse> ListDocumentMetadataHistoryAsync(ListDocumentMetadataHistoryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDocumentsResponse> ListDocumentsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDocumentsResponse> ListDocumentsAsync(ListDocumentsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDocumentVersionsResponse> ListDocumentVersionsAsync(ListDocumentVersionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListInventoryEntriesResponse> ListInventoryEntriesAsync(ListInventoryEntriesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListOpsItemEventsResponse> ListOpsItemEventsAsync(ListOpsItemEventsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListOpsItemRelatedItemsResponse> ListOpsItemRelatedItemsAsync(ListOpsItemRelatedItemsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListOpsMetadataResponse> ListOpsMetadataAsync(ListOpsMetadataRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListResourceComplianceSummariesResponse> ListResourceComplianceSummariesAsync(ListResourceComplianceSummariesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListResourceDataSyncResponse> ListResourceDataSyncAsync(ListResourceDataSyncRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyDocumentPermissionResponse> ModifyDocumentPermissionAsync(ModifyDocumentPermissionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutComplianceItemsResponse> PutComplianceItemsAsync(PutComplianceItemsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutInventoryResponse> PutInventoryAsync(PutInventoryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutParameterResponse> PutParameterAsync(PutParameterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutResourcePolicyResponse> PutResourcePolicyAsync(PutResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RegisterDefaultPatchBaselineResponse> RegisterDefaultPatchBaselineAsync(RegisterDefaultPatchBaselineRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RegisterPatchBaselineForPatchGroupResponse> RegisterPatchBaselineForPatchGroupAsync(RegisterPatchBaselineForPatchGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RegisterTargetWithMaintenanceWindowResponse> RegisterTargetWithMaintenanceWindowAsync(RegisterTargetWithMaintenanceWindowRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RegisterTaskWithMaintenanceWindowResponse> RegisterTaskWithMaintenanceWindowAsync(RegisterTaskWithMaintenanceWindowRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemoveTagsFromResourceResponse> RemoveTagsFromResourceAsync(RemoveTagsFromResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResetServiceSettingResponse> ResetServiceSettingAsync(ResetServiceSettingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResumeSessionResponse> ResumeSessionAsync(ResumeSessionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SendAutomationSignalResponse> SendAutomationSignalAsync(SendAutomationSignalRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SendCommandResponse> SendCommandAsync(string documentName, List`1<string> instanceIds, CancellationToken cancellationToken);
    public abstract virtual Task`1<SendCommandResponse> SendCommandAsync(SendCommandRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartAssociationsOnceResponse> StartAssociationsOnceAsync(StartAssociationsOnceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartAutomationExecutionResponse> StartAutomationExecutionAsync(StartAutomationExecutionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartChangeRequestExecutionResponse> StartChangeRequestExecutionAsync(StartChangeRequestExecutionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartSessionResponse> StartSessionAsync(StartSessionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StopAutomationExecutionResponse> StopAutomationExecutionAsync(StopAutomationExecutionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TerminateSessionResponse> TerminateSessionAsync(TerminateSessionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UnlabelParameterVersionResponse> UnlabelParameterVersionAsync(UnlabelParameterVersionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateAssociationResponse> UpdateAssociationAsync(UpdateAssociationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateAssociationStatusResponse> UpdateAssociationStatusAsync(UpdateAssociationStatusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateDocumentResponse> UpdateDocumentAsync(UpdateDocumentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateDocumentDefaultVersionResponse> UpdateDocumentDefaultVersionAsync(UpdateDocumentDefaultVersionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateDocumentMetadataResponse> UpdateDocumentMetadataAsync(UpdateDocumentMetadataRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateMaintenanceWindowResponse> UpdateMaintenanceWindowAsync(UpdateMaintenanceWindowRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateMaintenanceWindowTargetResponse> UpdateMaintenanceWindowTargetAsync(UpdateMaintenanceWindowTargetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateMaintenanceWindowTaskResponse> UpdateMaintenanceWindowTaskAsync(UpdateMaintenanceWindowTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateManagedInstanceRoleResponse> UpdateManagedInstanceRoleAsync(UpdateManagedInstanceRoleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateOpsItemResponse> UpdateOpsItemAsync(UpdateOpsItemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateOpsMetadataResponse> UpdateOpsMetadataAsync(UpdateOpsMetadataRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdatePatchBaselineResponse> UpdatePatchBaselineAsync(UpdatePatchBaselineRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateResourceDataSyncResponse> UpdateResourceDataSyncAsync(UpdateResourceDataSyncRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateServiceSettingResponse> UpdateServiceSettingAsync(UpdateServiceSettingRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    [DynamicDependencyAttribute("512", "Amazon.SimpleSystemsManagement.AmazonSimpleSystemsManagementConfig")]
private static override ClientConfig Amazon.Runtime.IAmazonService.CreateDefaultClientConfig();
    [UnconditionalSuppressMessageAttribute("AssemblyLoadTrimming", "IL2026:RequiresUnreferencedCode")]
private static override IAmazonService Amazon.Runtime.IAmazonService.CreateDefaultServiceClient(AWSCredentials awsCredentials, ClientConfig clientConfig);
}
public class Amazon.SimpleSystemsManagement.InstanceInformationFilterKey : ConstantClass {
    public static InstanceInformationFilterKey ActivationIds;
    public static InstanceInformationFilterKey AgentVersion;
    public static InstanceInformationFilterKey AssociationStatus;
    public static InstanceInformationFilterKey IamRole;
    public static InstanceInformationFilterKey InstanceIds;
    public static InstanceInformationFilterKey PingStatus;
    public static InstanceInformationFilterKey PlatformTypes;
    public static InstanceInformationFilterKey ResourceType;
    public InstanceInformationFilterKey(string value);
    private static InstanceInformationFilterKey();
    public static InstanceInformationFilterKey FindValue(string value);
    public static InstanceInformationFilterKey op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.InstancePatchStateOperatorType : ConstantClass {
    public static InstancePatchStateOperatorType Equal;
    public static InstancePatchStateOperatorType GreaterThan;
    public static InstancePatchStateOperatorType LessThan;
    public static InstancePatchStateOperatorType NotEqual;
    public InstancePatchStateOperatorType(string value);
    private static InstancePatchStateOperatorType();
    public static InstancePatchStateOperatorType FindValue(string value);
    public static InstancePatchStateOperatorType op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.InstancePropertyFilterKey : ConstantClass {
    public static InstancePropertyFilterKey ActivationIds;
    public static InstancePropertyFilterKey AgentVersion;
    public static InstancePropertyFilterKey AssociationStatus;
    public static InstancePropertyFilterKey DocumentName;
    public static InstancePropertyFilterKey IamRole;
    public static InstancePropertyFilterKey InstanceIds;
    public static InstancePropertyFilterKey PingStatus;
    public static InstancePropertyFilterKey PlatformTypes;
    public static InstancePropertyFilterKey ResourceType;
    public InstancePropertyFilterKey(string value);
    private static InstancePropertyFilterKey();
    public static InstancePropertyFilterKey FindValue(string value);
    public static InstancePropertyFilterKey op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.InstancePropertyFilterOperator : ConstantClass {
    public static InstancePropertyFilterOperator BeginWith;
    public static InstancePropertyFilterOperator Equal;
    public static InstancePropertyFilterOperator GreaterThan;
    public static InstancePropertyFilterOperator LessThan;
    public static InstancePropertyFilterOperator NotEqual;
    public InstancePropertyFilterOperator(string value);
    private static InstancePropertyFilterOperator();
    public static InstancePropertyFilterOperator FindValue(string value);
    public static InstancePropertyFilterOperator op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.Internal.AmazonSimpleSystemsManagementEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.SimpleSystemsManagement.Internal.AmazonSimpleSystemsManagementEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.SimpleSystemsManagement.Internal.AmazonSimpleSystemsManagementMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.SimpleSystemsManagement.InventoryAttributeDataType : ConstantClass {
    public static InventoryAttributeDataType Number;
    public static InventoryAttributeDataType String;
    public InventoryAttributeDataType(string value);
    private static InventoryAttributeDataType();
    public static InventoryAttributeDataType FindValue(string value);
    public static InventoryAttributeDataType op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.InventoryDeletionStatus : ConstantClass {
    public static InventoryDeletionStatus Complete;
    public static InventoryDeletionStatus InProgress;
    public InventoryDeletionStatus(string value);
    private static InventoryDeletionStatus();
    public static InventoryDeletionStatus FindValue(string value);
    public static InventoryDeletionStatus op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.InventoryQueryOperatorType : ConstantClass {
    public static InventoryQueryOperatorType BeginWith;
    public static InventoryQueryOperatorType Equal;
    public static InventoryQueryOperatorType Exists;
    public static InventoryQueryOperatorType GreaterThan;
    public static InventoryQueryOperatorType LessThan;
    public static InventoryQueryOperatorType NotEqual;
    public InventoryQueryOperatorType(string value);
    private static InventoryQueryOperatorType();
    public static InventoryQueryOperatorType FindValue(string value);
    public static InventoryQueryOperatorType op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.InventorySchemaDeleteOption : ConstantClass {
    public static InventorySchemaDeleteOption DeleteSchema;
    public static InventorySchemaDeleteOption DisableSchema;
    public InventorySchemaDeleteOption(string value);
    private static InventorySchemaDeleteOption();
    public static InventorySchemaDeleteOption FindValue(string value);
    public static InventorySchemaDeleteOption op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.LastResourceDataSyncStatus : ConstantClass {
    public static LastResourceDataSyncStatus Failed;
    public static LastResourceDataSyncStatus InProgress;
    public static LastResourceDataSyncStatus Successful;
    public LastResourceDataSyncStatus(string value);
    private static LastResourceDataSyncStatus();
    public static LastResourceDataSyncStatus FindValue(string value);
    public static LastResourceDataSyncStatus op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.MaintenanceWindowExecutionStatus : ConstantClass {
    public static MaintenanceWindowExecutionStatus CANCELLED;
    public static MaintenanceWindowExecutionStatus CANCELLING;
    public static MaintenanceWindowExecutionStatus FAILED;
    public static MaintenanceWindowExecutionStatus IN_PROGRESS;
    public static MaintenanceWindowExecutionStatus PENDING;
    public static MaintenanceWindowExecutionStatus SKIPPED_OVERLAPPING;
    public static MaintenanceWindowExecutionStatus SUCCESS;
    public static MaintenanceWindowExecutionStatus TIMED_OUT;
    public MaintenanceWindowExecutionStatus(string value);
    private static MaintenanceWindowExecutionStatus();
    public static MaintenanceWindowExecutionStatus FindValue(string value);
    public static MaintenanceWindowExecutionStatus op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.MaintenanceWindowResourceType : ConstantClass {
    public static MaintenanceWindowResourceType INSTANCE;
    public static MaintenanceWindowResourceType RESOURCE_GROUP;
    public MaintenanceWindowResourceType(string value);
    private static MaintenanceWindowResourceType();
    public static MaintenanceWindowResourceType FindValue(string value);
    public static MaintenanceWindowResourceType op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.MaintenanceWindowTaskCutoffBehavior : ConstantClass {
    public static MaintenanceWindowTaskCutoffBehavior CANCEL_TASK;
    public static MaintenanceWindowTaskCutoffBehavior CONTINUE_TASK;
    public MaintenanceWindowTaskCutoffBehavior(string value);
    private static MaintenanceWindowTaskCutoffBehavior();
    public static MaintenanceWindowTaskCutoffBehavior FindValue(string value);
    public static MaintenanceWindowTaskCutoffBehavior op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.MaintenanceWindowTaskType : ConstantClass {
    public static MaintenanceWindowTaskType AUTOMATION;
    public static MaintenanceWindowTaskType LAMBDA;
    public static MaintenanceWindowTaskType RUN_COMMAND;
    public static MaintenanceWindowTaskType STEP_FUNCTIONS;
    public MaintenanceWindowTaskType(string value);
    private static MaintenanceWindowTaskType();
    public static MaintenanceWindowTaskType FindValue(string value);
    public static MaintenanceWindowTaskType op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.Model.AccountSharingInfo : object {
    private string _accountId;
    private string _sharedDocumentVersion;
    public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string SharedDocumentVersion { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_SharedDocumentVersion();
    public void set_SharedDocumentVersion(string value);
    internal bool IsSetSharedDocumentVersion();
}
public class Amazon.SimpleSystemsManagement.Model.Activation : object {
    private string _activationId;
    private Nullable`1<DateTime> _createdDate;
    private string _defaultInstanceName;
    private string _description;
    private Nullable`1<DateTime> _expirationDate;
    private Nullable`1<bool> _expired;
    private string _iamRole;
    private Nullable`1<int> _registrationLimit;
    private Nullable`1<int> _registrationsCount;
    private List`1<Tag> _tags;
    public string ActivationId { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    [AWSPropertyAttribute]
public string DefaultInstanceName { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public Nullable`1<DateTime> ExpirationDate { get; public set; }
    public Nullable`1<bool> Expired { get; public set; }
    [AWSPropertyAttribute]
public string IamRole { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RegistrationLimit { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RegistrationsCount { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_ActivationId();
    public void set_ActivationId(string value);
    internal bool IsSetActivationId();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_DefaultInstanceName();
    public void set_DefaultInstanceName(string value);
    internal bool IsSetDefaultInstanceName();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<DateTime> get_ExpirationDate();
    public void set_ExpirationDate(Nullable`1<DateTime> value);
    internal bool IsSetExpirationDate();
    public Nullable`1<bool> get_Expired();
    public void set_Expired(Nullable`1<bool> value);
    internal bool IsSetExpired();
    public string get_IamRole();
    public void set_IamRole(string value);
    internal bool IsSetIamRole();
    public Nullable`1<int> get_RegistrationLimit();
    public void set_RegistrationLimit(Nullable`1<int> value);
    internal bool IsSetRegistrationLimit();
    public Nullable`1<int> get_RegistrationsCount();
    public void set_RegistrationsCount(Nullable`1<int> value);
    internal bool IsSetRegistrationsCount();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.SimpleSystemsManagement.Model.AddTagsToResourceRequest : AmazonSimpleSystemsManagementRequest {
    private string _resourceId;
    private ResourceTypeForTagging _resourceType;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string ResourceId { get; public set; }
    [AWSPropertyAttribute]
public ResourceTypeForTagging ResourceType { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public ResourceTypeForTagging get_ResourceType();
    public void set_ResourceType(ResourceTypeForTagging value);
    internal bool IsSetResourceType();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.SimpleSystemsManagement.Model.AddTagsToResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleSystemsManagement.Model.Alarm : object {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleSystemsManagement.Model.AlarmConfiguration : object {
    private List`1<Alarm> _alarms;
    private Nullable`1<bool> _ignorePollAlarmFailure;
    [AWSPropertyAttribute]
public List`1<Alarm> Alarms { get; public set; }
    public Nullable`1<bool> IgnorePollAlarmFailure { get; public set; }
    public List`1<Alarm> get_Alarms();
    public void set_Alarms(List`1<Alarm> value);
    internal bool IsSetAlarms();
    public Nullable`1<bool> get_IgnorePollAlarmFailure();
    public void set_IgnorePollAlarmFailure(Nullable`1<bool> value);
    internal bool IsSetIgnorePollAlarmFailure();
}
public class Amazon.SimpleSystemsManagement.Model.AlarmStateInformation : object {
    private string _name;
    private ExternalAlarmState _state;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public ExternalAlarmState State { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public ExternalAlarmState get_State();
    public void set_State(ExternalAlarmState value);
    internal bool IsSetState();
}
public class Amazon.SimpleSystemsManagement.Model.AlreadyExistsException : AmazonSimpleSystemsManagementException {
    public AlreadyExistsException(string message);
    public AlreadyExistsException(string message, Exception innerException);
    public AlreadyExistsException(Exception innerException);
    public AlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.AssociatedInstancesException : AmazonSimpleSystemsManagementException {
    public AssociatedInstancesException(string message);
    public AssociatedInstancesException(string message, Exception innerException);
    public AssociatedInstancesException(Exception innerException);
    public AssociatedInstancesException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AssociatedInstancesException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.AssociateOpsItemRelatedItemRequest : AmazonSimpleSystemsManagementRequest {
    private string _associationType;
    private string _opsItemId;
    private string _resourceType;
    private string _resourceUri;
    [AWSPropertyAttribute]
public string AssociationType { get; public set; }
    [AWSPropertyAttribute]
public string OpsItemId { get; public set; }
    [AWSPropertyAttribute]
public string ResourceType { get; public set; }
    [AWSPropertyAttribute]
public string ResourceUri { get; public set; }
    public string get_AssociationType();
    public void set_AssociationType(string value);
    internal bool IsSetAssociationType();
    public string get_OpsItemId();
    public void set_OpsItemId(string value);
    internal bool IsSetOpsItemId();
    public string get_ResourceType();
    public void set_ResourceType(string value);
    internal bool IsSetResourceType();
    public string get_ResourceUri();
    public void set_ResourceUri(string value);
    internal bool IsSetResourceUri();
}
public class Amazon.SimpleSystemsManagement.Model.AssociateOpsItemRelatedItemResponse : AmazonWebServiceResponse {
    private string _associationId;
    public string AssociationId { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
}
public class Amazon.SimpleSystemsManagement.Model.Association : object {
    private string _associationId;
    private string _associationName;
    private string _associationVersion;
    private string _documentVersion;
    private Nullable`1<int> _duration;
    private string _instanceId;
    private Nullable`1<DateTime> _lastExecutionDate;
    private string _name;
    private AssociationOverview _overview;
    private string _scheduleExpression;
    private Nullable`1<int> _scheduleOffset;
    private List`1<Dictionary`2<string, List`1<string>>> _targetMaps;
    private List`1<Target> _targets;
    public string AssociationId { get; public set; }
    public string AssociationName { get; public set; }
    public string AssociationVersion { get; public set; }
    public string DocumentVersion { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Duration { get; public set; }
    public string InstanceId { get; public set; }
    public Nullable`1<DateTime> LastExecutionDate { get; public set; }
    public string Name { get; public set; }
    public AssociationOverview Overview { get; public set; }
    [AWSPropertyAttribute]
public string ScheduleExpression { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ScheduleOffset { get; public set; }
    [AWSPropertyAttribute]
public List`1<Dictionary`2<string, List`1<string>>> TargetMaps { get; public set; }
    [AWSPropertyAttribute]
public List`1<Target> Targets { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_AssociationName();
    public void set_AssociationName(string value);
    internal bool IsSetAssociationName();
    public string get_AssociationVersion();
    public void set_AssociationVersion(string value);
    internal bool IsSetAssociationVersion();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public Nullable`1<int> get_Duration();
    public void set_Duration(Nullable`1<int> value);
    internal bool IsSetDuration();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public Nullable`1<DateTime> get_LastExecutionDate();
    public void set_LastExecutionDate(Nullable`1<DateTime> value);
    internal bool IsSetLastExecutionDate();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public AssociationOverview get_Overview();
    public void set_Overview(AssociationOverview value);
    internal bool IsSetOverview();
    public string get_ScheduleExpression();
    public void set_ScheduleExpression(string value);
    internal bool IsSetScheduleExpression();
    public Nullable`1<int> get_ScheduleOffset();
    public void set_ScheduleOffset(Nullable`1<int> value);
    internal bool IsSetScheduleOffset();
    public List`1<Dictionary`2<string, List`1<string>>> get_TargetMaps();
    public void set_TargetMaps(List`1<Dictionary`2<string, List`1<string>>> value);
    internal bool IsSetTargetMaps();
    public List`1<Target> get_Targets();
    public void set_Targets(List`1<Target> value);
    internal bool IsSetTargets();
}
public class Amazon.SimpleSystemsManagement.Model.AssociationAlreadyExistsException : AmazonSimpleSystemsManagementException {
    public AssociationAlreadyExistsException(string message);
    public AssociationAlreadyExistsException(string message, Exception innerException);
    public AssociationAlreadyExistsException(Exception innerException);
    public AssociationAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AssociationAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.AssociationDescription : object {
    private AlarmConfiguration _alarmConfiguration;
    private Nullable`1<bool> _applyOnlyAtCronInterval;
    private string _associationId;
    private string _associationName;
    private string _associationVersion;
    private string _automationTargetParameterName;
    private List`1<string> _calendarNames;
    private AssociationComplianceSeverity _complianceSeverity;
    private Nullable`1<DateTime> _date;
    private string _documentVersion;
    private Nullable`1<int> _duration;
    private string _instanceId;
    private Nullable`1<DateTime> _lastExecutionDate;
    private Nullable`1<DateTime> _lastSuccessfulExecutionDate;
    private Nullable`1<DateTime> _lastUpdateAssociationDate;
    private string _maxConcurrency;
    private string _maxErrors;
    private string _name;
    private InstanceAssociationOutputLocation _outputLocation;
    private AssociationOverview _overview;
    private Dictionary`2<string, List`1<string>> _parameters;
    private string _scheduleExpression;
    private Nullable`1<int> _scheduleOffset;
    private AssociationStatus _status;
    private AssociationSyncCompliance _syncCompliance;
    private List`1<TargetLocation> _targetLocations;
    private List`1<Dictionary`2<string, List`1<string>>> _targetMaps;
    private List`1<Target> _targets;
    private List`1<AlarmStateInformation> _triggeredAlarms;
    public AlarmConfiguration AlarmConfiguration { get; public set; }
    public Nullable`1<bool> ApplyOnlyAtCronInterval { get; public set; }
    public string AssociationId { get; public set; }
    public string AssociationName { get; public set; }
    public string AssociationVersion { get; public set; }
    [AWSPropertyAttribute]
public string AutomationTargetParameterName { get; public set; }
    public List`1<string> CalendarNames { get; public set; }
    public AssociationComplianceSeverity ComplianceSeverity { get; public set; }
    public Nullable`1<DateTime> Date { get; public set; }
    public string DocumentVersion { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Duration { get; public set; }
    public string InstanceId { get; public set; }
    public Nullable`1<DateTime> LastExecutionDate { get; public set; }
    public Nullable`1<DateTime> LastSuccessfulExecutionDate { get; public set; }
    public Nullable`1<DateTime> LastUpdateAssociationDate { get; public set; }
    [AWSPropertyAttribute]
public string MaxConcurrency { get; public set; }
    [AWSPropertyAttribute]
public string MaxErrors { get; public set; }
    public string Name { get; public set; }
    public InstanceAssociationOutputLocation OutputLocation { get; public set; }
    public AssociationOverview Overview { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, List`1<string>> Parameters { get; public set; }
    [AWSPropertyAttribute]
public string ScheduleExpression { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ScheduleOffset { get; public set; }
    public AssociationStatus Status { get; public set; }
    public AssociationSyncCompliance SyncCompliance { get; public set; }
    [AWSPropertyAttribute]
public List`1<TargetLocation> TargetLocations { get; public set; }
    [AWSPropertyAttribute]
public List`1<Dictionary`2<string, List`1<string>>> TargetMaps { get; public set; }
    [AWSPropertyAttribute]
public List`1<Target> Targets { get; public set; }
    [AWSPropertyAttribute]
public List`1<AlarmStateInformation> TriggeredAlarms { get; public set; }
    public AlarmConfiguration get_AlarmConfiguration();
    public void set_AlarmConfiguration(AlarmConfiguration value);
    internal bool IsSetAlarmConfiguration();
    public Nullable`1<bool> get_ApplyOnlyAtCronInterval();
    public void set_ApplyOnlyAtCronInterval(Nullable`1<bool> value);
    internal bool IsSetApplyOnlyAtCronInterval();
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_AssociationName();
    public void set_AssociationName(string value);
    internal bool IsSetAssociationName();
    public string get_AssociationVersion();
    public void set_AssociationVersion(string value);
    internal bool IsSetAssociationVersion();
    public string get_AutomationTargetParameterName();
    public void set_AutomationTargetParameterName(string value);
    internal bool IsSetAutomationTargetParameterName();
    public List`1<string> get_CalendarNames();
    public void set_CalendarNames(List`1<string> value);
    internal bool IsSetCalendarNames();
    public AssociationComplianceSeverity get_ComplianceSeverity();
    public void set_ComplianceSeverity(AssociationComplianceSeverity value);
    internal bool IsSetComplianceSeverity();
    public Nullable`1<DateTime> get_Date();
    public void set_Date(Nullable`1<DateTime> value);
    internal bool IsSetDate();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public Nullable`1<int> get_Duration();
    public void set_Duration(Nullable`1<int> value);
    internal bool IsSetDuration();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public Nullable`1<DateTime> get_LastExecutionDate();
    public void set_LastExecutionDate(Nullable`1<DateTime> value);
    internal bool IsSetLastExecutionDate();
    public Nullable`1<DateTime> get_LastSuccessfulExecutionDate();
    public void set_LastSuccessfulExecutionDate(Nullable`1<DateTime> value);
    internal bool IsSetLastSuccessfulExecutionDate();
    public Nullable`1<DateTime> get_LastUpdateAssociationDate();
    public void set_LastUpdateAssociationDate(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdateAssociationDate();
    public string get_MaxConcurrency();
    public void set_MaxConcurrency(string value);
    internal bool IsSetMaxConcurrency();
    public string get_MaxErrors();
    public void set_MaxErrors(string value);
    internal bool IsSetMaxErrors();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public InstanceAssociationOutputLocation get_OutputLocation();
    public void set_OutputLocation(InstanceAssociationOutputLocation value);
    internal bool IsSetOutputLocation();
    public AssociationOverview get_Overview();
    public void set_Overview(AssociationOverview value);
    internal bool IsSetOverview();
    public Dictionary`2<string, List`1<string>> get_Parameters();
    public void set_Parameters(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetParameters();
    public string get_ScheduleExpression();
    public void set_ScheduleExpression(string value);
    internal bool IsSetScheduleExpression();
    public Nullable`1<int> get_ScheduleOffset();
    public void set_ScheduleOffset(Nullable`1<int> value);
    internal bool IsSetScheduleOffset();
    public AssociationStatus get_Status();
    public void set_Status(AssociationStatus value);
    internal bool IsSetStatus();
    public AssociationSyncCompliance get_SyncCompliance();
    public void set_SyncCompliance(AssociationSyncCompliance value);
    internal bool IsSetSyncCompliance();
    public List`1<TargetLocation> get_TargetLocations();
    public void set_TargetLocations(List`1<TargetLocation> value);
    internal bool IsSetTargetLocations();
    public List`1<Dictionary`2<string, List`1<string>>> get_TargetMaps();
    public void set_TargetMaps(List`1<Dictionary`2<string, List`1<string>>> value);
    internal bool IsSetTargetMaps();
    public List`1<Target> get_Targets();
    public void set_Targets(List`1<Target> value);
    internal bool IsSetTargets();
    public List`1<AlarmStateInformation> get_TriggeredAlarms();
    public void set_TriggeredAlarms(List`1<AlarmStateInformation> value);
    internal bool IsSetTriggeredAlarms();
}
public class Amazon.SimpleSystemsManagement.Model.AssociationDoesNotExistException : AmazonSimpleSystemsManagementException {
    public AssociationDoesNotExistException(string message);
    public AssociationDoesNotExistException(string message, Exception innerException);
    public AssociationDoesNotExistException(Exception innerException);
    public AssociationDoesNotExistException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AssociationDoesNotExistException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.AssociationExecution : object {
    private AlarmConfiguration _alarmConfiguration;
    private string _associationId;
    private string _associationVersion;
    private Nullable`1<DateTime> _createdTime;
    private string _detailedStatus;
    private string _executionId;
    private Nullable`1<DateTime> _lastExecutionDate;
    private string _resourceCountByStatus;
    private string _status;
    private List`1<AlarmStateInformation> _triggeredAlarms;
    public AlarmConfiguration AlarmConfiguration { get; public set; }
    public string AssociationId { get; public set; }
    public string AssociationVersion { get; public set; }
    public Nullable`1<DateTime> CreatedTime { get; public set; }
    public string DetailedStatus { get; public set; }
    public string ExecutionId { get; public set; }
    public Nullable`1<DateTime> LastExecutionDate { get; public set; }
    public string ResourceCountByStatus { get; public set; }
    public string Status { get; public set; }
    [AWSPropertyAttribute]
public List`1<AlarmStateInformation> TriggeredAlarms { get; public set; }
    public AlarmConfiguration get_AlarmConfiguration();
    public void set_AlarmConfiguration(AlarmConfiguration value);
    internal bool IsSetAlarmConfiguration();
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_AssociationVersion();
    public void set_AssociationVersion(string value);
    internal bool IsSetAssociationVersion();
    public Nullable`1<DateTime> get_CreatedTime();
    public void set_CreatedTime(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTime();
    public string get_DetailedStatus();
    public void set_DetailedStatus(string value);
    internal bool IsSetDetailedStatus();
    public string get_ExecutionId();
    public void set_ExecutionId(string value);
    internal bool IsSetExecutionId();
    public Nullable`1<DateTime> get_LastExecutionDate();
    public void set_LastExecutionDate(Nullable`1<DateTime> value);
    internal bool IsSetLastExecutionDate();
    public string get_ResourceCountByStatus();
    public void set_ResourceCountByStatus(string value);
    internal bool IsSetResourceCountByStatus();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public List`1<AlarmStateInformation> get_TriggeredAlarms();
    public void set_TriggeredAlarms(List`1<AlarmStateInformation> value);
    internal bool IsSetTriggeredAlarms();
}
public class Amazon.SimpleSystemsManagement.Model.AssociationExecutionDoesNotExistException : AmazonSimpleSystemsManagementException {
    public AssociationExecutionDoesNotExistException(string message);
    public AssociationExecutionDoesNotExistException(string message, Exception innerException);
    public AssociationExecutionDoesNotExistException(Exception innerException);
    public AssociationExecutionDoesNotExistException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AssociationExecutionDoesNotExistException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.AssociationExecutionFilter : object {
    private AssociationExecutionFilterKey _key;
    private AssociationFilterOperatorType _type;
    private string _value;
    [AWSPropertyAttribute]
public AssociationExecutionFilterKey Key { get; public set; }
    [AWSPropertyAttribute]
public AssociationFilterOperatorType Type { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public AssociationExecutionFilterKey get_Key();
    public void set_Key(AssociationExecutionFilterKey value);
    internal bool IsSetKey();
    public AssociationFilterOperatorType get_Type();
    public void set_Type(AssociationFilterOperatorType value);
    internal bool IsSetType();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.SimpleSystemsManagement.Model.AssociationExecutionTarget : object {
    private string _associationId;
    private string _associationVersion;
    private string _detailedStatus;
    private string _executionId;
    private Nullable`1<DateTime> _lastExecutionDate;
    private OutputSource _outputSource;
    private string _resourceId;
    private string _resourceType;
    private string _status;
    public string AssociationId { get; public set; }
    public string AssociationVersion { get; public set; }
    public string DetailedStatus { get; public set; }
    public string ExecutionId { get; public set; }
    public Nullable`1<DateTime> LastExecutionDate { get; public set; }
    public OutputSource OutputSource { get; public set; }
    [AWSPropertyAttribute]
public string ResourceId { get; public set; }
    [AWSPropertyAttribute]
public string ResourceType { get; public set; }
    public string Status { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_AssociationVersion();
    public void set_AssociationVersion(string value);
    internal bool IsSetAssociationVersion();
    public string get_DetailedStatus();
    public void set_DetailedStatus(string value);
    internal bool IsSetDetailedStatus();
    public string get_ExecutionId();
    public void set_ExecutionId(string value);
    internal bool IsSetExecutionId();
    public Nullable`1<DateTime> get_LastExecutionDate();
    public void set_LastExecutionDate(Nullable`1<DateTime> value);
    internal bool IsSetLastExecutionDate();
    public OutputSource get_OutputSource();
    public void set_OutputSource(OutputSource value);
    internal bool IsSetOutputSource();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public string get_ResourceType();
    public void set_ResourceType(string value);
    internal bool IsSetResourceType();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.SimpleSystemsManagement.Model.AssociationExecutionTargetsFilter : object {
    private AssociationExecutionTargetsFilterKey _key;
    private string _value;
    [AWSPropertyAttribute]
public AssociationExecutionTargetsFilterKey Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public AssociationExecutionTargetsFilterKey get_Key();
    public void set_Key(AssociationExecutionTargetsFilterKey value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.SimpleSystemsManagement.Model.AssociationFilter : object {
    private AssociationFilterKey _key;
    private string _value;
    [AWSPropertyAttribute]
public AssociationFilterKey Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public AssociationFilter(AssociationFilterKey key, string value);
    public AssociationFilterKey get_Key();
    public void set_Key(AssociationFilterKey value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.SimpleSystemsManagement.Model.AssociationLimitExceededException : AmazonSimpleSystemsManagementException {
    public AssociationLimitExceededException(string message);
    public AssociationLimitExceededException(string message, Exception innerException);
    public AssociationLimitExceededException(Exception innerException);
    public AssociationLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AssociationLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.AssociationOverview : object {
    private Dictionary`2<string, int> _associationStatusAggregatedCount;
    private string _detailedStatus;
    private string _status;
    public Dictionary`2<string, int> AssociationStatusAggregatedCount { get; public set; }
    public string DetailedStatus { get; public set; }
    public string Status { get; public set; }
    public Dictionary`2<string, int> get_AssociationStatusAggregatedCount();
    public void set_AssociationStatusAggregatedCount(Dictionary`2<string, int> value);
    internal bool IsSetAssociationStatusAggregatedCount();
    public string get_DetailedStatus();
    public void set_DetailedStatus(string value);
    internal bool IsSetDetailedStatus();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.SimpleSystemsManagement.Model.AssociationStatus : object {
    private string _additionalInfo;
    private Nullable`1<DateTime> _date;
    private string _message;
    private AssociationStatusName _name;
    [AWSPropertyAttribute]
public string AdditionalInfo { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> Date { get; public set; }
    [AWSPropertyAttribute]
public string Message { get; public set; }
    [AWSPropertyAttribute]
public AssociationStatusName Name { get; public set; }
    public string get_AdditionalInfo();
    public void set_AdditionalInfo(string value);
    internal bool IsSetAdditionalInfo();
    public Nullable`1<DateTime> get_Date();
    public void set_Date(Nullable`1<DateTime> value);
    internal bool IsSetDate();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public AssociationStatusName get_Name();
    public void set_Name(AssociationStatusName value);
    internal bool IsSetName();
}
public class Amazon.SimpleSystemsManagement.Model.AssociationVersionInfo : object {
    private Nullable`1<bool> _applyOnlyAtCronInterval;
    private string _associationId;
    private string _associationName;
    private string _associationVersion;
    private List`1<string> _calendarNames;
    private AssociationComplianceSeverity _complianceSeverity;
    private Nullable`1<DateTime> _createdDate;
    private string _documentVersion;
    private Nullable`1<int> _duration;
    private string _maxConcurrency;
    private string _maxErrors;
    private string _name;
    private InstanceAssociationOutputLocation _outputLocation;
    private Dictionary`2<string, List`1<string>> _parameters;
    private string _scheduleExpression;
    private Nullable`1<int> _scheduleOffset;
    private AssociationSyncCompliance _syncCompliance;
    private List`1<TargetLocation> _targetLocations;
    private List`1<Dictionary`2<string, List`1<string>>> _targetMaps;
    private List`1<Target> _targets;
    public Nullable`1<bool> ApplyOnlyAtCronInterval { get; public set; }
    public string AssociationId { get; public set; }
    public string AssociationName { get; public set; }
    public string AssociationVersion { get; public set; }
    public List`1<string> CalendarNames { get; public set; }
    public AssociationComplianceSeverity ComplianceSeverity { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public string DocumentVersion { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Duration { get; public set; }
    [AWSPropertyAttribute]
public string MaxConcurrency { get; public set; }
    [AWSPropertyAttribute]
public string MaxErrors { get; public set; }
    public string Name { get; public set; }
    public InstanceAssociationOutputLocation OutputLocation { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, List`1<string>> Parameters { get; public set; }
    [AWSPropertyAttribute]
public string ScheduleExpression { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ScheduleOffset { get; public set; }
    public AssociationSyncCompliance SyncCompliance { get; public set; }
    [AWSPropertyAttribute]
public List`1<TargetLocation> TargetLocations { get; public set; }
    [AWSPropertyAttribute]
public List`1<Dictionary`2<string, List`1<string>>> TargetMaps { get; public set; }
    [AWSPropertyAttribute]
public List`1<Target> Targets { get; public set; }
    public Nullable`1<bool> get_ApplyOnlyAtCronInterval();
    public void set_ApplyOnlyAtCronInterval(Nullable`1<bool> value);
    internal bool IsSetApplyOnlyAtCronInterval();
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_AssociationName();
    public void set_AssociationName(string value);
    internal bool IsSetAssociationName();
    public string get_AssociationVersion();
    public void set_AssociationVersion(string value);
    internal bool IsSetAssociationVersion();
    public List`1<string> get_CalendarNames();
    public void set_CalendarNames(List`1<string> value);
    internal bool IsSetCalendarNames();
    public AssociationComplianceSeverity get_ComplianceSeverity();
    public void set_ComplianceSeverity(AssociationComplianceSeverity value);
    internal bool IsSetComplianceSeverity();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public Nullable`1<int> get_Duration();
    public void set_Duration(Nullable`1<int> value);
    internal bool IsSetDuration();
    public string get_MaxConcurrency();
    public void set_MaxConcurrency(string value);
    internal bool IsSetMaxConcurrency();
    public string get_MaxErrors();
    public void set_MaxErrors(string value);
    internal bool IsSetMaxErrors();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public InstanceAssociationOutputLocation get_OutputLocation();
    public void set_OutputLocation(InstanceAssociationOutputLocation value);
    internal bool IsSetOutputLocation();
    public Dictionary`2<string, List`1<string>> get_Parameters();
    public void set_Parameters(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetParameters();
    public string get_ScheduleExpression();
    public void set_ScheduleExpression(string value);
    internal bool IsSetScheduleExpression();
    public Nullable`1<int> get_ScheduleOffset();
    public void set_ScheduleOffset(Nullable`1<int> value);
    internal bool IsSetScheduleOffset();
    public AssociationSyncCompliance get_SyncCompliance();
    public void set_SyncCompliance(AssociationSyncCompliance value);
    internal bool IsSetSyncCompliance();
    public List`1<TargetLocation> get_TargetLocations();
    public void set_TargetLocations(List`1<TargetLocation> value);
    internal bool IsSetTargetLocations();
    public List`1<Dictionary`2<string, List`1<string>>> get_TargetMaps();
    public void set_TargetMaps(List`1<Dictionary`2<string, List`1<string>>> value);
    internal bool IsSetTargetMaps();
    public List`1<Target> get_Targets();
    public void set_Targets(List`1<Target> value);
    internal bool IsSetTargets();
}
public class Amazon.SimpleSystemsManagement.Model.AssociationVersionLimitExceededException : AmazonSimpleSystemsManagementException {
    public AssociationVersionLimitExceededException(string message);
    public AssociationVersionLimitExceededException(string message, Exception innerException);
    public AssociationVersionLimitExceededException(Exception innerException);
    public AssociationVersionLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AssociationVersionLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.AttachmentContent : object {
    private string _hash;
    private AttachmentHashType _hashType;
    private string _name;
    private Nullable`1<long> _size;
    private string _url;
    [AWSPropertyAttribute]
public string Hash { get; public set; }
    public AttachmentHashType HashType { get; public set; }
    public string Name { get; public set; }
    public Nullable`1<long> Size { get; public set; }
    public string Url { get; public set; }
    public string get_Hash();
    public void set_Hash(string value);
    internal bool IsSetHash();
    public AttachmentHashType get_HashType();
    public void set_HashType(AttachmentHashType value);
    internal bool IsSetHashType();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<long> get_Size();
    public void set_Size(Nullable`1<long> value);
    internal bool IsSetSize();
    public string get_Url();
    public void set_Url(string value);
    internal bool IsSetUrl();
}
public class Amazon.SimpleSystemsManagement.Model.AttachmentInformation : object {
    private string _name;
    public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleSystemsManagement.Model.AttachmentsSource : object {
    private AttachmentsSourceKey _key;
    private string _name;
    private List`1<string> _values;
    public AttachmentsSourceKey Key { get; public set; }
    public string Name { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Values { get; public set; }
    public AttachmentsSourceKey get_Key();
    public void set_Key(AttachmentsSourceKey value);
    internal bool IsSetKey();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.SimpleSystemsManagement.Model.AutomationDefinitionNotApprovedException : AmazonSimpleSystemsManagementException {
    public AutomationDefinitionNotApprovedException(string message);
    public AutomationDefinitionNotApprovedException(string message, Exception innerException);
    public AutomationDefinitionNotApprovedException(Exception innerException);
    public AutomationDefinitionNotApprovedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AutomationDefinitionNotApprovedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.AutomationDefinitionNotFoundException : AmazonSimpleSystemsManagementException {
    public AutomationDefinitionNotFoundException(string message);
    public AutomationDefinitionNotFoundException(string message, Exception innerException);
    public AutomationDefinitionNotFoundException(Exception innerException);
    public AutomationDefinitionNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AutomationDefinitionNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.AutomationDefinitionVersionNotFoundException : AmazonSimpleSystemsManagementException {
    public AutomationDefinitionVersionNotFoundException(string message);
    public AutomationDefinitionVersionNotFoundException(string message, Exception innerException);
    public AutomationDefinitionVersionNotFoundException(Exception innerException);
    public AutomationDefinitionVersionNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AutomationDefinitionVersionNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.AutomationExecution : object {
    private AlarmConfiguration _alarmConfiguration;
    private string _associationId;
    private string _automationExecutionId;
    private AutomationExecutionStatus _automationExecutionStatus;
    private AutomationSubtype _automationSubtype;
    private string _changeRequestName;
    private string _currentAction;
    private string _currentStepName;
    private string _documentName;
    private string _documentVersion;
    private string _executedBy;
    private Nullable`1<DateTime> _executionEndTime;
    private Nullable`1<DateTime> _executionStartTime;
    private string _failureMessage;
    private string _maxConcurrency;
    private string _maxErrors;
    private ExecutionMode _mode;
    private string _opsItemId;
    private Dictionary`2<string, List`1<string>> _outputs;
    private Dictionary`2<string, List`1<string>> _parameters;
    private string _parentAutomationExecutionId;
    private ProgressCounters _progressCounters;
    private ResolvedTargets _resolvedTargets;
    private List`1<Runbook> _runbooks;
    private Nullable`1<DateTime> _scheduledTime;
    private List`1<StepExecution> _stepExecutions;
    private Nullable`1<bool> _stepExecutionsTruncated;
    private string _target;
    private List`1<TargetLocation> _targetLocations;
    private List`1<Dictionary`2<string, List`1<string>>> _targetMaps;
    private string _targetParameterName;
    private List`1<Target> _targets;
    private List`1<AlarmStateInformation> _triggeredAlarms;
    private Dictionary`2<string, List`1<string>> _variables;
    public AlarmConfiguration AlarmConfiguration { get; public set; }
    public string AssociationId { get; public set; }
    [AWSPropertyAttribute]
public string AutomationExecutionId { get; public set; }
    public AutomationExecutionStatus AutomationExecutionStatus { get; public set; }
    public AutomationSubtype AutomationSubtype { get; public set; }
    [AWSPropertyAttribute]
public string ChangeRequestName { get; public set; }
    public string CurrentAction { get; public set; }
    public string CurrentStepName { get; public set; }
    public string DocumentName { get; public set; }
    public string DocumentVersion { get; public set; }
    public string ExecutedBy { get; public set; }
    public Nullable`1<DateTime> ExecutionEndTime { get; public set; }
    public Nullable`1<DateTime> ExecutionStartTime { get; public set; }
    public string FailureMessage { get; public set; }
    [AWSPropertyAttribute]
public string MaxConcurrency { get; public set; }
    [AWSPropertyAttribute]
public string MaxErrors { get; public set; }
    public ExecutionMode Mode { get; public set; }
    public string OpsItemId { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, List`1<string>> Outputs { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, List`1<string>> Parameters { get; public set; }
    [AWSPropertyAttribute]
public string ParentAutomationExecutionId { get; public set; }
    public ProgressCounters ProgressCounters { get; public set; }
    public ResolvedTargets ResolvedTargets { get; public set; }
    [AWSPropertyAttribute]
public List`1<Runbook> Runbooks { get; public set; }
    public Nullable`1<DateTime> ScheduledTime { get; public set; }
    public List`1<StepExecution> StepExecutions { get; public set; }
    public Nullable`1<bool> StepExecutionsTruncated { get; public set; }
    public string Target { get; public set; }
    [AWSPropertyAttribute]
public List`1<TargetLocation> TargetLocations { get; public set; }
    [AWSPropertyAttribute]
public List`1<Dictionary`2<string, List`1<string>>> TargetMaps { get; public set; }
    [AWSPropertyAttribute]
public string TargetParameterName { get; public set; }
    [AWSPropertyAttribute]
public List`1<Target> Targets { get; public set; }
    [AWSPropertyAttribute]
public List`1<AlarmStateInformation> TriggeredAlarms { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, List`1<string>> Variables { get; public set; }
    public AlarmConfiguration get_AlarmConfiguration();
    public void set_AlarmConfiguration(AlarmConfiguration value);
    internal bool IsSetAlarmConfiguration();
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_AutomationExecutionId();
    public void set_AutomationExecutionId(string value);
    internal bool IsSetAutomationExecutionId();
    public AutomationExecutionStatus get_AutomationExecutionStatus();
    public void set_AutomationExecutionStatus(AutomationExecutionStatus value);
    internal bool IsSetAutomationExecutionStatus();
    public AutomationSubtype get_AutomationSubtype();
    public void set_AutomationSubtype(AutomationSubtype value);
    internal bool IsSetAutomationSubtype();
    public string get_ChangeRequestName();
    public void set_ChangeRequestName(string value);
    internal bool IsSetChangeRequestName();
    public string get_CurrentAction();
    public void set_CurrentAction(string value);
    internal bool IsSetCurrentAction();
    public string get_CurrentStepName();
    public void set_CurrentStepName(string value);
    internal bool IsSetCurrentStepName();
    public string get_DocumentName();
    public void set_DocumentName(string value);
    internal bool IsSetDocumentName();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public string get_ExecutedBy();
    public void set_ExecutedBy(string value);
    internal bool IsSetExecutedBy();
    public Nullable`1<DateTime> get_ExecutionEndTime();
    public void set_ExecutionEndTime(Nullable`1<DateTime> value);
    internal bool IsSetExecutionEndTime();
    public Nullable`1<DateTime> get_ExecutionStartTime();
    public void set_ExecutionStartTime(Nullable`1<DateTime> value);
    internal bool IsSetExecutionStartTime();
    public string get_FailureMessage();
    public void set_FailureMessage(string value);
    internal bool IsSetFailureMessage();
    public string get_MaxConcurrency();
    public void set_MaxConcurrency(string value);
    internal bool IsSetMaxConcurrency();
    public string get_MaxErrors();
    public void set_MaxErrors(string value);
    internal bool IsSetMaxErrors();
    public ExecutionMode get_Mode();
    public void set_Mode(ExecutionMode value);
    internal bool IsSetMode();
    public string get_OpsItemId();
    public void set_OpsItemId(string value);
    internal bool IsSetOpsItemId();
    public Dictionary`2<string, List`1<string>> get_Outputs();
    public void set_Outputs(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetOutputs();
    public Dictionary`2<string, List`1<string>> get_Parameters();
    public void set_Parameters(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetParameters();
    public string get_ParentAutomationExecutionId();
    public void set_ParentAutomationExecutionId(string value);
    internal bool IsSetParentAutomationExecutionId();
    public ProgressCounters get_ProgressCounters();
    public void set_ProgressCounters(ProgressCounters value);
    internal bool IsSetProgressCounters();
    public ResolvedTargets get_ResolvedTargets();
    public void set_ResolvedTargets(ResolvedTargets value);
    internal bool IsSetResolvedTargets();
    public List`1<Runbook> get_Runbooks();
    public void set_Runbooks(List`1<Runbook> value);
    internal bool IsSetRunbooks();
    public Nullable`1<DateTime> get_ScheduledTime();
    public void set_ScheduledTime(Nullable`1<DateTime> value);
    internal bool IsSetScheduledTime();
    public List`1<StepExecution> get_StepExecutions();
    public void set_StepExecutions(List`1<StepExecution> value);
    internal bool IsSetStepExecutions();
    public Nullable`1<bool> get_StepExecutionsTruncated();
    public void set_StepExecutionsTruncated(Nullable`1<bool> value);
    internal bool IsSetStepExecutionsTruncated();
    public string get_Target();
    public void set_Target(string value);
    internal bool IsSetTarget();
    public List`1<TargetLocation> get_TargetLocations();
    public void set_TargetLocations(List`1<TargetLocation> value);
    internal bool IsSetTargetLocations();
    public List`1<Dictionary`2<string, List`1<string>>> get_TargetMaps();
    public void set_TargetMaps(List`1<Dictionary`2<string, List`1<string>>> value);
    internal bool IsSetTargetMaps();
    public string get_TargetParameterName();
    public void set_TargetParameterName(string value);
    internal bool IsSetTargetParameterName();
    public List`1<Target> get_Targets();
    public void set_Targets(List`1<Target> value);
    internal bool IsSetTargets();
    public List`1<AlarmStateInformation> get_TriggeredAlarms();
    public void set_TriggeredAlarms(List`1<AlarmStateInformation> value);
    internal bool IsSetTriggeredAlarms();
    public Dictionary`2<string, List`1<string>> get_Variables();
    public void set_Variables(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetVariables();
}
public class Amazon.SimpleSystemsManagement.Model.AutomationExecutionFilter : object {
    private AutomationExecutionFilterKey _key;
    private List`1<string> _values;
    [AWSPropertyAttribute]
public AutomationExecutionFilterKey Key { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Values { get; public set; }
    public AutomationExecutionFilterKey get_Key();
    public void set_Key(AutomationExecutionFilterKey value);
    internal bool IsSetKey();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.SimpleSystemsManagement.Model.AutomationExecutionLimitExceededException : AmazonSimpleSystemsManagementException {
    public AutomationExecutionLimitExceededException(string message);
    public AutomationExecutionLimitExceededException(string message, Exception innerException);
    public AutomationExecutionLimitExceededException(Exception innerException);
    public AutomationExecutionLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AutomationExecutionLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.AutomationExecutionMetadata : object {
    private AlarmConfiguration _alarmConfiguration;
    private string _associationId;
    private string _automationExecutionId;
    private AutomationExecutionStatus _automationExecutionStatus;
    private AutomationSubtype _automationSubtype;
    private AutomationType _automationType;
    private string _changeRequestName;
    private string _currentAction;
    private string _currentStepName;
    private string _documentName;
    private string _documentVersion;
    private string _executedBy;
    private Nullable`1<DateTime> _executionEndTime;
    private Nullable`1<DateTime> _executionStartTime;
    private string _failureMessage;
    private string _logFile;
    private string _maxConcurrency;
    private string _maxErrors;
    private ExecutionMode _mode;
    private string _opsItemId;
    private Dictionary`2<string, List`1<string>> _outputs;
    private string _parentAutomationExecutionId;
    private ResolvedTargets _resolvedTargets;
    private List`1<Runbook> _runbooks;
    private Nullable`1<DateTime> _scheduledTime;
    private string _target;
    private List`1<Dictionary`2<string, List`1<string>>> _targetMaps;
    private string _targetParameterName;
    private List`1<Target> _targets;
    private List`1<AlarmStateInformation> _triggeredAlarms;
    public AlarmConfiguration AlarmConfiguration { get; public set; }
    public string AssociationId { get; public set; }
    [AWSPropertyAttribute]
public string AutomationExecutionId { get; public set; }
    public AutomationExecutionStatus AutomationExecutionStatus { get; public set; }
    public AutomationSubtype AutomationSubtype { get; public set; }
    public AutomationType AutomationType { get; public set; }
    [AWSPropertyAttribute]
public string ChangeRequestName { get; public set; }
    public string CurrentAction { get; public set; }
    public string CurrentStepName { get; public set; }
    public string DocumentName { get; public set; }
    public string DocumentVersion { get; public set; }
    public string ExecutedBy { get; public set; }
    public Nullable`1<DateTime> ExecutionEndTime { get; public set; }
    public Nullable`1<DateTime> ExecutionStartTime { get; public set; }
    public string FailureMessage { get; public set; }
    public string LogFile { get; public set; }
    [AWSPropertyAttribute]
public string MaxConcurrency { get; public set; }
    [AWSPropertyAttribute]
public string MaxErrors { get; public set; }
    public ExecutionMode Mode { get; public set; }
    public string OpsItemId { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, List`1<string>> Outputs { get; public set; }
    [AWSPropertyAttribute]
public string ParentAutomationExecutionId { get; public set; }
    public ResolvedTargets ResolvedTargets { get; public set; }
    [AWSPropertyAttribute]
public List`1<Runbook> Runbooks { get; public set; }
    public Nullable`1<DateTime> ScheduledTime { get; public set; }
    public string Target { get; public set; }
    [AWSPropertyAttribute]
public List`1<Dictionary`2<string, List`1<string>>> TargetMaps { get; public set; }
    [AWSPropertyAttribute]
public string TargetParameterName { get; public set; }
    [AWSPropertyAttribute]
public List`1<Target> Targets { get; public set; }
    [AWSPropertyAttribute]
public List`1<AlarmStateInformation> TriggeredAlarms { get; public set; }
    public AlarmConfiguration get_AlarmConfiguration();
    public void set_AlarmConfiguration(AlarmConfiguration value);
    internal bool IsSetAlarmConfiguration();
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_AutomationExecutionId();
    public void set_AutomationExecutionId(string value);
    internal bool IsSetAutomationExecutionId();
    public AutomationExecutionStatus get_AutomationExecutionStatus();
    public void set_AutomationExecutionStatus(AutomationExecutionStatus value);
    internal bool IsSetAutomationExecutionStatus();
    public AutomationSubtype get_AutomationSubtype();
    public void set_AutomationSubtype(AutomationSubtype value);
    internal bool IsSetAutomationSubtype();
    public AutomationType get_AutomationType();
    public void set_AutomationType(AutomationType value);
    internal bool IsSetAutomationType();
    public string get_ChangeRequestName();
    public void set_ChangeRequestName(string value);
    internal bool IsSetChangeRequestName();
    public string get_CurrentAction();
    public void set_CurrentAction(string value);
    internal bool IsSetCurrentAction();
    public string get_CurrentStepName();
    public void set_CurrentStepName(string value);
    internal bool IsSetCurrentStepName();
    public string get_DocumentName();
    public void set_DocumentName(string value);
    internal bool IsSetDocumentName();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public string get_ExecutedBy();
    public void set_ExecutedBy(string value);
    internal bool IsSetExecutedBy();
    public Nullable`1<DateTime> get_ExecutionEndTime();
    public void set_ExecutionEndTime(Nullable`1<DateTime> value);
    internal bool IsSetExecutionEndTime();
    public Nullable`1<DateTime> get_ExecutionStartTime();
    public void set_ExecutionStartTime(Nullable`1<DateTime> value);
    internal bool IsSetExecutionStartTime();
    public string get_FailureMessage();
    public void set_FailureMessage(string value);
    internal bool IsSetFailureMessage();
    public string get_LogFile();
    public void set_LogFile(string value);
    internal bool IsSetLogFile();
    public string get_MaxConcurrency();
    public void set_MaxConcurrency(string value);
    internal bool IsSetMaxConcurrency();
    public string get_MaxErrors();
    public void set_MaxErrors(string value);
    internal bool IsSetMaxErrors();
    public ExecutionMode get_Mode();
    public void set_Mode(ExecutionMode value);
    internal bool IsSetMode();
    public string get_OpsItemId();
    public void set_OpsItemId(string value);
    internal bool IsSetOpsItemId();
    public Dictionary`2<string, List`1<string>> get_Outputs();
    public void set_Outputs(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetOutputs();
    public string get_ParentAutomationExecutionId();
    public void set_ParentAutomationExecutionId(string value);
    internal bool IsSetParentAutomationExecutionId();
    public ResolvedTargets get_ResolvedTargets();
    public void set_ResolvedTargets(ResolvedTargets value);
    internal bool IsSetResolvedTargets();
    public List`1<Runbook> get_Runbooks();
    public void set_Runbooks(List`1<Runbook> value);
    internal bool IsSetRunbooks();
    public Nullable`1<DateTime> get_ScheduledTime();
    public void set_ScheduledTime(Nullable`1<DateTime> value);
    internal bool IsSetScheduledTime();
    public string get_Target();
    public void set_Target(string value);
    internal bool IsSetTarget();
    public List`1<Dictionary`2<string, List`1<string>>> get_TargetMaps();
    public void set_TargetMaps(List`1<Dictionary`2<string, List`1<string>>> value);
    internal bool IsSetTargetMaps();
    public string get_TargetParameterName();
    public void set_TargetParameterName(string value);
    internal bool IsSetTargetParameterName();
    public List`1<Target> get_Targets();
    public void set_Targets(List`1<Target> value);
    internal bool IsSetTargets();
    public List`1<AlarmStateInformation> get_TriggeredAlarms();
    public void set_TriggeredAlarms(List`1<AlarmStateInformation> value);
    internal bool IsSetTriggeredAlarms();
}
public class Amazon.SimpleSystemsManagement.Model.AutomationExecutionNotFoundException : AmazonSimpleSystemsManagementException {
    public AutomationExecutionNotFoundException(string message);
    public AutomationExecutionNotFoundException(string message, Exception innerException);
    public AutomationExecutionNotFoundException(Exception innerException);
    public AutomationExecutionNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AutomationExecutionNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.AutomationStepNotFoundException : AmazonSimpleSystemsManagementException {
    public AutomationStepNotFoundException(string message);
    public AutomationStepNotFoundException(string message, Exception innerException);
    public AutomationStepNotFoundException(Exception innerException);
    public AutomationStepNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AutomationStepNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.BaselineOverride : object {
    private PatchRuleGroup _approvalRules;
    private List`1<string> _approvedPatches;
    private PatchComplianceLevel _approvedPatchesComplianceLevel;
    private Nullable`1<bool> _approvedPatchesEnableNonSecurity;
    private PatchFilterGroup _globalFilters;
    private OperatingSystem _operatingSystem;
    private List`1<string> _rejectedPatches;
    private PatchAction _rejectedPatchesAction;
    private List`1<PatchSource> _sources;
    public PatchRuleGroup ApprovalRules { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ApprovedPatches { get; public set; }
    public PatchComplianceLevel ApprovedPatchesComplianceLevel { get; public set; }
    public Nullable`1<bool> ApprovedPatchesEnableNonSecurity { get; public set; }
    public PatchFilterGroup GlobalFilters { get; public set; }
    public OperatingSystem OperatingSystem { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> RejectedPatches { get; public set; }
    public PatchAction RejectedPatchesAction { get; public set; }
    [AWSPropertyAttribute]
public List`1<PatchSource> Sources { get; public set; }
    public PatchRuleGroup get_ApprovalRules();
    public void set_ApprovalRules(PatchRuleGroup value);
    internal bool IsSetApprovalRules();
    public List`1<string> get_ApprovedPatches();
    public void set_ApprovedPatches(List`1<string> value);
    internal bool IsSetApprovedPatches();
    public PatchComplianceLevel get_ApprovedPatchesComplianceLevel();
    public void set_ApprovedPatchesComplianceLevel(PatchComplianceLevel value);
    internal bool IsSetApprovedPatchesComplianceLevel();
    public Nullable`1<bool> get_ApprovedPatchesEnableNonSecurity();
    public void set_ApprovedPatchesEnableNonSecurity(Nullable`1<bool> value);
    internal bool IsSetApprovedPatchesEnableNonSecurity();
    public PatchFilterGroup get_GlobalFilters();
    public void set_GlobalFilters(PatchFilterGroup value);
    internal bool IsSetGlobalFilters();
    public OperatingSystem get_OperatingSystem();
    public void set_OperatingSystem(OperatingSystem value);
    internal bool IsSetOperatingSystem();
    public List`1<string> get_RejectedPatches();
    public void set_RejectedPatches(List`1<string> value);
    internal bool IsSetRejectedPatches();
    public PatchAction get_RejectedPatchesAction();
    public void set_RejectedPatchesAction(PatchAction value);
    internal bool IsSetRejectedPatchesAction();
    public List`1<PatchSource> get_Sources();
    public void set_Sources(List`1<PatchSource> value);
    internal bool IsSetSources();
}
public class Amazon.SimpleSystemsManagement.Model.CancelCommandRequest : AmazonSimpleSystemsManagementRequest {
    private string _commandId;
    private List`1<string> _instanceIds;
    [AWSPropertyAttribute]
public string CommandId { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> InstanceIds { get; public set; }
    public CancelCommandRequest(string commandId);
    public CancelCommandRequest(string commandId, List`1<string> instanceIds);
    public string get_CommandId();
    public void set_CommandId(string value);
    internal bool IsSetCommandId();
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
}
public class Amazon.SimpleSystemsManagement.Model.CancelCommandResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleSystemsManagement.Model.CancelMaintenanceWindowExecutionRequest : AmazonSimpleSystemsManagementRequest {
    private string _windowExecutionId;
    [AWSPropertyAttribute]
public string WindowExecutionId { get; public set; }
    public string get_WindowExecutionId();
    public void set_WindowExecutionId(string value);
    internal bool IsSetWindowExecutionId();
}
public class Amazon.SimpleSystemsManagement.Model.CancelMaintenanceWindowExecutionResponse : AmazonWebServiceResponse {
    private string _windowExecutionId;
    [AWSPropertyAttribute]
public string WindowExecutionId { get; public set; }
    public string get_WindowExecutionId();
    public void set_WindowExecutionId(string value);
    internal bool IsSetWindowExecutionId();
}
public class Amazon.SimpleSystemsManagement.Model.CloudWatchOutputConfig : object {
    private string _cloudWatchLogGroupName;
    private Nullable`1<bool> _cloudWatchOutputEnabled;
    [AWSPropertyAttribute]
public string CloudWatchLogGroupName { get; public set; }
    public Nullable`1<bool> CloudWatchOutputEnabled { get; public set; }
    public string get_CloudWatchLogGroupName();
    public void set_CloudWatchLogGroupName(string value);
    internal bool IsSetCloudWatchLogGroupName();
    public Nullable`1<bool> get_CloudWatchOutputEnabled();
    public void set_CloudWatchOutputEnabled(Nullable`1<bool> value);
    internal bool IsSetCloudWatchOutputEnabled();
}
public class Amazon.SimpleSystemsManagement.Model.Command : object {
    private AlarmConfiguration _alarmConfiguration;
    private CloudWatchOutputConfig _cloudWatchOutputConfig;
    private string _commandId;
    private string _comment;
    private Nullable`1<int> _completedCount;
    private Nullable`1<int> _deliveryTimedOutCount;
    private string _documentName;
    private string _documentVersion;
    private Nullable`1<int> _errorCount;
    private Nullable`1<DateTime> _expiresAfter;
    private List`1<string> _instanceIds;
    private string _maxConcurrency;
    private string _maxErrors;
    private NotificationConfig _notificationConfig;
    private string _outputS3BucketName;
    private string _outputS3KeyPrefix;
    private string _outputS3Region;
    private Dictionary`2<string, List`1<string>> _parameters;
    private Nullable`1<DateTime> _requestedDateTime;
    private string _serviceRole;
    private CommandStatus _status;
    private string _statusDetails;
    private Nullable`1<int> _targetCount;
    private List`1<Target> _targets;
    private Nullable`1<int> _timeoutSeconds;
    private List`1<AlarmStateInformation> _triggeredAlarms;
    public AlarmConfiguration AlarmConfiguration { get; public set; }
    public CloudWatchOutputConfig CloudWatchOutputConfig { get; public set; }
    [AWSPropertyAttribute]
public string CommandId { get; public set; }
    [AWSPropertyAttribute]
public string Comment { get; public set; }
    public Nullable`1<int> CompletedCount { get; public set; }
    public Nullable`1<int> DeliveryTimedOutCount { get; public set; }
    public string DocumentName { get; public set; }
    public string DocumentVersion { get; public set; }
    public Nullable`1<int> ErrorCount { get; public set; }
    public Nullable`1<DateTime> ExpiresAfter { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> InstanceIds { get; public set; }
    [AWSPropertyAttribute]
public string MaxConcurrency { get; public set; }
    [AWSPropertyAttribute]
public string MaxErrors { get; public set; }
    public NotificationConfig NotificationConfig { get; public set; }
    [AWSPropertyAttribute]
public string OutputS3BucketName { get; public set; }
    [AWSPropertyAttribute]
public string OutputS3KeyPrefix { get; public set; }
    [AWSPropertyAttribute]
public string OutputS3Region { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, List`1<string>> Parameters { get; public set; }
    public Nullable`1<DateTime> RequestedDateTime { get; public set; }
    public string ServiceRole { get; public set; }
    public CommandStatus Status { get; public set; }
    [AWSPropertyAttribute]
public string StatusDetails { get; public set; }
    public Nullable`1<int> TargetCount { get; public set; }
    [AWSPropertyAttribute]
public List`1<Target> Targets { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TimeoutSeconds { get; public set; }
    [AWSPropertyAttribute]
public List`1<AlarmStateInformation> TriggeredAlarms { get; public set; }
    public AlarmConfiguration get_AlarmConfiguration();
    public void set_AlarmConfiguration(AlarmConfiguration value);
    internal bool IsSetAlarmConfiguration();
    public CloudWatchOutputConfig get_CloudWatchOutputConfig();
    public void set_CloudWatchOutputConfig(CloudWatchOutputConfig value);
    internal bool IsSetCloudWatchOutputConfig();
    public string get_CommandId();
    public void set_CommandId(string value);
    internal bool IsSetCommandId();
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public Nullable`1<int> get_CompletedCount();
    public void set_CompletedCount(Nullable`1<int> value);
    internal bool IsSetCompletedCount();
    public Nullable`1<int> get_DeliveryTimedOutCount();
    public void set_DeliveryTimedOutCount(Nullable`1<int> value);
    internal bool IsSetDeliveryTimedOutCount();
    public string get_DocumentName();
    public void set_DocumentName(string value);
    internal bool IsSetDocumentName();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public Nullable`1<int> get_ErrorCount();
    public void set_ErrorCount(Nullable`1<int> value);
    internal bool IsSetErrorCount();
    public Nullable`1<DateTime> get_ExpiresAfter();
    public void set_ExpiresAfter(Nullable`1<DateTime> value);
    internal bool IsSetExpiresAfter();
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
    public string get_MaxConcurrency();
    public void set_MaxConcurrency(string value);
    internal bool IsSetMaxConcurrency();
    public string get_MaxErrors();
    public void set_MaxErrors(string value);
    internal bool IsSetMaxErrors();
    public NotificationConfig get_NotificationConfig();
    public void set_NotificationConfig(NotificationConfig value);
    internal bool IsSetNotificationConfig();
    public string get_OutputS3BucketName();
    public void set_OutputS3BucketName(string value);
    internal bool IsSetOutputS3BucketName();
    public string get_OutputS3KeyPrefix();
    public void set_OutputS3KeyPrefix(string value);
    internal bool IsSetOutputS3KeyPrefix();
    public string get_OutputS3Region();
    public void set_OutputS3Region(string value);
    internal bool IsSetOutputS3Region();
    public Dictionary`2<string, List`1<string>> get_Parameters();
    public void set_Parameters(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetParameters();
    public Nullable`1<DateTime> get_RequestedDateTime();
    public void set_RequestedDateTime(Nullable`1<DateTime> value);
    internal bool IsSetRequestedDateTime();
    public string get_ServiceRole();
    public void set_ServiceRole(string value);
    internal bool IsSetServiceRole();
    public CommandStatus get_Status();
    public void set_Status(CommandStatus value);
    internal bool IsSetStatus();
    public string get_StatusDetails();
    public void set_StatusDetails(string value);
    internal bool IsSetStatusDetails();
    public Nullable`1<int> get_TargetCount();
    public void set_TargetCount(Nullable`1<int> value);
    internal bool IsSetTargetCount();
    public List`1<Target> get_Targets();
    public void set_Targets(List`1<Target> value);
    internal bool IsSetTargets();
    public Nullable`1<int> get_TimeoutSeconds();
    public void set_TimeoutSeconds(Nullable`1<int> value);
    internal bool IsSetTimeoutSeconds();
    public List`1<AlarmStateInformation> get_TriggeredAlarms();
    public void set_TriggeredAlarms(List`1<AlarmStateInformation> value);
    internal bool IsSetTriggeredAlarms();
}
public class Amazon.SimpleSystemsManagement.Model.CommandFilter : object {
    private CommandFilterKey _key;
    private string _value;
    [AWSPropertyAttribute]
public CommandFilterKey Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public CommandFilterKey get_Key();
    public void set_Key(CommandFilterKey value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.SimpleSystemsManagement.Model.CommandInvocation : object {
    private CloudWatchOutputConfig _cloudWatchOutputConfig;
    private string _commandId;
    private List`1<CommandPlugin> _commandPlugins;
    private string _comment;
    private string _documentName;
    private string _documentVersion;
    private string _instanceId;
    private string _instanceName;
    private NotificationConfig _notificationConfig;
    private Nullable`1<DateTime> _requestedDateTime;
    private string _serviceRole;
    private string _standardErrorUrl;
    private string _standardOutputUrl;
    private CommandInvocationStatus _status;
    private string _statusDetails;
    private string _traceOutput;
    public CloudWatchOutputConfig CloudWatchOutputConfig { get; public set; }
    [AWSPropertyAttribute]
public string CommandId { get; public set; }
    public List`1<CommandPlugin> CommandPlugins { get; public set; }
    [AWSPropertyAttribute]
public string Comment { get; public set; }
    public string DocumentName { get; public set; }
    public string DocumentVersion { get; public set; }
    public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public string InstanceName { get; public set; }
    public NotificationConfig NotificationConfig { get; public set; }
    public Nullable`1<DateTime> RequestedDateTime { get; public set; }
    public string ServiceRole { get; public set; }
    public string StandardErrorUrl { get; public set; }
    public string StandardOutputUrl { get; public set; }
    public CommandInvocationStatus Status { get; public set; }
    [AWSPropertyAttribute]
public string StatusDetails { get; public set; }
    [AWSPropertyAttribute]
public string TraceOutput { get; public set; }
    public CloudWatchOutputConfig get_CloudWatchOutputConfig();
    public void set_CloudWatchOutputConfig(CloudWatchOutputConfig value);
    internal bool IsSetCloudWatchOutputConfig();
    public string get_CommandId();
    public void set_CommandId(string value);
    internal bool IsSetCommandId();
    public List`1<CommandPlugin> get_CommandPlugins();
    public void set_CommandPlugins(List`1<CommandPlugin> value);
    internal bool IsSetCommandPlugins();
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public string get_DocumentName();
    public void set_DocumentName(string value);
    internal bool IsSetDocumentName();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_InstanceName();
    public void set_InstanceName(string value);
    internal bool IsSetInstanceName();
    public NotificationConfig get_NotificationConfig();
    public void set_NotificationConfig(NotificationConfig value);
    internal bool IsSetNotificationConfig();
    public Nullable`1<DateTime> get_RequestedDateTime();
    public void set_RequestedDateTime(Nullable`1<DateTime> value);
    internal bool IsSetRequestedDateTime();
    public string get_ServiceRole();
    public void set_ServiceRole(string value);
    internal bool IsSetServiceRole();
    public string get_StandardErrorUrl();
    public void set_StandardErrorUrl(string value);
    internal bool IsSetStandardErrorUrl();
    public string get_StandardOutputUrl();
    public void set_StandardOutputUrl(string value);
    internal bool IsSetStandardOutputUrl();
    public CommandInvocationStatus get_Status();
    public void set_Status(CommandInvocationStatus value);
    internal bool IsSetStatus();
    public string get_StatusDetails();
    public void set_StatusDetails(string value);
    internal bool IsSetStatusDetails();
    public string get_TraceOutput();
    public void set_TraceOutput(string value);
    internal bool IsSetTraceOutput();
}
public class Amazon.SimpleSystemsManagement.Model.CommandPlugin : object {
    private string _name;
    private string _output;
    private string _outputS3BucketName;
    private string _outputS3KeyPrefix;
    private string _outputS3Region;
    private Nullable`1<int> _responseCode;
    private Nullable`1<DateTime> _responseFinishDateTime;
    private Nullable`1<DateTime> _responseStartDateTime;
    private string _standardErrorUrl;
    private string _standardOutputUrl;
    private CommandPluginStatus _status;
    private string _statusDetails;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Output { get; public set; }
    [AWSPropertyAttribute]
public string OutputS3BucketName { get; public set; }
    [AWSPropertyAttribute]
public string OutputS3KeyPrefix { get; public set; }
    [AWSPropertyAttribute]
public string OutputS3Region { get; public set; }
    public Nullable`1<int> ResponseCode { get; public set; }
    public Nullable`1<DateTime> ResponseFinishDateTime { get; public set; }
    public Nullable`1<DateTime> ResponseStartDateTime { get; public set; }
    public string StandardErrorUrl { get; public set; }
    public string StandardOutputUrl { get; public set; }
    public CommandPluginStatus Status { get; public set; }
    [AWSPropertyAttribute]
public string StatusDetails { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Output();
    public void set_Output(string value);
    internal bool IsSetOutput();
    public string get_OutputS3BucketName();
    public void set_OutputS3BucketName(string value);
    internal bool IsSetOutputS3BucketName();
    public string get_OutputS3KeyPrefix();
    public void set_OutputS3KeyPrefix(string value);
    internal bool IsSetOutputS3KeyPrefix();
    public string get_OutputS3Region();
    public void set_OutputS3Region(string value);
    internal bool IsSetOutputS3Region();
    public Nullable`1<int> get_ResponseCode();
    public void set_ResponseCode(Nullable`1<int> value);
    internal bool IsSetResponseCode();
    public Nullable`1<DateTime> get_ResponseFinishDateTime();
    public void set_ResponseFinishDateTime(Nullable`1<DateTime> value);
    internal bool IsSetResponseFinishDateTime();
    public Nullable`1<DateTime> get_ResponseStartDateTime();
    public void set_ResponseStartDateTime(Nullable`1<DateTime> value);
    internal bool IsSetResponseStartDateTime();
    public string get_StandardErrorUrl();
    public void set_StandardErrorUrl(string value);
    internal bool IsSetStandardErrorUrl();
    public string get_StandardOutputUrl();
    public void set_StandardOutputUrl(string value);
    internal bool IsSetStandardOutputUrl();
    public CommandPluginStatus get_Status();
    public void set_Status(CommandPluginStatus value);
    internal bool IsSetStatus();
    public string get_StatusDetails();
    public void set_StatusDetails(string value);
    internal bool IsSetStatusDetails();
}
public class Amazon.SimpleSystemsManagement.Model.ComplianceExecutionSummary : object {
    private string _executionId;
    private Nullable`1<DateTime> _executionTime;
    private string _executionType;
    [AWSPropertyAttribute]
public string ExecutionId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> ExecutionTime { get; public set; }
    [AWSPropertyAttribute]
public string ExecutionType { get; public set; }
    public string get_ExecutionId();
    public void set_ExecutionId(string value);
    internal bool IsSetExecutionId();
    public Nullable`1<DateTime> get_ExecutionTime();
    public void set_ExecutionTime(Nullable`1<DateTime> value);
    internal bool IsSetExecutionTime();
    public string get_ExecutionType();
    public void set_ExecutionType(string value);
    internal bool IsSetExecutionType();
}
public class Amazon.SimpleSystemsManagement.Model.ComplianceItem : object {
    private string _complianceType;
    private Dictionary`2<string, string> _details;
    private ComplianceExecutionSummary _executionSummary;
    private string _id;
    private string _resourceId;
    private string _resourceType;
    private ComplianceSeverity _severity;
    private ComplianceStatus _status;
    private string _title;
    [AWSPropertyAttribute]
public string ComplianceType { get; public set; }
    public Dictionary`2<string, string> Details { get; public set; }
    public ComplianceExecutionSummary ExecutionSummary { get; public set; }
    public string Id { get; public set; }
    [AWSPropertyAttribute]
public string ResourceId { get; public set; }
    [AWSPropertyAttribute]
public string ResourceType { get; public set; }
    public ComplianceSeverity Severity { get; public set; }
    public ComplianceStatus Status { get; public set; }
    [AWSPropertyAttribute]
public string Title { get; public set; }
    public string get_ComplianceType();
    public void set_ComplianceType(string value);
    internal bool IsSetComplianceType();
    public Dictionary`2<string, string> get_Details();
    public void set_Details(Dictionary`2<string, string> value);
    internal bool IsSetDetails();
    public ComplianceExecutionSummary get_ExecutionSummary();
    public void set_ExecutionSummary(ComplianceExecutionSummary value);
    internal bool IsSetExecutionSummary();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public string get_ResourceType();
    public void set_ResourceType(string value);
    internal bool IsSetResourceType();
    public ComplianceSeverity get_Severity();
    public void set_Severity(ComplianceSeverity value);
    internal bool IsSetSeverity();
    public ComplianceStatus get_Status();
    public void set_Status(ComplianceStatus value);
    internal bool IsSetStatus();
    public string get_Title();
    public void set_Title(string value);
    internal bool IsSetTitle();
}
public class Amazon.SimpleSystemsManagement.Model.ComplianceItemEntry : object {
    private Dictionary`2<string, string> _details;
    private string _id;
    private ComplianceSeverity _severity;
    private ComplianceStatus _status;
    private string _title;
    public Dictionary`2<string, string> Details { get; public set; }
    public string Id { get; public set; }
    [AWSPropertyAttribute]
public ComplianceSeverity Severity { get; public set; }
    [AWSPropertyAttribute]
public ComplianceStatus Status { get; public set; }
    [AWSPropertyAttribute]
public string Title { get; public set; }
    public Dictionary`2<string, string> get_Details();
    public void set_Details(Dictionary`2<string, string> value);
    internal bool IsSetDetails();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public ComplianceSeverity get_Severity();
    public void set_Severity(ComplianceSeverity value);
    internal bool IsSetSeverity();
    public ComplianceStatus get_Status();
    public void set_Status(ComplianceStatus value);
    internal bool IsSetStatus();
    public string get_Title();
    public void set_Title(string value);
    internal bool IsSetTitle();
}
public class Amazon.SimpleSystemsManagement.Model.ComplianceStringFilter : object {
    private string _key;
    private ComplianceQueryOperatorType _type;
    private List`1<string> _values;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    public ComplianceQueryOperatorType Type { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Values { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public ComplianceQueryOperatorType get_Type();
    public void set_Type(ComplianceQueryOperatorType value);
    internal bool IsSetType();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.SimpleSystemsManagement.Model.ComplianceSummaryItem : object {
    private string _complianceType;
    private CompliantSummary _compliantSummary;
    private NonCompliantSummary _nonCompliantSummary;
    [AWSPropertyAttribute]
public string ComplianceType { get; public set; }
    public CompliantSummary CompliantSummary { get; public set; }
    public NonCompliantSummary NonCompliantSummary { get; public set; }
    public string get_ComplianceType();
    public void set_ComplianceType(string value);
    internal bool IsSetComplianceType();
    public CompliantSummary get_CompliantSummary();
    public void set_CompliantSummary(CompliantSummary value);
    internal bool IsSetCompliantSummary();
    public NonCompliantSummary get_NonCompliantSummary();
    public void set_NonCompliantSummary(NonCompliantSummary value);
    internal bool IsSetNonCompliantSummary();
}
public class Amazon.SimpleSystemsManagement.Model.ComplianceTypeCountLimitExceededException : AmazonSimpleSystemsManagementException {
    public ComplianceTypeCountLimitExceededException(string message);
    public ComplianceTypeCountLimitExceededException(string message, Exception innerException);
    public ComplianceTypeCountLimitExceededException(Exception innerException);
    public ComplianceTypeCountLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ComplianceTypeCountLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.CompliantSummary : object {
    private Nullable`1<int> _compliantCount;
    private SeveritySummary _severitySummary;
    public Nullable`1<int> CompliantCount { get; public set; }
    public SeveritySummary SeveritySummary { get; public set; }
    public Nullable`1<int> get_CompliantCount();
    public void set_CompliantCount(Nullable`1<int> value);
    internal bool IsSetCompliantCount();
    public SeveritySummary get_SeveritySummary();
    public void set_SeveritySummary(SeveritySummary value);
    internal bool IsSetSeveritySummary();
}
public class Amazon.SimpleSystemsManagement.Model.CreateActivationRequest : AmazonSimpleSystemsManagementRequest {
    private string _defaultInstanceName;
    private string _description;
    private Nullable`1<DateTime> _expirationDate;
    private string _iamRole;
    private Nullable`1<int> _registrationLimit;
    private List`1<RegistrationMetadataItem> _registrationMetadata;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string DefaultInstanceName { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public Nullable`1<DateTime> ExpirationDate { get; public set; }
    [AWSPropertyAttribute]
public string IamRole { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RegistrationLimit { get; public set; }
    public List`1<RegistrationMetadataItem> RegistrationMetadata { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_DefaultInstanceName();
    public void set_DefaultInstanceName(string value);
    internal bool IsSetDefaultInstanceName();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<DateTime> get_ExpirationDate();
    public void set_ExpirationDate(Nullable`1<DateTime> value);
    internal bool IsSetExpirationDate();
    public string get_IamRole();
    public void set_IamRole(string value);
    internal bool IsSetIamRole();
    public Nullable`1<int> get_RegistrationLimit();
    public void set_RegistrationLimit(Nullable`1<int> value);
    internal bool IsSetRegistrationLimit();
    public List`1<RegistrationMetadataItem> get_RegistrationMetadata();
    public void set_RegistrationMetadata(List`1<RegistrationMetadataItem> value);
    internal bool IsSetRegistrationMetadata();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.SimpleSystemsManagement.Model.CreateActivationResponse : AmazonWebServiceResponse {
    private string _activationCode;
    private string _activationId;
    [AWSPropertyAttribute]
public string ActivationCode { get; public set; }
    public string ActivationId { get; public set; }
    public string get_ActivationCode();
    public void set_ActivationCode(string value);
    internal bool IsSetActivationCode();
    public string get_ActivationId();
    public void set_ActivationId(string value);
    internal bool IsSetActivationId();
}
public class Amazon.SimpleSystemsManagement.Model.CreateAssociationBatchRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<CreateAssociationBatchRequestEntry> _entries;
    [AWSPropertyAttribute]
public List`1<CreateAssociationBatchRequestEntry> Entries { get; public set; }
    public CreateAssociationBatchRequest(List`1<CreateAssociationBatchRequestEntry> entries);
    public List`1<CreateAssociationBatchRequestEntry> get_Entries();
    public void set_Entries(List`1<CreateAssociationBatchRequestEntry> value);
    internal bool IsSetEntries();
}
public class Amazon.SimpleSystemsManagement.Model.CreateAssociationBatchRequestEntry : object {
    private AlarmConfiguration _alarmConfiguration;
    private Nullable`1<bool> _applyOnlyAtCronInterval;
    private string _associationName;
    private string _automationTargetParameterName;
    private List`1<string> _calendarNames;
    private AssociationComplianceSeverity _complianceSeverity;
    private string _documentVersion;
    private Nullable`1<int> _duration;
    private string _instanceId;
    private string _maxConcurrency;
    private string _maxErrors;
    private string _name;
    private InstanceAssociationOutputLocation _outputLocation;
    private Dictionary`2<string, List`1<string>> _parameters;
    private string _scheduleExpression;
    private Nullable`1<int> _scheduleOffset;
    private AssociationSyncCompliance _syncCompliance;
    private List`1<TargetLocation> _targetLocations;
    private List`1<Dictionary`2<string, List`1<string>>> _targetMaps;
    private List`1<Target> _targets;
    public AlarmConfiguration AlarmConfiguration { get; public set; }
    public Nullable`1<bool> ApplyOnlyAtCronInterval { get; public set; }
    public string AssociationName { get; public set; }
    [AWSPropertyAttribute]
public string AutomationTargetParameterName { get; public set; }
    public List`1<string> CalendarNames { get; public set; }
    public AssociationComplianceSeverity ComplianceSeverity { get; public set; }
    public string DocumentVersion { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Duration { get; public set; }
    public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public string MaxConcurrency { get; public set; }
    [AWSPropertyAttribute]
public string MaxErrors { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public InstanceAssociationOutputLocation OutputLocation { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, List`1<string>> Parameters { get; public set; }
    [AWSPropertyAttribute]
public string ScheduleExpression { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ScheduleOffset { get; public set; }
    public AssociationSyncCompliance SyncCompliance { get; public set; }
    [AWSPropertyAttribute]
public List`1<TargetLocation> TargetLocations { get; public set; }
    [AWSPropertyAttribute]
public List`1<Dictionary`2<string, List`1<string>>> TargetMaps { get; public set; }
    [AWSPropertyAttribute]
public List`1<Target> Targets { get; public set; }
    public AlarmConfiguration get_AlarmConfiguration();
    public void set_AlarmConfiguration(AlarmConfiguration value);
    internal bool IsSetAlarmConfiguration();
    public Nullable`1<bool> get_ApplyOnlyAtCronInterval();
    public void set_ApplyOnlyAtCronInterval(Nullable`1<bool> value);
    internal bool IsSetApplyOnlyAtCronInterval();
    public string get_AssociationName();
    public void set_AssociationName(string value);
    internal bool IsSetAssociationName();
    public string get_AutomationTargetParameterName();
    public void set_AutomationTargetParameterName(string value);
    internal bool IsSetAutomationTargetParameterName();
    public List`1<string> get_CalendarNames();
    public void set_CalendarNames(List`1<string> value);
    internal bool IsSetCalendarNames();
    public AssociationComplianceSeverity get_ComplianceSeverity();
    public void set_ComplianceSeverity(AssociationComplianceSeverity value);
    internal bool IsSetComplianceSeverity();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public Nullable`1<int> get_Duration();
    public void set_Duration(Nullable`1<int> value);
    internal bool IsSetDuration();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_MaxConcurrency();
    public void set_MaxConcurrency(string value);
    internal bool IsSetMaxConcurrency();
    public string get_MaxErrors();
    public void set_MaxErrors(string value);
    internal bool IsSetMaxErrors();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public InstanceAssociationOutputLocation get_OutputLocation();
    public void set_OutputLocation(InstanceAssociationOutputLocation value);
    internal bool IsSetOutputLocation();
    public Dictionary`2<string, List`1<string>> get_Parameters();
    public void set_Parameters(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetParameters();
    public string get_ScheduleExpression();
    public void set_ScheduleExpression(string value);
    internal bool IsSetScheduleExpression();
    public Nullable`1<int> get_ScheduleOffset();
    public void set_ScheduleOffset(Nullable`1<int> value);
    internal bool IsSetScheduleOffset();
    public AssociationSyncCompliance get_SyncCompliance();
    public void set_SyncCompliance(AssociationSyncCompliance value);
    internal bool IsSetSyncCompliance();
    public List`1<TargetLocation> get_TargetLocations();
    public void set_TargetLocations(List`1<TargetLocation> value);
    internal bool IsSetTargetLocations();
    public List`1<Dictionary`2<string, List`1<string>>> get_TargetMaps();
    public void set_TargetMaps(List`1<Dictionary`2<string, List`1<string>>> value);
    internal bool IsSetTargetMaps();
    public List`1<Target> get_Targets();
    public void set_Targets(List`1<Target> value);
    internal bool IsSetTargets();
}
public class Amazon.SimpleSystemsManagement.Model.CreateAssociationBatchResponse : AmazonWebServiceResponse {
    private List`1<FailedCreateAssociation> _failed;
    private List`1<AssociationDescription> _successful;
    public List`1<FailedCreateAssociation> Failed { get; public set; }
    public List`1<AssociationDescription> Successful { get; public set; }
    public List`1<FailedCreateAssociation> get_Failed();
    public void set_Failed(List`1<FailedCreateAssociation> value);
    internal bool IsSetFailed();
    public List`1<AssociationDescription> get_Successful();
    public void set_Successful(List`1<AssociationDescription> value);
    internal bool IsSetSuccessful();
}
public class Amazon.SimpleSystemsManagement.Model.CreateAssociationRequest : AmazonSimpleSystemsManagementRequest {
    private AlarmConfiguration _alarmConfiguration;
    private Nullable`1<bool> _applyOnlyAtCronInterval;
    private string _associationName;
    private string _automationTargetParameterName;
    private List`1<string> _calendarNames;
    private AssociationComplianceSeverity _complianceSeverity;
    private string _documentVersion;
    private Nullable`1<int> _duration;
    private string _instanceId;
    private string _maxConcurrency;
    private string _maxErrors;
    private string _name;
    private InstanceAssociationOutputLocation _outputLocation;
    private Dictionary`2<string, List`1<string>> _parameters;
    private string _scheduleExpression;
    private Nullable`1<int> _scheduleOffset;
    private AssociationSyncCompliance _syncCompliance;
    private List`1<Tag> _tags;
    private List`1<TargetLocation> _targetLocations;
    private List`1<Dictionary`2<string, List`1<string>>> _targetMaps;
    private List`1<Target> _targets;
    public AlarmConfiguration AlarmConfiguration { get; public set; }
    public Nullable`1<bool> ApplyOnlyAtCronInterval { get; public set; }
    public string AssociationName { get; public set; }
    [AWSPropertyAttribute]
public string AutomationTargetParameterName { get; public set; }
    public List`1<string> CalendarNames { get; public set; }
    public AssociationComplianceSeverity ComplianceSeverity { get; public set; }
    public string DocumentVersion { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Duration { get; public set; }
    public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public string MaxConcurrency { get; public set; }
    [AWSPropertyAttribute]
public string MaxErrors { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public InstanceAssociationOutputLocation OutputLocation { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, List`1<string>> Parameters { get; public set; }
    [AWSPropertyAttribute]
public string ScheduleExpression { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ScheduleOffset { get; public set; }
    public AssociationSyncCompliance SyncCompliance { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public List`1<TargetLocation> TargetLocations { get; public set; }
    [AWSPropertyAttribute]
public List`1<Dictionary`2<string, List`1<string>>> TargetMaps { get; public set; }
    [AWSPropertyAttribute]
public List`1<Target> Targets { get; public set; }
    public CreateAssociationRequest(string instanceId, string name);
    public AlarmConfiguration get_AlarmConfiguration();
    public void set_AlarmConfiguration(AlarmConfiguration value);
    internal bool IsSetAlarmConfiguration();
    public Nullable`1<bool> get_ApplyOnlyAtCronInterval();
    public void set_ApplyOnlyAtCronInterval(Nullable`1<bool> value);
    internal bool IsSetApplyOnlyAtCronInterval();
    public string get_AssociationName();
    public void set_AssociationName(string value);
    internal bool IsSetAssociationName();
    public string get_AutomationTargetParameterName();
    public void set_AutomationTargetParameterName(string value);
    internal bool IsSetAutomationTargetParameterName();
    public List`1<string> get_CalendarNames();
    public void set_CalendarNames(List`1<string> value);
    internal bool IsSetCalendarNames();
    public AssociationComplianceSeverity get_ComplianceSeverity();
    public void set_ComplianceSeverity(AssociationComplianceSeverity value);
    internal bool IsSetComplianceSeverity();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public Nullable`1<int> get_Duration();
    public void set_Duration(Nullable`1<int> value);
    internal bool IsSetDuration();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_MaxConcurrency();
    public void set_MaxConcurrency(string value);
    internal bool IsSetMaxConcurrency();
    public string get_MaxErrors();
    public void set_MaxErrors(string value);
    internal bool IsSetMaxErrors();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public InstanceAssociationOutputLocation get_OutputLocation();
    public void set_OutputLocation(InstanceAssociationOutputLocation value);
    internal bool IsSetOutputLocation();
    public Dictionary`2<string, List`1<string>> get_Parameters();
    public void set_Parameters(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetParameters();
    public string get_ScheduleExpression();
    public void set_ScheduleExpression(string value);
    internal bool IsSetScheduleExpression();
    public Nullable`1<int> get_ScheduleOffset();
    public void set_ScheduleOffset(Nullable`1<int> value);
    internal bool IsSetScheduleOffset();
    public AssociationSyncCompliance get_SyncCompliance();
    public void set_SyncCompliance(AssociationSyncCompliance value);
    internal bool IsSetSyncCompliance();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public List`1<TargetLocation> get_TargetLocations();
    public void set_TargetLocations(List`1<TargetLocation> value);
    internal bool IsSetTargetLocations();
    public List`1<Dictionary`2<string, List`1<string>>> get_TargetMaps();
    public void set_TargetMaps(List`1<Dictionary`2<string, List`1<string>>> value);
    internal bool IsSetTargetMaps();
    public List`1<Target> get_Targets();
    public void set_Targets(List`1<Target> value);
    internal bool IsSetTargets();
}
public class Amazon.SimpleSystemsManagement.Model.CreateAssociationResponse : AmazonWebServiceResponse {
    private AssociationDescription _associationDescription;
    public AssociationDescription AssociationDescription { get; public set; }
    public AssociationDescription get_AssociationDescription();
    public void set_AssociationDescription(AssociationDescription value);
    internal bool IsSetAssociationDescription();
}
public class Amazon.SimpleSystemsManagement.Model.CreateDocumentRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<AttachmentsSource> _attachments;
    private string _content;
    private string _displayName;
    private DocumentFormat _documentFormat;
    private DocumentType _documentType;
    private string _name;
    private List`1<DocumentRequires> _requires;
    private List`1<Tag> _tags;
    private string _targetType;
    private string _versionName;
    [AWSPropertyAttribute]
public List`1<AttachmentsSource> Attachments { get; public set; }
    [AWSPropertyAttribute]
public string Content { get; public set; }
    [AWSPropertyAttribute]
public string DisplayName { get; public set; }
    public DocumentFormat DocumentFormat { get; public set; }
    public DocumentType DocumentType { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public List`1<DocumentRequires> Requires { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TargetType { get; public set; }
    public string VersionName { get; public set; }
    public CreateDocumentRequest(string name, string content);
    public List`1<AttachmentsSource> get_Attachments();
    public void set_Attachments(List`1<AttachmentsSource> value);
    internal bool IsSetAttachments();
    public string get_Content();
    public void set_Content(string value);
    internal bool IsSetContent();
    public string get_DisplayName();
    public void set_DisplayName(string value);
    internal bool IsSetDisplayName();
    public DocumentFormat get_DocumentFormat();
    public void set_DocumentFormat(DocumentFormat value);
    internal bool IsSetDocumentFormat();
    public DocumentType get_DocumentType();
    public void set_DocumentType(DocumentType value);
    internal bool IsSetDocumentType();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<DocumentRequires> get_Requires();
    public void set_Requires(List`1<DocumentRequires> value);
    internal bool IsSetRequires();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TargetType();
    public void set_TargetType(string value);
    internal bool IsSetTargetType();
    public string get_VersionName();
    public void set_VersionName(string value);
    internal bool IsSetVersionName();
}
public class Amazon.SimpleSystemsManagement.Model.CreateDocumentResponse : AmazonWebServiceResponse {
    private DocumentDescription _documentDescription;
    public DocumentDescription DocumentDescription { get; public set; }
    public DocumentDescription get_DocumentDescription();
    public void set_DocumentDescription(DocumentDescription value);
    internal bool IsSetDocumentDescription();
}
public class Amazon.SimpleSystemsManagement.Model.CreateMaintenanceWindowRequest : AmazonSimpleSystemsManagementRequest {
    private Nullable`1<bool> _allowUnassociatedTargets;
    private string _clientToken;
    private Nullable`1<int> _cutoff;
    private string _description;
    private Nullable`1<int> _duration;
    private string _endDate;
    private string _name;
    private string _schedule;
    private Nullable`1<int> _scheduleOffset;
    private string _scheduleTimezone;
    private string _startDate;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public Nullable`1<bool> AllowUnassociatedTargets { get; public set; }
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Cutoff { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Duration { get; public set; }
    public string EndDate { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Schedule { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ScheduleOffset { get; public set; }
    public string ScheduleTimezone { get; public set; }
    public string StartDate { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public Nullable`1<bool> get_AllowUnassociatedTargets();
    public void set_AllowUnassociatedTargets(Nullable`1<bool> value);
    internal bool IsSetAllowUnassociatedTargets();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public Nullable`1<int> get_Cutoff();
    public void set_Cutoff(Nullable`1<int> value);
    internal bool IsSetCutoff();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<int> get_Duration();
    public void set_Duration(Nullable`1<int> value);
    internal bool IsSetDuration();
    public string get_EndDate();
    public void set_EndDate(string value);
    internal bool IsSetEndDate();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Schedule();
    public void set_Schedule(string value);
    internal bool IsSetSchedule();
    public Nullable`1<int> get_ScheduleOffset();
    public void set_ScheduleOffset(Nullable`1<int> value);
    internal bool IsSetScheduleOffset();
    public string get_ScheduleTimezone();
    public void set_ScheduleTimezone(string value);
    internal bool IsSetScheduleTimezone();
    public string get_StartDate();
    public void set_StartDate(string value);
    internal bool IsSetStartDate();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.SimpleSystemsManagement.Model.CreateMaintenanceWindowResponse : AmazonWebServiceResponse {
    private string _windowId;
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
}
public class Amazon.SimpleSystemsManagement.Model.CreateOpsItemRequest : AmazonSimpleSystemsManagementRequest {
    private string _accountId;
    private Nullable`1<DateTime> _actualEndTime;
    private Nullable`1<DateTime> _actualStartTime;
    private string _category;
    private string _description;
    private List`1<OpsItemNotification> _notifications;
    private Dictionary`2<string, OpsItemDataValue> _operationalData;
    private string _opsItemType;
    private Nullable`1<DateTime> _plannedEndTime;
    private Nullable`1<DateTime> _plannedStartTime;
    private Nullable`1<int> _priority;
    private List`1<RelatedOpsItem> _relatedOpsItems;
    private string _severity;
    private string _source;
    private List`1<Tag> _tags;
    private string _title;
    public string AccountId { get; public set; }
    public Nullable`1<DateTime> ActualEndTime { get; public set; }
    public Nullable`1<DateTime> ActualStartTime { get; public set; }
    [AWSPropertyAttribute]
public string Category { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public List`1<OpsItemNotification> Notifications { get; public set; }
    public Dictionary`2<string, OpsItemDataValue> OperationalData { get; public set; }
    public string OpsItemType { get; public set; }
    public Nullable`1<DateTime> PlannedEndTime { get; public set; }
    public Nullable`1<DateTime> PlannedStartTime { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    public List`1<RelatedOpsItem> RelatedOpsItems { get; public set; }
    [AWSPropertyAttribute]
public string Severity { get; public set; }
    [AWSPropertyAttribute]
public string Source { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string Title { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public Nullable`1<DateTime> get_ActualEndTime();
    public void set_ActualEndTime(Nullable`1<DateTime> value);
    internal bool IsSetActualEndTime();
    public Nullable`1<DateTime> get_ActualStartTime();
    public void set_ActualStartTime(Nullable`1<DateTime> value);
    internal bool IsSetActualStartTime();
    public string get_Category();
    public void set_Category(string value);
    internal bool IsSetCategory();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<OpsItemNotification> get_Notifications();
    public void set_Notifications(List`1<OpsItemNotification> value);
    internal bool IsSetNotifications();
    public Dictionary`2<string, OpsItemDataValue> get_OperationalData();
    public void set_OperationalData(Dictionary`2<string, OpsItemDataValue> value);
    internal bool IsSetOperationalData();
    public string get_OpsItemType();
    public void set_OpsItemType(string value);
    internal bool IsSetOpsItemType();
    public Nullable`1<DateTime> get_PlannedEndTime();
    public void set_PlannedEndTime(Nullable`1<DateTime> value);
    internal bool IsSetPlannedEndTime();
    public Nullable`1<DateTime> get_PlannedStartTime();
    public void set_PlannedStartTime(Nullable`1<DateTime> value);
    internal bool IsSetPlannedStartTime();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
    public List`1<RelatedOpsItem> get_RelatedOpsItems();
    public void set_RelatedOpsItems(List`1<RelatedOpsItem> value);
    internal bool IsSetRelatedOpsItems();
    public string get_Severity();
    public void set_Severity(string value);
    internal bool IsSetSeverity();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_Title();
    public void set_Title(string value);
    internal bool IsSetTitle();
}
public class Amazon.SimpleSystemsManagement.Model.CreateOpsItemResponse : AmazonWebServiceResponse {
    private string _opsItemArn;
    private string _opsItemId;
    [AWSPropertyAttribute]
public string OpsItemArn { get; public set; }
    public string OpsItemId { get; public set; }
    public string get_OpsItemArn();
    public void set_OpsItemArn(string value);
    internal bool IsSetOpsItemArn();
    public string get_OpsItemId();
    public void set_OpsItemId(string value);
    internal bool IsSetOpsItemId();
}
public class Amazon.SimpleSystemsManagement.Model.CreateOpsMetadataRequest : AmazonSimpleSystemsManagementRequest {
    private Dictionary`2<string, MetadataValue> _metadata;
    private string _resourceId;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public Dictionary`2<string, MetadataValue> Metadata { get; public set; }
    [AWSPropertyAttribute]
public string ResourceId { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public Dictionary`2<string, MetadataValue> get_Metadata();
    public void set_Metadata(Dictionary`2<string, MetadataValue> value);
    internal bool IsSetMetadata();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.SimpleSystemsManagement.Model.CreateOpsMetadataResponse : AmazonWebServiceResponse {
    private string _opsMetadataArn;
    [AWSPropertyAttribute]
public string OpsMetadataArn { get; public set; }
    public string get_OpsMetadataArn();
    public void set_OpsMetadataArn(string value);
    internal bool IsSetOpsMetadataArn();
}
public class Amazon.SimpleSystemsManagement.Model.CreatePatchBaselineRequest : AmazonSimpleSystemsManagementRequest {
    private PatchRuleGroup _approvalRules;
    private List`1<string> _approvedPatches;
    private PatchComplianceLevel _approvedPatchesComplianceLevel;
    private Nullable`1<bool> _approvedPatchesEnableNonSecurity;
    private string _clientToken;
    private string _description;
    private PatchFilterGroup _globalFilters;
    private string _name;
    private OperatingSystem _operatingSystem;
    private List`1<string> _rejectedPatches;
    private PatchAction _rejectedPatchesAction;
    private List`1<PatchSource> _sources;
    private List`1<Tag> _tags;
    public PatchRuleGroup ApprovalRules { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ApprovedPatches { get; public set; }
    public PatchComplianceLevel ApprovedPatchesComplianceLevel { get; public set; }
    public Nullable`1<bool> ApprovedPatchesEnableNonSecurity { get; public set; }
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public PatchFilterGroup GlobalFilters { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public OperatingSystem OperatingSystem { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> RejectedPatches { get; public set; }
    public PatchAction RejectedPatchesAction { get; public set; }
    [AWSPropertyAttribute]
public List`1<PatchSource> Sources { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public PatchRuleGroup get_ApprovalRules();
    public void set_ApprovalRules(PatchRuleGroup value);
    internal bool IsSetApprovalRules();
    public List`1<string> get_ApprovedPatches();
    public void set_ApprovedPatches(List`1<string> value);
    internal bool IsSetApprovedPatches();
    public PatchComplianceLevel get_ApprovedPatchesComplianceLevel();
    public void set_ApprovedPatchesComplianceLevel(PatchComplianceLevel value);
    internal bool IsSetApprovedPatchesComplianceLevel();
    public Nullable`1<bool> get_ApprovedPatchesEnableNonSecurity();
    public void set_ApprovedPatchesEnableNonSecurity(Nullable`1<bool> value);
    internal bool IsSetApprovedPatchesEnableNonSecurity();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public PatchFilterGroup get_GlobalFilters();
    public void set_GlobalFilters(PatchFilterGroup value);
    internal bool IsSetGlobalFilters();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public OperatingSystem get_OperatingSystem();
    public void set_OperatingSystem(OperatingSystem value);
    internal bool IsSetOperatingSystem();
    public List`1<string> get_RejectedPatches();
    public void set_RejectedPatches(List`1<string> value);
    internal bool IsSetRejectedPatches();
    public PatchAction get_RejectedPatchesAction();
    public void set_RejectedPatchesAction(PatchAction value);
    internal bool IsSetRejectedPatchesAction();
    public List`1<PatchSource> get_Sources();
    public void set_Sources(List`1<PatchSource> value);
    internal bool IsSetSources();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.SimpleSystemsManagement.Model.CreatePatchBaselineResponse : AmazonWebServiceResponse {
    private string _baselineId;
    [AWSPropertyAttribute]
public string BaselineId { get; public set; }
    public string get_BaselineId();
    public void set_BaselineId(string value);
    internal bool IsSetBaselineId();
}
public class Amazon.SimpleSystemsManagement.Model.CreateResourceDataSyncRequest : AmazonSimpleSystemsManagementRequest {
    private ResourceDataSyncS3Destination _s3Destination;
    private string _syncName;
    private ResourceDataSyncSource _syncSource;
    private string _syncType;
    public ResourceDataSyncS3Destination S3Destination { get; public set; }
    [AWSPropertyAttribute]
public string SyncName { get; public set; }
    public ResourceDataSyncSource SyncSource { get; public set; }
    [AWSPropertyAttribute]
public string SyncType { get; public set; }
    public ResourceDataSyncS3Destination get_S3Destination();
    public void set_S3Destination(ResourceDataSyncS3Destination value);
    internal bool IsSetS3Destination();
    public string get_SyncName();
    public void set_SyncName(string value);
    internal bool IsSetSyncName();
    public ResourceDataSyncSource get_SyncSource();
    public void set_SyncSource(ResourceDataSyncSource value);
    internal bool IsSetSyncSource();
    public string get_SyncType();
    public void set_SyncType(string value);
    internal bool IsSetSyncType();
}
public class Amazon.SimpleSystemsManagement.Model.CreateResourceDataSyncResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleSystemsManagement.Model.CustomSchemaCountLimitExceededException : AmazonSimpleSystemsManagementException {
    public CustomSchemaCountLimitExceededException(string message);
    public CustomSchemaCountLimitExceededException(string message, Exception innerException);
    public CustomSchemaCountLimitExceededException(Exception innerException);
    public CustomSchemaCountLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CustomSchemaCountLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.DeleteActivationRequest : AmazonSimpleSystemsManagementRequest {
    private string _activationId;
    [AWSPropertyAttribute]
public string ActivationId { get; public set; }
    public string get_ActivationId();
    public void set_ActivationId(string value);
    internal bool IsSetActivationId();
}
public class Amazon.SimpleSystemsManagement.Model.DeleteActivationResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleSystemsManagement.Model.DeleteAssociationRequest : AmazonSimpleSystemsManagementRequest {
    private string _associationId;
    private string _instanceId;
    private string _name;
    public string AssociationId { get; public set; }
    public string InstanceId { get; public set; }
    public string Name { get; public set; }
    public DeleteAssociationRequest(string instanceId, string name);
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleSystemsManagement.Model.DeleteAssociationResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleSystemsManagement.Model.DeleteDocumentRequest : AmazonSimpleSystemsManagementRequest {
    private string _documentVersion;
    private Nullable`1<bool> _force;
    private string _name;
    private string _versionName;
    public string DocumentVersion { get; public set; }
    public Nullable`1<bool> Force { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string VersionName { get; public set; }
    public DeleteDocumentRequest(string name);
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public Nullable`1<bool> get_Force();
    public void set_Force(Nullable`1<bool> value);
    internal bool IsSetForce();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_VersionName();
    public void set_VersionName(string value);
    internal bool IsSetVersionName();
}
public class Amazon.SimpleSystemsManagement.Model.DeleteDocumentResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleSystemsManagement.Model.DeleteInventoryRequest : AmazonSimpleSystemsManagementRequest {
    private string _clientToken;
    private Nullable`1<bool> _dryRun;
    private InventorySchemaDeleteOption _schemaDeleteOption;
    private string _typeName;
    public string ClientToken { get; public set; }
    public Nullable`1<bool> DryRun { get; public set; }
    public InventorySchemaDeleteOption SchemaDeleteOption { get; public set; }
    [AWSPropertyAttribute]
public string TypeName { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public Nullable`1<bool> get_DryRun();
    public void set_DryRun(Nullable`1<bool> value);
    internal bool IsSetDryRun();
    public InventorySchemaDeleteOption get_SchemaDeleteOption();
    public void set_SchemaDeleteOption(InventorySchemaDeleteOption value);
    internal bool IsSetSchemaDeleteOption();
    public string get_TypeName();
    public void set_TypeName(string value);
    internal bool IsSetTypeName();
}
public class Amazon.SimpleSystemsManagement.Model.DeleteInventoryResponse : AmazonWebServiceResponse {
    private string _deletionId;
    private InventoryDeletionSummary _deletionSummary;
    private string _typeName;
    public string DeletionId { get; public set; }
    public InventoryDeletionSummary DeletionSummary { get; public set; }
    [AWSPropertyAttribute]
public string TypeName { get; public set; }
    public string get_DeletionId();
    public void set_DeletionId(string value);
    internal bool IsSetDeletionId();
    public InventoryDeletionSummary get_DeletionSummary();
    public void set_DeletionSummary(InventoryDeletionSummary value);
    internal bool IsSetDeletionSummary();
    public string get_TypeName();
    public void set_TypeName(string value);
    internal bool IsSetTypeName();
}
public class Amazon.SimpleSystemsManagement.Model.DeleteMaintenanceWindowRequest : AmazonSimpleSystemsManagementRequest {
    private string _windowId;
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
}
public class Amazon.SimpleSystemsManagement.Model.DeleteMaintenanceWindowResponse : AmazonWebServiceResponse {
    private string _windowId;
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
}
public class Amazon.SimpleSystemsManagement.Model.DeleteOpsItemRequest : AmazonSimpleSystemsManagementRequest {
    private string _opsItemId;
    [AWSPropertyAttribute]
public string OpsItemId { get; public set; }
    public string get_OpsItemId();
    public void set_OpsItemId(string value);
    internal bool IsSetOpsItemId();
}
public class Amazon.SimpleSystemsManagement.Model.DeleteOpsItemResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleSystemsManagement.Model.DeleteOpsMetadataRequest : AmazonSimpleSystemsManagementRequest {
    private string _opsMetadataArn;
    [AWSPropertyAttribute]
public string OpsMetadataArn { get; public set; }
    public string get_OpsMetadataArn();
    public void set_OpsMetadataArn(string value);
    internal bool IsSetOpsMetadataArn();
}
public class Amazon.SimpleSystemsManagement.Model.DeleteOpsMetadataResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleSystemsManagement.Model.DeleteParameterRequest : AmazonSimpleSystemsManagementRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleSystemsManagement.Model.DeleteParameterResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleSystemsManagement.Model.DeleteParametersRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<string> _names;
    [AWSPropertyAttribute]
public List`1<string> Names { get; public set; }
    public List`1<string> get_Names();
    public void set_Names(List`1<string> value);
    internal bool IsSetNames();
}
public class Amazon.SimpleSystemsManagement.Model.DeleteParametersResponse : AmazonWebServiceResponse {
    private List`1<string> _deletedParameters;
    private List`1<string> _invalidParameters;
    [AWSPropertyAttribute]
public List`1<string> DeletedParameters { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> InvalidParameters { get; public set; }
    public List`1<string> get_DeletedParameters();
    public void set_DeletedParameters(List`1<string> value);
    internal bool IsSetDeletedParameters();
    public List`1<string> get_InvalidParameters();
    public void set_InvalidParameters(List`1<string> value);
    internal bool IsSetInvalidParameters();
}
public class Amazon.SimpleSystemsManagement.Model.DeletePatchBaselineRequest : AmazonSimpleSystemsManagementRequest {
    private string _baselineId;
    [AWSPropertyAttribute]
public string BaselineId { get; public set; }
    public string get_BaselineId();
    public void set_BaselineId(string value);
    internal bool IsSetBaselineId();
}
public class Amazon.SimpleSystemsManagement.Model.DeletePatchBaselineResponse : AmazonWebServiceResponse {
    private string _baselineId;
    [AWSPropertyAttribute]
public string BaselineId { get; public set; }
    public string get_BaselineId();
    public void set_BaselineId(string value);
    internal bool IsSetBaselineId();
}
public class Amazon.SimpleSystemsManagement.Model.DeleteResourceDataSyncRequest : AmazonSimpleSystemsManagementRequest {
    private string _syncName;
    private string _syncType;
    [AWSPropertyAttribute]
public string SyncName { get; public set; }
    [AWSPropertyAttribute]
public string SyncType { get; public set; }
    public string get_SyncName();
    public void set_SyncName(string value);
    internal bool IsSetSyncName();
    public string get_SyncType();
    public void set_SyncType(string value);
    internal bool IsSetSyncType();
}
public class Amazon.SimpleSystemsManagement.Model.DeleteResourceDataSyncResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleSystemsManagement.Model.DeleteResourcePolicyRequest : AmazonSimpleSystemsManagementRequest {
    private string _policyHash;
    private string _policyId;
    private string _resourceArn;
    [AWSPropertyAttribute]
public string PolicyHash { get; public set; }
    [AWSPropertyAttribute]
public string PolicyId { get; public set; }
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_PolicyHash();
    public void set_PolicyHash(string value);
    internal bool IsSetPolicyHash();
    public string get_PolicyId();
    public void set_PolicyId(string value);
    internal bool IsSetPolicyId();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.SimpleSystemsManagement.Model.DeleteResourcePolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleSystemsManagement.Model.DeregisterManagedInstanceRequest : AmazonSimpleSystemsManagementRequest {
    private string _instanceId;
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.SimpleSystemsManagement.Model.DeregisterManagedInstanceResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleSystemsManagement.Model.DeregisterPatchBaselineForPatchGroupRequest : AmazonSimpleSystemsManagementRequest {
    private string _baselineId;
    private string _patchGroup;
    [AWSPropertyAttribute]
public string BaselineId { get; public set; }
    [AWSPropertyAttribute]
public string PatchGroup { get; public set; }
    public string get_BaselineId();
    public void set_BaselineId(string value);
    internal bool IsSetBaselineId();
    public string get_PatchGroup();
    public void set_PatchGroup(string value);
    internal bool IsSetPatchGroup();
}
public class Amazon.SimpleSystemsManagement.Model.DeregisterPatchBaselineForPatchGroupResponse : AmazonWebServiceResponse {
    private string _baselineId;
    private string _patchGroup;
    [AWSPropertyAttribute]
public string BaselineId { get; public set; }
    [AWSPropertyAttribute]
public string PatchGroup { get; public set; }
    public string get_BaselineId();
    public void set_BaselineId(string value);
    internal bool IsSetBaselineId();
    public string get_PatchGroup();
    public void set_PatchGroup(string value);
    internal bool IsSetPatchGroup();
}
public class Amazon.SimpleSystemsManagement.Model.DeregisterTargetFromMaintenanceWindowRequest : AmazonSimpleSystemsManagementRequest {
    private Nullable`1<bool> _safe;
    private string _windowId;
    private string _windowTargetId;
    public Nullable`1<bool> Safe { get; public set; }
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    [AWSPropertyAttribute]
public string WindowTargetId { get; public set; }
    public Nullable`1<bool> get_Safe();
    public void set_Safe(Nullable`1<bool> value);
    internal bool IsSetSafe();
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
    public string get_WindowTargetId();
    public void set_WindowTargetId(string value);
    internal bool IsSetWindowTargetId();
}
public class Amazon.SimpleSystemsManagement.Model.DeregisterTargetFromMaintenanceWindowResponse : AmazonWebServiceResponse {
    private string _windowId;
    private string _windowTargetId;
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    [AWSPropertyAttribute]
public string WindowTargetId { get; public set; }
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
    public string get_WindowTargetId();
    public void set_WindowTargetId(string value);
    internal bool IsSetWindowTargetId();
}
public class Amazon.SimpleSystemsManagement.Model.DeregisterTaskFromMaintenanceWindowRequest : AmazonSimpleSystemsManagementRequest {
    private string _windowId;
    private string _windowTaskId;
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    [AWSPropertyAttribute]
public string WindowTaskId { get; public set; }
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
    public string get_WindowTaskId();
    public void set_WindowTaskId(string value);
    internal bool IsSetWindowTaskId();
}
public class Amazon.SimpleSystemsManagement.Model.DeregisterTaskFromMaintenanceWindowResponse : AmazonWebServiceResponse {
    private string _windowId;
    private string _windowTaskId;
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    [AWSPropertyAttribute]
public string WindowTaskId { get; public set; }
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
    public string get_WindowTaskId();
    public void set_WindowTaskId(string value);
    internal bool IsSetWindowTaskId();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeActivationsFilter : object {
    private DescribeActivationsFilterKeys _filterKey;
    private List`1<string> _filterValues;
    public DescribeActivationsFilterKeys FilterKey { get; public set; }
    public List`1<string> FilterValues { get; public set; }
    public DescribeActivationsFilterKeys get_FilterKey();
    public void set_FilterKey(DescribeActivationsFilterKeys value);
    internal bool IsSetFilterKey();
    public List`1<string> get_FilterValues();
    public void set_FilterValues(List`1<string> value);
    internal bool IsSetFilterValues();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeActivationsPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeActivationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeActivationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Activation> ActivationList { get; }
    internal DescribeActivationsPaginator(IAmazonSimpleSystemsManagement client, DescribeActivationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeActivationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Activation> get_ActivationList();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeActivationsPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeActivationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeActivationsResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeActivationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeActivationsRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<DescribeActivationsFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<DescribeActivationsFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<DescribeActivationsFilter> get_Filters();
    public void set_Filters(List`1<DescribeActivationsFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeActivationsResponse : AmazonWebServiceResponse {
    private List`1<Activation> _activationList;
    private string _nextToken;
    public List`1<Activation> ActivationList { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Activation> get_ActivationList();
    public void set_ActivationList(List`1<Activation> value);
    internal bool IsSetActivationList();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeAssociationExecutionsPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeAssociationExecutionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeAssociationExecutionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AssociationExecution> AssociationExecutions { get; }
    internal DescribeAssociationExecutionsPaginator(IAmazonSimpleSystemsManagement client, DescribeAssociationExecutionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeAssociationExecutionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<AssociationExecution> get_AssociationExecutions();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeAssociationExecutionsPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeAssociationExecutionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeAssociationExecutionsResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeAssociationExecutionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeAssociationExecutionsRequest : AmazonSimpleSystemsManagementRequest {
    private string _associationId;
    private List`1<AssociationExecutionFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string AssociationId { get; public set; }
    [AWSPropertyAttribute]
public List`1<AssociationExecutionFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public List`1<AssociationExecutionFilter> get_Filters();
    public void set_Filters(List`1<AssociationExecutionFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeAssociationExecutionsResponse : AmazonWebServiceResponse {
    private List`1<AssociationExecution> _associationExecutions;
    private string _nextToken;
    public List`1<AssociationExecution> AssociationExecutions { get; public set; }
    public string NextToken { get; public set; }
    public List`1<AssociationExecution> get_AssociationExecutions();
    public void set_AssociationExecutions(List`1<AssociationExecution> value);
    internal bool IsSetAssociationExecutions();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeAssociationExecutionTargetsPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeAssociationExecutionTargetsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeAssociationExecutionTargetsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AssociationExecutionTarget> AssociationExecutionTargets { get; }
    internal DescribeAssociationExecutionTargetsPaginator(IAmazonSimpleSystemsManagement client, DescribeAssociationExecutionTargetsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeAssociationExecutionTargetsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<AssociationExecutionTarget> get_AssociationExecutionTargets();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeAssociationExecutionTargetsPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeAssociationExecutionTargetsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeAssociationExecutionTargetsResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeAssociationExecutionTargetsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeAssociationExecutionTargetsRequest : AmazonSimpleSystemsManagementRequest {
    private string _associationId;
    private string _executionId;
    private List`1<AssociationExecutionTargetsFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string AssociationId { get; public set; }
    [AWSPropertyAttribute]
public string ExecutionId { get; public set; }
    [AWSPropertyAttribute]
public List`1<AssociationExecutionTargetsFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_ExecutionId();
    public void set_ExecutionId(string value);
    internal bool IsSetExecutionId();
    public List`1<AssociationExecutionTargetsFilter> get_Filters();
    public void set_Filters(List`1<AssociationExecutionTargetsFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeAssociationExecutionTargetsResponse : AmazonWebServiceResponse {
    private List`1<AssociationExecutionTarget> _associationExecutionTargets;
    private string _nextToken;
    public List`1<AssociationExecutionTarget> AssociationExecutionTargets { get; public set; }
    public string NextToken { get; public set; }
    public List`1<AssociationExecutionTarget> get_AssociationExecutionTargets();
    public void set_AssociationExecutionTargets(List`1<AssociationExecutionTarget> value);
    internal bool IsSetAssociationExecutionTargets();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeAssociationRequest : AmazonSimpleSystemsManagementRequest {
    private string _associationId;
    private string _associationVersion;
    private string _instanceId;
    private string _name;
    public string AssociationId { get; public set; }
    public string AssociationVersion { get; public set; }
    public string InstanceId { get; public set; }
    public string Name { get; public set; }
    public DescribeAssociationRequest(string instanceId, string name);
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_AssociationVersion();
    public void set_AssociationVersion(string value);
    internal bool IsSetAssociationVersion();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeAssociationResponse : AmazonWebServiceResponse {
    private AssociationDescription _associationDescription;
    public AssociationDescription AssociationDescription { get; public set; }
    public AssociationDescription get_AssociationDescription();
    public void set_AssociationDescription(AssociationDescription value);
    internal bool IsSetAssociationDescription();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeAutomationExecutionsPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeAutomationExecutionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeAutomationExecutionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AutomationExecutionMetadata> AutomationExecutionMetadataList { get; }
    internal DescribeAutomationExecutionsPaginator(IAmazonSimpleSystemsManagement client, DescribeAutomationExecutionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeAutomationExecutionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<AutomationExecutionMetadata> get_AutomationExecutionMetadataList();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeAutomationExecutionsPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeAutomationExecutionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeAutomationExecutionsResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeAutomationExecutionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeAutomationExecutionsRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<AutomationExecutionFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<AutomationExecutionFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<AutomationExecutionFilter> get_Filters();
    public void set_Filters(List`1<AutomationExecutionFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeAutomationExecutionsResponse : AmazonWebServiceResponse {
    private List`1<AutomationExecutionMetadata> _automationExecutionMetadataList;
    private string _nextToken;
    public List`1<AutomationExecutionMetadata> AutomationExecutionMetadataList { get; public set; }
    public string NextToken { get; public set; }
    public List`1<AutomationExecutionMetadata> get_AutomationExecutionMetadataList();
    public void set_AutomationExecutionMetadataList(List`1<AutomationExecutionMetadata> value);
    internal bool IsSetAutomationExecutionMetadataList();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeAutomationStepExecutionsPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeAutomationStepExecutionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeAutomationStepExecutionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<StepExecution> StepExecutions { get; }
    internal DescribeAutomationStepExecutionsPaginator(IAmazonSimpleSystemsManagement client, DescribeAutomationStepExecutionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeAutomationStepExecutionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<StepExecution> get_StepExecutions();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeAutomationStepExecutionsPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeAutomationStepExecutionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeAutomationStepExecutionsResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeAutomationStepExecutionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeAutomationStepExecutionsRequest : AmazonSimpleSystemsManagementRequest {
    private string _automationExecutionId;
    private List`1<StepExecutionFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private Nullable`1<bool> _reverseOrder;
    [AWSPropertyAttribute]
public string AutomationExecutionId { get; public set; }
    [AWSPropertyAttribute]
public List`1<StepExecutionFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<bool> ReverseOrder { get; public set; }
    public string get_AutomationExecutionId();
    public void set_AutomationExecutionId(string value);
    internal bool IsSetAutomationExecutionId();
    public List`1<StepExecutionFilter> get_Filters();
    public void set_Filters(List`1<StepExecutionFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<bool> get_ReverseOrder();
    public void set_ReverseOrder(Nullable`1<bool> value);
    internal bool IsSetReverseOrder();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeAutomationStepExecutionsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<StepExecution> _stepExecutions;
    public string NextToken { get; public set; }
    public List`1<StepExecution> StepExecutions { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<StepExecution> get_StepExecutions();
    public void set_StepExecutions(List`1<StepExecution> value);
    internal bool IsSetStepExecutions();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeAvailablePatchesPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeAvailablePatchesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeAvailablePatchesResponse> Responses { get; }
    public IPaginatedEnumerable`1<Patch> Patches { get; }
    internal DescribeAvailablePatchesPaginator(IAmazonSimpleSystemsManagement client, DescribeAvailablePatchesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeAvailablePatchesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Patch> get_Patches();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeAvailablePatchesPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeAvailablePatchesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeAvailablePatchesResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeAvailablePatchesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeAvailablePatchesRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<PatchOrchestratorFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<PatchOrchestratorFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<PatchOrchestratorFilter> get_Filters();
    public void set_Filters(List`1<PatchOrchestratorFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeAvailablePatchesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Patch> _patches;
    public string NextToken { get; public set; }
    public List`1<Patch> Patches { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Patch> get_Patches();
    public void set_Patches(List`1<Patch> value);
    internal bool IsSetPatches();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeDocumentPermissionRequest : AmazonSimpleSystemsManagementRequest {
    private Nullable`1<int> _maxResults;
    private string _name;
    private string _nextToken;
    private DocumentPermissionType _permissionType;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public DocumentPermissionType PermissionType { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public DocumentPermissionType get_PermissionType();
    public void set_PermissionType(DocumentPermissionType value);
    internal bool IsSetPermissionType();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeDocumentPermissionResponse : AmazonWebServiceResponse {
    private List`1<string> _accountIds;
    private List`1<AccountSharingInfo> _accountSharingInfoList;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<string> AccountIds { get; public set; }
    public List`1<AccountSharingInfo> AccountSharingInfoList { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_AccountIds();
    public void set_AccountIds(List`1<string> value);
    internal bool IsSetAccountIds();
    public List`1<AccountSharingInfo> get_AccountSharingInfoList();
    public void set_AccountSharingInfoList(List`1<AccountSharingInfo> value);
    internal bool IsSetAccountSharingInfoList();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeDocumentRequest : AmazonSimpleSystemsManagementRequest {
    private string _documentVersion;
    private string _name;
    private string _versionName;
    public string DocumentVersion { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string VersionName { get; public set; }
    public DescribeDocumentRequest(string name);
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_VersionName();
    public void set_VersionName(string value);
    internal bool IsSetVersionName();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeDocumentResponse : AmazonWebServiceResponse {
    private DocumentDescription _document;
    public DocumentDescription Document { get; public set; }
    public DocumentDescription get_Document();
    public void set_Document(DocumentDescription value);
    internal bool IsSetDocument();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeEffectiveInstanceAssociationsPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeEffectiveInstanceAssociationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeEffectiveInstanceAssociationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstanceAssociation> Associations { get; }
    internal DescribeEffectiveInstanceAssociationsPaginator(IAmazonSimpleSystemsManagement client, DescribeEffectiveInstanceAssociationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeEffectiveInstanceAssociationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<InstanceAssociation> get_Associations();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeEffectiveInstanceAssociationsPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeEffectiveInstanceAssociationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeEffectiveInstanceAssociationsResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeEffectiveInstanceAssociationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeEffectiveInstanceAssociationsRequest : AmazonSimpleSystemsManagementRequest {
    private string _instanceId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeEffectiveInstanceAssociationsResponse : AmazonWebServiceResponse {
    private List`1<InstanceAssociation> _associations;
    private string _nextToken;
    public List`1<InstanceAssociation> Associations { get; public set; }
    public string NextToken { get; public set; }
    public List`1<InstanceAssociation> get_Associations();
    public void set_Associations(List`1<InstanceAssociation> value);
    internal bool IsSetAssociations();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeEffectivePatchesForPatchBaselinePaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeEffectivePatchesForPatchBaselineRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeEffectivePatchesForPatchBaselineResponse> Responses { get; }
    public IPaginatedEnumerable`1<EffectivePatch> EffectivePatches { get; }
    internal DescribeEffectivePatchesForPatchBaselinePaginator(IAmazonSimpleSystemsManagement client, DescribeEffectivePatchesForPatchBaselineRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeEffectivePatchesForPatchBaselineResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<EffectivePatch> get_EffectivePatches();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeEffectivePatchesForPatchBaselinePaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeEffectivePatchesForPatchBaselineResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeEffectivePatchesForPatchBaselineResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeEffectivePatchesForPatchBaselineResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeEffectivePatchesForPatchBaselineRequest : AmazonSimpleSystemsManagementRequest {
    private string _baselineId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string BaselineId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_BaselineId();
    public void set_BaselineId(string value);
    internal bool IsSetBaselineId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeEffectivePatchesForPatchBaselineResponse : AmazonWebServiceResponse {
    private List`1<EffectivePatch> _effectivePatches;
    private string _nextToken;
    public List`1<EffectivePatch> EffectivePatches { get; public set; }
    public string NextToken { get; public set; }
    public List`1<EffectivePatch> get_EffectivePatches();
    public void set_EffectivePatches(List`1<EffectivePatch> value);
    internal bool IsSetEffectivePatches();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeInstanceAssociationsStatusPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeInstanceAssociationsStatusRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeInstanceAssociationsStatusResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstanceAssociationStatusInfo> InstanceAssociationStatusInfos { get; }
    internal DescribeInstanceAssociationsStatusPaginator(IAmazonSimpleSystemsManagement client, DescribeInstanceAssociationsStatusRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeInstanceAssociationsStatusResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<InstanceAssociationStatusInfo> get_InstanceAssociationStatusInfos();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeInstanceAssociationsStatusPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeInstanceAssociationsStatusResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeInstanceAssociationsStatusResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeInstanceAssociationsStatusResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeInstanceAssociationsStatusRequest : AmazonSimpleSystemsManagementRequest {
    private string _instanceId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeInstanceAssociationsStatusResponse : AmazonWebServiceResponse {
    private List`1<InstanceAssociationStatusInfo> _instanceAssociationStatusInfos;
    private string _nextToken;
    public List`1<InstanceAssociationStatusInfo> InstanceAssociationStatusInfos { get; public set; }
    public string NextToken { get; public set; }
    public List`1<InstanceAssociationStatusInfo> get_InstanceAssociationStatusInfos();
    public void set_InstanceAssociationStatusInfos(List`1<InstanceAssociationStatusInfo> value);
    internal bool IsSetInstanceAssociationStatusInfos();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeInstanceInformationPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeInstanceInformationRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeInstanceInformationResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstanceInformation> InstanceInformationList { get; }
    internal DescribeInstanceInformationPaginator(IAmazonSimpleSystemsManagement client, DescribeInstanceInformationRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeInstanceInformationResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<InstanceInformation> get_InstanceInformationList();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeInstanceInformationPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeInstanceInformationResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeInstanceInformationResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeInstanceInformationResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeInstanceInformationRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<InstanceInformationStringFilter> _filters;
    private List`1<InstanceInformationFilter> _instanceInformationFilterList;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<InstanceInformationStringFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public List`1<InstanceInformationFilter> InstanceInformationFilterList { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<InstanceInformationStringFilter> get_Filters();
    public void set_Filters(List`1<InstanceInformationStringFilter> value);
    internal bool IsSetFilters();
    public List`1<InstanceInformationFilter> get_InstanceInformationFilterList();
    public void set_InstanceInformationFilterList(List`1<InstanceInformationFilter> value);
    internal bool IsSetInstanceInformationFilterList();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeInstanceInformationResponse : AmazonWebServiceResponse {
    private List`1<InstanceInformation> _instanceInformationList;
    private string _nextToken;
    public List`1<InstanceInformation> InstanceInformationList { get; public set; }
    public string NextToken { get; public set; }
    public List`1<InstanceInformation> get_InstanceInformationList();
    public void set_InstanceInformationList(List`1<InstanceInformation> value);
    internal bool IsSetInstanceInformationList();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeInstancePatchesPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeInstancePatchesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeInstancePatchesResponse> Responses { get; }
    public IPaginatedEnumerable`1<PatchComplianceData> Patches { get; }
    internal DescribeInstancePatchesPaginator(IAmazonSimpleSystemsManagement client, DescribeInstancePatchesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeInstancePatchesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<PatchComplianceData> get_Patches();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeInstancePatchesPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeInstancePatchesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeInstancePatchesResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeInstancePatchesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeInstancePatchesRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<PatchOrchestratorFilter> _filters;
    private string _instanceId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<PatchOrchestratorFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<PatchOrchestratorFilter> get_Filters();
    public void set_Filters(List`1<PatchOrchestratorFilter> value);
    internal bool IsSetFilters();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeInstancePatchesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<PatchComplianceData> _patches;
    public string NextToken { get; public set; }
    public List`1<PatchComplianceData> Patches { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<PatchComplianceData> get_Patches();
    public void set_Patches(List`1<PatchComplianceData> value);
    internal bool IsSetPatches();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeInstancePatchStatesForPatchGroupPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeInstancePatchStatesForPatchGroupRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeInstancePatchStatesForPatchGroupResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstancePatchState> InstancePatchStates { get; }
    internal DescribeInstancePatchStatesForPatchGroupPaginator(IAmazonSimpleSystemsManagement client, DescribeInstancePatchStatesForPatchGroupRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeInstancePatchStatesForPatchGroupResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<InstancePatchState> get_InstancePatchStates();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeInstancePatchStatesForPatchGroupPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeInstancePatchStatesForPatchGroupResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeInstancePatchStatesForPatchGroupResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeInstancePatchStatesForPatchGroupResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeInstancePatchStatesForPatchGroupRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<InstancePatchStateFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _patchGroup;
    [AWSPropertyAttribute]
public List`1<InstancePatchStateFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string PatchGroup { get; public set; }
    public List`1<InstancePatchStateFilter> get_Filters();
    public void set_Filters(List`1<InstancePatchStateFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_PatchGroup();
    public void set_PatchGroup(string value);
    internal bool IsSetPatchGroup();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeInstancePatchStatesForPatchGroupResponse : AmazonWebServiceResponse {
    private List`1<InstancePatchState> _instancePatchStates;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<InstancePatchState> InstancePatchStates { get; public set; }
    public string NextToken { get; public set; }
    public List`1<InstancePatchState> get_InstancePatchStates();
    public void set_InstancePatchStates(List`1<InstancePatchState> value);
    internal bool IsSetInstancePatchStates();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeInstancePatchStatesPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeInstancePatchStatesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeInstancePatchStatesResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstancePatchState> InstancePatchStates { get; }
    internal DescribeInstancePatchStatesPaginator(IAmazonSimpleSystemsManagement client, DescribeInstancePatchStatesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeInstancePatchStatesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<InstancePatchState> get_InstancePatchStates();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeInstancePatchStatesPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeInstancePatchStatesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeInstancePatchStatesResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeInstancePatchStatesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeInstancePatchStatesRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<string> _instanceIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<string> InstanceIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeInstancePatchStatesResponse : AmazonWebServiceResponse {
    private List`1<InstancePatchState> _instancePatchStates;
    private string _nextToken;
    public List`1<InstancePatchState> InstancePatchStates { get; public set; }
    public string NextToken { get; public set; }
    public List`1<InstancePatchState> get_InstancePatchStates();
    public void set_InstancePatchStates(List`1<InstancePatchState> value);
    internal bool IsSetInstancePatchStates();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeInstancePropertiesPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeInstancePropertiesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeInstancePropertiesResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstanceProperty> InstanceProperties { get; }
    internal DescribeInstancePropertiesPaginator(IAmazonSimpleSystemsManagement client, DescribeInstancePropertiesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeInstancePropertiesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<InstanceProperty> get_InstanceProperties();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeInstancePropertiesPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeInstancePropertiesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeInstancePropertiesResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeInstancePropertiesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeInstancePropertiesRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<InstancePropertyStringFilter> _filtersWithOperator;
    private List`1<InstancePropertyFilter> _instancePropertyFilterList;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<InstancePropertyStringFilter> FiltersWithOperator { get; public set; }
    [AWSPropertyAttribute]
public List`1<InstancePropertyFilter> InstancePropertyFilterList { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<InstancePropertyStringFilter> get_FiltersWithOperator();
    public void set_FiltersWithOperator(List`1<InstancePropertyStringFilter> value);
    internal bool IsSetFiltersWithOperator();
    public List`1<InstancePropertyFilter> get_InstancePropertyFilterList();
    public void set_InstancePropertyFilterList(List`1<InstancePropertyFilter> value);
    internal bool IsSetInstancePropertyFilterList();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeInstancePropertiesResponse : AmazonWebServiceResponse {
    private List`1<InstanceProperty> _instanceProperties;
    private string _nextToken;
    public List`1<InstanceProperty> InstanceProperties { get; public set; }
    public string NextToken { get; public set; }
    public List`1<InstanceProperty> get_InstanceProperties();
    public void set_InstanceProperties(List`1<InstanceProperty> value);
    internal bool IsSetInstanceProperties();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeInventoryDeletionsPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeInventoryDeletionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeInventoryDeletionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<InventoryDeletionStatusItem> InventoryDeletions { get; }
    internal DescribeInventoryDeletionsPaginator(IAmazonSimpleSystemsManagement client, DescribeInventoryDeletionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeInventoryDeletionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<InventoryDeletionStatusItem> get_InventoryDeletions();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeInventoryDeletionsPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeInventoryDeletionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeInventoryDeletionsResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeInventoryDeletionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeInventoryDeletionsRequest : AmazonSimpleSystemsManagementRequest {
    private string _deletionId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public string DeletionId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_DeletionId();
    public void set_DeletionId(string value);
    internal bool IsSetDeletionId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeInventoryDeletionsResponse : AmazonWebServiceResponse {
    private List`1<InventoryDeletionStatusItem> _inventoryDeletions;
    private string _nextToken;
    public List`1<InventoryDeletionStatusItem> InventoryDeletions { get; public set; }
    public string NextToken { get; public set; }
    public List`1<InventoryDeletionStatusItem> get_InventoryDeletions();
    public void set_InventoryDeletions(List`1<InventoryDeletionStatusItem> value);
    internal bool IsSetInventoryDeletions();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowExecutionsPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeMaintenanceWindowExecutionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeMaintenanceWindowExecutionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<MaintenanceWindowExecution> WindowExecutions { get; }
    internal DescribeMaintenanceWindowExecutionsPaginator(IAmazonSimpleSystemsManagement client, DescribeMaintenanceWindowExecutionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeMaintenanceWindowExecutionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<MaintenanceWindowExecution> get_WindowExecutions();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowExecutionsPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeMaintenanceWindowExecutionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeMaintenanceWindowExecutionsResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowExecutionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowExecutionsRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<MaintenanceWindowFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _windowId;
    [AWSPropertyAttribute]
public List`1<MaintenanceWindowFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    public List`1<MaintenanceWindowFilter> get_Filters();
    public void set_Filters(List`1<MaintenanceWindowFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowExecutionsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<MaintenanceWindowExecution> _windowExecutions;
    public string NextToken { get; public set; }
    public List`1<MaintenanceWindowExecution> WindowExecutions { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<MaintenanceWindowExecution> get_WindowExecutions();
    public void set_WindowExecutions(List`1<MaintenanceWindowExecution> value);
    internal bool IsSetWindowExecutions();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowExecutionTaskInvocationsPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeMaintenanceWindowExecutionTaskInvocationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeMaintenanceWindowExecutionTaskInvocationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<MaintenanceWindowExecutionTaskInvocationIdentity> WindowExecutionTaskInvocationIdentities { get; }
    internal DescribeMaintenanceWindowExecutionTaskInvocationsPaginator(IAmazonSimpleSystemsManagement client, DescribeMaintenanceWindowExecutionTaskInvocationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeMaintenanceWindowExecutionTaskInvocationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<MaintenanceWindowExecutionTaskInvocationIdentity> get_WindowExecutionTaskInvocationIdentities();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowExecutionTaskInvocationsPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeMaintenanceWindowExecutionTaskInvocationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeMaintenanceWindowExecutionTaskInvocationsResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowExecutionTaskInvocationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowExecutionTaskInvocationsRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<MaintenanceWindowFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _taskId;
    private string _windowExecutionId;
    [AWSPropertyAttribute]
public List`1<MaintenanceWindowFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string TaskId { get; public set; }
    [AWSPropertyAttribute]
public string WindowExecutionId { get; public set; }
    public List`1<MaintenanceWindowFilter> get_Filters();
    public void set_Filters(List`1<MaintenanceWindowFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_TaskId();
    public void set_TaskId(string value);
    internal bool IsSetTaskId();
    public string get_WindowExecutionId();
    public void set_WindowExecutionId(string value);
    internal bool IsSetWindowExecutionId();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowExecutionTaskInvocationsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<MaintenanceWindowExecutionTaskInvocationIdentity> _windowExecutionTaskInvocationIdentities;
    public string NextToken { get; public set; }
    public List`1<MaintenanceWindowExecutionTaskInvocationIdentity> WindowExecutionTaskInvocationIdentities { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<MaintenanceWindowExecutionTaskInvocationIdentity> get_WindowExecutionTaskInvocationIdentities();
    public void set_WindowExecutionTaskInvocationIdentities(List`1<MaintenanceWindowExecutionTaskInvocationIdentity> value);
    internal bool IsSetWindowExecutionTaskInvocationIdentities();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowExecutionTasksPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeMaintenanceWindowExecutionTasksRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeMaintenanceWindowExecutionTasksResponse> Responses { get; }
    public IPaginatedEnumerable`1<MaintenanceWindowExecutionTaskIdentity> WindowExecutionTaskIdentities { get; }
    internal DescribeMaintenanceWindowExecutionTasksPaginator(IAmazonSimpleSystemsManagement client, DescribeMaintenanceWindowExecutionTasksRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeMaintenanceWindowExecutionTasksResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<MaintenanceWindowExecutionTaskIdentity> get_WindowExecutionTaskIdentities();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowExecutionTasksPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeMaintenanceWindowExecutionTasksResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeMaintenanceWindowExecutionTasksResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowExecutionTasksResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowExecutionTasksRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<MaintenanceWindowFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _windowExecutionId;
    [AWSPropertyAttribute]
public List`1<MaintenanceWindowFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string WindowExecutionId { get; public set; }
    public List`1<MaintenanceWindowFilter> get_Filters();
    public void set_Filters(List`1<MaintenanceWindowFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_WindowExecutionId();
    public void set_WindowExecutionId(string value);
    internal bool IsSetWindowExecutionId();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowExecutionTasksResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<MaintenanceWindowExecutionTaskIdentity> _windowExecutionTaskIdentities;
    public string NextToken { get; public set; }
    public List`1<MaintenanceWindowExecutionTaskIdentity> WindowExecutionTaskIdentities { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<MaintenanceWindowExecutionTaskIdentity> get_WindowExecutionTaskIdentities();
    public void set_WindowExecutionTaskIdentities(List`1<MaintenanceWindowExecutionTaskIdentity> value);
    internal bool IsSetWindowExecutionTaskIdentities();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowSchedulePaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeMaintenanceWindowScheduleRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeMaintenanceWindowScheduleResponse> Responses { get; }
    public IPaginatedEnumerable`1<ScheduledWindowExecution> ScheduledWindowExecutions { get; }
    internal DescribeMaintenanceWindowSchedulePaginator(IAmazonSimpleSystemsManagement client, DescribeMaintenanceWindowScheduleRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeMaintenanceWindowScheduleResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ScheduledWindowExecution> get_ScheduledWindowExecutions();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowSchedulePaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeMaintenanceWindowScheduleResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeMaintenanceWindowScheduleResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowScheduleResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowScheduleRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<PatchOrchestratorFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private MaintenanceWindowResourceType _resourceType;
    private List`1<Target> _targets;
    private string _windowId;
    [AWSPropertyAttribute]
public List`1<PatchOrchestratorFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public MaintenanceWindowResourceType ResourceType { get; public set; }
    [AWSPropertyAttribute]
public List`1<Target> Targets { get; public set; }
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    public List`1<PatchOrchestratorFilter> get_Filters();
    public void set_Filters(List`1<PatchOrchestratorFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public MaintenanceWindowResourceType get_ResourceType();
    public void set_ResourceType(MaintenanceWindowResourceType value);
    internal bool IsSetResourceType();
    public List`1<Target> get_Targets();
    public void set_Targets(List`1<Target> value);
    internal bool IsSetTargets();
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowScheduleResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ScheduledWindowExecution> _scheduledWindowExecutions;
    public string NextToken { get; public set; }
    public List`1<ScheduledWindowExecution> ScheduledWindowExecutions { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ScheduledWindowExecution> get_ScheduledWindowExecutions();
    public void set_ScheduledWindowExecutions(List`1<ScheduledWindowExecution> value);
    internal bool IsSetScheduledWindowExecutions();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowsForTargetPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeMaintenanceWindowsForTargetRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeMaintenanceWindowsForTargetResponse> Responses { get; }
    public IPaginatedEnumerable`1<MaintenanceWindowIdentityForTarget> WindowIdentities { get; }
    internal DescribeMaintenanceWindowsForTargetPaginator(IAmazonSimpleSystemsManagement client, DescribeMaintenanceWindowsForTargetRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeMaintenanceWindowsForTargetResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<MaintenanceWindowIdentityForTarget> get_WindowIdentities();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowsForTargetPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeMaintenanceWindowsForTargetResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeMaintenanceWindowsForTargetResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowsForTargetResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowsForTargetRequest : AmazonSimpleSystemsManagementRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private MaintenanceWindowResourceType _resourceType;
    private List`1<Target> _targets;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public MaintenanceWindowResourceType ResourceType { get; public set; }
    [AWSPropertyAttribute]
public List`1<Target> Targets { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public MaintenanceWindowResourceType get_ResourceType();
    public void set_ResourceType(MaintenanceWindowResourceType value);
    internal bool IsSetResourceType();
    public List`1<Target> get_Targets();
    public void set_Targets(List`1<Target> value);
    internal bool IsSetTargets();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowsForTargetResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<MaintenanceWindowIdentityForTarget> _windowIdentities;
    public string NextToken { get; public set; }
    public List`1<MaintenanceWindowIdentityForTarget> WindowIdentities { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<MaintenanceWindowIdentityForTarget> get_WindowIdentities();
    public void set_WindowIdentities(List`1<MaintenanceWindowIdentityForTarget> value);
    internal bool IsSetWindowIdentities();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowsPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeMaintenanceWindowsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeMaintenanceWindowsResponse> Responses { get; }
    public IPaginatedEnumerable`1<MaintenanceWindowIdentity> WindowIdentities { get; }
    internal DescribeMaintenanceWindowsPaginator(IAmazonSimpleSystemsManagement client, DescribeMaintenanceWindowsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeMaintenanceWindowsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<MaintenanceWindowIdentity> get_WindowIdentities();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowsPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeMaintenanceWindowsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeMaintenanceWindowsResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowsRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<MaintenanceWindowFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<MaintenanceWindowFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<MaintenanceWindowFilter> get_Filters();
    public void set_Filters(List`1<MaintenanceWindowFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<MaintenanceWindowIdentity> _windowIdentities;
    public string NextToken { get; public set; }
    public List`1<MaintenanceWindowIdentity> WindowIdentities { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<MaintenanceWindowIdentity> get_WindowIdentities();
    public void set_WindowIdentities(List`1<MaintenanceWindowIdentity> value);
    internal bool IsSetWindowIdentities();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowTargetsPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeMaintenanceWindowTargetsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeMaintenanceWindowTargetsResponse> Responses { get; }
    public IPaginatedEnumerable`1<MaintenanceWindowTarget> Targets { get; }
    internal DescribeMaintenanceWindowTargetsPaginator(IAmazonSimpleSystemsManagement client, DescribeMaintenanceWindowTargetsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeMaintenanceWindowTargetsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<MaintenanceWindowTarget> get_Targets();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowTargetsPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeMaintenanceWindowTargetsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeMaintenanceWindowTargetsResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowTargetsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowTargetsRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<MaintenanceWindowFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _windowId;
    [AWSPropertyAttribute]
public List`1<MaintenanceWindowFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    public List`1<MaintenanceWindowFilter> get_Filters();
    public void set_Filters(List`1<MaintenanceWindowFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowTargetsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<MaintenanceWindowTarget> _targets;
    public string NextToken { get; public set; }
    public List`1<MaintenanceWindowTarget> Targets { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<MaintenanceWindowTarget> get_Targets();
    public void set_Targets(List`1<MaintenanceWindowTarget> value);
    internal bool IsSetTargets();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowTasksPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeMaintenanceWindowTasksRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeMaintenanceWindowTasksResponse> Responses { get; }
    public IPaginatedEnumerable`1<MaintenanceWindowTask> Tasks { get; }
    internal DescribeMaintenanceWindowTasksPaginator(IAmazonSimpleSystemsManagement client, DescribeMaintenanceWindowTasksRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeMaintenanceWindowTasksResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<MaintenanceWindowTask> get_Tasks();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowTasksPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeMaintenanceWindowTasksResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeMaintenanceWindowTasksResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowTasksResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowTasksRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<MaintenanceWindowFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _windowId;
    [AWSPropertyAttribute]
public List`1<MaintenanceWindowFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    public List`1<MaintenanceWindowFilter> get_Filters();
    public void set_Filters(List`1<MaintenanceWindowFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeMaintenanceWindowTasksResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<MaintenanceWindowTask> _tasks;
    public string NextToken { get; public set; }
    public List`1<MaintenanceWindowTask> Tasks { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<MaintenanceWindowTask> get_Tasks();
    public void set_Tasks(List`1<MaintenanceWindowTask> value);
    internal bool IsSetTasks();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeOpsItemsPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeOpsItemsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeOpsItemsResponse> Responses { get; }
    public IPaginatedEnumerable`1<OpsItemSummary> OpsItemSummaries { get; }
    internal DescribeOpsItemsPaginator(IAmazonSimpleSystemsManagement client, DescribeOpsItemsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeOpsItemsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<OpsItemSummary> get_OpsItemSummaries();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeOpsItemsPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeOpsItemsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeOpsItemsResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeOpsItemsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeOpsItemsRequest : AmazonSimpleSystemsManagementRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<OpsItemFilter> _opsItemFilters;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<OpsItemFilter> OpsItemFilters { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<OpsItemFilter> get_OpsItemFilters();
    public void set_OpsItemFilters(List`1<OpsItemFilter> value);
    internal bool IsSetOpsItemFilters();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeOpsItemsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<OpsItemSummary> _opsItemSummaries;
    public string NextToken { get; public set; }
    public List`1<OpsItemSummary> OpsItemSummaries { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<OpsItemSummary> get_OpsItemSummaries();
    public void set_OpsItemSummaries(List`1<OpsItemSummary> value);
    internal bool IsSetOpsItemSummaries();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeParametersPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeParametersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeParametersResponse> Responses { get; }
    internal DescribeParametersPaginator(IAmazonSimpleSystemsManagement client, DescribeParametersRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeParametersResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeParametersPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeParametersResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeParametersResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeParametersResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeParametersRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<ParametersFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<ParameterStringFilter> _parameterFilters;
    private Nullable`1<bool> _shared;
    public List`1<ParametersFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ParameterStringFilter> ParameterFilters { get; public set; }
    public Nullable`1<bool> Shared { get; public set; }
    public List`1<ParametersFilter> get_Filters();
    public void set_Filters(List`1<ParametersFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ParameterStringFilter> get_ParameterFilters();
    public void set_ParameterFilters(List`1<ParameterStringFilter> value);
    internal bool IsSetParameterFilters();
    public Nullable`1<bool> get_Shared();
    public void set_Shared(Nullable`1<bool> value);
    internal bool IsSetShared();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeParametersResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ParameterMetadata> _parameters;
    public string NextToken { get; public set; }
    public List`1<ParameterMetadata> Parameters { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ParameterMetadata> get_Parameters();
    public void set_Parameters(List`1<ParameterMetadata> value);
    internal bool IsSetParameters();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribePatchBaselinesPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribePatchBaselinesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribePatchBaselinesResponse> Responses { get; }
    public IPaginatedEnumerable`1<PatchBaselineIdentity> BaselineIdentities { get; }
    internal DescribePatchBaselinesPaginator(IAmazonSimpleSystemsManagement client, DescribePatchBaselinesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribePatchBaselinesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<PatchBaselineIdentity> get_BaselineIdentities();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribePatchBaselinesPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribePatchBaselinesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribePatchBaselinesResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribePatchBaselinesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribePatchBaselinesRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<PatchOrchestratorFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<PatchOrchestratorFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<PatchOrchestratorFilter> get_Filters();
    public void set_Filters(List`1<PatchOrchestratorFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.DescribePatchBaselinesResponse : AmazonWebServiceResponse {
    private List`1<PatchBaselineIdentity> _baselineIdentities;
    private string _nextToken;
    public List`1<PatchBaselineIdentity> BaselineIdentities { get; public set; }
    public string NextToken { get; public set; }
    public List`1<PatchBaselineIdentity> get_BaselineIdentities();
    public void set_BaselineIdentities(List`1<PatchBaselineIdentity> value);
    internal bool IsSetBaselineIdentities();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribePatchGroupsPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribePatchGroupsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribePatchGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<PatchGroupPatchBaselineMapping> Mappings { get; }
    internal DescribePatchGroupsPaginator(IAmazonSimpleSystemsManagement client, DescribePatchGroupsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribePatchGroupsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<PatchGroupPatchBaselineMapping> get_Mappings();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribePatchGroupsPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribePatchGroupsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribePatchGroupsResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribePatchGroupsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribePatchGroupsRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<PatchOrchestratorFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<PatchOrchestratorFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<PatchOrchestratorFilter> get_Filters();
    public void set_Filters(List`1<PatchOrchestratorFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.DescribePatchGroupsResponse : AmazonWebServiceResponse {
    private List`1<PatchGroupPatchBaselineMapping> _mappings;
    private string _nextToken;
    public List`1<PatchGroupPatchBaselineMapping> Mappings { get; public set; }
    public string NextToken { get; public set; }
    public List`1<PatchGroupPatchBaselineMapping> get_Mappings();
    public void set_Mappings(List`1<PatchGroupPatchBaselineMapping> value);
    internal bool IsSetMappings();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.DescribePatchGroupStateRequest : AmazonSimpleSystemsManagementRequest {
    private string _patchGroup;
    [AWSPropertyAttribute]
public string PatchGroup { get; public set; }
    public string get_PatchGroup();
    public void set_PatchGroup(string value);
    internal bool IsSetPatchGroup();
}
public class Amazon.SimpleSystemsManagement.Model.DescribePatchGroupStateResponse : AmazonWebServiceResponse {
    private Nullable`1<int> _instances;
    private Nullable`1<int> _instancesWithCriticalNonCompliantPatches;
    private Nullable`1<int> _instancesWithFailedPatches;
    private Nullable`1<int> _instancesWithInstalledOtherPatches;
    private Nullable`1<int> _instancesWithInstalledPatches;
    private Nullable`1<int> _instancesWithInstalledPendingRebootPatches;
    private Nullable`1<int> _instancesWithInstalledRejectedPatches;
    private Nullable`1<int> _instancesWithMissingPatches;
    private Nullable`1<int> _instancesWithNotApplicablePatches;
    private Nullable`1<int> _instancesWithOtherNonCompliantPatches;
    private Nullable`1<int> _instancesWithSecurityNonCompliantPatches;
    private Nullable`1<int> _instancesWithUnreportedNotApplicablePatches;
    public Nullable`1<int> Instances { get; public set; }
    public Nullable`1<int> InstancesWithCriticalNonCompliantPatches { get; public set; }
    public Nullable`1<int> InstancesWithFailedPatches { get; public set; }
    public Nullable`1<int> InstancesWithInstalledOtherPatches { get; public set; }
    public Nullable`1<int> InstancesWithInstalledPatches { get; public set; }
    public Nullable`1<int> InstancesWithInstalledPendingRebootPatches { get; public set; }
    public Nullable`1<int> InstancesWithInstalledRejectedPatches { get; public set; }
    public Nullable`1<int> InstancesWithMissingPatches { get; public set; }
    public Nullable`1<int> InstancesWithNotApplicablePatches { get; public set; }
    public Nullable`1<int> InstancesWithOtherNonCompliantPatches { get; public set; }
    public Nullable`1<int> InstancesWithSecurityNonCompliantPatches { get; public set; }
    public Nullable`1<int> InstancesWithUnreportedNotApplicablePatches { get; public set; }
    public Nullable`1<int> get_Instances();
    public void set_Instances(Nullable`1<int> value);
    internal bool IsSetInstances();
    public Nullable`1<int> get_InstancesWithCriticalNonCompliantPatches();
    public void set_InstancesWithCriticalNonCompliantPatches(Nullable`1<int> value);
    internal bool IsSetInstancesWithCriticalNonCompliantPatches();
    public Nullable`1<int> get_InstancesWithFailedPatches();
    public void set_InstancesWithFailedPatches(Nullable`1<int> value);
    internal bool IsSetInstancesWithFailedPatches();
    public Nullable`1<int> get_InstancesWithInstalledOtherPatches();
    public void set_InstancesWithInstalledOtherPatches(Nullable`1<int> value);
    internal bool IsSetInstancesWithInstalledOtherPatches();
    public Nullable`1<int> get_InstancesWithInstalledPatches();
    public void set_InstancesWithInstalledPatches(Nullable`1<int> value);
    internal bool IsSetInstancesWithInstalledPatches();
    public Nullable`1<int> get_InstancesWithInstalledPendingRebootPatches();
    public void set_InstancesWithInstalledPendingRebootPatches(Nullable`1<int> value);
    internal bool IsSetInstancesWithInstalledPendingRebootPatches();
    public Nullable`1<int> get_InstancesWithInstalledRejectedPatches();
    public void set_InstancesWithInstalledRejectedPatches(Nullable`1<int> value);
    internal bool IsSetInstancesWithInstalledRejectedPatches();
    public Nullable`1<int> get_InstancesWithMissingPatches();
    public void set_InstancesWithMissingPatches(Nullable`1<int> value);
    internal bool IsSetInstancesWithMissingPatches();
    public Nullable`1<int> get_InstancesWithNotApplicablePatches();
    public void set_InstancesWithNotApplicablePatches(Nullable`1<int> value);
    internal bool IsSetInstancesWithNotApplicablePatches();
    public Nullable`1<int> get_InstancesWithOtherNonCompliantPatches();
    public void set_InstancesWithOtherNonCompliantPatches(Nullable`1<int> value);
    internal bool IsSetInstancesWithOtherNonCompliantPatches();
    public Nullable`1<int> get_InstancesWithSecurityNonCompliantPatches();
    public void set_InstancesWithSecurityNonCompliantPatches(Nullable`1<int> value);
    internal bool IsSetInstancesWithSecurityNonCompliantPatches();
    public Nullable`1<int> get_InstancesWithUnreportedNotApplicablePatches();
    public void set_InstancesWithUnreportedNotApplicablePatches(Nullable`1<int> value);
    internal bool IsSetInstancesWithUnreportedNotApplicablePatches();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribePatchPropertiesPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribePatchPropertiesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribePatchPropertiesResponse> Responses { get; }
    internal DescribePatchPropertiesPaginator(IAmazonSimpleSystemsManagement client, DescribePatchPropertiesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribePatchPropertiesResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribePatchPropertiesPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribePatchPropertiesResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribePatchPropertiesResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribePatchPropertiesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribePatchPropertiesRequest : AmazonSimpleSystemsManagementRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private OperatingSystem _operatingSystem;
    private PatchSet _patchSet;
    private PatchProperty _property;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public OperatingSystem OperatingSystem { get; public set; }
    public PatchSet PatchSet { get; public set; }
    [AWSPropertyAttribute]
public PatchProperty Property { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public OperatingSystem get_OperatingSystem();
    public void set_OperatingSystem(OperatingSystem value);
    internal bool IsSetOperatingSystem();
    public PatchSet get_PatchSet();
    public void set_PatchSet(PatchSet value);
    internal bool IsSetPatchSet();
    public PatchProperty get_Property();
    public void set_Property(PatchProperty value);
    internal bool IsSetProperty();
}
public class Amazon.SimpleSystemsManagement.Model.DescribePatchPropertiesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Dictionary`2<string, string>> _properties;
    public string NextToken { get; public set; }
    public List`1<Dictionary`2<string, string>> Properties { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Dictionary`2<string, string>> get_Properties();
    public void set_Properties(List`1<Dictionary`2<string, string>> value);
    internal bool IsSetProperties();
}
internal class Amazon.SimpleSystemsManagement.Model.DescribeSessionsPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private DescribeSessionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeSessionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Session> Sessions { get; }
    internal DescribeSessionsPaginator(IAmazonSimpleSystemsManagement client, DescribeSessionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeSessionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Session> get_Sessions();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.DescribeSessionsPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-DescribeSessionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeSessionsResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.DescribeSessionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.DescribeSessionsRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<SessionFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private SessionState _state;
    [AWSPropertyAttribute]
public List`1<SessionFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public SessionState State { get; public set; }
    public List`1<SessionFilter> get_Filters();
    public void set_Filters(List`1<SessionFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public SessionState get_State();
    public void set_State(SessionState value);
    internal bool IsSetState();
}
public class Amazon.SimpleSystemsManagement.Model.DescribeSessionsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Session> _sessions;
    public string NextToken { get; public set; }
    public List`1<Session> Sessions { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Session> get_Sessions();
    public void set_Sessions(List`1<Session> value);
    internal bool IsSetSessions();
}
public class Amazon.SimpleSystemsManagement.Model.DisassociateOpsItemRelatedItemRequest : AmazonSimpleSystemsManagementRequest {
    private string _associationId;
    private string _opsItemId;
    [AWSPropertyAttribute]
public string AssociationId { get; public set; }
    [AWSPropertyAttribute]
public string OpsItemId { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_OpsItemId();
    public void set_OpsItemId(string value);
    internal bool IsSetOpsItemId();
}
public class Amazon.SimpleSystemsManagement.Model.DisassociateOpsItemRelatedItemResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleSystemsManagement.Model.DocumentAlreadyExistsException : AmazonSimpleSystemsManagementException {
    public DocumentAlreadyExistsException(string message);
    public DocumentAlreadyExistsException(string message, Exception innerException);
    public DocumentAlreadyExistsException(Exception innerException);
    public DocumentAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DocumentAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.DocumentDefaultVersionDescription : object {
    private string _defaultVersion;
    private string _defaultVersionName;
    private string _name;
    public string DefaultVersion { get; public set; }
    public string DefaultVersionName { get; public set; }
    public string Name { get; public set; }
    public string get_DefaultVersion();
    public void set_DefaultVersion(string value);
    internal bool IsSetDefaultVersion();
    public string get_DefaultVersionName();
    public void set_DefaultVersionName(string value);
    internal bool IsSetDefaultVersionName();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleSystemsManagement.Model.DocumentDescription : object {
    private string _approvedVersion;
    private List`1<AttachmentInformation> _attachmentsInformation;
    private string _author;
    private List`1<string> _category;
    private List`1<string> _categoryEnum;
    private Nullable`1<DateTime> _createdDate;
    private string _defaultVersion;
    private string _description;
    private string _displayName;
    private DocumentFormat _documentFormat;
    private DocumentType _documentType;
    private string _documentVersion;
    private string _hash;
    private DocumentHashType _hashType;
    private string _latestVersion;
    private string _name;
    private string _owner;
    private List`1<DocumentParameter> _parameters;
    private string _pendingReviewVersion;
    private List`1<string> _platformTypes;
    private List`1<DocumentRequires> _requires;
    private List`1<ReviewInformation> _reviewInformation;
    private ReviewStatus _reviewStatus;
    private string _schemaVersion;
    private string _sha1;
    private DocumentStatus _status;
    private string _statusInformation;
    private List`1<Tag> _tags;
    private string _targetType;
    private string _versionName;
    public string ApprovedVersion { get; public set; }
    public List`1<AttachmentInformation> AttachmentsInformation { get; public set; }
    public string Author { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Category { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> CategoryEnum { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public string DefaultVersion { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string DisplayName { get; public set; }
    public DocumentFormat DocumentFormat { get; public set; }
    public DocumentType DocumentType { get; public set; }
    public string DocumentVersion { get; public set; }
    [AWSPropertyAttribute]
public string Hash { get; public set; }
    public DocumentHashType HashType { get; public set; }
    public string LatestVersion { get; public set; }
    public string Name { get; public set; }
    public string Owner { get; public set; }
    public List`1<DocumentParameter> Parameters { get; public set; }
    public string PendingReviewVersion { get; public set; }
    public List`1<string> PlatformTypes { get; public set; }
    [AWSPropertyAttribute]
public List`1<DocumentRequires> Requires { get; public set; }
    [AWSPropertyAttribute]
public List`1<ReviewInformation> ReviewInformation { get; public set; }
    public ReviewStatus ReviewStatus { get; public set; }
    public string SchemaVersion { get; public set; }
    public string Sha1 { get; public set; }
    public DocumentStatus Status { get; public set; }
    public string StatusInformation { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TargetType { get; public set; }
    public string VersionName { get; public set; }
    public string get_ApprovedVersion();
    public void set_ApprovedVersion(string value);
    internal bool IsSetApprovedVersion();
    public List`1<AttachmentInformation> get_AttachmentsInformation();
    public void set_AttachmentsInformation(List`1<AttachmentInformation> value);
    internal bool IsSetAttachmentsInformation();
    public string get_Author();
    public void set_Author(string value);
    internal bool IsSetAuthor();
    public List`1<string> get_Category();
    public void set_Category(List`1<string> value);
    internal bool IsSetCategory();
    public List`1<string> get_CategoryEnum();
    public void set_CategoryEnum(List`1<string> value);
    internal bool IsSetCategoryEnum();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_DefaultVersion();
    public void set_DefaultVersion(string value);
    internal bool IsSetDefaultVersion();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_DisplayName();
    public void set_DisplayName(string value);
    internal bool IsSetDisplayName();
    public DocumentFormat get_DocumentFormat();
    public void set_DocumentFormat(DocumentFormat value);
    internal bool IsSetDocumentFormat();
    public DocumentType get_DocumentType();
    public void set_DocumentType(DocumentType value);
    internal bool IsSetDocumentType();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public string get_Hash();
    public void set_Hash(string value);
    internal bool IsSetHash();
    public DocumentHashType get_HashType();
    public void set_HashType(DocumentHashType value);
    internal bool IsSetHashType();
    public string get_LatestVersion();
    public void set_LatestVersion(string value);
    internal bool IsSetLatestVersion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Owner();
    public void set_Owner(string value);
    internal bool IsSetOwner();
    public List`1<DocumentParameter> get_Parameters();
    public void set_Parameters(List`1<DocumentParameter> value);
    internal bool IsSetParameters();
    public string get_PendingReviewVersion();
    public void set_PendingReviewVersion(string value);
    internal bool IsSetPendingReviewVersion();
    public List`1<string> get_PlatformTypes();
    public void set_PlatformTypes(List`1<string> value);
    internal bool IsSetPlatformTypes();
    public List`1<DocumentRequires> get_Requires();
    public void set_Requires(List`1<DocumentRequires> value);
    internal bool IsSetRequires();
    public List`1<ReviewInformation> get_ReviewInformation();
    public void set_ReviewInformation(List`1<ReviewInformation> value);
    internal bool IsSetReviewInformation();
    public ReviewStatus get_ReviewStatus();
    public void set_ReviewStatus(ReviewStatus value);
    internal bool IsSetReviewStatus();
    public string get_SchemaVersion();
    public void set_SchemaVersion(string value);
    internal bool IsSetSchemaVersion();
    public string get_Sha1();
    public void set_Sha1(string value);
    internal bool IsSetSha1();
    public DocumentStatus get_Status();
    public void set_Status(DocumentStatus value);
    internal bool IsSetStatus();
    public string get_StatusInformation();
    public void set_StatusInformation(string value);
    internal bool IsSetStatusInformation();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TargetType();
    public void set_TargetType(string value);
    internal bool IsSetTargetType();
    public string get_VersionName();
    public void set_VersionName(string value);
    internal bool IsSetVersionName();
}
public class Amazon.SimpleSystemsManagement.Model.DocumentFilter : object {
    private DocumentFilterKey _key;
    private string _value;
    [AWSPropertyAttribute]
public DocumentFilterKey Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public DocumentFilter(DocumentFilterKey key, string value);
    public DocumentFilterKey get_Key();
    public void set_Key(DocumentFilterKey value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.SimpleSystemsManagement.Model.DocumentIdentifier : object {
    private string _author;
    private Nullable`1<DateTime> _createdDate;
    private string _displayName;
    private DocumentFormat _documentFormat;
    private DocumentType _documentType;
    private string _documentVersion;
    private string _name;
    private string _owner;
    private List`1<string> _platformTypes;
    private List`1<DocumentRequires> _requires;
    private ReviewStatus _reviewStatus;
    private string _schemaVersion;
    private List`1<Tag> _tags;
    private string _targetType;
    private string _versionName;
    public string Author { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    [AWSPropertyAttribute]
public string DisplayName { get; public set; }
    public DocumentFormat DocumentFormat { get; public set; }
    public DocumentType DocumentType { get; public set; }
    public string DocumentVersion { get; public set; }
    public string Name { get; public set; }
    public string Owner { get; public set; }
    public List`1<string> PlatformTypes { get; public set; }
    [AWSPropertyAttribute]
public List`1<DocumentRequires> Requires { get; public set; }
    public ReviewStatus ReviewStatus { get; public set; }
    public string SchemaVersion { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TargetType { get; public set; }
    public string VersionName { get; public set; }
    public DocumentIdentifier(string name);
    public string get_Author();
    public void set_Author(string value);
    internal bool IsSetAuthor();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_DisplayName();
    public void set_DisplayName(string value);
    internal bool IsSetDisplayName();
    public DocumentFormat get_DocumentFormat();
    public void set_DocumentFormat(DocumentFormat value);
    internal bool IsSetDocumentFormat();
    public DocumentType get_DocumentType();
    public void set_DocumentType(DocumentType value);
    internal bool IsSetDocumentType();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Owner();
    public void set_Owner(string value);
    internal bool IsSetOwner();
    public List`1<string> get_PlatformTypes();
    public void set_PlatformTypes(List`1<string> value);
    internal bool IsSetPlatformTypes();
    public List`1<DocumentRequires> get_Requires();
    public void set_Requires(List`1<DocumentRequires> value);
    internal bool IsSetRequires();
    public ReviewStatus get_ReviewStatus();
    public void set_ReviewStatus(ReviewStatus value);
    internal bool IsSetReviewStatus();
    public string get_SchemaVersion();
    public void set_SchemaVersion(string value);
    internal bool IsSetSchemaVersion();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TargetType();
    public void set_TargetType(string value);
    internal bool IsSetTargetType();
    public string get_VersionName();
    public void set_VersionName(string value);
    internal bool IsSetVersionName();
}
public class Amazon.SimpleSystemsManagement.Model.DocumentKeyValuesFilter : object {
    private string _key;
    private List`1<string> _values;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    public List`1<string> Values { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.SimpleSystemsManagement.Model.DocumentLimitExceededException : AmazonSimpleSystemsManagementException {
    public DocumentLimitExceededException(string message);
    public DocumentLimitExceededException(string message, Exception innerException);
    public DocumentLimitExceededException(Exception innerException);
    public DocumentLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DocumentLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.DocumentMetadataResponseInfo : object {
    private List`1<DocumentReviewerResponseSource> _reviewerResponse;
    public List`1<DocumentReviewerResponseSource> ReviewerResponse { get; public set; }
    public List`1<DocumentReviewerResponseSource> get_ReviewerResponse();
    public void set_ReviewerResponse(List`1<DocumentReviewerResponseSource> value);
    internal bool IsSetReviewerResponse();
}
public class Amazon.SimpleSystemsManagement.Model.DocumentParameter : object {
    private string _defaultValue;
    private string _description;
    private string _name;
    private DocumentParameterType _type;
    public string DefaultValue { get; public set; }
    public string Description { get; public set; }
    public string Name { get; public set; }
    public DocumentParameterType Type { get; public set; }
    public string get_DefaultValue();
    public void set_DefaultValue(string value);
    internal bool IsSetDefaultValue();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public DocumentParameterType get_Type();
    public void set_Type(DocumentParameterType value);
    internal bool IsSetType();
}
public class Amazon.SimpleSystemsManagement.Model.DocumentPermissionLimitException : AmazonSimpleSystemsManagementException {
    public DocumentPermissionLimitException(string message);
    public DocumentPermissionLimitException(string message, Exception innerException);
    public DocumentPermissionLimitException(Exception innerException);
    public DocumentPermissionLimitException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DocumentPermissionLimitException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.DocumentRequires : object {
    private string _name;
    private string _requireType;
    private string _version;
    private string _versionName;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string RequireType { get; public set; }
    public string Version { get; public set; }
    public string VersionName { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RequireType();
    public void set_RequireType(string value);
    internal bool IsSetRequireType();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
    public string get_VersionName();
    public void set_VersionName(string value);
    internal bool IsSetVersionName();
}
public class Amazon.SimpleSystemsManagement.Model.DocumentReviewCommentSource : object {
    private string _content;
    private DocumentReviewCommentType _type;
    [AWSPropertyAttribute]
public string Content { get; public set; }
    public DocumentReviewCommentType Type { get; public set; }
    public string get_Content();
    public void set_Content(string value);
    internal bool IsSetContent();
    public DocumentReviewCommentType get_Type();
    public void set_Type(DocumentReviewCommentType value);
    internal bool IsSetType();
}
public class Amazon.SimpleSystemsManagement.Model.DocumentReviewerResponseSource : object {
    private List`1<DocumentReviewCommentSource> _comment;
    private Nullable`1<DateTime> _createTime;
    private string _reviewer;
    private ReviewStatus _reviewStatus;
    private Nullable`1<DateTime> _updatedTime;
    [AWSPropertyAttribute]
public List`1<DocumentReviewCommentSource> Comment { get; public set; }
    public Nullable`1<DateTime> CreateTime { get; public set; }
    [AWSPropertyAttribute]
public string Reviewer { get; public set; }
    public ReviewStatus ReviewStatus { get; public set; }
    public Nullable`1<DateTime> UpdatedTime { get; public set; }
    public List`1<DocumentReviewCommentSource> get_Comment();
    public void set_Comment(List`1<DocumentReviewCommentSource> value);
    internal bool IsSetComment();
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public string get_Reviewer();
    public void set_Reviewer(string value);
    internal bool IsSetReviewer();
    public ReviewStatus get_ReviewStatus();
    public void set_ReviewStatus(ReviewStatus value);
    internal bool IsSetReviewStatus();
    public Nullable`1<DateTime> get_UpdatedTime();
    public void set_UpdatedTime(Nullable`1<DateTime> value);
    internal bool IsSetUpdatedTime();
}
public class Amazon.SimpleSystemsManagement.Model.DocumentReviews : object {
    private DocumentReviewAction _action;
    private List`1<DocumentReviewCommentSource> _comment;
    [AWSPropertyAttribute]
public DocumentReviewAction Action { get; public set; }
    [AWSPropertyAttribute]
public List`1<DocumentReviewCommentSource> Comment { get; public set; }
    public DocumentReviewAction get_Action();
    public void set_Action(DocumentReviewAction value);
    internal bool IsSetAction();
    public List`1<DocumentReviewCommentSource> get_Comment();
    public void set_Comment(List`1<DocumentReviewCommentSource> value);
    internal bool IsSetComment();
}
public class Amazon.SimpleSystemsManagement.Model.DocumentVersionInfo : object {
    private Nullable`1<DateTime> _createdDate;
    private string _displayName;
    private DocumentFormat _documentFormat;
    private string _documentVersion;
    private Nullable`1<bool> _isDefaultVersion;
    private string _name;
    private ReviewStatus _reviewStatus;
    private DocumentStatus _status;
    private string _statusInformation;
    private string _versionName;
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    [AWSPropertyAttribute]
public string DisplayName { get; public set; }
    public DocumentFormat DocumentFormat { get; public set; }
    public string DocumentVersion { get; public set; }
    public Nullable`1<bool> IsDefaultVersion { get; public set; }
    public string Name { get; public set; }
    public ReviewStatus ReviewStatus { get; public set; }
    public DocumentStatus Status { get; public set; }
    public string StatusInformation { get; public set; }
    public string VersionName { get; public set; }
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_DisplayName();
    public void set_DisplayName(string value);
    internal bool IsSetDisplayName();
    public DocumentFormat get_DocumentFormat();
    public void set_DocumentFormat(DocumentFormat value);
    internal bool IsSetDocumentFormat();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public Nullable`1<bool> get_IsDefaultVersion();
    public void set_IsDefaultVersion(Nullable`1<bool> value);
    internal bool IsSetIsDefaultVersion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public ReviewStatus get_ReviewStatus();
    public void set_ReviewStatus(ReviewStatus value);
    internal bool IsSetReviewStatus();
    public DocumentStatus get_Status();
    public void set_Status(DocumentStatus value);
    internal bool IsSetStatus();
    public string get_StatusInformation();
    public void set_StatusInformation(string value);
    internal bool IsSetStatusInformation();
    public string get_VersionName();
    public void set_VersionName(string value);
    internal bool IsSetVersionName();
}
public class Amazon.SimpleSystemsManagement.Model.DocumentVersionLimitExceededException : AmazonSimpleSystemsManagementException {
    public DocumentVersionLimitExceededException(string message);
    public DocumentVersionLimitExceededException(string message, Exception innerException);
    public DocumentVersionLimitExceededException(Exception innerException);
    public DocumentVersionLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DocumentVersionLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.DoesNotExistException : AmazonSimpleSystemsManagementException {
    public DoesNotExistException(string message);
    public DoesNotExistException(string message, Exception innerException);
    public DoesNotExistException(Exception innerException);
    public DoesNotExistException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DoesNotExistException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.DuplicateDocumentContentException : AmazonSimpleSystemsManagementException {
    public DuplicateDocumentContentException(string message);
    public DuplicateDocumentContentException(string message, Exception innerException);
    public DuplicateDocumentContentException(Exception innerException);
    public DuplicateDocumentContentException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DuplicateDocumentContentException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.DuplicateDocumentVersionNameException : AmazonSimpleSystemsManagementException {
    public DuplicateDocumentVersionNameException(string message);
    public DuplicateDocumentVersionNameException(string message, Exception innerException);
    public DuplicateDocumentVersionNameException(Exception innerException);
    public DuplicateDocumentVersionNameException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DuplicateDocumentVersionNameException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.DuplicateInstanceIdException : AmazonSimpleSystemsManagementException {
    public DuplicateInstanceIdException(string message);
    public DuplicateInstanceIdException(string message, Exception innerException);
    public DuplicateInstanceIdException(Exception innerException);
    public DuplicateInstanceIdException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DuplicateInstanceIdException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.EffectivePatch : object {
    private Patch _patch;
    private PatchStatus _patchStatus;
    public Patch Patch { get; public set; }
    public PatchStatus PatchStatus { get; public set; }
    public Patch get_Patch();
    public void set_Patch(Patch value);
    internal bool IsSetPatch();
    public PatchStatus get_PatchStatus();
    public void set_PatchStatus(PatchStatus value);
    internal bool IsSetPatchStatus();
}
public class Amazon.SimpleSystemsManagement.Model.FailedCreateAssociation : object {
    private CreateAssociationBatchRequestEntry _entry;
    private Fault _fault;
    private string _message;
    public CreateAssociationBatchRequestEntry Entry { get; public set; }
    public Fault Fault { get; public set; }
    public string Message { get; public set; }
    public CreateAssociationBatchRequestEntry get_Entry();
    public void set_Entry(CreateAssociationBatchRequestEntry value);
    internal bool IsSetEntry();
    public Fault get_Fault();
    public void set_Fault(Fault value);
    internal bool IsSetFault();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.SimpleSystemsManagement.Model.FailureDetails : object {
    private Dictionary`2<string, List`1<string>> _details;
    private string _failureStage;
    private string _failureType;
    [AWSPropertyAttribute]
public Dictionary`2<string, List`1<string>> Details { get; public set; }
    public string FailureStage { get; public set; }
    public string FailureType { get; public set; }
    public Dictionary`2<string, List`1<string>> get_Details();
    public void set_Details(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetDetails();
    public string get_FailureStage();
    public void set_FailureStage(string value);
    internal bool IsSetFailureStage();
    public string get_FailureType();
    public void set_FailureType(string value);
    internal bool IsSetFailureType();
}
public class Amazon.SimpleSystemsManagement.Model.FeatureNotAvailableException : AmazonSimpleSystemsManagementException {
    public FeatureNotAvailableException(string message);
    public FeatureNotAvailableException(string message, Exception innerException);
    public FeatureNotAvailableException(Exception innerException);
    public FeatureNotAvailableException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public FeatureNotAvailableException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.GetAutomationExecutionRequest : AmazonSimpleSystemsManagementRequest {
    private string _automationExecutionId;
    [AWSPropertyAttribute]
public string AutomationExecutionId { get; public set; }
    public string get_AutomationExecutionId();
    public void set_AutomationExecutionId(string value);
    internal bool IsSetAutomationExecutionId();
}
public class Amazon.SimpleSystemsManagement.Model.GetAutomationExecutionResponse : AmazonWebServiceResponse {
    private AutomationExecution _automationExecution;
    public AutomationExecution AutomationExecution { get; public set; }
    public AutomationExecution get_AutomationExecution();
    public void set_AutomationExecution(AutomationExecution value);
    internal bool IsSetAutomationExecution();
}
public class Amazon.SimpleSystemsManagement.Model.GetCalendarStateRequest : AmazonSimpleSystemsManagementRequest {
    private string _atTime;
    private List`1<string> _calendarNames;
    public string AtTime { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> CalendarNames { get; public set; }
    public string get_AtTime();
    public void set_AtTime(string value);
    internal bool IsSetAtTime();
    public List`1<string> get_CalendarNames();
    public void set_CalendarNames(List`1<string> value);
    internal bool IsSetCalendarNames();
}
public class Amazon.SimpleSystemsManagement.Model.GetCalendarStateResponse : AmazonWebServiceResponse {
    private string _atTime;
    private string _nextTransitionTime;
    private CalendarState _state;
    public string AtTime { get; public set; }
    public string NextTransitionTime { get; public set; }
    public CalendarState State { get; public set; }
    public string get_AtTime();
    public void set_AtTime(string value);
    internal bool IsSetAtTime();
    public string get_NextTransitionTime();
    public void set_NextTransitionTime(string value);
    internal bool IsSetNextTransitionTime();
    public CalendarState get_State();
    public void set_State(CalendarState value);
    internal bool IsSetState();
}
public class Amazon.SimpleSystemsManagement.Model.GetCommandInvocationRequest : AmazonSimpleSystemsManagementRequest {
    private string _commandId;
    private string _instanceId;
    private string _pluginName;
    [AWSPropertyAttribute]
public string CommandId { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public string PluginName { get; public set; }
    public string get_CommandId();
    public void set_CommandId(string value);
    internal bool IsSetCommandId();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_PluginName();
    public void set_PluginName(string value);
    internal bool IsSetPluginName();
}
public class Amazon.SimpleSystemsManagement.Model.GetCommandInvocationResponse : AmazonWebServiceResponse {
    private CloudWatchOutputConfig _cloudWatchOutputConfig;
    private string _commandId;
    private string _comment;
    private string _documentName;
    private string _documentVersion;
    private string _executionElapsedTime;
    private string _executionEndDateTime;
    private string _executionStartDateTime;
    private string _instanceId;
    private string _pluginName;
    private Nullable`1<int> _responseCode;
    private string _standardErrorContent;
    private string _standardErrorUrl;
    private string _standardOutputContent;
    private string _standardOutputUrl;
    private CommandInvocationStatus _status;
    private string _statusDetails;
    public CloudWatchOutputConfig CloudWatchOutputConfig { get; public set; }
    [AWSPropertyAttribute]
public string CommandId { get; public set; }
    [AWSPropertyAttribute]
public string Comment { get; public set; }
    public string DocumentName { get; public set; }
    public string DocumentVersion { get; public set; }
    public string ExecutionElapsedTime { get; public set; }
    public string ExecutionEndDateTime { get; public set; }
    public string ExecutionStartDateTime { get; public set; }
    public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public string PluginName { get; public set; }
    public Nullable`1<int> ResponseCode { get; public set; }
    [AWSPropertyAttribute]
public string StandardErrorContent { get; public set; }
    public string StandardErrorUrl { get; public set; }
    [AWSPropertyAttribute]
public string StandardOutputContent { get; public set; }
    public string StandardOutputUrl { get; public set; }
    public CommandInvocationStatus Status { get; public set; }
    [AWSPropertyAttribute]
public string StatusDetails { get; public set; }
    public CloudWatchOutputConfig get_CloudWatchOutputConfig();
    public void set_CloudWatchOutputConfig(CloudWatchOutputConfig value);
    internal bool IsSetCloudWatchOutputConfig();
    public string get_CommandId();
    public void set_CommandId(string value);
    internal bool IsSetCommandId();
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public string get_DocumentName();
    public void set_DocumentName(string value);
    internal bool IsSetDocumentName();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public string get_ExecutionElapsedTime();
    public void set_ExecutionElapsedTime(string value);
    internal bool IsSetExecutionElapsedTime();
    public string get_ExecutionEndDateTime();
    public void set_ExecutionEndDateTime(string value);
    internal bool IsSetExecutionEndDateTime();
    public string get_ExecutionStartDateTime();
    public void set_ExecutionStartDateTime(string value);
    internal bool IsSetExecutionStartDateTime();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_PluginName();
    public void set_PluginName(string value);
    internal bool IsSetPluginName();
    public Nullable`1<int> get_ResponseCode();
    public void set_ResponseCode(Nullable`1<int> value);
    internal bool IsSetResponseCode();
    public string get_StandardErrorContent();
    public void set_StandardErrorContent(string value);
    internal bool IsSetStandardErrorContent();
    public string get_StandardErrorUrl();
    public void set_StandardErrorUrl(string value);
    internal bool IsSetStandardErrorUrl();
    public string get_StandardOutputContent();
    public void set_StandardOutputContent(string value);
    internal bool IsSetStandardOutputContent();
    public string get_StandardOutputUrl();
    public void set_StandardOutputUrl(string value);
    internal bool IsSetStandardOutputUrl();
    public CommandInvocationStatus get_Status();
    public void set_Status(CommandInvocationStatus value);
    internal bool IsSetStatus();
    public string get_StatusDetails();
    public void set_StatusDetails(string value);
    internal bool IsSetStatusDetails();
}
public class Amazon.SimpleSystemsManagement.Model.GetConnectionStatusRequest : AmazonSimpleSystemsManagementRequest {
    private string _target;
    [AWSPropertyAttribute]
public string Target { get; public set; }
    public string get_Target();
    public void set_Target(string value);
    internal bool IsSetTarget();
}
public class Amazon.SimpleSystemsManagement.Model.GetConnectionStatusResponse : AmazonWebServiceResponse {
    private ConnectionStatus _status;
    private string _target;
    public ConnectionStatus Status { get; public set; }
    [AWSPropertyAttribute]
public string Target { get; public set; }
    public ConnectionStatus get_Status();
    public void set_Status(ConnectionStatus value);
    internal bool IsSetStatus();
    public string get_Target();
    public void set_Target(string value);
    internal bool IsSetTarget();
}
public class Amazon.SimpleSystemsManagement.Model.GetDefaultPatchBaselineRequest : AmazonSimpleSystemsManagementRequest {
    private OperatingSystem _operatingSystem;
    public OperatingSystem OperatingSystem { get; public set; }
    public OperatingSystem get_OperatingSystem();
    public void set_OperatingSystem(OperatingSystem value);
    internal bool IsSetOperatingSystem();
}
public class Amazon.SimpleSystemsManagement.Model.GetDefaultPatchBaselineResponse : AmazonWebServiceResponse {
    private string _baselineId;
    private OperatingSystem _operatingSystem;
    [AWSPropertyAttribute]
public string BaselineId { get; public set; }
    public OperatingSystem OperatingSystem { get; public set; }
    public string get_BaselineId();
    public void set_BaselineId(string value);
    internal bool IsSetBaselineId();
    public OperatingSystem get_OperatingSystem();
    public void set_OperatingSystem(OperatingSystem value);
    internal bool IsSetOperatingSystem();
}
public class Amazon.SimpleSystemsManagement.Model.GetDeployablePatchSnapshotForInstanceRequest : AmazonSimpleSystemsManagementRequest {
    private BaselineOverride _baselineOverride;
    private string _instanceId;
    private string _snapshotId;
    public BaselineOverride BaselineOverride { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public string SnapshotId { get; public set; }
    public BaselineOverride get_BaselineOverride();
    public void set_BaselineOverride(BaselineOverride value);
    internal bool IsSetBaselineOverride();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
}
public class Amazon.SimpleSystemsManagement.Model.GetDeployablePatchSnapshotForInstanceResponse : AmazonWebServiceResponse {
    private string _instanceId;
    private string _product;
    private string _snapshotDownloadUrl;
    private string _snapshotId;
    public string InstanceId { get; public set; }
    public string Product { get; public set; }
    public string SnapshotDownloadUrl { get; public set; }
    [AWSPropertyAttribute]
public string SnapshotId { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_Product();
    public void set_Product(string value);
    internal bool IsSetProduct();
    public string get_SnapshotDownloadUrl();
    public void set_SnapshotDownloadUrl(string value);
    internal bool IsSetSnapshotDownloadUrl();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
}
public class Amazon.SimpleSystemsManagement.Model.GetDocumentRequest : AmazonSimpleSystemsManagementRequest {
    private DocumentFormat _documentFormat;
    private string _documentVersion;
    private string _name;
    private string _versionName;
    public DocumentFormat DocumentFormat { get; public set; }
    public string DocumentVersion { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string VersionName { get; public set; }
    public GetDocumentRequest(string name);
    public DocumentFormat get_DocumentFormat();
    public void set_DocumentFormat(DocumentFormat value);
    internal bool IsSetDocumentFormat();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_VersionName();
    public void set_VersionName(string value);
    internal bool IsSetVersionName();
}
public class Amazon.SimpleSystemsManagement.Model.GetDocumentResponse : AmazonWebServiceResponse {
    private List`1<AttachmentContent> _attachmentsContent;
    private string _content;
    private Nullable`1<DateTime> _createdDate;
    private string _displayName;
    private DocumentFormat _documentFormat;
    private DocumentType _documentType;
    private string _documentVersion;
    private string _name;
    private List`1<DocumentRequires> _requires;
    private ReviewStatus _reviewStatus;
    private DocumentStatus _status;
    private string _statusInformation;
    private string _versionName;
    public List`1<AttachmentContent> AttachmentsContent { get; public set; }
    [AWSPropertyAttribute]
public string Content { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    [AWSPropertyAttribute]
public string DisplayName { get; public set; }
    public DocumentFormat DocumentFormat { get; public set; }
    public DocumentType DocumentType { get; public set; }
    public string DocumentVersion { get; public set; }
    public string Name { get; public set; }
    [AWSPropertyAttribute]
public List`1<DocumentRequires> Requires { get; public set; }
    public ReviewStatus ReviewStatus { get; public set; }
    public DocumentStatus Status { get; public set; }
    public string StatusInformation { get; public set; }
    public string VersionName { get; public set; }
    public List`1<AttachmentContent> get_AttachmentsContent();
    public void set_AttachmentsContent(List`1<AttachmentContent> value);
    internal bool IsSetAttachmentsContent();
    public string get_Content();
    public void set_Content(string value);
    internal bool IsSetContent();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_DisplayName();
    public void set_DisplayName(string value);
    internal bool IsSetDisplayName();
    public DocumentFormat get_DocumentFormat();
    public void set_DocumentFormat(DocumentFormat value);
    internal bool IsSetDocumentFormat();
    public DocumentType get_DocumentType();
    public void set_DocumentType(DocumentType value);
    internal bool IsSetDocumentType();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<DocumentRequires> get_Requires();
    public void set_Requires(List`1<DocumentRequires> value);
    internal bool IsSetRequires();
    public ReviewStatus get_ReviewStatus();
    public void set_ReviewStatus(ReviewStatus value);
    internal bool IsSetReviewStatus();
    public DocumentStatus get_Status();
    public void set_Status(DocumentStatus value);
    internal bool IsSetStatus();
    public string get_StatusInformation();
    public void set_StatusInformation(string value);
    internal bool IsSetStatusInformation();
    public string get_VersionName();
    public void set_VersionName(string value);
    internal bool IsSetVersionName();
}
internal class Amazon.SimpleSystemsManagement.Model.GetInventoryPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private GetInventoryRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetInventoryResponse> Responses { get; }
    public IPaginatedEnumerable`1<InventoryResultEntity> Entities { get; }
    internal GetInventoryPaginator(IAmazonSimpleSystemsManagement client, GetInventoryRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetInventoryResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<InventoryResultEntity> get_Entities();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.GetInventoryPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-GetInventoryResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetInventoryResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.GetInventoryResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.GetInventoryRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<InventoryAggregator> _aggregators;
    private List`1<InventoryFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<ResultAttribute> _resultAttributes;
    [AWSPropertyAttribute]
public List`1<InventoryAggregator> Aggregators { get; public set; }
    [AWSPropertyAttribute]
public List`1<InventoryFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<ResultAttribute> ResultAttributes { get; public set; }
    public List`1<InventoryAggregator> get_Aggregators();
    public void set_Aggregators(List`1<InventoryAggregator> value);
    internal bool IsSetAggregators();
    public List`1<InventoryFilter> get_Filters();
    public void set_Filters(List`1<InventoryFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ResultAttribute> get_ResultAttributes();
    public void set_ResultAttributes(List`1<ResultAttribute> value);
    internal bool IsSetResultAttributes();
}
public class Amazon.SimpleSystemsManagement.Model.GetInventoryResponse : AmazonWebServiceResponse {
    private List`1<InventoryResultEntity> _entities;
    private string _nextToken;
    public List`1<InventoryResultEntity> Entities { get; public set; }
    public string NextToken { get; public set; }
    public List`1<InventoryResultEntity> get_Entities();
    public void set_Entities(List`1<InventoryResultEntity> value);
    internal bool IsSetEntities();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.SimpleSystemsManagement.Model.GetInventorySchemaPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private GetInventorySchemaRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetInventorySchemaResponse> Responses { get; }
    public IPaginatedEnumerable`1<InventoryItemSchema> Schemas { get; }
    internal GetInventorySchemaPaginator(IAmazonSimpleSystemsManagement client, GetInventorySchemaRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetInventorySchemaResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<InventoryItemSchema> get_Schemas();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.GetInventorySchemaPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-GetInventorySchemaResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetInventorySchemaResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.GetInventorySchemaResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.GetInventorySchemaRequest : AmazonSimpleSystemsManagementRequest {
    private Nullable`1<bool> _aggregator;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private Nullable`1<bool> _subType;
    private string _typeName;
    public Nullable`1<bool> Aggregator { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<bool> SubType { get; public set; }
    [AWSPropertyAttribute]
public string TypeName { get; public set; }
    public Nullable`1<bool> get_Aggregator();
    public void set_Aggregator(Nullable`1<bool> value);
    internal bool IsSetAggregator();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<bool> get_SubType();
    public void set_SubType(Nullable`1<bool> value);
    internal bool IsSetSubType();
    public string get_TypeName();
    public void set_TypeName(string value);
    internal bool IsSetTypeName();
}
public class Amazon.SimpleSystemsManagement.Model.GetInventorySchemaResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<InventoryItemSchema> _schemas;
    public string NextToken { get; public set; }
    public List`1<InventoryItemSchema> Schemas { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<InventoryItemSchema> get_Schemas();
    public void set_Schemas(List`1<InventoryItemSchema> value);
    internal bool IsSetSchemas();
}
public class Amazon.SimpleSystemsManagement.Model.GetMaintenanceWindowExecutionRequest : AmazonSimpleSystemsManagementRequest {
    private string _windowExecutionId;
    [AWSPropertyAttribute]
public string WindowExecutionId { get; public set; }
    public string get_WindowExecutionId();
    public void set_WindowExecutionId(string value);
    internal bool IsSetWindowExecutionId();
}
public class Amazon.SimpleSystemsManagement.Model.GetMaintenanceWindowExecutionResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _endTime;
    private Nullable`1<DateTime> _startTime;
    private MaintenanceWindowExecutionStatus _status;
    private string _statusDetails;
    private List`1<string> _taskIds;
    private string _windowExecutionId;
    public Nullable`1<DateTime> EndTime { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public MaintenanceWindowExecutionStatus Status { get; public set; }
    [AWSPropertyAttribute]
public string StatusDetails { get; public set; }
    public List`1<string> TaskIds { get; public set; }
    [AWSPropertyAttribute]
public string WindowExecutionId { get; public set; }
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public MaintenanceWindowExecutionStatus get_Status();
    public void set_Status(MaintenanceWindowExecutionStatus value);
    internal bool IsSetStatus();
    public string get_StatusDetails();
    public void set_StatusDetails(string value);
    internal bool IsSetStatusDetails();
    public List`1<string> get_TaskIds();
    public void set_TaskIds(List`1<string> value);
    internal bool IsSetTaskIds();
    public string get_WindowExecutionId();
    public void set_WindowExecutionId(string value);
    internal bool IsSetWindowExecutionId();
}
public class Amazon.SimpleSystemsManagement.Model.GetMaintenanceWindowExecutionTaskInvocationRequest : AmazonSimpleSystemsManagementRequest {
    private string _invocationId;
    private string _taskId;
    private string _windowExecutionId;
    [AWSPropertyAttribute]
public string InvocationId { get; public set; }
    [AWSPropertyAttribute]
public string TaskId { get; public set; }
    [AWSPropertyAttribute]
public string WindowExecutionId { get; public set; }
    public string get_InvocationId();
    public void set_InvocationId(string value);
    internal bool IsSetInvocationId();
    public string get_TaskId();
    public void set_TaskId(string value);
    internal bool IsSetTaskId();
    public string get_WindowExecutionId();
    public void set_WindowExecutionId(string value);
    internal bool IsSetWindowExecutionId();
}
public class Amazon.SimpleSystemsManagement.Model.GetMaintenanceWindowExecutionTaskInvocationResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _endTime;
    private string _executionId;
    private string _invocationId;
    private string _ownerInformation;
    private string _parameters;
    private Nullable`1<DateTime> _startTime;
    private MaintenanceWindowExecutionStatus _status;
    private string _statusDetails;
    private string _taskExecutionId;
    private MaintenanceWindowTaskType _taskType;
    private string _windowExecutionId;
    private string _windowTargetId;
    public Nullable`1<DateTime> EndTime { get; public set; }
    public string ExecutionId { get; public set; }
    [AWSPropertyAttribute]
public string InvocationId { get; public set; }
    [AWSPropertyAttribute]
public string OwnerInformation { get; public set; }
    [AWSPropertyAttribute]
public string Parameters { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public MaintenanceWindowExecutionStatus Status { get; public set; }
    [AWSPropertyAttribute]
public string StatusDetails { get; public set; }
    [AWSPropertyAttribute]
public string TaskExecutionId { get; public set; }
    public MaintenanceWindowTaskType TaskType { get; public set; }
    [AWSPropertyAttribute]
public string WindowExecutionId { get; public set; }
    [AWSPropertyAttribute]
public string WindowTargetId { get; public set; }
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public string get_ExecutionId();
    public void set_ExecutionId(string value);
    internal bool IsSetExecutionId();
    public string get_InvocationId();
    public void set_InvocationId(string value);
    internal bool IsSetInvocationId();
    public string get_OwnerInformation();
    public void set_OwnerInformation(string value);
    internal bool IsSetOwnerInformation();
    public string get_Parameters();
    public void set_Parameters(string value);
    internal bool IsSetParameters();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public MaintenanceWindowExecutionStatus get_Status();
    public void set_Status(MaintenanceWindowExecutionStatus value);
    internal bool IsSetStatus();
    public string get_StatusDetails();
    public void set_StatusDetails(string value);
    internal bool IsSetStatusDetails();
    public string get_TaskExecutionId();
    public void set_TaskExecutionId(string value);
    internal bool IsSetTaskExecutionId();
    public MaintenanceWindowTaskType get_TaskType();
    public void set_TaskType(MaintenanceWindowTaskType value);
    internal bool IsSetTaskType();
    public string get_WindowExecutionId();
    public void set_WindowExecutionId(string value);
    internal bool IsSetWindowExecutionId();
    public string get_WindowTargetId();
    public void set_WindowTargetId(string value);
    internal bool IsSetWindowTargetId();
}
public class Amazon.SimpleSystemsManagement.Model.GetMaintenanceWindowExecutionTaskRequest : AmazonSimpleSystemsManagementRequest {
    private string _taskId;
    private string _windowExecutionId;
    [AWSPropertyAttribute]
public string TaskId { get; public set; }
    [AWSPropertyAttribute]
public string WindowExecutionId { get; public set; }
    public string get_TaskId();
    public void set_TaskId(string value);
    internal bool IsSetTaskId();
    public string get_WindowExecutionId();
    public void set_WindowExecutionId(string value);
    internal bool IsSetWindowExecutionId();
}
public class Amazon.SimpleSystemsManagement.Model.GetMaintenanceWindowExecutionTaskResponse : AmazonWebServiceResponse {
    private AlarmConfiguration _alarmConfiguration;
    private Nullable`1<DateTime> _endTime;
    private string _maxConcurrency;
    private string _maxErrors;
    private Nullable`1<int> _priority;
    private string _serviceRole;
    private Nullable`1<DateTime> _startTime;
    private MaintenanceWindowExecutionStatus _status;
    private string _statusDetails;
    private string _taskArn;
    private string _taskExecutionId;
    private List`1<Dictionary`2<string, MaintenanceWindowTaskParameterValueExpression>> _taskParameters;
    private List`1<AlarmStateInformation> _triggeredAlarms;
    private MaintenanceWindowTaskType _type;
    private string _windowExecutionId;
    public AlarmConfiguration AlarmConfiguration { get; public set; }
    public Nullable`1<DateTime> EndTime { get; public set; }
    [AWSPropertyAttribute]
public string MaxConcurrency { get; public set; }
    [AWSPropertyAttribute]
public string MaxErrors { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    public string ServiceRole { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public MaintenanceWindowExecutionStatus Status { get; public set; }
    [AWSPropertyAttribute]
public string StatusDetails { get; public set; }
    [AWSPropertyAttribute]
public string TaskArn { get; public set; }
    [AWSPropertyAttribute]
public string TaskExecutionId { get; public set; }
    [AWSPropertyAttribute]
public List`1<Dictionary`2<string, MaintenanceWindowTaskParameterValueExpression>> TaskParameters { get; public set; }
    [AWSPropertyAttribute]
public List`1<AlarmStateInformation> TriggeredAlarms { get; public set; }
    public MaintenanceWindowTaskType Type { get; public set; }
    [AWSPropertyAttribute]
public string WindowExecutionId { get; public set; }
    public AlarmConfiguration get_AlarmConfiguration();
    public void set_AlarmConfiguration(AlarmConfiguration value);
    internal bool IsSetAlarmConfiguration();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public string get_MaxConcurrency();
    public void set_MaxConcurrency(string value);
    internal bool IsSetMaxConcurrency();
    public string get_MaxErrors();
    public void set_MaxErrors(string value);
    internal bool IsSetMaxErrors();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
    public string get_ServiceRole();
    public void set_ServiceRole(string value);
    internal bool IsSetServiceRole();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public MaintenanceWindowExecutionStatus get_Status();
    public void set_Status(MaintenanceWindowExecutionStatus value);
    internal bool IsSetStatus();
    public string get_StatusDetails();
    public void set_StatusDetails(string value);
    internal bool IsSetStatusDetails();
    public string get_TaskArn();
    public void set_TaskArn(string value);
    internal bool IsSetTaskArn();
    public string get_TaskExecutionId();
    public void set_TaskExecutionId(string value);
    internal bool IsSetTaskExecutionId();
    public List`1<Dictionary`2<string, MaintenanceWindowTaskParameterValueExpression>> get_TaskParameters();
    public void set_TaskParameters(List`1<Dictionary`2<string, MaintenanceWindowTaskParameterValueExpression>> value);
    internal bool IsSetTaskParameters();
    public List`1<AlarmStateInformation> get_TriggeredAlarms();
    public void set_TriggeredAlarms(List`1<AlarmStateInformation> value);
    internal bool IsSetTriggeredAlarms();
    public MaintenanceWindowTaskType get_Type();
    public void set_Type(MaintenanceWindowTaskType value);
    internal bool IsSetType();
    public string get_WindowExecutionId();
    public void set_WindowExecutionId(string value);
    internal bool IsSetWindowExecutionId();
}
public class Amazon.SimpleSystemsManagement.Model.GetMaintenanceWindowRequest : AmazonSimpleSystemsManagementRequest {
    private string _windowId;
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
}
public class Amazon.SimpleSystemsManagement.Model.GetMaintenanceWindowResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _allowUnassociatedTargets;
    private Nullable`1<DateTime> _createdDate;
    private Nullable`1<int> _cutoff;
    private string _description;
    private Nullable`1<int> _duration;
    private Nullable`1<bool> _enabled;
    private string _endDate;
    private Nullable`1<DateTime> _modifiedDate;
    private string _name;
    private string _nextExecutionTime;
    private string _schedule;
    private Nullable`1<int> _scheduleOffset;
    private string _scheduleTimezone;
    private string _startDate;
    private string _windowId;
    public Nullable`1<bool> AllowUnassociatedTargets { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Cutoff { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Duration { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    public string EndDate { get; public set; }
    public Nullable`1<DateTime> ModifiedDate { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string NextExecutionTime { get; public set; }
    [AWSPropertyAttribute]
public string Schedule { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ScheduleOffset { get; public set; }
    public string ScheduleTimezone { get; public set; }
    public string StartDate { get; public set; }
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    public Nullable`1<bool> get_AllowUnassociatedTargets();
    public void set_AllowUnassociatedTargets(Nullable`1<bool> value);
    internal bool IsSetAllowUnassociatedTargets();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public Nullable`1<int> get_Cutoff();
    public void set_Cutoff(Nullable`1<int> value);
    internal bool IsSetCutoff();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<int> get_Duration();
    public void set_Duration(Nullable`1<int> value);
    internal bool IsSetDuration();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public string get_EndDate();
    public void set_EndDate(string value);
    internal bool IsSetEndDate();
    public Nullable`1<DateTime> get_ModifiedDate();
    public void set_ModifiedDate(Nullable`1<DateTime> value);
    internal bool IsSetModifiedDate();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_NextExecutionTime();
    public void set_NextExecutionTime(string value);
    internal bool IsSetNextExecutionTime();
    public string get_Schedule();
    public void set_Schedule(string value);
    internal bool IsSetSchedule();
    public Nullable`1<int> get_ScheduleOffset();
    public void set_ScheduleOffset(Nullable`1<int> value);
    internal bool IsSetScheduleOffset();
    public string get_ScheduleTimezone();
    public void set_ScheduleTimezone(string value);
    internal bool IsSetScheduleTimezone();
    public string get_StartDate();
    public void set_StartDate(string value);
    internal bool IsSetStartDate();
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
}
public class Amazon.SimpleSystemsManagement.Model.GetMaintenanceWindowTaskRequest : AmazonSimpleSystemsManagementRequest {
    private string _windowId;
    private string _windowTaskId;
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    [AWSPropertyAttribute]
public string WindowTaskId { get; public set; }
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
    public string get_WindowTaskId();
    public void set_WindowTaskId(string value);
    internal bool IsSetWindowTaskId();
}
public class Amazon.SimpleSystemsManagement.Model.GetMaintenanceWindowTaskResponse : AmazonWebServiceResponse {
    private AlarmConfiguration _alarmConfiguration;
    private MaintenanceWindowTaskCutoffBehavior _cutoffBehavior;
    private string _description;
    private LoggingInfo _loggingInfo;
    private string _maxConcurrency;
    private string _maxErrors;
    private string _name;
    private Nullable`1<int> _priority;
    private string _serviceRoleArn;
    private List`1<Target> _targets;
    private string _taskArn;
    private MaintenanceWindowTaskInvocationParameters _taskInvocationParameters;
    private Dictionary`2<string, MaintenanceWindowTaskParameterValueExpression> _taskParameters;
    private MaintenanceWindowTaskType _taskType;
    private string _windowId;
    private string _windowTaskId;
    public AlarmConfiguration AlarmConfiguration { get; public set; }
    public MaintenanceWindowTaskCutoffBehavior CutoffBehavior { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public LoggingInfo LoggingInfo { get; public set; }
    [AWSPropertyAttribute]
public string MaxConcurrency { get; public set; }
    [AWSPropertyAttribute]
public string MaxErrors { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    public string ServiceRoleArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<Target> Targets { get; public set; }
    [AWSPropertyAttribute]
public string TaskArn { get; public set; }
    public MaintenanceWindowTaskInvocationParameters TaskInvocationParameters { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, MaintenanceWindowTaskParameterValueExpression> TaskParameters { get; public set; }
    public MaintenanceWindowTaskType TaskType { get; public set; }
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    [AWSPropertyAttribute]
public string WindowTaskId { get; public set; }
    public AlarmConfiguration get_AlarmConfiguration();
    public void set_AlarmConfiguration(AlarmConfiguration value);
    internal bool IsSetAlarmConfiguration();
    public MaintenanceWindowTaskCutoffBehavior get_CutoffBehavior();
    public void set_CutoffBehavior(MaintenanceWindowTaskCutoffBehavior value);
    internal bool IsSetCutoffBehavior();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public LoggingInfo get_LoggingInfo();
    public void set_LoggingInfo(LoggingInfo value);
    internal bool IsSetLoggingInfo();
    public string get_MaxConcurrency();
    public void set_MaxConcurrency(string value);
    internal bool IsSetMaxConcurrency();
    public string get_MaxErrors();
    public void set_MaxErrors(string value);
    internal bool IsSetMaxErrors();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
    public string get_ServiceRoleArn();
    public void set_ServiceRoleArn(string value);
    internal bool IsSetServiceRoleArn();
    public List`1<Target> get_Targets();
    public void set_Targets(List`1<Target> value);
    internal bool IsSetTargets();
    public string get_TaskArn();
    public void set_TaskArn(string value);
    internal bool IsSetTaskArn();
    public MaintenanceWindowTaskInvocationParameters get_TaskInvocationParameters();
    public void set_TaskInvocationParameters(MaintenanceWindowTaskInvocationParameters value);
    internal bool IsSetTaskInvocationParameters();
    public Dictionary`2<string, MaintenanceWindowTaskParameterValueExpression> get_TaskParameters();
    public void set_TaskParameters(Dictionary`2<string, MaintenanceWindowTaskParameterValueExpression> value);
    internal bool IsSetTaskParameters();
    public MaintenanceWindowTaskType get_TaskType();
    public void set_TaskType(MaintenanceWindowTaskType value);
    internal bool IsSetTaskType();
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
    public string get_WindowTaskId();
    public void set_WindowTaskId(string value);
    internal bool IsSetWindowTaskId();
}
public class Amazon.SimpleSystemsManagement.Model.GetOpsItemRequest : AmazonSimpleSystemsManagementRequest {
    private string _opsItemArn;
    private string _opsItemId;
    [AWSPropertyAttribute]
public string OpsItemArn { get; public set; }
    [AWSPropertyAttribute]
public string OpsItemId { get; public set; }
    public string get_OpsItemArn();
    public void set_OpsItemArn(string value);
    internal bool IsSetOpsItemArn();
    public string get_OpsItemId();
    public void set_OpsItemId(string value);
    internal bool IsSetOpsItemId();
}
public class Amazon.SimpleSystemsManagement.Model.GetOpsItemResponse : AmazonWebServiceResponse {
    private OpsItem _opsItem;
    public OpsItem OpsItem { get; public set; }
    public OpsItem get_OpsItem();
    public void set_OpsItem(OpsItem value);
    internal bool IsSetOpsItem();
}
public class Amazon.SimpleSystemsManagement.Model.GetOpsMetadataRequest : AmazonSimpleSystemsManagementRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _opsMetadataArn;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string OpsMetadataArn { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_OpsMetadataArn();
    public void set_OpsMetadataArn(string value);
    internal bool IsSetOpsMetadataArn();
}
public class Amazon.SimpleSystemsManagement.Model.GetOpsMetadataResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, MetadataValue> _metadata;
    private string _nextToken;
    private string _resourceId;
    [AWSPropertyAttribute]
public Dictionary`2<string, MetadataValue> Metadata { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string ResourceId { get; public set; }
    public Dictionary`2<string, MetadataValue> get_Metadata();
    public void set_Metadata(Dictionary`2<string, MetadataValue> value);
    internal bool IsSetMetadata();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
}
internal class Amazon.SimpleSystemsManagement.Model.GetOpsSummaryPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private GetOpsSummaryRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetOpsSummaryResponse> Responses { get; }
    public IPaginatedEnumerable`1<OpsEntity> Entities { get; }
    internal GetOpsSummaryPaginator(IAmazonSimpleSystemsManagement client, GetOpsSummaryRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetOpsSummaryResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<OpsEntity> get_Entities();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.GetOpsSummaryPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-GetOpsSummaryResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetOpsSummaryResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.GetOpsSummaryResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.GetOpsSummaryRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<OpsAggregator> _aggregators;
    private List`1<OpsFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<OpsResultAttribute> _resultAttributes;
    private string _syncName;
    [AWSPropertyAttribute]
public List`1<OpsAggregator> Aggregators { get; public set; }
    [AWSPropertyAttribute]
public List`1<OpsFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<OpsResultAttribute> ResultAttributes { get; public set; }
    [AWSPropertyAttribute]
public string SyncName { get; public set; }
    public List`1<OpsAggregator> get_Aggregators();
    public void set_Aggregators(List`1<OpsAggregator> value);
    internal bool IsSetAggregators();
    public List`1<OpsFilter> get_Filters();
    public void set_Filters(List`1<OpsFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<OpsResultAttribute> get_ResultAttributes();
    public void set_ResultAttributes(List`1<OpsResultAttribute> value);
    internal bool IsSetResultAttributes();
    public string get_SyncName();
    public void set_SyncName(string value);
    internal bool IsSetSyncName();
}
public class Amazon.SimpleSystemsManagement.Model.GetOpsSummaryResponse : AmazonWebServiceResponse {
    private List`1<OpsEntity> _entities;
    private string _nextToken;
    public List`1<OpsEntity> Entities { get; public set; }
    public string NextToken { get; public set; }
    public List`1<OpsEntity> get_Entities();
    public void set_Entities(List`1<OpsEntity> value);
    internal bool IsSetEntities();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.SimpleSystemsManagement.Model.GetParameterHistoryPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private GetParameterHistoryRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetParameterHistoryResponse> Responses { get; }
    internal GetParameterHistoryPaginator(IAmazonSimpleSystemsManagement client, GetParameterHistoryRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetParameterHistoryResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.GetParameterHistoryPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-GetParameterHistoryResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<GetParameterHistoryResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.GetParameterHistoryResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.GetParameterHistoryRequest : AmazonSimpleSystemsManagementRequest {
    private Nullable`1<int> _maxResults;
    private string _name;
    private string _nextToken;
    private Nullable`1<bool> _withDecryption;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<bool> WithDecryption { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<bool> get_WithDecryption();
    public void set_WithDecryption(Nullable`1<bool> value);
    internal bool IsSetWithDecryption();
}
public class Amazon.SimpleSystemsManagement.Model.GetParameterHistoryResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ParameterHistory> _parameters;
    public string NextToken { get; public set; }
    public List`1<ParameterHistory> Parameters { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ParameterHistory> get_Parameters();
    public void set_Parameters(List`1<ParameterHistory> value);
    internal bool IsSetParameters();
}
public class Amazon.SimpleSystemsManagement.Model.GetParameterRequest : AmazonSimpleSystemsManagementRequest {
    private string _name;
    private Nullable`1<bool> _withDecryption;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<bool> WithDecryption { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<bool> get_WithDecryption();
    public void set_WithDecryption(Nullable`1<bool> value);
    internal bool IsSetWithDecryption();
}
public class Amazon.SimpleSystemsManagement.Model.GetParameterResponse : AmazonWebServiceResponse {
    private Parameter _parameter;
    public Parameter Parameter { get; public set; }
    public Parameter get_Parameter();
    public void set_Parameter(Parameter value);
    internal bool IsSetParameter();
}
internal class Amazon.SimpleSystemsManagement.Model.GetParametersByPathPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private GetParametersByPathRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetParametersByPathResponse> Responses { get; }
    internal GetParametersByPathPaginator(IAmazonSimpleSystemsManagement client, GetParametersByPathRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetParametersByPathResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.GetParametersByPathPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-GetParametersByPathResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<GetParametersByPathResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.GetParametersByPathResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.GetParametersByPathRequest : AmazonSimpleSystemsManagementRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<ParameterStringFilter> _parameterFilters;
    private string _path;
    private Nullable`1<bool> _recursive;
    private Nullable`1<bool> _withDecryption;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ParameterStringFilter> ParameterFilters { get; public set; }
    [AWSPropertyAttribute]
public string Path { get; public set; }
    public Nullable`1<bool> Recursive { get; public set; }
    public Nullable`1<bool> WithDecryption { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ParameterStringFilter> get_ParameterFilters();
    public void set_ParameterFilters(List`1<ParameterStringFilter> value);
    internal bool IsSetParameterFilters();
    public string get_Path();
    public void set_Path(string value);
    internal bool IsSetPath();
    public Nullable`1<bool> get_Recursive();
    public void set_Recursive(Nullable`1<bool> value);
    internal bool IsSetRecursive();
    public Nullable`1<bool> get_WithDecryption();
    public void set_WithDecryption(Nullable`1<bool> value);
    internal bool IsSetWithDecryption();
}
public class Amazon.SimpleSystemsManagement.Model.GetParametersByPathResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Parameter> _parameters;
    public string NextToken { get; public set; }
    public List`1<Parameter> Parameters { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Parameter> get_Parameters();
    public void set_Parameters(List`1<Parameter> value);
    internal bool IsSetParameters();
}
public class Amazon.SimpleSystemsManagement.Model.GetParametersRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<string> _names;
    private Nullable`1<bool> _withDecryption;
    [AWSPropertyAttribute]
public List`1<string> Names { get; public set; }
    public Nullable`1<bool> WithDecryption { get; public set; }
    public List`1<string> get_Names();
    public void set_Names(List`1<string> value);
    internal bool IsSetNames();
    public Nullable`1<bool> get_WithDecryption();
    public void set_WithDecryption(Nullable`1<bool> value);
    internal bool IsSetWithDecryption();
}
public class Amazon.SimpleSystemsManagement.Model.GetParametersResponse : AmazonWebServiceResponse {
    private List`1<string> _invalidParameters;
    private List`1<Parameter> _parameters;
    [AWSPropertyAttribute]
public List`1<string> InvalidParameters { get; public set; }
    public List`1<Parameter> Parameters { get; public set; }
    public List`1<string> get_InvalidParameters();
    public void set_InvalidParameters(List`1<string> value);
    internal bool IsSetInvalidParameters();
    public List`1<Parameter> get_Parameters();
    public void set_Parameters(List`1<Parameter> value);
    internal bool IsSetParameters();
}
public class Amazon.SimpleSystemsManagement.Model.GetPatchBaselineForPatchGroupRequest : AmazonSimpleSystemsManagementRequest {
    private OperatingSystem _operatingSystem;
    private string _patchGroup;
    public OperatingSystem OperatingSystem { get; public set; }
    [AWSPropertyAttribute]
public string PatchGroup { get; public set; }
    public OperatingSystem get_OperatingSystem();
    public void set_OperatingSystem(OperatingSystem value);
    internal bool IsSetOperatingSystem();
    public string get_PatchGroup();
    public void set_PatchGroup(string value);
    internal bool IsSetPatchGroup();
}
public class Amazon.SimpleSystemsManagement.Model.GetPatchBaselineForPatchGroupResponse : AmazonWebServiceResponse {
    private string _baselineId;
    private OperatingSystem _operatingSystem;
    private string _patchGroup;
    [AWSPropertyAttribute]
public string BaselineId { get; public set; }
    public OperatingSystem OperatingSystem { get; public set; }
    [AWSPropertyAttribute]
public string PatchGroup { get; public set; }
    public string get_BaselineId();
    public void set_BaselineId(string value);
    internal bool IsSetBaselineId();
    public OperatingSystem get_OperatingSystem();
    public void set_OperatingSystem(OperatingSystem value);
    internal bool IsSetOperatingSystem();
    public string get_PatchGroup();
    public void set_PatchGroup(string value);
    internal bool IsSetPatchGroup();
}
public class Amazon.SimpleSystemsManagement.Model.GetPatchBaselineRequest : AmazonSimpleSystemsManagementRequest {
    private string _baselineId;
    [AWSPropertyAttribute]
public string BaselineId { get; public set; }
    public string get_BaselineId();
    public void set_BaselineId(string value);
    internal bool IsSetBaselineId();
}
public class Amazon.SimpleSystemsManagement.Model.GetPatchBaselineResponse : AmazonWebServiceResponse {
    private PatchRuleGroup _approvalRules;
    private List`1<string> _approvedPatches;
    private PatchComplianceLevel _approvedPatchesComplianceLevel;
    private Nullable`1<bool> _approvedPatchesEnableNonSecurity;
    private string _baselineId;
    private Nullable`1<DateTime> _createdDate;
    private string _description;
    private PatchFilterGroup _globalFilters;
    private Nullable`1<DateTime> _modifiedDate;
    private string _name;
    private OperatingSystem _operatingSystem;
    private List`1<string> _patchGroups;
    private List`1<string> _rejectedPatches;
    private PatchAction _rejectedPatchesAction;
    private List`1<PatchSource> _sources;
    public PatchRuleGroup ApprovalRules { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ApprovedPatches { get; public set; }
    public PatchComplianceLevel ApprovedPatchesComplianceLevel { get; public set; }
    public Nullable`1<bool> ApprovedPatchesEnableNonSecurity { get; public set; }
    [AWSPropertyAttribute]
public string BaselineId { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public PatchFilterGroup GlobalFilters { get; public set; }
    public Nullable`1<DateTime> ModifiedDate { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public OperatingSystem OperatingSystem { get; public set; }
    public List`1<string> PatchGroups { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> RejectedPatches { get; public set; }
    public PatchAction RejectedPatchesAction { get; public set; }
    [AWSPropertyAttribute]
public List`1<PatchSource> Sources { get; public set; }
    public PatchRuleGroup get_ApprovalRules();
    public void set_ApprovalRules(PatchRuleGroup value);
    internal bool IsSetApprovalRules();
    public List`1<string> get_ApprovedPatches();
    public void set_ApprovedPatches(List`1<string> value);
    internal bool IsSetApprovedPatches();
    public PatchComplianceLevel get_ApprovedPatchesComplianceLevel();
    public void set_ApprovedPatchesComplianceLevel(PatchComplianceLevel value);
    internal bool IsSetApprovedPatchesComplianceLevel();
    public Nullable`1<bool> get_ApprovedPatchesEnableNonSecurity();
    public void set_ApprovedPatchesEnableNonSecurity(Nullable`1<bool> value);
    internal bool IsSetApprovedPatchesEnableNonSecurity();
    public string get_BaselineId();
    public void set_BaselineId(string value);
    internal bool IsSetBaselineId();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public PatchFilterGroup get_GlobalFilters();
    public void set_GlobalFilters(PatchFilterGroup value);
    internal bool IsSetGlobalFilters();
    public Nullable`1<DateTime> get_ModifiedDate();
    public void set_ModifiedDate(Nullable`1<DateTime> value);
    internal bool IsSetModifiedDate();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public OperatingSystem get_OperatingSystem();
    public void set_OperatingSystem(OperatingSystem value);
    internal bool IsSetOperatingSystem();
    public List`1<string> get_PatchGroups();
    public void set_PatchGroups(List`1<string> value);
    internal bool IsSetPatchGroups();
    public List`1<string> get_RejectedPatches();
    public void set_RejectedPatches(List`1<string> value);
    internal bool IsSetRejectedPatches();
    public PatchAction get_RejectedPatchesAction();
    public void set_RejectedPatchesAction(PatchAction value);
    internal bool IsSetRejectedPatchesAction();
    public List`1<PatchSource> get_Sources();
    public void set_Sources(List`1<PatchSource> value);
    internal bool IsSetSources();
}
internal class Amazon.SimpleSystemsManagement.Model.GetResourcePoliciesPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private GetResourcePoliciesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetResourcePoliciesResponse> Responses { get; }
    public IPaginatedEnumerable`1<GetResourcePoliciesResponseEntry> Policies { get; }
    internal GetResourcePoliciesPaginator(IAmazonSimpleSystemsManagement client, GetResourcePoliciesRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetResourcePoliciesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<GetResourcePoliciesResponseEntry> get_Policies();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.GetResourcePoliciesPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-GetResourcePoliciesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetResourcePoliciesResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.GetResourcePoliciesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.GetResourcePoliciesRequest : AmazonSimpleSystemsManagementRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _resourceArn;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.SimpleSystemsManagement.Model.GetResourcePoliciesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<GetResourcePoliciesResponseEntry> _policies;
    public string NextToken { get; public set; }
    public List`1<GetResourcePoliciesResponseEntry> Policies { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<GetResourcePoliciesResponseEntry> get_Policies();
    public void set_Policies(List`1<GetResourcePoliciesResponseEntry> value);
    internal bool IsSetPolicies();
}
public class Amazon.SimpleSystemsManagement.Model.GetResourcePoliciesResponseEntry : object {
    private string _policy;
    private string _policyHash;
    private string _policyId;
    public string Policy { get; public set; }
    public string PolicyHash { get; public set; }
    public string PolicyId { get; public set; }
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
    public string get_PolicyHash();
    public void set_PolicyHash(string value);
    internal bool IsSetPolicyHash();
    public string get_PolicyId();
    public void set_PolicyId(string value);
    internal bool IsSetPolicyId();
}
public class Amazon.SimpleSystemsManagement.Model.GetServiceSettingRequest : AmazonSimpleSystemsManagementRequest {
    private string _settingId;
    [AWSPropertyAttribute]
public string SettingId { get; public set; }
    public string get_SettingId();
    public void set_SettingId(string value);
    internal bool IsSetSettingId();
}
public class Amazon.SimpleSystemsManagement.Model.GetServiceSettingResponse : AmazonWebServiceResponse {
    private ServiceSetting _serviceSetting;
    public ServiceSetting ServiceSetting { get; public set; }
    public ServiceSetting get_ServiceSetting();
    public void set_ServiceSetting(ServiceSetting value);
    internal bool IsSetServiceSetting();
}
public class Amazon.SimpleSystemsManagement.Model.HierarchyLevelLimitExceededException : AmazonSimpleSystemsManagementException {
    public HierarchyLevelLimitExceededException(string message);
    public HierarchyLevelLimitExceededException(string message, Exception innerException);
    public HierarchyLevelLimitExceededException(Exception innerException);
    public HierarchyLevelLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public HierarchyLevelLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.HierarchyTypeMismatchException : AmazonSimpleSystemsManagementException {
    public HierarchyTypeMismatchException(string message);
    public HierarchyTypeMismatchException(string message, Exception innerException);
    public HierarchyTypeMismatchException(Exception innerException);
    public HierarchyTypeMismatchException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public HierarchyTypeMismatchException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.IdempotentParameterMismatchException : AmazonSimpleSystemsManagementException {
    public IdempotentParameterMismatchException(string message);
    public IdempotentParameterMismatchException(string message, Exception innerException);
    public IdempotentParameterMismatchException(Exception innerException);
    public IdempotentParameterMismatchException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public IdempotentParameterMismatchException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeActivationsPaginator {
    public IPaginatedEnumerable`1<DescribeActivationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Activation> ActivationList { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeActivationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Activation> get_ActivationList();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeAssociationExecutionsPaginator {
    public IPaginatedEnumerable`1<DescribeAssociationExecutionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AssociationExecution> AssociationExecutions { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeAssociationExecutionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<AssociationExecution> get_AssociationExecutions();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeAssociationExecutionTargetsPaginator {
    public IPaginatedEnumerable`1<DescribeAssociationExecutionTargetsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AssociationExecutionTarget> AssociationExecutionTargets { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeAssociationExecutionTargetsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<AssociationExecutionTarget> get_AssociationExecutionTargets();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeAutomationExecutionsPaginator {
    public IPaginatedEnumerable`1<DescribeAutomationExecutionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AutomationExecutionMetadata> AutomationExecutionMetadataList { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeAutomationExecutionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<AutomationExecutionMetadata> get_AutomationExecutionMetadataList();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeAutomationStepExecutionsPaginator {
    public IPaginatedEnumerable`1<DescribeAutomationStepExecutionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<StepExecution> StepExecutions { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeAutomationStepExecutionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<StepExecution> get_StepExecutions();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeAvailablePatchesPaginator {
    public IPaginatedEnumerable`1<DescribeAvailablePatchesResponse> Responses { get; }
    public IPaginatedEnumerable`1<Patch> Patches { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeAvailablePatchesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Patch> get_Patches();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeEffectiveInstanceAssociationsPaginator {
    public IPaginatedEnumerable`1<DescribeEffectiveInstanceAssociationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstanceAssociation> Associations { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeEffectiveInstanceAssociationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<InstanceAssociation> get_Associations();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeEffectivePatchesForPatchBaselinePaginator {
    public IPaginatedEnumerable`1<DescribeEffectivePatchesForPatchBaselineResponse> Responses { get; }
    public IPaginatedEnumerable`1<EffectivePatch> EffectivePatches { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeEffectivePatchesForPatchBaselineResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<EffectivePatch> get_EffectivePatches();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeInstanceAssociationsStatusPaginator {
    public IPaginatedEnumerable`1<DescribeInstanceAssociationsStatusResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstanceAssociationStatusInfo> InstanceAssociationStatusInfos { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeInstanceAssociationsStatusResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<InstanceAssociationStatusInfo> get_InstanceAssociationStatusInfos();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeInstanceInformationPaginator {
    public IPaginatedEnumerable`1<DescribeInstanceInformationResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstanceInformation> InstanceInformationList { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeInstanceInformationResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<InstanceInformation> get_InstanceInformationList();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeInstancePatchesPaginator {
    public IPaginatedEnumerable`1<DescribeInstancePatchesResponse> Responses { get; }
    public IPaginatedEnumerable`1<PatchComplianceData> Patches { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeInstancePatchesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<PatchComplianceData> get_Patches();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeInstancePatchStatesForPatchGroupPaginator {
    public IPaginatedEnumerable`1<DescribeInstancePatchStatesForPatchGroupResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstancePatchState> InstancePatchStates { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeInstancePatchStatesForPatchGroupResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<InstancePatchState> get_InstancePatchStates();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeInstancePatchStatesPaginator {
    public IPaginatedEnumerable`1<DescribeInstancePatchStatesResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstancePatchState> InstancePatchStates { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeInstancePatchStatesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<InstancePatchState> get_InstancePatchStates();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeInstancePropertiesPaginator {
    public IPaginatedEnumerable`1<DescribeInstancePropertiesResponse> Responses { get; }
    public IPaginatedEnumerable`1<InstanceProperty> InstanceProperties { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeInstancePropertiesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<InstanceProperty> get_InstanceProperties();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeInventoryDeletionsPaginator {
    public IPaginatedEnumerable`1<DescribeInventoryDeletionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<InventoryDeletionStatusItem> InventoryDeletions { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeInventoryDeletionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<InventoryDeletionStatusItem> get_InventoryDeletions();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeMaintenanceWindowExecutionsPaginator {
    public IPaginatedEnumerable`1<DescribeMaintenanceWindowExecutionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<MaintenanceWindowExecution> WindowExecutions { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeMaintenanceWindowExecutionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<MaintenanceWindowExecution> get_WindowExecutions();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeMaintenanceWindowExecutionTaskInvocationsPaginator {
    public IPaginatedEnumerable`1<DescribeMaintenanceWindowExecutionTaskInvocationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<MaintenanceWindowExecutionTaskInvocationIdentity> WindowExecutionTaskInvocationIdentities { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeMaintenanceWindowExecutionTaskInvocationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<MaintenanceWindowExecutionTaskInvocationIdentity> get_WindowExecutionTaskInvocationIdentities();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeMaintenanceWindowExecutionTasksPaginator {
    public IPaginatedEnumerable`1<DescribeMaintenanceWindowExecutionTasksResponse> Responses { get; }
    public IPaginatedEnumerable`1<MaintenanceWindowExecutionTaskIdentity> WindowExecutionTaskIdentities { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeMaintenanceWindowExecutionTasksResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<MaintenanceWindowExecutionTaskIdentity> get_WindowExecutionTaskIdentities();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeMaintenanceWindowSchedulePaginator {
    public IPaginatedEnumerable`1<DescribeMaintenanceWindowScheduleResponse> Responses { get; }
    public IPaginatedEnumerable`1<ScheduledWindowExecution> ScheduledWindowExecutions { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeMaintenanceWindowScheduleResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ScheduledWindowExecution> get_ScheduledWindowExecutions();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeMaintenanceWindowsForTargetPaginator {
    public IPaginatedEnumerable`1<DescribeMaintenanceWindowsForTargetResponse> Responses { get; }
    public IPaginatedEnumerable`1<MaintenanceWindowIdentityForTarget> WindowIdentities { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeMaintenanceWindowsForTargetResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<MaintenanceWindowIdentityForTarget> get_WindowIdentities();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeMaintenanceWindowsPaginator {
    public IPaginatedEnumerable`1<DescribeMaintenanceWindowsResponse> Responses { get; }
    public IPaginatedEnumerable`1<MaintenanceWindowIdentity> WindowIdentities { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeMaintenanceWindowsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<MaintenanceWindowIdentity> get_WindowIdentities();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeMaintenanceWindowTargetsPaginator {
    public IPaginatedEnumerable`1<DescribeMaintenanceWindowTargetsResponse> Responses { get; }
    public IPaginatedEnumerable`1<MaintenanceWindowTarget> Targets { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeMaintenanceWindowTargetsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<MaintenanceWindowTarget> get_Targets();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeMaintenanceWindowTasksPaginator {
    public IPaginatedEnumerable`1<DescribeMaintenanceWindowTasksResponse> Responses { get; }
    public IPaginatedEnumerable`1<MaintenanceWindowTask> Tasks { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeMaintenanceWindowTasksResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<MaintenanceWindowTask> get_Tasks();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeOpsItemsPaginator {
    public IPaginatedEnumerable`1<DescribeOpsItemsResponse> Responses { get; }
    public IPaginatedEnumerable`1<OpsItemSummary> OpsItemSummaries { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeOpsItemsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<OpsItemSummary> get_OpsItemSummaries();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeParametersPaginator {
    public IPaginatedEnumerable`1<DescribeParametersResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeParametersResponse> get_Responses();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribePatchBaselinesPaginator {
    public IPaginatedEnumerable`1<DescribePatchBaselinesResponse> Responses { get; }
    public IPaginatedEnumerable`1<PatchBaselineIdentity> BaselineIdentities { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribePatchBaselinesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<PatchBaselineIdentity> get_BaselineIdentities();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribePatchGroupsPaginator {
    public IPaginatedEnumerable`1<DescribePatchGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<PatchGroupPatchBaselineMapping> Mappings { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribePatchGroupsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<PatchGroupPatchBaselineMapping> get_Mappings();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribePatchPropertiesPaginator {
    public IPaginatedEnumerable`1<DescribePatchPropertiesResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribePatchPropertiesResponse> get_Responses();
}
public interface Amazon.SimpleSystemsManagement.Model.IDescribeSessionsPaginator {
    public IPaginatedEnumerable`1<DescribeSessionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Session> Sessions { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeSessionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Session> get_Sessions();
}
public interface Amazon.SimpleSystemsManagement.Model.IGetInventoryPaginator {
    public IPaginatedEnumerable`1<GetInventoryResponse> Responses { get; }
    public IPaginatedEnumerable`1<InventoryResultEntity> Entities { get; }
    public abstract virtual IPaginatedEnumerable`1<GetInventoryResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<InventoryResultEntity> get_Entities();
}
public interface Amazon.SimpleSystemsManagement.Model.IGetInventorySchemaPaginator {
    public IPaginatedEnumerable`1<GetInventorySchemaResponse> Responses { get; }
    public IPaginatedEnumerable`1<InventoryItemSchema> Schemas { get; }
    public abstract virtual IPaginatedEnumerable`1<GetInventorySchemaResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<InventoryItemSchema> get_Schemas();
}
public interface Amazon.SimpleSystemsManagement.Model.IGetOpsSummaryPaginator {
    public IPaginatedEnumerable`1<GetOpsSummaryResponse> Responses { get; }
    public IPaginatedEnumerable`1<OpsEntity> Entities { get; }
    public abstract virtual IPaginatedEnumerable`1<GetOpsSummaryResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<OpsEntity> get_Entities();
}
public interface Amazon.SimpleSystemsManagement.Model.IGetParameterHistoryPaginator {
    public IPaginatedEnumerable`1<GetParameterHistoryResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<GetParameterHistoryResponse> get_Responses();
}
public interface Amazon.SimpleSystemsManagement.Model.IGetParametersByPathPaginator {
    public IPaginatedEnumerable`1<GetParametersByPathResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<GetParametersByPathResponse> get_Responses();
}
public interface Amazon.SimpleSystemsManagement.Model.IGetResourcePoliciesPaginator {
    public IPaginatedEnumerable`1<GetResourcePoliciesResponse> Responses { get; }
    public IPaginatedEnumerable`1<GetResourcePoliciesResponseEntry> Policies { get; }
    public abstract virtual IPaginatedEnumerable`1<GetResourcePoliciesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<GetResourcePoliciesResponseEntry> get_Policies();
}
public interface Amazon.SimpleSystemsManagement.Model.IListAssociationsPaginator {
    public IPaginatedEnumerable`1<ListAssociationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Association> Associations { get; }
    public abstract virtual IPaginatedEnumerable`1<ListAssociationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Association> get_Associations();
}
public interface Amazon.SimpleSystemsManagement.Model.IListAssociationVersionsPaginator {
    public IPaginatedEnumerable`1<ListAssociationVersionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AssociationVersionInfo> AssociationVersions { get; }
    public abstract virtual IPaginatedEnumerable`1<ListAssociationVersionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<AssociationVersionInfo> get_AssociationVersions();
}
public interface Amazon.SimpleSystemsManagement.Model.IListCommandInvocationsPaginator {
    public IPaginatedEnumerable`1<ListCommandInvocationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<CommandInvocation> CommandInvocations { get; }
    public abstract virtual IPaginatedEnumerable`1<ListCommandInvocationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<CommandInvocation> get_CommandInvocations();
}
public interface Amazon.SimpleSystemsManagement.Model.IListCommandsPaginator {
    public IPaginatedEnumerable`1<ListCommandsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Command> Commands { get; }
    public abstract virtual IPaginatedEnumerable`1<ListCommandsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Command> get_Commands();
}
public interface Amazon.SimpleSystemsManagement.Model.IListComplianceItemsPaginator {
    public IPaginatedEnumerable`1<ListComplianceItemsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ComplianceItem> ComplianceItems { get; }
    public abstract virtual IPaginatedEnumerable`1<ListComplianceItemsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ComplianceItem> get_ComplianceItems();
}
public interface Amazon.SimpleSystemsManagement.Model.IListComplianceSummariesPaginator {
    public IPaginatedEnumerable`1<ListComplianceSummariesResponse> Responses { get; }
    public IPaginatedEnumerable`1<ComplianceSummaryItem> ComplianceSummaryItems { get; }
    public abstract virtual IPaginatedEnumerable`1<ListComplianceSummariesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ComplianceSummaryItem> get_ComplianceSummaryItems();
}
public interface Amazon.SimpleSystemsManagement.Model.IListDocumentsPaginator {
    public IPaginatedEnumerable`1<ListDocumentsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DocumentIdentifier> DocumentIdentifiers { get; }
    public abstract virtual IPaginatedEnumerable`1<ListDocumentsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<DocumentIdentifier> get_DocumentIdentifiers();
}
public interface Amazon.SimpleSystemsManagement.Model.IListDocumentVersionsPaginator {
    public IPaginatedEnumerable`1<ListDocumentVersionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DocumentVersionInfo> DocumentVersions { get; }
    public abstract virtual IPaginatedEnumerable`1<ListDocumentVersionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<DocumentVersionInfo> get_DocumentVersions();
}
public interface Amazon.SimpleSystemsManagement.Model.IListOpsItemEventsPaginator {
    public IPaginatedEnumerable`1<ListOpsItemEventsResponse> Responses { get; }
    public IPaginatedEnumerable`1<OpsItemEventSummary> Summaries { get; }
    public abstract virtual IPaginatedEnumerable`1<ListOpsItemEventsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<OpsItemEventSummary> get_Summaries();
}
public interface Amazon.SimpleSystemsManagement.Model.IListOpsItemRelatedItemsPaginator {
    public IPaginatedEnumerable`1<ListOpsItemRelatedItemsResponse> Responses { get; }
    public IPaginatedEnumerable`1<OpsItemRelatedItemSummary> Summaries { get; }
    public abstract virtual IPaginatedEnumerable`1<ListOpsItemRelatedItemsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<OpsItemRelatedItemSummary> get_Summaries();
}
public interface Amazon.SimpleSystemsManagement.Model.IListOpsMetadataPaginator {
    public IPaginatedEnumerable`1<ListOpsMetadataResponse> Responses { get; }
    public IPaginatedEnumerable`1<OpsMetadata> OpsMetadataList { get; }
    public abstract virtual IPaginatedEnumerable`1<ListOpsMetadataResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<OpsMetadata> get_OpsMetadataList();
}
public interface Amazon.SimpleSystemsManagement.Model.IListResourceComplianceSummariesPaginator {
    public IPaginatedEnumerable`1<ListResourceComplianceSummariesResponse> Responses { get; }
    public IPaginatedEnumerable`1<ResourceComplianceSummaryItem> ResourceComplianceSummaryItems { get; }
    public abstract virtual IPaginatedEnumerable`1<ListResourceComplianceSummariesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ResourceComplianceSummaryItem> get_ResourceComplianceSummaryItems();
}
public interface Amazon.SimpleSystemsManagement.Model.IListResourceDataSyncPaginator {
    public IPaginatedEnumerable`1<ListResourceDataSyncResponse> Responses { get; }
    public IPaginatedEnumerable`1<ResourceDataSyncItem> ResourceDataSyncItems { get; }
    public abstract virtual IPaginatedEnumerable`1<ListResourceDataSyncResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ResourceDataSyncItem> get_ResourceDataSyncItems();
}
public class Amazon.SimpleSystemsManagement.Model.IncompatiblePolicyException : AmazonSimpleSystemsManagementException {
    public IncompatiblePolicyException(string message);
    public IncompatiblePolicyException(string message, Exception innerException);
    public IncompatiblePolicyException(Exception innerException);
    public IncompatiblePolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public IncompatiblePolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InstanceAggregatedAssociationOverview : object {
    private string _detailedStatus;
    private Dictionary`2<string, int> _instanceAssociationStatusAggregatedCount;
    public string DetailedStatus { get; public set; }
    public Dictionary`2<string, int> InstanceAssociationStatusAggregatedCount { get; public set; }
    public string get_DetailedStatus();
    public void set_DetailedStatus(string value);
    internal bool IsSetDetailedStatus();
    public Dictionary`2<string, int> get_InstanceAssociationStatusAggregatedCount();
    public void set_InstanceAssociationStatusAggregatedCount(Dictionary`2<string, int> value);
    internal bool IsSetInstanceAssociationStatusAggregatedCount();
}
public class Amazon.SimpleSystemsManagement.Model.InstanceAssociation : object {
    private string _associationId;
    private string _associationVersion;
    private string _content;
    private string _instanceId;
    public string AssociationId { get; public set; }
    public string AssociationVersion { get; public set; }
    [AWSPropertyAttribute]
public string Content { get; public set; }
    public string InstanceId { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_AssociationVersion();
    public void set_AssociationVersion(string value);
    internal bool IsSetAssociationVersion();
    public string get_Content();
    public void set_Content(string value);
    internal bool IsSetContent();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.SimpleSystemsManagement.Model.InstanceAssociationOutputLocation : object {
    private S3OutputLocation _s3Location;
    public S3OutputLocation S3Location { get; public set; }
    public S3OutputLocation get_S3Location();
    public void set_S3Location(S3OutputLocation value);
    internal bool IsSetS3Location();
}
public class Amazon.SimpleSystemsManagement.Model.InstanceAssociationOutputUrl : object {
    private S3OutputUrl _s3OutputUrl;
    public S3OutputUrl S3OutputUrl { get; public set; }
    public S3OutputUrl get_S3OutputUrl();
    public void set_S3OutputUrl(S3OutputUrl value);
    internal bool IsSetS3OutputUrl();
}
public class Amazon.SimpleSystemsManagement.Model.InstanceAssociationStatusInfo : object {
    private string _associationId;
    private string _associationName;
    private string _associationVersion;
    private string _detailedStatus;
    private string _documentVersion;
    private string _errorCode;
    private Nullable`1<DateTime> _executionDate;
    private string _executionSummary;
    private string _instanceId;
    private string _name;
    private InstanceAssociationOutputUrl _outputUrl;
    private string _status;
    public string AssociationId { get; public set; }
    public string AssociationName { get; public set; }
    public string AssociationVersion { get; public set; }
    public string DetailedStatus { get; public set; }
    public string DocumentVersion { get; public set; }
    [AWSPropertyAttribute]
public string ErrorCode { get; public set; }
    public Nullable`1<DateTime> ExecutionDate { get; public set; }
    [AWSPropertyAttribute]
public string ExecutionSummary { get; public set; }
    public string InstanceId { get; public set; }
    public string Name { get; public set; }
    public InstanceAssociationOutputUrl OutputUrl { get; public set; }
    public string Status { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_AssociationName();
    public void set_AssociationName(string value);
    internal bool IsSetAssociationName();
    public string get_AssociationVersion();
    public void set_AssociationVersion(string value);
    internal bool IsSetAssociationVersion();
    public string get_DetailedStatus();
    public void set_DetailedStatus(string value);
    internal bool IsSetDetailedStatus();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public string get_ErrorCode();
    public void set_ErrorCode(string value);
    internal bool IsSetErrorCode();
    public Nullable`1<DateTime> get_ExecutionDate();
    public void set_ExecutionDate(Nullable`1<DateTime> value);
    internal bool IsSetExecutionDate();
    public string get_ExecutionSummary();
    public void set_ExecutionSummary(string value);
    internal bool IsSetExecutionSummary();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public InstanceAssociationOutputUrl get_OutputUrl();
    public void set_OutputUrl(InstanceAssociationOutputUrl value);
    internal bool IsSetOutputUrl();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.SimpleSystemsManagement.Model.InstanceInformation : object {
    private string _activationId;
    private string _agentVersion;
    private InstanceAggregatedAssociationOverview _associationOverview;
    private string _associationStatus;
    private string _computerName;
    private string _iamRole;
    private string _instanceId;
    private string _ipAddress;
    private Nullable`1<bool> _isLatestVersion;
    private Nullable`1<DateTime> _lastAssociationExecutionDate;
    private Nullable`1<DateTime> _lastPingDateTime;
    private Nullable`1<DateTime> _lastSuccessfulAssociationExecutionDate;
    private string _name;
    private PingStatus _pingStatus;
    private string _platformName;
    private PlatformType _platformType;
    private string _platformVersion;
    private Nullable`1<DateTime> _registrationDate;
    private ResourceType _resourceType;
    private string _sourceId;
    private SourceType _sourceType;
    public string ActivationId { get; public set; }
    public string AgentVersion { get; public set; }
    public InstanceAggregatedAssociationOverview AssociationOverview { get; public set; }
    public string AssociationStatus { get; public set; }
    [AWSPropertyAttribute]
public string ComputerName { get; public set; }
    [AWSPropertyAttribute]
public string IamRole { get; public set; }
    public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public string IPAddress { get; public set; }
    public Nullable`1<bool> IsLatestVersion { get; public set; }
    public Nullable`1<DateTime> LastAssociationExecutionDate { get; public set; }
    public Nullable`1<DateTime> LastPingDateTime { get; public set; }
    public Nullable`1<DateTime> LastSuccessfulAssociationExecutionDate { get; public set; }
    public string Name { get; public set; }
    public PingStatus PingStatus { get; public set; }
    public string PlatformName { get; public set; }
    public PlatformType PlatformType { get; public set; }
    public string PlatformVersion { get; public set; }
    public Nullable`1<DateTime> RegistrationDate { get; public set; }
    public ResourceType ResourceType { get; public set; }
    [AWSPropertyAttribute]
public string SourceId { get; public set; }
    public SourceType SourceType { get; public set; }
    public string get_ActivationId();
    public void set_ActivationId(string value);
    internal bool IsSetActivationId();
    public string get_AgentVersion();
    public void set_AgentVersion(string value);
    internal bool IsSetAgentVersion();
    public InstanceAggregatedAssociationOverview get_AssociationOverview();
    public void set_AssociationOverview(InstanceAggregatedAssociationOverview value);
    internal bool IsSetAssociationOverview();
    public string get_AssociationStatus();
    public void set_AssociationStatus(string value);
    internal bool IsSetAssociationStatus();
    public string get_ComputerName();
    public void set_ComputerName(string value);
    internal bool IsSetComputerName();
    public string get_IamRole();
    public void set_IamRole(string value);
    internal bool IsSetIamRole();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_IPAddress();
    public void set_IPAddress(string value);
    internal bool IsSetIPAddress();
    public Nullable`1<bool> get_IsLatestVersion();
    public void set_IsLatestVersion(Nullable`1<bool> value);
    internal bool IsSetIsLatestVersion();
    public Nullable`1<DateTime> get_LastAssociationExecutionDate();
    public void set_LastAssociationExecutionDate(Nullable`1<DateTime> value);
    internal bool IsSetLastAssociationExecutionDate();
    public Nullable`1<DateTime> get_LastPingDateTime();
    public void set_LastPingDateTime(Nullable`1<DateTime> value);
    internal bool IsSetLastPingDateTime();
    public Nullable`1<DateTime> get_LastSuccessfulAssociationExecutionDate();
    public void set_LastSuccessfulAssociationExecutionDate(Nullable`1<DateTime> value);
    internal bool IsSetLastSuccessfulAssociationExecutionDate();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public PingStatus get_PingStatus();
    public void set_PingStatus(PingStatus value);
    internal bool IsSetPingStatus();
    public string get_PlatformName();
    public void set_PlatformName(string value);
    internal bool IsSetPlatformName();
    public PlatformType get_PlatformType();
    public void set_PlatformType(PlatformType value);
    internal bool IsSetPlatformType();
    public string get_PlatformVersion();
    public void set_PlatformVersion(string value);
    internal bool IsSetPlatformVersion();
    public Nullable`1<DateTime> get_RegistrationDate();
    public void set_RegistrationDate(Nullable`1<DateTime> value);
    internal bool IsSetRegistrationDate();
    public ResourceType get_ResourceType();
    public void set_ResourceType(ResourceType value);
    internal bool IsSetResourceType();
    public string get_SourceId();
    public void set_SourceId(string value);
    internal bool IsSetSourceId();
    public SourceType get_SourceType();
    public void set_SourceType(SourceType value);
    internal bool IsSetSourceType();
}
public class Amazon.SimpleSystemsManagement.Model.InstanceInformationFilter : object {
    private InstanceInformationFilterKey _key;
    private List`1<string> _valueSet;
    [AWSPropertyAttribute]
public InstanceInformationFilterKey Key { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ValueSet { get; public set; }
    public InstanceInformationFilterKey get_Key();
    public void set_Key(InstanceInformationFilterKey value);
    internal bool IsSetKey();
    public List`1<string> get_ValueSet();
    public void set_ValueSet(List`1<string> value);
    internal bool IsSetValueSet();
}
public class Amazon.SimpleSystemsManagement.Model.InstanceInformationStringFilter : object {
    private string _key;
    private List`1<string> _values;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Values { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.SimpleSystemsManagement.Model.InstancePatchState : object {
    private string _baselineId;
    private Nullable`1<int> _criticalNonCompliantCount;
    private Nullable`1<int> _failedCount;
    private Nullable`1<int> _installedCount;
    private Nullable`1<int> _installedOtherCount;
    private Nullable`1<int> _installedPendingRebootCount;
    private Nullable`1<int> _installedRejectedCount;
    private string _installOverrideList;
    private string _instanceId;
    private Nullable`1<DateTime> _lastNoRebootInstallOperationTime;
    private Nullable`1<int> _missingCount;
    private Nullable`1<int> _notApplicableCount;
    private PatchOperationType _operation;
    private Nullable`1<DateTime> _operationEndTime;
    private Nullable`1<DateTime> _operationStartTime;
    private Nullable`1<int> _otherNonCompliantCount;
    private string _ownerInformation;
    private string _patchGroup;
    private RebootOption _rebootOption;
    private Nullable`1<int> _securityNonCompliantCount;
    private string _snapshotId;
    private Nullable`1<int> _unreportedNotApplicableCount;
    [AWSPropertyAttribute]
public string BaselineId { get; public set; }
    public Nullable`1<int> CriticalNonCompliantCount { get; public set; }
    public Nullable`1<int> FailedCount { get; public set; }
    public Nullable`1<int> InstalledCount { get; public set; }
    public Nullable`1<int> InstalledOtherCount { get; public set; }
    public Nullable`1<int> InstalledPendingRebootCount { get; public set; }
    public Nullable`1<int> InstalledRejectedCount { get; public set; }
    [AWSPropertyAttribute]
public string InstallOverrideList { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    public Nullable`1<DateTime> LastNoRebootInstallOperationTime { get; public set; }
    public Nullable`1<int> MissingCount { get; public set; }
    public Nullable`1<int> NotApplicableCount { get; public set; }
    [AWSPropertyAttribute]
public PatchOperationType Operation { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> OperationEndTime { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> OperationStartTime { get; public set; }
    public Nullable`1<int> OtherNonCompliantCount { get; public set; }
    [AWSPropertyAttribute]
public string OwnerInformation { get; public set; }
    [AWSPropertyAttribute]
public string PatchGroup { get; public set; }
    public RebootOption RebootOption { get; public set; }
    public Nullable`1<int> SecurityNonCompliantCount { get; public set; }
    [AWSPropertyAttribute]
public string SnapshotId { get; public set; }
    public Nullable`1<int> UnreportedNotApplicableCount { get; public set; }
    public string get_BaselineId();
    public void set_BaselineId(string value);
    internal bool IsSetBaselineId();
    public Nullable`1<int> get_CriticalNonCompliantCount();
    public void set_CriticalNonCompliantCount(Nullable`1<int> value);
    internal bool IsSetCriticalNonCompliantCount();
    public Nullable`1<int> get_FailedCount();
    public void set_FailedCount(Nullable`1<int> value);
    internal bool IsSetFailedCount();
    public Nullable`1<int> get_InstalledCount();
    public void set_InstalledCount(Nullable`1<int> value);
    internal bool IsSetInstalledCount();
    public Nullable`1<int> get_InstalledOtherCount();
    public void set_InstalledOtherCount(Nullable`1<int> value);
    internal bool IsSetInstalledOtherCount();
    public Nullable`1<int> get_InstalledPendingRebootCount();
    public void set_InstalledPendingRebootCount(Nullable`1<int> value);
    internal bool IsSetInstalledPendingRebootCount();
    public Nullable`1<int> get_InstalledRejectedCount();
    public void set_InstalledRejectedCount(Nullable`1<int> value);
    internal bool IsSetInstalledRejectedCount();
    public string get_InstallOverrideList();
    public void set_InstallOverrideList(string value);
    internal bool IsSetInstallOverrideList();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public Nullable`1<DateTime> get_LastNoRebootInstallOperationTime();
    public void set_LastNoRebootInstallOperationTime(Nullable`1<DateTime> value);
    internal bool IsSetLastNoRebootInstallOperationTime();
    public Nullable`1<int> get_MissingCount();
    public void set_MissingCount(Nullable`1<int> value);
    internal bool IsSetMissingCount();
    public Nullable`1<int> get_NotApplicableCount();
    public void set_NotApplicableCount(Nullable`1<int> value);
    internal bool IsSetNotApplicableCount();
    public PatchOperationType get_Operation();
    public void set_Operation(PatchOperationType value);
    internal bool IsSetOperation();
    public Nullable`1<DateTime> get_OperationEndTime();
    public void set_OperationEndTime(Nullable`1<DateTime> value);
    internal bool IsSetOperationEndTime();
    public Nullable`1<DateTime> get_OperationStartTime();
    public void set_OperationStartTime(Nullable`1<DateTime> value);
    internal bool IsSetOperationStartTime();
    public Nullable`1<int> get_OtherNonCompliantCount();
    public void set_OtherNonCompliantCount(Nullable`1<int> value);
    internal bool IsSetOtherNonCompliantCount();
    public string get_OwnerInformation();
    public void set_OwnerInformation(string value);
    internal bool IsSetOwnerInformation();
    public string get_PatchGroup();
    public void set_PatchGroup(string value);
    internal bool IsSetPatchGroup();
    public RebootOption get_RebootOption();
    public void set_RebootOption(RebootOption value);
    internal bool IsSetRebootOption();
    public Nullable`1<int> get_SecurityNonCompliantCount();
    public void set_SecurityNonCompliantCount(Nullable`1<int> value);
    internal bool IsSetSecurityNonCompliantCount();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public Nullable`1<int> get_UnreportedNotApplicableCount();
    public void set_UnreportedNotApplicableCount(Nullable`1<int> value);
    internal bool IsSetUnreportedNotApplicableCount();
}
public class Amazon.SimpleSystemsManagement.Model.InstancePatchStateFilter : object {
    private string _key;
    private InstancePatchStateOperatorType _type;
    private List`1<string> _values;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public InstancePatchStateOperatorType Type { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Values { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public InstancePatchStateOperatorType get_Type();
    public void set_Type(InstancePatchStateOperatorType value);
    internal bool IsSetType();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.SimpleSystemsManagement.Model.InstanceProperty : object {
    private string _activationId;
    private string _agentVersion;
    private string _architecture;
    private InstanceAggregatedAssociationOverview _associationOverview;
    private string _associationStatus;
    private string _computerName;
    private string _iamRole;
    private string _instanceId;
    private string _instanceRole;
    private string _instanceState;
    private string _instanceType;
    private string _ipAddress;
    private string _keyName;
    private Nullable`1<DateTime> _lastAssociationExecutionDate;
    private Nullable`1<DateTime> _lastPingDateTime;
    private Nullable`1<DateTime> _lastSuccessfulAssociationExecutionDate;
    private Nullable`1<DateTime> _launchTime;
    private string _name;
    private PingStatus _pingStatus;
    private string _platformName;
    private PlatformType _platformType;
    private string _platformVersion;
    private Nullable`1<DateTime> _registrationDate;
    private string _resourceType;
    private string _sourceId;
    private SourceType _sourceType;
    public string ActivationId { get; public set; }
    public string AgentVersion { get; public set; }
    [AWSPropertyAttribute]
public string Architecture { get; public set; }
    public InstanceAggregatedAssociationOverview AssociationOverview { get; public set; }
    public string AssociationStatus { get; public set; }
    [AWSPropertyAttribute]
public string ComputerName { get; public set; }
    [AWSPropertyAttribute]
public string IamRole { get; public set; }
    public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public string InstanceRole { get; public set; }
    [AWSPropertyAttribute]
public string InstanceState { get; public set; }
    [AWSPropertyAttribute]
public string InstanceType { get; public set; }
    [AWSPropertyAttribute]
public string IPAddress { get; public set; }
    [AWSPropertyAttribute]
public string KeyName { get; public set; }
    public Nullable`1<DateTime> LastAssociationExecutionDate { get; public set; }
    public Nullable`1<DateTime> LastPingDateTime { get; public set; }
    public Nullable`1<DateTime> LastSuccessfulAssociationExecutionDate { get; public set; }
    public Nullable`1<DateTime> LaunchTime { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public PingStatus PingStatus { get; public set; }
    [AWSPropertyAttribute]
public string PlatformName { get; public set; }
    public PlatformType PlatformType { get; public set; }
    [AWSPropertyAttribute]
public string PlatformVersion { get; public set; }
    public Nullable`1<DateTime> RegistrationDate { get; public set; }
    public string ResourceType { get; public set; }
    [AWSPropertyAttribute]
public string SourceId { get; public set; }
    public SourceType SourceType { get; public set; }
    public string get_ActivationId();
    public void set_ActivationId(string value);
    internal bool IsSetActivationId();
    public string get_AgentVersion();
    public void set_AgentVersion(string value);
    internal bool IsSetAgentVersion();
    public string get_Architecture();
    public void set_Architecture(string value);
    internal bool IsSetArchitecture();
    public InstanceAggregatedAssociationOverview get_AssociationOverview();
    public void set_AssociationOverview(InstanceAggregatedAssociationOverview value);
    internal bool IsSetAssociationOverview();
    public string get_AssociationStatus();
    public void set_AssociationStatus(string value);
    internal bool IsSetAssociationStatus();
    public string get_ComputerName();
    public void set_ComputerName(string value);
    internal bool IsSetComputerName();
    public string get_IamRole();
    public void set_IamRole(string value);
    internal bool IsSetIamRole();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_InstanceRole();
    public void set_InstanceRole(string value);
    internal bool IsSetInstanceRole();
    public string get_InstanceState();
    public void set_InstanceState(string value);
    internal bool IsSetInstanceState();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public string get_IPAddress();
    public void set_IPAddress(string value);
    internal bool IsSetIPAddress();
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
    public Nullable`1<DateTime> get_LastAssociationExecutionDate();
    public void set_LastAssociationExecutionDate(Nullable`1<DateTime> value);
    internal bool IsSetLastAssociationExecutionDate();
    public Nullable`1<DateTime> get_LastPingDateTime();
    public void set_LastPingDateTime(Nullable`1<DateTime> value);
    internal bool IsSetLastPingDateTime();
    public Nullable`1<DateTime> get_LastSuccessfulAssociationExecutionDate();
    public void set_LastSuccessfulAssociationExecutionDate(Nullable`1<DateTime> value);
    internal bool IsSetLastSuccessfulAssociationExecutionDate();
    public Nullable`1<DateTime> get_LaunchTime();
    public void set_LaunchTime(Nullable`1<DateTime> value);
    internal bool IsSetLaunchTime();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public PingStatus get_PingStatus();
    public void set_PingStatus(PingStatus value);
    internal bool IsSetPingStatus();
    public string get_PlatformName();
    public void set_PlatformName(string value);
    internal bool IsSetPlatformName();
    public PlatformType get_PlatformType();
    public void set_PlatformType(PlatformType value);
    internal bool IsSetPlatformType();
    public string get_PlatformVersion();
    public void set_PlatformVersion(string value);
    internal bool IsSetPlatformVersion();
    public Nullable`1<DateTime> get_RegistrationDate();
    public void set_RegistrationDate(Nullable`1<DateTime> value);
    internal bool IsSetRegistrationDate();
    public string get_ResourceType();
    public void set_ResourceType(string value);
    internal bool IsSetResourceType();
    public string get_SourceId();
    public void set_SourceId(string value);
    internal bool IsSetSourceId();
    public SourceType get_SourceType();
    public void set_SourceType(SourceType value);
    internal bool IsSetSourceType();
}
public class Amazon.SimpleSystemsManagement.Model.InstancePropertyFilter : object {
    private InstancePropertyFilterKey _key;
    private List`1<string> _valueSet;
    [AWSPropertyAttribute]
public InstancePropertyFilterKey Key { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ValueSet { get; public set; }
    public InstancePropertyFilterKey get_Key();
    public void set_Key(InstancePropertyFilterKey value);
    internal bool IsSetKey();
    public List`1<string> get_ValueSet();
    public void set_ValueSet(List`1<string> value);
    internal bool IsSetValueSet();
}
public class Amazon.SimpleSystemsManagement.Model.InstancePropertyStringFilter : object {
    private string _key;
    private InstancePropertyFilterOperator _operator;
    private List`1<string> _values;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    public InstancePropertyFilterOperator Operator { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Values { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public InstancePropertyFilterOperator get_Operator();
    public void set_Operator(InstancePropertyFilterOperator value);
    internal bool IsSetOperator();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AccountSharingInfoUnmarshaller : object {
    private static AccountSharingInfoUnmarshaller _instance;
    public static AccountSharingInfoUnmarshaller Instance { get; }
    private static AccountSharingInfoUnmarshaller();
    private sealed virtual override AccountSharingInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.AccountSharingInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccountSharingInfo Unmarshall(JsonUnmarshallerContext context);
    public static AccountSharingInfoUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ActivationUnmarshaller : object {
    private static ActivationUnmarshaller _instance;
    public static ActivationUnmarshaller Instance { get; }
    private static ActivationUnmarshaller();
    private sealed virtual override Activation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.Activation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Activation Unmarshall(JsonUnmarshallerContext context);
    public static ActivationUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AddTagsToResourceRequestMarshaller : object {
    private static AddTagsToResourceRequestMarshaller _instance;
    public static AddTagsToResourceRequestMarshaller Instance { get; }
    private static AddTagsToResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddTagsToResourceRequest publicRequest);
    internal static AddTagsToResourceRequestMarshaller GetInstance();
    public static AddTagsToResourceRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AddTagsToResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AddTagsToResourceResponseUnmarshaller _instance;
    public static AddTagsToResourceResponseUnmarshaller Instance { get; }
    private static AddTagsToResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddTagsToResourceResponseUnmarshaller GetInstance();
    public static AddTagsToResourceResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AlarmConfigurationMarshaller : object {
    public static AlarmConfigurationMarshaller Instance;
    private static AlarmConfigurationMarshaller();
    public sealed virtual void Marshall(AlarmConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AlarmConfigurationUnmarshaller : object {
    private static AlarmConfigurationUnmarshaller _instance;
    public static AlarmConfigurationUnmarshaller Instance { get; }
    private static AlarmConfigurationUnmarshaller();
    private sealed virtual override AlarmConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.AlarmConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AlarmConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static AlarmConfigurationUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AlarmMarshaller : object {
    public static AlarmMarshaller Instance;
    private static AlarmMarshaller();
    public sealed virtual void Marshall(Alarm requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AlarmStateInformationUnmarshaller : object {
    private static AlarmStateInformationUnmarshaller _instance;
    public static AlarmStateInformationUnmarshaller Instance { get; }
    private static AlarmStateInformationUnmarshaller();
    private sealed virtual override AlarmStateInformation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.AlarmStateInformation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AlarmStateInformation Unmarshall(JsonUnmarshallerContext context);
    public static AlarmStateInformationUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AlarmUnmarshaller : object {
    private static AlarmUnmarshaller _instance;
    public static AlarmUnmarshaller Instance { get; }
    private static AlarmUnmarshaller();
    private sealed virtual override Alarm Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.Alarm,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Alarm Unmarshall(JsonUnmarshallerContext context);
    public static AlarmUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AlreadyExistsExceptionUnmarshaller : object {
    private static AlreadyExistsExceptionUnmarshaller _instance;
    public static AlreadyExistsExceptionUnmarshaller Instance { get; }
    private static AlreadyExistsExceptionUnmarshaller();
    public sealed virtual AlreadyExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AlreadyExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AssociatedInstancesExceptionUnmarshaller : object {
    private static AssociatedInstancesExceptionUnmarshaller _instance;
    public static AssociatedInstancesExceptionUnmarshaller Instance { get; }
    private static AssociatedInstancesExceptionUnmarshaller();
    public sealed virtual AssociatedInstancesException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AssociatedInstancesException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AssociatedInstancesExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AssociateOpsItemRelatedItemRequestMarshaller : object {
    private static AssociateOpsItemRelatedItemRequestMarshaller _instance;
    public static AssociateOpsItemRelatedItemRequestMarshaller Instance { get; }
    private static AssociateOpsItemRelatedItemRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateOpsItemRelatedItemRequest publicRequest);
    internal static AssociateOpsItemRelatedItemRequestMarshaller GetInstance();
    public static AssociateOpsItemRelatedItemRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AssociateOpsItemRelatedItemResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AssociateOpsItemRelatedItemResponseUnmarshaller _instance;
    public static AssociateOpsItemRelatedItemResponseUnmarshaller Instance { get; }
    private static AssociateOpsItemRelatedItemResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateOpsItemRelatedItemResponseUnmarshaller GetInstance();
    public static AssociateOpsItemRelatedItemResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AssociationAlreadyExistsExceptionUnmarshaller : object {
    private static AssociationAlreadyExistsExceptionUnmarshaller _instance;
    public static AssociationAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static AssociationAlreadyExistsExceptionUnmarshaller();
    public sealed virtual AssociationAlreadyExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AssociationAlreadyExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AssociationAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AssociationDescriptionUnmarshaller : object {
    private static AssociationDescriptionUnmarshaller _instance;
    public static AssociationDescriptionUnmarshaller Instance { get; }
    private static AssociationDescriptionUnmarshaller();
    private sealed virtual override AssociationDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.AssociationDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AssociationDescription Unmarshall(JsonUnmarshallerContext context);
    public static AssociationDescriptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AssociationDoesNotExistExceptionUnmarshaller : object {
    private static AssociationDoesNotExistExceptionUnmarshaller _instance;
    public static AssociationDoesNotExistExceptionUnmarshaller Instance { get; }
    private static AssociationDoesNotExistExceptionUnmarshaller();
    public sealed virtual AssociationDoesNotExistException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AssociationDoesNotExistException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AssociationDoesNotExistExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AssociationExecutionDoesNotExistExceptionUnmarshaller : object {
    private static AssociationExecutionDoesNotExistExceptionUnmarshaller _instance;
    public static AssociationExecutionDoesNotExistExceptionUnmarshaller Instance { get; }
    private static AssociationExecutionDoesNotExistExceptionUnmarshaller();
    public sealed virtual AssociationExecutionDoesNotExistException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AssociationExecutionDoesNotExistException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AssociationExecutionDoesNotExistExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AssociationExecutionFilterMarshaller : object {
    public static AssociationExecutionFilterMarshaller Instance;
    private static AssociationExecutionFilterMarshaller();
    public sealed virtual void Marshall(AssociationExecutionFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AssociationExecutionTargetsFilterMarshaller : object {
    public static AssociationExecutionTargetsFilterMarshaller Instance;
    private static AssociationExecutionTargetsFilterMarshaller();
    public sealed virtual void Marshall(AssociationExecutionTargetsFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AssociationExecutionTargetUnmarshaller : object {
    private static AssociationExecutionTargetUnmarshaller _instance;
    public static AssociationExecutionTargetUnmarshaller Instance { get; }
    private static AssociationExecutionTargetUnmarshaller();
    private sealed virtual override AssociationExecutionTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.AssociationExecutionTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AssociationExecutionTarget Unmarshall(JsonUnmarshallerContext context);
    public static AssociationExecutionTargetUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AssociationExecutionUnmarshaller : object {
    private static AssociationExecutionUnmarshaller _instance;
    public static AssociationExecutionUnmarshaller Instance { get; }
    private static AssociationExecutionUnmarshaller();
    private sealed virtual override AssociationExecution Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.AssociationExecution,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AssociationExecution Unmarshall(JsonUnmarshallerContext context);
    public static AssociationExecutionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AssociationFilterMarshaller : object {
    public static AssociationFilterMarshaller Instance;
    private static AssociationFilterMarshaller();
    public sealed virtual void Marshall(AssociationFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AssociationLimitExceededExceptionUnmarshaller : object {
    private static AssociationLimitExceededExceptionUnmarshaller _instance;
    public static AssociationLimitExceededExceptionUnmarshaller Instance { get; }
    private static AssociationLimitExceededExceptionUnmarshaller();
    public sealed virtual AssociationLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AssociationLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AssociationLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AssociationOverviewUnmarshaller : object {
    private static AssociationOverviewUnmarshaller _instance;
    public static AssociationOverviewUnmarshaller Instance { get; }
    private static AssociationOverviewUnmarshaller();
    private sealed virtual override AssociationOverview Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.AssociationOverview,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AssociationOverview Unmarshall(JsonUnmarshallerContext context);
    public static AssociationOverviewUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AssociationStatusMarshaller : object {
    public static AssociationStatusMarshaller Instance;
    private static AssociationStatusMarshaller();
    public sealed virtual void Marshall(AssociationStatus requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AssociationStatusUnmarshaller : object {
    private static AssociationStatusUnmarshaller _instance;
    public static AssociationStatusUnmarshaller Instance { get; }
    private static AssociationStatusUnmarshaller();
    private sealed virtual override AssociationStatus Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.AssociationStatus,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AssociationStatus Unmarshall(JsonUnmarshallerContext context);
    public static AssociationStatusUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AssociationUnmarshaller : object {
    private static AssociationUnmarshaller _instance;
    public static AssociationUnmarshaller Instance { get; }
    private static AssociationUnmarshaller();
    private sealed virtual override Association Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.Association,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Association Unmarshall(JsonUnmarshallerContext context);
    public static AssociationUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AssociationVersionInfoUnmarshaller : object {
    private static AssociationVersionInfoUnmarshaller _instance;
    public static AssociationVersionInfoUnmarshaller Instance { get; }
    private static AssociationVersionInfoUnmarshaller();
    private sealed virtual override AssociationVersionInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.AssociationVersionInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AssociationVersionInfo Unmarshall(JsonUnmarshallerContext context);
    public static AssociationVersionInfoUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AssociationVersionLimitExceededExceptionUnmarshaller : object {
    private static AssociationVersionLimitExceededExceptionUnmarshaller _instance;
    public static AssociationVersionLimitExceededExceptionUnmarshaller Instance { get; }
    private static AssociationVersionLimitExceededExceptionUnmarshaller();
    public sealed virtual AssociationVersionLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AssociationVersionLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AssociationVersionLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AttachmentContentUnmarshaller : object {
    private static AttachmentContentUnmarshaller _instance;
    public static AttachmentContentUnmarshaller Instance { get; }
    private static AttachmentContentUnmarshaller();
    private sealed virtual override AttachmentContent Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.AttachmentContent,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AttachmentContent Unmarshall(JsonUnmarshallerContext context);
    public static AttachmentContentUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AttachmentInformationUnmarshaller : object {
    private static AttachmentInformationUnmarshaller _instance;
    public static AttachmentInformationUnmarshaller Instance { get; }
    private static AttachmentInformationUnmarshaller();
    private sealed virtual override AttachmentInformation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.AttachmentInformation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AttachmentInformation Unmarshall(JsonUnmarshallerContext context);
    public static AttachmentInformationUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AttachmentsSourceMarshaller : object {
    public static AttachmentsSourceMarshaller Instance;
    private static AttachmentsSourceMarshaller();
    public sealed virtual void Marshall(AttachmentsSource requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AutomationDefinitionNotApprovedExceptionUnmarshaller : object {
    private static AutomationDefinitionNotApprovedExceptionUnmarshaller _instance;
    public static AutomationDefinitionNotApprovedExceptionUnmarshaller Instance { get; }
    private static AutomationDefinitionNotApprovedExceptionUnmarshaller();
    public sealed virtual AutomationDefinitionNotApprovedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AutomationDefinitionNotApprovedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AutomationDefinitionNotApprovedExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AutomationDefinitionNotFoundExceptionUnmarshaller : object {
    private static AutomationDefinitionNotFoundExceptionUnmarshaller _instance;
    public static AutomationDefinitionNotFoundExceptionUnmarshaller Instance { get; }
    private static AutomationDefinitionNotFoundExceptionUnmarshaller();
    public sealed virtual AutomationDefinitionNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AutomationDefinitionNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AutomationDefinitionNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AutomationDefinitionVersionNotFoundExceptionUnmarshaller : object {
    private static AutomationDefinitionVersionNotFoundExceptionUnmarshaller _instance;
    public static AutomationDefinitionVersionNotFoundExceptionUnmarshaller Instance { get; }
    private static AutomationDefinitionVersionNotFoundExceptionUnmarshaller();
    public sealed virtual AutomationDefinitionVersionNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AutomationDefinitionVersionNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AutomationDefinitionVersionNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AutomationExecutionFilterMarshaller : object {
    public static AutomationExecutionFilterMarshaller Instance;
    private static AutomationExecutionFilterMarshaller();
    public sealed virtual void Marshall(AutomationExecutionFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AutomationExecutionLimitExceededExceptionUnmarshaller : object {
    private static AutomationExecutionLimitExceededExceptionUnmarshaller _instance;
    public static AutomationExecutionLimitExceededExceptionUnmarshaller Instance { get; }
    private static AutomationExecutionLimitExceededExceptionUnmarshaller();
    public sealed virtual AutomationExecutionLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AutomationExecutionLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AutomationExecutionLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AutomationExecutionMetadataUnmarshaller : object {
    private static AutomationExecutionMetadataUnmarshaller _instance;
    public static AutomationExecutionMetadataUnmarshaller Instance { get; }
    private static AutomationExecutionMetadataUnmarshaller();
    private sealed virtual override AutomationExecutionMetadata Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.AutomationExecutionMetadata,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AutomationExecutionMetadata Unmarshall(JsonUnmarshallerContext context);
    public static AutomationExecutionMetadataUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AutomationExecutionNotFoundExceptionUnmarshaller : object {
    private static AutomationExecutionNotFoundExceptionUnmarshaller _instance;
    public static AutomationExecutionNotFoundExceptionUnmarshaller Instance { get; }
    private static AutomationExecutionNotFoundExceptionUnmarshaller();
    public sealed virtual AutomationExecutionNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AutomationExecutionNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AutomationExecutionNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AutomationExecutionUnmarshaller : object {
    private static AutomationExecutionUnmarshaller _instance;
    public static AutomationExecutionUnmarshaller Instance { get; }
    private static AutomationExecutionUnmarshaller();
    private sealed virtual override AutomationExecution Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.AutomationExecution,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AutomationExecution Unmarshall(JsonUnmarshallerContext context);
    public static AutomationExecutionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.AutomationStepNotFoundExceptionUnmarshaller : object {
    private static AutomationStepNotFoundExceptionUnmarshaller _instance;
    public static AutomationStepNotFoundExceptionUnmarshaller Instance { get; }
    private static AutomationStepNotFoundExceptionUnmarshaller();
    public sealed virtual AutomationStepNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AutomationStepNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AutomationStepNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.BaselineOverrideMarshaller : object {
    public static BaselineOverrideMarshaller Instance;
    private static BaselineOverrideMarshaller();
    public sealed virtual void Marshall(BaselineOverride requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CancelCommandRequestMarshaller : object {
    private static CancelCommandRequestMarshaller _instance;
    public static CancelCommandRequestMarshaller Instance { get; }
    private static CancelCommandRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelCommandRequest publicRequest);
    internal static CancelCommandRequestMarshaller GetInstance();
    public static CancelCommandRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CancelCommandResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CancelCommandResponseUnmarshaller _instance;
    public static CancelCommandResponseUnmarshaller Instance { get; }
    private static CancelCommandResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelCommandResponseUnmarshaller GetInstance();
    public static CancelCommandResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CancelMaintenanceWindowExecutionRequestMarshaller : object {
    private static CancelMaintenanceWindowExecutionRequestMarshaller _instance;
    public static CancelMaintenanceWindowExecutionRequestMarshaller Instance { get; }
    private static CancelMaintenanceWindowExecutionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelMaintenanceWindowExecutionRequest publicRequest);
    internal static CancelMaintenanceWindowExecutionRequestMarshaller GetInstance();
    public static CancelMaintenanceWindowExecutionRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CancelMaintenanceWindowExecutionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CancelMaintenanceWindowExecutionResponseUnmarshaller _instance;
    public static CancelMaintenanceWindowExecutionResponseUnmarshaller Instance { get; }
    private static CancelMaintenanceWindowExecutionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelMaintenanceWindowExecutionResponseUnmarshaller GetInstance();
    public static CancelMaintenanceWindowExecutionResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CloudWatchOutputConfigMarshaller : object {
    public static CloudWatchOutputConfigMarshaller Instance;
    private static CloudWatchOutputConfigMarshaller();
    public sealed virtual void Marshall(CloudWatchOutputConfig requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CloudWatchOutputConfigUnmarshaller : object {
    private static CloudWatchOutputConfigUnmarshaller _instance;
    public static CloudWatchOutputConfigUnmarshaller Instance { get; }
    private static CloudWatchOutputConfigUnmarshaller();
    private sealed virtual override CloudWatchOutputConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.CloudWatchOutputConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CloudWatchOutputConfig Unmarshall(JsonUnmarshallerContext context);
    public static CloudWatchOutputConfigUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CommandFilterMarshaller : object {
    public static CommandFilterMarshaller Instance;
    private static CommandFilterMarshaller();
    public sealed virtual void Marshall(CommandFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CommandInvocationUnmarshaller : object {
    private static CommandInvocationUnmarshaller _instance;
    public static CommandInvocationUnmarshaller Instance { get; }
    private static CommandInvocationUnmarshaller();
    private sealed virtual override CommandInvocation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.CommandInvocation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CommandInvocation Unmarshall(JsonUnmarshallerContext context);
    public static CommandInvocationUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CommandPluginUnmarshaller : object {
    private static CommandPluginUnmarshaller _instance;
    public static CommandPluginUnmarshaller Instance { get; }
    private static CommandPluginUnmarshaller();
    private sealed virtual override CommandPlugin Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.CommandPlugin,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CommandPlugin Unmarshall(JsonUnmarshallerContext context);
    public static CommandPluginUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CommandUnmarshaller : object {
    private static CommandUnmarshaller _instance;
    public static CommandUnmarshaller Instance { get; }
    private static CommandUnmarshaller();
    private sealed virtual override Command Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.Command,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Command Unmarshall(JsonUnmarshallerContext context);
    public static CommandUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ComplianceExecutionSummaryMarshaller : object {
    public static ComplianceExecutionSummaryMarshaller Instance;
    private static ComplianceExecutionSummaryMarshaller();
    public sealed virtual void Marshall(ComplianceExecutionSummary requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ComplianceExecutionSummaryUnmarshaller : object {
    private static ComplianceExecutionSummaryUnmarshaller _instance;
    public static ComplianceExecutionSummaryUnmarshaller Instance { get; }
    private static ComplianceExecutionSummaryUnmarshaller();
    private sealed virtual override ComplianceExecutionSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.ComplianceExecutionSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ComplianceExecutionSummary Unmarshall(JsonUnmarshallerContext context);
    public static ComplianceExecutionSummaryUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ComplianceItemEntryMarshaller : object {
    public static ComplianceItemEntryMarshaller Instance;
    private static ComplianceItemEntryMarshaller();
    public sealed virtual void Marshall(ComplianceItemEntry requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ComplianceItemUnmarshaller : object {
    private static ComplianceItemUnmarshaller _instance;
    public static ComplianceItemUnmarshaller Instance { get; }
    private static ComplianceItemUnmarshaller();
    private sealed virtual override ComplianceItem Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.ComplianceItem,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ComplianceItem Unmarshall(JsonUnmarshallerContext context);
    public static ComplianceItemUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ComplianceStringFilterMarshaller : object {
    public static ComplianceStringFilterMarshaller Instance;
    private static ComplianceStringFilterMarshaller();
    public sealed virtual void Marshall(ComplianceStringFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ComplianceSummaryItemUnmarshaller : object {
    private static ComplianceSummaryItemUnmarshaller _instance;
    public static ComplianceSummaryItemUnmarshaller Instance { get; }
    private static ComplianceSummaryItemUnmarshaller();
    private sealed virtual override ComplianceSummaryItem Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.ComplianceSummaryItem,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ComplianceSummaryItem Unmarshall(JsonUnmarshallerContext context);
    public static ComplianceSummaryItemUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ComplianceTypeCountLimitExceededExceptionUnmarshaller : object {
    private static ComplianceTypeCountLimitExceededExceptionUnmarshaller _instance;
    public static ComplianceTypeCountLimitExceededExceptionUnmarshaller Instance { get; }
    private static ComplianceTypeCountLimitExceededExceptionUnmarshaller();
    public sealed virtual ComplianceTypeCountLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ComplianceTypeCountLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ComplianceTypeCountLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CompliantSummaryUnmarshaller : object {
    private static CompliantSummaryUnmarshaller _instance;
    public static CompliantSummaryUnmarshaller Instance { get; }
    private static CompliantSummaryUnmarshaller();
    private sealed virtual override CompliantSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.CompliantSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CompliantSummary Unmarshall(JsonUnmarshallerContext context);
    public static CompliantSummaryUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CreateActivationRequestMarshaller : object {
    private static CreateActivationRequestMarshaller _instance;
    public static CreateActivationRequestMarshaller Instance { get; }
    private static CreateActivationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateActivationRequest publicRequest);
    internal static CreateActivationRequestMarshaller GetInstance();
    public static CreateActivationRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CreateActivationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateActivationResponseUnmarshaller _instance;
    public static CreateActivationResponseUnmarshaller Instance { get; }
    private static CreateActivationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateActivationResponseUnmarshaller GetInstance();
    public static CreateActivationResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CreateAssociationBatchRequestEntryMarshaller : object {
    public static CreateAssociationBatchRequestEntryMarshaller Instance;
    private static CreateAssociationBatchRequestEntryMarshaller();
    public sealed virtual void Marshall(CreateAssociationBatchRequestEntry requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CreateAssociationBatchRequestEntryUnmarshaller : object {
    private static CreateAssociationBatchRequestEntryUnmarshaller _instance;
    public static CreateAssociationBatchRequestEntryUnmarshaller Instance { get; }
    private static CreateAssociationBatchRequestEntryUnmarshaller();
    private sealed virtual override CreateAssociationBatchRequestEntry Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.CreateAssociationBatchRequestEntry,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CreateAssociationBatchRequestEntry Unmarshall(JsonUnmarshallerContext context);
    public static CreateAssociationBatchRequestEntryUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CreateAssociationBatchRequestMarshaller : object {
    private static CreateAssociationBatchRequestMarshaller _instance;
    public static CreateAssociationBatchRequestMarshaller Instance { get; }
    private static CreateAssociationBatchRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateAssociationBatchRequest publicRequest);
    internal static CreateAssociationBatchRequestMarshaller GetInstance();
    public static CreateAssociationBatchRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CreateAssociationBatchResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateAssociationBatchResponseUnmarshaller _instance;
    public static CreateAssociationBatchResponseUnmarshaller Instance { get; }
    private static CreateAssociationBatchResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateAssociationBatchResponseUnmarshaller GetInstance();
    public static CreateAssociationBatchResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CreateAssociationRequestMarshaller : object {
    private static CreateAssociationRequestMarshaller _instance;
    public static CreateAssociationRequestMarshaller Instance { get; }
    private static CreateAssociationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateAssociationRequest publicRequest);
    internal static CreateAssociationRequestMarshaller GetInstance();
    public static CreateAssociationRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CreateAssociationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateAssociationResponseUnmarshaller _instance;
    public static CreateAssociationResponseUnmarshaller Instance { get; }
    private static CreateAssociationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateAssociationResponseUnmarshaller GetInstance();
    public static CreateAssociationResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CreateDocumentRequestMarshaller : object {
    private static CreateDocumentRequestMarshaller _instance;
    public static CreateDocumentRequestMarshaller Instance { get; }
    private static CreateDocumentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDocumentRequest publicRequest);
    internal static CreateDocumentRequestMarshaller GetInstance();
    public static CreateDocumentRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CreateDocumentResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateDocumentResponseUnmarshaller _instance;
    public static CreateDocumentResponseUnmarshaller Instance { get; }
    private static CreateDocumentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDocumentResponseUnmarshaller GetInstance();
    public static CreateDocumentResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CreateMaintenanceWindowRequestMarshaller : object {
    private static CreateMaintenanceWindowRequestMarshaller _instance;
    public static CreateMaintenanceWindowRequestMarshaller Instance { get; }
    private static CreateMaintenanceWindowRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateMaintenanceWindowRequest publicRequest);
    internal static CreateMaintenanceWindowRequestMarshaller GetInstance();
    public static CreateMaintenanceWindowRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CreateMaintenanceWindowResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateMaintenanceWindowResponseUnmarshaller _instance;
    public static CreateMaintenanceWindowResponseUnmarshaller Instance { get; }
    private static CreateMaintenanceWindowResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateMaintenanceWindowResponseUnmarshaller GetInstance();
    public static CreateMaintenanceWindowResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CreateOpsItemRequestMarshaller : object {
    private static CreateOpsItemRequestMarshaller _instance;
    public static CreateOpsItemRequestMarshaller Instance { get; }
    private static CreateOpsItemRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateOpsItemRequest publicRequest);
    internal static CreateOpsItemRequestMarshaller GetInstance();
    public static CreateOpsItemRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CreateOpsItemResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateOpsItemResponseUnmarshaller _instance;
    public static CreateOpsItemResponseUnmarshaller Instance { get; }
    private static CreateOpsItemResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateOpsItemResponseUnmarshaller GetInstance();
    public static CreateOpsItemResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CreateOpsMetadataRequestMarshaller : object {
    private static CreateOpsMetadataRequestMarshaller _instance;
    public static CreateOpsMetadataRequestMarshaller Instance { get; }
    private static CreateOpsMetadataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateOpsMetadataRequest publicRequest);
    internal static CreateOpsMetadataRequestMarshaller GetInstance();
    public static CreateOpsMetadataRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CreateOpsMetadataResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateOpsMetadataResponseUnmarshaller _instance;
    public static CreateOpsMetadataResponseUnmarshaller Instance { get; }
    private static CreateOpsMetadataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateOpsMetadataResponseUnmarshaller GetInstance();
    public static CreateOpsMetadataResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CreatePatchBaselineRequestMarshaller : object {
    private static CreatePatchBaselineRequestMarshaller _instance;
    public static CreatePatchBaselineRequestMarshaller Instance { get; }
    private static CreatePatchBaselineRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreatePatchBaselineRequest publicRequest);
    internal static CreatePatchBaselineRequestMarshaller GetInstance();
    public static CreatePatchBaselineRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CreatePatchBaselineResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreatePatchBaselineResponseUnmarshaller _instance;
    public static CreatePatchBaselineResponseUnmarshaller Instance { get; }
    private static CreatePatchBaselineResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreatePatchBaselineResponseUnmarshaller GetInstance();
    public static CreatePatchBaselineResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CreateResourceDataSyncRequestMarshaller : object {
    private static CreateResourceDataSyncRequestMarshaller _instance;
    public static CreateResourceDataSyncRequestMarshaller Instance { get; }
    private static CreateResourceDataSyncRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateResourceDataSyncRequest publicRequest);
    internal static CreateResourceDataSyncRequestMarshaller GetInstance();
    public static CreateResourceDataSyncRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CreateResourceDataSyncResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateResourceDataSyncResponseUnmarshaller _instance;
    public static CreateResourceDataSyncResponseUnmarshaller Instance { get; }
    private static CreateResourceDataSyncResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateResourceDataSyncResponseUnmarshaller GetInstance();
    public static CreateResourceDataSyncResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.CustomSchemaCountLimitExceededExceptionUnmarshaller : object {
    private static CustomSchemaCountLimitExceededExceptionUnmarshaller _instance;
    public static CustomSchemaCountLimitExceededExceptionUnmarshaller Instance { get; }
    private static CustomSchemaCountLimitExceededExceptionUnmarshaller();
    public sealed virtual CustomSchemaCountLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual CustomSchemaCountLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static CustomSchemaCountLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeleteActivationRequestMarshaller : object {
    private static DeleteActivationRequestMarshaller _instance;
    public static DeleteActivationRequestMarshaller Instance { get; }
    private static DeleteActivationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteActivationRequest publicRequest);
    internal static DeleteActivationRequestMarshaller GetInstance();
    public static DeleteActivationRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeleteActivationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteActivationResponseUnmarshaller _instance;
    public static DeleteActivationResponseUnmarshaller Instance { get; }
    private static DeleteActivationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteActivationResponseUnmarshaller GetInstance();
    public static DeleteActivationResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeleteAssociationRequestMarshaller : object {
    private static DeleteAssociationRequestMarshaller _instance;
    public static DeleteAssociationRequestMarshaller Instance { get; }
    private static DeleteAssociationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteAssociationRequest publicRequest);
    internal static DeleteAssociationRequestMarshaller GetInstance();
    public static DeleteAssociationRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeleteAssociationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteAssociationResponseUnmarshaller _instance;
    public static DeleteAssociationResponseUnmarshaller Instance { get; }
    private static DeleteAssociationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteAssociationResponseUnmarshaller GetInstance();
    public static DeleteAssociationResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeleteDocumentRequestMarshaller : object {
    private static DeleteDocumentRequestMarshaller _instance;
    public static DeleteDocumentRequestMarshaller Instance { get; }
    private static DeleteDocumentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDocumentRequest publicRequest);
    internal static DeleteDocumentRequestMarshaller GetInstance();
    public static DeleteDocumentRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeleteDocumentResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteDocumentResponseUnmarshaller _instance;
    public static DeleteDocumentResponseUnmarshaller Instance { get; }
    private static DeleteDocumentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDocumentResponseUnmarshaller GetInstance();
    public static DeleteDocumentResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeleteInventoryRequestMarshaller : object {
    private static DeleteInventoryRequestMarshaller _instance;
    public static DeleteInventoryRequestMarshaller Instance { get; }
    private static DeleteInventoryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteInventoryRequest publicRequest);
    internal static DeleteInventoryRequestMarshaller GetInstance();
    public static DeleteInventoryRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeleteInventoryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteInventoryResponseUnmarshaller _instance;
    public static DeleteInventoryResponseUnmarshaller Instance { get; }
    private static DeleteInventoryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteInventoryResponseUnmarshaller GetInstance();
    public static DeleteInventoryResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeleteMaintenanceWindowRequestMarshaller : object {
    private static DeleteMaintenanceWindowRequestMarshaller _instance;
    public static DeleteMaintenanceWindowRequestMarshaller Instance { get; }
    private static DeleteMaintenanceWindowRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteMaintenanceWindowRequest publicRequest);
    internal static DeleteMaintenanceWindowRequestMarshaller GetInstance();
    public static DeleteMaintenanceWindowRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeleteMaintenanceWindowResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteMaintenanceWindowResponseUnmarshaller _instance;
    public static DeleteMaintenanceWindowResponseUnmarshaller Instance { get; }
    private static DeleteMaintenanceWindowResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteMaintenanceWindowResponseUnmarshaller GetInstance();
    public static DeleteMaintenanceWindowResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeleteOpsItemRequestMarshaller : object {
    private static DeleteOpsItemRequestMarshaller _instance;
    public static DeleteOpsItemRequestMarshaller Instance { get; }
    private static DeleteOpsItemRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteOpsItemRequest publicRequest);
    internal static DeleteOpsItemRequestMarshaller GetInstance();
    public static DeleteOpsItemRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeleteOpsItemResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteOpsItemResponseUnmarshaller _instance;
    public static DeleteOpsItemResponseUnmarshaller Instance { get; }
    private static DeleteOpsItemResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteOpsItemResponseUnmarshaller GetInstance();
    public static DeleteOpsItemResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeleteOpsMetadataRequestMarshaller : object {
    private static DeleteOpsMetadataRequestMarshaller _instance;
    public static DeleteOpsMetadataRequestMarshaller Instance { get; }
    private static DeleteOpsMetadataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteOpsMetadataRequest publicRequest);
    internal static DeleteOpsMetadataRequestMarshaller GetInstance();
    public static DeleteOpsMetadataRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeleteOpsMetadataResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteOpsMetadataResponseUnmarshaller _instance;
    public static DeleteOpsMetadataResponseUnmarshaller Instance { get; }
    private static DeleteOpsMetadataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteOpsMetadataResponseUnmarshaller GetInstance();
    public static DeleteOpsMetadataResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeleteParameterRequestMarshaller : object {
    private static DeleteParameterRequestMarshaller _instance;
    public static DeleteParameterRequestMarshaller Instance { get; }
    private static DeleteParameterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteParameterRequest publicRequest);
    internal static DeleteParameterRequestMarshaller GetInstance();
    public static DeleteParameterRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeleteParameterResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteParameterResponseUnmarshaller _instance;
    public static DeleteParameterResponseUnmarshaller Instance { get; }
    private static DeleteParameterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteParameterResponseUnmarshaller GetInstance();
    public static DeleteParameterResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeleteParametersRequestMarshaller : object {
    private static DeleteParametersRequestMarshaller _instance;
    public static DeleteParametersRequestMarshaller Instance { get; }
    private static DeleteParametersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteParametersRequest publicRequest);
    internal static DeleteParametersRequestMarshaller GetInstance();
    public static DeleteParametersRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeleteParametersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteParametersResponseUnmarshaller _instance;
    public static DeleteParametersResponseUnmarshaller Instance { get; }
    private static DeleteParametersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteParametersResponseUnmarshaller GetInstance();
    public static DeleteParametersResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeletePatchBaselineRequestMarshaller : object {
    private static DeletePatchBaselineRequestMarshaller _instance;
    public static DeletePatchBaselineRequestMarshaller Instance { get; }
    private static DeletePatchBaselineRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeletePatchBaselineRequest publicRequest);
    internal static DeletePatchBaselineRequestMarshaller GetInstance();
    public static DeletePatchBaselineRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeletePatchBaselineResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeletePatchBaselineResponseUnmarshaller _instance;
    public static DeletePatchBaselineResponseUnmarshaller Instance { get; }
    private static DeletePatchBaselineResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeletePatchBaselineResponseUnmarshaller GetInstance();
    public static DeletePatchBaselineResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeleteResourceDataSyncRequestMarshaller : object {
    private static DeleteResourceDataSyncRequestMarshaller _instance;
    public static DeleteResourceDataSyncRequestMarshaller Instance { get; }
    private static DeleteResourceDataSyncRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteResourceDataSyncRequest publicRequest);
    internal static DeleteResourceDataSyncRequestMarshaller GetInstance();
    public static DeleteResourceDataSyncRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeleteResourceDataSyncResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteResourceDataSyncResponseUnmarshaller _instance;
    public static DeleteResourceDataSyncResponseUnmarshaller Instance { get; }
    private static DeleteResourceDataSyncResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteResourceDataSyncResponseUnmarshaller GetInstance();
    public static DeleteResourceDataSyncResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller : object {
    private static DeleteResourcePolicyRequestMarshaller _instance;
    public static DeleteResourcePolicyRequestMarshaller Instance { get; }
    private static DeleteResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteResourcePolicyRequest publicRequest);
    internal static DeleteResourcePolicyRequestMarshaller GetInstance();
    public static DeleteResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteResourcePolicyResponseUnmarshaller _instance;
    public static DeleteResourcePolicyResponseUnmarshaller Instance { get; }
    private static DeleteResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteResourcePolicyResponseUnmarshaller GetInstance();
    public static DeleteResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeregisterManagedInstanceRequestMarshaller : object {
    private static DeregisterManagedInstanceRequestMarshaller _instance;
    public static DeregisterManagedInstanceRequestMarshaller Instance { get; }
    private static DeregisterManagedInstanceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeregisterManagedInstanceRequest publicRequest);
    internal static DeregisterManagedInstanceRequestMarshaller GetInstance();
    public static DeregisterManagedInstanceRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeregisterManagedInstanceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeregisterManagedInstanceResponseUnmarshaller _instance;
    public static DeregisterManagedInstanceResponseUnmarshaller Instance { get; }
    private static DeregisterManagedInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeregisterManagedInstanceResponseUnmarshaller GetInstance();
    public static DeregisterManagedInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeregisterPatchBaselineForPatchGroupRequestMarshaller : object {
    private static DeregisterPatchBaselineForPatchGroupRequestMarshaller _instance;
    public static DeregisterPatchBaselineForPatchGroupRequestMarshaller Instance { get; }
    private static DeregisterPatchBaselineForPatchGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeregisterPatchBaselineForPatchGroupRequest publicRequest);
    internal static DeregisterPatchBaselineForPatchGroupRequestMarshaller GetInstance();
    public static DeregisterPatchBaselineForPatchGroupRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeregisterPatchBaselineForPatchGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeregisterPatchBaselineForPatchGroupResponseUnmarshaller _instance;
    public static DeregisterPatchBaselineForPatchGroupResponseUnmarshaller Instance { get; }
    private static DeregisterPatchBaselineForPatchGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeregisterPatchBaselineForPatchGroupResponseUnmarshaller GetInstance();
    public static DeregisterPatchBaselineForPatchGroupResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeregisterTargetFromMaintenanceWindowRequestMarshaller : object {
    private static DeregisterTargetFromMaintenanceWindowRequestMarshaller _instance;
    public static DeregisterTargetFromMaintenanceWindowRequestMarshaller Instance { get; }
    private static DeregisterTargetFromMaintenanceWindowRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeregisterTargetFromMaintenanceWindowRequest publicRequest);
    internal static DeregisterTargetFromMaintenanceWindowRequestMarshaller GetInstance();
    public static DeregisterTargetFromMaintenanceWindowRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeregisterTargetFromMaintenanceWindowResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeregisterTargetFromMaintenanceWindowResponseUnmarshaller _instance;
    public static DeregisterTargetFromMaintenanceWindowResponseUnmarshaller Instance { get; }
    private static DeregisterTargetFromMaintenanceWindowResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeregisterTargetFromMaintenanceWindowResponseUnmarshaller GetInstance();
    public static DeregisterTargetFromMaintenanceWindowResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeregisterTaskFromMaintenanceWindowRequestMarshaller : object {
    private static DeregisterTaskFromMaintenanceWindowRequestMarshaller _instance;
    public static DeregisterTaskFromMaintenanceWindowRequestMarshaller Instance { get; }
    private static DeregisterTaskFromMaintenanceWindowRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeregisterTaskFromMaintenanceWindowRequest publicRequest);
    internal static DeregisterTaskFromMaintenanceWindowRequestMarshaller GetInstance();
    public static DeregisterTaskFromMaintenanceWindowRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DeregisterTaskFromMaintenanceWindowResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeregisterTaskFromMaintenanceWindowResponseUnmarshaller _instance;
    public static DeregisterTaskFromMaintenanceWindowResponseUnmarshaller Instance { get; }
    private static DeregisterTaskFromMaintenanceWindowResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeregisterTaskFromMaintenanceWindowResponseUnmarshaller GetInstance();
    public static DeregisterTaskFromMaintenanceWindowResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeActivationsFilterMarshaller : object {
    public static DescribeActivationsFilterMarshaller Instance;
    private static DescribeActivationsFilterMarshaller();
    public sealed virtual void Marshall(DescribeActivationsFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeActivationsRequestMarshaller : object {
    private static DescribeActivationsRequestMarshaller _instance;
    public static DescribeActivationsRequestMarshaller Instance { get; }
    private static DescribeActivationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeActivationsRequest publicRequest);
    internal static DescribeActivationsRequestMarshaller GetInstance();
    public static DescribeActivationsRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeActivationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeActivationsResponseUnmarshaller _instance;
    public static DescribeActivationsResponseUnmarshaller Instance { get; }
    private static DescribeActivationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeActivationsResponseUnmarshaller GetInstance();
    public static DescribeActivationsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeAssociationExecutionsRequestMarshaller : object {
    private static DescribeAssociationExecutionsRequestMarshaller _instance;
    public static DescribeAssociationExecutionsRequestMarshaller Instance { get; }
    private static DescribeAssociationExecutionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAssociationExecutionsRequest publicRequest);
    internal static DescribeAssociationExecutionsRequestMarshaller GetInstance();
    public static DescribeAssociationExecutionsRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeAssociationExecutionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeAssociationExecutionsResponseUnmarshaller _instance;
    public static DescribeAssociationExecutionsResponseUnmarshaller Instance { get; }
    private static DescribeAssociationExecutionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAssociationExecutionsResponseUnmarshaller GetInstance();
    public static DescribeAssociationExecutionsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeAssociationExecutionTargetsRequestMarshaller : object {
    private static DescribeAssociationExecutionTargetsRequestMarshaller _instance;
    public static DescribeAssociationExecutionTargetsRequestMarshaller Instance { get; }
    private static DescribeAssociationExecutionTargetsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAssociationExecutionTargetsRequest publicRequest);
    internal static DescribeAssociationExecutionTargetsRequestMarshaller GetInstance();
    public static DescribeAssociationExecutionTargetsRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeAssociationExecutionTargetsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeAssociationExecutionTargetsResponseUnmarshaller _instance;
    public static DescribeAssociationExecutionTargetsResponseUnmarshaller Instance { get; }
    private static DescribeAssociationExecutionTargetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAssociationExecutionTargetsResponseUnmarshaller GetInstance();
    public static DescribeAssociationExecutionTargetsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeAssociationRequestMarshaller : object {
    private static DescribeAssociationRequestMarshaller _instance;
    public static DescribeAssociationRequestMarshaller Instance { get; }
    private static DescribeAssociationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAssociationRequest publicRequest);
    internal static DescribeAssociationRequestMarshaller GetInstance();
    public static DescribeAssociationRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeAssociationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeAssociationResponseUnmarshaller _instance;
    public static DescribeAssociationResponseUnmarshaller Instance { get; }
    private static DescribeAssociationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAssociationResponseUnmarshaller GetInstance();
    public static DescribeAssociationResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeAutomationExecutionsRequestMarshaller : object {
    private static DescribeAutomationExecutionsRequestMarshaller _instance;
    public static DescribeAutomationExecutionsRequestMarshaller Instance { get; }
    private static DescribeAutomationExecutionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAutomationExecutionsRequest publicRequest);
    internal static DescribeAutomationExecutionsRequestMarshaller GetInstance();
    public static DescribeAutomationExecutionsRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeAutomationExecutionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeAutomationExecutionsResponseUnmarshaller _instance;
    public static DescribeAutomationExecutionsResponseUnmarshaller Instance { get; }
    private static DescribeAutomationExecutionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAutomationExecutionsResponseUnmarshaller GetInstance();
    public static DescribeAutomationExecutionsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeAutomationStepExecutionsRequestMarshaller : object {
    private static DescribeAutomationStepExecutionsRequestMarshaller _instance;
    public static DescribeAutomationStepExecutionsRequestMarshaller Instance { get; }
    private static DescribeAutomationStepExecutionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAutomationStepExecutionsRequest publicRequest);
    internal static DescribeAutomationStepExecutionsRequestMarshaller GetInstance();
    public static DescribeAutomationStepExecutionsRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeAutomationStepExecutionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeAutomationStepExecutionsResponseUnmarshaller _instance;
    public static DescribeAutomationStepExecutionsResponseUnmarshaller Instance { get; }
    private static DescribeAutomationStepExecutionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAutomationStepExecutionsResponseUnmarshaller GetInstance();
    public static DescribeAutomationStepExecutionsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeAvailablePatchesRequestMarshaller : object {
    private static DescribeAvailablePatchesRequestMarshaller _instance;
    public static DescribeAvailablePatchesRequestMarshaller Instance { get; }
    private static DescribeAvailablePatchesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAvailablePatchesRequest publicRequest);
    internal static DescribeAvailablePatchesRequestMarshaller GetInstance();
    public static DescribeAvailablePatchesRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeAvailablePatchesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeAvailablePatchesResponseUnmarshaller _instance;
    public static DescribeAvailablePatchesResponseUnmarshaller Instance { get; }
    private static DescribeAvailablePatchesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAvailablePatchesResponseUnmarshaller GetInstance();
    public static DescribeAvailablePatchesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeDocumentPermissionRequestMarshaller : object {
    private static DescribeDocumentPermissionRequestMarshaller _instance;
    public static DescribeDocumentPermissionRequestMarshaller Instance { get; }
    private static DescribeDocumentPermissionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDocumentPermissionRequest publicRequest);
    internal static DescribeDocumentPermissionRequestMarshaller GetInstance();
    public static DescribeDocumentPermissionRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeDocumentPermissionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeDocumentPermissionResponseUnmarshaller _instance;
    public static DescribeDocumentPermissionResponseUnmarshaller Instance { get; }
    private static DescribeDocumentPermissionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDocumentPermissionResponseUnmarshaller GetInstance();
    public static DescribeDocumentPermissionResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeDocumentRequestMarshaller : object {
    private static DescribeDocumentRequestMarshaller _instance;
    public static DescribeDocumentRequestMarshaller Instance { get; }
    private static DescribeDocumentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDocumentRequest publicRequest);
    internal static DescribeDocumentRequestMarshaller GetInstance();
    public static DescribeDocumentRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeDocumentResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeDocumentResponseUnmarshaller _instance;
    public static DescribeDocumentResponseUnmarshaller Instance { get; }
    private static DescribeDocumentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDocumentResponseUnmarshaller GetInstance();
    public static DescribeDocumentResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeEffectiveInstanceAssociationsRequestMarshaller : object {
    private static DescribeEffectiveInstanceAssociationsRequestMarshaller _instance;
    public static DescribeEffectiveInstanceAssociationsRequestMarshaller Instance { get; }
    private static DescribeEffectiveInstanceAssociationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeEffectiveInstanceAssociationsRequest publicRequest);
    internal static DescribeEffectiveInstanceAssociationsRequestMarshaller GetInstance();
    public static DescribeEffectiveInstanceAssociationsRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeEffectiveInstanceAssociationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeEffectiveInstanceAssociationsResponseUnmarshaller _instance;
    public static DescribeEffectiveInstanceAssociationsResponseUnmarshaller Instance { get; }
    private static DescribeEffectiveInstanceAssociationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeEffectiveInstanceAssociationsResponseUnmarshaller GetInstance();
    public static DescribeEffectiveInstanceAssociationsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeEffectivePatchesForPatchBaselineRequestMarshaller : object {
    private static DescribeEffectivePatchesForPatchBaselineRequestMarshaller _instance;
    public static DescribeEffectivePatchesForPatchBaselineRequestMarshaller Instance { get; }
    private static DescribeEffectivePatchesForPatchBaselineRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeEffectivePatchesForPatchBaselineRequest publicRequest);
    internal static DescribeEffectivePatchesForPatchBaselineRequestMarshaller GetInstance();
    public static DescribeEffectivePatchesForPatchBaselineRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeEffectivePatchesForPatchBaselineResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeEffectivePatchesForPatchBaselineResponseUnmarshaller _instance;
    public static DescribeEffectivePatchesForPatchBaselineResponseUnmarshaller Instance { get; }
    private static DescribeEffectivePatchesForPatchBaselineResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeEffectivePatchesForPatchBaselineResponseUnmarshaller GetInstance();
    public static DescribeEffectivePatchesForPatchBaselineResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeInstanceAssociationsStatusRequestMarshaller : object {
    private static DescribeInstanceAssociationsStatusRequestMarshaller _instance;
    public static DescribeInstanceAssociationsStatusRequestMarshaller Instance { get; }
    private static DescribeInstanceAssociationsStatusRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInstanceAssociationsStatusRequest publicRequest);
    internal static DescribeInstanceAssociationsStatusRequestMarshaller GetInstance();
    public static DescribeInstanceAssociationsStatusRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeInstanceAssociationsStatusResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeInstanceAssociationsStatusResponseUnmarshaller _instance;
    public static DescribeInstanceAssociationsStatusResponseUnmarshaller Instance { get; }
    private static DescribeInstanceAssociationsStatusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInstanceAssociationsStatusResponseUnmarshaller GetInstance();
    public static DescribeInstanceAssociationsStatusResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeInstanceInformationRequestMarshaller : object {
    private static DescribeInstanceInformationRequestMarshaller _instance;
    public static DescribeInstanceInformationRequestMarshaller Instance { get; }
    private static DescribeInstanceInformationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInstanceInformationRequest publicRequest);
    internal static DescribeInstanceInformationRequestMarshaller GetInstance();
    public static DescribeInstanceInformationRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeInstanceInformationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeInstanceInformationResponseUnmarshaller _instance;
    public static DescribeInstanceInformationResponseUnmarshaller Instance { get; }
    private static DescribeInstanceInformationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInstanceInformationResponseUnmarshaller GetInstance();
    public static DescribeInstanceInformationResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeInstancePatchesRequestMarshaller : object {
    private static DescribeInstancePatchesRequestMarshaller _instance;
    public static DescribeInstancePatchesRequestMarshaller Instance { get; }
    private static DescribeInstancePatchesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInstancePatchesRequest publicRequest);
    internal static DescribeInstancePatchesRequestMarshaller GetInstance();
    public static DescribeInstancePatchesRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeInstancePatchesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeInstancePatchesResponseUnmarshaller _instance;
    public static DescribeInstancePatchesResponseUnmarshaller Instance { get; }
    private static DescribeInstancePatchesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInstancePatchesResponseUnmarshaller GetInstance();
    public static DescribeInstancePatchesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeInstancePatchStatesForPatchGroupRequestMarshaller : object {
    private static DescribeInstancePatchStatesForPatchGroupRequestMarshaller _instance;
    public static DescribeInstancePatchStatesForPatchGroupRequestMarshaller Instance { get; }
    private static DescribeInstancePatchStatesForPatchGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInstancePatchStatesForPatchGroupRequest publicRequest);
    internal static DescribeInstancePatchStatesForPatchGroupRequestMarshaller GetInstance();
    public static DescribeInstancePatchStatesForPatchGroupRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeInstancePatchStatesForPatchGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeInstancePatchStatesForPatchGroupResponseUnmarshaller _instance;
    public static DescribeInstancePatchStatesForPatchGroupResponseUnmarshaller Instance { get; }
    private static DescribeInstancePatchStatesForPatchGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInstancePatchStatesForPatchGroupResponseUnmarshaller GetInstance();
    public static DescribeInstancePatchStatesForPatchGroupResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeInstancePatchStatesRequestMarshaller : object {
    private static DescribeInstancePatchStatesRequestMarshaller _instance;
    public static DescribeInstancePatchStatesRequestMarshaller Instance { get; }
    private static DescribeInstancePatchStatesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInstancePatchStatesRequest publicRequest);
    internal static DescribeInstancePatchStatesRequestMarshaller GetInstance();
    public static DescribeInstancePatchStatesRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeInstancePatchStatesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeInstancePatchStatesResponseUnmarshaller _instance;
    public static DescribeInstancePatchStatesResponseUnmarshaller Instance { get; }
    private static DescribeInstancePatchStatesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInstancePatchStatesResponseUnmarshaller GetInstance();
    public static DescribeInstancePatchStatesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeInstancePropertiesRequestMarshaller : object {
    private static DescribeInstancePropertiesRequestMarshaller _instance;
    public static DescribeInstancePropertiesRequestMarshaller Instance { get; }
    private static DescribeInstancePropertiesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInstancePropertiesRequest publicRequest);
    internal static DescribeInstancePropertiesRequestMarshaller GetInstance();
    public static DescribeInstancePropertiesRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeInstancePropertiesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeInstancePropertiesResponseUnmarshaller _instance;
    public static DescribeInstancePropertiesResponseUnmarshaller Instance { get; }
    private static DescribeInstancePropertiesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInstancePropertiesResponseUnmarshaller GetInstance();
    public static DescribeInstancePropertiesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeInventoryDeletionsRequestMarshaller : object {
    private static DescribeInventoryDeletionsRequestMarshaller _instance;
    public static DescribeInventoryDeletionsRequestMarshaller Instance { get; }
    private static DescribeInventoryDeletionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInventoryDeletionsRequest publicRequest);
    internal static DescribeInventoryDeletionsRequestMarshaller GetInstance();
    public static DescribeInventoryDeletionsRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeInventoryDeletionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeInventoryDeletionsResponseUnmarshaller _instance;
    public static DescribeInventoryDeletionsResponseUnmarshaller Instance { get; }
    private static DescribeInventoryDeletionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInventoryDeletionsResponseUnmarshaller GetInstance();
    public static DescribeInventoryDeletionsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeMaintenanceWindowExecutionsRequestMarshaller : object {
    private static DescribeMaintenanceWindowExecutionsRequestMarshaller _instance;
    public static DescribeMaintenanceWindowExecutionsRequestMarshaller Instance { get; }
    private static DescribeMaintenanceWindowExecutionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeMaintenanceWindowExecutionsRequest publicRequest);
    internal static DescribeMaintenanceWindowExecutionsRequestMarshaller GetInstance();
    public static DescribeMaintenanceWindowExecutionsRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeMaintenanceWindowExecutionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeMaintenanceWindowExecutionsResponseUnmarshaller _instance;
    public static DescribeMaintenanceWindowExecutionsResponseUnmarshaller Instance { get; }
    private static DescribeMaintenanceWindowExecutionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeMaintenanceWindowExecutionsResponseUnmarshaller GetInstance();
    public static DescribeMaintenanceWindowExecutionsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeMaintenanceWindowExecutionTaskInvocationsRequestMarshaller : object {
    private static DescribeMaintenanceWindowExecutionTaskInvocationsRequestMarshaller _instance;
    public static DescribeMaintenanceWindowExecutionTaskInvocationsRequestMarshaller Instance { get; }
    private static DescribeMaintenanceWindowExecutionTaskInvocationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeMaintenanceWindowExecutionTaskInvocationsRequest publicRequest);
    internal static DescribeMaintenanceWindowExecutionTaskInvocationsRequestMarshaller GetInstance();
    public static DescribeMaintenanceWindowExecutionTaskInvocationsRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeMaintenanceWindowExecutionTaskInvocationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeMaintenanceWindowExecutionTaskInvocationsResponseUnmarshaller _instance;
    public static DescribeMaintenanceWindowExecutionTaskInvocationsResponseUnmarshaller Instance { get; }
    private static DescribeMaintenanceWindowExecutionTaskInvocationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeMaintenanceWindowExecutionTaskInvocationsResponseUnmarshaller GetInstance();
    public static DescribeMaintenanceWindowExecutionTaskInvocationsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeMaintenanceWindowExecutionTasksRequestMarshaller : object {
    private static DescribeMaintenanceWindowExecutionTasksRequestMarshaller _instance;
    public static DescribeMaintenanceWindowExecutionTasksRequestMarshaller Instance { get; }
    private static DescribeMaintenanceWindowExecutionTasksRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeMaintenanceWindowExecutionTasksRequest publicRequest);
    internal static DescribeMaintenanceWindowExecutionTasksRequestMarshaller GetInstance();
    public static DescribeMaintenanceWindowExecutionTasksRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeMaintenanceWindowExecutionTasksResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeMaintenanceWindowExecutionTasksResponseUnmarshaller _instance;
    public static DescribeMaintenanceWindowExecutionTasksResponseUnmarshaller Instance { get; }
    private static DescribeMaintenanceWindowExecutionTasksResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeMaintenanceWindowExecutionTasksResponseUnmarshaller GetInstance();
    public static DescribeMaintenanceWindowExecutionTasksResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeMaintenanceWindowScheduleRequestMarshaller : object {
    private static DescribeMaintenanceWindowScheduleRequestMarshaller _instance;
    public static DescribeMaintenanceWindowScheduleRequestMarshaller Instance { get; }
    private static DescribeMaintenanceWindowScheduleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeMaintenanceWindowScheduleRequest publicRequest);
    internal static DescribeMaintenanceWindowScheduleRequestMarshaller GetInstance();
    public static DescribeMaintenanceWindowScheduleRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeMaintenanceWindowScheduleResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeMaintenanceWindowScheduleResponseUnmarshaller _instance;
    public static DescribeMaintenanceWindowScheduleResponseUnmarshaller Instance { get; }
    private static DescribeMaintenanceWindowScheduleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeMaintenanceWindowScheduleResponseUnmarshaller GetInstance();
    public static DescribeMaintenanceWindowScheduleResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeMaintenanceWindowsForTargetRequestMarshaller : object {
    private static DescribeMaintenanceWindowsForTargetRequestMarshaller _instance;
    public static DescribeMaintenanceWindowsForTargetRequestMarshaller Instance { get; }
    private static DescribeMaintenanceWindowsForTargetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeMaintenanceWindowsForTargetRequest publicRequest);
    internal static DescribeMaintenanceWindowsForTargetRequestMarshaller GetInstance();
    public static DescribeMaintenanceWindowsForTargetRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeMaintenanceWindowsForTargetResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeMaintenanceWindowsForTargetResponseUnmarshaller _instance;
    public static DescribeMaintenanceWindowsForTargetResponseUnmarshaller Instance { get; }
    private static DescribeMaintenanceWindowsForTargetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeMaintenanceWindowsForTargetResponseUnmarshaller GetInstance();
    public static DescribeMaintenanceWindowsForTargetResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeMaintenanceWindowsRequestMarshaller : object {
    private static DescribeMaintenanceWindowsRequestMarshaller _instance;
    public static DescribeMaintenanceWindowsRequestMarshaller Instance { get; }
    private static DescribeMaintenanceWindowsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeMaintenanceWindowsRequest publicRequest);
    internal static DescribeMaintenanceWindowsRequestMarshaller GetInstance();
    public static DescribeMaintenanceWindowsRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeMaintenanceWindowsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeMaintenanceWindowsResponseUnmarshaller _instance;
    public static DescribeMaintenanceWindowsResponseUnmarshaller Instance { get; }
    private static DescribeMaintenanceWindowsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeMaintenanceWindowsResponseUnmarshaller GetInstance();
    public static DescribeMaintenanceWindowsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeMaintenanceWindowTargetsRequestMarshaller : object {
    private static DescribeMaintenanceWindowTargetsRequestMarshaller _instance;
    public static DescribeMaintenanceWindowTargetsRequestMarshaller Instance { get; }
    private static DescribeMaintenanceWindowTargetsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeMaintenanceWindowTargetsRequest publicRequest);
    internal static DescribeMaintenanceWindowTargetsRequestMarshaller GetInstance();
    public static DescribeMaintenanceWindowTargetsRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeMaintenanceWindowTargetsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeMaintenanceWindowTargetsResponseUnmarshaller _instance;
    public static DescribeMaintenanceWindowTargetsResponseUnmarshaller Instance { get; }
    private static DescribeMaintenanceWindowTargetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeMaintenanceWindowTargetsResponseUnmarshaller GetInstance();
    public static DescribeMaintenanceWindowTargetsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeMaintenanceWindowTasksRequestMarshaller : object {
    private static DescribeMaintenanceWindowTasksRequestMarshaller _instance;
    public static DescribeMaintenanceWindowTasksRequestMarshaller Instance { get; }
    private static DescribeMaintenanceWindowTasksRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeMaintenanceWindowTasksRequest publicRequest);
    internal static DescribeMaintenanceWindowTasksRequestMarshaller GetInstance();
    public static DescribeMaintenanceWindowTasksRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeMaintenanceWindowTasksResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeMaintenanceWindowTasksResponseUnmarshaller _instance;
    public static DescribeMaintenanceWindowTasksResponseUnmarshaller Instance { get; }
    private static DescribeMaintenanceWindowTasksResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeMaintenanceWindowTasksResponseUnmarshaller GetInstance();
    public static DescribeMaintenanceWindowTasksResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeOpsItemsRequestMarshaller : object {
    private static DescribeOpsItemsRequestMarshaller _instance;
    public static DescribeOpsItemsRequestMarshaller Instance { get; }
    private static DescribeOpsItemsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeOpsItemsRequest publicRequest);
    internal static DescribeOpsItemsRequestMarshaller GetInstance();
    public static DescribeOpsItemsRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeOpsItemsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeOpsItemsResponseUnmarshaller _instance;
    public static DescribeOpsItemsResponseUnmarshaller Instance { get; }
    private static DescribeOpsItemsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeOpsItemsResponseUnmarshaller GetInstance();
    public static DescribeOpsItemsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeParametersRequestMarshaller : object {
    private static DescribeParametersRequestMarshaller _instance;
    public static DescribeParametersRequestMarshaller Instance { get; }
    private static DescribeParametersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeParametersRequest publicRequest);
    internal static DescribeParametersRequestMarshaller GetInstance();
    public static DescribeParametersRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeParametersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeParametersResponseUnmarshaller _instance;
    public static DescribeParametersResponseUnmarshaller Instance { get; }
    private static DescribeParametersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeParametersResponseUnmarshaller GetInstance();
    public static DescribeParametersResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribePatchBaselinesRequestMarshaller : object {
    private static DescribePatchBaselinesRequestMarshaller _instance;
    public static DescribePatchBaselinesRequestMarshaller Instance { get; }
    private static DescribePatchBaselinesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribePatchBaselinesRequest publicRequest);
    internal static DescribePatchBaselinesRequestMarshaller GetInstance();
    public static DescribePatchBaselinesRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribePatchBaselinesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribePatchBaselinesResponseUnmarshaller _instance;
    public static DescribePatchBaselinesResponseUnmarshaller Instance { get; }
    private static DescribePatchBaselinesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribePatchBaselinesResponseUnmarshaller GetInstance();
    public static DescribePatchBaselinesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribePatchGroupsRequestMarshaller : object {
    private static DescribePatchGroupsRequestMarshaller _instance;
    public static DescribePatchGroupsRequestMarshaller Instance { get; }
    private static DescribePatchGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribePatchGroupsRequest publicRequest);
    internal static DescribePatchGroupsRequestMarshaller GetInstance();
    public static DescribePatchGroupsRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribePatchGroupsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribePatchGroupsResponseUnmarshaller _instance;
    public static DescribePatchGroupsResponseUnmarshaller Instance { get; }
    private static DescribePatchGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribePatchGroupsResponseUnmarshaller GetInstance();
    public static DescribePatchGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribePatchGroupStateRequestMarshaller : object {
    private static DescribePatchGroupStateRequestMarshaller _instance;
    public static DescribePatchGroupStateRequestMarshaller Instance { get; }
    private static DescribePatchGroupStateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribePatchGroupStateRequest publicRequest);
    internal static DescribePatchGroupStateRequestMarshaller GetInstance();
    public static DescribePatchGroupStateRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribePatchGroupStateResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribePatchGroupStateResponseUnmarshaller _instance;
    public static DescribePatchGroupStateResponseUnmarshaller Instance { get; }
    private static DescribePatchGroupStateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribePatchGroupStateResponseUnmarshaller GetInstance();
    public static DescribePatchGroupStateResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribePatchPropertiesRequestMarshaller : object {
    private static DescribePatchPropertiesRequestMarshaller _instance;
    public static DescribePatchPropertiesRequestMarshaller Instance { get; }
    private static DescribePatchPropertiesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribePatchPropertiesRequest publicRequest);
    internal static DescribePatchPropertiesRequestMarshaller GetInstance();
    public static DescribePatchPropertiesRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribePatchPropertiesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribePatchPropertiesResponseUnmarshaller _instance;
    public static DescribePatchPropertiesResponseUnmarshaller Instance { get; }
    private static DescribePatchPropertiesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribePatchPropertiesResponseUnmarshaller GetInstance();
    public static DescribePatchPropertiesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeSessionsRequestMarshaller : object {
    private static DescribeSessionsRequestMarshaller _instance;
    public static DescribeSessionsRequestMarshaller Instance { get; }
    private static DescribeSessionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSessionsRequest publicRequest);
    internal static DescribeSessionsRequestMarshaller GetInstance();
    public static DescribeSessionsRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DescribeSessionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeSessionsResponseUnmarshaller _instance;
    public static DescribeSessionsResponseUnmarshaller Instance { get; }
    private static DescribeSessionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSessionsResponseUnmarshaller GetInstance();
    public static DescribeSessionsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DisassociateOpsItemRelatedItemRequestMarshaller : object {
    private static DisassociateOpsItemRelatedItemRequestMarshaller _instance;
    public static DisassociateOpsItemRelatedItemRequestMarshaller Instance { get; }
    private static DisassociateOpsItemRelatedItemRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisassociateOpsItemRelatedItemRequest publicRequest);
    internal static DisassociateOpsItemRelatedItemRequestMarshaller GetInstance();
    public static DisassociateOpsItemRelatedItemRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DisassociateOpsItemRelatedItemResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DisassociateOpsItemRelatedItemResponseUnmarshaller _instance;
    public static DisassociateOpsItemRelatedItemResponseUnmarshaller Instance { get; }
    private static DisassociateOpsItemRelatedItemResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisassociateOpsItemRelatedItemResponseUnmarshaller GetInstance();
    public static DisassociateOpsItemRelatedItemResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DocumentAlreadyExistsExceptionUnmarshaller : object {
    private static DocumentAlreadyExistsExceptionUnmarshaller _instance;
    public static DocumentAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static DocumentAlreadyExistsExceptionUnmarshaller();
    public sealed virtual DocumentAlreadyExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual DocumentAlreadyExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static DocumentAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DocumentDefaultVersionDescriptionUnmarshaller : object {
    private static DocumentDefaultVersionDescriptionUnmarshaller _instance;
    public static DocumentDefaultVersionDescriptionUnmarshaller Instance { get; }
    private static DocumentDefaultVersionDescriptionUnmarshaller();
    private sealed virtual override DocumentDefaultVersionDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.DocumentDefaultVersionDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DocumentDefaultVersionDescription Unmarshall(JsonUnmarshallerContext context);
    public static DocumentDefaultVersionDescriptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DocumentDescriptionUnmarshaller : object {
    private static DocumentDescriptionUnmarshaller _instance;
    public static DocumentDescriptionUnmarshaller Instance { get; }
    private static DocumentDescriptionUnmarshaller();
    private sealed virtual override DocumentDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.DocumentDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DocumentDescription Unmarshall(JsonUnmarshallerContext context);
    public static DocumentDescriptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DocumentFilterMarshaller : object {
    public static DocumentFilterMarshaller Instance;
    private static DocumentFilterMarshaller();
    public sealed virtual void Marshall(DocumentFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DocumentIdentifierUnmarshaller : object {
    private static DocumentIdentifierUnmarshaller _instance;
    public static DocumentIdentifierUnmarshaller Instance { get; }
    private static DocumentIdentifierUnmarshaller();
    private sealed virtual override DocumentIdentifier Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.DocumentIdentifier,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DocumentIdentifier Unmarshall(JsonUnmarshallerContext context);
    public static DocumentIdentifierUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DocumentKeyValuesFilterMarshaller : object {
    public static DocumentKeyValuesFilterMarshaller Instance;
    private static DocumentKeyValuesFilterMarshaller();
    public sealed virtual void Marshall(DocumentKeyValuesFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DocumentLimitExceededExceptionUnmarshaller : object {
    private static DocumentLimitExceededExceptionUnmarshaller _instance;
    public static DocumentLimitExceededExceptionUnmarshaller Instance { get; }
    private static DocumentLimitExceededExceptionUnmarshaller();
    public sealed virtual DocumentLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual DocumentLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static DocumentLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DocumentMetadataResponseInfoUnmarshaller : object {
    private static DocumentMetadataResponseInfoUnmarshaller _instance;
    public static DocumentMetadataResponseInfoUnmarshaller Instance { get; }
    private static DocumentMetadataResponseInfoUnmarshaller();
    private sealed virtual override DocumentMetadataResponseInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.DocumentMetadataResponseInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DocumentMetadataResponseInfo Unmarshall(JsonUnmarshallerContext context);
    public static DocumentMetadataResponseInfoUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DocumentParameterUnmarshaller : object {
    private static DocumentParameterUnmarshaller _instance;
    public static DocumentParameterUnmarshaller Instance { get; }
    private static DocumentParameterUnmarshaller();
    private sealed virtual override DocumentParameter Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.DocumentParameter,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DocumentParameter Unmarshall(JsonUnmarshallerContext context);
    public static DocumentParameterUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DocumentPermissionLimitExceptionUnmarshaller : object {
    private static DocumentPermissionLimitExceptionUnmarshaller _instance;
    public static DocumentPermissionLimitExceptionUnmarshaller Instance { get; }
    private static DocumentPermissionLimitExceptionUnmarshaller();
    public sealed virtual DocumentPermissionLimitException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual DocumentPermissionLimitException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static DocumentPermissionLimitExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DocumentRequiresMarshaller : object {
    public static DocumentRequiresMarshaller Instance;
    private static DocumentRequiresMarshaller();
    public sealed virtual void Marshall(DocumentRequires requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DocumentRequiresUnmarshaller : object {
    private static DocumentRequiresUnmarshaller _instance;
    public static DocumentRequiresUnmarshaller Instance { get; }
    private static DocumentRequiresUnmarshaller();
    private sealed virtual override DocumentRequires Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.DocumentRequires,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DocumentRequires Unmarshall(JsonUnmarshallerContext context);
    public static DocumentRequiresUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DocumentReviewCommentSourceMarshaller : object {
    public static DocumentReviewCommentSourceMarshaller Instance;
    private static DocumentReviewCommentSourceMarshaller();
    public sealed virtual void Marshall(DocumentReviewCommentSource requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DocumentReviewCommentSourceUnmarshaller : object {
    private static DocumentReviewCommentSourceUnmarshaller _instance;
    public static DocumentReviewCommentSourceUnmarshaller Instance { get; }
    private static DocumentReviewCommentSourceUnmarshaller();
    private sealed virtual override DocumentReviewCommentSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.DocumentReviewCommentSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DocumentReviewCommentSource Unmarshall(JsonUnmarshallerContext context);
    public static DocumentReviewCommentSourceUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DocumentReviewerResponseSourceUnmarshaller : object {
    private static DocumentReviewerResponseSourceUnmarshaller _instance;
    public static DocumentReviewerResponseSourceUnmarshaller Instance { get; }
    private static DocumentReviewerResponseSourceUnmarshaller();
    private sealed virtual override DocumentReviewerResponseSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.DocumentReviewerResponseSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DocumentReviewerResponseSource Unmarshall(JsonUnmarshallerContext context);
    public static DocumentReviewerResponseSourceUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DocumentReviewsMarshaller : object {
    public static DocumentReviewsMarshaller Instance;
    private static DocumentReviewsMarshaller();
    public sealed virtual void Marshall(DocumentReviews requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DocumentVersionInfoUnmarshaller : object {
    private static DocumentVersionInfoUnmarshaller _instance;
    public static DocumentVersionInfoUnmarshaller Instance { get; }
    private static DocumentVersionInfoUnmarshaller();
    private sealed virtual override DocumentVersionInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.DocumentVersionInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DocumentVersionInfo Unmarshall(JsonUnmarshallerContext context);
    public static DocumentVersionInfoUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DocumentVersionLimitExceededExceptionUnmarshaller : object {
    private static DocumentVersionLimitExceededExceptionUnmarshaller _instance;
    public static DocumentVersionLimitExceededExceptionUnmarshaller Instance { get; }
    private static DocumentVersionLimitExceededExceptionUnmarshaller();
    public sealed virtual DocumentVersionLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual DocumentVersionLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static DocumentVersionLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DoesNotExistExceptionUnmarshaller : object {
    private static DoesNotExistExceptionUnmarshaller _instance;
    public static DoesNotExistExceptionUnmarshaller Instance { get; }
    private static DoesNotExistExceptionUnmarshaller();
    public sealed virtual DoesNotExistException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual DoesNotExistException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static DoesNotExistExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DuplicateDocumentContentExceptionUnmarshaller : object {
    private static DuplicateDocumentContentExceptionUnmarshaller _instance;
    public static DuplicateDocumentContentExceptionUnmarshaller Instance { get; }
    private static DuplicateDocumentContentExceptionUnmarshaller();
    public sealed virtual DuplicateDocumentContentException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual DuplicateDocumentContentException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static DuplicateDocumentContentExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DuplicateDocumentVersionNameExceptionUnmarshaller : object {
    private static DuplicateDocumentVersionNameExceptionUnmarshaller _instance;
    public static DuplicateDocumentVersionNameExceptionUnmarshaller Instance { get; }
    private static DuplicateDocumentVersionNameExceptionUnmarshaller();
    public sealed virtual DuplicateDocumentVersionNameException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual DuplicateDocumentVersionNameException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static DuplicateDocumentVersionNameExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.DuplicateInstanceIdExceptionUnmarshaller : object {
    private static DuplicateInstanceIdExceptionUnmarshaller _instance;
    public static DuplicateInstanceIdExceptionUnmarshaller Instance { get; }
    private static DuplicateInstanceIdExceptionUnmarshaller();
    public sealed virtual DuplicateInstanceIdException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual DuplicateInstanceIdException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static DuplicateInstanceIdExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.EffectivePatchUnmarshaller : object {
    private static EffectivePatchUnmarshaller _instance;
    public static EffectivePatchUnmarshaller Instance { get; }
    private static EffectivePatchUnmarshaller();
    private sealed virtual override EffectivePatch Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.EffectivePatch,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EffectivePatch Unmarshall(JsonUnmarshallerContext context);
    public static EffectivePatchUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.FailedCreateAssociationUnmarshaller : object {
    private static FailedCreateAssociationUnmarshaller _instance;
    public static FailedCreateAssociationUnmarshaller Instance { get; }
    private static FailedCreateAssociationUnmarshaller();
    private sealed virtual override FailedCreateAssociation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.FailedCreateAssociation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FailedCreateAssociation Unmarshall(JsonUnmarshallerContext context);
    public static FailedCreateAssociationUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.FailureDetailsUnmarshaller : object {
    private static FailureDetailsUnmarshaller _instance;
    public static FailureDetailsUnmarshaller Instance { get; }
    private static FailureDetailsUnmarshaller();
    private sealed virtual override FailureDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.FailureDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FailureDetails Unmarshall(JsonUnmarshallerContext context);
    public static FailureDetailsUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.FeatureNotAvailableExceptionUnmarshaller : object {
    private static FeatureNotAvailableExceptionUnmarshaller _instance;
    public static FeatureNotAvailableExceptionUnmarshaller Instance { get; }
    private static FeatureNotAvailableExceptionUnmarshaller();
    public sealed virtual FeatureNotAvailableException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual FeatureNotAvailableException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static FeatureNotAvailableExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetAutomationExecutionRequestMarshaller : object {
    private static GetAutomationExecutionRequestMarshaller _instance;
    public static GetAutomationExecutionRequestMarshaller Instance { get; }
    private static GetAutomationExecutionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAutomationExecutionRequest publicRequest);
    internal static GetAutomationExecutionRequestMarshaller GetInstance();
    public static GetAutomationExecutionRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetAutomationExecutionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetAutomationExecutionResponseUnmarshaller _instance;
    public static GetAutomationExecutionResponseUnmarshaller Instance { get; }
    private static GetAutomationExecutionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAutomationExecutionResponseUnmarshaller GetInstance();
    public static GetAutomationExecutionResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetCalendarStateRequestMarshaller : object {
    private static GetCalendarStateRequestMarshaller _instance;
    public static GetCalendarStateRequestMarshaller Instance { get; }
    private static GetCalendarStateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetCalendarStateRequest publicRequest);
    internal static GetCalendarStateRequestMarshaller GetInstance();
    public static GetCalendarStateRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetCalendarStateResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetCalendarStateResponseUnmarshaller _instance;
    public static GetCalendarStateResponseUnmarshaller Instance { get; }
    private static GetCalendarStateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetCalendarStateResponseUnmarshaller GetInstance();
    public static GetCalendarStateResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetCommandInvocationRequestMarshaller : object {
    private static GetCommandInvocationRequestMarshaller _instance;
    public static GetCommandInvocationRequestMarshaller Instance { get; }
    private static GetCommandInvocationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetCommandInvocationRequest publicRequest);
    internal static GetCommandInvocationRequestMarshaller GetInstance();
    public static GetCommandInvocationRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetCommandInvocationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetCommandInvocationResponseUnmarshaller _instance;
    public static GetCommandInvocationResponseUnmarshaller Instance { get; }
    private static GetCommandInvocationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetCommandInvocationResponseUnmarshaller GetInstance();
    public static GetCommandInvocationResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetConnectionStatusRequestMarshaller : object {
    private static GetConnectionStatusRequestMarshaller _instance;
    public static GetConnectionStatusRequestMarshaller Instance { get; }
    private static GetConnectionStatusRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetConnectionStatusRequest publicRequest);
    internal static GetConnectionStatusRequestMarshaller GetInstance();
    public static GetConnectionStatusRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetConnectionStatusResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetConnectionStatusResponseUnmarshaller _instance;
    public static GetConnectionStatusResponseUnmarshaller Instance { get; }
    private static GetConnectionStatusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetConnectionStatusResponseUnmarshaller GetInstance();
    public static GetConnectionStatusResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetDefaultPatchBaselineRequestMarshaller : object {
    private static GetDefaultPatchBaselineRequestMarshaller _instance;
    public static GetDefaultPatchBaselineRequestMarshaller Instance { get; }
    private static GetDefaultPatchBaselineRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDefaultPatchBaselineRequest publicRequest);
    internal static GetDefaultPatchBaselineRequestMarshaller GetInstance();
    public static GetDefaultPatchBaselineRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetDefaultPatchBaselineResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetDefaultPatchBaselineResponseUnmarshaller _instance;
    public static GetDefaultPatchBaselineResponseUnmarshaller Instance { get; }
    private static GetDefaultPatchBaselineResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDefaultPatchBaselineResponseUnmarshaller GetInstance();
    public static GetDefaultPatchBaselineResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetDeployablePatchSnapshotForInstanceRequestMarshaller : object {
    private static GetDeployablePatchSnapshotForInstanceRequestMarshaller _instance;
    public static GetDeployablePatchSnapshotForInstanceRequestMarshaller Instance { get; }
    private static GetDeployablePatchSnapshotForInstanceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDeployablePatchSnapshotForInstanceRequest publicRequest);
    internal static GetDeployablePatchSnapshotForInstanceRequestMarshaller GetInstance();
    public static GetDeployablePatchSnapshotForInstanceRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetDeployablePatchSnapshotForInstanceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetDeployablePatchSnapshotForInstanceResponseUnmarshaller _instance;
    public static GetDeployablePatchSnapshotForInstanceResponseUnmarshaller Instance { get; }
    private static GetDeployablePatchSnapshotForInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDeployablePatchSnapshotForInstanceResponseUnmarshaller GetInstance();
    public static GetDeployablePatchSnapshotForInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetDocumentRequestMarshaller : object {
    private static GetDocumentRequestMarshaller _instance;
    public static GetDocumentRequestMarshaller Instance { get; }
    private static GetDocumentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDocumentRequest publicRequest);
    internal static GetDocumentRequestMarshaller GetInstance();
    public static GetDocumentRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetDocumentResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetDocumentResponseUnmarshaller _instance;
    public static GetDocumentResponseUnmarshaller Instance { get; }
    private static GetDocumentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDocumentResponseUnmarshaller GetInstance();
    public static GetDocumentResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetInventoryRequestMarshaller : object {
    private static GetInventoryRequestMarshaller _instance;
    public static GetInventoryRequestMarshaller Instance { get; }
    private static GetInventoryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetInventoryRequest publicRequest);
    internal static GetInventoryRequestMarshaller GetInstance();
    public static GetInventoryRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetInventoryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetInventoryResponseUnmarshaller _instance;
    public static GetInventoryResponseUnmarshaller Instance { get; }
    private static GetInventoryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetInventoryResponseUnmarshaller GetInstance();
    public static GetInventoryResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetInventorySchemaRequestMarshaller : object {
    private static GetInventorySchemaRequestMarshaller _instance;
    public static GetInventorySchemaRequestMarshaller Instance { get; }
    private static GetInventorySchemaRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetInventorySchemaRequest publicRequest);
    internal static GetInventorySchemaRequestMarshaller GetInstance();
    public static GetInventorySchemaRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetInventorySchemaResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetInventorySchemaResponseUnmarshaller _instance;
    public static GetInventorySchemaResponseUnmarshaller Instance { get; }
    private static GetInventorySchemaResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetInventorySchemaResponseUnmarshaller GetInstance();
    public static GetInventorySchemaResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetMaintenanceWindowExecutionRequestMarshaller : object {
    private static GetMaintenanceWindowExecutionRequestMarshaller _instance;
    public static GetMaintenanceWindowExecutionRequestMarshaller Instance { get; }
    private static GetMaintenanceWindowExecutionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetMaintenanceWindowExecutionRequest publicRequest);
    internal static GetMaintenanceWindowExecutionRequestMarshaller GetInstance();
    public static GetMaintenanceWindowExecutionRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetMaintenanceWindowExecutionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetMaintenanceWindowExecutionResponseUnmarshaller _instance;
    public static GetMaintenanceWindowExecutionResponseUnmarshaller Instance { get; }
    private static GetMaintenanceWindowExecutionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetMaintenanceWindowExecutionResponseUnmarshaller GetInstance();
    public static GetMaintenanceWindowExecutionResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetMaintenanceWindowExecutionTaskInvocationRequestMarshaller : object {
    private static GetMaintenanceWindowExecutionTaskInvocationRequestMarshaller _instance;
    public static GetMaintenanceWindowExecutionTaskInvocationRequestMarshaller Instance { get; }
    private static GetMaintenanceWindowExecutionTaskInvocationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetMaintenanceWindowExecutionTaskInvocationRequest publicRequest);
    internal static GetMaintenanceWindowExecutionTaskInvocationRequestMarshaller GetInstance();
    public static GetMaintenanceWindowExecutionTaskInvocationRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetMaintenanceWindowExecutionTaskInvocationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetMaintenanceWindowExecutionTaskInvocationResponseUnmarshaller _instance;
    public static GetMaintenanceWindowExecutionTaskInvocationResponseUnmarshaller Instance { get; }
    private static GetMaintenanceWindowExecutionTaskInvocationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetMaintenanceWindowExecutionTaskInvocationResponseUnmarshaller GetInstance();
    public static GetMaintenanceWindowExecutionTaskInvocationResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetMaintenanceWindowExecutionTaskRequestMarshaller : object {
    private static GetMaintenanceWindowExecutionTaskRequestMarshaller _instance;
    public static GetMaintenanceWindowExecutionTaskRequestMarshaller Instance { get; }
    private static GetMaintenanceWindowExecutionTaskRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetMaintenanceWindowExecutionTaskRequest publicRequest);
    internal static GetMaintenanceWindowExecutionTaskRequestMarshaller GetInstance();
    public static GetMaintenanceWindowExecutionTaskRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetMaintenanceWindowExecutionTaskResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetMaintenanceWindowExecutionTaskResponseUnmarshaller _instance;
    public static GetMaintenanceWindowExecutionTaskResponseUnmarshaller Instance { get; }
    private static GetMaintenanceWindowExecutionTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetMaintenanceWindowExecutionTaskResponseUnmarshaller GetInstance();
    public static GetMaintenanceWindowExecutionTaskResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetMaintenanceWindowRequestMarshaller : object {
    private static GetMaintenanceWindowRequestMarshaller _instance;
    public static GetMaintenanceWindowRequestMarshaller Instance { get; }
    private static GetMaintenanceWindowRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetMaintenanceWindowRequest publicRequest);
    internal static GetMaintenanceWindowRequestMarshaller GetInstance();
    public static GetMaintenanceWindowRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetMaintenanceWindowResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetMaintenanceWindowResponseUnmarshaller _instance;
    public static GetMaintenanceWindowResponseUnmarshaller Instance { get; }
    private static GetMaintenanceWindowResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetMaintenanceWindowResponseUnmarshaller GetInstance();
    public static GetMaintenanceWindowResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetMaintenanceWindowTaskRequestMarshaller : object {
    private static GetMaintenanceWindowTaskRequestMarshaller _instance;
    public static GetMaintenanceWindowTaskRequestMarshaller Instance { get; }
    private static GetMaintenanceWindowTaskRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetMaintenanceWindowTaskRequest publicRequest);
    internal static GetMaintenanceWindowTaskRequestMarshaller GetInstance();
    public static GetMaintenanceWindowTaskRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetMaintenanceWindowTaskResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetMaintenanceWindowTaskResponseUnmarshaller _instance;
    public static GetMaintenanceWindowTaskResponseUnmarshaller Instance { get; }
    private static GetMaintenanceWindowTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetMaintenanceWindowTaskResponseUnmarshaller GetInstance();
    public static GetMaintenanceWindowTaskResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetOpsItemRequestMarshaller : object {
    private static GetOpsItemRequestMarshaller _instance;
    public static GetOpsItemRequestMarshaller Instance { get; }
    private static GetOpsItemRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetOpsItemRequest publicRequest);
    internal static GetOpsItemRequestMarshaller GetInstance();
    public static GetOpsItemRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetOpsItemResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetOpsItemResponseUnmarshaller _instance;
    public static GetOpsItemResponseUnmarshaller Instance { get; }
    private static GetOpsItemResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetOpsItemResponseUnmarshaller GetInstance();
    public static GetOpsItemResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetOpsMetadataRequestMarshaller : object {
    private static GetOpsMetadataRequestMarshaller _instance;
    public static GetOpsMetadataRequestMarshaller Instance { get; }
    private static GetOpsMetadataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetOpsMetadataRequest publicRequest);
    internal static GetOpsMetadataRequestMarshaller GetInstance();
    public static GetOpsMetadataRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetOpsMetadataResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetOpsMetadataResponseUnmarshaller _instance;
    public static GetOpsMetadataResponseUnmarshaller Instance { get; }
    private static GetOpsMetadataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetOpsMetadataResponseUnmarshaller GetInstance();
    public static GetOpsMetadataResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetOpsSummaryRequestMarshaller : object {
    private static GetOpsSummaryRequestMarshaller _instance;
    public static GetOpsSummaryRequestMarshaller Instance { get; }
    private static GetOpsSummaryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetOpsSummaryRequest publicRequest);
    internal static GetOpsSummaryRequestMarshaller GetInstance();
    public static GetOpsSummaryRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetOpsSummaryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetOpsSummaryResponseUnmarshaller _instance;
    public static GetOpsSummaryResponseUnmarshaller Instance { get; }
    private static GetOpsSummaryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetOpsSummaryResponseUnmarshaller GetInstance();
    public static GetOpsSummaryResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetParameterHistoryRequestMarshaller : object {
    private static GetParameterHistoryRequestMarshaller _instance;
    public static GetParameterHistoryRequestMarshaller Instance { get; }
    private static GetParameterHistoryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetParameterHistoryRequest publicRequest);
    internal static GetParameterHistoryRequestMarshaller GetInstance();
    public static GetParameterHistoryRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetParameterHistoryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetParameterHistoryResponseUnmarshaller _instance;
    public static GetParameterHistoryResponseUnmarshaller Instance { get; }
    private static GetParameterHistoryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetParameterHistoryResponseUnmarshaller GetInstance();
    public static GetParameterHistoryResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetParameterRequestMarshaller : object {
    private static GetParameterRequestMarshaller _instance;
    public static GetParameterRequestMarshaller Instance { get; }
    private static GetParameterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetParameterRequest publicRequest);
    internal static GetParameterRequestMarshaller GetInstance();
    public static GetParameterRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetParameterResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetParameterResponseUnmarshaller _instance;
    public static GetParameterResponseUnmarshaller Instance { get; }
    private static GetParameterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetParameterResponseUnmarshaller GetInstance();
    public static GetParameterResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetParametersByPathRequestMarshaller : object {
    private static GetParametersByPathRequestMarshaller _instance;
    public static GetParametersByPathRequestMarshaller Instance { get; }
    private static GetParametersByPathRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetParametersByPathRequest publicRequest);
    internal static GetParametersByPathRequestMarshaller GetInstance();
    public static GetParametersByPathRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetParametersByPathResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetParametersByPathResponseUnmarshaller _instance;
    public static GetParametersByPathResponseUnmarshaller Instance { get; }
    private static GetParametersByPathResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetParametersByPathResponseUnmarshaller GetInstance();
    public static GetParametersByPathResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetParametersRequestMarshaller : object {
    private static GetParametersRequestMarshaller _instance;
    public static GetParametersRequestMarshaller Instance { get; }
    private static GetParametersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetParametersRequest publicRequest);
    internal static GetParametersRequestMarshaller GetInstance();
    public static GetParametersRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetParametersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetParametersResponseUnmarshaller _instance;
    public static GetParametersResponseUnmarshaller Instance { get; }
    private static GetParametersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetParametersResponseUnmarshaller GetInstance();
    public static GetParametersResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetPatchBaselineForPatchGroupRequestMarshaller : object {
    private static GetPatchBaselineForPatchGroupRequestMarshaller _instance;
    public static GetPatchBaselineForPatchGroupRequestMarshaller Instance { get; }
    private static GetPatchBaselineForPatchGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetPatchBaselineForPatchGroupRequest publicRequest);
    internal static GetPatchBaselineForPatchGroupRequestMarshaller GetInstance();
    public static GetPatchBaselineForPatchGroupRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetPatchBaselineForPatchGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetPatchBaselineForPatchGroupResponseUnmarshaller _instance;
    public static GetPatchBaselineForPatchGroupResponseUnmarshaller Instance { get; }
    private static GetPatchBaselineForPatchGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetPatchBaselineForPatchGroupResponseUnmarshaller GetInstance();
    public static GetPatchBaselineForPatchGroupResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetPatchBaselineRequestMarshaller : object {
    private static GetPatchBaselineRequestMarshaller _instance;
    public static GetPatchBaselineRequestMarshaller Instance { get; }
    private static GetPatchBaselineRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetPatchBaselineRequest publicRequest);
    internal static GetPatchBaselineRequestMarshaller GetInstance();
    public static GetPatchBaselineRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetPatchBaselineResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetPatchBaselineResponseUnmarshaller _instance;
    public static GetPatchBaselineResponseUnmarshaller Instance { get; }
    private static GetPatchBaselineResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetPatchBaselineResponseUnmarshaller GetInstance();
    public static GetPatchBaselineResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetResourcePoliciesRequestMarshaller : object {
    private static GetResourcePoliciesRequestMarshaller _instance;
    public static GetResourcePoliciesRequestMarshaller Instance { get; }
    private static GetResourcePoliciesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetResourcePoliciesRequest publicRequest);
    internal static GetResourcePoliciesRequestMarshaller GetInstance();
    public static GetResourcePoliciesRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetResourcePoliciesResponseEntryUnmarshaller : object {
    private static GetResourcePoliciesResponseEntryUnmarshaller _instance;
    public static GetResourcePoliciesResponseEntryUnmarshaller Instance { get; }
    private static GetResourcePoliciesResponseEntryUnmarshaller();
    private sealed virtual override GetResourcePoliciesResponseEntry Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.GetResourcePoliciesResponseEntry,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GetResourcePoliciesResponseEntry Unmarshall(JsonUnmarshallerContext context);
    public static GetResourcePoliciesResponseEntryUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetResourcePoliciesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetResourcePoliciesResponseUnmarshaller _instance;
    public static GetResourcePoliciesResponseUnmarshaller Instance { get; }
    private static GetResourcePoliciesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetResourcePoliciesResponseUnmarshaller GetInstance();
    public static GetResourcePoliciesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetServiceSettingRequestMarshaller : object {
    private static GetServiceSettingRequestMarshaller _instance;
    public static GetServiceSettingRequestMarshaller Instance { get; }
    private static GetServiceSettingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetServiceSettingRequest publicRequest);
    internal static GetServiceSettingRequestMarshaller GetInstance();
    public static GetServiceSettingRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.GetServiceSettingResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetServiceSettingResponseUnmarshaller _instance;
    public static GetServiceSettingResponseUnmarshaller Instance { get; }
    private static GetServiceSettingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetServiceSettingResponseUnmarshaller GetInstance();
    public static GetServiceSettingResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.HierarchyLevelLimitExceededExceptionUnmarshaller : object {
    private static HierarchyLevelLimitExceededExceptionUnmarshaller _instance;
    public static HierarchyLevelLimitExceededExceptionUnmarshaller Instance { get; }
    private static HierarchyLevelLimitExceededExceptionUnmarshaller();
    public sealed virtual HierarchyLevelLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual HierarchyLevelLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static HierarchyLevelLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.HierarchyTypeMismatchExceptionUnmarshaller : object {
    private static HierarchyTypeMismatchExceptionUnmarshaller _instance;
    public static HierarchyTypeMismatchExceptionUnmarshaller Instance { get; }
    private static HierarchyTypeMismatchExceptionUnmarshaller();
    public sealed virtual HierarchyTypeMismatchException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual HierarchyTypeMismatchException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static HierarchyTypeMismatchExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.IdempotentParameterMismatchExceptionUnmarshaller : object {
    private static IdempotentParameterMismatchExceptionUnmarshaller _instance;
    public static IdempotentParameterMismatchExceptionUnmarshaller Instance { get; }
    private static IdempotentParameterMismatchExceptionUnmarshaller();
    public sealed virtual IdempotentParameterMismatchException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual IdempotentParameterMismatchException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static IdempotentParameterMismatchExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.IncompatiblePolicyExceptionUnmarshaller : object {
    private static IncompatiblePolicyExceptionUnmarshaller _instance;
    public static IncompatiblePolicyExceptionUnmarshaller Instance { get; }
    private static IncompatiblePolicyExceptionUnmarshaller();
    public sealed virtual IncompatiblePolicyException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual IncompatiblePolicyException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static IncompatiblePolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InstanceAggregatedAssociationOverviewUnmarshaller : object {
    private static InstanceAggregatedAssociationOverviewUnmarshaller _instance;
    public static InstanceAggregatedAssociationOverviewUnmarshaller Instance { get; }
    private static InstanceAggregatedAssociationOverviewUnmarshaller();
    private sealed virtual override InstanceAggregatedAssociationOverview Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.InstanceAggregatedAssociationOverview,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceAggregatedAssociationOverview Unmarshall(JsonUnmarshallerContext context);
    public static InstanceAggregatedAssociationOverviewUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InstanceAssociationOutputLocationMarshaller : object {
    public static InstanceAssociationOutputLocationMarshaller Instance;
    private static InstanceAssociationOutputLocationMarshaller();
    public sealed virtual void Marshall(InstanceAssociationOutputLocation requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InstanceAssociationOutputLocationUnmarshaller : object {
    private static InstanceAssociationOutputLocationUnmarshaller _instance;
    public static InstanceAssociationOutputLocationUnmarshaller Instance { get; }
    private static InstanceAssociationOutputLocationUnmarshaller();
    private sealed virtual override InstanceAssociationOutputLocation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.InstanceAssociationOutputLocation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceAssociationOutputLocation Unmarshall(JsonUnmarshallerContext context);
    public static InstanceAssociationOutputLocationUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InstanceAssociationOutputUrlUnmarshaller : object {
    private static InstanceAssociationOutputUrlUnmarshaller _instance;
    public static InstanceAssociationOutputUrlUnmarshaller Instance { get; }
    private static InstanceAssociationOutputUrlUnmarshaller();
    private sealed virtual override InstanceAssociationOutputUrl Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.InstanceAssociationOutputUrl,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceAssociationOutputUrl Unmarshall(JsonUnmarshallerContext context);
    public static InstanceAssociationOutputUrlUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InstanceAssociationStatusInfoUnmarshaller : object {
    private static InstanceAssociationStatusInfoUnmarshaller _instance;
    public static InstanceAssociationStatusInfoUnmarshaller Instance { get; }
    private static InstanceAssociationStatusInfoUnmarshaller();
    private sealed virtual override InstanceAssociationStatusInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.InstanceAssociationStatusInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceAssociationStatusInfo Unmarshall(JsonUnmarshallerContext context);
    public static InstanceAssociationStatusInfoUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InstanceAssociationUnmarshaller : object {
    private static InstanceAssociationUnmarshaller _instance;
    public static InstanceAssociationUnmarshaller Instance { get; }
    private static InstanceAssociationUnmarshaller();
    private sealed virtual override InstanceAssociation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.InstanceAssociation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceAssociation Unmarshall(JsonUnmarshallerContext context);
    public static InstanceAssociationUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InstanceInformationFilterMarshaller : object {
    public static InstanceInformationFilterMarshaller Instance;
    private static InstanceInformationFilterMarshaller();
    public sealed virtual void Marshall(InstanceInformationFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InstanceInformationStringFilterMarshaller : object {
    public static InstanceInformationStringFilterMarshaller Instance;
    private static InstanceInformationStringFilterMarshaller();
    public sealed virtual void Marshall(InstanceInformationStringFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InstanceInformationUnmarshaller : object {
    private static InstanceInformationUnmarshaller _instance;
    public static InstanceInformationUnmarshaller Instance { get; }
    private static InstanceInformationUnmarshaller();
    private sealed virtual override InstanceInformation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.InstanceInformation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceInformation Unmarshall(JsonUnmarshallerContext context);
    public static InstanceInformationUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InstancePatchStateFilterMarshaller : object {
    public static InstancePatchStateFilterMarshaller Instance;
    private static InstancePatchStateFilterMarshaller();
    public sealed virtual void Marshall(InstancePatchStateFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InstancePatchStateUnmarshaller : object {
    private static InstancePatchStateUnmarshaller _instance;
    public static InstancePatchStateUnmarshaller Instance { get; }
    private static InstancePatchStateUnmarshaller();
    private sealed virtual override InstancePatchState Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.InstancePatchState,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstancePatchState Unmarshall(JsonUnmarshallerContext context);
    public static InstancePatchStateUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InstancePropertyFilterMarshaller : object {
    public static InstancePropertyFilterMarshaller Instance;
    private static InstancePropertyFilterMarshaller();
    public sealed virtual void Marshall(InstancePropertyFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InstancePropertyStringFilterMarshaller : object {
    public static InstancePropertyStringFilterMarshaller Instance;
    private static InstancePropertyStringFilterMarshaller();
    public sealed virtual void Marshall(InstancePropertyStringFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InstancePropertyUnmarshaller : object {
    private static InstancePropertyUnmarshaller _instance;
    public static InstancePropertyUnmarshaller Instance { get; }
    private static InstancePropertyUnmarshaller();
    private sealed virtual override InstanceProperty Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.InstanceProperty,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceProperty Unmarshall(JsonUnmarshallerContext context);
    public static InstancePropertyUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller : object {
    private static InternalServerErrorExceptionUnmarshaller _instance;
    public static InternalServerErrorExceptionUnmarshaller Instance { get; }
    private static InternalServerErrorExceptionUnmarshaller();
    public sealed virtual InternalServerErrorException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InternalServerErrorException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InternalServerErrorExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidActivationExceptionUnmarshaller : object {
    private static InvalidActivationExceptionUnmarshaller _instance;
    public static InvalidActivationExceptionUnmarshaller Instance { get; }
    private static InvalidActivationExceptionUnmarshaller();
    public sealed virtual InvalidActivationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidActivationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidActivationExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidActivationIdExceptionUnmarshaller : object {
    private static InvalidActivationIdExceptionUnmarshaller _instance;
    public static InvalidActivationIdExceptionUnmarshaller Instance { get; }
    private static InvalidActivationIdExceptionUnmarshaller();
    public sealed virtual InvalidActivationIdException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidActivationIdException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidActivationIdExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidAggregatorExceptionUnmarshaller : object {
    private static InvalidAggregatorExceptionUnmarshaller _instance;
    public static InvalidAggregatorExceptionUnmarshaller Instance { get; }
    private static InvalidAggregatorExceptionUnmarshaller();
    public sealed virtual InvalidAggregatorException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidAggregatorException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidAggregatorExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidAllowedPatternExceptionUnmarshaller : object {
    private static InvalidAllowedPatternExceptionUnmarshaller _instance;
    public static InvalidAllowedPatternExceptionUnmarshaller Instance { get; }
    private static InvalidAllowedPatternExceptionUnmarshaller();
    public sealed virtual InvalidAllowedPatternException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidAllowedPatternException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidAllowedPatternExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidAssociationExceptionUnmarshaller : object {
    private static InvalidAssociationExceptionUnmarshaller _instance;
    public static InvalidAssociationExceptionUnmarshaller Instance { get; }
    private static InvalidAssociationExceptionUnmarshaller();
    public sealed virtual InvalidAssociationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidAssociationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidAssociationExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidAssociationVersionExceptionUnmarshaller : object {
    private static InvalidAssociationVersionExceptionUnmarshaller _instance;
    public static InvalidAssociationVersionExceptionUnmarshaller Instance { get; }
    private static InvalidAssociationVersionExceptionUnmarshaller();
    public sealed virtual InvalidAssociationVersionException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidAssociationVersionException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidAssociationVersionExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidAutomationExecutionParametersExceptionUnmarshaller : object {
    private static InvalidAutomationExecutionParametersExceptionUnmarshaller _instance;
    public static InvalidAutomationExecutionParametersExceptionUnmarshaller Instance { get; }
    private static InvalidAutomationExecutionParametersExceptionUnmarshaller();
    public sealed virtual InvalidAutomationExecutionParametersException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidAutomationExecutionParametersException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidAutomationExecutionParametersExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidAutomationSignalExceptionUnmarshaller : object {
    private static InvalidAutomationSignalExceptionUnmarshaller _instance;
    public static InvalidAutomationSignalExceptionUnmarshaller Instance { get; }
    private static InvalidAutomationSignalExceptionUnmarshaller();
    public sealed virtual InvalidAutomationSignalException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidAutomationSignalException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidAutomationSignalExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidAutomationStatusUpdateExceptionUnmarshaller : object {
    private static InvalidAutomationStatusUpdateExceptionUnmarshaller _instance;
    public static InvalidAutomationStatusUpdateExceptionUnmarshaller Instance { get; }
    private static InvalidAutomationStatusUpdateExceptionUnmarshaller();
    public sealed virtual InvalidAutomationStatusUpdateException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidAutomationStatusUpdateException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidAutomationStatusUpdateExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidCommandIdExceptionUnmarshaller : object {
    private static InvalidCommandIdExceptionUnmarshaller _instance;
    public static InvalidCommandIdExceptionUnmarshaller Instance { get; }
    private static InvalidCommandIdExceptionUnmarshaller();
    public sealed virtual InvalidCommandIdException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidCommandIdException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidCommandIdExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidDeleteInventoryParametersExceptionUnmarshaller : object {
    private static InvalidDeleteInventoryParametersExceptionUnmarshaller _instance;
    public static InvalidDeleteInventoryParametersExceptionUnmarshaller Instance { get; }
    private static InvalidDeleteInventoryParametersExceptionUnmarshaller();
    public sealed virtual InvalidDeleteInventoryParametersException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidDeleteInventoryParametersException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDeleteInventoryParametersExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidDeletionIdExceptionUnmarshaller : object {
    private static InvalidDeletionIdExceptionUnmarshaller _instance;
    public static InvalidDeletionIdExceptionUnmarshaller Instance { get; }
    private static InvalidDeletionIdExceptionUnmarshaller();
    public sealed virtual InvalidDeletionIdException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidDeletionIdException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDeletionIdExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidDocumentContentExceptionUnmarshaller : object {
    private static InvalidDocumentContentExceptionUnmarshaller _instance;
    public static InvalidDocumentContentExceptionUnmarshaller Instance { get; }
    private static InvalidDocumentContentExceptionUnmarshaller();
    public sealed virtual InvalidDocumentContentException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidDocumentContentException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDocumentContentExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidDocumentExceptionUnmarshaller : object {
    private static InvalidDocumentExceptionUnmarshaller _instance;
    public static InvalidDocumentExceptionUnmarshaller Instance { get; }
    private static InvalidDocumentExceptionUnmarshaller();
    public sealed virtual InvalidDocumentException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidDocumentException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDocumentExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidDocumentOperationExceptionUnmarshaller : object {
    private static InvalidDocumentOperationExceptionUnmarshaller _instance;
    public static InvalidDocumentOperationExceptionUnmarshaller Instance { get; }
    private static InvalidDocumentOperationExceptionUnmarshaller();
    public sealed virtual InvalidDocumentOperationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidDocumentOperationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDocumentOperationExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidDocumentSchemaVersionExceptionUnmarshaller : object {
    private static InvalidDocumentSchemaVersionExceptionUnmarshaller _instance;
    public static InvalidDocumentSchemaVersionExceptionUnmarshaller Instance { get; }
    private static InvalidDocumentSchemaVersionExceptionUnmarshaller();
    public sealed virtual InvalidDocumentSchemaVersionException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidDocumentSchemaVersionException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDocumentSchemaVersionExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidDocumentTypeExceptionUnmarshaller : object {
    private static InvalidDocumentTypeExceptionUnmarshaller _instance;
    public static InvalidDocumentTypeExceptionUnmarshaller Instance { get; }
    private static InvalidDocumentTypeExceptionUnmarshaller();
    public sealed virtual InvalidDocumentTypeException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidDocumentTypeException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDocumentTypeExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidDocumentVersionExceptionUnmarshaller : object {
    private static InvalidDocumentVersionExceptionUnmarshaller _instance;
    public static InvalidDocumentVersionExceptionUnmarshaller Instance { get; }
    private static InvalidDocumentVersionExceptionUnmarshaller();
    public sealed virtual InvalidDocumentVersionException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidDocumentVersionException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDocumentVersionExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidFilterExceptionUnmarshaller : object {
    private static InvalidFilterExceptionUnmarshaller _instance;
    public static InvalidFilterExceptionUnmarshaller Instance { get; }
    private static InvalidFilterExceptionUnmarshaller();
    public sealed virtual InvalidFilterException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidFilterException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidFilterExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidFilterKeyExceptionUnmarshaller : object {
    private static InvalidFilterKeyExceptionUnmarshaller _instance;
    public static InvalidFilterKeyExceptionUnmarshaller Instance { get; }
    private static InvalidFilterKeyExceptionUnmarshaller();
    public sealed virtual InvalidFilterKeyException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidFilterKeyException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidFilterKeyExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidFilterOptionExceptionUnmarshaller : object {
    private static InvalidFilterOptionExceptionUnmarshaller _instance;
    public static InvalidFilterOptionExceptionUnmarshaller Instance { get; }
    private static InvalidFilterOptionExceptionUnmarshaller();
    public sealed virtual InvalidFilterOptionException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidFilterOptionException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidFilterOptionExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidFilterValueExceptionUnmarshaller : object {
    private static InvalidFilterValueExceptionUnmarshaller _instance;
    public static InvalidFilterValueExceptionUnmarshaller Instance { get; }
    private static InvalidFilterValueExceptionUnmarshaller();
    public sealed virtual InvalidFilterValueException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidFilterValueException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidFilterValueExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidInstanceIdExceptionUnmarshaller : object {
    private static InvalidInstanceIdExceptionUnmarshaller _instance;
    public static InvalidInstanceIdExceptionUnmarshaller Instance { get; }
    private static InvalidInstanceIdExceptionUnmarshaller();
    public sealed virtual InvalidInstanceIdException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidInstanceIdException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidInstanceIdExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidInstanceInformationFilterValueExceptionUnmarshaller : object {
    private static InvalidInstanceInformationFilterValueExceptionUnmarshaller _instance;
    public static InvalidInstanceInformationFilterValueExceptionUnmarshaller Instance { get; }
    private static InvalidInstanceInformationFilterValueExceptionUnmarshaller();
    public sealed virtual InvalidInstanceInformationFilterValueException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidInstanceInformationFilterValueException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidInstanceInformationFilterValueExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidInstancePropertyFilterValueExceptionUnmarshaller : object {
    private static InvalidInstancePropertyFilterValueExceptionUnmarshaller _instance;
    public static InvalidInstancePropertyFilterValueExceptionUnmarshaller Instance { get; }
    private static InvalidInstancePropertyFilterValueExceptionUnmarshaller();
    public sealed virtual InvalidInstancePropertyFilterValueException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidInstancePropertyFilterValueException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidInstancePropertyFilterValueExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidInventoryGroupExceptionUnmarshaller : object {
    private static InvalidInventoryGroupExceptionUnmarshaller _instance;
    public static InvalidInventoryGroupExceptionUnmarshaller Instance { get; }
    private static InvalidInventoryGroupExceptionUnmarshaller();
    public sealed virtual InvalidInventoryGroupException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidInventoryGroupException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidInventoryGroupExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidInventoryItemContextExceptionUnmarshaller : object {
    private static InvalidInventoryItemContextExceptionUnmarshaller _instance;
    public static InvalidInventoryItemContextExceptionUnmarshaller Instance { get; }
    private static InvalidInventoryItemContextExceptionUnmarshaller();
    public sealed virtual InvalidInventoryItemContextException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidInventoryItemContextException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidInventoryItemContextExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidInventoryRequestExceptionUnmarshaller : object {
    private static InvalidInventoryRequestExceptionUnmarshaller _instance;
    public static InvalidInventoryRequestExceptionUnmarshaller Instance { get; }
    private static InvalidInventoryRequestExceptionUnmarshaller();
    public sealed virtual InvalidInventoryRequestException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidInventoryRequestException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidInventoryRequestExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidItemContentExceptionUnmarshaller : object {
    private static InvalidItemContentExceptionUnmarshaller _instance;
    public static InvalidItemContentExceptionUnmarshaller Instance { get; }
    private static InvalidItemContentExceptionUnmarshaller();
    public sealed virtual InvalidItemContentException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidItemContentException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidItemContentExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidKeyIdExceptionUnmarshaller : object {
    private static InvalidKeyIdExceptionUnmarshaller _instance;
    public static InvalidKeyIdExceptionUnmarshaller Instance { get; }
    private static InvalidKeyIdExceptionUnmarshaller();
    public sealed virtual InvalidKeyIdException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidKeyIdException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidKeyIdExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidNextTokenExceptionUnmarshaller : object {
    private static InvalidNextTokenExceptionUnmarshaller _instance;
    public static InvalidNextTokenExceptionUnmarshaller Instance { get; }
    private static InvalidNextTokenExceptionUnmarshaller();
    public sealed virtual InvalidNextTokenException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidNextTokenException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidNextTokenExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidNotificationConfigExceptionUnmarshaller : object {
    private static InvalidNotificationConfigExceptionUnmarshaller _instance;
    public static InvalidNotificationConfigExceptionUnmarshaller Instance { get; }
    private static InvalidNotificationConfigExceptionUnmarshaller();
    public sealed virtual InvalidNotificationConfigException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidNotificationConfigException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidNotificationConfigExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidOptionExceptionUnmarshaller : object {
    private static InvalidOptionExceptionUnmarshaller _instance;
    public static InvalidOptionExceptionUnmarshaller Instance { get; }
    private static InvalidOptionExceptionUnmarshaller();
    public sealed virtual InvalidOptionException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidOptionException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidOptionExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidOutputFolderExceptionUnmarshaller : object {
    private static InvalidOutputFolderExceptionUnmarshaller _instance;
    public static InvalidOutputFolderExceptionUnmarshaller Instance { get; }
    private static InvalidOutputFolderExceptionUnmarshaller();
    public sealed virtual InvalidOutputFolderException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidOutputFolderException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidOutputFolderExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidOutputLocationExceptionUnmarshaller : object {
    private static InvalidOutputLocationExceptionUnmarshaller _instance;
    public static InvalidOutputLocationExceptionUnmarshaller Instance { get; }
    private static InvalidOutputLocationExceptionUnmarshaller();
    public sealed virtual InvalidOutputLocationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidOutputLocationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidOutputLocationExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidParametersExceptionUnmarshaller : object {
    private static InvalidParametersExceptionUnmarshaller _instance;
    public static InvalidParametersExceptionUnmarshaller Instance { get; }
    private static InvalidParametersExceptionUnmarshaller();
    public sealed virtual InvalidParametersException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidParametersException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidParametersExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidPermissionTypeExceptionUnmarshaller : object {
    private static InvalidPermissionTypeExceptionUnmarshaller _instance;
    public static InvalidPermissionTypeExceptionUnmarshaller Instance { get; }
    private static InvalidPermissionTypeExceptionUnmarshaller();
    public sealed virtual InvalidPermissionTypeException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidPermissionTypeException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidPermissionTypeExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidPluginNameExceptionUnmarshaller : object {
    private static InvalidPluginNameExceptionUnmarshaller _instance;
    public static InvalidPluginNameExceptionUnmarshaller Instance { get; }
    private static InvalidPluginNameExceptionUnmarshaller();
    public sealed virtual InvalidPluginNameException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidPluginNameException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidPluginNameExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidPolicyAttributeExceptionUnmarshaller : object {
    private static InvalidPolicyAttributeExceptionUnmarshaller _instance;
    public static InvalidPolicyAttributeExceptionUnmarshaller Instance { get; }
    private static InvalidPolicyAttributeExceptionUnmarshaller();
    public sealed virtual InvalidPolicyAttributeException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidPolicyAttributeException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidPolicyAttributeExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidPolicyTypeExceptionUnmarshaller : object {
    private static InvalidPolicyTypeExceptionUnmarshaller _instance;
    public static InvalidPolicyTypeExceptionUnmarshaller Instance { get; }
    private static InvalidPolicyTypeExceptionUnmarshaller();
    public sealed virtual InvalidPolicyTypeException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidPolicyTypeException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidPolicyTypeExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidResourceIdExceptionUnmarshaller : object {
    private static InvalidResourceIdExceptionUnmarshaller _instance;
    public static InvalidResourceIdExceptionUnmarshaller Instance { get; }
    private static InvalidResourceIdExceptionUnmarshaller();
    public sealed virtual InvalidResourceIdException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidResourceIdException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidResourceIdExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidResourceTypeExceptionUnmarshaller : object {
    private static InvalidResourceTypeExceptionUnmarshaller _instance;
    public static InvalidResourceTypeExceptionUnmarshaller Instance { get; }
    private static InvalidResourceTypeExceptionUnmarshaller();
    public sealed virtual InvalidResourceTypeException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidResourceTypeException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidResourceTypeExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidResultAttributeExceptionUnmarshaller : object {
    private static InvalidResultAttributeExceptionUnmarshaller _instance;
    public static InvalidResultAttributeExceptionUnmarshaller Instance { get; }
    private static InvalidResultAttributeExceptionUnmarshaller();
    public sealed virtual InvalidResultAttributeException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidResultAttributeException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidResultAttributeExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidRoleExceptionUnmarshaller : object {
    private static InvalidRoleExceptionUnmarshaller _instance;
    public static InvalidRoleExceptionUnmarshaller Instance { get; }
    private static InvalidRoleExceptionUnmarshaller();
    public sealed virtual InvalidRoleException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidRoleException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidRoleExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidScheduleExceptionUnmarshaller : object {
    private static InvalidScheduleExceptionUnmarshaller _instance;
    public static InvalidScheduleExceptionUnmarshaller Instance { get; }
    private static InvalidScheduleExceptionUnmarshaller();
    public sealed virtual InvalidScheduleException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidScheduleException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidScheduleExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidTagExceptionUnmarshaller : object {
    private static InvalidTagExceptionUnmarshaller _instance;
    public static InvalidTagExceptionUnmarshaller Instance { get; }
    private static InvalidTagExceptionUnmarshaller();
    public sealed virtual InvalidTagException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidTagException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidTagExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidTargetExceptionUnmarshaller : object {
    private static InvalidTargetExceptionUnmarshaller _instance;
    public static InvalidTargetExceptionUnmarshaller Instance { get; }
    private static InvalidTargetExceptionUnmarshaller();
    public sealed virtual InvalidTargetException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidTargetException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidTargetExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidTargetMapsExceptionUnmarshaller : object {
    private static InvalidTargetMapsExceptionUnmarshaller _instance;
    public static InvalidTargetMapsExceptionUnmarshaller Instance { get; }
    private static InvalidTargetMapsExceptionUnmarshaller();
    public sealed virtual InvalidTargetMapsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidTargetMapsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidTargetMapsExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidTypeNameExceptionUnmarshaller : object {
    private static InvalidTypeNameExceptionUnmarshaller _instance;
    public static InvalidTypeNameExceptionUnmarshaller Instance { get; }
    private static InvalidTypeNameExceptionUnmarshaller();
    public sealed virtual InvalidTypeNameException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidTypeNameException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidTypeNameExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvalidUpdateExceptionUnmarshaller : object {
    private static InvalidUpdateExceptionUnmarshaller _instance;
    public static InvalidUpdateExceptionUnmarshaller Instance { get; }
    private static InvalidUpdateExceptionUnmarshaller();
    public sealed virtual InvalidUpdateException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidUpdateException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidUpdateExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InventoryAggregatorMarshaller : object {
    public static InventoryAggregatorMarshaller Instance;
    private static InventoryAggregatorMarshaller();
    public sealed virtual void Marshall(InventoryAggregator requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InventoryDeletionStatusItemUnmarshaller : object {
    private static InventoryDeletionStatusItemUnmarshaller _instance;
    public static InventoryDeletionStatusItemUnmarshaller Instance { get; }
    private static InventoryDeletionStatusItemUnmarshaller();
    private sealed virtual override InventoryDeletionStatusItem Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.InventoryDeletionStatusItem,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InventoryDeletionStatusItem Unmarshall(JsonUnmarshallerContext context);
    public static InventoryDeletionStatusItemUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InventoryDeletionSummaryItemUnmarshaller : object {
    private static InventoryDeletionSummaryItemUnmarshaller _instance;
    public static InventoryDeletionSummaryItemUnmarshaller Instance { get; }
    private static InventoryDeletionSummaryItemUnmarshaller();
    private sealed virtual override InventoryDeletionSummaryItem Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.InventoryDeletionSummaryItem,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InventoryDeletionSummaryItem Unmarshall(JsonUnmarshallerContext context);
    public static InventoryDeletionSummaryItemUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InventoryDeletionSummaryUnmarshaller : object {
    private static InventoryDeletionSummaryUnmarshaller _instance;
    public static InventoryDeletionSummaryUnmarshaller Instance { get; }
    private static InventoryDeletionSummaryUnmarshaller();
    private sealed virtual override InventoryDeletionSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.InventoryDeletionSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InventoryDeletionSummary Unmarshall(JsonUnmarshallerContext context);
    public static InventoryDeletionSummaryUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InventoryFilterMarshaller : object {
    public static InventoryFilterMarshaller Instance;
    private static InventoryFilterMarshaller();
    public sealed virtual void Marshall(InventoryFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InventoryGroupMarshaller : object {
    public static InventoryGroupMarshaller Instance;
    private static InventoryGroupMarshaller();
    public sealed virtual void Marshall(InventoryGroup requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InventoryItemAttributeUnmarshaller : object {
    private static InventoryItemAttributeUnmarshaller _instance;
    public static InventoryItemAttributeUnmarshaller Instance { get; }
    private static InventoryItemAttributeUnmarshaller();
    private sealed virtual override InventoryItemAttribute Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.InventoryItemAttribute,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InventoryItemAttribute Unmarshall(JsonUnmarshallerContext context);
    public static InventoryItemAttributeUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InventoryItemMarshaller : object {
    public static InventoryItemMarshaller Instance;
    private static InventoryItemMarshaller();
    public sealed virtual void Marshall(InventoryItem requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InventoryItemSchemaUnmarshaller : object {
    private static InventoryItemSchemaUnmarshaller _instance;
    public static InventoryItemSchemaUnmarshaller Instance { get; }
    private static InventoryItemSchemaUnmarshaller();
    private sealed virtual override InventoryItemSchema Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.InventoryItemSchema,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InventoryItemSchema Unmarshall(JsonUnmarshallerContext context);
    public static InventoryItemSchemaUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InventoryResultEntityUnmarshaller : object {
    private static InventoryResultEntityUnmarshaller _instance;
    public static InventoryResultEntityUnmarshaller Instance { get; }
    private static InventoryResultEntityUnmarshaller();
    private sealed virtual override InventoryResultEntity Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.InventoryResultEntity,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InventoryResultEntity Unmarshall(JsonUnmarshallerContext context);
    public static InventoryResultEntityUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InventoryResultItemUnmarshaller : object {
    private static InventoryResultItemUnmarshaller _instance;
    public static InventoryResultItemUnmarshaller Instance { get; }
    private static InventoryResultItemUnmarshaller();
    private sealed virtual override InventoryResultItem Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.InventoryResultItem,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InventoryResultItem Unmarshall(JsonUnmarshallerContext context);
    public static InventoryResultItemUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.InvocationDoesNotExistExceptionUnmarshaller : object {
    private static InvocationDoesNotExistExceptionUnmarshaller _instance;
    public static InvocationDoesNotExistExceptionUnmarshaller Instance { get; }
    private static InvocationDoesNotExistExceptionUnmarshaller();
    public sealed virtual InvocationDoesNotExistException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvocationDoesNotExistException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvocationDoesNotExistExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ItemContentMismatchExceptionUnmarshaller : object {
    private static ItemContentMismatchExceptionUnmarshaller _instance;
    public static ItemContentMismatchExceptionUnmarshaller Instance { get; }
    private static ItemContentMismatchExceptionUnmarshaller();
    public sealed virtual ItemContentMismatchException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ItemContentMismatchException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ItemContentMismatchExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ItemSizeLimitExceededExceptionUnmarshaller : object {
    private static ItemSizeLimitExceededExceptionUnmarshaller _instance;
    public static ItemSizeLimitExceededExceptionUnmarshaller Instance { get; }
    private static ItemSizeLimitExceededExceptionUnmarshaller();
    public sealed virtual ItemSizeLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ItemSizeLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ItemSizeLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.LabelParameterVersionRequestMarshaller : object {
    private static LabelParameterVersionRequestMarshaller _instance;
    public static LabelParameterVersionRequestMarshaller Instance { get; }
    private static LabelParameterVersionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(LabelParameterVersionRequest publicRequest);
    internal static LabelParameterVersionRequestMarshaller GetInstance();
    public static LabelParameterVersionRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.LabelParameterVersionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static LabelParameterVersionResponseUnmarshaller _instance;
    public static LabelParameterVersionResponseUnmarshaller Instance { get; }
    private static LabelParameterVersionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static LabelParameterVersionResponseUnmarshaller GetInstance();
    public static LabelParameterVersionResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListAssociationsRequestMarshaller : object {
    private static ListAssociationsRequestMarshaller _instance;
    public static ListAssociationsRequestMarshaller Instance { get; }
    private static ListAssociationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListAssociationsRequest publicRequest);
    internal static ListAssociationsRequestMarshaller GetInstance();
    public static ListAssociationsRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListAssociationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListAssociationsResponseUnmarshaller _instance;
    public static ListAssociationsResponseUnmarshaller Instance { get; }
    private static ListAssociationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListAssociationsResponseUnmarshaller GetInstance();
    public static ListAssociationsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListAssociationVersionsRequestMarshaller : object {
    private static ListAssociationVersionsRequestMarshaller _instance;
    public static ListAssociationVersionsRequestMarshaller Instance { get; }
    private static ListAssociationVersionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListAssociationVersionsRequest publicRequest);
    internal static ListAssociationVersionsRequestMarshaller GetInstance();
    public static ListAssociationVersionsRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListAssociationVersionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListAssociationVersionsResponseUnmarshaller _instance;
    public static ListAssociationVersionsResponseUnmarshaller Instance { get; }
    private static ListAssociationVersionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListAssociationVersionsResponseUnmarshaller GetInstance();
    public static ListAssociationVersionsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListCommandInvocationsRequestMarshaller : object {
    private static ListCommandInvocationsRequestMarshaller _instance;
    public static ListCommandInvocationsRequestMarshaller Instance { get; }
    private static ListCommandInvocationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListCommandInvocationsRequest publicRequest);
    internal static ListCommandInvocationsRequestMarshaller GetInstance();
    public static ListCommandInvocationsRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListCommandInvocationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListCommandInvocationsResponseUnmarshaller _instance;
    public static ListCommandInvocationsResponseUnmarshaller Instance { get; }
    private static ListCommandInvocationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListCommandInvocationsResponseUnmarshaller GetInstance();
    public static ListCommandInvocationsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListCommandsRequestMarshaller : object {
    private static ListCommandsRequestMarshaller _instance;
    public static ListCommandsRequestMarshaller Instance { get; }
    private static ListCommandsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListCommandsRequest publicRequest);
    internal static ListCommandsRequestMarshaller GetInstance();
    public static ListCommandsRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListCommandsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListCommandsResponseUnmarshaller _instance;
    public static ListCommandsResponseUnmarshaller Instance { get; }
    private static ListCommandsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListCommandsResponseUnmarshaller GetInstance();
    public static ListCommandsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListComplianceItemsRequestMarshaller : object {
    private static ListComplianceItemsRequestMarshaller _instance;
    public static ListComplianceItemsRequestMarshaller Instance { get; }
    private static ListComplianceItemsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListComplianceItemsRequest publicRequest);
    internal static ListComplianceItemsRequestMarshaller GetInstance();
    public static ListComplianceItemsRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListComplianceItemsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListComplianceItemsResponseUnmarshaller _instance;
    public static ListComplianceItemsResponseUnmarshaller Instance { get; }
    private static ListComplianceItemsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListComplianceItemsResponseUnmarshaller GetInstance();
    public static ListComplianceItemsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListComplianceSummariesRequestMarshaller : object {
    private static ListComplianceSummariesRequestMarshaller _instance;
    public static ListComplianceSummariesRequestMarshaller Instance { get; }
    private static ListComplianceSummariesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListComplianceSummariesRequest publicRequest);
    internal static ListComplianceSummariesRequestMarshaller GetInstance();
    public static ListComplianceSummariesRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListComplianceSummariesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListComplianceSummariesResponseUnmarshaller _instance;
    public static ListComplianceSummariesResponseUnmarshaller Instance { get; }
    private static ListComplianceSummariesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListComplianceSummariesResponseUnmarshaller GetInstance();
    public static ListComplianceSummariesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListDocumentMetadataHistoryRequestMarshaller : object {
    private static ListDocumentMetadataHistoryRequestMarshaller _instance;
    public static ListDocumentMetadataHistoryRequestMarshaller Instance { get; }
    private static ListDocumentMetadataHistoryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListDocumentMetadataHistoryRequest publicRequest);
    internal static ListDocumentMetadataHistoryRequestMarshaller GetInstance();
    public static ListDocumentMetadataHistoryRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListDocumentMetadataHistoryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListDocumentMetadataHistoryResponseUnmarshaller _instance;
    public static ListDocumentMetadataHistoryResponseUnmarshaller Instance { get; }
    private static ListDocumentMetadataHistoryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListDocumentMetadataHistoryResponseUnmarshaller GetInstance();
    public static ListDocumentMetadataHistoryResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListDocumentsRequestMarshaller : object {
    private static ListDocumentsRequestMarshaller _instance;
    public static ListDocumentsRequestMarshaller Instance { get; }
    private static ListDocumentsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListDocumentsRequest publicRequest);
    internal static ListDocumentsRequestMarshaller GetInstance();
    public static ListDocumentsRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListDocumentsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListDocumentsResponseUnmarshaller _instance;
    public static ListDocumentsResponseUnmarshaller Instance { get; }
    private static ListDocumentsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListDocumentsResponseUnmarshaller GetInstance();
    public static ListDocumentsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListDocumentVersionsRequestMarshaller : object {
    private static ListDocumentVersionsRequestMarshaller _instance;
    public static ListDocumentVersionsRequestMarshaller Instance { get; }
    private static ListDocumentVersionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListDocumentVersionsRequest publicRequest);
    internal static ListDocumentVersionsRequestMarshaller GetInstance();
    public static ListDocumentVersionsRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListDocumentVersionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListDocumentVersionsResponseUnmarshaller _instance;
    public static ListDocumentVersionsResponseUnmarshaller Instance { get; }
    private static ListDocumentVersionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListDocumentVersionsResponseUnmarshaller GetInstance();
    public static ListDocumentVersionsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListInventoryEntriesRequestMarshaller : object {
    private static ListInventoryEntriesRequestMarshaller _instance;
    public static ListInventoryEntriesRequestMarshaller Instance { get; }
    private static ListInventoryEntriesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListInventoryEntriesRequest publicRequest);
    internal static ListInventoryEntriesRequestMarshaller GetInstance();
    public static ListInventoryEntriesRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListInventoryEntriesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListInventoryEntriesResponseUnmarshaller _instance;
    public static ListInventoryEntriesResponseUnmarshaller Instance { get; }
    private static ListInventoryEntriesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListInventoryEntriesResponseUnmarshaller GetInstance();
    public static ListInventoryEntriesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListOpsItemEventsRequestMarshaller : object {
    private static ListOpsItemEventsRequestMarshaller _instance;
    public static ListOpsItemEventsRequestMarshaller Instance { get; }
    private static ListOpsItemEventsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListOpsItemEventsRequest publicRequest);
    internal static ListOpsItemEventsRequestMarshaller GetInstance();
    public static ListOpsItemEventsRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListOpsItemEventsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListOpsItemEventsResponseUnmarshaller _instance;
    public static ListOpsItemEventsResponseUnmarshaller Instance { get; }
    private static ListOpsItemEventsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListOpsItemEventsResponseUnmarshaller GetInstance();
    public static ListOpsItemEventsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListOpsItemRelatedItemsRequestMarshaller : object {
    private static ListOpsItemRelatedItemsRequestMarshaller _instance;
    public static ListOpsItemRelatedItemsRequestMarshaller Instance { get; }
    private static ListOpsItemRelatedItemsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListOpsItemRelatedItemsRequest publicRequest);
    internal static ListOpsItemRelatedItemsRequestMarshaller GetInstance();
    public static ListOpsItemRelatedItemsRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListOpsItemRelatedItemsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListOpsItemRelatedItemsResponseUnmarshaller _instance;
    public static ListOpsItemRelatedItemsResponseUnmarshaller Instance { get; }
    private static ListOpsItemRelatedItemsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListOpsItemRelatedItemsResponseUnmarshaller GetInstance();
    public static ListOpsItemRelatedItemsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListOpsMetadataRequestMarshaller : object {
    private static ListOpsMetadataRequestMarshaller _instance;
    public static ListOpsMetadataRequestMarshaller Instance { get; }
    private static ListOpsMetadataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListOpsMetadataRequest publicRequest);
    internal static ListOpsMetadataRequestMarshaller GetInstance();
    public static ListOpsMetadataRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListOpsMetadataResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListOpsMetadataResponseUnmarshaller _instance;
    public static ListOpsMetadataResponseUnmarshaller Instance { get; }
    private static ListOpsMetadataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListOpsMetadataResponseUnmarshaller GetInstance();
    public static ListOpsMetadataResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListResourceComplianceSummariesRequestMarshaller : object {
    private static ListResourceComplianceSummariesRequestMarshaller _instance;
    public static ListResourceComplianceSummariesRequestMarshaller Instance { get; }
    private static ListResourceComplianceSummariesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListResourceComplianceSummariesRequest publicRequest);
    internal static ListResourceComplianceSummariesRequestMarshaller GetInstance();
    public static ListResourceComplianceSummariesRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListResourceComplianceSummariesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListResourceComplianceSummariesResponseUnmarshaller _instance;
    public static ListResourceComplianceSummariesResponseUnmarshaller Instance { get; }
    private static ListResourceComplianceSummariesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListResourceComplianceSummariesResponseUnmarshaller GetInstance();
    public static ListResourceComplianceSummariesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListResourceDataSyncRequestMarshaller : object {
    private static ListResourceDataSyncRequestMarshaller _instance;
    public static ListResourceDataSyncRequestMarshaller Instance { get; }
    private static ListResourceDataSyncRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListResourceDataSyncRequest publicRequest);
    internal static ListResourceDataSyncRequestMarshaller GetInstance();
    public static ListResourceDataSyncRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListResourceDataSyncResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListResourceDataSyncResponseUnmarshaller _instance;
    public static ListResourceDataSyncResponseUnmarshaller Instance { get; }
    private static ListResourceDataSyncResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListResourceDataSyncResponseUnmarshaller GetInstance();
    public static ListResourceDataSyncResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller : object {
    private static ListTagsForResourceRequestMarshaller _instance;
    public static ListTagsForResourceRequestMarshaller Instance { get; }
    private static ListTagsForResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsForResourceRequest publicRequest);
    internal static ListTagsForResourceRequestMarshaller GetInstance();
    public static ListTagsForResourceRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTagsForResourceResponseUnmarshaller _instance;
    public static ListTagsForResourceResponseUnmarshaller Instance { get; }
    private static ListTagsForResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsForResourceResponseUnmarshaller GetInstance();
    public static ListTagsForResourceResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.LoggingInfoMarshaller : object {
    public static LoggingInfoMarshaller Instance;
    private static LoggingInfoMarshaller();
    public sealed virtual void Marshall(LoggingInfo requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.LoggingInfoUnmarshaller : object {
    private static LoggingInfoUnmarshaller _instance;
    public static LoggingInfoUnmarshaller Instance { get; }
    private static LoggingInfoUnmarshaller();
    private sealed virtual override LoggingInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.LoggingInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LoggingInfo Unmarshall(JsonUnmarshallerContext context);
    public static LoggingInfoUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.MaintenanceWindowAutomationParametersMarshaller : object {
    public static MaintenanceWindowAutomationParametersMarshaller Instance;
    private static MaintenanceWindowAutomationParametersMarshaller();
    public sealed virtual void Marshall(MaintenanceWindowAutomationParameters requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.MaintenanceWindowAutomationParametersUnmarshaller : object {
    private static MaintenanceWindowAutomationParametersUnmarshaller _instance;
    public static MaintenanceWindowAutomationParametersUnmarshaller Instance { get; }
    private static MaintenanceWindowAutomationParametersUnmarshaller();
    private sealed virtual override MaintenanceWindowAutomationParameters Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.MaintenanceWindowAutomationParameters,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MaintenanceWindowAutomationParameters Unmarshall(JsonUnmarshallerContext context);
    public static MaintenanceWindowAutomationParametersUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.MaintenanceWindowExecutionTaskIdentityUnmarshaller : object {
    private static MaintenanceWindowExecutionTaskIdentityUnmarshaller _instance;
    public static MaintenanceWindowExecutionTaskIdentityUnmarshaller Instance { get; }
    private static MaintenanceWindowExecutionTaskIdentityUnmarshaller();
    private sealed virtual override MaintenanceWindowExecutionTaskIdentity Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.MaintenanceWindowExecutionTaskIdentity,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MaintenanceWindowExecutionTaskIdentity Unmarshall(JsonUnmarshallerContext context);
    public static MaintenanceWindowExecutionTaskIdentityUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.MaintenanceWindowExecutionTaskInvocationIdentityUnmarshaller : object {
    private static MaintenanceWindowExecutionTaskInvocationIdentityUnmarshaller _instance;
    public static MaintenanceWindowExecutionTaskInvocationIdentityUnmarshaller Instance { get; }
    private static MaintenanceWindowExecutionTaskInvocationIdentityUnmarshaller();
    private sealed virtual override MaintenanceWindowExecutionTaskInvocationIdentity Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.MaintenanceWindowExecutionTaskInvocationIdentity,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MaintenanceWindowExecutionTaskInvocationIdentity Unmarshall(JsonUnmarshallerContext context);
    public static MaintenanceWindowExecutionTaskInvocationIdentityUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.MaintenanceWindowExecutionUnmarshaller : object {
    private static MaintenanceWindowExecutionUnmarshaller _instance;
    public static MaintenanceWindowExecutionUnmarshaller Instance { get; }
    private static MaintenanceWindowExecutionUnmarshaller();
    private sealed virtual override MaintenanceWindowExecution Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.MaintenanceWindowExecution,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MaintenanceWindowExecution Unmarshall(JsonUnmarshallerContext context);
    public static MaintenanceWindowExecutionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.MaintenanceWindowFilterMarshaller : object {
    public static MaintenanceWindowFilterMarshaller Instance;
    private static MaintenanceWindowFilterMarshaller();
    public sealed virtual void Marshall(MaintenanceWindowFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.MaintenanceWindowIdentityForTargetUnmarshaller : object {
    private static MaintenanceWindowIdentityForTargetUnmarshaller _instance;
    public static MaintenanceWindowIdentityForTargetUnmarshaller Instance { get; }
    private static MaintenanceWindowIdentityForTargetUnmarshaller();
    private sealed virtual override MaintenanceWindowIdentityForTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.MaintenanceWindowIdentityForTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MaintenanceWindowIdentityForTarget Unmarshall(JsonUnmarshallerContext context);
    public static MaintenanceWindowIdentityForTargetUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.MaintenanceWindowIdentityUnmarshaller : object {
    private static MaintenanceWindowIdentityUnmarshaller _instance;
    public static MaintenanceWindowIdentityUnmarshaller Instance { get; }
    private static MaintenanceWindowIdentityUnmarshaller();
    private sealed virtual override MaintenanceWindowIdentity Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.MaintenanceWindowIdentity,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MaintenanceWindowIdentity Unmarshall(JsonUnmarshallerContext context);
    public static MaintenanceWindowIdentityUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.MaintenanceWindowLambdaParametersMarshaller : object {
    public static MaintenanceWindowLambdaParametersMarshaller Instance;
    private static MaintenanceWindowLambdaParametersMarshaller();
    public sealed virtual void Marshall(MaintenanceWindowLambdaParameters requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.MaintenanceWindowLambdaParametersUnmarshaller : object {
    private static MaintenanceWindowLambdaParametersUnmarshaller _instance;
    public static MaintenanceWindowLambdaParametersUnmarshaller Instance { get; }
    private static MaintenanceWindowLambdaParametersUnmarshaller();
    private sealed virtual override MaintenanceWindowLambdaParameters Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.MaintenanceWindowLambdaParameters,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MaintenanceWindowLambdaParameters Unmarshall(JsonUnmarshallerContext context);
    public static MaintenanceWindowLambdaParametersUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.MaintenanceWindowRunCommandParametersMarshaller : object {
    public static MaintenanceWindowRunCommandParametersMarshaller Instance;
    private static MaintenanceWindowRunCommandParametersMarshaller();
    public sealed virtual void Marshall(MaintenanceWindowRunCommandParameters requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.MaintenanceWindowRunCommandParametersUnmarshaller : object {
    private static MaintenanceWindowRunCommandParametersUnmarshaller _instance;
    public static MaintenanceWindowRunCommandParametersUnmarshaller Instance { get; }
    private static MaintenanceWindowRunCommandParametersUnmarshaller();
    private sealed virtual override MaintenanceWindowRunCommandParameters Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.MaintenanceWindowRunCommandParameters,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MaintenanceWindowRunCommandParameters Unmarshall(JsonUnmarshallerContext context);
    public static MaintenanceWindowRunCommandParametersUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.MaintenanceWindowStepFunctionsParametersMarshaller : object {
    public static MaintenanceWindowStepFunctionsParametersMarshaller Instance;
    private static MaintenanceWindowStepFunctionsParametersMarshaller();
    public sealed virtual void Marshall(MaintenanceWindowStepFunctionsParameters requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.MaintenanceWindowStepFunctionsParametersUnmarshaller : object {
    private static MaintenanceWindowStepFunctionsParametersUnmarshaller _instance;
    public static MaintenanceWindowStepFunctionsParametersUnmarshaller Instance { get; }
    private static MaintenanceWindowStepFunctionsParametersUnmarshaller();
    private sealed virtual override MaintenanceWindowStepFunctionsParameters Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.MaintenanceWindowStepFunctionsParameters,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MaintenanceWindowStepFunctionsParameters Unmarshall(JsonUnmarshallerContext context);
    public static MaintenanceWindowStepFunctionsParametersUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.MaintenanceWindowTargetUnmarshaller : object {
    private static MaintenanceWindowTargetUnmarshaller _instance;
    public static MaintenanceWindowTargetUnmarshaller Instance { get; }
    private static MaintenanceWindowTargetUnmarshaller();
    private sealed virtual override MaintenanceWindowTarget Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.MaintenanceWindowTarget,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MaintenanceWindowTarget Unmarshall(JsonUnmarshallerContext context);
    public static MaintenanceWindowTargetUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.MaintenanceWindowTaskInvocationParametersMarshaller : object {
    public static MaintenanceWindowTaskInvocationParametersMarshaller Instance;
    private static MaintenanceWindowTaskInvocationParametersMarshaller();
    public sealed virtual void Marshall(MaintenanceWindowTaskInvocationParameters requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.MaintenanceWindowTaskInvocationParametersUnmarshaller : object {
    private static MaintenanceWindowTaskInvocationParametersUnmarshaller _instance;
    public static MaintenanceWindowTaskInvocationParametersUnmarshaller Instance { get; }
    private static MaintenanceWindowTaskInvocationParametersUnmarshaller();
    private sealed virtual override MaintenanceWindowTaskInvocationParameters Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.MaintenanceWindowTaskInvocationParameters,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MaintenanceWindowTaskInvocationParameters Unmarshall(JsonUnmarshallerContext context);
    public static MaintenanceWindowTaskInvocationParametersUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.MaintenanceWindowTaskParameterValueExpressionMarshaller : object {
    public static MaintenanceWindowTaskParameterValueExpressionMarshaller Instance;
    private static MaintenanceWindowTaskParameterValueExpressionMarshaller();
    public sealed virtual void Marshall(MaintenanceWindowTaskParameterValueExpression requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.MaintenanceWindowTaskParameterValueExpressionUnmarshaller : object {
    private static MaintenanceWindowTaskParameterValueExpressionUnmarshaller _instance;
    public static MaintenanceWindowTaskParameterValueExpressionUnmarshaller Instance { get; }
    private static MaintenanceWindowTaskParameterValueExpressionUnmarshaller();
    private sealed virtual override MaintenanceWindowTaskParameterValueExpression Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.MaintenanceWindowTaskParameterValueExpression,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MaintenanceWindowTaskParameterValueExpression Unmarshall(JsonUnmarshallerContext context);
    public static MaintenanceWindowTaskParameterValueExpressionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.MaintenanceWindowTaskUnmarshaller : object {
    private static MaintenanceWindowTaskUnmarshaller _instance;
    public static MaintenanceWindowTaskUnmarshaller Instance { get; }
    private static MaintenanceWindowTaskUnmarshaller();
    private sealed virtual override MaintenanceWindowTask Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.MaintenanceWindowTask,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MaintenanceWindowTask Unmarshall(JsonUnmarshallerContext context);
    public static MaintenanceWindowTaskUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.MalformedResourcePolicyDocumentExceptionUnmarshaller : object {
    private static MalformedResourcePolicyDocumentExceptionUnmarshaller _instance;
    public static MalformedResourcePolicyDocumentExceptionUnmarshaller Instance { get; }
    private static MalformedResourcePolicyDocumentExceptionUnmarshaller();
    public sealed virtual MalformedResourcePolicyDocumentException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual MalformedResourcePolicyDocumentException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static MalformedResourcePolicyDocumentExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.MaxDocumentSizeExceededExceptionUnmarshaller : object {
    private static MaxDocumentSizeExceededExceptionUnmarshaller _instance;
    public static MaxDocumentSizeExceededExceptionUnmarshaller Instance { get; }
    private static MaxDocumentSizeExceededExceptionUnmarshaller();
    public sealed virtual MaxDocumentSizeExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual MaxDocumentSizeExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static MaxDocumentSizeExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.MetadataValueMarshaller : object {
    public static MetadataValueMarshaller Instance;
    private static MetadataValueMarshaller();
    public sealed virtual void Marshall(MetadataValue requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.MetadataValueUnmarshaller : object {
    private static MetadataValueUnmarshaller _instance;
    public static MetadataValueUnmarshaller Instance { get; }
    private static MetadataValueUnmarshaller();
    private sealed virtual override MetadataValue Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.MetadataValue,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MetadataValue Unmarshall(JsonUnmarshallerContext context);
    public static MetadataValueUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ModifyDocumentPermissionRequestMarshaller : object {
    private static ModifyDocumentPermissionRequestMarshaller _instance;
    public static ModifyDocumentPermissionRequestMarshaller Instance { get; }
    private static ModifyDocumentPermissionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyDocumentPermissionRequest publicRequest);
    internal static ModifyDocumentPermissionRequestMarshaller GetInstance();
    public static ModifyDocumentPermissionRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ModifyDocumentPermissionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ModifyDocumentPermissionResponseUnmarshaller _instance;
    public static ModifyDocumentPermissionResponseUnmarshaller Instance { get; }
    private static ModifyDocumentPermissionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyDocumentPermissionResponseUnmarshaller GetInstance();
    public static ModifyDocumentPermissionResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.NonCompliantSummaryUnmarshaller : object {
    private static NonCompliantSummaryUnmarshaller _instance;
    public static NonCompliantSummaryUnmarshaller Instance { get; }
    private static NonCompliantSummaryUnmarshaller();
    private sealed virtual override NonCompliantSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.NonCompliantSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NonCompliantSummary Unmarshall(JsonUnmarshallerContext context);
    public static NonCompliantSummaryUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.NotificationConfigMarshaller : object {
    public static NotificationConfigMarshaller Instance;
    private static NotificationConfigMarshaller();
    public sealed virtual void Marshall(NotificationConfig requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.NotificationConfigUnmarshaller : object {
    private static NotificationConfigUnmarshaller _instance;
    public static NotificationConfigUnmarshaller Instance { get; }
    private static NotificationConfigUnmarshaller();
    private sealed virtual override NotificationConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.NotificationConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NotificationConfig Unmarshall(JsonUnmarshallerContext context);
    public static NotificationConfigUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsAggregatorMarshaller : object {
    public static OpsAggregatorMarshaller Instance;
    private static OpsAggregatorMarshaller();
    public sealed virtual void Marshall(OpsAggregator requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsEntityItemUnmarshaller : object {
    private static OpsEntityItemUnmarshaller _instance;
    public static OpsEntityItemUnmarshaller Instance { get; }
    private static OpsEntityItemUnmarshaller();
    private sealed virtual override OpsEntityItem Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.OpsEntityItem,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OpsEntityItem Unmarshall(JsonUnmarshallerContext context);
    public static OpsEntityItemUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsEntityUnmarshaller : object {
    private static OpsEntityUnmarshaller _instance;
    public static OpsEntityUnmarshaller Instance { get; }
    private static OpsEntityUnmarshaller();
    private sealed virtual override OpsEntity Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.OpsEntity,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OpsEntity Unmarshall(JsonUnmarshallerContext context);
    public static OpsEntityUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsFilterMarshaller : object {
    public static OpsFilterMarshaller Instance;
    private static OpsFilterMarshaller();
    public sealed virtual void Marshall(OpsFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsItemAccessDeniedExceptionUnmarshaller : object {
    private static OpsItemAccessDeniedExceptionUnmarshaller _instance;
    public static OpsItemAccessDeniedExceptionUnmarshaller Instance { get; }
    private static OpsItemAccessDeniedExceptionUnmarshaller();
    public sealed virtual OpsItemAccessDeniedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual OpsItemAccessDeniedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static OpsItemAccessDeniedExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsItemAlreadyExistsExceptionUnmarshaller : object {
    private static OpsItemAlreadyExistsExceptionUnmarshaller _instance;
    public static OpsItemAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static OpsItemAlreadyExistsExceptionUnmarshaller();
    public sealed virtual OpsItemAlreadyExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual OpsItemAlreadyExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static OpsItemAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsItemConflictExceptionUnmarshaller : object {
    private static OpsItemConflictExceptionUnmarshaller _instance;
    public static OpsItemConflictExceptionUnmarshaller Instance { get; }
    private static OpsItemConflictExceptionUnmarshaller();
    public sealed virtual OpsItemConflictException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual OpsItemConflictException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static OpsItemConflictExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsItemDataValueMarshaller : object {
    public static OpsItemDataValueMarshaller Instance;
    private static OpsItemDataValueMarshaller();
    public sealed virtual void Marshall(OpsItemDataValue requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsItemDataValueUnmarshaller : object {
    private static OpsItemDataValueUnmarshaller _instance;
    public static OpsItemDataValueUnmarshaller Instance { get; }
    private static OpsItemDataValueUnmarshaller();
    private sealed virtual override OpsItemDataValue Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.OpsItemDataValue,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OpsItemDataValue Unmarshall(JsonUnmarshallerContext context);
    public static OpsItemDataValueUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsItemEventFilterMarshaller : object {
    public static OpsItemEventFilterMarshaller Instance;
    private static OpsItemEventFilterMarshaller();
    public sealed virtual void Marshall(OpsItemEventFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsItemEventSummaryUnmarshaller : object {
    private static OpsItemEventSummaryUnmarshaller _instance;
    public static OpsItemEventSummaryUnmarshaller Instance { get; }
    private static OpsItemEventSummaryUnmarshaller();
    private sealed virtual override OpsItemEventSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.OpsItemEventSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OpsItemEventSummary Unmarshall(JsonUnmarshallerContext context);
    public static OpsItemEventSummaryUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsItemFilterMarshaller : object {
    public static OpsItemFilterMarshaller Instance;
    private static OpsItemFilterMarshaller();
    public sealed virtual void Marshall(OpsItemFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsItemIdentityUnmarshaller : object {
    private static OpsItemIdentityUnmarshaller _instance;
    public static OpsItemIdentityUnmarshaller Instance { get; }
    private static OpsItemIdentityUnmarshaller();
    private sealed virtual override OpsItemIdentity Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.OpsItemIdentity,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OpsItemIdentity Unmarshall(JsonUnmarshallerContext context);
    public static OpsItemIdentityUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsItemInvalidParameterExceptionUnmarshaller : object {
    private static OpsItemInvalidParameterExceptionUnmarshaller _instance;
    public static OpsItemInvalidParameterExceptionUnmarshaller Instance { get; }
    private static OpsItemInvalidParameterExceptionUnmarshaller();
    public sealed virtual OpsItemInvalidParameterException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual OpsItemInvalidParameterException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static OpsItemInvalidParameterExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsItemLimitExceededExceptionUnmarshaller : object {
    private static OpsItemLimitExceededExceptionUnmarshaller _instance;
    public static OpsItemLimitExceededExceptionUnmarshaller Instance { get; }
    private static OpsItemLimitExceededExceptionUnmarshaller();
    public sealed virtual OpsItemLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual OpsItemLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static OpsItemLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsItemNotFoundExceptionUnmarshaller : object {
    private static OpsItemNotFoundExceptionUnmarshaller _instance;
    public static OpsItemNotFoundExceptionUnmarshaller Instance { get; }
    private static OpsItemNotFoundExceptionUnmarshaller();
    public sealed virtual OpsItemNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual OpsItemNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static OpsItemNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsItemNotificationMarshaller : object {
    public static OpsItemNotificationMarshaller Instance;
    private static OpsItemNotificationMarshaller();
    public sealed virtual void Marshall(OpsItemNotification requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsItemNotificationUnmarshaller : object {
    private static OpsItemNotificationUnmarshaller _instance;
    public static OpsItemNotificationUnmarshaller Instance { get; }
    private static OpsItemNotificationUnmarshaller();
    private sealed virtual override OpsItemNotification Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.OpsItemNotification,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OpsItemNotification Unmarshall(JsonUnmarshallerContext context);
    public static OpsItemNotificationUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsItemRelatedItemAlreadyExistsExceptionUnmarshaller : object {
    private static OpsItemRelatedItemAlreadyExistsExceptionUnmarshaller _instance;
    public static OpsItemRelatedItemAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static OpsItemRelatedItemAlreadyExistsExceptionUnmarshaller();
    public sealed virtual OpsItemRelatedItemAlreadyExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual OpsItemRelatedItemAlreadyExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static OpsItemRelatedItemAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsItemRelatedItemAssociationNotFoundExceptionUnmarshaller : object {
    private static OpsItemRelatedItemAssociationNotFoundExceptionUnmarshaller _instance;
    public static OpsItemRelatedItemAssociationNotFoundExceptionUnmarshaller Instance { get; }
    private static OpsItemRelatedItemAssociationNotFoundExceptionUnmarshaller();
    public sealed virtual OpsItemRelatedItemAssociationNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual OpsItemRelatedItemAssociationNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static OpsItemRelatedItemAssociationNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsItemRelatedItemsFilterMarshaller : object {
    public static OpsItemRelatedItemsFilterMarshaller Instance;
    private static OpsItemRelatedItemsFilterMarshaller();
    public sealed virtual void Marshall(OpsItemRelatedItemsFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsItemRelatedItemSummaryUnmarshaller : object {
    private static OpsItemRelatedItemSummaryUnmarshaller _instance;
    public static OpsItemRelatedItemSummaryUnmarshaller Instance { get; }
    private static OpsItemRelatedItemSummaryUnmarshaller();
    private sealed virtual override OpsItemRelatedItemSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.OpsItemRelatedItemSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OpsItemRelatedItemSummary Unmarshall(JsonUnmarshallerContext context);
    public static OpsItemRelatedItemSummaryUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsItemSummaryUnmarshaller : object {
    private static OpsItemSummaryUnmarshaller _instance;
    public static OpsItemSummaryUnmarshaller Instance { get; }
    private static OpsItemSummaryUnmarshaller();
    private sealed virtual override OpsItemSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.OpsItemSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OpsItemSummary Unmarshall(JsonUnmarshallerContext context);
    public static OpsItemSummaryUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsItemUnmarshaller : object {
    private static OpsItemUnmarshaller _instance;
    public static OpsItemUnmarshaller Instance { get; }
    private static OpsItemUnmarshaller();
    private sealed virtual override OpsItem Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.OpsItem,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OpsItem Unmarshall(JsonUnmarshallerContext context);
    public static OpsItemUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsMetadataAlreadyExistsExceptionUnmarshaller : object {
    private static OpsMetadataAlreadyExistsExceptionUnmarshaller _instance;
    public static OpsMetadataAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static OpsMetadataAlreadyExistsExceptionUnmarshaller();
    public sealed virtual OpsMetadataAlreadyExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual OpsMetadataAlreadyExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static OpsMetadataAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsMetadataFilterMarshaller : object {
    public static OpsMetadataFilterMarshaller Instance;
    private static OpsMetadataFilterMarshaller();
    public sealed virtual void Marshall(OpsMetadataFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsMetadataInvalidArgumentExceptionUnmarshaller : object {
    private static OpsMetadataInvalidArgumentExceptionUnmarshaller _instance;
    public static OpsMetadataInvalidArgumentExceptionUnmarshaller Instance { get; }
    private static OpsMetadataInvalidArgumentExceptionUnmarshaller();
    public sealed virtual OpsMetadataInvalidArgumentException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual OpsMetadataInvalidArgumentException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static OpsMetadataInvalidArgumentExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsMetadataKeyLimitExceededExceptionUnmarshaller : object {
    private static OpsMetadataKeyLimitExceededExceptionUnmarshaller _instance;
    public static OpsMetadataKeyLimitExceededExceptionUnmarshaller Instance { get; }
    private static OpsMetadataKeyLimitExceededExceptionUnmarshaller();
    public sealed virtual OpsMetadataKeyLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual OpsMetadataKeyLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static OpsMetadataKeyLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsMetadataLimitExceededExceptionUnmarshaller : object {
    private static OpsMetadataLimitExceededExceptionUnmarshaller _instance;
    public static OpsMetadataLimitExceededExceptionUnmarshaller Instance { get; }
    private static OpsMetadataLimitExceededExceptionUnmarshaller();
    public sealed virtual OpsMetadataLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual OpsMetadataLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static OpsMetadataLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsMetadataNotFoundExceptionUnmarshaller : object {
    private static OpsMetadataNotFoundExceptionUnmarshaller _instance;
    public static OpsMetadataNotFoundExceptionUnmarshaller Instance { get; }
    private static OpsMetadataNotFoundExceptionUnmarshaller();
    public sealed virtual OpsMetadataNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual OpsMetadataNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static OpsMetadataNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsMetadataTooManyUpdatesExceptionUnmarshaller : object {
    private static OpsMetadataTooManyUpdatesExceptionUnmarshaller _instance;
    public static OpsMetadataTooManyUpdatesExceptionUnmarshaller Instance { get; }
    private static OpsMetadataTooManyUpdatesExceptionUnmarshaller();
    public sealed virtual OpsMetadataTooManyUpdatesException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual OpsMetadataTooManyUpdatesException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static OpsMetadataTooManyUpdatesExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsMetadataUnmarshaller : object {
    private static OpsMetadataUnmarshaller _instance;
    public static OpsMetadataUnmarshaller Instance { get; }
    private static OpsMetadataUnmarshaller();
    private sealed virtual override OpsMetadata Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.OpsMetadata,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OpsMetadata Unmarshall(JsonUnmarshallerContext context);
    public static OpsMetadataUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OpsResultAttributeMarshaller : object {
    public static OpsResultAttributeMarshaller Instance;
    private static OpsResultAttributeMarshaller();
    public sealed virtual void Marshall(OpsResultAttribute requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.OutputSourceUnmarshaller : object {
    private static OutputSourceUnmarshaller _instance;
    public static OutputSourceUnmarshaller Instance { get; }
    private static OutputSourceUnmarshaller();
    private sealed virtual override OutputSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.OutputSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OutputSource Unmarshall(JsonUnmarshallerContext context);
    public static OutputSourceUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ParameterAlreadyExistsExceptionUnmarshaller : object {
    private static ParameterAlreadyExistsExceptionUnmarshaller _instance;
    public static ParameterAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static ParameterAlreadyExistsExceptionUnmarshaller();
    public sealed virtual ParameterAlreadyExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ParameterAlreadyExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ParameterAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ParameterHistoryUnmarshaller : object {
    private static ParameterHistoryUnmarshaller _instance;
    public static ParameterHistoryUnmarshaller Instance { get; }
    private static ParameterHistoryUnmarshaller();
    private sealed virtual override ParameterHistory Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.ParameterHistory,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ParameterHistory Unmarshall(JsonUnmarshallerContext context);
    public static ParameterHistoryUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ParameterInlinePolicyUnmarshaller : object {
    private static ParameterInlinePolicyUnmarshaller _instance;
    public static ParameterInlinePolicyUnmarshaller Instance { get; }
    private static ParameterInlinePolicyUnmarshaller();
    private sealed virtual override ParameterInlinePolicy Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.ParameterInlinePolicy,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ParameterInlinePolicy Unmarshall(JsonUnmarshallerContext context);
    public static ParameterInlinePolicyUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ParameterLimitExceededExceptionUnmarshaller : object {
    private static ParameterLimitExceededExceptionUnmarshaller _instance;
    public static ParameterLimitExceededExceptionUnmarshaller Instance { get; }
    private static ParameterLimitExceededExceptionUnmarshaller();
    public sealed virtual ParameterLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ParameterLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ParameterLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ParameterMaxVersionLimitExceededExceptionUnmarshaller : object {
    private static ParameterMaxVersionLimitExceededExceptionUnmarshaller _instance;
    public static ParameterMaxVersionLimitExceededExceptionUnmarshaller Instance { get; }
    private static ParameterMaxVersionLimitExceededExceptionUnmarshaller();
    public sealed virtual ParameterMaxVersionLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ParameterMaxVersionLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ParameterMaxVersionLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ParameterMetadataUnmarshaller : object {
    private static ParameterMetadataUnmarshaller _instance;
    public static ParameterMetadataUnmarshaller Instance { get; }
    private static ParameterMetadataUnmarshaller();
    private sealed virtual override ParameterMetadata Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.ParameterMetadata,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ParameterMetadata Unmarshall(JsonUnmarshallerContext context);
    public static ParameterMetadataUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ParameterNotFoundExceptionUnmarshaller : object {
    private static ParameterNotFoundExceptionUnmarshaller _instance;
    public static ParameterNotFoundExceptionUnmarshaller Instance { get; }
    private static ParameterNotFoundExceptionUnmarshaller();
    public sealed virtual ParameterNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ParameterNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ParameterNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ParameterPatternMismatchExceptionUnmarshaller : object {
    private static ParameterPatternMismatchExceptionUnmarshaller _instance;
    public static ParameterPatternMismatchExceptionUnmarshaller Instance { get; }
    private static ParameterPatternMismatchExceptionUnmarshaller();
    public sealed virtual ParameterPatternMismatchException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ParameterPatternMismatchException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ParameterPatternMismatchExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ParametersFilterMarshaller : object {
    public static ParametersFilterMarshaller Instance;
    private static ParametersFilterMarshaller();
    public sealed virtual void Marshall(ParametersFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ParameterStringFilterMarshaller : object {
    public static ParameterStringFilterMarshaller Instance;
    private static ParameterStringFilterMarshaller();
    public sealed virtual void Marshall(ParameterStringFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ParameterUnmarshaller : object {
    private static ParameterUnmarshaller _instance;
    public static ParameterUnmarshaller Instance { get; }
    private static ParameterUnmarshaller();
    private sealed virtual override Parameter Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.Parameter,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Parameter Unmarshall(JsonUnmarshallerContext context);
    public static ParameterUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ParameterVersionLabelLimitExceededExceptionUnmarshaller : object {
    private static ParameterVersionLabelLimitExceededExceptionUnmarshaller _instance;
    public static ParameterVersionLabelLimitExceededExceptionUnmarshaller Instance { get; }
    private static ParameterVersionLabelLimitExceededExceptionUnmarshaller();
    public sealed virtual ParameterVersionLabelLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ParameterVersionLabelLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ParameterVersionLabelLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ParameterVersionNotFoundExceptionUnmarshaller : object {
    private static ParameterVersionNotFoundExceptionUnmarshaller _instance;
    public static ParameterVersionNotFoundExceptionUnmarshaller Instance { get; }
    private static ParameterVersionNotFoundExceptionUnmarshaller();
    public sealed virtual ParameterVersionNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ParameterVersionNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ParameterVersionNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ParentStepDetailsUnmarshaller : object {
    private static ParentStepDetailsUnmarshaller _instance;
    public static ParentStepDetailsUnmarshaller Instance { get; }
    private static ParentStepDetailsUnmarshaller();
    private sealed virtual override ParentStepDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.ParentStepDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ParentStepDetails Unmarshall(JsonUnmarshallerContext context);
    public static ParentStepDetailsUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PatchBaselineIdentityUnmarshaller : object {
    private static PatchBaselineIdentityUnmarshaller _instance;
    public static PatchBaselineIdentityUnmarshaller Instance { get; }
    private static PatchBaselineIdentityUnmarshaller();
    private sealed virtual override PatchBaselineIdentity Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.PatchBaselineIdentity,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PatchBaselineIdentity Unmarshall(JsonUnmarshallerContext context);
    public static PatchBaselineIdentityUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PatchComplianceDataUnmarshaller : object {
    private static PatchComplianceDataUnmarshaller _instance;
    public static PatchComplianceDataUnmarshaller Instance { get; }
    private static PatchComplianceDataUnmarshaller();
    private sealed virtual override PatchComplianceData Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.PatchComplianceData,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PatchComplianceData Unmarshall(JsonUnmarshallerContext context);
    public static PatchComplianceDataUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PatchFilterGroupMarshaller : object {
    public static PatchFilterGroupMarshaller Instance;
    private static PatchFilterGroupMarshaller();
    public sealed virtual void Marshall(PatchFilterGroup requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PatchFilterGroupUnmarshaller : object {
    private static PatchFilterGroupUnmarshaller _instance;
    public static PatchFilterGroupUnmarshaller Instance { get; }
    private static PatchFilterGroupUnmarshaller();
    private sealed virtual override PatchFilterGroup Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.PatchFilterGroup,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PatchFilterGroup Unmarshall(JsonUnmarshallerContext context);
    public static PatchFilterGroupUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PatchFilterMarshaller : object {
    public static PatchFilterMarshaller Instance;
    private static PatchFilterMarshaller();
    public sealed virtual void Marshall(PatchFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PatchFilterUnmarshaller : object {
    private static PatchFilterUnmarshaller _instance;
    public static PatchFilterUnmarshaller Instance { get; }
    private static PatchFilterUnmarshaller();
    private sealed virtual override PatchFilter Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.PatchFilter,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PatchFilter Unmarshall(JsonUnmarshallerContext context);
    public static PatchFilterUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PatchGroupPatchBaselineMappingUnmarshaller : object {
    private static PatchGroupPatchBaselineMappingUnmarshaller _instance;
    public static PatchGroupPatchBaselineMappingUnmarshaller Instance { get; }
    private static PatchGroupPatchBaselineMappingUnmarshaller();
    private sealed virtual override PatchGroupPatchBaselineMapping Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.PatchGroupPatchBaselineMapping,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PatchGroupPatchBaselineMapping Unmarshall(JsonUnmarshallerContext context);
    public static PatchGroupPatchBaselineMappingUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PatchOrchestratorFilterMarshaller : object {
    public static PatchOrchestratorFilterMarshaller Instance;
    private static PatchOrchestratorFilterMarshaller();
    public sealed virtual void Marshall(PatchOrchestratorFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PatchRuleGroupMarshaller : object {
    public static PatchRuleGroupMarshaller Instance;
    private static PatchRuleGroupMarshaller();
    public sealed virtual void Marshall(PatchRuleGroup requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PatchRuleGroupUnmarshaller : object {
    private static PatchRuleGroupUnmarshaller _instance;
    public static PatchRuleGroupUnmarshaller Instance { get; }
    private static PatchRuleGroupUnmarshaller();
    private sealed virtual override PatchRuleGroup Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.PatchRuleGroup,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PatchRuleGroup Unmarshall(JsonUnmarshallerContext context);
    public static PatchRuleGroupUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PatchRuleMarshaller : object {
    public static PatchRuleMarshaller Instance;
    private static PatchRuleMarshaller();
    public sealed virtual void Marshall(PatchRule requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PatchRuleUnmarshaller : object {
    private static PatchRuleUnmarshaller _instance;
    public static PatchRuleUnmarshaller Instance { get; }
    private static PatchRuleUnmarshaller();
    private sealed virtual override PatchRule Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.PatchRule,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PatchRule Unmarshall(JsonUnmarshallerContext context);
    public static PatchRuleUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PatchSourceMarshaller : object {
    public static PatchSourceMarshaller Instance;
    private static PatchSourceMarshaller();
    public sealed virtual void Marshall(PatchSource requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PatchSourceUnmarshaller : object {
    private static PatchSourceUnmarshaller _instance;
    public static PatchSourceUnmarshaller Instance { get; }
    private static PatchSourceUnmarshaller();
    private sealed virtual override PatchSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.PatchSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PatchSource Unmarshall(JsonUnmarshallerContext context);
    public static PatchSourceUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PatchStatusUnmarshaller : object {
    private static PatchStatusUnmarshaller _instance;
    public static PatchStatusUnmarshaller Instance { get; }
    private static PatchStatusUnmarshaller();
    private sealed virtual override PatchStatus Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.PatchStatus,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PatchStatus Unmarshall(JsonUnmarshallerContext context);
    public static PatchStatusUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PatchUnmarshaller : object {
    private static PatchUnmarshaller _instance;
    public static PatchUnmarshaller Instance { get; }
    private static PatchUnmarshaller();
    private sealed virtual override Patch Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.Patch,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Patch Unmarshall(JsonUnmarshallerContext context);
    public static PatchUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PoliciesLimitExceededExceptionUnmarshaller : object {
    private static PoliciesLimitExceededExceptionUnmarshaller _instance;
    public static PoliciesLimitExceededExceptionUnmarshaller Instance { get; }
    private static PoliciesLimitExceededExceptionUnmarshaller();
    public sealed virtual PoliciesLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual PoliciesLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static PoliciesLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ProgressCountersUnmarshaller : object {
    private static ProgressCountersUnmarshaller _instance;
    public static ProgressCountersUnmarshaller Instance { get; }
    private static ProgressCountersUnmarshaller();
    private sealed virtual override ProgressCounters Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.ProgressCounters,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ProgressCounters Unmarshall(JsonUnmarshallerContext context);
    public static ProgressCountersUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PutComplianceItemsRequestMarshaller : object {
    private static PutComplianceItemsRequestMarshaller _instance;
    public static PutComplianceItemsRequestMarshaller Instance { get; }
    private static PutComplianceItemsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutComplianceItemsRequest publicRequest);
    internal static PutComplianceItemsRequestMarshaller GetInstance();
    public static PutComplianceItemsRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PutComplianceItemsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutComplianceItemsResponseUnmarshaller _instance;
    public static PutComplianceItemsResponseUnmarshaller Instance { get; }
    private static PutComplianceItemsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutComplianceItemsResponseUnmarshaller GetInstance();
    public static PutComplianceItemsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PutInventoryRequestMarshaller : object {
    private static PutInventoryRequestMarshaller _instance;
    public static PutInventoryRequestMarshaller Instance { get; }
    private static PutInventoryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutInventoryRequest publicRequest);
    internal static PutInventoryRequestMarshaller GetInstance();
    public static PutInventoryRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PutInventoryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutInventoryResponseUnmarshaller _instance;
    public static PutInventoryResponseUnmarshaller Instance { get; }
    private static PutInventoryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutInventoryResponseUnmarshaller GetInstance();
    public static PutInventoryResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PutParameterRequestMarshaller : object {
    private static PutParameterRequestMarshaller _instance;
    public static PutParameterRequestMarshaller Instance { get; }
    private static PutParameterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutParameterRequest publicRequest);
    internal static PutParameterRequestMarshaller GetInstance();
    public static PutParameterRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PutParameterResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutParameterResponseUnmarshaller _instance;
    public static PutParameterResponseUnmarshaller Instance { get; }
    private static PutParameterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutParameterResponseUnmarshaller GetInstance();
    public static PutParameterResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller : object {
    private static PutResourcePolicyRequestMarshaller _instance;
    public static PutResourcePolicyRequestMarshaller Instance { get; }
    private static PutResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutResourcePolicyRequest publicRequest);
    internal static PutResourcePolicyRequestMarshaller GetInstance();
    public static PutResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutResourcePolicyResponseUnmarshaller _instance;
    public static PutResourcePolicyResponseUnmarshaller Instance { get; }
    private static PutResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutResourcePolicyResponseUnmarshaller GetInstance();
    public static PutResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.RegisterDefaultPatchBaselineRequestMarshaller : object {
    private static RegisterDefaultPatchBaselineRequestMarshaller _instance;
    public static RegisterDefaultPatchBaselineRequestMarshaller Instance { get; }
    private static RegisterDefaultPatchBaselineRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RegisterDefaultPatchBaselineRequest publicRequest);
    internal static RegisterDefaultPatchBaselineRequestMarshaller GetInstance();
    public static RegisterDefaultPatchBaselineRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.RegisterDefaultPatchBaselineResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RegisterDefaultPatchBaselineResponseUnmarshaller _instance;
    public static RegisterDefaultPatchBaselineResponseUnmarshaller Instance { get; }
    private static RegisterDefaultPatchBaselineResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RegisterDefaultPatchBaselineResponseUnmarshaller GetInstance();
    public static RegisterDefaultPatchBaselineResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.RegisterPatchBaselineForPatchGroupRequestMarshaller : object {
    private static RegisterPatchBaselineForPatchGroupRequestMarshaller _instance;
    public static RegisterPatchBaselineForPatchGroupRequestMarshaller Instance { get; }
    private static RegisterPatchBaselineForPatchGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RegisterPatchBaselineForPatchGroupRequest publicRequest);
    internal static RegisterPatchBaselineForPatchGroupRequestMarshaller GetInstance();
    public static RegisterPatchBaselineForPatchGroupRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.RegisterPatchBaselineForPatchGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RegisterPatchBaselineForPatchGroupResponseUnmarshaller _instance;
    public static RegisterPatchBaselineForPatchGroupResponseUnmarshaller Instance { get; }
    private static RegisterPatchBaselineForPatchGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RegisterPatchBaselineForPatchGroupResponseUnmarshaller GetInstance();
    public static RegisterPatchBaselineForPatchGroupResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.RegisterTargetWithMaintenanceWindowRequestMarshaller : object {
    private static RegisterTargetWithMaintenanceWindowRequestMarshaller _instance;
    public static RegisterTargetWithMaintenanceWindowRequestMarshaller Instance { get; }
    private static RegisterTargetWithMaintenanceWindowRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RegisterTargetWithMaintenanceWindowRequest publicRequest);
    internal static RegisterTargetWithMaintenanceWindowRequestMarshaller GetInstance();
    public static RegisterTargetWithMaintenanceWindowRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.RegisterTargetWithMaintenanceWindowResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RegisterTargetWithMaintenanceWindowResponseUnmarshaller _instance;
    public static RegisterTargetWithMaintenanceWindowResponseUnmarshaller Instance { get; }
    private static RegisterTargetWithMaintenanceWindowResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RegisterTargetWithMaintenanceWindowResponseUnmarshaller GetInstance();
    public static RegisterTargetWithMaintenanceWindowResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.RegisterTaskWithMaintenanceWindowRequestMarshaller : object {
    private static RegisterTaskWithMaintenanceWindowRequestMarshaller _instance;
    public static RegisterTaskWithMaintenanceWindowRequestMarshaller Instance { get; }
    private static RegisterTaskWithMaintenanceWindowRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RegisterTaskWithMaintenanceWindowRequest publicRequest);
    internal static RegisterTaskWithMaintenanceWindowRequestMarshaller GetInstance();
    public static RegisterTaskWithMaintenanceWindowRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.RegisterTaskWithMaintenanceWindowResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RegisterTaskWithMaintenanceWindowResponseUnmarshaller _instance;
    public static RegisterTaskWithMaintenanceWindowResponseUnmarshaller Instance { get; }
    private static RegisterTaskWithMaintenanceWindowResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RegisterTaskWithMaintenanceWindowResponseUnmarshaller GetInstance();
    public static RegisterTaskWithMaintenanceWindowResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.RegistrationMetadataItemMarshaller : object {
    public static RegistrationMetadataItemMarshaller Instance;
    private static RegistrationMetadataItemMarshaller();
    public sealed virtual void Marshall(RegistrationMetadataItem requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.RelatedOpsItemMarshaller : object {
    public static RelatedOpsItemMarshaller Instance;
    private static RelatedOpsItemMarshaller();
    public sealed virtual void Marshall(RelatedOpsItem requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.RelatedOpsItemUnmarshaller : object {
    private static RelatedOpsItemUnmarshaller _instance;
    public static RelatedOpsItemUnmarshaller Instance { get; }
    private static RelatedOpsItemUnmarshaller();
    private sealed virtual override RelatedOpsItem Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.RelatedOpsItem,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RelatedOpsItem Unmarshall(JsonUnmarshallerContext context);
    public static RelatedOpsItemUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.RemoveTagsFromResourceRequestMarshaller : object {
    private static RemoveTagsFromResourceRequestMarshaller _instance;
    public static RemoveTagsFromResourceRequestMarshaller Instance { get; }
    private static RemoveTagsFromResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemoveTagsFromResourceRequest publicRequest);
    internal static RemoveTagsFromResourceRequestMarshaller GetInstance();
    public static RemoveTagsFromResourceRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.RemoveTagsFromResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RemoveTagsFromResourceResponseUnmarshaller _instance;
    public static RemoveTagsFromResourceResponseUnmarshaller Instance { get; }
    private static RemoveTagsFromResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemoveTagsFromResourceResponseUnmarshaller GetInstance();
    public static RemoveTagsFromResourceResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResetServiceSettingRequestMarshaller : object {
    private static ResetServiceSettingRequestMarshaller _instance;
    public static ResetServiceSettingRequestMarshaller Instance { get; }
    private static ResetServiceSettingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ResetServiceSettingRequest publicRequest);
    internal static ResetServiceSettingRequestMarshaller GetInstance();
    public static ResetServiceSettingRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResetServiceSettingResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ResetServiceSettingResponseUnmarshaller _instance;
    public static ResetServiceSettingResponseUnmarshaller Instance { get; }
    private static ResetServiceSettingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ResetServiceSettingResponseUnmarshaller GetInstance();
    public static ResetServiceSettingResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResolvedTargetsUnmarshaller : object {
    private static ResolvedTargetsUnmarshaller _instance;
    public static ResolvedTargetsUnmarshaller Instance { get; }
    private static ResolvedTargetsUnmarshaller();
    private sealed virtual override ResolvedTargets Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.ResolvedTargets,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResolvedTargets Unmarshall(JsonUnmarshallerContext context);
    public static ResolvedTargetsUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResourceComplianceSummaryItemUnmarshaller : object {
    private static ResourceComplianceSummaryItemUnmarshaller _instance;
    public static ResourceComplianceSummaryItemUnmarshaller Instance { get; }
    private static ResourceComplianceSummaryItemUnmarshaller();
    private sealed virtual override ResourceComplianceSummaryItem Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.ResourceComplianceSummaryItem,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourceComplianceSummaryItem Unmarshall(JsonUnmarshallerContext context);
    public static ResourceComplianceSummaryItemUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResourceDataSyncAlreadyExistsExceptionUnmarshaller : object {
    private static ResourceDataSyncAlreadyExistsExceptionUnmarshaller _instance;
    public static ResourceDataSyncAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static ResourceDataSyncAlreadyExistsExceptionUnmarshaller();
    public sealed virtual ResourceDataSyncAlreadyExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceDataSyncAlreadyExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceDataSyncAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResourceDataSyncAwsOrganizationsSourceMarshaller : object {
    public static ResourceDataSyncAwsOrganizationsSourceMarshaller Instance;
    private static ResourceDataSyncAwsOrganizationsSourceMarshaller();
    public sealed virtual void Marshall(ResourceDataSyncAwsOrganizationsSource requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResourceDataSyncAwsOrganizationsSourceUnmarshaller : object {
    private static ResourceDataSyncAwsOrganizationsSourceUnmarshaller _instance;
    public static ResourceDataSyncAwsOrganizationsSourceUnmarshaller Instance { get; }
    private static ResourceDataSyncAwsOrganizationsSourceUnmarshaller();
    private sealed virtual override ResourceDataSyncAwsOrganizationsSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.ResourceDataSyncAwsOrganizationsSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourceDataSyncAwsOrganizationsSource Unmarshall(JsonUnmarshallerContext context);
    public static ResourceDataSyncAwsOrganizationsSourceUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResourceDataSyncConflictExceptionUnmarshaller : object {
    private static ResourceDataSyncConflictExceptionUnmarshaller _instance;
    public static ResourceDataSyncConflictExceptionUnmarshaller Instance { get; }
    private static ResourceDataSyncConflictExceptionUnmarshaller();
    public sealed virtual ResourceDataSyncConflictException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceDataSyncConflictException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceDataSyncConflictExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResourceDataSyncCountExceededExceptionUnmarshaller : object {
    private static ResourceDataSyncCountExceededExceptionUnmarshaller _instance;
    public static ResourceDataSyncCountExceededExceptionUnmarshaller Instance { get; }
    private static ResourceDataSyncCountExceededExceptionUnmarshaller();
    public sealed virtual ResourceDataSyncCountExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceDataSyncCountExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceDataSyncCountExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResourceDataSyncDestinationDataSharingMarshaller : object {
    public static ResourceDataSyncDestinationDataSharingMarshaller Instance;
    private static ResourceDataSyncDestinationDataSharingMarshaller();
    public sealed virtual void Marshall(ResourceDataSyncDestinationDataSharing requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResourceDataSyncDestinationDataSharingUnmarshaller : object {
    private static ResourceDataSyncDestinationDataSharingUnmarshaller _instance;
    public static ResourceDataSyncDestinationDataSharingUnmarshaller Instance { get; }
    private static ResourceDataSyncDestinationDataSharingUnmarshaller();
    private sealed virtual override ResourceDataSyncDestinationDataSharing Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.ResourceDataSyncDestinationDataSharing,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourceDataSyncDestinationDataSharing Unmarshall(JsonUnmarshallerContext context);
    public static ResourceDataSyncDestinationDataSharingUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResourceDataSyncInvalidConfigurationExceptionUnmarshaller : object {
    private static ResourceDataSyncInvalidConfigurationExceptionUnmarshaller _instance;
    public static ResourceDataSyncInvalidConfigurationExceptionUnmarshaller Instance { get; }
    private static ResourceDataSyncInvalidConfigurationExceptionUnmarshaller();
    public sealed virtual ResourceDataSyncInvalidConfigurationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceDataSyncInvalidConfigurationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceDataSyncInvalidConfigurationExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResourceDataSyncItemUnmarshaller : object {
    private static ResourceDataSyncItemUnmarshaller _instance;
    public static ResourceDataSyncItemUnmarshaller Instance { get; }
    private static ResourceDataSyncItemUnmarshaller();
    private sealed virtual override ResourceDataSyncItem Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.ResourceDataSyncItem,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourceDataSyncItem Unmarshall(JsonUnmarshallerContext context);
    public static ResourceDataSyncItemUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResourceDataSyncNotFoundExceptionUnmarshaller : object {
    private static ResourceDataSyncNotFoundExceptionUnmarshaller _instance;
    public static ResourceDataSyncNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourceDataSyncNotFoundExceptionUnmarshaller();
    public sealed virtual ResourceDataSyncNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceDataSyncNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceDataSyncNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResourceDataSyncOrganizationalUnitMarshaller : object {
    public static ResourceDataSyncOrganizationalUnitMarshaller Instance;
    private static ResourceDataSyncOrganizationalUnitMarshaller();
    public sealed virtual void Marshall(ResourceDataSyncOrganizationalUnit requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResourceDataSyncOrganizationalUnitUnmarshaller : object {
    private static ResourceDataSyncOrganizationalUnitUnmarshaller _instance;
    public static ResourceDataSyncOrganizationalUnitUnmarshaller Instance { get; }
    private static ResourceDataSyncOrganizationalUnitUnmarshaller();
    private sealed virtual override ResourceDataSyncOrganizationalUnit Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.ResourceDataSyncOrganizationalUnit,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourceDataSyncOrganizationalUnit Unmarshall(JsonUnmarshallerContext context);
    public static ResourceDataSyncOrganizationalUnitUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResourceDataSyncS3DestinationMarshaller : object {
    public static ResourceDataSyncS3DestinationMarshaller Instance;
    private static ResourceDataSyncS3DestinationMarshaller();
    public sealed virtual void Marshall(ResourceDataSyncS3Destination requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResourceDataSyncS3DestinationUnmarshaller : object {
    private static ResourceDataSyncS3DestinationUnmarshaller _instance;
    public static ResourceDataSyncS3DestinationUnmarshaller Instance { get; }
    private static ResourceDataSyncS3DestinationUnmarshaller();
    private sealed virtual override ResourceDataSyncS3Destination Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.ResourceDataSyncS3Destination,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourceDataSyncS3Destination Unmarshall(JsonUnmarshallerContext context);
    public static ResourceDataSyncS3DestinationUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResourceDataSyncSourceMarshaller : object {
    public static ResourceDataSyncSourceMarshaller Instance;
    private static ResourceDataSyncSourceMarshaller();
    public sealed virtual void Marshall(ResourceDataSyncSource requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResourceDataSyncSourceWithStateUnmarshaller : object {
    private static ResourceDataSyncSourceWithStateUnmarshaller _instance;
    public static ResourceDataSyncSourceWithStateUnmarshaller Instance { get; }
    private static ResourceDataSyncSourceWithStateUnmarshaller();
    private sealed virtual override ResourceDataSyncSourceWithState Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.ResourceDataSyncSourceWithState,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourceDataSyncSourceWithState Unmarshall(JsonUnmarshallerContext context);
    public static ResourceDataSyncSourceWithStateUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller : object {
    private static ResourceInUseExceptionUnmarshaller _instance;
    public static ResourceInUseExceptionUnmarshaller Instance { get; }
    private static ResourceInUseExceptionUnmarshaller();
    public sealed virtual ResourceInUseException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceInUseException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResourceLimitExceededExceptionUnmarshaller : object {
    private static ResourceLimitExceededExceptionUnmarshaller _instance;
    public static ResourceLimitExceededExceptionUnmarshaller Instance { get; }
    private static ResourceLimitExceededExceptionUnmarshaller();
    public sealed virtual ResourceLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller : object {
    private static ResourceNotFoundExceptionUnmarshaller _instance;
    public static ResourceNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourceNotFoundExceptionUnmarshaller();
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResourcePolicyConflictExceptionUnmarshaller : object {
    private static ResourcePolicyConflictExceptionUnmarshaller _instance;
    public static ResourcePolicyConflictExceptionUnmarshaller Instance { get; }
    private static ResourcePolicyConflictExceptionUnmarshaller();
    public sealed virtual ResourcePolicyConflictException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourcePolicyConflictException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourcePolicyConflictExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResourcePolicyInvalidParameterExceptionUnmarshaller : object {
    private static ResourcePolicyInvalidParameterExceptionUnmarshaller _instance;
    public static ResourcePolicyInvalidParameterExceptionUnmarshaller Instance { get; }
    private static ResourcePolicyInvalidParameterExceptionUnmarshaller();
    public sealed virtual ResourcePolicyInvalidParameterException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourcePolicyInvalidParameterException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourcePolicyInvalidParameterExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResourcePolicyLimitExceededExceptionUnmarshaller : object {
    private static ResourcePolicyLimitExceededExceptionUnmarshaller _instance;
    public static ResourcePolicyLimitExceededExceptionUnmarshaller Instance { get; }
    private static ResourcePolicyLimitExceededExceptionUnmarshaller();
    public sealed virtual ResourcePolicyLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourcePolicyLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourcePolicyLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResourcePolicyNotFoundExceptionUnmarshaller : object {
    private static ResourcePolicyNotFoundExceptionUnmarshaller _instance;
    public static ResourcePolicyNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourcePolicyNotFoundExceptionUnmarshaller();
    public sealed virtual ResourcePolicyNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourcePolicyNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourcePolicyNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResultAttributeMarshaller : object {
    public static ResultAttributeMarshaller Instance;
    private static ResultAttributeMarshaller();
    public sealed virtual void Marshall(ResultAttribute requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResumeSessionRequestMarshaller : object {
    private static ResumeSessionRequestMarshaller _instance;
    public static ResumeSessionRequestMarshaller Instance { get; }
    private static ResumeSessionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ResumeSessionRequest publicRequest);
    internal static ResumeSessionRequestMarshaller GetInstance();
    public static ResumeSessionRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ResumeSessionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ResumeSessionResponseUnmarshaller _instance;
    public static ResumeSessionResponseUnmarshaller Instance { get; }
    private static ResumeSessionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ResumeSessionResponseUnmarshaller GetInstance();
    public static ResumeSessionResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ReviewInformationUnmarshaller : object {
    private static ReviewInformationUnmarshaller _instance;
    public static ReviewInformationUnmarshaller Instance { get; }
    private static ReviewInformationUnmarshaller();
    private sealed virtual override ReviewInformation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.ReviewInformation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReviewInformation Unmarshall(JsonUnmarshallerContext context);
    public static ReviewInformationUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.RunbookMarshaller : object {
    public static RunbookMarshaller Instance;
    private static RunbookMarshaller();
    public sealed virtual void Marshall(Runbook requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.RunbookUnmarshaller : object {
    private static RunbookUnmarshaller _instance;
    public static RunbookUnmarshaller Instance { get; }
    private static RunbookUnmarshaller();
    private sealed virtual override Runbook Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.Runbook,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Runbook Unmarshall(JsonUnmarshallerContext context);
    public static RunbookUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.S3OutputLocationMarshaller : object {
    public static S3OutputLocationMarshaller Instance;
    private static S3OutputLocationMarshaller();
    public sealed virtual void Marshall(S3OutputLocation requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.S3OutputLocationUnmarshaller : object {
    private static S3OutputLocationUnmarshaller _instance;
    public static S3OutputLocationUnmarshaller Instance { get; }
    private static S3OutputLocationUnmarshaller();
    private sealed virtual override S3OutputLocation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.S3OutputLocation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3OutputLocation Unmarshall(JsonUnmarshallerContext context);
    public static S3OutputLocationUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.S3OutputUrlUnmarshaller : object {
    private static S3OutputUrlUnmarshaller _instance;
    public static S3OutputUrlUnmarshaller Instance { get; }
    private static S3OutputUrlUnmarshaller();
    private sealed virtual override S3OutputUrl Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.S3OutputUrl,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3OutputUrl Unmarshall(JsonUnmarshallerContext context);
    public static S3OutputUrlUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ScheduledWindowExecutionUnmarshaller : object {
    private static ScheduledWindowExecutionUnmarshaller _instance;
    public static ScheduledWindowExecutionUnmarshaller Instance { get; }
    private static ScheduledWindowExecutionUnmarshaller();
    private sealed virtual override ScheduledWindowExecution Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.ScheduledWindowExecution,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ScheduledWindowExecution Unmarshall(JsonUnmarshallerContext context);
    public static ScheduledWindowExecutionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.SendAutomationSignalRequestMarshaller : object {
    private static SendAutomationSignalRequestMarshaller _instance;
    public static SendAutomationSignalRequestMarshaller Instance { get; }
    private static SendAutomationSignalRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SendAutomationSignalRequest publicRequest);
    internal static SendAutomationSignalRequestMarshaller GetInstance();
    public static SendAutomationSignalRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.SendAutomationSignalResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SendAutomationSignalResponseUnmarshaller _instance;
    public static SendAutomationSignalResponseUnmarshaller Instance { get; }
    private static SendAutomationSignalResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SendAutomationSignalResponseUnmarshaller GetInstance();
    public static SendAutomationSignalResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.SendCommandRequestMarshaller : object {
    private static SendCommandRequestMarshaller _instance;
    public static SendCommandRequestMarshaller Instance { get; }
    private static SendCommandRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SendCommandRequest publicRequest);
    internal static SendCommandRequestMarshaller GetInstance();
    public static SendCommandRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.SendCommandResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SendCommandResponseUnmarshaller _instance;
    public static SendCommandResponseUnmarshaller Instance { get; }
    private static SendCommandResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SendCommandResponseUnmarshaller GetInstance();
    public static SendCommandResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ServiceSettingNotFoundExceptionUnmarshaller : object {
    private static ServiceSettingNotFoundExceptionUnmarshaller _instance;
    public static ServiceSettingNotFoundExceptionUnmarshaller Instance { get; }
    private static ServiceSettingNotFoundExceptionUnmarshaller();
    public sealed virtual ServiceSettingNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ServiceSettingNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ServiceSettingNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.ServiceSettingUnmarshaller : object {
    private static ServiceSettingUnmarshaller _instance;
    public static ServiceSettingUnmarshaller Instance { get; }
    private static ServiceSettingUnmarshaller();
    private sealed virtual override ServiceSetting Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.ServiceSetting,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ServiceSetting Unmarshall(JsonUnmarshallerContext context);
    public static ServiceSettingUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.SessionFilterMarshaller : object {
    public static SessionFilterMarshaller Instance;
    private static SessionFilterMarshaller();
    public sealed virtual void Marshall(SessionFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.SessionManagerOutputUrlUnmarshaller : object {
    private static SessionManagerOutputUrlUnmarshaller _instance;
    public static SessionManagerOutputUrlUnmarshaller Instance { get; }
    private static SessionManagerOutputUrlUnmarshaller();
    private sealed virtual override SessionManagerOutputUrl Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.SessionManagerOutputUrl,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SessionManagerOutputUrl Unmarshall(JsonUnmarshallerContext context);
    public static SessionManagerOutputUrlUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.SessionUnmarshaller : object {
    private static SessionUnmarshaller _instance;
    public static SessionUnmarshaller Instance { get; }
    private static SessionUnmarshaller();
    private sealed virtual override Session Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.Session,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Session Unmarshall(JsonUnmarshallerContext context);
    public static SessionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.SeveritySummaryUnmarshaller : object {
    private static SeveritySummaryUnmarshaller _instance;
    public static SeveritySummaryUnmarshaller Instance { get; }
    private static SeveritySummaryUnmarshaller();
    private sealed virtual override SeveritySummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.SeveritySummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SeveritySummary Unmarshall(JsonUnmarshallerContext context);
    public static SeveritySummaryUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.StartAssociationsOnceRequestMarshaller : object {
    private static StartAssociationsOnceRequestMarshaller _instance;
    public static StartAssociationsOnceRequestMarshaller Instance { get; }
    private static StartAssociationsOnceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartAssociationsOnceRequest publicRequest);
    internal static StartAssociationsOnceRequestMarshaller GetInstance();
    public static StartAssociationsOnceRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.StartAssociationsOnceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartAssociationsOnceResponseUnmarshaller _instance;
    public static StartAssociationsOnceResponseUnmarshaller Instance { get; }
    private static StartAssociationsOnceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartAssociationsOnceResponseUnmarshaller GetInstance();
    public static StartAssociationsOnceResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.StartAutomationExecutionRequestMarshaller : object {
    private static StartAutomationExecutionRequestMarshaller _instance;
    public static StartAutomationExecutionRequestMarshaller Instance { get; }
    private static StartAutomationExecutionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartAutomationExecutionRequest publicRequest);
    internal static StartAutomationExecutionRequestMarshaller GetInstance();
    public static StartAutomationExecutionRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.StartAutomationExecutionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartAutomationExecutionResponseUnmarshaller _instance;
    public static StartAutomationExecutionResponseUnmarshaller Instance { get; }
    private static StartAutomationExecutionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartAutomationExecutionResponseUnmarshaller GetInstance();
    public static StartAutomationExecutionResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.StartChangeRequestExecutionRequestMarshaller : object {
    private static StartChangeRequestExecutionRequestMarshaller _instance;
    public static StartChangeRequestExecutionRequestMarshaller Instance { get; }
    private static StartChangeRequestExecutionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartChangeRequestExecutionRequest publicRequest);
    internal static StartChangeRequestExecutionRequestMarshaller GetInstance();
    public static StartChangeRequestExecutionRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.StartChangeRequestExecutionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartChangeRequestExecutionResponseUnmarshaller _instance;
    public static StartChangeRequestExecutionResponseUnmarshaller Instance { get; }
    private static StartChangeRequestExecutionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartChangeRequestExecutionResponseUnmarshaller GetInstance();
    public static StartChangeRequestExecutionResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.StartSessionRequestMarshaller : object {
    private static StartSessionRequestMarshaller _instance;
    public static StartSessionRequestMarshaller Instance { get; }
    private static StartSessionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartSessionRequest publicRequest);
    internal static StartSessionRequestMarshaller GetInstance();
    public static StartSessionRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.StartSessionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartSessionResponseUnmarshaller _instance;
    public static StartSessionResponseUnmarshaller Instance { get; }
    private static StartSessionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartSessionResponseUnmarshaller GetInstance();
    public static StartSessionResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.StatusUnchangedExceptionUnmarshaller : object {
    private static StatusUnchangedExceptionUnmarshaller _instance;
    public static StatusUnchangedExceptionUnmarshaller Instance { get; }
    private static StatusUnchangedExceptionUnmarshaller();
    public sealed virtual StatusUnchangedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual StatusUnchangedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static StatusUnchangedExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.StepExecutionFilterMarshaller : object {
    public static StepExecutionFilterMarshaller Instance;
    private static StepExecutionFilterMarshaller();
    public sealed virtual void Marshall(StepExecutionFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.StepExecutionUnmarshaller : object {
    private static StepExecutionUnmarshaller _instance;
    public static StepExecutionUnmarshaller Instance { get; }
    private static StepExecutionUnmarshaller();
    private sealed virtual override StepExecution Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.StepExecution,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StepExecution Unmarshall(JsonUnmarshallerContext context);
    public static StepExecutionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.StopAutomationExecutionRequestMarshaller : object {
    private static StopAutomationExecutionRequestMarshaller _instance;
    public static StopAutomationExecutionRequestMarshaller Instance { get; }
    private static StopAutomationExecutionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopAutomationExecutionRequest publicRequest);
    internal static StopAutomationExecutionRequestMarshaller GetInstance();
    public static StopAutomationExecutionRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.StopAutomationExecutionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StopAutomationExecutionResponseUnmarshaller _instance;
    public static StopAutomationExecutionResponseUnmarshaller Instance { get; }
    private static StopAutomationExecutionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopAutomationExecutionResponseUnmarshaller GetInstance();
    public static StopAutomationExecutionResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.SubTypeCountLimitExceededExceptionUnmarshaller : object {
    private static SubTypeCountLimitExceededExceptionUnmarshaller _instance;
    public static SubTypeCountLimitExceededExceptionUnmarshaller Instance { get; }
    private static SubTypeCountLimitExceededExceptionUnmarshaller();
    public sealed virtual SubTypeCountLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual SubTypeCountLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static SubTypeCountLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.TagMarshaller : object {
    public static TagMarshaller Instance;
    private static TagMarshaller();
    public sealed virtual void Marshall(Tag requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.TagUnmarshaller : object {
    private static TagUnmarshaller _instance;
    public static TagUnmarshaller Instance { get; }
    private static TagUnmarshaller();
    private sealed virtual override Tag Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.Tag,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tag Unmarshall(JsonUnmarshallerContext context);
    public static TagUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.TargetInUseExceptionUnmarshaller : object {
    private static TargetInUseExceptionUnmarshaller _instance;
    public static TargetInUseExceptionUnmarshaller Instance { get; }
    private static TargetInUseExceptionUnmarshaller();
    public sealed virtual TargetInUseException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TargetInUseException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TargetInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.TargetLocationMarshaller : object {
    public static TargetLocationMarshaller Instance;
    private static TargetLocationMarshaller();
    public sealed virtual void Marshall(TargetLocation requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.TargetLocationUnmarshaller : object {
    private static TargetLocationUnmarshaller _instance;
    public static TargetLocationUnmarshaller Instance { get; }
    private static TargetLocationUnmarshaller();
    private sealed virtual override TargetLocation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.TargetLocation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TargetLocation Unmarshall(JsonUnmarshallerContext context);
    public static TargetLocationUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.TargetMarshaller : object {
    public static TargetMarshaller Instance;
    private static TargetMarshaller();
    public sealed virtual void Marshall(Target requestObject, JsonMarshallerContext context);
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.TargetNotConnectedExceptionUnmarshaller : object {
    private static TargetNotConnectedExceptionUnmarshaller _instance;
    public static TargetNotConnectedExceptionUnmarshaller Instance { get; }
    private static TargetNotConnectedExceptionUnmarshaller();
    public sealed virtual TargetNotConnectedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TargetNotConnectedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TargetNotConnectedExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.TargetUnmarshaller : object {
    private static TargetUnmarshaller _instance;
    public static TargetUnmarshaller Instance { get; }
    private static TargetUnmarshaller();
    private sealed virtual override Target Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SimpleSystemsManagement.Model.Target,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Target Unmarshall(JsonUnmarshallerContext context);
    public static TargetUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.TerminateSessionRequestMarshaller : object {
    private static TerminateSessionRequestMarshaller _instance;
    public static TerminateSessionRequestMarshaller Instance { get; }
    private static TerminateSessionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TerminateSessionRequest publicRequest);
    internal static TerminateSessionRequestMarshaller GetInstance();
    public static TerminateSessionRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.TerminateSessionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TerminateSessionResponseUnmarshaller _instance;
    public static TerminateSessionResponseUnmarshaller Instance { get; }
    private static TerminateSessionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TerminateSessionResponseUnmarshaller GetInstance();
    public static TerminateSessionResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.TooManyTagsErrorExceptionUnmarshaller : object {
    private static TooManyTagsErrorExceptionUnmarshaller _instance;
    public static TooManyTagsErrorExceptionUnmarshaller Instance { get; }
    private static TooManyTagsErrorExceptionUnmarshaller();
    public sealed virtual TooManyTagsErrorException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TooManyTagsErrorException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyTagsErrorExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.TooManyUpdatesExceptionUnmarshaller : object {
    private static TooManyUpdatesExceptionUnmarshaller _instance;
    public static TooManyUpdatesExceptionUnmarshaller Instance { get; }
    private static TooManyUpdatesExceptionUnmarshaller();
    public sealed virtual TooManyUpdatesException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TooManyUpdatesException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyUpdatesExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.TotalSizeLimitExceededExceptionUnmarshaller : object {
    private static TotalSizeLimitExceededExceptionUnmarshaller _instance;
    public static TotalSizeLimitExceededExceptionUnmarshaller Instance { get; }
    private static TotalSizeLimitExceededExceptionUnmarshaller();
    public sealed virtual TotalSizeLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TotalSizeLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TotalSizeLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UnlabelParameterVersionRequestMarshaller : object {
    private static UnlabelParameterVersionRequestMarshaller _instance;
    public static UnlabelParameterVersionRequestMarshaller Instance { get; }
    private static UnlabelParameterVersionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UnlabelParameterVersionRequest publicRequest);
    internal static UnlabelParameterVersionRequestMarshaller GetInstance();
    public static UnlabelParameterVersionRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UnlabelParameterVersionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UnlabelParameterVersionResponseUnmarshaller _instance;
    public static UnlabelParameterVersionResponseUnmarshaller Instance { get; }
    private static UnlabelParameterVersionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UnlabelParameterVersionResponseUnmarshaller GetInstance();
    public static UnlabelParameterVersionResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UnsupportedCalendarExceptionUnmarshaller : object {
    private static UnsupportedCalendarExceptionUnmarshaller _instance;
    public static UnsupportedCalendarExceptionUnmarshaller Instance { get; }
    private static UnsupportedCalendarExceptionUnmarshaller();
    public sealed virtual UnsupportedCalendarException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnsupportedCalendarException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnsupportedCalendarExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UnsupportedFeatureRequiredExceptionUnmarshaller : object {
    private static UnsupportedFeatureRequiredExceptionUnmarshaller _instance;
    public static UnsupportedFeatureRequiredExceptionUnmarshaller Instance { get; }
    private static UnsupportedFeatureRequiredExceptionUnmarshaller();
    public sealed virtual UnsupportedFeatureRequiredException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnsupportedFeatureRequiredException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnsupportedFeatureRequiredExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UnsupportedInventoryItemContextExceptionUnmarshaller : object {
    private static UnsupportedInventoryItemContextExceptionUnmarshaller _instance;
    public static UnsupportedInventoryItemContextExceptionUnmarshaller Instance { get; }
    private static UnsupportedInventoryItemContextExceptionUnmarshaller();
    public sealed virtual UnsupportedInventoryItemContextException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnsupportedInventoryItemContextException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnsupportedInventoryItemContextExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UnsupportedInventorySchemaVersionExceptionUnmarshaller : object {
    private static UnsupportedInventorySchemaVersionExceptionUnmarshaller _instance;
    public static UnsupportedInventorySchemaVersionExceptionUnmarshaller Instance { get; }
    private static UnsupportedInventorySchemaVersionExceptionUnmarshaller();
    public sealed virtual UnsupportedInventorySchemaVersionException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnsupportedInventorySchemaVersionException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnsupportedInventorySchemaVersionExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UnsupportedOperatingSystemExceptionUnmarshaller : object {
    private static UnsupportedOperatingSystemExceptionUnmarshaller _instance;
    public static UnsupportedOperatingSystemExceptionUnmarshaller Instance { get; }
    private static UnsupportedOperatingSystemExceptionUnmarshaller();
    public sealed virtual UnsupportedOperatingSystemException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnsupportedOperatingSystemException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnsupportedOperatingSystemExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UnsupportedParameterTypeExceptionUnmarshaller : object {
    private static UnsupportedParameterTypeExceptionUnmarshaller _instance;
    public static UnsupportedParameterTypeExceptionUnmarshaller Instance { get; }
    private static UnsupportedParameterTypeExceptionUnmarshaller();
    public sealed virtual UnsupportedParameterTypeException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnsupportedParameterTypeException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnsupportedParameterTypeExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UnsupportedPlatformTypeExceptionUnmarshaller : object {
    private static UnsupportedPlatformTypeExceptionUnmarshaller _instance;
    public static UnsupportedPlatformTypeExceptionUnmarshaller Instance { get; }
    private static UnsupportedPlatformTypeExceptionUnmarshaller();
    public sealed virtual UnsupportedPlatformTypeException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnsupportedPlatformTypeException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnsupportedPlatformTypeExceptionUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateAssociationRequestMarshaller : object {
    private static UpdateAssociationRequestMarshaller _instance;
    public static UpdateAssociationRequestMarshaller Instance { get; }
    private static UpdateAssociationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateAssociationRequest publicRequest);
    internal static UpdateAssociationRequestMarshaller GetInstance();
    public static UpdateAssociationRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateAssociationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateAssociationResponseUnmarshaller _instance;
    public static UpdateAssociationResponseUnmarshaller Instance { get; }
    private static UpdateAssociationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateAssociationResponseUnmarshaller GetInstance();
    public static UpdateAssociationResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateAssociationStatusRequestMarshaller : object {
    private static UpdateAssociationStatusRequestMarshaller _instance;
    public static UpdateAssociationStatusRequestMarshaller Instance { get; }
    private static UpdateAssociationStatusRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateAssociationStatusRequest publicRequest);
    internal static UpdateAssociationStatusRequestMarshaller GetInstance();
    public static UpdateAssociationStatusRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateAssociationStatusResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateAssociationStatusResponseUnmarshaller _instance;
    public static UpdateAssociationStatusResponseUnmarshaller Instance { get; }
    private static UpdateAssociationStatusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateAssociationStatusResponseUnmarshaller GetInstance();
    public static UpdateAssociationStatusResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateDocumentDefaultVersionRequestMarshaller : object {
    private static UpdateDocumentDefaultVersionRequestMarshaller _instance;
    public static UpdateDocumentDefaultVersionRequestMarshaller Instance { get; }
    private static UpdateDocumentDefaultVersionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateDocumentDefaultVersionRequest publicRequest);
    internal static UpdateDocumentDefaultVersionRequestMarshaller GetInstance();
    public static UpdateDocumentDefaultVersionRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateDocumentDefaultVersionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateDocumentDefaultVersionResponseUnmarshaller _instance;
    public static UpdateDocumentDefaultVersionResponseUnmarshaller Instance { get; }
    private static UpdateDocumentDefaultVersionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateDocumentDefaultVersionResponseUnmarshaller GetInstance();
    public static UpdateDocumentDefaultVersionResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateDocumentMetadataRequestMarshaller : object {
    private static UpdateDocumentMetadataRequestMarshaller _instance;
    public static UpdateDocumentMetadataRequestMarshaller Instance { get; }
    private static UpdateDocumentMetadataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateDocumentMetadataRequest publicRequest);
    internal static UpdateDocumentMetadataRequestMarshaller GetInstance();
    public static UpdateDocumentMetadataRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateDocumentMetadataResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateDocumentMetadataResponseUnmarshaller _instance;
    public static UpdateDocumentMetadataResponseUnmarshaller Instance { get; }
    private static UpdateDocumentMetadataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateDocumentMetadataResponseUnmarshaller GetInstance();
    public static UpdateDocumentMetadataResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateDocumentRequestMarshaller : object {
    private static UpdateDocumentRequestMarshaller _instance;
    public static UpdateDocumentRequestMarshaller Instance { get; }
    private static UpdateDocumentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateDocumentRequest publicRequest);
    internal static UpdateDocumentRequestMarshaller GetInstance();
    public static UpdateDocumentRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateDocumentResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateDocumentResponseUnmarshaller _instance;
    public static UpdateDocumentResponseUnmarshaller Instance { get; }
    private static UpdateDocumentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateDocumentResponseUnmarshaller GetInstance();
    public static UpdateDocumentResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateMaintenanceWindowRequestMarshaller : object {
    private static UpdateMaintenanceWindowRequestMarshaller _instance;
    public static UpdateMaintenanceWindowRequestMarshaller Instance { get; }
    private static UpdateMaintenanceWindowRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateMaintenanceWindowRequest publicRequest);
    internal static UpdateMaintenanceWindowRequestMarshaller GetInstance();
    public static UpdateMaintenanceWindowRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateMaintenanceWindowResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateMaintenanceWindowResponseUnmarshaller _instance;
    public static UpdateMaintenanceWindowResponseUnmarshaller Instance { get; }
    private static UpdateMaintenanceWindowResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateMaintenanceWindowResponseUnmarshaller GetInstance();
    public static UpdateMaintenanceWindowResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateMaintenanceWindowTargetRequestMarshaller : object {
    private static UpdateMaintenanceWindowTargetRequestMarshaller _instance;
    public static UpdateMaintenanceWindowTargetRequestMarshaller Instance { get; }
    private static UpdateMaintenanceWindowTargetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateMaintenanceWindowTargetRequest publicRequest);
    internal static UpdateMaintenanceWindowTargetRequestMarshaller GetInstance();
    public static UpdateMaintenanceWindowTargetRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateMaintenanceWindowTargetResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateMaintenanceWindowTargetResponseUnmarshaller _instance;
    public static UpdateMaintenanceWindowTargetResponseUnmarshaller Instance { get; }
    private static UpdateMaintenanceWindowTargetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateMaintenanceWindowTargetResponseUnmarshaller GetInstance();
    public static UpdateMaintenanceWindowTargetResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateMaintenanceWindowTaskRequestMarshaller : object {
    private static UpdateMaintenanceWindowTaskRequestMarshaller _instance;
    public static UpdateMaintenanceWindowTaskRequestMarshaller Instance { get; }
    private static UpdateMaintenanceWindowTaskRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateMaintenanceWindowTaskRequest publicRequest);
    internal static UpdateMaintenanceWindowTaskRequestMarshaller GetInstance();
    public static UpdateMaintenanceWindowTaskRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateMaintenanceWindowTaskResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateMaintenanceWindowTaskResponseUnmarshaller _instance;
    public static UpdateMaintenanceWindowTaskResponseUnmarshaller Instance { get; }
    private static UpdateMaintenanceWindowTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateMaintenanceWindowTaskResponseUnmarshaller GetInstance();
    public static UpdateMaintenanceWindowTaskResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateManagedInstanceRoleRequestMarshaller : object {
    private static UpdateManagedInstanceRoleRequestMarshaller _instance;
    public static UpdateManagedInstanceRoleRequestMarshaller Instance { get; }
    private static UpdateManagedInstanceRoleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateManagedInstanceRoleRequest publicRequest);
    internal static UpdateManagedInstanceRoleRequestMarshaller GetInstance();
    public static UpdateManagedInstanceRoleRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateManagedInstanceRoleResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateManagedInstanceRoleResponseUnmarshaller _instance;
    public static UpdateManagedInstanceRoleResponseUnmarshaller Instance { get; }
    private static UpdateManagedInstanceRoleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateManagedInstanceRoleResponseUnmarshaller GetInstance();
    public static UpdateManagedInstanceRoleResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateOpsItemRequestMarshaller : object {
    private static UpdateOpsItemRequestMarshaller _instance;
    public static UpdateOpsItemRequestMarshaller Instance { get; }
    private static UpdateOpsItemRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateOpsItemRequest publicRequest);
    internal static UpdateOpsItemRequestMarshaller GetInstance();
    public static UpdateOpsItemRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateOpsItemResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateOpsItemResponseUnmarshaller _instance;
    public static UpdateOpsItemResponseUnmarshaller Instance { get; }
    private static UpdateOpsItemResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateOpsItemResponseUnmarshaller GetInstance();
    public static UpdateOpsItemResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateOpsMetadataRequestMarshaller : object {
    private static UpdateOpsMetadataRequestMarshaller _instance;
    public static UpdateOpsMetadataRequestMarshaller Instance { get; }
    private static UpdateOpsMetadataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateOpsMetadataRequest publicRequest);
    internal static UpdateOpsMetadataRequestMarshaller GetInstance();
    public static UpdateOpsMetadataRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateOpsMetadataResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateOpsMetadataResponseUnmarshaller _instance;
    public static UpdateOpsMetadataResponseUnmarshaller Instance { get; }
    private static UpdateOpsMetadataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateOpsMetadataResponseUnmarshaller GetInstance();
    public static UpdateOpsMetadataResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdatePatchBaselineRequestMarshaller : object {
    private static UpdatePatchBaselineRequestMarshaller _instance;
    public static UpdatePatchBaselineRequestMarshaller Instance { get; }
    private static UpdatePatchBaselineRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdatePatchBaselineRequest publicRequest);
    internal static UpdatePatchBaselineRequestMarshaller GetInstance();
    public static UpdatePatchBaselineRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdatePatchBaselineResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdatePatchBaselineResponseUnmarshaller _instance;
    public static UpdatePatchBaselineResponseUnmarshaller Instance { get; }
    private static UpdatePatchBaselineResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdatePatchBaselineResponseUnmarshaller GetInstance();
    public static UpdatePatchBaselineResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateResourceDataSyncRequestMarshaller : object {
    private static UpdateResourceDataSyncRequestMarshaller _instance;
    public static UpdateResourceDataSyncRequestMarshaller Instance { get; }
    private static UpdateResourceDataSyncRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateResourceDataSyncRequest publicRequest);
    internal static UpdateResourceDataSyncRequestMarshaller GetInstance();
    public static UpdateResourceDataSyncRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateResourceDataSyncResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateResourceDataSyncResponseUnmarshaller _instance;
    public static UpdateResourceDataSyncResponseUnmarshaller Instance { get; }
    private static UpdateResourceDataSyncResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateResourceDataSyncResponseUnmarshaller GetInstance();
    public static UpdateResourceDataSyncResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateServiceSettingRequestMarshaller : object {
    private static UpdateServiceSettingRequestMarshaller _instance;
    public static UpdateServiceSettingRequestMarshaller Instance { get; }
    private static UpdateServiceSettingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateServiceSettingRequest publicRequest);
    internal static UpdateServiceSettingRequestMarshaller GetInstance();
    public static UpdateServiceSettingRequestMarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.Internal.MarshallTransformations.UpdateServiceSettingResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateServiceSettingResponseUnmarshaller _instance;
    public static UpdateServiceSettingResponseUnmarshaller Instance { get; }
    private static UpdateServiceSettingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateServiceSettingResponseUnmarshaller GetInstance();
    public static UpdateServiceSettingResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleSystemsManagement.Model.InternalServerErrorException : AmazonSimpleSystemsManagementException {
    public InternalServerErrorException(string message);
    public InternalServerErrorException(string message, Exception innerException);
    public InternalServerErrorException(Exception innerException);
    public InternalServerErrorException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InternalServerErrorException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidActivationException : AmazonSimpleSystemsManagementException {
    public InvalidActivationException(string message);
    public InvalidActivationException(string message, Exception innerException);
    public InvalidActivationException(Exception innerException);
    public InvalidActivationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidActivationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidActivationIdException : AmazonSimpleSystemsManagementException {
    public InvalidActivationIdException(string message);
    public InvalidActivationIdException(string message, Exception innerException);
    public InvalidActivationIdException(Exception innerException);
    public InvalidActivationIdException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidActivationIdException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidAggregatorException : AmazonSimpleSystemsManagementException {
    public InvalidAggregatorException(string message);
    public InvalidAggregatorException(string message, Exception innerException);
    public InvalidAggregatorException(Exception innerException);
    public InvalidAggregatorException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidAggregatorException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidAllowedPatternException : AmazonSimpleSystemsManagementException {
    public InvalidAllowedPatternException(string message);
    public InvalidAllowedPatternException(string message, Exception innerException);
    public InvalidAllowedPatternException(Exception innerException);
    public InvalidAllowedPatternException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidAllowedPatternException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidAssociationException : AmazonSimpleSystemsManagementException {
    public InvalidAssociationException(string message);
    public InvalidAssociationException(string message, Exception innerException);
    public InvalidAssociationException(Exception innerException);
    public InvalidAssociationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidAssociationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidAssociationVersionException : AmazonSimpleSystemsManagementException {
    public InvalidAssociationVersionException(string message);
    public InvalidAssociationVersionException(string message, Exception innerException);
    public InvalidAssociationVersionException(Exception innerException);
    public InvalidAssociationVersionException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidAssociationVersionException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidAutomationExecutionParametersException : AmazonSimpleSystemsManagementException {
    public InvalidAutomationExecutionParametersException(string message);
    public InvalidAutomationExecutionParametersException(string message, Exception innerException);
    public InvalidAutomationExecutionParametersException(Exception innerException);
    public InvalidAutomationExecutionParametersException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidAutomationExecutionParametersException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidAutomationSignalException : AmazonSimpleSystemsManagementException {
    public InvalidAutomationSignalException(string message);
    public InvalidAutomationSignalException(string message, Exception innerException);
    public InvalidAutomationSignalException(Exception innerException);
    public InvalidAutomationSignalException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidAutomationSignalException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidAutomationStatusUpdateException : AmazonSimpleSystemsManagementException {
    public InvalidAutomationStatusUpdateException(string message);
    public InvalidAutomationStatusUpdateException(string message, Exception innerException);
    public InvalidAutomationStatusUpdateException(Exception innerException);
    public InvalidAutomationStatusUpdateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidAutomationStatusUpdateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidCommandIdException : AmazonSimpleSystemsManagementException {
    public InvalidCommandIdException(string message);
    public InvalidCommandIdException(string message, Exception innerException);
    public InvalidCommandIdException(Exception innerException);
    public InvalidCommandIdException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidCommandIdException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidDeleteInventoryParametersException : AmazonSimpleSystemsManagementException {
    public InvalidDeleteInventoryParametersException(string message);
    public InvalidDeleteInventoryParametersException(string message, Exception innerException);
    public InvalidDeleteInventoryParametersException(Exception innerException);
    public InvalidDeleteInventoryParametersException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDeleteInventoryParametersException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidDeletionIdException : AmazonSimpleSystemsManagementException {
    public InvalidDeletionIdException(string message);
    public InvalidDeletionIdException(string message, Exception innerException);
    public InvalidDeletionIdException(Exception innerException);
    public InvalidDeletionIdException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDeletionIdException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidDocumentContentException : AmazonSimpleSystemsManagementException {
    public InvalidDocumentContentException(string message);
    public InvalidDocumentContentException(string message, Exception innerException);
    public InvalidDocumentContentException(Exception innerException);
    public InvalidDocumentContentException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDocumentContentException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidDocumentException : AmazonSimpleSystemsManagementException {
    public InvalidDocumentException(string message);
    public InvalidDocumentException(string message, Exception innerException);
    public InvalidDocumentException(Exception innerException);
    public InvalidDocumentException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDocumentException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidDocumentOperationException : AmazonSimpleSystemsManagementException {
    public InvalidDocumentOperationException(string message);
    public InvalidDocumentOperationException(string message, Exception innerException);
    public InvalidDocumentOperationException(Exception innerException);
    public InvalidDocumentOperationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDocumentOperationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidDocumentSchemaVersionException : AmazonSimpleSystemsManagementException {
    public InvalidDocumentSchemaVersionException(string message);
    public InvalidDocumentSchemaVersionException(string message, Exception innerException);
    public InvalidDocumentSchemaVersionException(Exception innerException);
    public InvalidDocumentSchemaVersionException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDocumentSchemaVersionException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidDocumentTypeException : AmazonSimpleSystemsManagementException {
    public InvalidDocumentTypeException(string message);
    public InvalidDocumentTypeException(string message, Exception innerException);
    public InvalidDocumentTypeException(Exception innerException);
    public InvalidDocumentTypeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDocumentTypeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidDocumentVersionException : AmazonSimpleSystemsManagementException {
    public InvalidDocumentVersionException(string message);
    public InvalidDocumentVersionException(string message, Exception innerException);
    public InvalidDocumentVersionException(Exception innerException);
    public InvalidDocumentVersionException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDocumentVersionException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidFilterException : AmazonSimpleSystemsManagementException {
    public InvalidFilterException(string message);
    public InvalidFilterException(string message, Exception innerException);
    public InvalidFilterException(Exception innerException);
    public InvalidFilterException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidFilterException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidFilterKeyException : AmazonSimpleSystemsManagementException {
    public InvalidFilterKeyException(string message);
    public InvalidFilterKeyException(string message, Exception innerException);
    public InvalidFilterKeyException(Exception innerException);
    public InvalidFilterKeyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidFilterKeyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidFilterOptionException : AmazonSimpleSystemsManagementException {
    public InvalidFilterOptionException(string message);
    public InvalidFilterOptionException(string message, Exception innerException);
    public InvalidFilterOptionException(Exception innerException);
    public InvalidFilterOptionException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidFilterOptionException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidFilterValueException : AmazonSimpleSystemsManagementException {
    public InvalidFilterValueException(string message);
    public InvalidFilterValueException(string message, Exception innerException);
    public InvalidFilterValueException(Exception innerException);
    public InvalidFilterValueException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidFilterValueException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidInstanceIdException : AmazonSimpleSystemsManagementException {
    public InvalidInstanceIdException(string message);
    public InvalidInstanceIdException(string message, Exception innerException);
    public InvalidInstanceIdException(Exception innerException);
    public InvalidInstanceIdException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidInstanceIdException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidInstanceInformationFilterValueException : AmazonSimpleSystemsManagementException {
    public InvalidInstanceInformationFilterValueException(string message);
    public InvalidInstanceInformationFilterValueException(string message, Exception innerException);
    public InvalidInstanceInformationFilterValueException(Exception innerException);
    public InvalidInstanceInformationFilterValueException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidInstanceInformationFilterValueException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidInstancePropertyFilterValueException : AmazonSimpleSystemsManagementException {
    public InvalidInstancePropertyFilterValueException(string message);
    public InvalidInstancePropertyFilterValueException(string message, Exception innerException);
    public InvalidInstancePropertyFilterValueException(Exception innerException);
    public InvalidInstancePropertyFilterValueException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidInstancePropertyFilterValueException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidInventoryGroupException : AmazonSimpleSystemsManagementException {
    public InvalidInventoryGroupException(string message);
    public InvalidInventoryGroupException(string message, Exception innerException);
    public InvalidInventoryGroupException(Exception innerException);
    public InvalidInventoryGroupException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidInventoryGroupException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidInventoryItemContextException : AmazonSimpleSystemsManagementException {
    public InvalidInventoryItemContextException(string message);
    public InvalidInventoryItemContextException(string message, Exception innerException);
    public InvalidInventoryItemContextException(Exception innerException);
    public InvalidInventoryItemContextException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidInventoryItemContextException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidInventoryRequestException : AmazonSimpleSystemsManagementException {
    public InvalidInventoryRequestException(string message);
    public InvalidInventoryRequestException(string message, Exception innerException);
    public InvalidInventoryRequestException(Exception innerException);
    public InvalidInventoryRequestException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidInventoryRequestException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidItemContentException : AmazonSimpleSystemsManagementException {
    private string _typeName;
    [AWSPropertyAttribute]
public string TypeName { get; public set; }
    public InvalidItemContentException(string message);
    public InvalidItemContentException(string message, Exception innerException);
    public InvalidItemContentException(Exception innerException);
    public InvalidItemContentException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidItemContentException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_TypeName();
    public void set_TypeName(string value);
    internal bool IsSetTypeName();
}
public class Amazon.SimpleSystemsManagement.Model.InvalidKeyIdException : AmazonSimpleSystemsManagementException {
    public InvalidKeyIdException(string message);
    public InvalidKeyIdException(string message, Exception innerException);
    public InvalidKeyIdException(Exception innerException);
    public InvalidKeyIdException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidKeyIdException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidNextTokenException : AmazonSimpleSystemsManagementException {
    public InvalidNextTokenException(string message);
    public InvalidNextTokenException(string message, Exception innerException);
    public InvalidNextTokenException(Exception innerException);
    public InvalidNextTokenException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidNextTokenException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidNotificationConfigException : AmazonSimpleSystemsManagementException {
    public InvalidNotificationConfigException(string message);
    public InvalidNotificationConfigException(string message, Exception innerException);
    public InvalidNotificationConfigException(Exception innerException);
    public InvalidNotificationConfigException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidNotificationConfigException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidOptionException : AmazonSimpleSystemsManagementException {
    public InvalidOptionException(string message);
    public InvalidOptionException(string message, Exception innerException);
    public InvalidOptionException(Exception innerException);
    public InvalidOptionException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidOptionException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidOutputFolderException : AmazonSimpleSystemsManagementException {
    public InvalidOutputFolderException(string message);
    public InvalidOutputFolderException(string message, Exception innerException);
    public InvalidOutputFolderException(Exception innerException);
    public InvalidOutputFolderException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidOutputFolderException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidOutputLocationException : AmazonSimpleSystemsManagementException {
    public InvalidOutputLocationException(string message);
    public InvalidOutputLocationException(string message, Exception innerException);
    public InvalidOutputLocationException(Exception innerException);
    public InvalidOutputLocationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidOutputLocationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidParametersException : AmazonSimpleSystemsManagementException {
    public InvalidParametersException(string message);
    public InvalidParametersException(string message, Exception innerException);
    public InvalidParametersException(Exception innerException);
    public InvalidParametersException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidParametersException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidPermissionTypeException : AmazonSimpleSystemsManagementException {
    public InvalidPermissionTypeException(string message);
    public InvalidPermissionTypeException(string message, Exception innerException);
    public InvalidPermissionTypeException(Exception innerException);
    public InvalidPermissionTypeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidPermissionTypeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidPluginNameException : AmazonSimpleSystemsManagementException {
    public InvalidPluginNameException(string message);
    public InvalidPluginNameException(string message, Exception innerException);
    public InvalidPluginNameException(Exception innerException);
    public InvalidPluginNameException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidPluginNameException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidPolicyAttributeException : AmazonSimpleSystemsManagementException {
    public InvalidPolicyAttributeException(string message);
    public InvalidPolicyAttributeException(string message, Exception innerException);
    public InvalidPolicyAttributeException(Exception innerException);
    public InvalidPolicyAttributeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidPolicyAttributeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidPolicyTypeException : AmazonSimpleSystemsManagementException {
    public InvalidPolicyTypeException(string message);
    public InvalidPolicyTypeException(string message, Exception innerException);
    public InvalidPolicyTypeException(Exception innerException);
    public InvalidPolicyTypeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidPolicyTypeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidResourceIdException : AmazonSimpleSystemsManagementException {
    public InvalidResourceIdException(string message);
    public InvalidResourceIdException(string message, Exception innerException);
    public InvalidResourceIdException(Exception innerException);
    public InvalidResourceIdException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidResourceIdException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidResourceTypeException : AmazonSimpleSystemsManagementException {
    public InvalidResourceTypeException(string message);
    public InvalidResourceTypeException(string message, Exception innerException);
    public InvalidResourceTypeException(Exception innerException);
    public InvalidResourceTypeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidResourceTypeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidResultAttributeException : AmazonSimpleSystemsManagementException {
    public InvalidResultAttributeException(string message);
    public InvalidResultAttributeException(string message, Exception innerException);
    public InvalidResultAttributeException(Exception innerException);
    public InvalidResultAttributeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidResultAttributeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidRoleException : AmazonSimpleSystemsManagementException {
    public InvalidRoleException(string message);
    public InvalidRoleException(string message, Exception innerException);
    public InvalidRoleException(Exception innerException);
    public InvalidRoleException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidRoleException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidScheduleException : AmazonSimpleSystemsManagementException {
    public InvalidScheduleException(string message);
    public InvalidScheduleException(string message, Exception innerException);
    public InvalidScheduleException(Exception innerException);
    public InvalidScheduleException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidScheduleException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidTagException : AmazonSimpleSystemsManagementException {
    public InvalidTagException(string message);
    public InvalidTagException(string message, Exception innerException);
    public InvalidTagException(Exception innerException);
    public InvalidTagException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidTagException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidTargetException : AmazonSimpleSystemsManagementException {
    public InvalidTargetException(string message);
    public InvalidTargetException(string message, Exception innerException);
    public InvalidTargetException(Exception innerException);
    public InvalidTargetException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidTargetException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidTargetMapsException : AmazonSimpleSystemsManagementException {
    public InvalidTargetMapsException(string message);
    public InvalidTargetMapsException(string message, Exception innerException);
    public InvalidTargetMapsException(Exception innerException);
    public InvalidTargetMapsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidTargetMapsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidTypeNameException : AmazonSimpleSystemsManagementException {
    public InvalidTypeNameException(string message);
    public InvalidTypeNameException(string message, Exception innerException);
    public InvalidTypeNameException(Exception innerException);
    public InvalidTypeNameException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidTypeNameException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InvalidUpdateException : AmazonSimpleSystemsManagementException {
    public InvalidUpdateException(string message);
    public InvalidUpdateException(string message, Exception innerException);
    public InvalidUpdateException(Exception innerException);
    public InvalidUpdateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidUpdateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.InventoryAggregator : object {
    private List`1<InventoryAggregator> _aggregators;
    private string _expression;
    private List`1<InventoryGroup> _groups;
    [AWSPropertyAttribute]
public List`1<InventoryAggregator> Aggregators { get; public set; }
    [AWSPropertyAttribute]
public string Expression { get; public set; }
    [AWSPropertyAttribute]
public List`1<InventoryGroup> Groups { get; public set; }
    public List`1<InventoryAggregator> get_Aggregators();
    public void set_Aggregators(List`1<InventoryAggregator> value);
    internal bool IsSetAggregators();
    public string get_Expression();
    public void set_Expression(string value);
    internal bool IsSetExpression();
    public List`1<InventoryGroup> get_Groups();
    public void set_Groups(List`1<InventoryGroup> value);
    internal bool IsSetGroups();
}
public class Amazon.SimpleSystemsManagement.Model.InventoryDeletionStatusItem : object {
    private string _deletionId;
    private Nullable`1<DateTime> _deletionStartTime;
    private InventoryDeletionSummary _deletionSummary;
    private InventoryDeletionStatus _lastStatus;
    private string _lastStatusMessage;
    private Nullable`1<DateTime> _lastStatusUpdateTime;
    private string _typeName;
    public string DeletionId { get; public set; }
    public Nullable`1<DateTime> DeletionStartTime { get; public set; }
    public InventoryDeletionSummary DeletionSummary { get; public set; }
    public InventoryDeletionStatus LastStatus { get; public set; }
    public string LastStatusMessage { get; public set; }
    public Nullable`1<DateTime> LastStatusUpdateTime { get; public set; }
    [AWSPropertyAttribute]
public string TypeName { get; public set; }
    public string get_DeletionId();
    public void set_DeletionId(string value);
    internal bool IsSetDeletionId();
    public Nullable`1<DateTime> get_DeletionStartTime();
    public void set_DeletionStartTime(Nullable`1<DateTime> value);
    internal bool IsSetDeletionStartTime();
    public InventoryDeletionSummary get_DeletionSummary();
    public void set_DeletionSummary(InventoryDeletionSummary value);
    internal bool IsSetDeletionSummary();
    public InventoryDeletionStatus get_LastStatus();
    public void set_LastStatus(InventoryDeletionStatus value);
    internal bool IsSetLastStatus();
    public string get_LastStatusMessage();
    public void set_LastStatusMessage(string value);
    internal bool IsSetLastStatusMessage();
    public Nullable`1<DateTime> get_LastStatusUpdateTime();
    public void set_LastStatusUpdateTime(Nullable`1<DateTime> value);
    internal bool IsSetLastStatusUpdateTime();
    public string get_TypeName();
    public void set_TypeName(string value);
    internal bool IsSetTypeName();
}
public class Amazon.SimpleSystemsManagement.Model.InventoryDeletionSummary : object {
    private Nullable`1<int> _remainingCount;
    private List`1<InventoryDeletionSummaryItem> _summaryItems;
    private Nullable`1<int> _totalCount;
    public Nullable`1<int> RemainingCount { get; public set; }
    public List`1<InventoryDeletionSummaryItem> SummaryItems { get; public set; }
    public Nullable`1<int> TotalCount { get; public set; }
    public Nullable`1<int> get_RemainingCount();
    public void set_RemainingCount(Nullable`1<int> value);
    internal bool IsSetRemainingCount();
    public List`1<InventoryDeletionSummaryItem> get_SummaryItems();
    public void set_SummaryItems(List`1<InventoryDeletionSummaryItem> value);
    internal bool IsSetSummaryItems();
    public Nullable`1<int> get_TotalCount();
    public void set_TotalCount(Nullable`1<int> value);
    internal bool IsSetTotalCount();
}
public class Amazon.SimpleSystemsManagement.Model.InventoryDeletionSummaryItem : object {
    private Nullable`1<int> _count;
    private Nullable`1<int> _remainingCount;
    private string _version;
    public Nullable`1<int> Count { get; public set; }
    public Nullable`1<int> RemainingCount { get; public set; }
    public string Version { get; public set; }
    public Nullable`1<int> get_Count();
    public void set_Count(Nullable`1<int> value);
    internal bool IsSetCount();
    public Nullable`1<int> get_RemainingCount();
    public void set_RemainingCount(Nullable`1<int> value);
    internal bool IsSetRemainingCount();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
}
public class Amazon.SimpleSystemsManagement.Model.InventoryFilter : object {
    private string _key;
    private InventoryQueryOperatorType _type;
    private List`1<string> _values;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    public InventoryQueryOperatorType Type { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Values { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public InventoryQueryOperatorType get_Type();
    public void set_Type(InventoryQueryOperatorType value);
    internal bool IsSetType();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.SimpleSystemsManagement.Model.InventoryGroup : object {
    private List`1<InventoryFilter> _filters;
    private string _name;
    [AWSPropertyAttribute]
public List`1<InventoryFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<InventoryFilter> get_Filters();
    public void set_Filters(List`1<InventoryFilter> value);
    internal bool IsSetFilters();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleSystemsManagement.Model.InventoryItem : object {
    private string _captureTime;
    private List`1<Dictionary`2<string, string>> _content;
    private string _contentHash;
    private Dictionary`2<string, string> _context;
    private string _schemaVersion;
    private string _typeName;
    [AWSPropertyAttribute]
public string CaptureTime { get; public set; }
    [AWSPropertyAttribute]
public List`1<Dictionary`2<string, string>> Content { get; public set; }
    [AWSPropertyAttribute]
public string ContentHash { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Context { get; public set; }
    [AWSPropertyAttribute]
public string SchemaVersion { get; public set; }
    [AWSPropertyAttribute]
public string TypeName { get; public set; }
    public string get_CaptureTime();
    public void set_CaptureTime(string value);
    internal bool IsSetCaptureTime();
    public List`1<Dictionary`2<string, string>> get_Content();
    public void set_Content(List`1<Dictionary`2<string, string>> value);
    internal bool IsSetContent();
    public string get_ContentHash();
    public void set_ContentHash(string value);
    internal bool IsSetContentHash();
    public Dictionary`2<string, string> get_Context();
    public void set_Context(Dictionary`2<string, string> value);
    internal bool IsSetContext();
    public string get_SchemaVersion();
    public void set_SchemaVersion(string value);
    internal bool IsSetSchemaVersion();
    public string get_TypeName();
    public void set_TypeName(string value);
    internal bool IsSetTypeName();
}
public class Amazon.SimpleSystemsManagement.Model.InventoryItemAttribute : object {
    private InventoryAttributeDataType _dataType;
    private string _name;
    [AWSPropertyAttribute]
public InventoryAttributeDataType DataType { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public InventoryAttributeDataType get_DataType();
    public void set_DataType(InventoryAttributeDataType value);
    internal bool IsSetDataType();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleSystemsManagement.Model.InventoryItemSchema : object {
    private List`1<InventoryItemAttribute> _attributes;
    private string _displayName;
    private string _typeName;
    private string _version;
    [AWSPropertyAttribute]
public List`1<InventoryItemAttribute> Attributes { get; public set; }
    public string DisplayName { get; public set; }
    [AWSPropertyAttribute]
public string TypeName { get; public set; }
    public string Version { get; public set; }
    public List`1<InventoryItemAttribute> get_Attributes();
    public void set_Attributes(List`1<InventoryItemAttribute> value);
    internal bool IsSetAttributes();
    public string get_DisplayName();
    public void set_DisplayName(string value);
    internal bool IsSetDisplayName();
    public string get_TypeName();
    public void set_TypeName(string value);
    internal bool IsSetTypeName();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
}
public class Amazon.SimpleSystemsManagement.Model.InventoryResultEntity : object {
    private Dictionary`2<string, InventoryResultItem> _data;
    private string _id;
    public Dictionary`2<string, InventoryResultItem> Data { get; public set; }
    public string Id { get; public set; }
    public Dictionary`2<string, InventoryResultItem> get_Data();
    public void set_Data(Dictionary`2<string, InventoryResultItem> value);
    internal bool IsSetData();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.SimpleSystemsManagement.Model.InventoryResultItem : object {
    private string _captureTime;
    private List`1<Dictionary`2<string, string>> _content;
    private string _contentHash;
    private string _schemaVersion;
    private string _typeName;
    public string CaptureTime { get; public set; }
    [AWSPropertyAttribute]
public List`1<Dictionary`2<string, string>> Content { get; public set; }
    [AWSPropertyAttribute]
public string ContentHash { get; public set; }
    [AWSPropertyAttribute]
public string SchemaVersion { get; public set; }
    [AWSPropertyAttribute]
public string TypeName { get; public set; }
    public string get_CaptureTime();
    public void set_CaptureTime(string value);
    internal bool IsSetCaptureTime();
    public List`1<Dictionary`2<string, string>> get_Content();
    public void set_Content(List`1<Dictionary`2<string, string>> value);
    internal bool IsSetContent();
    public string get_ContentHash();
    public void set_ContentHash(string value);
    internal bool IsSetContentHash();
    public string get_SchemaVersion();
    public void set_SchemaVersion(string value);
    internal bool IsSetSchemaVersion();
    public string get_TypeName();
    public void set_TypeName(string value);
    internal bool IsSetTypeName();
}
public class Amazon.SimpleSystemsManagement.Model.InvocationDoesNotExistException : AmazonSimpleSystemsManagementException {
    public InvocationDoesNotExistException(string message);
    public InvocationDoesNotExistException(string message, Exception innerException);
    public InvocationDoesNotExistException(Exception innerException);
    public InvocationDoesNotExistException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvocationDoesNotExistException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public interface Amazon.SimpleSystemsManagement.Model.ISimpleSystemsManagementPaginatorFactory {
    public abstract virtual IDescribeActivationsPaginator DescribeActivations(DescribeActivationsRequest request);
    public abstract virtual IDescribeAssociationExecutionsPaginator DescribeAssociationExecutions(DescribeAssociationExecutionsRequest request);
    public abstract virtual IDescribeAssociationExecutionTargetsPaginator DescribeAssociationExecutionTargets(DescribeAssociationExecutionTargetsRequest request);
    public abstract virtual IDescribeAutomationExecutionsPaginator DescribeAutomationExecutions(DescribeAutomationExecutionsRequest request);
    public abstract virtual IDescribeAutomationStepExecutionsPaginator DescribeAutomationStepExecutions(DescribeAutomationStepExecutionsRequest request);
    public abstract virtual IDescribeAvailablePatchesPaginator DescribeAvailablePatches(DescribeAvailablePatchesRequest request);
    public abstract virtual IDescribeEffectiveInstanceAssociationsPaginator DescribeEffectiveInstanceAssociations(DescribeEffectiveInstanceAssociationsRequest request);
    public abstract virtual IDescribeEffectivePatchesForPatchBaselinePaginator DescribeEffectivePatchesForPatchBaseline(DescribeEffectivePatchesForPatchBaselineRequest request);
    public abstract virtual IDescribeInstanceAssociationsStatusPaginator DescribeInstanceAssociationsStatus(DescribeInstanceAssociationsStatusRequest request);
    public abstract virtual IDescribeInstanceInformationPaginator DescribeInstanceInformation(DescribeInstanceInformationRequest request);
    public abstract virtual IDescribeInstancePatchesPaginator DescribeInstancePatches(DescribeInstancePatchesRequest request);
    public abstract virtual IDescribeInstancePatchStatesPaginator DescribeInstancePatchStates(DescribeInstancePatchStatesRequest request);
    public abstract virtual IDescribeInstancePatchStatesForPatchGroupPaginator DescribeInstancePatchStatesForPatchGroup(DescribeInstancePatchStatesForPatchGroupRequest request);
    public abstract virtual IDescribeInstancePropertiesPaginator DescribeInstanceProperties(DescribeInstancePropertiesRequest request);
    public abstract virtual IDescribeInventoryDeletionsPaginator DescribeInventoryDeletions(DescribeInventoryDeletionsRequest request);
    public abstract virtual IDescribeMaintenanceWindowExecutionsPaginator DescribeMaintenanceWindowExecutions(DescribeMaintenanceWindowExecutionsRequest request);
    public abstract virtual IDescribeMaintenanceWindowExecutionTaskInvocationsPaginator DescribeMaintenanceWindowExecutionTaskInvocations(DescribeMaintenanceWindowExecutionTaskInvocationsRequest request);
    public abstract virtual IDescribeMaintenanceWindowExecutionTasksPaginator DescribeMaintenanceWindowExecutionTasks(DescribeMaintenanceWindowExecutionTasksRequest request);
    public abstract virtual IDescribeMaintenanceWindowsPaginator DescribeMaintenanceWindows(DescribeMaintenanceWindowsRequest request);
    public abstract virtual IDescribeMaintenanceWindowSchedulePaginator DescribeMaintenanceWindowSchedule(DescribeMaintenanceWindowScheduleRequest request);
    public abstract virtual IDescribeMaintenanceWindowsForTargetPaginator DescribeMaintenanceWindowsForTarget(DescribeMaintenanceWindowsForTargetRequest request);
    public abstract virtual IDescribeMaintenanceWindowTargetsPaginator DescribeMaintenanceWindowTargets(DescribeMaintenanceWindowTargetsRequest request);
    public abstract virtual IDescribeMaintenanceWindowTasksPaginator DescribeMaintenanceWindowTasks(DescribeMaintenanceWindowTasksRequest request);
    public abstract virtual IDescribeOpsItemsPaginator DescribeOpsItems(DescribeOpsItemsRequest request);
    public abstract virtual IDescribeParametersPaginator DescribeParameters(DescribeParametersRequest request);
    public abstract virtual IDescribePatchBaselinesPaginator DescribePatchBaselines(DescribePatchBaselinesRequest request);
    public abstract virtual IDescribePatchGroupsPaginator DescribePatchGroups(DescribePatchGroupsRequest request);
    public abstract virtual IDescribePatchPropertiesPaginator DescribePatchProperties(DescribePatchPropertiesRequest request);
    public abstract virtual IDescribeSessionsPaginator DescribeSessions(DescribeSessionsRequest request);
    public abstract virtual IGetInventoryPaginator GetInventory(GetInventoryRequest request);
    public abstract virtual IGetInventorySchemaPaginator GetInventorySchema(GetInventorySchemaRequest request);
    public abstract virtual IGetOpsSummaryPaginator GetOpsSummary(GetOpsSummaryRequest request);
    public abstract virtual IGetParameterHistoryPaginator GetParameterHistory(GetParameterHistoryRequest request);
    public abstract virtual IGetParametersByPathPaginator GetParametersByPath(GetParametersByPathRequest request);
    public abstract virtual IGetResourcePoliciesPaginator GetResourcePolicies(GetResourcePoliciesRequest request);
    public abstract virtual IListAssociationsPaginator ListAssociations(ListAssociationsRequest request);
    public abstract virtual IListAssociationVersionsPaginator ListAssociationVersions(ListAssociationVersionsRequest request);
    public abstract virtual IListCommandInvocationsPaginator ListCommandInvocations(ListCommandInvocationsRequest request);
    public abstract virtual IListCommandsPaginator ListCommands(ListCommandsRequest request);
    public abstract virtual IListComplianceItemsPaginator ListComplianceItems(ListComplianceItemsRequest request);
    public abstract virtual IListComplianceSummariesPaginator ListComplianceSummaries(ListComplianceSummariesRequest request);
    public abstract virtual IListDocumentsPaginator ListDocuments(ListDocumentsRequest request);
    public abstract virtual IListDocumentVersionsPaginator ListDocumentVersions(ListDocumentVersionsRequest request);
    public abstract virtual IListOpsItemEventsPaginator ListOpsItemEvents(ListOpsItemEventsRequest request);
    public abstract virtual IListOpsItemRelatedItemsPaginator ListOpsItemRelatedItems(ListOpsItemRelatedItemsRequest request);
    public abstract virtual IListOpsMetadataPaginator ListOpsMetadata(ListOpsMetadataRequest request);
    public abstract virtual IListResourceComplianceSummariesPaginator ListResourceComplianceSummaries(ListResourceComplianceSummariesRequest request);
    public abstract virtual IListResourceDataSyncPaginator ListResourceDataSync(ListResourceDataSyncRequest request);
}
public class Amazon.SimpleSystemsManagement.Model.ItemContentMismatchException : AmazonSimpleSystemsManagementException {
    private string _typeName;
    [AWSPropertyAttribute]
public string TypeName { get; public set; }
    public ItemContentMismatchException(string message);
    public ItemContentMismatchException(string message, Exception innerException);
    public ItemContentMismatchException(Exception innerException);
    public ItemContentMismatchException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ItemContentMismatchException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_TypeName();
    public void set_TypeName(string value);
    internal bool IsSetTypeName();
}
public class Amazon.SimpleSystemsManagement.Model.ItemSizeLimitExceededException : AmazonSimpleSystemsManagementException {
    private string _typeName;
    [AWSPropertyAttribute]
public string TypeName { get; public set; }
    public ItemSizeLimitExceededException(string message);
    public ItemSizeLimitExceededException(string message, Exception innerException);
    public ItemSizeLimitExceededException(Exception innerException);
    public ItemSizeLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ItemSizeLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_TypeName();
    public void set_TypeName(string value);
    internal bool IsSetTypeName();
}
public class Amazon.SimpleSystemsManagement.Model.LabelParameterVersionRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<string> _labels;
    private string _name;
    private Nullable`1<long> _parameterVersion;
    [AWSPropertyAttribute]
public List`1<string> Labels { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<long> ParameterVersion { get; public set; }
    public List`1<string> get_Labels();
    public void set_Labels(List`1<string> value);
    internal bool IsSetLabels();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<long> get_ParameterVersion();
    public void set_ParameterVersion(Nullable`1<long> value);
    internal bool IsSetParameterVersion();
}
public class Amazon.SimpleSystemsManagement.Model.LabelParameterVersionResponse : AmazonWebServiceResponse {
    private List`1<string> _invalidLabels;
    private Nullable`1<long> _parameterVersion;
    [AWSPropertyAttribute]
public List`1<string> InvalidLabels { get; public set; }
    public Nullable`1<long> ParameterVersion { get; public set; }
    public List`1<string> get_InvalidLabels();
    public void set_InvalidLabels(List`1<string> value);
    internal bool IsSetInvalidLabels();
    public Nullable`1<long> get_ParameterVersion();
    public void set_ParameterVersion(Nullable`1<long> value);
    internal bool IsSetParameterVersion();
}
internal class Amazon.SimpleSystemsManagement.Model.ListAssociationsPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private ListAssociationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListAssociationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Association> Associations { get; }
    internal ListAssociationsPaginator(IAmazonSimpleSystemsManagement client, ListAssociationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListAssociationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Association> get_Associations();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.ListAssociationsPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-ListAssociationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListAssociationsResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.ListAssociationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.ListAssociationsRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<AssociationFilter> _associationFilterList;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<AssociationFilter> AssociationFilterList { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public ListAssociationsRequest(List`1<AssociationFilter> associationFilterList);
    public List`1<AssociationFilter> get_AssociationFilterList();
    public void set_AssociationFilterList(List`1<AssociationFilter> value);
    internal bool IsSetAssociationFilterList();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.ListAssociationsResponse : AmazonWebServiceResponse {
    private List`1<Association> _associations;
    private string _nextToken;
    public List`1<Association> Associations { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Association> get_Associations();
    public void set_Associations(List`1<Association> value);
    internal bool IsSetAssociations();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.SimpleSystemsManagement.Model.ListAssociationVersionsPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private ListAssociationVersionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListAssociationVersionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AssociationVersionInfo> AssociationVersions { get; }
    internal ListAssociationVersionsPaginator(IAmazonSimpleSystemsManagement client, ListAssociationVersionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListAssociationVersionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<AssociationVersionInfo> get_AssociationVersions();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.ListAssociationVersionsPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-ListAssociationVersionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListAssociationVersionsResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.ListAssociationVersionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.ListAssociationVersionsRequest : AmazonSimpleSystemsManagementRequest {
    private string _associationId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string AssociationId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.ListAssociationVersionsResponse : AmazonWebServiceResponse {
    private List`1<AssociationVersionInfo> _associationVersions;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<AssociationVersionInfo> AssociationVersions { get; public set; }
    public string NextToken { get; public set; }
    public List`1<AssociationVersionInfo> get_AssociationVersions();
    public void set_AssociationVersions(List`1<AssociationVersionInfo> value);
    internal bool IsSetAssociationVersions();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.SimpleSystemsManagement.Model.ListCommandInvocationsPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private ListCommandInvocationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListCommandInvocationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<CommandInvocation> CommandInvocations { get; }
    internal ListCommandInvocationsPaginator(IAmazonSimpleSystemsManagement client, ListCommandInvocationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListCommandInvocationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<CommandInvocation> get_CommandInvocations();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.ListCommandInvocationsPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-ListCommandInvocationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListCommandInvocationsResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.ListCommandInvocationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.ListCommandInvocationsRequest : AmazonSimpleSystemsManagementRequest {
    private string _commandId;
    private Nullable`1<bool> _details;
    private List`1<CommandFilter> _filters;
    private string _instanceId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string CommandId { get; public set; }
    public Nullable`1<bool> Details { get; public set; }
    [AWSPropertyAttribute]
public List`1<CommandFilter> Filters { get; public set; }
    public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public ListCommandInvocationsRequest(string commandId);
    public string get_CommandId();
    public void set_CommandId(string value);
    internal bool IsSetCommandId();
    public Nullable`1<bool> get_Details();
    public void set_Details(Nullable`1<bool> value);
    internal bool IsSetDetails();
    public List`1<CommandFilter> get_Filters();
    public void set_Filters(List`1<CommandFilter> value);
    internal bool IsSetFilters();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.ListCommandInvocationsResponse : AmazonWebServiceResponse {
    private List`1<CommandInvocation> _commandInvocations;
    private string _nextToken;
    public List`1<CommandInvocation> CommandInvocations { get; public set; }
    public string NextToken { get; public set; }
    public List`1<CommandInvocation> get_CommandInvocations();
    public void set_CommandInvocations(List`1<CommandInvocation> value);
    internal bool IsSetCommandInvocations();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.SimpleSystemsManagement.Model.ListCommandsPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private ListCommandsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListCommandsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Command> Commands { get; }
    internal ListCommandsPaginator(IAmazonSimpleSystemsManagement client, ListCommandsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListCommandsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Command> get_Commands();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.ListCommandsPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-ListCommandsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListCommandsResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.ListCommandsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.ListCommandsRequest : AmazonSimpleSystemsManagementRequest {
    private string _commandId;
    private List`1<CommandFilter> _filters;
    private string _instanceId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string CommandId { get; public set; }
    [AWSPropertyAttribute]
public List`1<CommandFilter> Filters { get; public set; }
    public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public ListCommandsRequest(string commandId);
    public string get_CommandId();
    public void set_CommandId(string value);
    internal bool IsSetCommandId();
    public List`1<CommandFilter> get_Filters();
    public void set_Filters(List`1<CommandFilter> value);
    internal bool IsSetFilters();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.ListCommandsResponse : AmazonWebServiceResponse {
    private List`1<Command> _commands;
    private string _nextToken;
    public List`1<Command> Commands { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Command> get_Commands();
    public void set_Commands(List`1<Command> value);
    internal bool IsSetCommands();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.SimpleSystemsManagement.Model.ListComplianceItemsPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private ListComplianceItemsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListComplianceItemsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ComplianceItem> ComplianceItems { get; }
    internal ListComplianceItemsPaginator(IAmazonSimpleSystemsManagement client, ListComplianceItemsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListComplianceItemsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ComplianceItem> get_ComplianceItems();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.ListComplianceItemsPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-ListComplianceItemsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListComplianceItemsResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.ListComplianceItemsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.ListComplianceItemsRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<ComplianceStringFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _resourceIds;
    private List`1<string> _resourceTypes;
    public List`1<ComplianceStringFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ResourceIds { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ResourceTypes { get; public set; }
    public List`1<ComplianceStringFilter> get_Filters();
    public void set_Filters(List`1<ComplianceStringFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_ResourceIds();
    public void set_ResourceIds(List`1<string> value);
    internal bool IsSetResourceIds();
    public List`1<string> get_ResourceTypes();
    public void set_ResourceTypes(List`1<string> value);
    internal bool IsSetResourceTypes();
}
public class Amazon.SimpleSystemsManagement.Model.ListComplianceItemsResponse : AmazonWebServiceResponse {
    private List`1<ComplianceItem> _complianceItems;
    private string _nextToken;
    public List`1<ComplianceItem> ComplianceItems { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ComplianceItem> get_ComplianceItems();
    public void set_ComplianceItems(List`1<ComplianceItem> value);
    internal bool IsSetComplianceItems();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.SimpleSystemsManagement.Model.ListComplianceSummariesPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private ListComplianceSummariesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListComplianceSummariesResponse> Responses { get; }
    public IPaginatedEnumerable`1<ComplianceSummaryItem> ComplianceSummaryItems { get; }
    internal ListComplianceSummariesPaginator(IAmazonSimpleSystemsManagement client, ListComplianceSummariesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListComplianceSummariesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ComplianceSummaryItem> get_ComplianceSummaryItems();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.ListComplianceSummariesPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-ListComplianceSummariesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListComplianceSummariesResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.ListComplianceSummariesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.ListComplianceSummariesRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<ComplianceStringFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<ComplianceStringFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ComplianceStringFilter> get_Filters();
    public void set_Filters(List`1<ComplianceStringFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.ListComplianceSummariesResponse : AmazonWebServiceResponse {
    private List`1<ComplianceSummaryItem> _complianceSummaryItems;
    private string _nextToken;
    public List`1<ComplianceSummaryItem> ComplianceSummaryItems { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ComplianceSummaryItem> get_ComplianceSummaryItems();
    public void set_ComplianceSummaryItems(List`1<ComplianceSummaryItem> value);
    internal bool IsSetComplianceSummaryItems();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.ListDocumentMetadataHistoryRequest : AmazonSimpleSystemsManagementRequest {
    private string _documentVersion;
    private Nullable`1<int> _maxResults;
    private DocumentMetadataEnum _metadata;
    private string _name;
    private string _nextToken;
    public string DocumentVersion { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public DocumentMetadataEnum Metadata { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string NextToken { get; public set; }
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public DocumentMetadataEnum get_Metadata();
    public void set_Metadata(DocumentMetadataEnum value);
    internal bool IsSetMetadata();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.ListDocumentMetadataHistoryResponse : AmazonWebServiceResponse {
    private string _author;
    private string _documentVersion;
    private DocumentMetadataResponseInfo _metadata;
    private string _name;
    private string _nextToken;
    public string Author { get; public set; }
    public string DocumentVersion { get; public set; }
    public DocumentMetadataResponseInfo Metadata { get; public set; }
    public string Name { get; public set; }
    public string NextToken { get; public set; }
    public string get_Author();
    public void set_Author(string value);
    internal bool IsSetAuthor();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public DocumentMetadataResponseInfo get_Metadata();
    public void set_Metadata(DocumentMetadataResponseInfo value);
    internal bool IsSetMetadata();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.SimpleSystemsManagement.Model.ListDocumentsPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private ListDocumentsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListDocumentsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DocumentIdentifier> DocumentIdentifiers { get; }
    internal ListDocumentsPaginator(IAmazonSimpleSystemsManagement client, ListDocumentsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListDocumentsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<DocumentIdentifier> get_DocumentIdentifiers();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.ListDocumentsPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-ListDocumentsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListDocumentsResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.ListDocumentsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.ListDocumentsRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<DocumentFilter> _documentFilterList;
    private List`1<DocumentKeyValuesFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<DocumentFilter> DocumentFilterList { get; public set; }
    [AWSPropertyAttribute]
public List`1<DocumentKeyValuesFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public ListDocumentsRequest(List`1<DocumentFilter> documentFilterList);
    public List`1<DocumentFilter> get_DocumentFilterList();
    public void set_DocumentFilterList(List`1<DocumentFilter> value);
    internal bool IsSetDocumentFilterList();
    public List`1<DocumentKeyValuesFilter> get_Filters();
    public void set_Filters(List`1<DocumentKeyValuesFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.ListDocumentsResponse : AmazonWebServiceResponse {
    private List`1<DocumentIdentifier> _documentIdentifiers;
    private string _nextToken;
    public List`1<DocumentIdentifier> DocumentIdentifiers { get; public set; }
    public string NextToken { get; public set; }
    public List`1<DocumentIdentifier> get_DocumentIdentifiers();
    public void set_DocumentIdentifiers(List`1<DocumentIdentifier> value);
    internal bool IsSetDocumentIdentifiers();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.SimpleSystemsManagement.Model.ListDocumentVersionsPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private ListDocumentVersionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListDocumentVersionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DocumentVersionInfo> DocumentVersions { get; }
    internal ListDocumentVersionsPaginator(IAmazonSimpleSystemsManagement client, ListDocumentVersionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListDocumentVersionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<DocumentVersionInfo> get_DocumentVersions();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.ListDocumentVersionsPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-ListDocumentVersionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListDocumentVersionsResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.ListDocumentVersionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.ListDocumentVersionsRequest : AmazonSimpleSystemsManagementRequest {
    private Nullable`1<int> _maxResults;
    private string _name;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.ListDocumentVersionsResponse : AmazonWebServiceResponse {
    private List`1<DocumentVersionInfo> _documentVersions;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<DocumentVersionInfo> DocumentVersions { get; public set; }
    public string NextToken { get; public set; }
    public List`1<DocumentVersionInfo> get_DocumentVersions();
    public void set_DocumentVersions(List`1<DocumentVersionInfo> value);
    internal bool IsSetDocumentVersions();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.ListInventoryEntriesRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<InventoryFilter> _filters;
    private string _instanceId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _typeName;
    [AWSPropertyAttribute]
public List`1<InventoryFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string TypeName { get; public set; }
    public List`1<InventoryFilter> get_Filters();
    public void set_Filters(List`1<InventoryFilter> value);
    internal bool IsSetFilters();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_TypeName();
    public void set_TypeName(string value);
    internal bool IsSetTypeName();
}
public class Amazon.SimpleSystemsManagement.Model.ListInventoryEntriesResponse : AmazonWebServiceResponse {
    private string _captureTime;
    private List`1<Dictionary`2<string, string>> _entries;
    private string _instanceId;
    private string _nextToken;
    private string _schemaVersion;
    private string _typeName;
    public string CaptureTime { get; public set; }
    [AWSPropertyAttribute]
public List`1<Dictionary`2<string, string>> Entries { get; public set; }
    public string InstanceId { get; public set; }
    public string NextToken { get; public set; }
    public string SchemaVersion { get; public set; }
    [AWSPropertyAttribute]
public string TypeName { get; public set; }
    public string get_CaptureTime();
    public void set_CaptureTime(string value);
    internal bool IsSetCaptureTime();
    public List`1<Dictionary`2<string, string>> get_Entries();
    public void set_Entries(List`1<Dictionary`2<string, string>> value);
    internal bool IsSetEntries();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_SchemaVersion();
    public void set_SchemaVersion(string value);
    internal bool IsSetSchemaVersion();
    public string get_TypeName();
    public void set_TypeName(string value);
    internal bool IsSetTypeName();
}
internal class Amazon.SimpleSystemsManagement.Model.ListOpsItemEventsPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private ListOpsItemEventsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListOpsItemEventsResponse> Responses { get; }
    public IPaginatedEnumerable`1<OpsItemEventSummary> Summaries { get; }
    internal ListOpsItemEventsPaginator(IAmazonSimpleSystemsManagement client, ListOpsItemEventsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListOpsItemEventsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<OpsItemEventSummary> get_Summaries();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.ListOpsItemEventsPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-ListOpsItemEventsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListOpsItemEventsResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.ListOpsItemEventsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.ListOpsItemEventsRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<OpsItemEventFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<OpsItemEventFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<OpsItemEventFilter> get_Filters();
    public void set_Filters(List`1<OpsItemEventFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.ListOpsItemEventsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<OpsItemEventSummary> _summaries;
    public string NextToken { get; public set; }
    public List`1<OpsItemEventSummary> Summaries { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<OpsItemEventSummary> get_Summaries();
    public void set_Summaries(List`1<OpsItemEventSummary> value);
    internal bool IsSetSummaries();
}
internal class Amazon.SimpleSystemsManagement.Model.ListOpsItemRelatedItemsPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private ListOpsItemRelatedItemsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListOpsItemRelatedItemsResponse> Responses { get; }
    public IPaginatedEnumerable`1<OpsItemRelatedItemSummary> Summaries { get; }
    internal ListOpsItemRelatedItemsPaginator(IAmazonSimpleSystemsManagement client, ListOpsItemRelatedItemsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListOpsItemRelatedItemsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<OpsItemRelatedItemSummary> get_Summaries();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.ListOpsItemRelatedItemsPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-ListOpsItemRelatedItemsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListOpsItemRelatedItemsResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.ListOpsItemRelatedItemsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.ListOpsItemRelatedItemsRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<OpsItemRelatedItemsFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _opsItemId;
    public List`1<OpsItemRelatedItemsFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string OpsItemId { get; public set; }
    public List`1<OpsItemRelatedItemsFilter> get_Filters();
    public void set_Filters(List`1<OpsItemRelatedItemsFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_OpsItemId();
    public void set_OpsItemId(string value);
    internal bool IsSetOpsItemId();
}
public class Amazon.SimpleSystemsManagement.Model.ListOpsItemRelatedItemsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<OpsItemRelatedItemSummary> _summaries;
    public string NextToken { get; public set; }
    public List`1<OpsItemRelatedItemSummary> Summaries { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<OpsItemRelatedItemSummary> get_Summaries();
    public void set_Summaries(List`1<OpsItemRelatedItemSummary> value);
    internal bool IsSetSummaries();
}
internal class Amazon.SimpleSystemsManagement.Model.ListOpsMetadataPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private ListOpsMetadataRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListOpsMetadataResponse> Responses { get; }
    public IPaginatedEnumerable`1<OpsMetadata> OpsMetadataList { get; }
    internal ListOpsMetadataPaginator(IAmazonSimpleSystemsManagement client, ListOpsMetadataRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListOpsMetadataResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<OpsMetadata> get_OpsMetadataList();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.ListOpsMetadataPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-ListOpsMetadataResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListOpsMetadataResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.ListOpsMetadataResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.ListOpsMetadataRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<OpsMetadataFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<OpsMetadataFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<OpsMetadataFilter> get_Filters();
    public void set_Filters(List`1<OpsMetadataFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.ListOpsMetadataResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<OpsMetadata> _opsMetadataList;
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<OpsMetadata> OpsMetadataList { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<OpsMetadata> get_OpsMetadataList();
    public void set_OpsMetadataList(List`1<OpsMetadata> value);
    internal bool IsSetOpsMetadataList();
}
internal class Amazon.SimpleSystemsManagement.Model.ListResourceComplianceSummariesPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private ListResourceComplianceSummariesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListResourceComplianceSummariesResponse> Responses { get; }
    public IPaginatedEnumerable`1<ResourceComplianceSummaryItem> ResourceComplianceSummaryItems { get; }
    internal ListResourceComplianceSummariesPaginator(IAmazonSimpleSystemsManagement client, ListResourceComplianceSummariesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListResourceComplianceSummariesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ResourceComplianceSummaryItem> get_ResourceComplianceSummaryItems();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.ListResourceComplianceSummariesPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-ListResourceComplianceSummariesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListResourceComplianceSummariesResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.ListResourceComplianceSummariesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.ListResourceComplianceSummariesRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<ComplianceStringFilter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<ComplianceStringFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ComplianceStringFilter> get_Filters();
    public void set_Filters(List`1<ComplianceStringFilter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleSystemsManagement.Model.ListResourceComplianceSummariesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ResourceComplianceSummaryItem> _resourceComplianceSummaryItems;
    public string NextToken { get; public set; }
    public List`1<ResourceComplianceSummaryItem> ResourceComplianceSummaryItems { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ResourceComplianceSummaryItem> get_ResourceComplianceSummaryItems();
    public void set_ResourceComplianceSummaryItems(List`1<ResourceComplianceSummaryItem> value);
    internal bool IsSetResourceComplianceSummaryItems();
}
internal class Amazon.SimpleSystemsManagement.Model.ListResourceDataSyncPaginator : object {
    private IAmazonSimpleSystemsManagement _client;
    private ListResourceDataSyncRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListResourceDataSyncResponse> Responses { get; }
    public IPaginatedEnumerable`1<ResourceDataSyncItem> ResourceDataSyncItems { get; }
    internal ListResourceDataSyncPaginator(IAmazonSimpleSystemsManagement client, ListResourceDataSyncRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListResourceDataSyncResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ResourceDataSyncItem> get_ResourceDataSyncItems();
    [AsyncIteratorStateMachineAttribute("Amazon.SimpleSystemsManagement.Model.ListResourceDataSyncPaginator/<Amazon-Runtime-IPaginator<Amazon-SimpleSystemsManagement-Model-ListResourceDataSyncResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListResourceDataSyncResponse> Amazon.Runtime.IPaginator<Amazon.SimpleSystemsManagement.Model.ListResourceDataSyncResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SimpleSystemsManagement.Model.ListResourceDataSyncRequest : AmazonSimpleSystemsManagementRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _syncType;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string SyncType { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_SyncType();
    public void set_SyncType(string value);
    internal bool IsSetSyncType();
}
public class Amazon.SimpleSystemsManagement.Model.ListResourceDataSyncResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ResourceDataSyncItem> _resourceDataSyncItems;
    public string NextToken { get; public set; }
    public List`1<ResourceDataSyncItem> ResourceDataSyncItems { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ResourceDataSyncItem> get_ResourceDataSyncItems();
    public void set_ResourceDataSyncItems(List`1<ResourceDataSyncItem> value);
    internal bool IsSetResourceDataSyncItems();
}
public class Amazon.SimpleSystemsManagement.Model.ListTagsForResourceRequest : AmazonSimpleSystemsManagementRequest {
    private string _resourceId;
    private ResourceTypeForTagging _resourceType;
    [AWSPropertyAttribute]
public string ResourceId { get; public set; }
    [AWSPropertyAttribute]
public ResourceTypeForTagging ResourceType { get; public set; }
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public ResourceTypeForTagging get_ResourceType();
    public void set_ResourceType(ResourceTypeForTagging value);
    internal bool IsSetResourceType();
}
public class Amazon.SimpleSystemsManagement.Model.ListTagsForResourceResponse : AmazonWebServiceResponse {
    private List`1<Tag> _tagList;
    [AWSPropertyAttribute]
public List`1<Tag> TagList { get; public set; }
    public List`1<Tag> get_TagList();
    public void set_TagList(List`1<Tag> value);
    internal bool IsSetTagList();
}
public class Amazon.SimpleSystemsManagement.Model.LoggingInfo : object {
    private string _s3BucketName;
    private string _s3KeyPrefix;
    private string _s3Region;
    [AWSPropertyAttribute]
public string S3BucketName { get; public set; }
    [AWSPropertyAttribute]
public string S3KeyPrefix { get; public set; }
    [AWSPropertyAttribute]
public string S3Region { get; public set; }
    public string get_S3BucketName();
    public void set_S3BucketName(string value);
    internal bool IsSetS3BucketName();
    public string get_S3KeyPrefix();
    public void set_S3KeyPrefix(string value);
    internal bool IsSetS3KeyPrefix();
    public string get_S3Region();
    public void set_S3Region(string value);
    internal bool IsSetS3Region();
}
public class Amazon.SimpleSystemsManagement.Model.MaintenanceWindowAutomationParameters : object {
    private string _documentVersion;
    private Dictionary`2<string, List`1<string>> _parameters;
    public string DocumentVersion { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, List`1<string>> Parameters { get; public set; }
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public Dictionary`2<string, List`1<string>> get_Parameters();
    public void set_Parameters(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetParameters();
}
public class Amazon.SimpleSystemsManagement.Model.MaintenanceWindowExecution : object {
    private Nullable`1<DateTime> _endTime;
    private Nullable`1<DateTime> _startTime;
    private MaintenanceWindowExecutionStatus _status;
    private string _statusDetails;
    private string _windowExecutionId;
    private string _windowId;
    public Nullable`1<DateTime> EndTime { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public MaintenanceWindowExecutionStatus Status { get; public set; }
    [AWSPropertyAttribute]
public string StatusDetails { get; public set; }
    [AWSPropertyAttribute]
public string WindowExecutionId { get; public set; }
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public MaintenanceWindowExecutionStatus get_Status();
    public void set_Status(MaintenanceWindowExecutionStatus value);
    internal bool IsSetStatus();
    public string get_StatusDetails();
    public void set_StatusDetails(string value);
    internal bool IsSetStatusDetails();
    public string get_WindowExecutionId();
    public void set_WindowExecutionId(string value);
    internal bool IsSetWindowExecutionId();
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
}
public class Amazon.SimpleSystemsManagement.Model.MaintenanceWindowExecutionTaskIdentity : object {
    private AlarmConfiguration _alarmConfiguration;
    private Nullable`1<DateTime> _endTime;
    private Nullable`1<DateTime> _startTime;
    private MaintenanceWindowExecutionStatus _status;
    private string _statusDetails;
    private string _taskArn;
    private string _taskExecutionId;
    private MaintenanceWindowTaskType _taskType;
    private List`1<AlarmStateInformation> _triggeredAlarms;
    private string _windowExecutionId;
    public AlarmConfiguration AlarmConfiguration { get; public set; }
    public Nullable`1<DateTime> EndTime { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public MaintenanceWindowExecutionStatus Status { get; public set; }
    [AWSPropertyAttribute]
public string StatusDetails { get; public set; }
    [AWSPropertyAttribute]
public string TaskArn { get; public set; }
    [AWSPropertyAttribute]
public string TaskExecutionId { get; public set; }
    public MaintenanceWindowTaskType TaskType { get; public set; }
    [AWSPropertyAttribute]
public List`1<AlarmStateInformation> TriggeredAlarms { get; public set; }
    [AWSPropertyAttribute]
public string WindowExecutionId { get; public set; }
    public AlarmConfiguration get_AlarmConfiguration();
    public void set_AlarmConfiguration(AlarmConfiguration value);
    internal bool IsSetAlarmConfiguration();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public MaintenanceWindowExecutionStatus get_Status();
    public void set_Status(MaintenanceWindowExecutionStatus value);
    internal bool IsSetStatus();
    public string get_StatusDetails();
    public void set_StatusDetails(string value);
    internal bool IsSetStatusDetails();
    public string get_TaskArn();
    public void set_TaskArn(string value);
    internal bool IsSetTaskArn();
    public string get_TaskExecutionId();
    public void set_TaskExecutionId(string value);
    internal bool IsSetTaskExecutionId();
    public MaintenanceWindowTaskType get_TaskType();
    public void set_TaskType(MaintenanceWindowTaskType value);
    internal bool IsSetTaskType();
    public List`1<AlarmStateInformation> get_TriggeredAlarms();
    public void set_TriggeredAlarms(List`1<AlarmStateInformation> value);
    internal bool IsSetTriggeredAlarms();
    public string get_WindowExecutionId();
    public void set_WindowExecutionId(string value);
    internal bool IsSetWindowExecutionId();
}
public class Amazon.SimpleSystemsManagement.Model.MaintenanceWindowExecutionTaskInvocationIdentity : object {
    private Nullable`1<DateTime> _endTime;
    private string _executionId;
    private string _invocationId;
    private string _ownerInformation;
    private string _parameters;
    private Nullable`1<DateTime> _startTime;
    private MaintenanceWindowExecutionStatus _status;
    private string _statusDetails;
    private string _taskExecutionId;
    private MaintenanceWindowTaskType _taskType;
    private string _windowExecutionId;
    private string _windowTargetId;
    public Nullable`1<DateTime> EndTime { get; public set; }
    public string ExecutionId { get; public set; }
    [AWSPropertyAttribute]
public string InvocationId { get; public set; }
    [AWSPropertyAttribute]
public string OwnerInformation { get; public set; }
    [AWSPropertyAttribute]
public string Parameters { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public MaintenanceWindowExecutionStatus Status { get; public set; }
    [AWSPropertyAttribute]
public string StatusDetails { get; public set; }
    [AWSPropertyAttribute]
public string TaskExecutionId { get; public set; }
    public MaintenanceWindowTaskType TaskType { get; public set; }
    [AWSPropertyAttribute]
public string WindowExecutionId { get; public set; }
    [AWSPropertyAttribute]
public string WindowTargetId { get; public set; }
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public string get_ExecutionId();
    public void set_ExecutionId(string value);
    internal bool IsSetExecutionId();
    public string get_InvocationId();
    public void set_InvocationId(string value);
    internal bool IsSetInvocationId();
    public string get_OwnerInformation();
    public void set_OwnerInformation(string value);
    internal bool IsSetOwnerInformation();
    public string get_Parameters();
    public void set_Parameters(string value);
    internal bool IsSetParameters();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public MaintenanceWindowExecutionStatus get_Status();
    public void set_Status(MaintenanceWindowExecutionStatus value);
    internal bool IsSetStatus();
    public string get_StatusDetails();
    public void set_StatusDetails(string value);
    internal bool IsSetStatusDetails();
    public string get_TaskExecutionId();
    public void set_TaskExecutionId(string value);
    internal bool IsSetTaskExecutionId();
    public MaintenanceWindowTaskType get_TaskType();
    public void set_TaskType(MaintenanceWindowTaskType value);
    internal bool IsSetTaskType();
    public string get_WindowExecutionId();
    public void set_WindowExecutionId(string value);
    internal bool IsSetWindowExecutionId();
    public string get_WindowTargetId();
    public void set_WindowTargetId(string value);
    internal bool IsSetWindowTargetId();
}
public class Amazon.SimpleSystemsManagement.Model.MaintenanceWindowFilter : object {
    private string _key;
    private List`1<string> _values;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    public List`1<string> Values { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.SimpleSystemsManagement.Model.MaintenanceWindowIdentity : object {
    private Nullable`1<int> _cutoff;
    private string _description;
    private Nullable`1<int> _duration;
    private Nullable`1<bool> _enabled;
    private string _endDate;
    private string _name;
    private string _nextExecutionTime;
    private string _schedule;
    private Nullable`1<int> _scheduleOffset;
    private string _scheduleTimezone;
    private string _startDate;
    private string _windowId;
    [AWSPropertyAttribute]
public Nullable`1<int> Cutoff { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Duration { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    public string EndDate { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string NextExecutionTime { get; public set; }
    [AWSPropertyAttribute]
public string Schedule { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ScheduleOffset { get; public set; }
    public string ScheduleTimezone { get; public set; }
    public string StartDate { get; public set; }
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    public Nullable`1<int> get_Cutoff();
    public void set_Cutoff(Nullable`1<int> value);
    internal bool IsSetCutoff();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<int> get_Duration();
    public void set_Duration(Nullable`1<int> value);
    internal bool IsSetDuration();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public string get_EndDate();
    public void set_EndDate(string value);
    internal bool IsSetEndDate();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_NextExecutionTime();
    public void set_NextExecutionTime(string value);
    internal bool IsSetNextExecutionTime();
    public string get_Schedule();
    public void set_Schedule(string value);
    internal bool IsSetSchedule();
    public Nullable`1<int> get_ScheduleOffset();
    public void set_ScheduleOffset(Nullable`1<int> value);
    internal bool IsSetScheduleOffset();
    public string get_ScheduleTimezone();
    public void set_ScheduleTimezone(string value);
    internal bool IsSetScheduleTimezone();
    public string get_StartDate();
    public void set_StartDate(string value);
    internal bool IsSetStartDate();
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
}
public class Amazon.SimpleSystemsManagement.Model.MaintenanceWindowIdentityForTarget : object {
    private string _name;
    private string _windowId;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
}
public class Amazon.SimpleSystemsManagement.Model.MaintenanceWindowLambdaParameters : object {
    private string _clientContext;
    private MemoryStream _payload;
    private string _qualifier;
    [AWSPropertyAttribute]
public string ClientContext { get; public set; }
    [AWSPropertyAttribute]
public MemoryStream Payload { get; public set; }
    [AWSPropertyAttribute]
public string Qualifier { get; public set; }
    public string get_ClientContext();
    public void set_ClientContext(string value);
    internal bool IsSetClientContext();
    public MemoryStream get_Payload();
    public void set_Payload(MemoryStream value);
    internal bool IsSetPayload();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
}
public class Amazon.SimpleSystemsManagement.Model.MaintenanceWindowRunCommandParameters : object {
    private CloudWatchOutputConfig _cloudWatchOutputConfig;
    private string _comment;
    private string _documentHash;
    private DocumentHashType _documentHashType;
    private string _documentVersion;
    private NotificationConfig _notificationConfig;
    private string _outputS3BucketName;
    private string _outputS3KeyPrefix;
    private Dictionary`2<string, List`1<string>> _parameters;
    private string _serviceRoleArn;
    private Nullable`1<int> _timeoutSeconds;
    public CloudWatchOutputConfig CloudWatchOutputConfig { get; public set; }
    [AWSPropertyAttribute]
public string Comment { get; public set; }
    [AWSPropertyAttribute]
public string DocumentHash { get; public set; }
    public DocumentHashType DocumentHashType { get; public set; }
    public string DocumentVersion { get; public set; }
    public NotificationConfig NotificationConfig { get; public set; }
    [AWSPropertyAttribute]
public string OutputS3BucketName { get; public set; }
    [AWSPropertyAttribute]
public string OutputS3KeyPrefix { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, List`1<string>> Parameters { get; public set; }
    public string ServiceRoleArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TimeoutSeconds { get; public set; }
    public CloudWatchOutputConfig get_CloudWatchOutputConfig();
    public void set_CloudWatchOutputConfig(CloudWatchOutputConfig value);
    internal bool IsSetCloudWatchOutputConfig();
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public string get_DocumentHash();
    public void set_DocumentHash(string value);
    internal bool IsSetDocumentHash();
    public DocumentHashType get_DocumentHashType();
    public void set_DocumentHashType(DocumentHashType value);
    internal bool IsSetDocumentHashType();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public NotificationConfig get_NotificationConfig();
    public void set_NotificationConfig(NotificationConfig value);
    internal bool IsSetNotificationConfig();
    public string get_OutputS3BucketName();
    public void set_OutputS3BucketName(string value);
    internal bool IsSetOutputS3BucketName();
    public string get_OutputS3KeyPrefix();
    public void set_OutputS3KeyPrefix(string value);
    internal bool IsSetOutputS3KeyPrefix();
    public Dictionary`2<string, List`1<string>> get_Parameters();
    public void set_Parameters(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetParameters();
    public string get_ServiceRoleArn();
    public void set_ServiceRoleArn(string value);
    internal bool IsSetServiceRoleArn();
    public Nullable`1<int> get_TimeoutSeconds();
    public void set_TimeoutSeconds(Nullable`1<int> value);
    internal bool IsSetTimeoutSeconds();
}
public class Amazon.SimpleSystemsManagement.Model.MaintenanceWindowStepFunctionsParameters : object {
    private string _input;
    private string _name;
    [AWSPropertyAttribute]
public string Input { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Input();
    public void set_Input(string value);
    internal bool IsSetInput();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleSystemsManagement.Model.MaintenanceWindowTarget : object {
    private string _description;
    private string _name;
    private string _ownerInformation;
    private MaintenanceWindowResourceType _resourceType;
    private List`1<Target> _targets;
    private string _windowId;
    private string _windowTargetId;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string OwnerInformation { get; public set; }
    public MaintenanceWindowResourceType ResourceType { get; public set; }
    [AWSPropertyAttribute]
public List`1<Target> Targets { get; public set; }
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    [AWSPropertyAttribute]
public string WindowTargetId { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_OwnerInformation();
    public void set_OwnerInformation(string value);
    internal bool IsSetOwnerInformation();
    public MaintenanceWindowResourceType get_ResourceType();
    public void set_ResourceType(MaintenanceWindowResourceType value);
    internal bool IsSetResourceType();
    public List`1<Target> get_Targets();
    public void set_Targets(List`1<Target> value);
    internal bool IsSetTargets();
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
    public string get_WindowTargetId();
    public void set_WindowTargetId(string value);
    internal bool IsSetWindowTargetId();
}
public class Amazon.SimpleSystemsManagement.Model.MaintenanceWindowTask : object {
    private AlarmConfiguration _alarmConfiguration;
    private MaintenanceWindowTaskCutoffBehavior _cutoffBehavior;
    private string _description;
    private LoggingInfo _loggingInfo;
    private string _maxConcurrency;
    private string _maxErrors;
    private string _name;
    private Nullable`1<int> _priority;
    private string _serviceRoleArn;
    private List`1<Target> _targets;
    private string _taskArn;
    private Dictionary`2<string, MaintenanceWindowTaskParameterValueExpression> _taskParameters;
    private MaintenanceWindowTaskType _type;
    private string _windowId;
    private string _windowTaskId;
    public AlarmConfiguration AlarmConfiguration { get; public set; }
    public MaintenanceWindowTaskCutoffBehavior CutoffBehavior { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public LoggingInfo LoggingInfo { get; public set; }
    [AWSPropertyAttribute]
public string MaxConcurrency { get; public set; }
    [AWSPropertyAttribute]
public string MaxErrors { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    public string ServiceRoleArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<Target> Targets { get; public set; }
    [AWSPropertyAttribute]
public string TaskArn { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, MaintenanceWindowTaskParameterValueExpression> TaskParameters { get; public set; }
    public MaintenanceWindowTaskType Type { get; public set; }
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    [AWSPropertyAttribute]
public string WindowTaskId { get; public set; }
    public AlarmConfiguration get_AlarmConfiguration();
    public void set_AlarmConfiguration(AlarmConfiguration value);
    internal bool IsSetAlarmConfiguration();
    public MaintenanceWindowTaskCutoffBehavior get_CutoffBehavior();
    public void set_CutoffBehavior(MaintenanceWindowTaskCutoffBehavior value);
    internal bool IsSetCutoffBehavior();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public LoggingInfo get_LoggingInfo();
    public void set_LoggingInfo(LoggingInfo value);
    internal bool IsSetLoggingInfo();
    public string get_MaxConcurrency();
    public void set_MaxConcurrency(string value);
    internal bool IsSetMaxConcurrency();
    public string get_MaxErrors();
    public void set_MaxErrors(string value);
    internal bool IsSetMaxErrors();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
    public string get_ServiceRoleArn();
    public void set_ServiceRoleArn(string value);
    internal bool IsSetServiceRoleArn();
    public List`1<Target> get_Targets();
    public void set_Targets(List`1<Target> value);
    internal bool IsSetTargets();
    public string get_TaskArn();
    public void set_TaskArn(string value);
    internal bool IsSetTaskArn();
    public Dictionary`2<string, MaintenanceWindowTaskParameterValueExpression> get_TaskParameters();
    public void set_TaskParameters(Dictionary`2<string, MaintenanceWindowTaskParameterValueExpression> value);
    internal bool IsSetTaskParameters();
    public MaintenanceWindowTaskType get_Type();
    public void set_Type(MaintenanceWindowTaskType value);
    internal bool IsSetType();
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
    public string get_WindowTaskId();
    public void set_WindowTaskId(string value);
    internal bool IsSetWindowTaskId();
}
public class Amazon.SimpleSystemsManagement.Model.MaintenanceWindowTaskInvocationParameters : object {
    private MaintenanceWindowAutomationParameters _automation;
    private MaintenanceWindowLambdaParameters _lambda;
    private MaintenanceWindowRunCommandParameters _runCommand;
    private MaintenanceWindowStepFunctionsParameters _stepFunctions;
    public MaintenanceWindowAutomationParameters Automation { get; public set; }
    public MaintenanceWindowLambdaParameters Lambda { get; public set; }
    public MaintenanceWindowRunCommandParameters RunCommand { get; public set; }
    public MaintenanceWindowStepFunctionsParameters StepFunctions { get; public set; }
    public MaintenanceWindowAutomationParameters get_Automation();
    public void set_Automation(MaintenanceWindowAutomationParameters value);
    internal bool IsSetAutomation();
    public MaintenanceWindowLambdaParameters get_Lambda();
    public void set_Lambda(MaintenanceWindowLambdaParameters value);
    internal bool IsSetLambda();
    public MaintenanceWindowRunCommandParameters get_RunCommand();
    public void set_RunCommand(MaintenanceWindowRunCommandParameters value);
    internal bool IsSetRunCommand();
    public MaintenanceWindowStepFunctionsParameters get_StepFunctions();
    public void set_StepFunctions(MaintenanceWindowStepFunctionsParameters value);
    internal bool IsSetStepFunctions();
}
public class Amazon.SimpleSystemsManagement.Model.MaintenanceWindowTaskParameterValueExpression : object {
    private List`1<string> _values;
    [AWSPropertyAttribute]
public List`1<string> Values { get; public set; }
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.SimpleSystemsManagement.Model.MalformedResourcePolicyDocumentException : AmazonSimpleSystemsManagementException {
    public MalformedResourcePolicyDocumentException(string message);
    public MalformedResourcePolicyDocumentException(string message, Exception innerException);
    public MalformedResourcePolicyDocumentException(Exception innerException);
    public MalformedResourcePolicyDocumentException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public MalformedResourcePolicyDocumentException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.MaxDocumentSizeExceededException : AmazonSimpleSystemsManagementException {
    public MaxDocumentSizeExceededException(string message);
    public MaxDocumentSizeExceededException(string message, Exception innerException);
    public MaxDocumentSizeExceededException(Exception innerException);
    public MaxDocumentSizeExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public MaxDocumentSizeExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.MetadataValue : object {
    private string _value;
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.SimpleSystemsManagement.Model.ModifyDocumentPermissionRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<string> _accountIdsToAdd;
    private List`1<string> _accountIdsToRemove;
    private string _name;
    private DocumentPermissionType _permissionType;
    private string _sharedDocumentVersion;
    [AWSPropertyAttribute]
public List`1<string> AccountIdsToAdd { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> AccountIdsToRemove { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public DocumentPermissionType PermissionType { get; public set; }
    [AWSPropertyAttribute]
public string SharedDocumentVersion { get; public set; }
    public List`1<string> get_AccountIdsToAdd();
    public void set_AccountIdsToAdd(List`1<string> value);
    internal bool IsSetAccountIdsToAdd();
    public List`1<string> get_AccountIdsToRemove();
    public void set_AccountIdsToRemove(List`1<string> value);
    internal bool IsSetAccountIdsToRemove();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public DocumentPermissionType get_PermissionType();
    public void set_PermissionType(DocumentPermissionType value);
    internal bool IsSetPermissionType();
    public string get_SharedDocumentVersion();
    public void set_SharedDocumentVersion(string value);
    internal bool IsSetSharedDocumentVersion();
}
public class Amazon.SimpleSystemsManagement.Model.ModifyDocumentPermissionResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleSystemsManagement.Model.NonCompliantSummary : object {
    private Nullable`1<int> _nonCompliantCount;
    private SeveritySummary _severitySummary;
    public Nullable`1<int> NonCompliantCount { get; public set; }
    public SeveritySummary SeveritySummary { get; public set; }
    public Nullable`1<int> get_NonCompliantCount();
    public void set_NonCompliantCount(Nullable`1<int> value);
    internal bool IsSetNonCompliantCount();
    public SeveritySummary get_SeveritySummary();
    public void set_SeveritySummary(SeveritySummary value);
    internal bool IsSetSeveritySummary();
}
public class Amazon.SimpleSystemsManagement.Model.NotificationConfig : object {
    private string _notificationArn;
    private List`1<string> _notificationEvents;
    private NotificationType _notificationType;
    public string NotificationArn { get; public set; }
    public List`1<string> NotificationEvents { get; public set; }
    public NotificationType NotificationType { get; public set; }
    public string get_NotificationArn();
    public void set_NotificationArn(string value);
    internal bool IsSetNotificationArn();
    public List`1<string> get_NotificationEvents();
    public void set_NotificationEvents(List`1<string> value);
    internal bool IsSetNotificationEvents();
    public NotificationType get_NotificationType();
    public void set_NotificationType(NotificationType value);
    internal bool IsSetNotificationType();
}
public class Amazon.SimpleSystemsManagement.Model.OpsAggregator : object {
    private List`1<OpsAggregator> _aggregators;
    private string _aggregatorType;
    private string _attributeName;
    private List`1<OpsFilter> _filters;
    private string _typeName;
    private Dictionary`2<string, string> _values;
    [AWSPropertyAttribute]
public List`1<OpsAggregator> Aggregators { get; public set; }
    [AWSPropertyAttribute]
public string AggregatorType { get; public set; }
    [AWSPropertyAttribute]
public string AttributeName { get; public set; }
    [AWSPropertyAttribute]
public List`1<OpsFilter> Filters { get; public set; }
    [AWSPropertyAttribute]
public string TypeName { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Values { get; public set; }
    public List`1<OpsAggregator> get_Aggregators();
    public void set_Aggregators(List`1<OpsAggregator> value);
    internal bool IsSetAggregators();
    public string get_AggregatorType();
    public void set_AggregatorType(string value);
    internal bool IsSetAggregatorType();
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public List`1<OpsFilter> get_Filters();
    public void set_Filters(List`1<OpsFilter> value);
    internal bool IsSetFilters();
    public string get_TypeName();
    public void set_TypeName(string value);
    internal bool IsSetTypeName();
    public Dictionary`2<string, string> get_Values();
    public void set_Values(Dictionary`2<string, string> value);
    internal bool IsSetValues();
}
public class Amazon.SimpleSystemsManagement.Model.OpsEntity : object {
    private Dictionary`2<string, OpsEntityItem> _data;
    private string _id;
    public Dictionary`2<string, OpsEntityItem> Data { get; public set; }
    public string Id { get; public set; }
    public Dictionary`2<string, OpsEntityItem> get_Data();
    public void set_Data(Dictionary`2<string, OpsEntityItem> value);
    internal bool IsSetData();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.SimpleSystemsManagement.Model.OpsEntityItem : object {
    private string _captureTime;
    private List`1<Dictionary`2<string, string>> _content;
    public string CaptureTime { get; public set; }
    [AWSPropertyAttribute]
public List`1<Dictionary`2<string, string>> Content { get; public set; }
    public string get_CaptureTime();
    public void set_CaptureTime(string value);
    internal bool IsSetCaptureTime();
    public List`1<Dictionary`2<string, string>> get_Content();
    public void set_Content(List`1<Dictionary`2<string, string>> value);
    internal bool IsSetContent();
}
public class Amazon.SimpleSystemsManagement.Model.OpsFilter : object {
    private string _key;
    private OpsFilterOperatorType _type;
    private List`1<string> _values;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    public OpsFilterOperatorType Type { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Values { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public OpsFilterOperatorType get_Type();
    public void set_Type(OpsFilterOperatorType value);
    internal bool IsSetType();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.SimpleSystemsManagement.Model.OpsItem : object {
    private Nullable`1<DateTime> _actualEndTime;
    private Nullable`1<DateTime> _actualStartTime;
    private string _category;
    private string _createdBy;
    private Nullable`1<DateTime> _createdTime;
    private string _description;
    private string _lastModifiedBy;
    private Nullable`1<DateTime> _lastModifiedTime;
    private List`1<OpsItemNotification> _notifications;
    private Dictionary`2<string, OpsItemDataValue> _operationalData;
    private string _opsItemArn;
    private string _opsItemId;
    private string _opsItemType;
    private Nullable`1<DateTime> _plannedEndTime;
    private Nullable`1<DateTime> _plannedStartTime;
    private Nullable`1<int> _priority;
    private List`1<RelatedOpsItem> _relatedOpsItems;
    private string _severity;
    private string _source;
    private OpsItemStatus _status;
    private string _title;
    private string _version;
    public Nullable`1<DateTime> ActualEndTime { get; public set; }
    public Nullable`1<DateTime> ActualStartTime { get; public set; }
    [AWSPropertyAttribute]
public string Category { get; public set; }
    public string CreatedBy { get; public set; }
    public Nullable`1<DateTime> CreatedTime { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public string LastModifiedBy { get; public set; }
    public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    public List`1<OpsItemNotification> Notifications { get; public set; }
    public Dictionary`2<string, OpsItemDataValue> OperationalData { get; public set; }
    [AWSPropertyAttribute]
public string OpsItemArn { get; public set; }
    public string OpsItemId { get; public set; }
    public string OpsItemType { get; public set; }
    public Nullable`1<DateTime> PlannedEndTime { get; public set; }
    public Nullable`1<DateTime> PlannedStartTime { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    public List`1<RelatedOpsItem> RelatedOpsItems { get; public set; }
    [AWSPropertyAttribute]
public string Severity { get; public set; }
    [AWSPropertyAttribute]
public string Source { get; public set; }
    public OpsItemStatus Status { get; public set; }
    [AWSPropertyAttribute]
public string Title { get; public set; }
    public string Version { get; public set; }
    public Nullable`1<DateTime> get_ActualEndTime();
    public void set_ActualEndTime(Nullable`1<DateTime> value);
    internal bool IsSetActualEndTime();
    public Nullable`1<DateTime> get_ActualStartTime();
    public void set_ActualStartTime(Nullable`1<DateTime> value);
    internal bool IsSetActualStartTime();
    public string get_Category();
    public void set_Category(string value);
    internal bool IsSetCategory();
    public string get_CreatedBy();
    public void set_CreatedBy(string value);
    internal bool IsSetCreatedBy();
    public Nullable`1<DateTime> get_CreatedTime();
    public void set_CreatedTime(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTime();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_LastModifiedBy();
    public void set_LastModifiedBy(string value);
    internal bool IsSetLastModifiedBy();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public List`1<OpsItemNotification> get_Notifications();
    public void set_Notifications(List`1<OpsItemNotification> value);
    internal bool IsSetNotifications();
    public Dictionary`2<string, OpsItemDataValue> get_OperationalData();
    public void set_OperationalData(Dictionary`2<string, OpsItemDataValue> value);
    internal bool IsSetOperationalData();
    public string get_OpsItemArn();
    public void set_OpsItemArn(string value);
    internal bool IsSetOpsItemArn();
    public string get_OpsItemId();
    public void set_OpsItemId(string value);
    internal bool IsSetOpsItemId();
    public string get_OpsItemType();
    public void set_OpsItemType(string value);
    internal bool IsSetOpsItemType();
    public Nullable`1<DateTime> get_PlannedEndTime();
    public void set_PlannedEndTime(Nullable`1<DateTime> value);
    internal bool IsSetPlannedEndTime();
    public Nullable`1<DateTime> get_PlannedStartTime();
    public void set_PlannedStartTime(Nullable`1<DateTime> value);
    internal bool IsSetPlannedStartTime();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
    public List`1<RelatedOpsItem> get_RelatedOpsItems();
    public void set_RelatedOpsItems(List`1<RelatedOpsItem> value);
    internal bool IsSetRelatedOpsItems();
    public string get_Severity();
    public void set_Severity(string value);
    internal bool IsSetSeverity();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public OpsItemStatus get_Status();
    public void set_Status(OpsItemStatus value);
    internal bool IsSetStatus();
    public string get_Title();
    public void set_Title(string value);
    internal bool IsSetTitle();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
}
public class Amazon.SimpleSystemsManagement.Model.OpsItemAccessDeniedException : AmazonSimpleSystemsManagementException {
    public OpsItemAccessDeniedException(string message);
    public OpsItemAccessDeniedException(string message, Exception innerException);
    public OpsItemAccessDeniedException(Exception innerException);
    public OpsItemAccessDeniedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OpsItemAccessDeniedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.OpsItemAlreadyExistsException : AmazonSimpleSystemsManagementException {
    private string _opsItemId;
    public string OpsItemId { get; public set; }
    public OpsItemAlreadyExistsException(string message);
    public OpsItemAlreadyExistsException(string message, Exception innerException);
    public OpsItemAlreadyExistsException(Exception innerException);
    public OpsItemAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OpsItemAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_OpsItemId();
    public void set_OpsItemId(string value);
    internal bool IsSetOpsItemId();
}
public class Amazon.SimpleSystemsManagement.Model.OpsItemConflictException : AmazonSimpleSystemsManagementException {
    public OpsItemConflictException(string message);
    public OpsItemConflictException(string message, Exception innerException);
    public OpsItemConflictException(Exception innerException);
    public OpsItemConflictException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OpsItemConflictException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.OpsItemDataValue : object {
    private OpsItemDataType _type;
    private string _value;
    public OpsItemDataType Type { get; public set; }
    public string Value { get; public set; }
    public OpsItemDataType get_Type();
    public void set_Type(OpsItemDataType value);
    internal bool IsSetType();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.SimpleSystemsManagement.Model.OpsItemEventFilter : object {
    private OpsItemEventFilterKey _key;
    private OpsItemEventFilterOperator _operator;
    private List`1<string> _values;
    [AWSPropertyAttribute]
public OpsItemEventFilterKey Key { get; public set; }
    [AWSPropertyAttribute]
public OpsItemEventFilterOperator Operator { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Values { get; public set; }
    public OpsItemEventFilterKey get_Key();
    public void set_Key(OpsItemEventFilterKey value);
    internal bool IsSetKey();
    public OpsItemEventFilterOperator get_Operator();
    public void set_Operator(OpsItemEventFilterOperator value);
    internal bool IsSetOperator();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.SimpleSystemsManagement.Model.OpsItemEventSummary : object {
    private OpsItemIdentity _createdBy;
    private Nullable`1<DateTime> _createdTime;
    private string _detail;
    private string _detailType;
    private string _eventId;
    private string _opsItemId;
    private string _source;
    public OpsItemIdentity CreatedBy { get; public set; }
    public Nullable`1<DateTime> CreatedTime { get; public set; }
    public string Detail { get; public set; }
    public string DetailType { get; public set; }
    public string EventId { get; public set; }
    public string OpsItemId { get; public set; }
    public string Source { get; public set; }
    public OpsItemIdentity get_CreatedBy();
    public void set_CreatedBy(OpsItemIdentity value);
    internal bool IsSetCreatedBy();
    public Nullable`1<DateTime> get_CreatedTime();
    public void set_CreatedTime(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTime();
    public string get_Detail();
    public void set_Detail(string value);
    internal bool IsSetDetail();
    public string get_DetailType();
    public void set_DetailType(string value);
    internal bool IsSetDetailType();
    public string get_EventId();
    public void set_EventId(string value);
    internal bool IsSetEventId();
    public string get_OpsItemId();
    public void set_OpsItemId(string value);
    internal bool IsSetOpsItemId();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
}
public class Amazon.SimpleSystemsManagement.Model.OpsItemFilter : object {
    private OpsItemFilterKey _key;
    private OpsItemFilterOperator _operator;
    private List`1<string> _values;
    [AWSPropertyAttribute]
public OpsItemFilterKey Key { get; public set; }
    [AWSPropertyAttribute]
public OpsItemFilterOperator Operator { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Values { get; public set; }
    public OpsItemFilterKey get_Key();
    public void set_Key(OpsItemFilterKey value);
    internal bool IsSetKey();
    public OpsItemFilterOperator get_Operator();
    public void set_Operator(OpsItemFilterOperator value);
    internal bool IsSetOperator();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.SimpleSystemsManagement.Model.OpsItemIdentity : object {
    private string _arn;
    public string Arn { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
}
public class Amazon.SimpleSystemsManagement.Model.OpsItemInvalidParameterException : AmazonSimpleSystemsManagementException {
    private List`1<string> _parameterNames;
    public List`1<string> ParameterNames { get; public set; }
    public OpsItemInvalidParameterException(string message);
    public OpsItemInvalidParameterException(string message, Exception innerException);
    public OpsItemInvalidParameterException(Exception innerException);
    public OpsItemInvalidParameterException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OpsItemInvalidParameterException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public List`1<string> get_ParameterNames();
    public void set_ParameterNames(List`1<string> value);
    internal bool IsSetParameterNames();
}
public class Amazon.SimpleSystemsManagement.Model.OpsItemLimitExceededException : AmazonSimpleSystemsManagementException {
    private Nullable`1<int> _limit;
    private string _limitType;
    private List`1<string> _resourceTypes;
    public Nullable`1<int> Limit { get; public set; }
    public string LimitType { get; public set; }
    public List`1<string> ResourceTypes { get; public set; }
    public OpsItemLimitExceededException(string message);
    public OpsItemLimitExceededException(string message, Exception innerException);
    public OpsItemLimitExceededException(Exception innerException);
    public OpsItemLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OpsItemLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_LimitType();
    public void set_LimitType(string value);
    internal bool IsSetLimitType();
    public List`1<string> get_ResourceTypes();
    public void set_ResourceTypes(List`1<string> value);
    internal bool IsSetResourceTypes();
}
public class Amazon.SimpleSystemsManagement.Model.OpsItemNotFoundException : AmazonSimpleSystemsManagementException {
    public OpsItemNotFoundException(string message);
    public OpsItemNotFoundException(string message, Exception innerException);
    public OpsItemNotFoundException(Exception innerException);
    public OpsItemNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OpsItemNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.OpsItemNotification : object {
    private string _arn;
    public string Arn { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
}
public class Amazon.SimpleSystemsManagement.Model.OpsItemRelatedItemAlreadyExistsException : AmazonSimpleSystemsManagementException {
    private string _opsItemId;
    private string _resourceUri;
    public string OpsItemId { get; public set; }
    public string ResourceUri { get; public set; }
    public OpsItemRelatedItemAlreadyExistsException(string message);
    public OpsItemRelatedItemAlreadyExistsException(string message, Exception innerException);
    public OpsItemRelatedItemAlreadyExistsException(Exception innerException);
    public OpsItemRelatedItemAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OpsItemRelatedItemAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_OpsItemId();
    public void set_OpsItemId(string value);
    internal bool IsSetOpsItemId();
    public string get_ResourceUri();
    public void set_ResourceUri(string value);
    internal bool IsSetResourceUri();
}
public class Amazon.SimpleSystemsManagement.Model.OpsItemRelatedItemAssociationNotFoundException : AmazonSimpleSystemsManagementException {
    public OpsItemRelatedItemAssociationNotFoundException(string message);
    public OpsItemRelatedItemAssociationNotFoundException(string message, Exception innerException);
    public OpsItemRelatedItemAssociationNotFoundException(Exception innerException);
    public OpsItemRelatedItemAssociationNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OpsItemRelatedItemAssociationNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.OpsItemRelatedItemsFilter : object {
    private OpsItemRelatedItemsFilterKey _key;
    private OpsItemRelatedItemsFilterOperator _operator;
    private List`1<string> _values;
    [AWSPropertyAttribute]
public OpsItemRelatedItemsFilterKey Key { get; public set; }
    [AWSPropertyAttribute]
public OpsItemRelatedItemsFilterOperator Operator { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Values { get; public set; }
    public OpsItemRelatedItemsFilterKey get_Key();
    public void set_Key(OpsItemRelatedItemsFilterKey value);
    internal bool IsSetKey();
    public OpsItemRelatedItemsFilterOperator get_Operator();
    public void set_Operator(OpsItemRelatedItemsFilterOperator value);
    internal bool IsSetOperator();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.SimpleSystemsManagement.Model.OpsItemRelatedItemSummary : object {
    private string _associationId;
    private string _associationType;
    private OpsItemIdentity _createdBy;
    private Nullable`1<DateTime> _createdTime;
    private OpsItemIdentity _lastModifiedBy;
    private Nullable`1<DateTime> _lastModifiedTime;
    private string _opsItemId;
    private string _resourceType;
    private string _resourceUri;
    public string AssociationId { get; public set; }
    public string AssociationType { get; public set; }
    public OpsItemIdentity CreatedBy { get; public set; }
    public Nullable`1<DateTime> CreatedTime { get; public set; }
    public OpsItemIdentity LastModifiedBy { get; public set; }
    public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    public string OpsItemId { get; public set; }
    public string ResourceType { get; public set; }
    public string ResourceUri { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_AssociationType();
    public void set_AssociationType(string value);
    internal bool IsSetAssociationType();
    public OpsItemIdentity get_CreatedBy();
    public void set_CreatedBy(OpsItemIdentity value);
    internal bool IsSetCreatedBy();
    public Nullable`1<DateTime> get_CreatedTime();
    public void set_CreatedTime(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTime();
    public OpsItemIdentity get_LastModifiedBy();
    public void set_LastModifiedBy(OpsItemIdentity value);
    internal bool IsSetLastModifiedBy();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public string get_OpsItemId();
    public void set_OpsItemId(string value);
    internal bool IsSetOpsItemId();
    public string get_ResourceType();
    public void set_ResourceType(string value);
    internal bool IsSetResourceType();
    public string get_ResourceUri();
    public void set_ResourceUri(string value);
    internal bool IsSetResourceUri();
}
public class Amazon.SimpleSystemsManagement.Model.OpsItemSummary : object {
    private Nullable`1<DateTime> _actualEndTime;
    private Nullable`1<DateTime> _actualStartTime;
    private string _category;
    private string _createdBy;
    private Nullable`1<DateTime> _createdTime;
    private string _lastModifiedBy;
    private Nullable`1<DateTime> _lastModifiedTime;
    private Dictionary`2<string, OpsItemDataValue> _operationalData;
    private string _opsItemId;
    private string _opsItemType;
    private Nullable`1<DateTime> _plannedEndTime;
    private Nullable`1<DateTime> _plannedStartTime;
    private Nullable`1<int> _priority;
    private string _severity;
    private string _source;
    private OpsItemStatus _status;
    private string _title;
    public Nullable`1<DateTime> ActualEndTime { get; public set; }
    public Nullable`1<DateTime> ActualStartTime { get; public set; }
    [AWSPropertyAttribute]
public string Category { get; public set; }
    public string CreatedBy { get; public set; }
    public Nullable`1<DateTime> CreatedTime { get; public set; }
    public string LastModifiedBy { get; public set; }
    public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    public Dictionary`2<string, OpsItemDataValue> OperationalData { get; public set; }
    public string OpsItemId { get; public set; }
    public string OpsItemType { get; public set; }
    public Nullable`1<DateTime> PlannedEndTime { get; public set; }
    public Nullable`1<DateTime> PlannedStartTime { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    [AWSPropertyAttribute]
public string Severity { get; public set; }
    [AWSPropertyAttribute]
public string Source { get; public set; }
    public OpsItemStatus Status { get; public set; }
    [AWSPropertyAttribute]
public string Title { get; public set; }
    public Nullable`1<DateTime> get_ActualEndTime();
    public void set_ActualEndTime(Nullable`1<DateTime> value);
    internal bool IsSetActualEndTime();
    public Nullable`1<DateTime> get_ActualStartTime();
    public void set_ActualStartTime(Nullable`1<DateTime> value);
    internal bool IsSetActualStartTime();
    public string get_Category();
    public void set_Category(string value);
    internal bool IsSetCategory();
    public string get_CreatedBy();
    public void set_CreatedBy(string value);
    internal bool IsSetCreatedBy();
    public Nullable`1<DateTime> get_CreatedTime();
    public void set_CreatedTime(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTime();
    public string get_LastModifiedBy();
    public void set_LastModifiedBy(string value);
    internal bool IsSetLastModifiedBy();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public Dictionary`2<string, OpsItemDataValue> get_OperationalData();
    public void set_OperationalData(Dictionary`2<string, OpsItemDataValue> value);
    internal bool IsSetOperationalData();
    public string get_OpsItemId();
    public void set_OpsItemId(string value);
    internal bool IsSetOpsItemId();
    public string get_OpsItemType();
    public void set_OpsItemType(string value);
    internal bool IsSetOpsItemType();
    public Nullable`1<DateTime> get_PlannedEndTime();
    public void set_PlannedEndTime(Nullable`1<DateTime> value);
    internal bool IsSetPlannedEndTime();
    public Nullable`1<DateTime> get_PlannedStartTime();
    public void set_PlannedStartTime(Nullable`1<DateTime> value);
    internal bool IsSetPlannedStartTime();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
    public string get_Severity();
    public void set_Severity(string value);
    internal bool IsSetSeverity();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public OpsItemStatus get_Status();
    public void set_Status(OpsItemStatus value);
    internal bool IsSetStatus();
    public string get_Title();
    public void set_Title(string value);
    internal bool IsSetTitle();
}
public class Amazon.SimpleSystemsManagement.Model.OpsMetadata : object {
    private Nullable`1<DateTime> _creationDate;
    private Nullable`1<DateTime> _lastModifiedDate;
    private string _lastModifiedUser;
    private string _opsMetadataArn;
    private string _resourceId;
    public Nullable`1<DateTime> CreationDate { get; public set; }
    public Nullable`1<DateTime> LastModifiedDate { get; public set; }
    public string LastModifiedUser { get; public set; }
    [AWSPropertyAttribute]
public string OpsMetadataArn { get; public set; }
    [AWSPropertyAttribute]
public string ResourceId { get; public set; }
    public Nullable`1<DateTime> get_CreationDate();
    public void set_CreationDate(Nullable`1<DateTime> value);
    internal bool IsSetCreationDate();
    public Nullable`1<DateTime> get_LastModifiedDate();
    public void set_LastModifiedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedDate();
    public string get_LastModifiedUser();
    public void set_LastModifiedUser(string value);
    internal bool IsSetLastModifiedUser();
    public string get_OpsMetadataArn();
    public void set_OpsMetadataArn(string value);
    internal bool IsSetOpsMetadataArn();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
}
public class Amazon.SimpleSystemsManagement.Model.OpsMetadataAlreadyExistsException : AmazonSimpleSystemsManagementException {
    public OpsMetadataAlreadyExistsException(string message);
    public OpsMetadataAlreadyExistsException(string message, Exception innerException);
    public OpsMetadataAlreadyExistsException(Exception innerException);
    public OpsMetadataAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OpsMetadataAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.OpsMetadataFilter : object {
    private string _key;
    private List`1<string> _values;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Values { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.SimpleSystemsManagement.Model.OpsMetadataInvalidArgumentException : AmazonSimpleSystemsManagementException {
    public OpsMetadataInvalidArgumentException(string message);
    public OpsMetadataInvalidArgumentException(string message, Exception innerException);
    public OpsMetadataInvalidArgumentException(Exception innerException);
    public OpsMetadataInvalidArgumentException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OpsMetadataInvalidArgumentException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.OpsMetadataKeyLimitExceededException : AmazonSimpleSystemsManagementException {
    public OpsMetadataKeyLimitExceededException(string message);
    public OpsMetadataKeyLimitExceededException(string message, Exception innerException);
    public OpsMetadataKeyLimitExceededException(Exception innerException);
    public OpsMetadataKeyLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OpsMetadataKeyLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.OpsMetadataLimitExceededException : AmazonSimpleSystemsManagementException {
    public OpsMetadataLimitExceededException(string message);
    public OpsMetadataLimitExceededException(string message, Exception innerException);
    public OpsMetadataLimitExceededException(Exception innerException);
    public OpsMetadataLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OpsMetadataLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.OpsMetadataNotFoundException : AmazonSimpleSystemsManagementException {
    public OpsMetadataNotFoundException(string message);
    public OpsMetadataNotFoundException(string message, Exception innerException);
    public OpsMetadataNotFoundException(Exception innerException);
    public OpsMetadataNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OpsMetadataNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.OpsMetadataTooManyUpdatesException : AmazonSimpleSystemsManagementException {
    public OpsMetadataTooManyUpdatesException(string message);
    public OpsMetadataTooManyUpdatesException(string message, Exception innerException);
    public OpsMetadataTooManyUpdatesException(Exception innerException);
    public OpsMetadataTooManyUpdatesException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OpsMetadataTooManyUpdatesException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.OpsResultAttribute : object {
    private string _typeName;
    [AWSPropertyAttribute]
public string TypeName { get; public set; }
    public string get_TypeName();
    public void set_TypeName(string value);
    internal bool IsSetTypeName();
}
public class Amazon.SimpleSystemsManagement.Model.OutputSource : object {
    private string _outputSourceId;
    private string _outputSourceType;
    [AWSPropertyAttribute]
public string OutputSourceId { get; public set; }
    public string OutputSourceType { get; public set; }
    public string get_OutputSourceId();
    public void set_OutputSourceId(string value);
    internal bool IsSetOutputSourceId();
    public string get_OutputSourceType();
    public void set_OutputSourceType(string value);
    internal bool IsSetOutputSourceType();
}
public class Amazon.SimpleSystemsManagement.Model.Parameter : object {
    private string _arn;
    private string _dataType;
    private Nullable`1<DateTime> _lastModifiedDate;
    private string _name;
    private string _selector;
    private string _sourceResult;
    private ParameterType _type;
    private string _value;
    private Nullable`1<long> _version;
    public string ARN { get; public set; }
    [AWSPropertyAttribute]
public string DataType { get; public set; }
    public Nullable`1<DateTime> LastModifiedDate { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Selector { get; public set; }
    public string SourceResult { get; public set; }
    public ParameterType Type { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public string get_DataType();
    public void set_DataType(string value);
    internal bool IsSetDataType();
    public Nullable`1<DateTime> get_LastModifiedDate();
    public void set_LastModifiedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedDate();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Selector();
    public void set_Selector(string value);
    internal bool IsSetSelector();
    public string get_SourceResult();
    public void set_SourceResult(string value);
    internal bool IsSetSourceResult();
    public ParameterType get_Type();
    public void set_Type(ParameterType value);
    internal bool IsSetType();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
    public Nullable`1<long> get_Version();
    public void set_Version(Nullable`1<long> value);
    internal bool IsSetVersion();
}
public class Amazon.SimpleSystemsManagement.Model.ParameterAlreadyExistsException : AmazonSimpleSystemsManagementException {
    public ParameterAlreadyExistsException(string message);
    public ParameterAlreadyExistsException(string message, Exception innerException);
    public ParameterAlreadyExistsException(Exception innerException);
    public ParameterAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ParameterAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.ParameterHistory : object {
    private string _allowedPattern;
    private string _dataType;
    private string _description;
    private string _keyId;
    private List`1<string> _labels;
    private Nullable`1<DateTime> _lastModifiedDate;
    private string _lastModifiedUser;
    private string _name;
    private List`1<ParameterInlinePolicy> _policies;
    private ParameterTier _tier;
    private ParameterType _type;
    private string _value;
    private Nullable`1<long> _version;
    [AWSPropertyAttribute]
public string AllowedPattern { get; public set; }
    [AWSPropertyAttribute]
public string DataType { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string KeyId { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Labels { get; public set; }
    public Nullable`1<DateTime> LastModifiedDate { get; public set; }
    public string LastModifiedUser { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<ParameterInlinePolicy> Policies { get; public set; }
    public ParameterTier Tier { get; public set; }
    public ParameterType Type { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public string get_AllowedPattern();
    public void set_AllowedPattern(string value);
    internal bool IsSetAllowedPattern();
    public string get_DataType();
    public void set_DataType(string value);
    internal bool IsSetDataType();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
    public List`1<string> get_Labels();
    public void set_Labels(List`1<string> value);
    internal bool IsSetLabels();
    public Nullable`1<DateTime> get_LastModifiedDate();
    public void set_LastModifiedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedDate();
    public string get_LastModifiedUser();
    public void set_LastModifiedUser(string value);
    internal bool IsSetLastModifiedUser();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<ParameterInlinePolicy> get_Policies();
    public void set_Policies(List`1<ParameterInlinePolicy> value);
    internal bool IsSetPolicies();
    public ParameterTier get_Tier();
    public void set_Tier(ParameterTier value);
    internal bool IsSetTier();
    public ParameterType get_Type();
    public void set_Type(ParameterType value);
    internal bool IsSetType();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
    public Nullable`1<long> get_Version();
    public void set_Version(Nullable`1<long> value);
    internal bool IsSetVersion();
}
public class Amazon.SimpleSystemsManagement.Model.ParameterInlinePolicy : object {
    private string _policyStatus;
    private string _policyText;
    private string _policyType;
    public string PolicyStatus { get; public set; }
    public string PolicyText { get; public set; }
    public string PolicyType { get; public set; }
    public string get_PolicyStatus();
    public void set_PolicyStatus(string value);
    internal bool IsSetPolicyStatus();
    public string get_PolicyText();
    public void set_PolicyText(string value);
    internal bool IsSetPolicyText();
    public string get_PolicyType();
    public void set_PolicyType(string value);
    internal bool IsSetPolicyType();
}
public class Amazon.SimpleSystemsManagement.Model.ParameterLimitExceededException : AmazonSimpleSystemsManagementException {
    public ParameterLimitExceededException(string message);
    public ParameterLimitExceededException(string message, Exception innerException);
    public ParameterLimitExceededException(Exception innerException);
    public ParameterLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ParameterLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.ParameterMaxVersionLimitExceededException : AmazonSimpleSystemsManagementException {
    public ParameterMaxVersionLimitExceededException(string message);
    public ParameterMaxVersionLimitExceededException(string message, Exception innerException);
    public ParameterMaxVersionLimitExceededException(Exception innerException);
    public ParameterMaxVersionLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ParameterMaxVersionLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.ParameterMetadata : object {
    private string _allowedPattern;
    private string _arn;
    private string _dataType;
    private string _description;
    private string _keyId;
    private Nullable`1<DateTime> _lastModifiedDate;
    private string _lastModifiedUser;
    private string _name;
    private List`1<ParameterInlinePolicy> _policies;
    private ParameterTier _tier;
    private ParameterType _type;
    private Nullable`1<long> _version;
    [AWSPropertyAttribute]
public string AllowedPattern { get; public set; }
    public string ARN { get; public set; }
    [AWSPropertyAttribute]
public string DataType { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string KeyId { get; public set; }
    public Nullable`1<DateTime> LastModifiedDate { get; public set; }
    public string LastModifiedUser { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<ParameterInlinePolicy> Policies { get; public set; }
    public ParameterTier Tier { get; public set; }
    public ParameterType Type { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public string get_AllowedPattern();
    public void set_AllowedPattern(string value);
    internal bool IsSetAllowedPattern();
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public string get_DataType();
    public void set_DataType(string value);
    internal bool IsSetDataType();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
    public Nullable`1<DateTime> get_LastModifiedDate();
    public void set_LastModifiedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedDate();
    public string get_LastModifiedUser();
    public void set_LastModifiedUser(string value);
    internal bool IsSetLastModifiedUser();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<ParameterInlinePolicy> get_Policies();
    public void set_Policies(List`1<ParameterInlinePolicy> value);
    internal bool IsSetPolicies();
    public ParameterTier get_Tier();
    public void set_Tier(ParameterTier value);
    internal bool IsSetTier();
    public ParameterType get_Type();
    public void set_Type(ParameterType value);
    internal bool IsSetType();
    public Nullable`1<long> get_Version();
    public void set_Version(Nullable`1<long> value);
    internal bool IsSetVersion();
}
public class Amazon.SimpleSystemsManagement.Model.ParameterNotFoundException : AmazonSimpleSystemsManagementException {
    public ParameterNotFoundException(string message);
    public ParameterNotFoundException(string message, Exception innerException);
    public ParameterNotFoundException(Exception innerException);
    public ParameterNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ParameterNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.ParameterPatternMismatchException : AmazonSimpleSystemsManagementException {
    public ParameterPatternMismatchException(string message);
    public ParameterPatternMismatchException(string message, Exception innerException);
    public ParameterPatternMismatchException(Exception innerException);
    public ParameterPatternMismatchException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ParameterPatternMismatchException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.ParametersFilter : object {
    private ParametersFilterKey _key;
    private List`1<string> _values;
    [AWSPropertyAttribute]
public ParametersFilterKey Key { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Values { get; public set; }
    public ParametersFilterKey get_Key();
    public void set_Key(ParametersFilterKey value);
    internal bool IsSetKey();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.SimpleSystemsManagement.Model.ParameterStringFilter : object {
    private string _key;
    private string _option;
    private List`1<string> _values;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public string Option { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Values { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Option();
    public void set_Option(string value);
    internal bool IsSetOption();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.SimpleSystemsManagement.Model.ParameterVersionLabelLimitExceededException : AmazonSimpleSystemsManagementException {
    public ParameterVersionLabelLimitExceededException(string message);
    public ParameterVersionLabelLimitExceededException(string message, Exception innerException);
    public ParameterVersionLabelLimitExceededException(Exception innerException);
    public ParameterVersionLabelLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ParameterVersionLabelLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.ParameterVersionNotFoundException : AmazonSimpleSystemsManagementException {
    public ParameterVersionNotFoundException(string message);
    public ParameterVersionNotFoundException(string message, Exception innerException);
    public ParameterVersionNotFoundException(Exception innerException);
    public ParameterVersionNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ParameterVersionNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.ParentStepDetails : object {
    private string _action;
    private Nullable`1<int> _iteration;
    private string _iteratorValue;
    private string _stepExecutionId;
    private string _stepName;
    public string Action { get; public set; }
    public Nullable`1<int> Iteration { get; public set; }
    public string IteratorValue { get; public set; }
    public string StepExecutionId { get; public set; }
    public string StepName { get; public set; }
    public string get_Action();
    public void set_Action(string value);
    internal bool IsSetAction();
    public Nullable`1<int> get_Iteration();
    public void set_Iteration(Nullable`1<int> value);
    internal bool IsSetIteration();
    public string get_IteratorValue();
    public void set_IteratorValue(string value);
    internal bool IsSetIteratorValue();
    public string get_StepExecutionId();
    public void set_StepExecutionId(string value);
    internal bool IsSetStepExecutionId();
    public string get_StepName();
    public void set_StepName(string value);
    internal bool IsSetStepName();
}
public class Amazon.SimpleSystemsManagement.Model.Patch : object {
    private List`1<string> _advisoryIds;
    private string _arch;
    private List`1<string> _bugzillaIds;
    private string _classification;
    private string _contentUrl;
    private List`1<string> _cveIds;
    private string _description;
    private Nullable`1<int> _epoch;
    private string _id;
    private string _kbNumber;
    private string _language;
    private string _msrcNumber;
    private string _msrcSeverity;
    private string _name;
    private string _product;
    private string _productFamily;
    private string _release;
    private Nullable`1<DateTime> _releaseDate;
    private string _repository;
    private string _severity;
    private string _title;
    private string _vendor;
    private string _version;
    public List`1<string> AdvisoryIds { get; public set; }
    public string Arch { get; public set; }
    public List`1<string> BugzillaIds { get; public set; }
    public string Classification { get; public set; }
    public string ContentUrl { get; public set; }
    public List`1<string> CVEIds { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<int> Epoch { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string KbNumber { get; public set; }
    public string Language { get; public set; }
    public string MsrcNumber { get; public set; }
    public string MsrcSeverity { get; public set; }
    public string Name { get; public set; }
    public string Product { get; public set; }
    public string ProductFamily { get; public set; }
    public string Release { get; public set; }
    public Nullable`1<DateTime> ReleaseDate { get; public set; }
    public string Repository { get; public set; }
    public string Severity { get; public set; }
    public string Title { get; public set; }
    public string Vendor { get; public set; }
    public string Version { get; public set; }
    public List`1<string> get_AdvisoryIds();
    public void set_AdvisoryIds(List`1<string> value);
    internal bool IsSetAdvisoryIds();
    public string get_Arch();
    public void set_Arch(string value);
    internal bool IsSetArch();
    public List`1<string> get_BugzillaIds();
    public void set_BugzillaIds(List`1<string> value);
    internal bool IsSetBugzillaIds();
    public string get_Classification();
    public void set_Classification(string value);
    internal bool IsSetClassification();
    public string get_ContentUrl();
    public void set_ContentUrl(string value);
    internal bool IsSetContentUrl();
    public List`1<string> get_CVEIds();
    public void set_CVEIds(List`1<string> value);
    internal bool IsSetCVEIds();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<int> get_Epoch();
    public void set_Epoch(Nullable`1<int> value);
    internal bool IsSetEpoch();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_KbNumber();
    public void set_KbNumber(string value);
    internal bool IsSetKbNumber();
    public string get_Language();
    public void set_Language(string value);
    internal bool IsSetLanguage();
    public string get_MsrcNumber();
    public void set_MsrcNumber(string value);
    internal bool IsSetMsrcNumber();
    public string get_MsrcSeverity();
    public void set_MsrcSeverity(string value);
    internal bool IsSetMsrcSeverity();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Product();
    public void set_Product(string value);
    internal bool IsSetProduct();
    public string get_ProductFamily();
    public void set_ProductFamily(string value);
    internal bool IsSetProductFamily();
    public string get_Release();
    public void set_Release(string value);
    internal bool IsSetRelease();
    public Nullable`1<DateTime> get_ReleaseDate();
    public void set_ReleaseDate(Nullable`1<DateTime> value);
    internal bool IsSetReleaseDate();
    public string get_Repository();
    public void set_Repository(string value);
    internal bool IsSetRepository();
    public string get_Severity();
    public void set_Severity(string value);
    internal bool IsSetSeverity();
    public string get_Title();
    public void set_Title(string value);
    internal bool IsSetTitle();
    public string get_Vendor();
    public void set_Vendor(string value);
    internal bool IsSetVendor();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
}
public class Amazon.SimpleSystemsManagement.Model.PatchBaselineIdentity : object {
    private string _baselineDescription;
    private string _baselineId;
    private string _baselineName;
    private Nullable`1<bool> _defaultBaseline;
    private OperatingSystem _operatingSystem;
    [AWSPropertyAttribute]
public string BaselineDescription { get; public set; }
    [AWSPropertyAttribute]
public string BaselineId { get; public set; }
    [AWSPropertyAttribute]
public string BaselineName { get; public set; }
    public Nullable`1<bool> DefaultBaseline { get; public set; }
    public OperatingSystem OperatingSystem { get; public set; }
    public string get_BaselineDescription();
    public void set_BaselineDescription(string value);
    internal bool IsSetBaselineDescription();
    public string get_BaselineId();
    public void set_BaselineId(string value);
    internal bool IsSetBaselineId();
    public string get_BaselineName();
    public void set_BaselineName(string value);
    internal bool IsSetBaselineName();
    public Nullable`1<bool> get_DefaultBaseline();
    public void set_DefaultBaseline(Nullable`1<bool> value);
    internal bool IsSetDefaultBaseline();
    public OperatingSystem get_OperatingSystem();
    public void set_OperatingSystem(OperatingSystem value);
    internal bool IsSetOperatingSystem();
}
public class Amazon.SimpleSystemsManagement.Model.PatchComplianceData : object {
    private string _classification;
    private string _cveIds;
    private Nullable`1<DateTime> _installedTime;
    private string _kbId;
    private string _severity;
    private PatchComplianceDataState _state;
    private string _title;
    [AWSPropertyAttribute]
public string Classification { get; public set; }
    public string CVEIds { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> InstalledTime { get; public set; }
    [AWSPropertyAttribute]
public string KBId { get; public set; }
    [AWSPropertyAttribute]
public string Severity { get; public set; }
    [AWSPropertyAttribute]
public PatchComplianceDataState State { get; public set; }
    [AWSPropertyAttribute]
public string Title { get; public set; }
    public string get_Classification();
    public void set_Classification(string value);
    internal bool IsSetClassification();
    public string get_CVEIds();
    public void set_CVEIds(string value);
    internal bool IsSetCVEIds();
    public Nullable`1<DateTime> get_InstalledTime();
    public void set_InstalledTime(Nullable`1<DateTime> value);
    internal bool IsSetInstalledTime();
    public string get_KBId();
    public void set_KBId(string value);
    internal bool IsSetKBId();
    public string get_Severity();
    public void set_Severity(string value);
    internal bool IsSetSeverity();
    public PatchComplianceDataState get_State();
    public void set_State(PatchComplianceDataState value);
    internal bool IsSetState();
    public string get_Title();
    public void set_Title(string value);
    internal bool IsSetTitle();
}
public class Amazon.SimpleSystemsManagement.Model.PatchFilter : object {
    private PatchFilterKey _key;
    private List`1<string> _values;
    [AWSPropertyAttribute]
public PatchFilterKey Key { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Values { get; public set; }
    public PatchFilterKey get_Key();
    public void set_Key(PatchFilterKey value);
    internal bool IsSetKey();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.SimpleSystemsManagement.Model.PatchFilterGroup : object {
    private List`1<PatchFilter> _patchFilters;
    [AWSPropertyAttribute]
public List`1<PatchFilter> PatchFilters { get; public set; }
    public List`1<PatchFilter> get_PatchFilters();
    public void set_PatchFilters(List`1<PatchFilter> value);
    internal bool IsSetPatchFilters();
}
public class Amazon.SimpleSystemsManagement.Model.PatchGroupPatchBaselineMapping : object {
    private PatchBaselineIdentity _baselineIdentity;
    private string _patchGroup;
    public PatchBaselineIdentity BaselineIdentity { get; public set; }
    [AWSPropertyAttribute]
public string PatchGroup { get; public set; }
    public PatchBaselineIdentity get_BaselineIdentity();
    public void set_BaselineIdentity(PatchBaselineIdentity value);
    internal bool IsSetBaselineIdentity();
    public string get_PatchGroup();
    public void set_PatchGroup(string value);
    internal bool IsSetPatchGroup();
}
public class Amazon.SimpleSystemsManagement.Model.PatchOrchestratorFilter : object {
    private string _key;
    private List`1<string> _values;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    public List`1<string> Values { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.SimpleSystemsManagement.Model.PatchRule : object {
    private Nullable`1<int> _approveAfterDays;
    private string _approveUntilDate;
    private PatchComplianceLevel _complianceLevel;
    private Nullable`1<bool> _enableNonSecurity;
    private PatchFilterGroup _patchFilterGroup;
    [AWSPropertyAttribute]
public Nullable`1<int> ApproveAfterDays { get; public set; }
    [AWSPropertyAttribute]
public string ApproveUntilDate { get; public set; }
    public PatchComplianceLevel ComplianceLevel { get; public set; }
    public Nullable`1<bool> EnableNonSecurity { get; public set; }
    [AWSPropertyAttribute]
public PatchFilterGroup PatchFilterGroup { get; public set; }
    public Nullable`1<int> get_ApproveAfterDays();
    public void set_ApproveAfterDays(Nullable`1<int> value);
    internal bool IsSetApproveAfterDays();
    public string get_ApproveUntilDate();
    public void set_ApproveUntilDate(string value);
    internal bool IsSetApproveUntilDate();
    public PatchComplianceLevel get_ComplianceLevel();
    public void set_ComplianceLevel(PatchComplianceLevel value);
    internal bool IsSetComplianceLevel();
    public Nullable`1<bool> get_EnableNonSecurity();
    public void set_EnableNonSecurity(Nullable`1<bool> value);
    internal bool IsSetEnableNonSecurity();
    public PatchFilterGroup get_PatchFilterGroup();
    public void set_PatchFilterGroup(PatchFilterGroup value);
    internal bool IsSetPatchFilterGroup();
}
public class Amazon.SimpleSystemsManagement.Model.PatchRuleGroup : object {
    private List`1<PatchRule> _patchRules;
    [AWSPropertyAttribute]
public List`1<PatchRule> PatchRules { get; public set; }
    public List`1<PatchRule> get_PatchRules();
    public void set_PatchRules(List`1<PatchRule> value);
    internal bool IsSetPatchRules();
}
public class Amazon.SimpleSystemsManagement.Model.PatchSource : object {
    private string _configuration;
    private string _name;
    private List`1<string> _products;
    [AWSPropertyAttribute]
public string Configuration { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Products { get; public set; }
    public string get_Configuration();
    public void set_Configuration(string value);
    internal bool IsSetConfiguration();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_Products();
    public void set_Products(List`1<string> value);
    internal bool IsSetProducts();
}
public class Amazon.SimpleSystemsManagement.Model.PatchStatus : object {
    private Nullable`1<DateTime> _approvalDate;
    private PatchComplianceLevel _complianceLevel;
    private PatchDeploymentStatus _deploymentStatus;
    public Nullable`1<DateTime> ApprovalDate { get; public set; }
    public PatchComplianceLevel ComplianceLevel { get; public set; }
    public PatchDeploymentStatus DeploymentStatus { get; public set; }
    public Nullable`1<DateTime> get_ApprovalDate();
    public void set_ApprovalDate(Nullable`1<DateTime> value);
    internal bool IsSetApprovalDate();
    public PatchComplianceLevel get_ComplianceLevel();
    public void set_ComplianceLevel(PatchComplianceLevel value);
    internal bool IsSetComplianceLevel();
    public PatchDeploymentStatus get_DeploymentStatus();
    public void set_DeploymentStatus(PatchDeploymentStatus value);
    internal bool IsSetDeploymentStatus();
}
public class Amazon.SimpleSystemsManagement.Model.PoliciesLimitExceededException : AmazonSimpleSystemsManagementException {
    public PoliciesLimitExceededException(string message);
    public PoliciesLimitExceededException(string message, Exception innerException);
    public PoliciesLimitExceededException(Exception innerException);
    public PoliciesLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PoliciesLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.ProgressCounters : object {
    private Nullable`1<int> _cancelledSteps;
    private Nullable`1<int> _failedSteps;
    private Nullable`1<int> _successSteps;
    private Nullable`1<int> _timedOutSteps;
    private Nullable`1<int> _totalSteps;
    public Nullable`1<int> CancelledSteps { get; public set; }
    public Nullable`1<int> FailedSteps { get; public set; }
    public Nullable`1<int> SuccessSteps { get; public set; }
    public Nullable`1<int> TimedOutSteps { get; public set; }
    public Nullable`1<int> TotalSteps { get; public set; }
    public Nullable`1<int> get_CancelledSteps();
    public void set_CancelledSteps(Nullable`1<int> value);
    internal bool IsSetCancelledSteps();
    public Nullable`1<int> get_FailedSteps();
    public void set_FailedSteps(Nullable`1<int> value);
    internal bool IsSetFailedSteps();
    public Nullable`1<int> get_SuccessSteps();
    public void set_SuccessSteps(Nullable`1<int> value);
    internal bool IsSetSuccessSteps();
    public Nullable`1<int> get_TimedOutSteps();
    public void set_TimedOutSteps(Nullable`1<int> value);
    internal bool IsSetTimedOutSteps();
    public Nullable`1<int> get_TotalSteps();
    public void set_TotalSteps(Nullable`1<int> value);
    internal bool IsSetTotalSteps();
}
public class Amazon.SimpleSystemsManagement.Model.PutComplianceItemsRequest : AmazonSimpleSystemsManagementRequest {
    private string _complianceType;
    private ComplianceExecutionSummary _executionSummary;
    private string _itemContentHash;
    private List`1<ComplianceItemEntry> _items;
    private string _resourceId;
    private string _resourceType;
    private ComplianceUploadType _uploadType;
    [AWSPropertyAttribute]
public string ComplianceType { get; public set; }
    [AWSPropertyAttribute]
public ComplianceExecutionSummary ExecutionSummary { get; public set; }
    [AWSPropertyAttribute]
public string ItemContentHash { get; public set; }
    [AWSPropertyAttribute]
public List`1<ComplianceItemEntry> Items { get; public set; }
    [AWSPropertyAttribute]
public string ResourceId { get; public set; }
    [AWSPropertyAttribute]
public string ResourceType { get; public set; }
    public ComplianceUploadType UploadType { get; public set; }
    public string get_ComplianceType();
    public void set_ComplianceType(string value);
    internal bool IsSetComplianceType();
    public ComplianceExecutionSummary get_ExecutionSummary();
    public void set_ExecutionSummary(ComplianceExecutionSummary value);
    internal bool IsSetExecutionSummary();
    public string get_ItemContentHash();
    public void set_ItemContentHash(string value);
    internal bool IsSetItemContentHash();
    public List`1<ComplianceItemEntry> get_Items();
    public void set_Items(List`1<ComplianceItemEntry> value);
    internal bool IsSetItems();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public string get_ResourceType();
    public void set_ResourceType(string value);
    internal bool IsSetResourceType();
    public ComplianceUploadType get_UploadType();
    public void set_UploadType(ComplianceUploadType value);
    internal bool IsSetUploadType();
}
public class Amazon.SimpleSystemsManagement.Model.PutComplianceItemsResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleSystemsManagement.Model.PutInventoryRequest : AmazonSimpleSystemsManagementRequest {
    private string _instanceId;
    private List`1<InventoryItem> _items;
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public List`1<InventoryItem> Items { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public List`1<InventoryItem> get_Items();
    public void set_Items(List`1<InventoryItem> value);
    internal bool IsSetItems();
}
public class Amazon.SimpleSystemsManagement.Model.PutInventoryResponse : AmazonWebServiceResponse {
    private string _message;
    public string Message { get; public set; }
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.SimpleSystemsManagement.Model.PutParameterRequest : AmazonSimpleSystemsManagementRequest {
    private string _allowedPattern;
    private string _dataType;
    private string _description;
    private string _keyId;
    private string _name;
    private Nullable`1<bool> _overwrite;
    private string _policies;
    private List`1<Tag> _tags;
    private ParameterTier _tier;
    private ParameterType _type;
    private string _value;
    [AWSPropertyAttribute]
public string AllowedPattern { get; public set; }
    [AWSPropertyAttribute]
public string DataType { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string KeyId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<bool> Overwrite { get; public set; }
    [AWSPropertyAttribute]
public string Policies { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public ParameterTier Tier { get; public set; }
    public ParameterType Type { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_AllowedPattern();
    public void set_AllowedPattern(string value);
    internal bool IsSetAllowedPattern();
    public string get_DataType();
    public void set_DataType(string value);
    internal bool IsSetDataType();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<bool> get_Overwrite();
    public void set_Overwrite(Nullable`1<bool> value);
    internal bool IsSetOverwrite();
    public string get_Policies();
    public void set_Policies(string value);
    internal bool IsSetPolicies();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public ParameterTier get_Tier();
    public void set_Tier(ParameterTier value);
    internal bool IsSetTier();
    public ParameterType get_Type();
    public void set_Type(ParameterType value);
    internal bool IsSetType();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.SimpleSystemsManagement.Model.PutParameterResponse : AmazonWebServiceResponse {
    private ParameterTier _tier;
    private Nullable`1<long> _version;
    public ParameterTier Tier { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public ParameterTier get_Tier();
    public void set_Tier(ParameterTier value);
    internal bool IsSetTier();
    public Nullable`1<long> get_Version();
    public void set_Version(Nullable`1<long> value);
    internal bool IsSetVersion();
}
public class Amazon.SimpleSystemsManagement.Model.PutResourcePolicyRequest : AmazonSimpleSystemsManagementRequest {
    private string _policy;
    private string _policyHash;
    private string _policyId;
    private string _resourceArn;
    [AWSPropertyAttribute]
public string Policy { get; public set; }
    public string PolicyHash { get; public set; }
    public string PolicyId { get; public set; }
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
    public string get_PolicyHash();
    public void set_PolicyHash(string value);
    internal bool IsSetPolicyHash();
    public string get_PolicyId();
    public void set_PolicyId(string value);
    internal bool IsSetPolicyId();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.SimpleSystemsManagement.Model.PutResourcePolicyResponse : AmazonWebServiceResponse {
    private string _policyHash;
    private string _policyId;
    public string PolicyHash { get; public set; }
    public string PolicyId { get; public set; }
    public string get_PolicyHash();
    public void set_PolicyHash(string value);
    internal bool IsSetPolicyHash();
    public string get_PolicyId();
    public void set_PolicyId(string value);
    internal bool IsSetPolicyId();
}
public class Amazon.SimpleSystemsManagement.Model.RegisterDefaultPatchBaselineRequest : AmazonSimpleSystemsManagementRequest {
    private string _baselineId;
    [AWSPropertyAttribute]
public string BaselineId { get; public set; }
    public string get_BaselineId();
    public void set_BaselineId(string value);
    internal bool IsSetBaselineId();
}
public class Amazon.SimpleSystemsManagement.Model.RegisterDefaultPatchBaselineResponse : AmazonWebServiceResponse {
    private string _baselineId;
    [AWSPropertyAttribute]
public string BaselineId { get; public set; }
    public string get_BaselineId();
    public void set_BaselineId(string value);
    internal bool IsSetBaselineId();
}
public class Amazon.SimpleSystemsManagement.Model.RegisterPatchBaselineForPatchGroupRequest : AmazonSimpleSystemsManagementRequest {
    private string _baselineId;
    private string _patchGroup;
    [AWSPropertyAttribute]
public string BaselineId { get; public set; }
    [AWSPropertyAttribute]
public string PatchGroup { get; public set; }
    public string get_BaselineId();
    public void set_BaselineId(string value);
    internal bool IsSetBaselineId();
    public string get_PatchGroup();
    public void set_PatchGroup(string value);
    internal bool IsSetPatchGroup();
}
public class Amazon.SimpleSystemsManagement.Model.RegisterPatchBaselineForPatchGroupResponse : AmazonWebServiceResponse {
    private string _baselineId;
    private string _patchGroup;
    [AWSPropertyAttribute]
public string BaselineId { get; public set; }
    [AWSPropertyAttribute]
public string PatchGroup { get; public set; }
    public string get_BaselineId();
    public void set_BaselineId(string value);
    internal bool IsSetBaselineId();
    public string get_PatchGroup();
    public void set_PatchGroup(string value);
    internal bool IsSetPatchGroup();
}
public class Amazon.SimpleSystemsManagement.Model.RegisterTargetWithMaintenanceWindowRequest : AmazonSimpleSystemsManagementRequest {
    private string _clientToken;
    private string _description;
    private string _name;
    private string _ownerInformation;
    private MaintenanceWindowResourceType _resourceType;
    private List`1<Target> _targets;
    private string _windowId;
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string OwnerInformation { get; public set; }
    [AWSPropertyAttribute]
public MaintenanceWindowResourceType ResourceType { get; public set; }
    [AWSPropertyAttribute]
public List`1<Target> Targets { get; public set; }
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_OwnerInformation();
    public void set_OwnerInformation(string value);
    internal bool IsSetOwnerInformation();
    public MaintenanceWindowResourceType get_ResourceType();
    public void set_ResourceType(MaintenanceWindowResourceType value);
    internal bool IsSetResourceType();
    public List`1<Target> get_Targets();
    public void set_Targets(List`1<Target> value);
    internal bool IsSetTargets();
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
}
public class Amazon.SimpleSystemsManagement.Model.RegisterTargetWithMaintenanceWindowResponse : AmazonWebServiceResponse {
    private string _windowTargetId;
    [AWSPropertyAttribute]
public string WindowTargetId { get; public set; }
    public string get_WindowTargetId();
    public void set_WindowTargetId(string value);
    internal bool IsSetWindowTargetId();
}
public class Amazon.SimpleSystemsManagement.Model.RegisterTaskWithMaintenanceWindowRequest : AmazonSimpleSystemsManagementRequest {
    private AlarmConfiguration _alarmConfiguration;
    private string _clientToken;
    private MaintenanceWindowTaskCutoffBehavior _cutoffBehavior;
    private string _description;
    private LoggingInfo _loggingInfo;
    private string _maxConcurrency;
    private string _maxErrors;
    private string _name;
    private Nullable`1<int> _priority;
    private string _serviceRoleArn;
    private List`1<Target> _targets;
    private string _taskArn;
    private MaintenanceWindowTaskInvocationParameters _taskInvocationParameters;
    private Dictionary`2<string, MaintenanceWindowTaskParameterValueExpression> _taskParameters;
    private MaintenanceWindowTaskType _taskType;
    private string _windowId;
    public AlarmConfiguration AlarmConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    public MaintenanceWindowTaskCutoffBehavior CutoffBehavior { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public LoggingInfo LoggingInfo { get; public set; }
    [AWSPropertyAttribute]
public string MaxConcurrency { get; public set; }
    [AWSPropertyAttribute]
public string MaxErrors { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    public string ServiceRoleArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<Target> Targets { get; public set; }
    [AWSPropertyAttribute]
public string TaskArn { get; public set; }
    public MaintenanceWindowTaskInvocationParameters TaskInvocationParameters { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, MaintenanceWindowTaskParameterValueExpression> TaskParameters { get; public set; }
    [AWSPropertyAttribute]
public MaintenanceWindowTaskType TaskType { get; public set; }
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    public AlarmConfiguration get_AlarmConfiguration();
    public void set_AlarmConfiguration(AlarmConfiguration value);
    internal bool IsSetAlarmConfiguration();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public MaintenanceWindowTaskCutoffBehavior get_CutoffBehavior();
    public void set_CutoffBehavior(MaintenanceWindowTaskCutoffBehavior value);
    internal bool IsSetCutoffBehavior();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public LoggingInfo get_LoggingInfo();
    public void set_LoggingInfo(LoggingInfo value);
    internal bool IsSetLoggingInfo();
    public string get_MaxConcurrency();
    public void set_MaxConcurrency(string value);
    internal bool IsSetMaxConcurrency();
    public string get_MaxErrors();
    public void set_MaxErrors(string value);
    internal bool IsSetMaxErrors();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
    public string get_ServiceRoleArn();
    public void set_ServiceRoleArn(string value);
    internal bool IsSetServiceRoleArn();
    public List`1<Target> get_Targets();
    public void set_Targets(List`1<Target> value);
    internal bool IsSetTargets();
    public string get_TaskArn();
    public void set_TaskArn(string value);
    internal bool IsSetTaskArn();
    public MaintenanceWindowTaskInvocationParameters get_TaskInvocationParameters();
    public void set_TaskInvocationParameters(MaintenanceWindowTaskInvocationParameters value);
    internal bool IsSetTaskInvocationParameters();
    public Dictionary`2<string, MaintenanceWindowTaskParameterValueExpression> get_TaskParameters();
    public void set_TaskParameters(Dictionary`2<string, MaintenanceWindowTaskParameterValueExpression> value);
    internal bool IsSetTaskParameters();
    public MaintenanceWindowTaskType get_TaskType();
    public void set_TaskType(MaintenanceWindowTaskType value);
    internal bool IsSetTaskType();
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
}
public class Amazon.SimpleSystemsManagement.Model.RegisterTaskWithMaintenanceWindowResponse : AmazonWebServiceResponse {
    private string _windowTaskId;
    [AWSPropertyAttribute]
public string WindowTaskId { get; public set; }
    public string get_WindowTaskId();
    public void set_WindowTaskId(string value);
    internal bool IsSetWindowTaskId();
}
public class Amazon.SimpleSystemsManagement.Model.RegistrationMetadataItem : object {
    private string _key;
    private string _value;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.SimpleSystemsManagement.Model.RelatedOpsItem : object {
    private string _opsItemId;
    [AWSPropertyAttribute]
public string OpsItemId { get; public set; }
    public string get_OpsItemId();
    public void set_OpsItemId(string value);
    internal bool IsSetOpsItemId();
}
public class Amazon.SimpleSystemsManagement.Model.RemoveTagsFromResourceRequest : AmazonSimpleSystemsManagementRequest {
    private string _resourceId;
    private ResourceTypeForTagging _resourceType;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string ResourceId { get; public set; }
    [AWSPropertyAttribute]
public ResourceTypeForTagging ResourceType { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public ResourceTypeForTagging get_ResourceType();
    public void set_ResourceType(ResourceTypeForTagging value);
    internal bool IsSetResourceType();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.SimpleSystemsManagement.Model.RemoveTagsFromResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleSystemsManagement.Model.ResetServiceSettingRequest : AmazonSimpleSystemsManagementRequest {
    private string _settingId;
    [AWSPropertyAttribute]
public string SettingId { get; public set; }
    public string get_SettingId();
    public void set_SettingId(string value);
    internal bool IsSetSettingId();
}
public class Amazon.SimpleSystemsManagement.Model.ResetServiceSettingResponse : AmazonWebServiceResponse {
    private ServiceSetting _serviceSetting;
    public ServiceSetting ServiceSetting { get; public set; }
    public ServiceSetting get_ServiceSetting();
    public void set_ServiceSetting(ServiceSetting value);
    internal bool IsSetServiceSetting();
}
public class Amazon.SimpleSystemsManagement.Model.ResolvedTargets : object {
    private List`1<string> _parameterValues;
    private Nullable`1<bool> _truncated;
    public List`1<string> ParameterValues { get; public set; }
    public Nullable`1<bool> Truncated { get; public set; }
    public List`1<string> get_ParameterValues();
    public void set_ParameterValues(List`1<string> value);
    internal bool IsSetParameterValues();
    public Nullable`1<bool> get_Truncated();
    public void set_Truncated(Nullable`1<bool> value);
    internal bool IsSetTruncated();
}
public class Amazon.SimpleSystemsManagement.Model.ResourceComplianceSummaryItem : object {
    private string _complianceType;
    private CompliantSummary _compliantSummary;
    private ComplianceExecutionSummary _executionSummary;
    private NonCompliantSummary _nonCompliantSummary;
    private ComplianceSeverity _overallSeverity;
    private string _resourceId;
    private string _resourceType;
    private ComplianceStatus _status;
    [AWSPropertyAttribute]
public string ComplianceType { get; public set; }
    public CompliantSummary CompliantSummary { get; public set; }
    public ComplianceExecutionSummary ExecutionSummary { get; public set; }
    public NonCompliantSummary NonCompliantSummary { get; public set; }
    public ComplianceSeverity OverallSeverity { get; public set; }
    [AWSPropertyAttribute]
public string ResourceId { get; public set; }
    [AWSPropertyAttribute]
public string ResourceType { get; public set; }
    public ComplianceStatus Status { get; public set; }
    public string get_ComplianceType();
    public void set_ComplianceType(string value);
    internal bool IsSetComplianceType();
    public CompliantSummary get_CompliantSummary();
    public void set_CompliantSummary(CompliantSummary value);
    internal bool IsSetCompliantSummary();
    public ComplianceExecutionSummary get_ExecutionSummary();
    public void set_ExecutionSummary(ComplianceExecutionSummary value);
    internal bool IsSetExecutionSummary();
    public NonCompliantSummary get_NonCompliantSummary();
    public void set_NonCompliantSummary(NonCompliantSummary value);
    internal bool IsSetNonCompliantSummary();
    public ComplianceSeverity get_OverallSeverity();
    public void set_OverallSeverity(ComplianceSeverity value);
    internal bool IsSetOverallSeverity();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public string get_ResourceType();
    public void set_ResourceType(string value);
    internal bool IsSetResourceType();
    public ComplianceStatus get_Status();
    public void set_Status(ComplianceStatus value);
    internal bool IsSetStatus();
}
public class Amazon.SimpleSystemsManagement.Model.ResourceDataSyncAlreadyExistsException : AmazonSimpleSystemsManagementException {
    private string _syncName;
    [AWSPropertyAttribute]
public string SyncName { get; public set; }
    public ResourceDataSyncAlreadyExistsException(string message);
    public ResourceDataSyncAlreadyExistsException(string message, Exception innerException);
    public ResourceDataSyncAlreadyExistsException(Exception innerException);
    public ResourceDataSyncAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceDataSyncAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_SyncName();
    public void set_SyncName(string value);
    internal bool IsSetSyncName();
}
public class Amazon.SimpleSystemsManagement.Model.ResourceDataSyncAwsOrganizationsSource : object {
    private List`1<ResourceDataSyncOrganizationalUnit> _organizationalUnits;
    private string _organizationSourceType;
    [AWSPropertyAttribute]
public List`1<ResourceDataSyncOrganizationalUnit> OrganizationalUnits { get; public set; }
    [AWSPropertyAttribute]
public string OrganizationSourceType { get; public set; }
    public List`1<ResourceDataSyncOrganizationalUnit> get_OrganizationalUnits();
    public void set_OrganizationalUnits(List`1<ResourceDataSyncOrganizationalUnit> value);
    internal bool IsSetOrganizationalUnits();
    public string get_OrganizationSourceType();
    public void set_OrganizationSourceType(string value);
    internal bool IsSetOrganizationSourceType();
}
public class Amazon.SimpleSystemsManagement.Model.ResourceDataSyncConflictException : AmazonSimpleSystemsManagementException {
    public ResourceDataSyncConflictException(string message);
    public ResourceDataSyncConflictException(string message, Exception innerException);
    public ResourceDataSyncConflictException(Exception innerException);
    public ResourceDataSyncConflictException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceDataSyncConflictException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.ResourceDataSyncCountExceededException : AmazonSimpleSystemsManagementException {
    public ResourceDataSyncCountExceededException(string message);
    public ResourceDataSyncCountExceededException(string message, Exception innerException);
    public ResourceDataSyncCountExceededException(Exception innerException);
    public ResourceDataSyncCountExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceDataSyncCountExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.ResourceDataSyncDestinationDataSharing : object {
    private string _destinationDataSharingType;
    [AWSPropertyAttribute]
public string DestinationDataSharingType { get; public set; }
    public string get_DestinationDataSharingType();
    public void set_DestinationDataSharingType(string value);
    internal bool IsSetDestinationDataSharingType();
}
public class Amazon.SimpleSystemsManagement.Model.ResourceDataSyncInvalidConfigurationException : AmazonSimpleSystemsManagementException {
    public ResourceDataSyncInvalidConfigurationException(string message);
    public ResourceDataSyncInvalidConfigurationException(string message, Exception innerException);
    public ResourceDataSyncInvalidConfigurationException(Exception innerException);
    public ResourceDataSyncInvalidConfigurationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceDataSyncInvalidConfigurationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.ResourceDataSyncItem : object {
    private LastResourceDataSyncStatus _lastStatus;
    private Nullable`1<DateTime> _lastSuccessfulSyncTime;
    private string _lastSyncStatusMessage;
    private Nullable`1<DateTime> _lastSyncTime;
    private ResourceDataSyncS3Destination _s3Destination;
    private Nullable`1<DateTime> _syncCreatedTime;
    private Nullable`1<DateTime> _syncLastModifiedTime;
    private string _syncName;
    private ResourceDataSyncSourceWithState _syncSource;
    private string _syncType;
    public LastResourceDataSyncStatus LastStatus { get; public set; }
    public Nullable`1<DateTime> LastSuccessfulSyncTime { get; public set; }
    public string LastSyncStatusMessage { get; public set; }
    public Nullable`1<DateTime> LastSyncTime { get; public set; }
    public ResourceDataSyncS3Destination S3Destination { get; public set; }
    public Nullable`1<DateTime> SyncCreatedTime { get; public set; }
    public Nullable`1<DateTime> SyncLastModifiedTime { get; public set; }
    [AWSPropertyAttribute]
public string SyncName { get; public set; }
    public ResourceDataSyncSourceWithState SyncSource { get; public set; }
    [AWSPropertyAttribute]
public string SyncType { get; public set; }
    public LastResourceDataSyncStatus get_LastStatus();
    public void set_LastStatus(LastResourceDataSyncStatus value);
    internal bool IsSetLastStatus();
    public Nullable`1<DateTime> get_LastSuccessfulSyncTime();
    public void set_LastSuccessfulSyncTime(Nullable`1<DateTime> value);
    internal bool IsSetLastSuccessfulSyncTime();
    public string get_LastSyncStatusMessage();
    public void set_LastSyncStatusMessage(string value);
    internal bool IsSetLastSyncStatusMessage();
    public Nullable`1<DateTime> get_LastSyncTime();
    public void set_LastSyncTime(Nullable`1<DateTime> value);
    internal bool IsSetLastSyncTime();
    public ResourceDataSyncS3Destination get_S3Destination();
    public void set_S3Destination(ResourceDataSyncS3Destination value);
    internal bool IsSetS3Destination();
    public Nullable`1<DateTime> get_SyncCreatedTime();
    public void set_SyncCreatedTime(Nullable`1<DateTime> value);
    internal bool IsSetSyncCreatedTime();
    public Nullable`1<DateTime> get_SyncLastModifiedTime();
    public void set_SyncLastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetSyncLastModifiedTime();
    public string get_SyncName();
    public void set_SyncName(string value);
    internal bool IsSetSyncName();
    public ResourceDataSyncSourceWithState get_SyncSource();
    public void set_SyncSource(ResourceDataSyncSourceWithState value);
    internal bool IsSetSyncSource();
    public string get_SyncType();
    public void set_SyncType(string value);
    internal bool IsSetSyncType();
}
public class Amazon.SimpleSystemsManagement.Model.ResourceDataSyncNotFoundException : AmazonSimpleSystemsManagementException {
    private string _syncName;
    private string _syncType;
    [AWSPropertyAttribute]
public string SyncName { get; public set; }
    [AWSPropertyAttribute]
public string SyncType { get; public set; }
    public ResourceDataSyncNotFoundException(string message);
    public ResourceDataSyncNotFoundException(string message, Exception innerException);
    public ResourceDataSyncNotFoundException(Exception innerException);
    public ResourceDataSyncNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceDataSyncNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_SyncName();
    public void set_SyncName(string value);
    internal bool IsSetSyncName();
    public string get_SyncType();
    public void set_SyncType(string value);
    internal bool IsSetSyncType();
}
public class Amazon.SimpleSystemsManagement.Model.ResourceDataSyncOrganizationalUnit : object {
    private string _organizationalUnitId;
    [AWSPropertyAttribute]
public string OrganizationalUnitId { get; public set; }
    public string get_OrganizationalUnitId();
    public void set_OrganizationalUnitId(string value);
    internal bool IsSetOrganizationalUnitId();
}
public class Amazon.SimpleSystemsManagement.Model.ResourceDataSyncS3Destination : object {
    private string _awskmsKeyARN;
    private string _bucketName;
    private ResourceDataSyncDestinationDataSharing _destinationDataSharing;
    private string _prefix;
    private string _region;
    private ResourceDataSyncS3Format _syncFormat;
    [AWSPropertyAttribute]
public string AWSKMSKeyARN { get; public set; }
    [AWSPropertyAttribute]
public string BucketName { get; public set; }
    public ResourceDataSyncDestinationDataSharing DestinationDataSharing { get; public set; }
    [AWSPropertyAttribute]
public string Prefix { get; public set; }
    [AWSPropertyAttribute]
public string Region { get; public set; }
    [AWSPropertyAttribute]
public ResourceDataSyncS3Format SyncFormat { get; public set; }
    public string get_AWSKMSKeyARN();
    public void set_AWSKMSKeyARN(string value);
    internal bool IsSetAWSKMSKeyARN();
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public ResourceDataSyncDestinationDataSharing get_DestinationDataSharing();
    public void set_DestinationDataSharing(ResourceDataSyncDestinationDataSharing value);
    internal bool IsSetDestinationDataSharing();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public string get_Region();
    public void set_Region(string value);
    internal bool IsSetRegion();
    public ResourceDataSyncS3Format get_SyncFormat();
    public void set_SyncFormat(ResourceDataSyncS3Format value);
    internal bool IsSetSyncFormat();
}
public class Amazon.SimpleSystemsManagement.Model.ResourceDataSyncSource : object {
    private ResourceDataSyncAwsOrganizationsSource _awsOrganizationsSource;
    private Nullable`1<bool> _enableAllOpsDataSources;
    private Nullable`1<bool> _includeFutureRegions;
    private List`1<string> _sourceRegions;
    private string _sourceType;
    public ResourceDataSyncAwsOrganizationsSource AwsOrganizationsSource { get; public set; }
    public Nullable`1<bool> EnableAllOpsDataSources { get; public set; }
    public Nullable`1<bool> IncludeFutureRegions { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SourceRegions { get; public set; }
    [AWSPropertyAttribute]
public string SourceType { get; public set; }
    public ResourceDataSyncAwsOrganizationsSource get_AwsOrganizationsSource();
    public void set_AwsOrganizationsSource(ResourceDataSyncAwsOrganizationsSource value);
    internal bool IsSetAwsOrganizationsSource();
    public Nullable`1<bool> get_EnableAllOpsDataSources();
    public void set_EnableAllOpsDataSources(Nullable`1<bool> value);
    internal bool IsSetEnableAllOpsDataSources();
    public Nullable`1<bool> get_IncludeFutureRegions();
    public void set_IncludeFutureRegions(Nullable`1<bool> value);
    internal bool IsSetIncludeFutureRegions();
    public List`1<string> get_SourceRegions();
    public void set_SourceRegions(List`1<string> value);
    internal bool IsSetSourceRegions();
    public string get_SourceType();
    public void set_SourceType(string value);
    internal bool IsSetSourceType();
}
public class Amazon.SimpleSystemsManagement.Model.ResourceDataSyncSourceWithState : object {
    private ResourceDataSyncAwsOrganizationsSource _awsOrganizationsSource;
    private Nullable`1<bool> _enableAllOpsDataSources;
    private Nullable`1<bool> _includeFutureRegions;
    private List`1<string> _sourceRegions;
    private string _sourceType;
    private string _state;
    public ResourceDataSyncAwsOrganizationsSource AwsOrganizationsSource { get; public set; }
    public Nullable`1<bool> EnableAllOpsDataSources { get; public set; }
    public Nullable`1<bool> IncludeFutureRegions { get; public set; }
    public List`1<string> SourceRegions { get; public set; }
    [AWSPropertyAttribute]
public string SourceType { get; public set; }
    [AWSPropertyAttribute]
public string State { get; public set; }
    public ResourceDataSyncAwsOrganizationsSource get_AwsOrganizationsSource();
    public void set_AwsOrganizationsSource(ResourceDataSyncAwsOrganizationsSource value);
    internal bool IsSetAwsOrganizationsSource();
    public Nullable`1<bool> get_EnableAllOpsDataSources();
    public void set_EnableAllOpsDataSources(Nullable`1<bool> value);
    internal bool IsSetEnableAllOpsDataSources();
    public Nullable`1<bool> get_IncludeFutureRegions();
    public void set_IncludeFutureRegions(Nullable`1<bool> value);
    internal bool IsSetIncludeFutureRegions();
    public List`1<string> get_SourceRegions();
    public void set_SourceRegions(List`1<string> value);
    internal bool IsSetSourceRegions();
    public string get_SourceType();
    public void set_SourceType(string value);
    internal bool IsSetSourceType();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
}
public class Amazon.SimpleSystemsManagement.Model.ResourceInUseException : AmazonSimpleSystemsManagementException {
    public ResourceInUseException(string message);
    public ResourceInUseException(string message, Exception innerException);
    public ResourceInUseException(Exception innerException);
    public ResourceInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.ResourceLimitExceededException : AmazonSimpleSystemsManagementException {
    public ResourceLimitExceededException(string message);
    public ResourceLimitExceededException(string message, Exception innerException);
    public ResourceLimitExceededException(Exception innerException);
    public ResourceLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.ResourceNotFoundException : AmazonSimpleSystemsManagementException {
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.ResourcePolicyConflictException : AmazonSimpleSystemsManagementException {
    public ResourcePolicyConflictException(string message);
    public ResourcePolicyConflictException(string message, Exception innerException);
    public ResourcePolicyConflictException(Exception innerException);
    public ResourcePolicyConflictException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourcePolicyConflictException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.ResourcePolicyInvalidParameterException : AmazonSimpleSystemsManagementException {
    private List`1<string> _parameterNames;
    public List`1<string> ParameterNames { get; public set; }
    public ResourcePolicyInvalidParameterException(string message);
    public ResourcePolicyInvalidParameterException(string message, Exception innerException);
    public ResourcePolicyInvalidParameterException(Exception innerException);
    public ResourcePolicyInvalidParameterException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourcePolicyInvalidParameterException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public List`1<string> get_ParameterNames();
    public void set_ParameterNames(List`1<string> value);
    internal bool IsSetParameterNames();
}
public class Amazon.SimpleSystemsManagement.Model.ResourcePolicyLimitExceededException : AmazonSimpleSystemsManagementException {
    private Nullable`1<int> _limit;
    private string _limitType;
    public Nullable`1<int> Limit { get; public set; }
    public string LimitType { get; public set; }
    public ResourcePolicyLimitExceededException(string message);
    public ResourcePolicyLimitExceededException(string message, Exception innerException);
    public ResourcePolicyLimitExceededException(Exception innerException);
    public ResourcePolicyLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourcePolicyLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_LimitType();
    public void set_LimitType(string value);
    internal bool IsSetLimitType();
}
public class Amazon.SimpleSystemsManagement.Model.ResourcePolicyNotFoundException : AmazonSimpleSystemsManagementException {
    public ResourcePolicyNotFoundException(string message);
    public ResourcePolicyNotFoundException(string message, Exception innerException);
    public ResourcePolicyNotFoundException(Exception innerException);
    public ResourcePolicyNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourcePolicyNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.ResultAttribute : object {
    private string _typeName;
    [AWSPropertyAttribute]
public string TypeName { get; public set; }
    public string get_TypeName();
    public void set_TypeName(string value);
    internal bool IsSetTypeName();
}
public class Amazon.SimpleSystemsManagement.Model.ResumeSessionRequest : AmazonSimpleSystemsManagementRequest {
    private string _sessionId;
    [AWSPropertyAttribute]
public string SessionId { get; public set; }
    public string get_SessionId();
    public void set_SessionId(string value);
    internal bool IsSetSessionId();
}
public class Amazon.SimpleSystemsManagement.Model.ResumeSessionResponse : AmazonWebServiceResponse {
    private string _sessionId;
    private string _streamUrl;
    private string _tokenValue;
    [AWSPropertyAttribute]
public string SessionId { get; public set; }
    public string StreamUrl { get; public set; }
    [AWSPropertyAttribute]
public string TokenValue { get; public set; }
    public string get_SessionId();
    public void set_SessionId(string value);
    internal bool IsSetSessionId();
    public string get_StreamUrl();
    public void set_StreamUrl(string value);
    internal bool IsSetStreamUrl();
    public string get_TokenValue();
    public void set_TokenValue(string value);
    internal bool IsSetTokenValue();
}
public class Amazon.SimpleSystemsManagement.Model.ReviewInformation : object {
    private Nullable`1<DateTime> _reviewedTime;
    private string _reviewer;
    private ReviewStatus _status;
    public Nullable`1<DateTime> ReviewedTime { get; public set; }
    [AWSPropertyAttribute]
public string Reviewer { get; public set; }
    public ReviewStatus Status { get; public set; }
    public Nullable`1<DateTime> get_ReviewedTime();
    public void set_ReviewedTime(Nullable`1<DateTime> value);
    internal bool IsSetReviewedTime();
    public string get_Reviewer();
    public void set_Reviewer(string value);
    internal bool IsSetReviewer();
    public ReviewStatus get_Status();
    public void set_Status(ReviewStatus value);
    internal bool IsSetStatus();
}
public class Amazon.SimpleSystemsManagement.Model.Runbook : object {
    private string _documentName;
    private string _documentVersion;
    private string _maxConcurrency;
    private string _maxErrors;
    private Dictionary`2<string, List`1<string>> _parameters;
    private List`1<TargetLocation> _targetLocations;
    private List`1<Dictionary`2<string, List`1<string>>> _targetMaps;
    private string _targetParameterName;
    private List`1<Target> _targets;
    [AWSPropertyAttribute]
public string DocumentName { get; public set; }
    public string DocumentVersion { get; public set; }
    [AWSPropertyAttribute]
public string MaxConcurrency { get; public set; }
    [AWSPropertyAttribute]
public string MaxErrors { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, List`1<string>> Parameters { get; public set; }
    [AWSPropertyAttribute]
public List`1<TargetLocation> TargetLocations { get; public set; }
    [AWSPropertyAttribute]
public List`1<Dictionary`2<string, List`1<string>>> TargetMaps { get; public set; }
    [AWSPropertyAttribute]
public string TargetParameterName { get; public set; }
    [AWSPropertyAttribute]
public List`1<Target> Targets { get; public set; }
    public string get_DocumentName();
    public void set_DocumentName(string value);
    internal bool IsSetDocumentName();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public string get_MaxConcurrency();
    public void set_MaxConcurrency(string value);
    internal bool IsSetMaxConcurrency();
    public string get_MaxErrors();
    public void set_MaxErrors(string value);
    internal bool IsSetMaxErrors();
    public Dictionary`2<string, List`1<string>> get_Parameters();
    public void set_Parameters(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetParameters();
    public List`1<TargetLocation> get_TargetLocations();
    public void set_TargetLocations(List`1<TargetLocation> value);
    internal bool IsSetTargetLocations();
    public List`1<Dictionary`2<string, List`1<string>>> get_TargetMaps();
    public void set_TargetMaps(List`1<Dictionary`2<string, List`1<string>>> value);
    internal bool IsSetTargetMaps();
    public string get_TargetParameterName();
    public void set_TargetParameterName(string value);
    internal bool IsSetTargetParameterName();
    public List`1<Target> get_Targets();
    public void set_Targets(List`1<Target> value);
    internal bool IsSetTargets();
}
public class Amazon.SimpleSystemsManagement.Model.S3OutputLocation : object {
    private string _outputS3BucketName;
    private string _outputS3KeyPrefix;
    private string _outputS3Region;
    [AWSPropertyAttribute]
public string OutputS3BucketName { get; public set; }
    [AWSPropertyAttribute]
public string OutputS3KeyPrefix { get; public set; }
    [AWSPropertyAttribute]
public string OutputS3Region { get; public set; }
    public string get_OutputS3BucketName();
    public void set_OutputS3BucketName(string value);
    internal bool IsSetOutputS3BucketName();
    public string get_OutputS3KeyPrefix();
    public void set_OutputS3KeyPrefix(string value);
    internal bool IsSetOutputS3KeyPrefix();
    public string get_OutputS3Region();
    public void set_OutputS3Region(string value);
    internal bool IsSetOutputS3Region();
}
public class Amazon.SimpleSystemsManagement.Model.S3OutputUrl : object {
    private string _outputUrl;
    public string OutputUrl { get; public set; }
    public string get_OutputUrl();
    public void set_OutputUrl(string value);
    internal bool IsSetOutputUrl();
}
public class Amazon.SimpleSystemsManagement.Model.ScheduledWindowExecution : object {
    private string _executionTime;
    private string _name;
    private string _windowId;
    public string ExecutionTime { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    public string get_ExecutionTime();
    public void set_ExecutionTime(string value);
    internal bool IsSetExecutionTime();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
}
public class Amazon.SimpleSystemsManagement.Model.SendAutomationSignalRequest : AmazonSimpleSystemsManagementRequest {
    private string _automationExecutionId;
    private Dictionary`2<string, List`1<string>> _payload;
    private SignalType _signalType;
    [AWSPropertyAttribute]
public string AutomationExecutionId { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, List`1<string>> Payload { get; public set; }
    [AWSPropertyAttribute]
public SignalType SignalType { get; public set; }
    public string get_AutomationExecutionId();
    public void set_AutomationExecutionId(string value);
    internal bool IsSetAutomationExecutionId();
    public Dictionary`2<string, List`1<string>> get_Payload();
    public void set_Payload(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetPayload();
    public SignalType get_SignalType();
    public void set_SignalType(SignalType value);
    internal bool IsSetSignalType();
}
public class Amazon.SimpleSystemsManagement.Model.SendAutomationSignalResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleSystemsManagement.Model.SendCommandRequest : AmazonSimpleSystemsManagementRequest {
    private AlarmConfiguration _alarmConfiguration;
    private CloudWatchOutputConfig _cloudWatchOutputConfig;
    private string _comment;
    private string _documentHash;
    private DocumentHashType _documentHashType;
    private string _documentName;
    private string _documentVersion;
    private List`1<string> _instanceIds;
    private string _maxConcurrency;
    private string _maxErrors;
    private NotificationConfig _notificationConfig;
    private string _outputS3BucketName;
    private string _outputS3KeyPrefix;
    private string _outputS3Region;
    private Dictionary`2<string, List`1<string>> _parameters;
    private string _serviceRoleArn;
    private List`1<Target> _targets;
    private Nullable`1<int> _timeoutSeconds;
    public AlarmConfiguration AlarmConfiguration { get; public set; }
    public CloudWatchOutputConfig CloudWatchOutputConfig { get; public set; }
    [AWSPropertyAttribute]
public string Comment { get; public set; }
    [AWSPropertyAttribute]
public string DocumentHash { get; public set; }
    public DocumentHashType DocumentHashType { get; public set; }
    [AWSPropertyAttribute]
public string DocumentName { get; public set; }
    public string DocumentVersion { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> InstanceIds { get; public set; }
    [AWSPropertyAttribute]
public string MaxConcurrency { get; public set; }
    [AWSPropertyAttribute]
public string MaxErrors { get; public set; }
    public NotificationConfig NotificationConfig { get; public set; }
    [AWSPropertyAttribute]
public string OutputS3BucketName { get; public set; }
    [AWSPropertyAttribute]
public string OutputS3KeyPrefix { get; public set; }
    [AWSPropertyAttribute]
public string OutputS3Region { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, List`1<string>> Parameters { get; public set; }
    public string ServiceRoleArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<Target> Targets { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TimeoutSeconds { get; public set; }
    public SendCommandRequest(string documentName, List`1<string> instanceIds);
    public AlarmConfiguration get_AlarmConfiguration();
    public void set_AlarmConfiguration(AlarmConfiguration value);
    internal bool IsSetAlarmConfiguration();
    public CloudWatchOutputConfig get_CloudWatchOutputConfig();
    public void set_CloudWatchOutputConfig(CloudWatchOutputConfig value);
    internal bool IsSetCloudWatchOutputConfig();
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public string get_DocumentHash();
    public void set_DocumentHash(string value);
    internal bool IsSetDocumentHash();
    public DocumentHashType get_DocumentHashType();
    public void set_DocumentHashType(DocumentHashType value);
    internal bool IsSetDocumentHashType();
    public string get_DocumentName();
    public void set_DocumentName(string value);
    internal bool IsSetDocumentName();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
    public string get_MaxConcurrency();
    public void set_MaxConcurrency(string value);
    internal bool IsSetMaxConcurrency();
    public string get_MaxErrors();
    public void set_MaxErrors(string value);
    internal bool IsSetMaxErrors();
    public NotificationConfig get_NotificationConfig();
    public void set_NotificationConfig(NotificationConfig value);
    internal bool IsSetNotificationConfig();
    public string get_OutputS3BucketName();
    public void set_OutputS3BucketName(string value);
    internal bool IsSetOutputS3BucketName();
    public string get_OutputS3KeyPrefix();
    public void set_OutputS3KeyPrefix(string value);
    internal bool IsSetOutputS3KeyPrefix();
    public string get_OutputS3Region();
    public void set_OutputS3Region(string value);
    internal bool IsSetOutputS3Region();
    public Dictionary`2<string, List`1<string>> get_Parameters();
    public void set_Parameters(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetParameters();
    public string get_ServiceRoleArn();
    public void set_ServiceRoleArn(string value);
    internal bool IsSetServiceRoleArn();
    public List`1<Target> get_Targets();
    public void set_Targets(List`1<Target> value);
    internal bool IsSetTargets();
    public Nullable`1<int> get_TimeoutSeconds();
    public void set_TimeoutSeconds(Nullable`1<int> value);
    internal bool IsSetTimeoutSeconds();
}
public class Amazon.SimpleSystemsManagement.Model.SendCommandResponse : AmazonWebServiceResponse {
    private Command _command;
    public Command Command { get; public set; }
    public Command get_Command();
    public void set_Command(Command value);
    internal bool IsSetCommand();
}
public class Amazon.SimpleSystemsManagement.Model.ServiceSetting : object {
    private string _arn;
    private Nullable`1<DateTime> _lastModifiedDate;
    private string _lastModifiedUser;
    private string _settingId;
    private string _settingValue;
    private string _status;
    public string ARN { get; public set; }
    public Nullable`1<DateTime> LastModifiedDate { get; public set; }
    public string LastModifiedUser { get; public set; }
    [AWSPropertyAttribute]
public string SettingId { get; public set; }
    [AWSPropertyAttribute]
public string SettingValue { get; public set; }
    public string Status { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public Nullable`1<DateTime> get_LastModifiedDate();
    public void set_LastModifiedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedDate();
    public string get_LastModifiedUser();
    public void set_LastModifiedUser(string value);
    internal bool IsSetLastModifiedUser();
    public string get_SettingId();
    public void set_SettingId(string value);
    internal bool IsSetSettingId();
    public string get_SettingValue();
    public void set_SettingValue(string value);
    internal bool IsSetSettingValue();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.SimpleSystemsManagement.Model.ServiceSettingNotFoundException : AmazonSimpleSystemsManagementException {
    public ServiceSettingNotFoundException(string message);
    public ServiceSettingNotFoundException(string message, Exception innerException);
    public ServiceSettingNotFoundException(Exception innerException);
    public ServiceSettingNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ServiceSettingNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.Session : object {
    private string _details;
    private string _documentName;
    private Nullable`1<DateTime> _endDate;
    private string _maxSessionDuration;
    private SessionManagerOutputUrl _outputUrl;
    private string _owner;
    private string _reason;
    private string _sessionId;
    private Nullable`1<DateTime> _startDate;
    private SessionStatus _status;
    private string _target;
    [AWSPropertyAttribute]
public string Details { get; public set; }
    public string DocumentName { get; public set; }
    public Nullable`1<DateTime> EndDate { get; public set; }
    [AWSPropertyAttribute]
public string MaxSessionDuration { get; public set; }
    public SessionManagerOutputUrl OutputUrl { get; public set; }
    [AWSPropertyAttribute]
public string Owner { get; public set; }
    [AWSPropertyAttribute]
public string Reason { get; public set; }
    [AWSPropertyAttribute]
public string SessionId { get; public set; }
    public Nullable`1<DateTime> StartDate { get; public set; }
    public SessionStatus Status { get; public set; }
    [AWSPropertyAttribute]
public string Target { get; public set; }
    public string get_Details();
    public void set_Details(string value);
    internal bool IsSetDetails();
    public string get_DocumentName();
    public void set_DocumentName(string value);
    internal bool IsSetDocumentName();
    public Nullable`1<DateTime> get_EndDate();
    public void set_EndDate(Nullable`1<DateTime> value);
    internal bool IsSetEndDate();
    public string get_MaxSessionDuration();
    public void set_MaxSessionDuration(string value);
    internal bool IsSetMaxSessionDuration();
    public SessionManagerOutputUrl get_OutputUrl();
    public void set_OutputUrl(SessionManagerOutputUrl value);
    internal bool IsSetOutputUrl();
    public string get_Owner();
    public void set_Owner(string value);
    internal bool IsSetOwner();
    public string get_Reason();
    public void set_Reason(string value);
    internal bool IsSetReason();
    public string get_SessionId();
    public void set_SessionId(string value);
    internal bool IsSetSessionId();
    public Nullable`1<DateTime> get_StartDate();
    public void set_StartDate(Nullable`1<DateTime> value);
    internal bool IsSetStartDate();
    public SessionStatus get_Status();
    public void set_Status(SessionStatus value);
    internal bool IsSetStatus();
    public string get_Target();
    public void set_Target(string value);
    internal bool IsSetTarget();
}
public class Amazon.SimpleSystemsManagement.Model.SessionFilter : object {
    private SessionFilterKey _key;
    private string _value;
    [AWSPropertyAttribute]
public SessionFilterKey Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public SessionFilterKey get_Key();
    public void set_Key(SessionFilterKey value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.SimpleSystemsManagement.Model.SessionManagerOutputUrl : object {
    private string _cloudWatchOutputUrl;
    private string _s3OutputUrl;
    [AWSPropertyAttribute]
public string CloudWatchOutputUrl { get; public set; }
    [AWSPropertyAttribute]
public string S3OutputUrl { get; public set; }
    public string get_CloudWatchOutputUrl();
    public void set_CloudWatchOutputUrl(string value);
    internal bool IsSetCloudWatchOutputUrl();
    public string get_S3OutputUrl();
    public void set_S3OutputUrl(string value);
    internal bool IsSetS3OutputUrl();
}
public class Amazon.SimpleSystemsManagement.Model.SeveritySummary : object {
    private Nullable`1<int> _criticalCount;
    private Nullable`1<int> _highCount;
    private Nullable`1<int> _informationalCount;
    private Nullable`1<int> _lowCount;
    private Nullable`1<int> _mediumCount;
    private Nullable`1<int> _unspecifiedCount;
    public Nullable`1<int> CriticalCount { get; public set; }
    public Nullable`1<int> HighCount { get; public set; }
    public Nullable`1<int> InformationalCount { get; public set; }
    public Nullable`1<int> LowCount { get; public set; }
    public Nullable`1<int> MediumCount { get; public set; }
    public Nullable`1<int> UnspecifiedCount { get; public set; }
    public Nullable`1<int> get_CriticalCount();
    public void set_CriticalCount(Nullable`1<int> value);
    internal bool IsSetCriticalCount();
    public Nullable`1<int> get_HighCount();
    public void set_HighCount(Nullable`1<int> value);
    internal bool IsSetHighCount();
    public Nullable`1<int> get_InformationalCount();
    public void set_InformationalCount(Nullable`1<int> value);
    internal bool IsSetInformationalCount();
    public Nullable`1<int> get_LowCount();
    public void set_LowCount(Nullable`1<int> value);
    internal bool IsSetLowCount();
    public Nullable`1<int> get_MediumCount();
    public void set_MediumCount(Nullable`1<int> value);
    internal bool IsSetMediumCount();
    public Nullable`1<int> get_UnspecifiedCount();
    public void set_UnspecifiedCount(Nullable`1<int> value);
    internal bool IsSetUnspecifiedCount();
}
public class Amazon.SimpleSystemsManagement.Model.SimpleSystemsManagementPaginatorFactory : object {
    private IAmazonSimpleSystemsManagement client;
    internal SimpleSystemsManagementPaginatorFactory(IAmazonSimpleSystemsManagement client);
    public sealed virtual IDescribeActivationsPaginator DescribeActivations(DescribeActivationsRequest request);
    public sealed virtual IDescribeAssociationExecutionsPaginator DescribeAssociationExecutions(DescribeAssociationExecutionsRequest request);
    public sealed virtual IDescribeAssociationExecutionTargetsPaginator DescribeAssociationExecutionTargets(DescribeAssociationExecutionTargetsRequest request);
    public sealed virtual IDescribeAutomationExecutionsPaginator DescribeAutomationExecutions(DescribeAutomationExecutionsRequest request);
    public sealed virtual IDescribeAutomationStepExecutionsPaginator DescribeAutomationStepExecutions(DescribeAutomationStepExecutionsRequest request);
    public sealed virtual IDescribeAvailablePatchesPaginator DescribeAvailablePatches(DescribeAvailablePatchesRequest request);
    public sealed virtual IDescribeEffectiveInstanceAssociationsPaginator DescribeEffectiveInstanceAssociations(DescribeEffectiveInstanceAssociationsRequest request);
    public sealed virtual IDescribeEffectivePatchesForPatchBaselinePaginator DescribeEffectivePatchesForPatchBaseline(DescribeEffectivePatchesForPatchBaselineRequest request);
    public sealed virtual IDescribeInstanceAssociationsStatusPaginator DescribeInstanceAssociationsStatus(DescribeInstanceAssociationsStatusRequest request);
    public sealed virtual IDescribeInstanceInformationPaginator DescribeInstanceInformation(DescribeInstanceInformationRequest request);
    public sealed virtual IDescribeInstancePatchesPaginator DescribeInstancePatches(DescribeInstancePatchesRequest request);
    public sealed virtual IDescribeInstancePatchStatesPaginator DescribeInstancePatchStates(DescribeInstancePatchStatesRequest request);
    public sealed virtual IDescribeInstancePatchStatesForPatchGroupPaginator DescribeInstancePatchStatesForPatchGroup(DescribeInstancePatchStatesForPatchGroupRequest request);
    public sealed virtual IDescribeInstancePropertiesPaginator DescribeInstanceProperties(DescribeInstancePropertiesRequest request);
    public sealed virtual IDescribeInventoryDeletionsPaginator DescribeInventoryDeletions(DescribeInventoryDeletionsRequest request);
    public sealed virtual IDescribeMaintenanceWindowExecutionsPaginator DescribeMaintenanceWindowExecutions(DescribeMaintenanceWindowExecutionsRequest request);
    public sealed virtual IDescribeMaintenanceWindowExecutionTaskInvocationsPaginator DescribeMaintenanceWindowExecutionTaskInvocations(DescribeMaintenanceWindowExecutionTaskInvocationsRequest request);
    public sealed virtual IDescribeMaintenanceWindowExecutionTasksPaginator DescribeMaintenanceWindowExecutionTasks(DescribeMaintenanceWindowExecutionTasksRequest request);
    public sealed virtual IDescribeMaintenanceWindowsPaginator DescribeMaintenanceWindows(DescribeMaintenanceWindowsRequest request);
    public sealed virtual IDescribeMaintenanceWindowSchedulePaginator DescribeMaintenanceWindowSchedule(DescribeMaintenanceWindowScheduleRequest request);
    public sealed virtual IDescribeMaintenanceWindowsForTargetPaginator DescribeMaintenanceWindowsForTarget(DescribeMaintenanceWindowsForTargetRequest request);
    public sealed virtual IDescribeMaintenanceWindowTargetsPaginator DescribeMaintenanceWindowTargets(DescribeMaintenanceWindowTargetsRequest request);
    public sealed virtual IDescribeMaintenanceWindowTasksPaginator DescribeMaintenanceWindowTasks(DescribeMaintenanceWindowTasksRequest request);
    public sealed virtual IDescribeOpsItemsPaginator DescribeOpsItems(DescribeOpsItemsRequest request);
    public sealed virtual IDescribeParametersPaginator DescribeParameters(DescribeParametersRequest request);
    public sealed virtual IDescribePatchBaselinesPaginator DescribePatchBaselines(DescribePatchBaselinesRequest request);
    public sealed virtual IDescribePatchGroupsPaginator DescribePatchGroups(DescribePatchGroupsRequest request);
    public sealed virtual IDescribePatchPropertiesPaginator DescribePatchProperties(DescribePatchPropertiesRequest request);
    public sealed virtual IDescribeSessionsPaginator DescribeSessions(DescribeSessionsRequest request);
    public sealed virtual IGetInventoryPaginator GetInventory(GetInventoryRequest request);
    public sealed virtual IGetInventorySchemaPaginator GetInventorySchema(GetInventorySchemaRequest request);
    public sealed virtual IGetOpsSummaryPaginator GetOpsSummary(GetOpsSummaryRequest request);
    public sealed virtual IGetParameterHistoryPaginator GetParameterHistory(GetParameterHistoryRequest request);
    public sealed virtual IGetParametersByPathPaginator GetParametersByPath(GetParametersByPathRequest request);
    public sealed virtual IGetResourcePoliciesPaginator GetResourcePolicies(GetResourcePoliciesRequest request);
    public sealed virtual IListAssociationsPaginator ListAssociations(ListAssociationsRequest request);
    public sealed virtual IListAssociationVersionsPaginator ListAssociationVersions(ListAssociationVersionsRequest request);
    public sealed virtual IListCommandInvocationsPaginator ListCommandInvocations(ListCommandInvocationsRequest request);
    public sealed virtual IListCommandsPaginator ListCommands(ListCommandsRequest request);
    public sealed virtual IListComplianceItemsPaginator ListComplianceItems(ListComplianceItemsRequest request);
    public sealed virtual IListComplianceSummariesPaginator ListComplianceSummaries(ListComplianceSummariesRequest request);
    public sealed virtual IListDocumentsPaginator ListDocuments(ListDocumentsRequest request);
    public sealed virtual IListDocumentVersionsPaginator ListDocumentVersions(ListDocumentVersionsRequest request);
    public sealed virtual IListOpsItemEventsPaginator ListOpsItemEvents(ListOpsItemEventsRequest request);
    public sealed virtual IListOpsItemRelatedItemsPaginator ListOpsItemRelatedItems(ListOpsItemRelatedItemsRequest request);
    public sealed virtual IListOpsMetadataPaginator ListOpsMetadata(ListOpsMetadataRequest request);
    public sealed virtual IListResourceComplianceSummariesPaginator ListResourceComplianceSummaries(ListResourceComplianceSummariesRequest request);
    public sealed virtual IListResourceDataSyncPaginator ListResourceDataSync(ListResourceDataSyncRequest request);
}
public class Amazon.SimpleSystemsManagement.Model.StartAssociationsOnceRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<string> _associationIds;
    [AWSPropertyAttribute]
public List`1<string> AssociationIds { get; public set; }
    public List`1<string> get_AssociationIds();
    public void set_AssociationIds(List`1<string> value);
    internal bool IsSetAssociationIds();
}
public class Amazon.SimpleSystemsManagement.Model.StartAssociationsOnceResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleSystemsManagement.Model.StartAutomationExecutionRequest : AmazonSimpleSystemsManagementRequest {
    private AlarmConfiguration _alarmConfiguration;
    private string _clientToken;
    private string _documentName;
    private string _documentVersion;
    private string _maxConcurrency;
    private string _maxErrors;
    private ExecutionMode _mode;
    private Dictionary`2<string, List`1<string>> _parameters;
    private List`1<Tag> _tags;
    private List`1<TargetLocation> _targetLocations;
    private List`1<Dictionary`2<string, List`1<string>>> _targetMaps;
    private string _targetParameterName;
    private List`1<Target> _targets;
    public AlarmConfiguration AlarmConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string DocumentName { get; public set; }
    public string DocumentVersion { get; public set; }
    [AWSPropertyAttribute]
public string MaxConcurrency { get; public set; }
    [AWSPropertyAttribute]
public string MaxErrors { get; public set; }
    public ExecutionMode Mode { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, List`1<string>> Parameters { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public List`1<TargetLocation> TargetLocations { get; public set; }
    [AWSPropertyAttribute]
public List`1<Dictionary`2<string, List`1<string>>> TargetMaps { get; public set; }
    [AWSPropertyAttribute]
public string TargetParameterName { get; public set; }
    [AWSPropertyAttribute]
public List`1<Target> Targets { get; public set; }
    public AlarmConfiguration get_AlarmConfiguration();
    public void set_AlarmConfiguration(AlarmConfiguration value);
    internal bool IsSetAlarmConfiguration();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_DocumentName();
    public void set_DocumentName(string value);
    internal bool IsSetDocumentName();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public string get_MaxConcurrency();
    public void set_MaxConcurrency(string value);
    internal bool IsSetMaxConcurrency();
    public string get_MaxErrors();
    public void set_MaxErrors(string value);
    internal bool IsSetMaxErrors();
    public ExecutionMode get_Mode();
    public void set_Mode(ExecutionMode value);
    internal bool IsSetMode();
    public Dictionary`2<string, List`1<string>> get_Parameters();
    public void set_Parameters(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetParameters();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public List`1<TargetLocation> get_TargetLocations();
    public void set_TargetLocations(List`1<TargetLocation> value);
    internal bool IsSetTargetLocations();
    public List`1<Dictionary`2<string, List`1<string>>> get_TargetMaps();
    public void set_TargetMaps(List`1<Dictionary`2<string, List`1<string>>> value);
    internal bool IsSetTargetMaps();
    public string get_TargetParameterName();
    public void set_TargetParameterName(string value);
    internal bool IsSetTargetParameterName();
    public List`1<Target> get_Targets();
    public void set_Targets(List`1<Target> value);
    internal bool IsSetTargets();
}
public class Amazon.SimpleSystemsManagement.Model.StartAutomationExecutionResponse : AmazonWebServiceResponse {
    private string _automationExecutionId;
    [AWSPropertyAttribute]
public string AutomationExecutionId { get; public set; }
    public string get_AutomationExecutionId();
    public void set_AutomationExecutionId(string value);
    internal bool IsSetAutomationExecutionId();
}
public class Amazon.SimpleSystemsManagement.Model.StartChangeRequestExecutionRequest : AmazonSimpleSystemsManagementRequest {
    private Nullable`1<bool> _autoApprove;
    private string _changeDetails;
    private string _changeRequestName;
    private string _clientToken;
    private string _documentName;
    private string _documentVersion;
    private Dictionary`2<string, List`1<string>> _parameters;
    private List`1<Runbook> _runbooks;
    private Nullable`1<DateTime> _scheduledEndTime;
    private Nullable`1<DateTime> _scheduledTime;
    private List`1<Tag> _tags;
    public Nullable`1<bool> AutoApprove { get; public set; }
    [AWSPropertyAttribute]
public string ChangeDetails { get; public set; }
    [AWSPropertyAttribute]
public string ChangeRequestName { get; public set; }
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string DocumentName { get; public set; }
    public string DocumentVersion { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, List`1<string>> Parameters { get; public set; }
    [AWSPropertyAttribute]
public List`1<Runbook> Runbooks { get; public set; }
    public Nullable`1<DateTime> ScheduledEndTime { get; public set; }
    public Nullable`1<DateTime> ScheduledTime { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public Nullable`1<bool> get_AutoApprove();
    public void set_AutoApprove(Nullable`1<bool> value);
    internal bool IsSetAutoApprove();
    public string get_ChangeDetails();
    public void set_ChangeDetails(string value);
    internal bool IsSetChangeDetails();
    public string get_ChangeRequestName();
    public void set_ChangeRequestName(string value);
    internal bool IsSetChangeRequestName();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_DocumentName();
    public void set_DocumentName(string value);
    internal bool IsSetDocumentName();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public Dictionary`2<string, List`1<string>> get_Parameters();
    public void set_Parameters(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetParameters();
    public List`1<Runbook> get_Runbooks();
    public void set_Runbooks(List`1<Runbook> value);
    internal bool IsSetRunbooks();
    public Nullable`1<DateTime> get_ScheduledEndTime();
    public void set_ScheduledEndTime(Nullable`1<DateTime> value);
    internal bool IsSetScheduledEndTime();
    public Nullable`1<DateTime> get_ScheduledTime();
    public void set_ScheduledTime(Nullable`1<DateTime> value);
    internal bool IsSetScheduledTime();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.SimpleSystemsManagement.Model.StartChangeRequestExecutionResponse : AmazonWebServiceResponse {
    private string _automationExecutionId;
    [AWSPropertyAttribute]
public string AutomationExecutionId { get; public set; }
    public string get_AutomationExecutionId();
    public void set_AutomationExecutionId(string value);
    internal bool IsSetAutomationExecutionId();
}
public class Amazon.SimpleSystemsManagement.Model.StartSessionRequest : AmazonSimpleSystemsManagementRequest {
    private string _documentName;
    private Dictionary`2<string, List`1<string>> _parameters;
    private string _reason;
    private string _target;
    public string DocumentName { get; public set; }
    public Dictionary`2<string, List`1<string>> Parameters { get; public set; }
    [AWSPropertyAttribute]
public string Reason { get; public set; }
    [AWSPropertyAttribute]
public string Target { get; public set; }
    public string get_DocumentName();
    public void set_DocumentName(string value);
    internal bool IsSetDocumentName();
    public Dictionary`2<string, List`1<string>> get_Parameters();
    public void set_Parameters(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetParameters();
    public string get_Reason();
    public void set_Reason(string value);
    internal bool IsSetReason();
    public string get_Target();
    public void set_Target(string value);
    internal bool IsSetTarget();
}
public class Amazon.SimpleSystemsManagement.Model.StartSessionResponse : AmazonWebServiceResponse {
    private string _sessionId;
    private string _streamUrl;
    private string _tokenValue;
    [AWSPropertyAttribute]
public string SessionId { get; public set; }
    public string StreamUrl { get; public set; }
    [AWSPropertyAttribute]
public string TokenValue { get; public set; }
    public string get_SessionId();
    public void set_SessionId(string value);
    internal bool IsSetSessionId();
    public string get_StreamUrl();
    public void set_StreamUrl(string value);
    internal bool IsSetStreamUrl();
    public string get_TokenValue();
    public void set_TokenValue(string value);
    internal bool IsSetTokenValue();
}
public class Amazon.SimpleSystemsManagement.Model.StatusUnchangedException : AmazonSimpleSystemsManagementException {
    public StatusUnchangedException(string message);
    public StatusUnchangedException(string message, Exception innerException);
    public StatusUnchangedException(Exception innerException);
    public StatusUnchangedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public StatusUnchangedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.StepExecution : object {
    private string _action;
    private Nullable`1<DateTime> _executionEndTime;
    private Nullable`1<DateTime> _executionStartTime;
    private FailureDetails _failureDetails;
    private string _failureMessage;
    private Dictionary`2<string, string> _inputs;
    private Nullable`1<bool> _isCritical;
    private Nullable`1<bool> _isEnd;
    private Nullable`1<int> _maxAttempts;
    private string _nextStep;
    private string _onFailure;
    private Dictionary`2<string, List`1<string>> _outputs;
    private Dictionary`2<string, List`1<string>> _overriddenParameters;
    private ParentStepDetails _parentStepDetails;
    private string _response;
    private string _responseCode;
    private string _stepExecutionId;
    private string _stepName;
    private AutomationExecutionStatus _stepStatus;
    private TargetLocation _targetLocation;
    private List`1<Target> _targets;
    private Nullable`1<long> _timeoutSeconds;
    private List`1<AlarmStateInformation> _triggeredAlarms;
    private List`1<string> _validNextSteps;
    public string Action { get; public set; }
    public Nullable`1<DateTime> ExecutionEndTime { get; public set; }
    public Nullable`1<DateTime> ExecutionStartTime { get; public set; }
    public FailureDetails FailureDetails { get; public set; }
    public string FailureMessage { get; public set; }
    public Dictionary`2<string, string> Inputs { get; public set; }
    public Nullable`1<bool> IsCritical { get; public set; }
    public Nullable`1<bool> IsEnd { get; public set; }
    public Nullable`1<int> MaxAttempts { get; public set; }
    public string NextStep { get; public set; }
    public string OnFailure { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, List`1<string>> Outputs { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, List`1<string>> OverriddenParameters { get; public set; }
    public ParentStepDetails ParentStepDetails { get; public set; }
    public string Response { get; public set; }
    public string ResponseCode { get; public set; }
    public string StepExecutionId { get; public set; }
    public string StepName { get; public set; }
    public AutomationExecutionStatus StepStatus { get; public set; }
    public TargetLocation TargetLocation { get; public set; }
    [AWSPropertyAttribute]
public List`1<Target> Targets { get; public set; }
    public Nullable`1<long> TimeoutSeconds { get; public set; }
    [AWSPropertyAttribute]
public List`1<AlarmStateInformation> TriggeredAlarms { get; public set; }
    public List`1<string> ValidNextSteps { get; public set; }
    public string get_Action();
    public void set_Action(string value);
    internal bool IsSetAction();
    public Nullable`1<DateTime> get_ExecutionEndTime();
    public void set_ExecutionEndTime(Nullable`1<DateTime> value);
    internal bool IsSetExecutionEndTime();
    public Nullable`1<DateTime> get_ExecutionStartTime();
    public void set_ExecutionStartTime(Nullable`1<DateTime> value);
    internal bool IsSetExecutionStartTime();
    public FailureDetails get_FailureDetails();
    public void set_FailureDetails(FailureDetails value);
    internal bool IsSetFailureDetails();
    public string get_FailureMessage();
    public void set_FailureMessage(string value);
    internal bool IsSetFailureMessage();
    public Dictionary`2<string, string> get_Inputs();
    public void set_Inputs(Dictionary`2<string, string> value);
    internal bool IsSetInputs();
    public Nullable`1<bool> get_IsCritical();
    public void set_IsCritical(Nullable`1<bool> value);
    internal bool IsSetIsCritical();
    public Nullable`1<bool> get_IsEnd();
    public void set_IsEnd(Nullable`1<bool> value);
    internal bool IsSetIsEnd();
    public Nullable`1<int> get_MaxAttempts();
    public void set_MaxAttempts(Nullable`1<int> value);
    internal bool IsSetMaxAttempts();
    public string get_NextStep();
    public void set_NextStep(string value);
    internal bool IsSetNextStep();
    public string get_OnFailure();
    public void set_OnFailure(string value);
    internal bool IsSetOnFailure();
    public Dictionary`2<string, List`1<string>> get_Outputs();
    public void set_Outputs(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetOutputs();
    public Dictionary`2<string, List`1<string>> get_OverriddenParameters();
    public void set_OverriddenParameters(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetOverriddenParameters();
    public ParentStepDetails get_ParentStepDetails();
    public void set_ParentStepDetails(ParentStepDetails value);
    internal bool IsSetParentStepDetails();
    public string get_Response();
    public void set_Response(string value);
    internal bool IsSetResponse();
    public string get_ResponseCode();
    public void set_ResponseCode(string value);
    internal bool IsSetResponseCode();
    public string get_StepExecutionId();
    public void set_StepExecutionId(string value);
    internal bool IsSetStepExecutionId();
    public string get_StepName();
    public void set_StepName(string value);
    internal bool IsSetStepName();
    public AutomationExecutionStatus get_StepStatus();
    public void set_StepStatus(AutomationExecutionStatus value);
    internal bool IsSetStepStatus();
    public TargetLocation get_TargetLocation();
    public void set_TargetLocation(TargetLocation value);
    internal bool IsSetTargetLocation();
    public List`1<Target> get_Targets();
    public void set_Targets(List`1<Target> value);
    internal bool IsSetTargets();
    public Nullable`1<long> get_TimeoutSeconds();
    public void set_TimeoutSeconds(Nullable`1<long> value);
    internal bool IsSetTimeoutSeconds();
    public List`1<AlarmStateInformation> get_TriggeredAlarms();
    public void set_TriggeredAlarms(List`1<AlarmStateInformation> value);
    internal bool IsSetTriggeredAlarms();
    public List`1<string> get_ValidNextSteps();
    public void set_ValidNextSteps(List`1<string> value);
    internal bool IsSetValidNextSteps();
}
public class Amazon.SimpleSystemsManagement.Model.StepExecutionFilter : object {
    private StepExecutionFilterKey _key;
    private List`1<string> _values;
    [AWSPropertyAttribute]
public StepExecutionFilterKey Key { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Values { get; public set; }
    public StepExecutionFilterKey get_Key();
    public void set_Key(StepExecutionFilterKey value);
    internal bool IsSetKey();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.SimpleSystemsManagement.Model.StopAutomationExecutionRequest : AmazonSimpleSystemsManagementRequest {
    private string _automationExecutionId;
    private StopType _type;
    [AWSPropertyAttribute]
public string AutomationExecutionId { get; public set; }
    public StopType Type { get; public set; }
    public string get_AutomationExecutionId();
    public void set_AutomationExecutionId(string value);
    internal bool IsSetAutomationExecutionId();
    public StopType get_Type();
    public void set_Type(StopType value);
    internal bool IsSetType();
}
public class Amazon.SimpleSystemsManagement.Model.StopAutomationExecutionResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleSystemsManagement.Model.SubTypeCountLimitExceededException : AmazonSimpleSystemsManagementException {
    public SubTypeCountLimitExceededException(string message);
    public SubTypeCountLimitExceededException(string message, Exception innerException);
    public SubTypeCountLimitExceededException(Exception innerException);
    public SubTypeCountLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SubTypeCountLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.Tag : object {
    private string _key;
    private string _value;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.SimpleSystemsManagement.Model.Target : object {
    private string _key;
    private List`1<string> _values;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Values { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.SimpleSystemsManagement.Model.TargetInUseException : AmazonSimpleSystemsManagementException {
    public TargetInUseException(string message);
    public TargetInUseException(string message, Exception innerException);
    public TargetInUseException(Exception innerException);
    public TargetInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TargetInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.TargetLocation : object {
    private List`1<string> _accounts;
    private string _executionRoleName;
    private List`1<string> _regions;
    private AlarmConfiguration _targetLocationAlarmConfiguration;
    private string _targetLocationMaxConcurrency;
    private string _targetLocationMaxErrors;
    [AWSPropertyAttribute]
public List`1<string> Accounts { get; public set; }
    [AWSPropertyAttribute]
public string ExecutionRoleName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Regions { get; public set; }
    public AlarmConfiguration TargetLocationAlarmConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string TargetLocationMaxConcurrency { get; public set; }
    [AWSPropertyAttribute]
public string TargetLocationMaxErrors { get; public set; }
    public List`1<string> get_Accounts();
    public void set_Accounts(List`1<string> value);
    internal bool IsSetAccounts();
    public string get_ExecutionRoleName();
    public void set_ExecutionRoleName(string value);
    internal bool IsSetExecutionRoleName();
    public List`1<string> get_Regions();
    public void set_Regions(List`1<string> value);
    internal bool IsSetRegions();
    public AlarmConfiguration get_TargetLocationAlarmConfiguration();
    public void set_TargetLocationAlarmConfiguration(AlarmConfiguration value);
    internal bool IsSetTargetLocationAlarmConfiguration();
    public string get_TargetLocationMaxConcurrency();
    public void set_TargetLocationMaxConcurrency(string value);
    internal bool IsSetTargetLocationMaxConcurrency();
    public string get_TargetLocationMaxErrors();
    public void set_TargetLocationMaxErrors(string value);
    internal bool IsSetTargetLocationMaxErrors();
}
public class Amazon.SimpleSystemsManagement.Model.TargetNotConnectedException : AmazonSimpleSystemsManagementException {
    public TargetNotConnectedException(string message);
    public TargetNotConnectedException(string message, Exception innerException);
    public TargetNotConnectedException(Exception innerException);
    public TargetNotConnectedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TargetNotConnectedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.TerminateSessionRequest : AmazonSimpleSystemsManagementRequest {
    private string _sessionId;
    [AWSPropertyAttribute]
public string SessionId { get; public set; }
    public string get_SessionId();
    public void set_SessionId(string value);
    internal bool IsSetSessionId();
}
public class Amazon.SimpleSystemsManagement.Model.TerminateSessionResponse : AmazonWebServiceResponse {
    private string _sessionId;
    [AWSPropertyAttribute]
public string SessionId { get; public set; }
    public string get_SessionId();
    public void set_SessionId(string value);
    internal bool IsSetSessionId();
}
public class Amazon.SimpleSystemsManagement.Model.TooManyTagsErrorException : AmazonSimpleSystemsManagementException {
    public TooManyTagsErrorException(string message);
    public TooManyTagsErrorException(string message, Exception innerException);
    public TooManyTagsErrorException(Exception innerException);
    public TooManyTagsErrorException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyTagsErrorException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.TooManyUpdatesException : AmazonSimpleSystemsManagementException {
    public TooManyUpdatesException(string message);
    public TooManyUpdatesException(string message, Exception innerException);
    public TooManyUpdatesException(Exception innerException);
    public TooManyUpdatesException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyUpdatesException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.TotalSizeLimitExceededException : AmazonSimpleSystemsManagementException {
    public TotalSizeLimitExceededException(string message);
    public TotalSizeLimitExceededException(string message, Exception innerException);
    public TotalSizeLimitExceededException(Exception innerException);
    public TotalSizeLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TotalSizeLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.UnlabelParameterVersionRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<string> _labels;
    private string _name;
    private Nullable`1<long> _parameterVersion;
    [AWSPropertyAttribute]
public List`1<string> Labels { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> ParameterVersion { get; public set; }
    public List`1<string> get_Labels();
    public void set_Labels(List`1<string> value);
    internal bool IsSetLabels();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<long> get_ParameterVersion();
    public void set_ParameterVersion(Nullable`1<long> value);
    internal bool IsSetParameterVersion();
}
public class Amazon.SimpleSystemsManagement.Model.UnlabelParameterVersionResponse : AmazonWebServiceResponse {
    private List`1<string> _invalidLabels;
    private List`1<string> _removedLabels;
    [AWSPropertyAttribute]
public List`1<string> InvalidLabels { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> RemovedLabels { get; public set; }
    public List`1<string> get_InvalidLabels();
    public void set_InvalidLabels(List`1<string> value);
    internal bool IsSetInvalidLabels();
    public List`1<string> get_RemovedLabels();
    public void set_RemovedLabels(List`1<string> value);
    internal bool IsSetRemovedLabels();
}
public class Amazon.SimpleSystemsManagement.Model.UnsupportedCalendarException : AmazonSimpleSystemsManagementException {
    public UnsupportedCalendarException(string message);
    public UnsupportedCalendarException(string message, Exception innerException);
    public UnsupportedCalendarException(Exception innerException);
    public UnsupportedCalendarException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnsupportedCalendarException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.UnsupportedFeatureRequiredException : AmazonSimpleSystemsManagementException {
    public UnsupportedFeatureRequiredException(string message);
    public UnsupportedFeatureRequiredException(string message, Exception innerException);
    public UnsupportedFeatureRequiredException(Exception innerException);
    public UnsupportedFeatureRequiredException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnsupportedFeatureRequiredException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.UnsupportedInventoryItemContextException : AmazonSimpleSystemsManagementException {
    private string _typeName;
    [AWSPropertyAttribute]
public string TypeName { get; public set; }
    public UnsupportedInventoryItemContextException(string message);
    public UnsupportedInventoryItemContextException(string message, Exception innerException);
    public UnsupportedInventoryItemContextException(Exception innerException);
    public UnsupportedInventoryItemContextException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnsupportedInventoryItemContextException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_TypeName();
    public void set_TypeName(string value);
    internal bool IsSetTypeName();
}
public class Amazon.SimpleSystemsManagement.Model.UnsupportedInventorySchemaVersionException : AmazonSimpleSystemsManagementException {
    public UnsupportedInventorySchemaVersionException(string message);
    public UnsupportedInventorySchemaVersionException(string message, Exception innerException);
    public UnsupportedInventorySchemaVersionException(Exception innerException);
    public UnsupportedInventorySchemaVersionException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnsupportedInventorySchemaVersionException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.UnsupportedOperatingSystemException : AmazonSimpleSystemsManagementException {
    public UnsupportedOperatingSystemException(string message);
    public UnsupportedOperatingSystemException(string message, Exception innerException);
    public UnsupportedOperatingSystemException(Exception innerException);
    public UnsupportedOperatingSystemException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnsupportedOperatingSystemException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.UnsupportedParameterTypeException : AmazonSimpleSystemsManagementException {
    public UnsupportedParameterTypeException(string message);
    public UnsupportedParameterTypeException(string message, Exception innerException);
    public UnsupportedParameterTypeException(Exception innerException);
    public UnsupportedParameterTypeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnsupportedParameterTypeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.UnsupportedPlatformTypeException : AmazonSimpleSystemsManagementException {
    public UnsupportedPlatformTypeException(string message);
    public UnsupportedPlatformTypeException(string message, Exception innerException);
    public UnsupportedPlatformTypeException(Exception innerException);
    public UnsupportedPlatformTypeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnsupportedPlatformTypeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleSystemsManagement.Model.UpdateAssociationRequest : AmazonSimpleSystemsManagementRequest {
    private AlarmConfiguration _alarmConfiguration;
    private Nullable`1<bool> _applyOnlyAtCronInterval;
    private string _associationId;
    private string _associationName;
    private string _associationVersion;
    private string _automationTargetParameterName;
    private List`1<string> _calendarNames;
    private AssociationComplianceSeverity _complianceSeverity;
    private string _documentVersion;
    private Nullable`1<int> _duration;
    private string _maxConcurrency;
    private string _maxErrors;
    private string _name;
    private InstanceAssociationOutputLocation _outputLocation;
    private Dictionary`2<string, List`1<string>> _parameters;
    private string _scheduleExpression;
    private Nullable`1<int> _scheduleOffset;
    private AssociationSyncCompliance _syncCompliance;
    private List`1<TargetLocation> _targetLocations;
    private List`1<Dictionary`2<string, List`1<string>>> _targetMaps;
    private List`1<Target> _targets;
    public AlarmConfiguration AlarmConfiguration { get; public set; }
    public Nullable`1<bool> ApplyOnlyAtCronInterval { get; public set; }
    [AWSPropertyAttribute]
public string AssociationId { get; public set; }
    public string AssociationName { get; public set; }
    public string AssociationVersion { get; public set; }
    [AWSPropertyAttribute]
public string AutomationTargetParameterName { get; public set; }
    public List`1<string> CalendarNames { get; public set; }
    public AssociationComplianceSeverity ComplianceSeverity { get; public set; }
    public string DocumentVersion { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Duration { get; public set; }
    [AWSPropertyAttribute]
public string MaxConcurrency { get; public set; }
    [AWSPropertyAttribute]
public string MaxErrors { get; public set; }
    public string Name { get; public set; }
    public InstanceAssociationOutputLocation OutputLocation { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, List`1<string>> Parameters { get; public set; }
    [AWSPropertyAttribute]
public string ScheduleExpression { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ScheduleOffset { get; public set; }
    public AssociationSyncCompliance SyncCompliance { get; public set; }
    [AWSPropertyAttribute]
public List`1<TargetLocation> TargetLocations { get; public set; }
    [AWSPropertyAttribute]
public List`1<Dictionary`2<string, List`1<string>>> TargetMaps { get; public set; }
    [AWSPropertyAttribute]
public List`1<Target> Targets { get; public set; }
    public AlarmConfiguration get_AlarmConfiguration();
    public void set_AlarmConfiguration(AlarmConfiguration value);
    internal bool IsSetAlarmConfiguration();
    public Nullable`1<bool> get_ApplyOnlyAtCronInterval();
    public void set_ApplyOnlyAtCronInterval(Nullable`1<bool> value);
    internal bool IsSetApplyOnlyAtCronInterval();
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_AssociationName();
    public void set_AssociationName(string value);
    internal bool IsSetAssociationName();
    public string get_AssociationVersion();
    public void set_AssociationVersion(string value);
    internal bool IsSetAssociationVersion();
    public string get_AutomationTargetParameterName();
    public void set_AutomationTargetParameterName(string value);
    internal bool IsSetAutomationTargetParameterName();
    public List`1<string> get_CalendarNames();
    public void set_CalendarNames(List`1<string> value);
    internal bool IsSetCalendarNames();
    public AssociationComplianceSeverity get_ComplianceSeverity();
    public void set_ComplianceSeverity(AssociationComplianceSeverity value);
    internal bool IsSetComplianceSeverity();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public Nullable`1<int> get_Duration();
    public void set_Duration(Nullable`1<int> value);
    internal bool IsSetDuration();
    public string get_MaxConcurrency();
    public void set_MaxConcurrency(string value);
    internal bool IsSetMaxConcurrency();
    public string get_MaxErrors();
    public void set_MaxErrors(string value);
    internal bool IsSetMaxErrors();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public InstanceAssociationOutputLocation get_OutputLocation();
    public void set_OutputLocation(InstanceAssociationOutputLocation value);
    internal bool IsSetOutputLocation();
    public Dictionary`2<string, List`1<string>> get_Parameters();
    public void set_Parameters(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetParameters();
    public string get_ScheduleExpression();
    public void set_ScheduleExpression(string value);
    internal bool IsSetScheduleExpression();
    public Nullable`1<int> get_ScheduleOffset();
    public void set_ScheduleOffset(Nullable`1<int> value);
    internal bool IsSetScheduleOffset();
    public AssociationSyncCompliance get_SyncCompliance();
    public void set_SyncCompliance(AssociationSyncCompliance value);
    internal bool IsSetSyncCompliance();
    public List`1<TargetLocation> get_TargetLocations();
    public void set_TargetLocations(List`1<TargetLocation> value);
    internal bool IsSetTargetLocations();
    public List`1<Dictionary`2<string, List`1<string>>> get_TargetMaps();
    public void set_TargetMaps(List`1<Dictionary`2<string, List`1<string>>> value);
    internal bool IsSetTargetMaps();
    public List`1<Target> get_Targets();
    public void set_Targets(List`1<Target> value);
    internal bool IsSetTargets();
}
public class Amazon.SimpleSystemsManagement.Model.UpdateAssociationResponse : AmazonWebServiceResponse {
    private AssociationDescription _associationDescription;
    public AssociationDescription AssociationDescription { get; public set; }
    public AssociationDescription get_AssociationDescription();
    public void set_AssociationDescription(AssociationDescription value);
    internal bool IsSetAssociationDescription();
}
public class Amazon.SimpleSystemsManagement.Model.UpdateAssociationStatusRequest : AmazonSimpleSystemsManagementRequest {
    private AssociationStatus _associationStatus;
    private string _instanceId;
    private string _name;
    [AWSPropertyAttribute]
public AssociationStatus AssociationStatus { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public UpdateAssociationStatusRequest(AssociationStatus associationStatus, string instanceId, string name);
    public AssociationStatus get_AssociationStatus();
    public void set_AssociationStatus(AssociationStatus value);
    internal bool IsSetAssociationStatus();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleSystemsManagement.Model.UpdateAssociationStatusResponse : AmazonWebServiceResponse {
    private AssociationDescription _associationDescription;
    public AssociationDescription AssociationDescription { get; public set; }
    public AssociationDescription get_AssociationDescription();
    public void set_AssociationDescription(AssociationDescription value);
    internal bool IsSetAssociationDescription();
}
public class Amazon.SimpleSystemsManagement.Model.UpdateDocumentDefaultVersionRequest : AmazonSimpleSystemsManagementRequest {
    private string _documentVersion;
    private string _name;
    [AWSPropertyAttribute]
public string DocumentVersion { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleSystemsManagement.Model.UpdateDocumentDefaultVersionResponse : AmazonWebServiceResponse {
    private DocumentDefaultVersionDescription _description;
    public DocumentDefaultVersionDescription Description { get; public set; }
    public DocumentDefaultVersionDescription get_Description();
    public void set_Description(DocumentDefaultVersionDescription value);
    internal bool IsSetDescription();
}
public class Amazon.SimpleSystemsManagement.Model.UpdateDocumentMetadataRequest : AmazonSimpleSystemsManagementRequest {
    private DocumentReviews _documentReviews;
    private string _documentVersion;
    private string _name;
    [AWSPropertyAttribute]
public DocumentReviews DocumentReviews { get; public set; }
    public string DocumentVersion { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public DocumentReviews get_DocumentReviews();
    public void set_DocumentReviews(DocumentReviews value);
    internal bool IsSetDocumentReviews();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleSystemsManagement.Model.UpdateDocumentMetadataResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleSystemsManagement.Model.UpdateDocumentRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<AttachmentsSource> _attachments;
    private string _content;
    private string _displayName;
    private DocumentFormat _documentFormat;
    private string _documentVersion;
    private string _name;
    private string _targetType;
    private string _versionName;
    [AWSPropertyAttribute]
public List`1<AttachmentsSource> Attachments { get; public set; }
    [AWSPropertyAttribute]
public string Content { get; public set; }
    [AWSPropertyAttribute]
public string DisplayName { get; public set; }
    public DocumentFormat DocumentFormat { get; public set; }
    public string DocumentVersion { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string TargetType { get; public set; }
    public string VersionName { get; public set; }
    public List`1<AttachmentsSource> get_Attachments();
    public void set_Attachments(List`1<AttachmentsSource> value);
    internal bool IsSetAttachments();
    public string get_Content();
    public void set_Content(string value);
    internal bool IsSetContent();
    public string get_DisplayName();
    public void set_DisplayName(string value);
    internal bool IsSetDisplayName();
    public DocumentFormat get_DocumentFormat();
    public void set_DocumentFormat(DocumentFormat value);
    internal bool IsSetDocumentFormat();
    public string get_DocumentVersion();
    public void set_DocumentVersion(string value);
    internal bool IsSetDocumentVersion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_TargetType();
    public void set_TargetType(string value);
    internal bool IsSetTargetType();
    public string get_VersionName();
    public void set_VersionName(string value);
    internal bool IsSetVersionName();
}
public class Amazon.SimpleSystemsManagement.Model.UpdateDocumentResponse : AmazonWebServiceResponse {
    private DocumentDescription _documentDescription;
    public DocumentDescription DocumentDescription { get; public set; }
    public DocumentDescription get_DocumentDescription();
    public void set_DocumentDescription(DocumentDescription value);
    internal bool IsSetDocumentDescription();
}
public class Amazon.SimpleSystemsManagement.Model.UpdateMaintenanceWindowRequest : AmazonSimpleSystemsManagementRequest {
    private Nullable`1<bool> _allowUnassociatedTargets;
    private Nullable`1<int> _cutoff;
    private string _description;
    private Nullable`1<int> _duration;
    private Nullable`1<bool> _enabled;
    private string _endDate;
    private string _name;
    private Nullable`1<bool> _replace;
    private string _schedule;
    private Nullable`1<int> _scheduleOffset;
    private string _scheduleTimezone;
    private string _startDate;
    private string _windowId;
    public Nullable`1<bool> AllowUnassociatedTargets { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Cutoff { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Duration { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    public string EndDate { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<bool> Replace { get; public set; }
    [AWSPropertyAttribute]
public string Schedule { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ScheduleOffset { get; public set; }
    public string ScheduleTimezone { get; public set; }
    public string StartDate { get; public set; }
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    public Nullable`1<bool> get_AllowUnassociatedTargets();
    public void set_AllowUnassociatedTargets(Nullable`1<bool> value);
    internal bool IsSetAllowUnassociatedTargets();
    public Nullable`1<int> get_Cutoff();
    public void set_Cutoff(Nullable`1<int> value);
    internal bool IsSetCutoff();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<int> get_Duration();
    public void set_Duration(Nullable`1<int> value);
    internal bool IsSetDuration();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public string get_EndDate();
    public void set_EndDate(string value);
    internal bool IsSetEndDate();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<bool> get_Replace();
    public void set_Replace(Nullable`1<bool> value);
    internal bool IsSetReplace();
    public string get_Schedule();
    public void set_Schedule(string value);
    internal bool IsSetSchedule();
    public Nullable`1<int> get_ScheduleOffset();
    public void set_ScheduleOffset(Nullable`1<int> value);
    internal bool IsSetScheduleOffset();
    public string get_ScheduleTimezone();
    public void set_ScheduleTimezone(string value);
    internal bool IsSetScheduleTimezone();
    public string get_StartDate();
    public void set_StartDate(string value);
    internal bool IsSetStartDate();
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
}
public class Amazon.SimpleSystemsManagement.Model.UpdateMaintenanceWindowResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _allowUnassociatedTargets;
    private Nullable`1<int> _cutoff;
    private string _description;
    private Nullable`1<int> _duration;
    private Nullable`1<bool> _enabled;
    private string _endDate;
    private string _name;
    private string _schedule;
    private Nullable`1<int> _scheduleOffset;
    private string _scheduleTimezone;
    private string _startDate;
    private string _windowId;
    public Nullable`1<bool> AllowUnassociatedTargets { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Cutoff { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Duration { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    public string EndDate { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Schedule { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ScheduleOffset { get; public set; }
    public string ScheduleTimezone { get; public set; }
    public string StartDate { get; public set; }
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    public Nullable`1<bool> get_AllowUnassociatedTargets();
    public void set_AllowUnassociatedTargets(Nullable`1<bool> value);
    internal bool IsSetAllowUnassociatedTargets();
    public Nullable`1<int> get_Cutoff();
    public void set_Cutoff(Nullable`1<int> value);
    internal bool IsSetCutoff();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<int> get_Duration();
    public void set_Duration(Nullable`1<int> value);
    internal bool IsSetDuration();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public string get_EndDate();
    public void set_EndDate(string value);
    internal bool IsSetEndDate();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Schedule();
    public void set_Schedule(string value);
    internal bool IsSetSchedule();
    public Nullable`1<int> get_ScheduleOffset();
    public void set_ScheduleOffset(Nullable`1<int> value);
    internal bool IsSetScheduleOffset();
    public string get_ScheduleTimezone();
    public void set_ScheduleTimezone(string value);
    internal bool IsSetScheduleTimezone();
    public string get_StartDate();
    public void set_StartDate(string value);
    internal bool IsSetStartDate();
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
}
public class Amazon.SimpleSystemsManagement.Model.UpdateMaintenanceWindowTargetRequest : AmazonSimpleSystemsManagementRequest {
    private string _description;
    private string _name;
    private string _ownerInformation;
    private Nullable`1<bool> _replace;
    private List`1<Target> _targets;
    private string _windowId;
    private string _windowTargetId;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string OwnerInformation { get; public set; }
    public Nullable`1<bool> Replace { get; public set; }
    [AWSPropertyAttribute]
public List`1<Target> Targets { get; public set; }
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    [AWSPropertyAttribute]
public string WindowTargetId { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_OwnerInformation();
    public void set_OwnerInformation(string value);
    internal bool IsSetOwnerInformation();
    public Nullable`1<bool> get_Replace();
    public void set_Replace(Nullable`1<bool> value);
    internal bool IsSetReplace();
    public List`1<Target> get_Targets();
    public void set_Targets(List`1<Target> value);
    internal bool IsSetTargets();
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
    public string get_WindowTargetId();
    public void set_WindowTargetId(string value);
    internal bool IsSetWindowTargetId();
}
public class Amazon.SimpleSystemsManagement.Model.UpdateMaintenanceWindowTargetResponse : AmazonWebServiceResponse {
    private string _description;
    private string _name;
    private string _ownerInformation;
    private List`1<Target> _targets;
    private string _windowId;
    private string _windowTargetId;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string OwnerInformation { get; public set; }
    [AWSPropertyAttribute]
public List`1<Target> Targets { get; public set; }
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    [AWSPropertyAttribute]
public string WindowTargetId { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_OwnerInformation();
    public void set_OwnerInformation(string value);
    internal bool IsSetOwnerInformation();
    public List`1<Target> get_Targets();
    public void set_Targets(List`1<Target> value);
    internal bool IsSetTargets();
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
    public string get_WindowTargetId();
    public void set_WindowTargetId(string value);
    internal bool IsSetWindowTargetId();
}
public class Amazon.SimpleSystemsManagement.Model.UpdateMaintenanceWindowTaskRequest : AmazonSimpleSystemsManagementRequest {
    private AlarmConfiguration _alarmConfiguration;
    private MaintenanceWindowTaskCutoffBehavior _cutoffBehavior;
    private string _description;
    private LoggingInfo _loggingInfo;
    private string _maxConcurrency;
    private string _maxErrors;
    private string _name;
    private Nullable`1<int> _priority;
    private Nullable`1<bool> _replace;
    private string _serviceRoleArn;
    private List`1<Target> _targets;
    private string _taskArn;
    private MaintenanceWindowTaskInvocationParameters _taskInvocationParameters;
    private Dictionary`2<string, MaintenanceWindowTaskParameterValueExpression> _taskParameters;
    private string _windowId;
    private string _windowTaskId;
    public AlarmConfiguration AlarmConfiguration { get; public set; }
    public MaintenanceWindowTaskCutoffBehavior CutoffBehavior { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public LoggingInfo LoggingInfo { get; public set; }
    [AWSPropertyAttribute]
public string MaxConcurrency { get; public set; }
    [AWSPropertyAttribute]
public string MaxErrors { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    public Nullable`1<bool> Replace { get; public set; }
    public string ServiceRoleArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<Target> Targets { get; public set; }
    [AWSPropertyAttribute]
public string TaskArn { get; public set; }
    public MaintenanceWindowTaskInvocationParameters TaskInvocationParameters { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, MaintenanceWindowTaskParameterValueExpression> TaskParameters { get; public set; }
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    [AWSPropertyAttribute]
public string WindowTaskId { get; public set; }
    public AlarmConfiguration get_AlarmConfiguration();
    public void set_AlarmConfiguration(AlarmConfiguration value);
    internal bool IsSetAlarmConfiguration();
    public MaintenanceWindowTaskCutoffBehavior get_CutoffBehavior();
    public void set_CutoffBehavior(MaintenanceWindowTaskCutoffBehavior value);
    internal bool IsSetCutoffBehavior();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public LoggingInfo get_LoggingInfo();
    public void set_LoggingInfo(LoggingInfo value);
    internal bool IsSetLoggingInfo();
    public string get_MaxConcurrency();
    public void set_MaxConcurrency(string value);
    internal bool IsSetMaxConcurrency();
    public string get_MaxErrors();
    public void set_MaxErrors(string value);
    internal bool IsSetMaxErrors();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
    public Nullable`1<bool> get_Replace();
    public void set_Replace(Nullable`1<bool> value);
    internal bool IsSetReplace();
    public string get_ServiceRoleArn();
    public void set_ServiceRoleArn(string value);
    internal bool IsSetServiceRoleArn();
    public List`1<Target> get_Targets();
    public void set_Targets(List`1<Target> value);
    internal bool IsSetTargets();
    public string get_TaskArn();
    public void set_TaskArn(string value);
    internal bool IsSetTaskArn();
    public MaintenanceWindowTaskInvocationParameters get_TaskInvocationParameters();
    public void set_TaskInvocationParameters(MaintenanceWindowTaskInvocationParameters value);
    internal bool IsSetTaskInvocationParameters();
    public Dictionary`2<string, MaintenanceWindowTaskParameterValueExpression> get_TaskParameters();
    public void set_TaskParameters(Dictionary`2<string, MaintenanceWindowTaskParameterValueExpression> value);
    internal bool IsSetTaskParameters();
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
    public string get_WindowTaskId();
    public void set_WindowTaskId(string value);
    internal bool IsSetWindowTaskId();
}
public class Amazon.SimpleSystemsManagement.Model.UpdateMaintenanceWindowTaskResponse : AmazonWebServiceResponse {
    private AlarmConfiguration _alarmConfiguration;
    private MaintenanceWindowTaskCutoffBehavior _cutoffBehavior;
    private string _description;
    private LoggingInfo _loggingInfo;
    private string _maxConcurrency;
    private string _maxErrors;
    private string _name;
    private Nullable`1<int> _priority;
    private string _serviceRoleArn;
    private List`1<Target> _targets;
    private string _taskArn;
    private MaintenanceWindowTaskInvocationParameters _taskInvocationParameters;
    private Dictionary`2<string, MaintenanceWindowTaskParameterValueExpression> _taskParameters;
    private string _windowId;
    private string _windowTaskId;
    public AlarmConfiguration AlarmConfiguration { get; public set; }
    public MaintenanceWindowTaskCutoffBehavior CutoffBehavior { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public LoggingInfo LoggingInfo { get; public set; }
    [AWSPropertyAttribute]
public string MaxConcurrency { get; public set; }
    [AWSPropertyAttribute]
public string MaxErrors { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    public string ServiceRoleArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<Target> Targets { get; public set; }
    [AWSPropertyAttribute]
public string TaskArn { get; public set; }
    public MaintenanceWindowTaskInvocationParameters TaskInvocationParameters { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, MaintenanceWindowTaskParameterValueExpression> TaskParameters { get; public set; }
    [AWSPropertyAttribute]
public string WindowId { get; public set; }
    [AWSPropertyAttribute]
public string WindowTaskId { get; public set; }
    public AlarmConfiguration get_AlarmConfiguration();
    public void set_AlarmConfiguration(AlarmConfiguration value);
    internal bool IsSetAlarmConfiguration();
    public MaintenanceWindowTaskCutoffBehavior get_CutoffBehavior();
    public void set_CutoffBehavior(MaintenanceWindowTaskCutoffBehavior value);
    internal bool IsSetCutoffBehavior();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public LoggingInfo get_LoggingInfo();
    public void set_LoggingInfo(LoggingInfo value);
    internal bool IsSetLoggingInfo();
    public string get_MaxConcurrency();
    public void set_MaxConcurrency(string value);
    internal bool IsSetMaxConcurrency();
    public string get_MaxErrors();
    public void set_MaxErrors(string value);
    internal bool IsSetMaxErrors();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
    public string get_ServiceRoleArn();
    public void set_ServiceRoleArn(string value);
    internal bool IsSetServiceRoleArn();
    public List`1<Target> get_Targets();
    public void set_Targets(List`1<Target> value);
    internal bool IsSetTargets();
    public string get_TaskArn();
    public void set_TaskArn(string value);
    internal bool IsSetTaskArn();
    public MaintenanceWindowTaskInvocationParameters get_TaskInvocationParameters();
    public void set_TaskInvocationParameters(MaintenanceWindowTaskInvocationParameters value);
    internal bool IsSetTaskInvocationParameters();
    public Dictionary`2<string, MaintenanceWindowTaskParameterValueExpression> get_TaskParameters();
    public void set_TaskParameters(Dictionary`2<string, MaintenanceWindowTaskParameterValueExpression> value);
    internal bool IsSetTaskParameters();
    public string get_WindowId();
    public void set_WindowId(string value);
    internal bool IsSetWindowId();
    public string get_WindowTaskId();
    public void set_WindowTaskId(string value);
    internal bool IsSetWindowTaskId();
}
public class Amazon.SimpleSystemsManagement.Model.UpdateManagedInstanceRoleRequest : AmazonSimpleSystemsManagementRequest {
    private string _iamRole;
    private string _instanceId;
    [AWSPropertyAttribute]
public string IamRole { get; public set; }
    [AWSPropertyAttribute]
public string InstanceId { get; public set; }
    public string get_IamRole();
    public void set_IamRole(string value);
    internal bool IsSetIamRole();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.SimpleSystemsManagement.Model.UpdateManagedInstanceRoleResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleSystemsManagement.Model.UpdateOpsItemRequest : AmazonSimpleSystemsManagementRequest {
    private Nullable`1<DateTime> _actualEndTime;
    private Nullable`1<DateTime> _actualStartTime;
    private string _category;
    private string _description;
    private List`1<OpsItemNotification> _notifications;
    private Dictionary`2<string, OpsItemDataValue> _operationalData;
    private List`1<string> _operationalDataToDelete;
    private string _opsItemArn;
    private string _opsItemId;
    private Nullable`1<DateTime> _plannedEndTime;
    private Nullable`1<DateTime> _plannedStartTime;
    private Nullable`1<int> _priority;
    private List`1<RelatedOpsItem> _relatedOpsItems;
    private string _severity;
    private OpsItemStatus _status;
    private string _title;
    public Nullable`1<DateTime> ActualEndTime { get; public set; }
    public Nullable`1<DateTime> ActualStartTime { get; public set; }
    [AWSPropertyAttribute]
public string Category { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public List`1<OpsItemNotification> Notifications { get; public set; }
    public Dictionary`2<string, OpsItemDataValue> OperationalData { get; public set; }
    public List`1<string> OperationalDataToDelete { get; public set; }
    [AWSPropertyAttribute]
public string OpsItemArn { get; public set; }
    [AWSPropertyAttribute]
public string OpsItemId { get; public set; }
    public Nullable`1<DateTime> PlannedEndTime { get; public set; }
    public Nullable`1<DateTime> PlannedStartTime { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    public List`1<RelatedOpsItem> RelatedOpsItems { get; public set; }
    [AWSPropertyAttribute]
public string Severity { get; public set; }
    public OpsItemStatus Status { get; public set; }
    [AWSPropertyAttribute]
public string Title { get; public set; }
    public Nullable`1<DateTime> get_ActualEndTime();
    public void set_ActualEndTime(Nullable`1<DateTime> value);
    internal bool IsSetActualEndTime();
    public Nullable`1<DateTime> get_ActualStartTime();
    public void set_ActualStartTime(Nullable`1<DateTime> value);
    internal bool IsSetActualStartTime();
    public string get_Category();
    public void set_Category(string value);
    internal bool IsSetCategory();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<OpsItemNotification> get_Notifications();
    public void set_Notifications(List`1<OpsItemNotification> value);
    internal bool IsSetNotifications();
    public Dictionary`2<string, OpsItemDataValue> get_OperationalData();
    public void set_OperationalData(Dictionary`2<string, OpsItemDataValue> value);
    internal bool IsSetOperationalData();
    public List`1<string> get_OperationalDataToDelete();
    public void set_OperationalDataToDelete(List`1<string> value);
    internal bool IsSetOperationalDataToDelete();
    public string get_OpsItemArn();
    public void set_OpsItemArn(string value);
    internal bool IsSetOpsItemArn();
    public string get_OpsItemId();
    public void set_OpsItemId(string value);
    internal bool IsSetOpsItemId();
    public Nullable`1<DateTime> get_PlannedEndTime();
    public void set_PlannedEndTime(Nullable`1<DateTime> value);
    internal bool IsSetPlannedEndTime();
    public Nullable`1<DateTime> get_PlannedStartTime();
    public void set_PlannedStartTime(Nullable`1<DateTime> value);
    internal bool IsSetPlannedStartTime();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
    public List`1<RelatedOpsItem> get_RelatedOpsItems();
    public void set_RelatedOpsItems(List`1<RelatedOpsItem> value);
    internal bool IsSetRelatedOpsItems();
    public string get_Severity();
    public void set_Severity(string value);
    internal bool IsSetSeverity();
    public OpsItemStatus get_Status();
    public void set_Status(OpsItemStatus value);
    internal bool IsSetStatus();
    public string get_Title();
    public void set_Title(string value);
    internal bool IsSetTitle();
}
public class Amazon.SimpleSystemsManagement.Model.UpdateOpsItemResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleSystemsManagement.Model.UpdateOpsMetadataRequest : AmazonSimpleSystemsManagementRequest {
    private List`1<string> _keysToDelete;
    private Dictionary`2<string, MetadataValue> _metadataToUpdate;
    private string _opsMetadataArn;
    [AWSPropertyAttribute]
public List`1<string> KeysToDelete { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, MetadataValue> MetadataToUpdate { get; public set; }
    [AWSPropertyAttribute]
public string OpsMetadataArn { get; public set; }
    public List`1<string> get_KeysToDelete();
    public void set_KeysToDelete(List`1<string> value);
    internal bool IsSetKeysToDelete();
    public Dictionary`2<string, MetadataValue> get_MetadataToUpdate();
    public void set_MetadataToUpdate(Dictionary`2<string, MetadataValue> value);
    internal bool IsSetMetadataToUpdate();
    public string get_OpsMetadataArn();
    public void set_OpsMetadataArn(string value);
    internal bool IsSetOpsMetadataArn();
}
public class Amazon.SimpleSystemsManagement.Model.UpdateOpsMetadataResponse : AmazonWebServiceResponse {
    private string _opsMetadataArn;
    [AWSPropertyAttribute]
public string OpsMetadataArn { get; public set; }
    public string get_OpsMetadataArn();
    public void set_OpsMetadataArn(string value);
    internal bool IsSetOpsMetadataArn();
}
public class Amazon.SimpleSystemsManagement.Model.UpdatePatchBaselineRequest : AmazonSimpleSystemsManagementRequest {
    private PatchRuleGroup _approvalRules;
    private List`1<string> _approvedPatches;
    private PatchComplianceLevel _approvedPatchesComplianceLevel;
    private Nullable`1<bool> _approvedPatchesEnableNonSecurity;
    private string _baselineId;
    private string _description;
    private PatchFilterGroup _globalFilters;
    private string _name;
    private List`1<string> _rejectedPatches;
    private PatchAction _rejectedPatchesAction;
    private Nullable`1<bool> _replace;
    private List`1<PatchSource> _sources;
    public PatchRuleGroup ApprovalRules { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ApprovedPatches { get; public set; }
    public PatchComplianceLevel ApprovedPatchesComplianceLevel { get; public set; }
    public Nullable`1<bool> ApprovedPatchesEnableNonSecurity { get; public set; }
    [AWSPropertyAttribute]
public string BaselineId { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public PatchFilterGroup GlobalFilters { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> RejectedPatches { get; public set; }
    public PatchAction RejectedPatchesAction { get; public set; }
    public Nullable`1<bool> Replace { get; public set; }
    [AWSPropertyAttribute]
public List`1<PatchSource> Sources { get; public set; }
    public PatchRuleGroup get_ApprovalRules();
    public void set_ApprovalRules(PatchRuleGroup value);
    internal bool IsSetApprovalRules();
    public List`1<string> get_ApprovedPatches();
    public void set_ApprovedPatches(List`1<string> value);
    internal bool IsSetApprovedPatches();
    public PatchComplianceLevel get_ApprovedPatchesComplianceLevel();
    public void set_ApprovedPatchesComplianceLevel(PatchComplianceLevel value);
    internal bool IsSetApprovedPatchesComplianceLevel();
    public Nullable`1<bool> get_ApprovedPatchesEnableNonSecurity();
    public void set_ApprovedPatchesEnableNonSecurity(Nullable`1<bool> value);
    internal bool IsSetApprovedPatchesEnableNonSecurity();
    public string get_BaselineId();
    public void set_BaselineId(string value);
    internal bool IsSetBaselineId();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public PatchFilterGroup get_GlobalFilters();
    public void set_GlobalFilters(PatchFilterGroup value);
    internal bool IsSetGlobalFilters();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_RejectedPatches();
    public void set_RejectedPatches(List`1<string> value);
    internal bool IsSetRejectedPatches();
    public PatchAction get_RejectedPatchesAction();
    public void set_RejectedPatchesAction(PatchAction value);
    internal bool IsSetRejectedPatchesAction();
    public Nullable`1<bool> get_Replace();
    public void set_Replace(Nullable`1<bool> value);
    internal bool IsSetReplace();
    public List`1<PatchSource> get_Sources();
    public void set_Sources(List`1<PatchSource> value);
    internal bool IsSetSources();
}
public class Amazon.SimpleSystemsManagement.Model.UpdatePatchBaselineResponse : AmazonWebServiceResponse {
    private PatchRuleGroup _approvalRules;
    private List`1<string> _approvedPatches;
    private PatchComplianceLevel _approvedPatchesComplianceLevel;
    private Nullable`1<bool> _approvedPatchesEnableNonSecurity;
    private string _baselineId;
    private Nullable`1<DateTime> _createdDate;
    private string _description;
    private PatchFilterGroup _globalFilters;
    private Nullable`1<DateTime> _modifiedDate;
    private string _name;
    private OperatingSystem _operatingSystem;
    private List`1<string> _rejectedPatches;
    private PatchAction _rejectedPatchesAction;
    private List`1<PatchSource> _sources;
    public PatchRuleGroup ApprovalRules { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ApprovedPatches { get; public set; }
    public PatchComplianceLevel ApprovedPatchesComplianceLevel { get; public set; }
    public Nullable`1<bool> ApprovedPatchesEnableNonSecurity { get; public set; }
    [AWSPropertyAttribute]
public string BaselineId { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public PatchFilterGroup GlobalFilters { get; public set; }
    public Nullable`1<DateTime> ModifiedDate { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public OperatingSystem OperatingSystem { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> RejectedPatches { get; public set; }
    public PatchAction RejectedPatchesAction { get; public set; }
    [AWSPropertyAttribute]
public List`1<PatchSource> Sources { get; public set; }
    public PatchRuleGroup get_ApprovalRules();
    public void set_ApprovalRules(PatchRuleGroup value);
    internal bool IsSetApprovalRules();
    public List`1<string> get_ApprovedPatches();
    public void set_ApprovedPatches(List`1<string> value);
    internal bool IsSetApprovedPatches();
    public PatchComplianceLevel get_ApprovedPatchesComplianceLevel();
    public void set_ApprovedPatchesComplianceLevel(PatchComplianceLevel value);
    internal bool IsSetApprovedPatchesComplianceLevel();
    public Nullable`1<bool> get_ApprovedPatchesEnableNonSecurity();
    public void set_ApprovedPatchesEnableNonSecurity(Nullable`1<bool> value);
    internal bool IsSetApprovedPatchesEnableNonSecurity();
    public string get_BaselineId();
    public void set_BaselineId(string value);
    internal bool IsSetBaselineId();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public PatchFilterGroup get_GlobalFilters();
    public void set_GlobalFilters(PatchFilterGroup value);
    internal bool IsSetGlobalFilters();
    public Nullable`1<DateTime> get_ModifiedDate();
    public void set_ModifiedDate(Nullable`1<DateTime> value);
    internal bool IsSetModifiedDate();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public OperatingSystem get_OperatingSystem();
    public void set_OperatingSystem(OperatingSystem value);
    internal bool IsSetOperatingSystem();
    public List`1<string> get_RejectedPatches();
    public void set_RejectedPatches(List`1<string> value);
    internal bool IsSetRejectedPatches();
    public PatchAction get_RejectedPatchesAction();
    public void set_RejectedPatchesAction(PatchAction value);
    internal bool IsSetRejectedPatchesAction();
    public List`1<PatchSource> get_Sources();
    public void set_Sources(List`1<PatchSource> value);
    internal bool IsSetSources();
}
public class Amazon.SimpleSystemsManagement.Model.UpdateResourceDataSyncRequest : AmazonSimpleSystemsManagementRequest {
    private string _syncName;
    private ResourceDataSyncSource _syncSource;
    private string _syncType;
    [AWSPropertyAttribute]
public string SyncName { get; public set; }
    [AWSPropertyAttribute]
public ResourceDataSyncSource SyncSource { get; public set; }
    [AWSPropertyAttribute]
public string SyncType { get; public set; }
    public string get_SyncName();
    public void set_SyncName(string value);
    internal bool IsSetSyncName();
    public ResourceDataSyncSource get_SyncSource();
    public void set_SyncSource(ResourceDataSyncSource value);
    internal bool IsSetSyncSource();
    public string get_SyncType();
    public void set_SyncType(string value);
    internal bool IsSetSyncType();
}
public class Amazon.SimpleSystemsManagement.Model.UpdateResourceDataSyncResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleSystemsManagement.Model.UpdateServiceSettingRequest : AmazonSimpleSystemsManagementRequest {
    private string _settingId;
    private string _settingValue;
    [AWSPropertyAttribute]
public string SettingId { get; public set; }
    [AWSPropertyAttribute]
public string SettingValue { get; public set; }
    public string get_SettingId();
    public void set_SettingId(string value);
    internal bool IsSetSettingId();
    public string get_SettingValue();
    public void set_SettingValue(string value);
    internal bool IsSetSettingValue();
}
public class Amazon.SimpleSystemsManagement.Model.UpdateServiceSettingResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleSystemsManagement.NotificationEvent : ConstantClass {
    public static NotificationEvent All;
    public static NotificationEvent Cancelled;
    public static NotificationEvent Failed;
    public static NotificationEvent InProgress;
    public static NotificationEvent Success;
    public static NotificationEvent TimedOut;
    public NotificationEvent(string value);
    private static NotificationEvent();
    public static NotificationEvent FindValue(string value);
    public static NotificationEvent op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.NotificationType : ConstantClass {
    public static NotificationType Command;
    public static NotificationType Invocation;
    public NotificationType(string value);
    private static NotificationType();
    public static NotificationType FindValue(string value);
    public static NotificationType op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.OperatingSystem : ConstantClass {
    public static OperatingSystem ALMA_LINUX;
    public static OperatingSystem AMAZON_LINUX;
    public static OperatingSystem AMAZON_LINUX_2;
    public static OperatingSystem AMAZON_LINUX_2022;
    public static OperatingSystem AMAZON_LINUX_2023;
    public static OperatingSystem CENTOS;
    public static OperatingSystem DEBIAN;
    public static OperatingSystem MACOS;
    public static OperatingSystem ORACLE_LINUX;
    public static OperatingSystem RASPBIAN;
    public static OperatingSystem REDHAT_ENTERPRISE_LINUX;
    public static OperatingSystem ROCKY_LINUX;
    public static OperatingSystem SUSE;
    public static OperatingSystem UBUNTU;
    public static OperatingSystem WINDOWS;
    public OperatingSystem(string value);
    private static OperatingSystem();
    public static OperatingSystem FindValue(string value);
    public static OperatingSystem op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.OpsFilterOperatorType : ConstantClass {
    public static OpsFilterOperatorType BeginWith;
    public static OpsFilterOperatorType Equal;
    public static OpsFilterOperatorType Exists;
    public static OpsFilterOperatorType GreaterThan;
    public static OpsFilterOperatorType LessThan;
    public static OpsFilterOperatorType NotEqual;
    public OpsFilterOperatorType(string value);
    private static OpsFilterOperatorType();
    public static OpsFilterOperatorType FindValue(string value);
    public static OpsFilterOperatorType op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.OpsItemDataType : ConstantClass {
    public static OpsItemDataType SearchableString;
    public static OpsItemDataType String;
    public OpsItemDataType(string value);
    private static OpsItemDataType();
    public static OpsItemDataType FindValue(string value);
    public static OpsItemDataType op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.OpsItemEventFilterKey : ConstantClass {
    public static OpsItemEventFilterKey OpsItemId;
    public OpsItemEventFilterKey(string value);
    private static OpsItemEventFilterKey();
    public static OpsItemEventFilterKey FindValue(string value);
    public static OpsItemEventFilterKey op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.OpsItemEventFilterOperator : ConstantClass {
    public static OpsItemEventFilterOperator Equal;
    public OpsItemEventFilterOperator(string value);
    private static OpsItemEventFilterOperator();
    public static OpsItemEventFilterOperator FindValue(string value);
    public static OpsItemEventFilterOperator op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.OpsItemFilterKey : ConstantClass {
    public static OpsItemFilterKey AccountId;
    public static OpsItemFilterKey ActualEndTime;
    public static OpsItemFilterKey ActualStartTime;
    public static OpsItemFilterKey AutomationId;
    public static OpsItemFilterKey Category;
    public static OpsItemFilterKey ChangeRequestByApproverArn;
    public static OpsItemFilterKey ChangeRequestByApproverName;
    public static OpsItemFilterKey ChangeRequestByRequesterArn;
    public static OpsItemFilterKey ChangeRequestByRequesterName;
    public static OpsItemFilterKey ChangeRequestByTargetsResourceGroup;
    public static OpsItemFilterKey ChangeRequestByTemplate;
    public static OpsItemFilterKey CreatedBy;
    public static OpsItemFilterKey CreatedTime;
    public static OpsItemFilterKey InsightByType;
    public static OpsItemFilterKey LastModifiedTime;
    public static OpsItemFilterKey OperationalData;
    public static OpsItemFilterKey OperationalDataKey;
    public static OpsItemFilterKey OperationalDataValue;
    public static OpsItemFilterKey OpsItemId;
    public static OpsItemFilterKey OpsItemType;
    public static OpsItemFilterKey PlannedEndTime;
    public static OpsItemFilterKey PlannedStartTime;
    public static OpsItemFilterKey Priority;
    public static OpsItemFilterKey ResourceId;
    public static OpsItemFilterKey Severity;
    public static OpsItemFilterKey Source;
    public static OpsItemFilterKey Status;
    public static OpsItemFilterKey Title;
    public OpsItemFilterKey(string value);
    private static OpsItemFilterKey();
    public static OpsItemFilterKey FindValue(string value);
    public static OpsItemFilterKey op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.OpsItemFilterOperator : ConstantClass {
    public static OpsItemFilterOperator Contains;
    public static OpsItemFilterOperator Equal;
    public static OpsItemFilterOperator GreaterThan;
    public static OpsItemFilterOperator LessThan;
    public OpsItemFilterOperator(string value);
    private static OpsItemFilterOperator();
    public static OpsItemFilterOperator FindValue(string value);
    public static OpsItemFilterOperator op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.OpsItemRelatedItemsFilterKey : ConstantClass {
    public static OpsItemRelatedItemsFilterKey AssociationId;
    public static OpsItemRelatedItemsFilterKey ResourceType;
    public static OpsItemRelatedItemsFilterKey ResourceUri;
    public OpsItemRelatedItemsFilterKey(string value);
    private static OpsItemRelatedItemsFilterKey();
    public static OpsItemRelatedItemsFilterKey FindValue(string value);
    public static OpsItemRelatedItemsFilterKey op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.OpsItemRelatedItemsFilterOperator : ConstantClass {
    public static OpsItemRelatedItemsFilterOperator Equal;
    public OpsItemRelatedItemsFilterOperator(string value);
    private static OpsItemRelatedItemsFilterOperator();
    public static OpsItemRelatedItemsFilterOperator FindValue(string value);
    public static OpsItemRelatedItemsFilterOperator op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.OpsItemStatus : ConstantClass {
    public static OpsItemStatus Approved;
    public static OpsItemStatus Cancelled;
    public static OpsItemStatus Cancelling;
    public static OpsItemStatus ChangeCalendarOverrideApproved;
    public static OpsItemStatus ChangeCalendarOverrideRejected;
    public static OpsItemStatus Closed;
    public static OpsItemStatus CompletedWithFailure;
    public static OpsItemStatus CompletedWithSuccess;
    public static OpsItemStatus Failed;
    public static OpsItemStatus InProgress;
    public static OpsItemStatus Open;
    public static OpsItemStatus Pending;
    public static OpsItemStatus PendingApproval;
    public static OpsItemStatus PendingChangeCalendarOverride;
    public static OpsItemStatus Rejected;
    public static OpsItemStatus Resolved;
    public static OpsItemStatus RunbookInProgress;
    public static OpsItemStatus Scheduled;
    public static OpsItemStatus TimedOut;
    public OpsItemStatus(string value);
    private static OpsItemStatus();
    public static OpsItemStatus FindValue(string value);
    public static OpsItemStatus op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.ParametersFilterKey : ConstantClass {
    public static ParametersFilterKey KeyId;
    public static ParametersFilterKey Name;
    public static ParametersFilterKey Type;
    public ParametersFilterKey(string value);
    private static ParametersFilterKey();
    public static ParametersFilterKey FindValue(string value);
    public static ParametersFilterKey op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.ParameterTier : ConstantClass {
    public static ParameterTier Advanced;
    public static ParameterTier IntelligentTiering;
    public static ParameterTier Standard;
    public ParameterTier(string value);
    private static ParameterTier();
    public static ParameterTier FindValue(string value);
    public static ParameterTier op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.ParameterType : ConstantClass {
    public static ParameterType SecureString;
    public static ParameterType String;
    public static ParameterType StringList;
    public ParameterType(string value);
    private static ParameterType();
    public static ParameterType FindValue(string value);
    public static ParameterType op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.PatchAction : ConstantClass {
    public static PatchAction ALLOW_AS_DEPENDENCY;
    public static PatchAction BLOCK;
    public PatchAction(string value);
    private static PatchAction();
    public static PatchAction FindValue(string value);
    public static PatchAction op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.PatchComplianceDataState : ConstantClass {
    public static PatchComplianceDataState FAILED;
    public static PatchComplianceDataState INSTALLED;
    public static PatchComplianceDataState INSTALLED_OTHER;
    public static PatchComplianceDataState INSTALLED_PENDING_REBOOT;
    public static PatchComplianceDataState INSTALLED_REJECTED;
    public static PatchComplianceDataState MISSING;
    public static PatchComplianceDataState NOT_APPLICABLE;
    public PatchComplianceDataState(string value);
    private static PatchComplianceDataState();
    public static PatchComplianceDataState FindValue(string value);
    public static PatchComplianceDataState op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.PatchComplianceLevel : ConstantClass {
    public static PatchComplianceLevel CRITICAL;
    public static PatchComplianceLevel HIGH;
    public static PatchComplianceLevel INFORMATIONAL;
    public static PatchComplianceLevel LOW;
    public static PatchComplianceLevel MEDIUM;
    public static PatchComplianceLevel UNSPECIFIED;
    public PatchComplianceLevel(string value);
    private static PatchComplianceLevel();
    public static PatchComplianceLevel FindValue(string value);
    public static PatchComplianceLevel op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.PatchDeploymentStatus : ConstantClass {
    public static PatchDeploymentStatus APPROVED;
    public static PatchDeploymentStatus EXPLICIT_APPROVED;
    public static PatchDeploymentStatus EXPLICIT_REJECTED;
    public static PatchDeploymentStatus PENDING_APPROVAL;
    public PatchDeploymentStatus(string value);
    private static PatchDeploymentStatus();
    public static PatchDeploymentStatus FindValue(string value);
    public static PatchDeploymentStatus op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.PatchFilterKey : ConstantClass {
    public static PatchFilterKey ADVISORY_ID;
    public static PatchFilterKey ARCH;
    public static PatchFilterKey BUGZILLA_ID;
    public static PatchFilterKey CLASSIFICATION;
    public static PatchFilterKey CVE_ID;
    public static PatchFilterKey EPOCH;
    public static PatchFilterKey MSRC_SEVERITY;
    public static PatchFilterKey NAME;
    public static PatchFilterKey PATCH_ID;
    public static PatchFilterKey PATCH_SET;
    public static PatchFilterKey PRIORITY;
    public static PatchFilterKey PRODUCT;
    public static PatchFilterKey PRODUCT_FAMILY;
    public static PatchFilterKey RELEASE;
    public static PatchFilterKey REPOSITORY;
    public static PatchFilterKey SECTION;
    public static PatchFilterKey SECURITY;
    public static PatchFilterKey SEVERITY;
    public static PatchFilterKey VERSION;
    public PatchFilterKey(string value);
    private static PatchFilterKey();
    public static PatchFilterKey FindValue(string value);
    public static PatchFilterKey op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.PatchOperationType : ConstantClass {
    public static PatchOperationType Install;
    public static PatchOperationType Scan;
    public PatchOperationType(string value);
    private static PatchOperationType();
    public static PatchOperationType FindValue(string value);
    public static PatchOperationType op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.PatchProperty : ConstantClass {
    public static PatchProperty CLASSIFICATION;
    public static PatchProperty MSRC_SEVERITY;
    public static PatchProperty PRIORITY;
    public static PatchProperty PRODUCT;
    public static PatchProperty PRODUCT_FAMILY;
    public static PatchProperty SEVERITY;
    public PatchProperty(string value);
    private static PatchProperty();
    public static PatchProperty FindValue(string value);
    public static PatchProperty op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.PatchSet : ConstantClass {
    public static PatchSet APPLICATION;
    public static PatchSet OS;
    public PatchSet(string value);
    private static PatchSet();
    public static PatchSet FindValue(string value);
    public static PatchSet op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.PingStatus : ConstantClass {
    public static PingStatus ConnectionLost;
    public static PingStatus Inactive;
    public static PingStatus Online;
    public PingStatus(string value);
    private static PingStatus();
    public static PingStatus FindValue(string value);
    public static PingStatus op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.PlatformType : ConstantClass {
    public static PlatformType Linux;
    public static PlatformType MacOS;
    public static PlatformType Windows;
    public PlatformType(string value);
    private static PlatformType();
    public static PlatformType FindValue(string value);
    public static PlatformType op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.RebootOption : ConstantClass {
    public static RebootOption NoReboot;
    public static RebootOption RebootIfNeeded;
    public RebootOption(string value);
    private static RebootOption();
    public static RebootOption FindValue(string value);
    public static RebootOption op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.ResourceDataSyncS3Format : ConstantClass {
    public static ResourceDataSyncS3Format JsonSerDe;
    public ResourceDataSyncS3Format(string value);
    private static ResourceDataSyncS3Format();
    public static ResourceDataSyncS3Format FindValue(string value);
    public static ResourceDataSyncS3Format op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.ResourceType : ConstantClass {
    public static ResourceType EC2Instance;
    public static ResourceType ManagedInstance;
    public ResourceType(string value);
    private static ResourceType();
    public static ResourceType FindValue(string value);
    public static ResourceType op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.ResourceTypeForTagging : ConstantClass {
    public static ResourceTypeForTagging Association;
    public static ResourceTypeForTagging Automation;
    public static ResourceTypeForTagging Document;
    public static ResourceTypeForTagging MaintenanceWindow;
    public static ResourceTypeForTagging ManagedInstance;
    public static ResourceTypeForTagging OpsItem;
    public static ResourceTypeForTagging OpsMetadata;
    public static ResourceTypeForTagging Parameter;
    public static ResourceTypeForTagging PatchBaseline;
    public ResourceTypeForTagging(string value);
    private static ResourceTypeForTagging();
    public static ResourceTypeForTagging FindValue(string value);
    public static ResourceTypeForTagging op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.ReviewStatus : ConstantClass {
    public static ReviewStatus APPROVED;
    public static ReviewStatus NOT_REVIEWED;
    public static ReviewStatus PENDING;
    public static ReviewStatus REJECTED;
    public ReviewStatus(string value);
    private static ReviewStatus();
    public static ReviewStatus FindValue(string value);
    public static ReviewStatus op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.SessionFilterKey : ConstantClass {
    public static SessionFilterKey InvokedAfter;
    public static SessionFilterKey InvokedBefore;
    public static SessionFilterKey Owner;
    public static SessionFilterKey SessionId;
    public static SessionFilterKey Status;
    public static SessionFilterKey Target;
    public SessionFilterKey(string value);
    private static SessionFilterKey();
    public static SessionFilterKey FindValue(string value);
    public static SessionFilterKey op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.SessionState : ConstantClass {
    public static SessionState Active;
    public static SessionState History;
    public SessionState(string value);
    private static SessionState();
    public static SessionState FindValue(string value);
    public static SessionState op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.SessionStatus : ConstantClass {
    public static SessionStatus Connected;
    public static SessionStatus Connecting;
    public static SessionStatus Disconnected;
    public static SessionStatus Failed;
    public static SessionStatus Terminated;
    public static SessionStatus Terminating;
    public SessionStatus(string value);
    private static SessionStatus();
    public static SessionStatus FindValue(string value);
    public static SessionStatus op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.SignalType : ConstantClass {
    public static SignalType Approve;
    public static SignalType Reject;
    public static SignalType Resume;
    public static SignalType StartStep;
    public static SignalType StopStep;
    public SignalType(string value);
    private static SignalType();
    public static SignalType FindValue(string value);
    public static SignalType op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.SourceType : ConstantClass {
    public static SourceType AWSEC2Instance;
    public static SourceType AWSIoTThing;
    public static SourceType AWSSSMManagedInstance;
    public SourceType(string value);
    private static SourceType();
    public static SourceType FindValue(string value);
    public static SourceType op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.StepExecutionFilterKey : ConstantClass {
    public static StepExecutionFilterKey Action;
    public static StepExecutionFilterKey ParentStepExecutionId;
    public static StepExecutionFilterKey ParentStepIteration;
    public static StepExecutionFilterKey ParentStepIteratorValue;
    public static StepExecutionFilterKey StartTimeAfter;
    public static StepExecutionFilterKey StartTimeBefore;
    public static StepExecutionFilterKey StepExecutionId;
    public static StepExecutionFilterKey StepExecutionStatus;
    public static StepExecutionFilterKey StepName;
    public StepExecutionFilterKey(string value);
    private static StepExecutionFilterKey();
    public static StepExecutionFilterKey FindValue(string value);
    public static StepExecutionFilterKey op_Implicit(string value);
}
public class Amazon.SimpleSystemsManagement.StopType : ConstantClass {
    public static StopType Cancel;
    public static StopType Complete;
    public StopType(string value);
    private static StopType();
    public static StopType FindValue(string value);
    public static StopType op_Implicit(string value);
}
