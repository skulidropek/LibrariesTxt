public class Amazon.SQS.AmazonSQSClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private ISQSPaginatorFactory _paginators;
    public ISQSPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonSQSClient(RegionEndpoint region);
    public AmazonSQSClient(AmazonSQSConfig config);
    public AmazonSQSClient(AWSCredentials credentials);
    public AmazonSQSClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonSQSClient(AWSCredentials credentials, AmazonSQSConfig clientConfig);
    public AmazonSQSClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonSQSClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonSQSClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonSQSConfig clientConfig);
    public AmazonSQSClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonSQSClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonSQSClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonSQSConfig clientConfig);
    private static AmazonSQSClient();
    private static void GetNewPolicyAndStatement(GetQueueAttributesResponse response, string bucket, Policy& policy, Statement& statement);
    [AsyncStateMachineAttribute("Amazon.SQS.AmazonSQSClient/<Amazon-Runtime-SharedInterfaces-ICoreAmazonSQS-GetAttributesAsync>d__1")]
private sealed virtual override Task`1<Dictionary`2<string, string>> Amazon.Runtime.SharedInterfaces.ICoreAmazonSQS.GetAttributesAsync(string queueUrl);
    private sealed virtual override Task Amazon.Runtime.SharedInterfaces.ICoreAmazonSQS.SetAttributesAsync(string queueUrl, Dictionary`2<string, string> attributes);
    [AsyncStateMachineAttribute("Amazon.SQS.AmazonSQSClient/<AuthorizeS3ToSendMessageAsync>d__3")]
public sealed virtual Task`1<string> AuthorizeS3ToSendMessageAsync(string queueUrl, string bucket);
    public sealed virtual ISQSPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual AddPermissionResponse AddPermission(AddPermissionRequest request);
    public virtual Task`1<AddPermissionResponse> AddPermissionAsync(string queueUrl, string label, List`1<string> awsAccountIds, List`1<string> actions, CancellationToken cancellationToken);
    public virtual Task`1<AddPermissionResponse> AddPermissionAsync(AddPermissionRequest request, CancellationToken cancellationToken);
    internal virtual CancelMessageMoveTaskResponse CancelMessageMoveTask(CancelMessageMoveTaskRequest request);
    public virtual Task`1<CancelMessageMoveTaskResponse> CancelMessageMoveTaskAsync(CancelMessageMoveTaskRequest request, CancellationToken cancellationToken);
    internal virtual ChangeMessageVisibilityResponse ChangeMessageVisibility(ChangeMessageVisibilityRequest request);
    public virtual Task`1<ChangeMessageVisibilityResponse> ChangeMessageVisibilityAsync(string queueUrl, string receiptHandle, Nullable`1<int> visibilityTimeout, CancellationToken cancellationToken);
    public virtual Task`1<ChangeMessageVisibilityResponse> ChangeMessageVisibilityAsync(ChangeMessageVisibilityRequest request, CancellationToken cancellationToken);
    internal virtual ChangeMessageVisibilityBatchResponse ChangeMessageVisibilityBatch(ChangeMessageVisibilityBatchRequest request);
    public virtual Task`1<ChangeMessageVisibilityBatchResponse> ChangeMessageVisibilityBatchAsync(string queueUrl, List`1<ChangeMessageVisibilityBatchRequestEntry> entries, CancellationToken cancellationToken);
    public virtual Task`1<ChangeMessageVisibilityBatchResponse> ChangeMessageVisibilityBatchAsync(ChangeMessageVisibilityBatchRequest request, CancellationToken cancellationToken);
    internal virtual CreateQueueResponse CreateQueue(CreateQueueRequest request);
    public virtual Task`1<CreateQueueResponse> CreateQueueAsync(string queueName, CancellationToken cancellationToken);
    public virtual Task`1<CreateQueueResponse> CreateQueueAsync(CreateQueueRequest request, CancellationToken cancellationToken);
    internal virtual DeleteMessageResponse DeleteMessage(DeleteMessageRequest request);
    public virtual Task`1<DeleteMessageResponse> DeleteMessageAsync(string queueUrl, string receiptHandle, CancellationToken cancellationToken);
    public virtual Task`1<DeleteMessageResponse> DeleteMessageAsync(DeleteMessageRequest request, CancellationToken cancellationToken);
    internal virtual DeleteMessageBatchResponse DeleteMessageBatch(DeleteMessageBatchRequest request);
    public virtual Task`1<DeleteMessageBatchResponse> DeleteMessageBatchAsync(string queueUrl, List`1<DeleteMessageBatchRequestEntry> entries, CancellationToken cancellationToken);
    public virtual Task`1<DeleteMessageBatchResponse> DeleteMessageBatchAsync(DeleteMessageBatchRequest request, CancellationToken cancellationToken);
    internal virtual DeleteQueueResponse DeleteQueue(DeleteQueueRequest request);
    public virtual Task`1<DeleteQueueResponse> DeleteQueueAsync(string queueUrl, CancellationToken cancellationToken);
    public virtual Task`1<DeleteQueueResponse> DeleteQueueAsync(DeleteQueueRequest request, CancellationToken cancellationToken);
    internal virtual GetQueueAttributesResponse GetQueueAttributes(GetQueueAttributesRequest request);
    public virtual Task`1<GetQueueAttributesResponse> GetQueueAttributesAsync(string queueUrl, List`1<string> attributeNames, CancellationToken cancellationToken);
    public virtual Task`1<GetQueueAttributesResponse> GetQueueAttributesAsync(GetQueueAttributesRequest request, CancellationToken cancellationToken);
    internal virtual GetQueueUrlResponse GetQueueUrl(GetQueueUrlRequest request);
    public virtual Task`1<GetQueueUrlResponse> GetQueueUrlAsync(string queueName, CancellationToken cancellationToken);
    public virtual Task`1<GetQueueUrlResponse> GetQueueUrlAsync(GetQueueUrlRequest request, CancellationToken cancellationToken);
    internal virtual ListDeadLetterSourceQueuesResponse ListDeadLetterSourceQueues(ListDeadLetterSourceQueuesRequest request);
    public virtual Task`1<ListDeadLetterSourceQueuesResponse> ListDeadLetterSourceQueuesAsync(ListDeadLetterSourceQueuesRequest request, CancellationToken cancellationToken);
    internal virtual ListMessageMoveTasksResponse ListMessageMoveTasks(ListMessageMoveTasksRequest request);
    public virtual Task`1<ListMessageMoveTasksResponse> ListMessageMoveTasksAsync(ListMessageMoveTasksRequest request, CancellationToken cancellationToken);
    internal virtual ListQueuesResponse ListQueues(ListQueuesRequest request);
    public virtual Task`1<ListQueuesResponse> ListQueuesAsync(string queueNamePrefix, CancellationToken cancellationToken);
    public virtual Task`1<ListQueuesResponse> ListQueuesAsync(ListQueuesRequest request, CancellationToken cancellationToken);
    internal virtual ListQueueTagsResponse ListQueueTags(ListQueueTagsRequest request);
    public virtual Task`1<ListQueueTagsResponse> ListQueueTagsAsync(ListQueueTagsRequest request, CancellationToken cancellationToken);
    internal virtual PurgeQueueResponse PurgeQueue(PurgeQueueRequest request);
    public virtual Task`1<PurgeQueueResponse> PurgeQueueAsync(string queueUrl, CancellationToken cancellationToken);
    public virtual Task`1<PurgeQueueResponse> PurgeQueueAsync(PurgeQueueRequest request, CancellationToken cancellationToken);
    internal virtual ReceiveMessageResponse ReceiveMessage(ReceiveMessageRequest request);
    public virtual Task`1<ReceiveMessageResponse> ReceiveMessageAsync(string queueUrl, CancellationToken cancellationToken);
    public virtual Task`1<ReceiveMessageResponse> ReceiveMessageAsync(ReceiveMessageRequest request, CancellationToken cancellationToken);
    internal virtual RemovePermissionResponse RemovePermission(RemovePermissionRequest request);
    public virtual Task`1<RemovePermissionResponse> RemovePermissionAsync(string queueUrl, string label, CancellationToken cancellationToken);
    public virtual Task`1<RemovePermissionResponse> RemovePermissionAsync(RemovePermissionRequest request, CancellationToken cancellationToken);
    internal virtual SendMessageResponse SendMessage(SendMessageRequest request);
    public virtual Task`1<SendMessageResponse> SendMessageAsync(string queueUrl, string messageBody, CancellationToken cancellationToken);
    public virtual Task`1<SendMessageResponse> SendMessageAsync(SendMessageRequest request, CancellationToken cancellationToken);
    internal virtual SendMessageBatchResponse SendMessageBatch(SendMessageBatchRequest request);
    public virtual Task`1<SendMessageBatchResponse> SendMessageBatchAsync(string queueUrl, List`1<SendMessageBatchRequestEntry> entries, CancellationToken cancellationToken);
    public virtual Task`1<SendMessageBatchResponse> SendMessageBatchAsync(SendMessageBatchRequest request, CancellationToken cancellationToken);
    internal virtual SetQueueAttributesResponse SetQueueAttributes(SetQueueAttributesRequest request);
    public virtual Task`1<SetQueueAttributesResponse> SetQueueAttributesAsync(string queueUrl, Dictionary`2<string, string> attributes, CancellationToken cancellationToken);
    public virtual Task`1<SetQueueAttributesResponse> SetQueueAttributesAsync(SetQueueAttributesRequest request, CancellationToken cancellationToken);
    internal virtual StartMessageMoveTaskResponse StartMessageMoveTask(StartMessageMoveTaskRequest request);
    public virtual Task`1<StartMessageMoveTaskResponse> StartMessageMoveTaskAsync(StartMessageMoveTaskRequest request, CancellationToken cancellationToken);
    internal virtual TagQueueResponse TagQueue(TagQueueRequest request);
    public virtual Task`1<TagQueueResponse> TagQueueAsync(TagQueueRequest request, CancellationToken cancellationToken);
    internal virtual UntagQueueResponse UntagQueue(UntagQueueRequest request);
    public virtual Task`1<UntagQueueResponse> UntagQueueAsync(UntagQueueRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.SQS.AmazonSQSConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonSQSEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonSQSConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.SQS.AmazonSQSDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonSQSDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.SQS.AmazonSQSException : AmazonServiceException {
    public AmazonSQSException(string message);
    public AmazonSQSException(string message, Exception innerException);
    public AmazonSQSException(Exception innerException);
    public AmazonSQSException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonSQSException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.AmazonSQSRequest : AmazonWebServiceRequest {
}
public class Amazon.SQS.Endpoints.SQSEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public interface Amazon.SQS.IAmazonSQS {
    public ISQSPaginatorFactory Paginators { get; }
    public abstract virtual Task`1<string> AuthorizeS3ToSendMessageAsync(string queueUrl, string bucket);
    public abstract virtual ISQSPaginatorFactory get_Paginators();
    public abstract virtual Task`1<AddPermissionResponse> AddPermissionAsync(string queueUrl, string label, List`1<string> awsAccountIds, List`1<string> actions, CancellationToken cancellationToken);
    public abstract virtual Task`1<AddPermissionResponse> AddPermissionAsync(AddPermissionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelMessageMoveTaskResponse> CancelMessageMoveTaskAsync(CancelMessageMoveTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ChangeMessageVisibilityResponse> ChangeMessageVisibilityAsync(string queueUrl, string receiptHandle, Nullable`1<int> visibilityTimeout, CancellationToken cancellationToken);
    public abstract virtual Task`1<ChangeMessageVisibilityResponse> ChangeMessageVisibilityAsync(ChangeMessageVisibilityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ChangeMessageVisibilityBatchResponse> ChangeMessageVisibilityBatchAsync(string queueUrl, List`1<ChangeMessageVisibilityBatchRequestEntry> entries, CancellationToken cancellationToken);
    public abstract virtual Task`1<ChangeMessageVisibilityBatchResponse> ChangeMessageVisibilityBatchAsync(ChangeMessageVisibilityBatchRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateQueueResponse> CreateQueueAsync(string queueName, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateQueueResponse> CreateQueueAsync(CreateQueueRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteMessageResponse> DeleteMessageAsync(string queueUrl, string receiptHandle, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteMessageResponse> DeleteMessageAsync(DeleteMessageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteMessageBatchResponse> DeleteMessageBatchAsync(string queueUrl, List`1<DeleteMessageBatchRequestEntry> entries, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteMessageBatchResponse> DeleteMessageBatchAsync(DeleteMessageBatchRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteQueueResponse> DeleteQueueAsync(string queueUrl, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteQueueResponse> DeleteQueueAsync(DeleteQueueRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetQueueAttributesResponse> GetQueueAttributesAsync(string queueUrl, List`1<string> attributeNames, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetQueueAttributesResponse> GetQueueAttributesAsync(GetQueueAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetQueueUrlResponse> GetQueueUrlAsync(string queueName, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetQueueUrlResponse> GetQueueUrlAsync(GetQueueUrlRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDeadLetterSourceQueuesResponse> ListDeadLetterSourceQueuesAsync(ListDeadLetterSourceQueuesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListMessageMoveTasksResponse> ListMessageMoveTasksAsync(ListMessageMoveTasksRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListQueuesResponse> ListQueuesAsync(string queueNamePrefix, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListQueuesResponse> ListQueuesAsync(ListQueuesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListQueueTagsResponse> ListQueueTagsAsync(ListQueueTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PurgeQueueResponse> PurgeQueueAsync(string queueUrl, CancellationToken cancellationToken);
    public abstract virtual Task`1<PurgeQueueResponse> PurgeQueueAsync(PurgeQueueRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReceiveMessageResponse> ReceiveMessageAsync(string queueUrl, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReceiveMessageResponse> ReceiveMessageAsync(ReceiveMessageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemovePermissionResponse> RemovePermissionAsync(string queueUrl, string label, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemovePermissionResponse> RemovePermissionAsync(RemovePermissionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SendMessageResponse> SendMessageAsync(string queueUrl, string messageBody, CancellationToken cancellationToken);
    public abstract virtual Task`1<SendMessageResponse> SendMessageAsync(SendMessageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SendMessageBatchResponse> SendMessageBatchAsync(string queueUrl, List`1<SendMessageBatchRequestEntry> entries, CancellationToken cancellationToken);
    public abstract virtual Task`1<SendMessageBatchResponse> SendMessageBatchAsync(SendMessageBatchRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetQueueAttributesResponse> SetQueueAttributesAsync(string queueUrl, Dictionary`2<string, string> attributes, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetQueueAttributesResponse> SetQueueAttributesAsync(SetQueueAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartMessageMoveTaskResponse> StartMessageMoveTaskAsync(StartMessageMoveTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TagQueueResponse> TagQueueAsync(TagQueueRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UntagQueueResponse> UntagQueueAsync(UntagQueueRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    [DynamicDependencyAttribute("512", "Amazon.SQS.AmazonSQSConfig")]
private static override ClientConfig Amazon.Runtime.IAmazonService.CreateDefaultClientConfig();
    [UnconditionalSuppressMessageAttribute("AssemblyLoadTrimming", "IL2026:RequiresUnreferencedCode")]
private static override IAmazonService Amazon.Runtime.IAmazonService.CreateDefaultServiceClient(AWSCredentials awsCredentials, ClientConfig clientConfig);
}
public class Amazon.SQS.Internal.AmazonSQSEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.SQS.Internal.AmazonSQSEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.SQS.Internal.AmazonSQSMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.SQS.Internal.ProcessRequestHandler : PipelineHandler {
    public virtual void InvokeSync(IExecutionContext executionContext);
    public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected virtual void PreInvoke(IExecutionContext executionContext);
}
public class Amazon.SQS.Internal.ValidationResponseHandler : PipelineHandler {
    private static byte STRING_TYPE;
    private static byte BINARY_TYPE;
    private static byte STRING_LIST_TYPE;
    private static byte BINARY_LIST_TYPE;
    public virtual void InvokeSync(IExecutionContext executionContext);
    [AsyncStateMachineAttribute("Amazon.SQS.Internal.ValidationResponseHandler/<InvokeAsync>d__1`1")]
public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected virtual void PostInvoke(IExecutionContext executionContext);
    public static string CalculateMD5(Dictionary`2<string, MessageAttributeValue> attributes);
    public static string CalculateMD5(string message);
    public static string CalculateMD5(Byte[] bytes);
    public static bool CompareMD5(string message, string md5FromService);
    public static bool CompareMD5(Dictionary`2<string, MessageAttributeValue> attributes, string md5FromService);
    public static void ValidateMD5(string message, string md5FromService);
    public static void ValidateMD5(Dictionary`2<string, MessageAttributeValue> attributes, string md5FromService);
    public static void ValidateMD5(string message, string messageId, string md5FromService);
    public static void ValidateMD5(Dictionary`2<string, MessageAttributeValue> attributes, string messageId, string md5FromService);
    public static void ValidateMD5(Message message);
    public static void ValidateReceiveMessage(ReceiveMessageResponse response);
    public static void ValidateSendMessage(SendMessageRequest request, SendMessageResponse response);
    public static void ValidateSendMessageBatch(SendMessageBatchRequest request, SendMessageBatchResponse response);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<T> <>n__0(IExecutionContext executionContext);
}
public class Amazon.SQS.MessageSystemAttributeName : ConstantClass {
    public static MessageSystemAttributeName All;
    public static MessageSystemAttributeName ApproximateFirstReceiveTimestamp;
    public static MessageSystemAttributeName ApproximateReceiveCount;
    public static MessageSystemAttributeName AWSTraceHeader;
    public static MessageSystemAttributeName DeadLetterQueueSourceArn;
    public static MessageSystemAttributeName MessageDeduplicationId;
    public static MessageSystemAttributeName MessageGroupId;
    public static MessageSystemAttributeName SenderId;
    public static MessageSystemAttributeName SentTimestamp;
    public static MessageSystemAttributeName SequenceNumber;
    public MessageSystemAttributeName(string value);
    private static MessageSystemAttributeName();
    public static MessageSystemAttributeName FindValue(string value);
    public static MessageSystemAttributeName op_Implicit(string value);
}
public class Amazon.SQS.MessageSystemAttributeNameForSends : ConstantClass {
    public static MessageSystemAttributeNameForSends AWSTraceHeader;
    public MessageSystemAttributeNameForSends(string value);
    private static MessageSystemAttributeNameForSends();
    public static MessageSystemAttributeNameForSends FindValue(string value);
    public static MessageSystemAttributeNameForSends op_Implicit(string value);
}
public class Amazon.SQS.Model.AddPermissionRequest : AmazonSQSRequest {
    private List`1<string> _actions;
    private List`1<string> _awsAccountIds;
    private string _label;
    private string _queueUrl;
    [AWSPropertyAttribute]
public List`1<string> Actions { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> AWSAccountIds { get; public set; }
    [AWSPropertyAttribute]
public string Label { get; public set; }
    [AWSPropertyAttribute]
public string QueueUrl { get; public set; }
    public AddPermissionRequest(string queueUrl, string label, List`1<string> awsAccountIds, List`1<string> actions);
    public List`1<string> get_Actions();
    public void set_Actions(List`1<string> value);
    internal bool IsSetActions();
    public List`1<string> get_AWSAccountIds();
    public void set_AWSAccountIds(List`1<string> value);
    internal bool IsSetAWSAccountIds();
    public string get_Label();
    public void set_Label(string value);
    internal bool IsSetLabel();
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.AddPermissionResponse : AmazonWebServiceResponse {
}
public class Amazon.SQS.Model.BatchEntryIdsNotDistinctException : AmazonSQSException {
    public BatchEntryIdsNotDistinctException(string message);
    public BatchEntryIdsNotDistinctException(string message, Exception innerException);
    public BatchEntryIdsNotDistinctException(Exception innerException);
    public BatchEntryIdsNotDistinctException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public BatchEntryIdsNotDistinctException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.BatchRequestTooLongException : AmazonSQSException {
    public BatchRequestTooLongException(string message);
    public BatchRequestTooLongException(string message, Exception innerException);
    public BatchRequestTooLongException(Exception innerException);
    public BatchRequestTooLongException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public BatchRequestTooLongException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.BatchResultErrorEntry : object {
    private string _code;
    private string _id;
    private string _message;
    private Nullable`1<bool> _senderFault;
    [AWSPropertyAttribute]
public string Code { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string Message { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> SenderFault { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public Nullable`1<bool> get_SenderFault();
    public void set_SenderFault(Nullable`1<bool> value);
    internal bool IsSetSenderFault();
}
public class Amazon.SQS.Model.CancelMessageMoveTaskRequest : AmazonSQSRequest {
    private string _taskHandle;
    [AWSPropertyAttribute]
public string TaskHandle { get; public set; }
    public string get_TaskHandle();
    public void set_TaskHandle(string value);
    internal bool IsSetTaskHandle();
}
public class Amazon.SQS.Model.CancelMessageMoveTaskResponse : AmazonWebServiceResponse {
    private Nullable`1<long> _approximateNumberOfMessagesMoved;
    public Nullable`1<long> ApproximateNumberOfMessagesMoved { get; public set; }
    public Nullable`1<long> get_ApproximateNumberOfMessagesMoved();
    public void set_ApproximateNumberOfMessagesMoved(Nullable`1<long> value);
    internal bool IsSetApproximateNumberOfMessagesMoved();
}
public class Amazon.SQS.Model.ChangeMessageVisibilityBatchRequest : AmazonSQSRequest {
    private List`1<ChangeMessageVisibilityBatchRequestEntry> _entries;
    private string _queueUrl;
    [AWSPropertyAttribute]
public List`1<ChangeMessageVisibilityBatchRequestEntry> Entries { get; public set; }
    [AWSPropertyAttribute]
public string QueueUrl { get; public set; }
    public ChangeMessageVisibilityBatchRequest(string queueUrl, List`1<ChangeMessageVisibilityBatchRequestEntry> entries);
    public List`1<ChangeMessageVisibilityBatchRequestEntry> get_Entries();
    public void set_Entries(List`1<ChangeMessageVisibilityBatchRequestEntry> value);
    internal bool IsSetEntries();
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.ChangeMessageVisibilityBatchRequestEntry : object {
    private string _id;
    private string _receiptHandle;
    private Nullable`1<int> _visibilityTimeout;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public string ReceiptHandle { get; public set; }
    public Nullable`1<int> VisibilityTimeout { get; public set; }
    public ChangeMessageVisibilityBatchRequestEntry(string id, string receiptHandle);
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_ReceiptHandle();
    public void set_ReceiptHandle(string value);
    internal bool IsSetReceiptHandle();
    public Nullable`1<int> get_VisibilityTimeout();
    public void set_VisibilityTimeout(Nullable`1<int> value);
    internal bool IsSetVisibilityTimeout();
}
public class Amazon.SQS.Model.ChangeMessageVisibilityBatchResponse : AmazonWebServiceResponse {
    private List`1<BatchResultErrorEntry> _failed;
    private List`1<ChangeMessageVisibilityBatchResultEntry> _successful;
    [AWSPropertyAttribute]
public List`1<BatchResultErrorEntry> Failed { get; public set; }
    [AWSPropertyAttribute]
public List`1<ChangeMessageVisibilityBatchResultEntry> Successful { get; public set; }
    public List`1<BatchResultErrorEntry> get_Failed();
    public void set_Failed(List`1<BatchResultErrorEntry> value);
    internal bool IsSetFailed();
    public List`1<ChangeMessageVisibilityBatchResultEntry> get_Successful();
    public void set_Successful(List`1<ChangeMessageVisibilityBatchResultEntry> value);
    internal bool IsSetSuccessful();
}
public class Amazon.SQS.Model.ChangeMessageVisibilityBatchResultEntry : object {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.SQS.Model.ChangeMessageVisibilityRequest : AmazonSQSRequest {
    private string _queueUrl;
    private string _receiptHandle;
    private Nullable`1<int> _visibilityTimeout;
    [AWSPropertyAttribute]
public string QueueUrl { get; public set; }
    [AWSPropertyAttribute]
public string ReceiptHandle { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> VisibilityTimeout { get; public set; }
    public ChangeMessageVisibilityRequest(string queueUrl, string receiptHandle, Nullable`1<int> visibilityTimeout);
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
    public string get_ReceiptHandle();
    public void set_ReceiptHandle(string value);
    internal bool IsSetReceiptHandle();
    public Nullable`1<int> get_VisibilityTimeout();
    public void set_VisibilityTimeout(Nullable`1<int> value);
    internal bool IsSetVisibilityTimeout();
}
public class Amazon.SQS.Model.ChangeMessageVisibilityResponse : AmazonWebServiceResponse {
}
public class Amazon.SQS.Model.CreateQueueRequest : AmazonSQSRequest {
    private Dictionary`2<string, string> _attributes;
    private string _queueName;
    private Dictionary`2<string, string> _tags;
    public Dictionary`2<string, string> Attributes { get; public set; }
    [AWSPropertyAttribute]
public string QueueName { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public CreateQueueRequest(string queueName);
    public Dictionary`2<string, string> get_Attributes();
    public void set_Attributes(Dictionary`2<string, string> value);
    internal bool IsSetAttributes();
    public string get_QueueName();
    public void set_QueueName(string value);
    internal bool IsSetQueueName();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.SQS.Model.CreateQueueResponse : AmazonWebServiceResponse {
    private string _queueUrl;
    public string QueueUrl { get; public set; }
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.DeleteMessageBatchRequest : AmazonSQSRequest {
    private List`1<DeleteMessageBatchRequestEntry> _entries;
    private string _queueUrl;
    [AWSPropertyAttribute]
public List`1<DeleteMessageBatchRequestEntry> Entries { get; public set; }
    [AWSPropertyAttribute]
public string QueueUrl { get; public set; }
    public DeleteMessageBatchRequest(string queueUrl, List`1<DeleteMessageBatchRequestEntry> entries);
    public List`1<DeleteMessageBatchRequestEntry> get_Entries();
    public void set_Entries(List`1<DeleteMessageBatchRequestEntry> value);
    internal bool IsSetEntries();
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.DeleteMessageBatchRequestEntry : object {
    private string _id;
    private string _receiptHandle;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public string ReceiptHandle { get; public set; }
    public DeleteMessageBatchRequestEntry(string id, string receiptHandle);
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_ReceiptHandle();
    public void set_ReceiptHandle(string value);
    internal bool IsSetReceiptHandle();
}
public class Amazon.SQS.Model.DeleteMessageBatchResponse : AmazonWebServiceResponse {
    private List`1<BatchResultErrorEntry> _failed;
    private List`1<DeleteMessageBatchResultEntry> _successful;
    [AWSPropertyAttribute]
public List`1<BatchResultErrorEntry> Failed { get; public set; }
    [AWSPropertyAttribute]
public List`1<DeleteMessageBatchResultEntry> Successful { get; public set; }
    public List`1<BatchResultErrorEntry> get_Failed();
    public void set_Failed(List`1<BatchResultErrorEntry> value);
    internal bool IsSetFailed();
    public List`1<DeleteMessageBatchResultEntry> get_Successful();
    public void set_Successful(List`1<DeleteMessageBatchResultEntry> value);
    internal bool IsSetSuccessful();
}
public class Amazon.SQS.Model.DeleteMessageBatchResultEntry : object {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.SQS.Model.DeleteMessageRequest : AmazonSQSRequest {
    private string _queueUrl;
    private string _receiptHandle;
    [AWSPropertyAttribute]
public string QueueUrl { get; public set; }
    [AWSPropertyAttribute]
public string ReceiptHandle { get; public set; }
    public DeleteMessageRequest(string queueUrl, string receiptHandle);
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
    public string get_ReceiptHandle();
    public void set_ReceiptHandle(string value);
    internal bool IsSetReceiptHandle();
}
public class Amazon.SQS.Model.DeleteMessageResponse : AmazonWebServiceResponse {
}
public class Amazon.SQS.Model.DeleteQueueRequest : AmazonSQSRequest {
    private string _queueUrl;
    [AWSPropertyAttribute]
public string QueueUrl { get; public set; }
    public DeleteQueueRequest(string queueUrl);
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.DeleteQueueResponse : AmazonWebServiceResponse {
}
public class Amazon.SQS.Model.EmptyBatchRequestException : AmazonSQSException {
    public EmptyBatchRequestException(string message);
    public EmptyBatchRequestException(string message, Exception innerException);
    public EmptyBatchRequestException(Exception innerException);
    public EmptyBatchRequestException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EmptyBatchRequestException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.GetQueueAttributesRequest : AmazonSQSRequest {
    private List`1<string> _attributeNames;
    private string _queueUrl;
    public List`1<string> AttributeNames { get; public set; }
    [AWSPropertyAttribute]
public string QueueUrl { get; public set; }
    public GetQueueAttributesRequest(string queueUrl, List`1<string> attributeNames);
    public List`1<string> get_AttributeNames();
    public void set_AttributeNames(List`1<string> value);
    internal bool IsSetAttributeNames();
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.GetQueueAttributesResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _attributes;
    public int VisibilityTimeout { get; }
    public int DelaySeconds { get; }
    public int MaximumMessageSize { get; }
    public int MessageRetentionPeriod { get; }
    public int ApproximateNumberOfMessages { get; }
    public int ApproximateNumberOfMessagesNotVisible { get; }
    public int ApproximateNumberOfMessagesDelayed { get; }
    public DateTime CreatedTimestamp { get; }
    public DateTime LastModifiedTimestamp { get; }
    public string QueueARN { get; }
    public string Policy { get; }
    public bool FifoQueue { get; }
    public Nullable`1<bool> ContentBasedDeduplication { get; }
    public Dictionary`2<string, string> Attributes { get; public set; }
    public int get_VisibilityTimeout();
    public int get_DelaySeconds();
    public int get_MaximumMessageSize();
    public int get_MessageRetentionPeriod();
    public int get_ApproximateNumberOfMessages();
    public int get_ApproximateNumberOfMessagesNotVisible();
    public int get_ApproximateNumberOfMessagesDelayed();
    public DateTime get_CreatedTimestamp();
    public DateTime get_LastModifiedTimestamp();
    public string get_QueueARN();
    public string get_Policy();
    public bool get_FifoQueue();
    public Nullable`1<bool> get_ContentBasedDeduplication();
    private string getAttributeValue(string field);
    public Dictionary`2<string, string> get_Attributes();
    public void set_Attributes(Dictionary`2<string, string> value);
    internal bool IsSetAttributes();
}
public class Amazon.SQS.Model.GetQueueUrlRequest : AmazonSQSRequest {
    private string _queueName;
    private string _queueOwnerAWSAccountId;
    [AWSPropertyAttribute]
public string QueueName { get; public set; }
    public string QueueOwnerAWSAccountId { get; public set; }
    public GetQueueUrlRequest(string queueName);
    public string get_QueueName();
    public void set_QueueName(string value);
    internal bool IsSetQueueName();
    public string get_QueueOwnerAWSAccountId();
    public void set_QueueOwnerAWSAccountId(string value);
    internal bool IsSetQueueOwnerAWSAccountId();
}
public class Amazon.SQS.Model.GetQueueUrlResponse : AmazonWebServiceResponse {
    private string _queueUrl;
    public string QueueUrl { get; public set; }
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public interface Amazon.SQS.Model.IListDeadLetterSourceQueuesPaginator {
    public IPaginatedEnumerable`1<ListDeadLetterSourceQueuesResponse> Responses { get; }
    public IPaginatedEnumerable`1<string> QueueUrls { get; }
    public abstract virtual IPaginatedEnumerable`1<ListDeadLetterSourceQueuesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<string> get_QueueUrls();
}
public interface Amazon.SQS.Model.IListQueuesPaginator {
    public IPaginatedEnumerable`1<ListQueuesResponse> Responses { get; }
    public IPaginatedEnumerable`1<string> QueueUrls { get; }
    public abstract virtual IPaginatedEnumerable`1<ListQueuesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<string> get_QueueUrls();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.AddPermissionRequestMarshaller : object {
    private static AddPermissionRequestMarshaller _instance;
    public static AddPermissionRequestMarshaller Instance { get; }
    private static AddPermissionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddPermissionRequest publicRequest);
    internal static AddPermissionRequestMarshaller GetInstance();
    public static AddPermissionRequestMarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.AddPermissionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AddPermissionResponseUnmarshaller _instance;
    public static AddPermissionResponseUnmarshaller Instance { get; }
    private static AddPermissionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddPermissionResponseUnmarshaller GetInstance();
    public static AddPermissionResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.BatchEntryIdsNotDistinctExceptionUnmarshaller : object {
    private static BatchEntryIdsNotDistinctExceptionUnmarshaller _instance;
    public static BatchEntryIdsNotDistinctExceptionUnmarshaller Instance { get; }
    private static BatchEntryIdsNotDistinctExceptionUnmarshaller();
    public sealed virtual BatchEntryIdsNotDistinctException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual BatchEntryIdsNotDistinctException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static BatchEntryIdsNotDistinctExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.BatchRequestTooLongExceptionUnmarshaller : object {
    private static BatchRequestTooLongExceptionUnmarshaller _instance;
    public static BatchRequestTooLongExceptionUnmarshaller Instance { get; }
    private static BatchRequestTooLongExceptionUnmarshaller();
    public sealed virtual BatchRequestTooLongException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual BatchRequestTooLongException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static BatchRequestTooLongExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.BatchResultErrorEntryUnmarshaller : object {
    private static BatchResultErrorEntryUnmarshaller _instance;
    public static BatchResultErrorEntryUnmarshaller Instance { get; }
    private static BatchResultErrorEntryUnmarshaller();
    private sealed virtual override BatchResultErrorEntry Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SQS.Model.BatchResultErrorEntry,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BatchResultErrorEntry Unmarshall(JsonUnmarshallerContext context);
    public static BatchResultErrorEntryUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.CancelMessageMoveTaskRequestMarshaller : object {
    private static CancelMessageMoveTaskRequestMarshaller _instance;
    public static CancelMessageMoveTaskRequestMarshaller Instance { get; }
    private static CancelMessageMoveTaskRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelMessageMoveTaskRequest publicRequest);
    internal static CancelMessageMoveTaskRequestMarshaller GetInstance();
    public static CancelMessageMoveTaskRequestMarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.CancelMessageMoveTaskResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CancelMessageMoveTaskResponseUnmarshaller _instance;
    public static CancelMessageMoveTaskResponseUnmarshaller Instance { get; }
    private static CancelMessageMoveTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelMessageMoveTaskResponseUnmarshaller GetInstance();
    public static CancelMessageMoveTaskResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityBatchRequestEntryMarshaller : object {
    public static ChangeMessageVisibilityBatchRequestEntryMarshaller Instance;
    private static ChangeMessageVisibilityBatchRequestEntryMarshaller();
    public sealed virtual void Marshall(ChangeMessageVisibilityBatchRequestEntry requestObject, JsonMarshallerContext context);
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityBatchRequestMarshaller : object {
    private static ChangeMessageVisibilityBatchRequestMarshaller _instance;
    public static ChangeMessageVisibilityBatchRequestMarshaller Instance { get; }
    private static ChangeMessageVisibilityBatchRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ChangeMessageVisibilityBatchRequest publicRequest);
    internal static ChangeMessageVisibilityBatchRequestMarshaller GetInstance();
    public static ChangeMessageVisibilityBatchRequestMarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityBatchResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ChangeMessageVisibilityBatchResponseUnmarshaller _instance;
    public static ChangeMessageVisibilityBatchResponseUnmarshaller Instance { get; }
    private static ChangeMessageVisibilityBatchResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ChangeMessageVisibilityBatchResponseUnmarshaller GetInstance();
    public static ChangeMessageVisibilityBatchResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityBatchResultEntryUnmarshaller : object {
    private static ChangeMessageVisibilityBatchResultEntryUnmarshaller _instance;
    public static ChangeMessageVisibilityBatchResultEntryUnmarshaller Instance { get; }
    private static ChangeMessageVisibilityBatchResultEntryUnmarshaller();
    private sealed virtual override ChangeMessageVisibilityBatchResultEntry Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SQS.Model.ChangeMessageVisibilityBatchResultEntry,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ChangeMessageVisibilityBatchResultEntry Unmarshall(JsonUnmarshallerContext context);
    public static ChangeMessageVisibilityBatchResultEntryUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityRequestMarshaller : object {
    private static ChangeMessageVisibilityRequestMarshaller _instance;
    public static ChangeMessageVisibilityRequestMarshaller Instance { get; }
    private static ChangeMessageVisibilityRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ChangeMessageVisibilityRequest publicRequest);
    internal static ChangeMessageVisibilityRequestMarshaller GetInstance();
    public static ChangeMessageVisibilityRequestMarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ChangeMessageVisibilityResponseUnmarshaller _instance;
    public static ChangeMessageVisibilityResponseUnmarshaller Instance { get; }
    private static ChangeMessageVisibilityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ChangeMessageVisibilityResponseUnmarshaller GetInstance();
    public static ChangeMessageVisibilityResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.CreateQueueRequestMarshaller : object {
    private static CreateQueueRequestMarshaller _instance;
    public static CreateQueueRequestMarshaller Instance { get; }
    private static CreateQueueRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateQueueRequest publicRequest);
    internal static CreateQueueRequestMarshaller GetInstance();
    public static CreateQueueRequestMarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.CreateQueueResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateQueueResponseUnmarshaller _instance;
    public static CreateQueueResponseUnmarshaller Instance { get; }
    private static CreateQueueResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateQueueResponseUnmarshaller GetInstance();
    public static CreateQueueResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageBatchRequestEntryMarshaller : object {
    public static DeleteMessageBatchRequestEntryMarshaller Instance;
    private static DeleteMessageBatchRequestEntryMarshaller();
    public sealed virtual void Marshall(DeleteMessageBatchRequestEntry requestObject, JsonMarshallerContext context);
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageBatchRequestMarshaller : object {
    private static DeleteMessageBatchRequestMarshaller _instance;
    public static DeleteMessageBatchRequestMarshaller Instance { get; }
    private static DeleteMessageBatchRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteMessageBatchRequest publicRequest);
    internal static DeleteMessageBatchRequestMarshaller GetInstance();
    public static DeleteMessageBatchRequestMarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageBatchResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteMessageBatchResponseUnmarshaller _instance;
    public static DeleteMessageBatchResponseUnmarshaller Instance { get; }
    private static DeleteMessageBatchResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteMessageBatchResponseUnmarshaller GetInstance();
    public static DeleteMessageBatchResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageBatchResultEntryUnmarshaller : object {
    private static DeleteMessageBatchResultEntryUnmarshaller _instance;
    public static DeleteMessageBatchResultEntryUnmarshaller Instance { get; }
    private static DeleteMessageBatchResultEntryUnmarshaller();
    private sealed virtual override DeleteMessageBatchResultEntry Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SQS.Model.DeleteMessageBatchResultEntry,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeleteMessageBatchResultEntry Unmarshall(JsonUnmarshallerContext context);
    public static DeleteMessageBatchResultEntryUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageRequestMarshaller : object {
    private static DeleteMessageRequestMarshaller _instance;
    public static DeleteMessageRequestMarshaller Instance { get; }
    private static DeleteMessageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteMessageRequest publicRequest);
    internal static DeleteMessageRequestMarshaller GetInstance();
    public static DeleteMessageRequestMarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteMessageResponseUnmarshaller _instance;
    public static DeleteMessageResponseUnmarshaller Instance { get; }
    private static DeleteMessageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteMessageResponseUnmarshaller GetInstance();
    public static DeleteMessageResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.DeleteQueueRequestMarshaller : object {
    private static DeleteQueueRequestMarshaller _instance;
    public static DeleteQueueRequestMarshaller Instance { get; }
    private static DeleteQueueRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteQueueRequest publicRequest);
    internal static DeleteQueueRequestMarshaller GetInstance();
    public static DeleteQueueRequestMarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.DeleteQueueResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteQueueResponseUnmarshaller _instance;
    public static DeleteQueueResponseUnmarshaller Instance { get; }
    private static DeleteQueueResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteQueueResponseUnmarshaller GetInstance();
    public static DeleteQueueResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.EmptyBatchRequestExceptionUnmarshaller : object {
    private static EmptyBatchRequestExceptionUnmarshaller _instance;
    public static EmptyBatchRequestExceptionUnmarshaller Instance { get; }
    private static EmptyBatchRequestExceptionUnmarshaller();
    public sealed virtual EmptyBatchRequestException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual EmptyBatchRequestException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static EmptyBatchRequestExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueAttributesRequestMarshaller : object {
    private static GetQueueAttributesRequestMarshaller _instance;
    public static GetQueueAttributesRequestMarshaller Instance { get; }
    private static GetQueueAttributesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetQueueAttributesRequest publicRequest);
    internal static GetQueueAttributesRequestMarshaller GetInstance();
    public static GetQueueAttributesRequestMarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueAttributesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetQueueAttributesResponseUnmarshaller _instance;
    public static GetQueueAttributesResponseUnmarshaller Instance { get; }
    private static GetQueueAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetQueueAttributesResponseUnmarshaller GetInstance();
    public static GetQueueAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueUrlRequestMarshaller : object {
    private static GetQueueUrlRequestMarshaller _instance;
    public static GetQueueUrlRequestMarshaller Instance { get; }
    private static GetQueueUrlRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetQueueUrlRequest publicRequest);
    internal static GetQueueUrlRequestMarshaller GetInstance();
    public static GetQueueUrlRequestMarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueUrlResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetQueueUrlResponseUnmarshaller _instance;
    public static GetQueueUrlResponseUnmarshaller Instance { get; }
    private static GetQueueUrlResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetQueueUrlResponseUnmarshaller GetInstance();
    public static GetQueueUrlResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.InvalidAddressExceptionUnmarshaller : object {
    private static InvalidAddressExceptionUnmarshaller _instance;
    public static InvalidAddressExceptionUnmarshaller Instance { get; }
    private static InvalidAddressExceptionUnmarshaller();
    public sealed virtual InvalidAddressException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidAddressException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidAddressExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.InvalidAttributeNameExceptionUnmarshaller : object {
    private static InvalidAttributeNameExceptionUnmarshaller _instance;
    public static InvalidAttributeNameExceptionUnmarshaller Instance { get; }
    private static InvalidAttributeNameExceptionUnmarshaller();
    public sealed virtual InvalidAttributeNameException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidAttributeNameException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidAttributeNameExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.InvalidAttributeValueExceptionUnmarshaller : object {
    private static InvalidAttributeValueExceptionUnmarshaller _instance;
    public static InvalidAttributeValueExceptionUnmarshaller Instance { get; }
    private static InvalidAttributeValueExceptionUnmarshaller();
    public sealed virtual InvalidAttributeValueException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidAttributeValueException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidAttributeValueExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.InvalidBatchEntryIdExceptionUnmarshaller : object {
    private static InvalidBatchEntryIdExceptionUnmarshaller _instance;
    public static InvalidBatchEntryIdExceptionUnmarshaller Instance { get; }
    private static InvalidBatchEntryIdExceptionUnmarshaller();
    public sealed virtual InvalidBatchEntryIdException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidBatchEntryIdException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidBatchEntryIdExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.InvalidIdFormatExceptionUnmarshaller : object {
    private static InvalidIdFormatExceptionUnmarshaller _instance;
    public static InvalidIdFormatExceptionUnmarshaller Instance { get; }
    private static InvalidIdFormatExceptionUnmarshaller();
    public sealed virtual InvalidIdFormatException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidIdFormatException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidIdFormatExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.InvalidMessageContentsExceptionUnmarshaller : object {
    private static InvalidMessageContentsExceptionUnmarshaller _instance;
    public static InvalidMessageContentsExceptionUnmarshaller Instance { get; }
    private static InvalidMessageContentsExceptionUnmarshaller();
    public sealed virtual InvalidMessageContentsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidMessageContentsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidMessageContentsExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.InvalidSecurityExceptionUnmarshaller : object {
    private static InvalidSecurityExceptionUnmarshaller _instance;
    public static InvalidSecurityExceptionUnmarshaller Instance { get; }
    private static InvalidSecurityExceptionUnmarshaller();
    public sealed virtual InvalidSecurityException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidSecurityException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidSecurityExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.KmsAccessDeniedExceptionUnmarshaller : object {
    private static KmsAccessDeniedExceptionUnmarshaller _instance;
    public static KmsAccessDeniedExceptionUnmarshaller Instance { get; }
    private static KmsAccessDeniedExceptionUnmarshaller();
    public sealed virtual KmsAccessDeniedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KmsAccessDeniedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KmsAccessDeniedExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.KmsDisabledExceptionUnmarshaller : object {
    private static KmsDisabledExceptionUnmarshaller _instance;
    public static KmsDisabledExceptionUnmarshaller Instance { get; }
    private static KmsDisabledExceptionUnmarshaller();
    public sealed virtual KmsDisabledException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KmsDisabledException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KmsDisabledExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.KmsInvalidKeyUsageExceptionUnmarshaller : object {
    private static KmsInvalidKeyUsageExceptionUnmarshaller _instance;
    public static KmsInvalidKeyUsageExceptionUnmarshaller Instance { get; }
    private static KmsInvalidKeyUsageExceptionUnmarshaller();
    public sealed virtual KmsInvalidKeyUsageException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KmsInvalidKeyUsageException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KmsInvalidKeyUsageExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.KmsInvalidStateExceptionUnmarshaller : object {
    private static KmsInvalidStateExceptionUnmarshaller _instance;
    public static KmsInvalidStateExceptionUnmarshaller Instance { get; }
    private static KmsInvalidStateExceptionUnmarshaller();
    public sealed virtual KmsInvalidStateException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KmsInvalidStateException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KmsInvalidStateExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.KmsNotFoundExceptionUnmarshaller : object {
    private static KmsNotFoundExceptionUnmarshaller _instance;
    public static KmsNotFoundExceptionUnmarshaller Instance { get; }
    private static KmsNotFoundExceptionUnmarshaller();
    public sealed virtual KmsNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KmsNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KmsNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.KmsOptInRequiredExceptionUnmarshaller : object {
    private static KmsOptInRequiredExceptionUnmarshaller _instance;
    public static KmsOptInRequiredExceptionUnmarshaller Instance { get; }
    private static KmsOptInRequiredExceptionUnmarshaller();
    public sealed virtual KmsOptInRequiredException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KmsOptInRequiredException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KmsOptInRequiredExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.KmsThrottledExceptionUnmarshaller : object {
    private static KmsThrottledExceptionUnmarshaller _instance;
    public static KmsThrottledExceptionUnmarshaller Instance { get; }
    private static KmsThrottledExceptionUnmarshaller();
    public sealed virtual KmsThrottledException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KmsThrottledException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KmsThrottledExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ListDeadLetterSourceQueuesRequestMarshaller : object {
    private static ListDeadLetterSourceQueuesRequestMarshaller _instance;
    public static ListDeadLetterSourceQueuesRequestMarshaller Instance { get; }
    private static ListDeadLetterSourceQueuesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListDeadLetterSourceQueuesRequest publicRequest);
    internal static ListDeadLetterSourceQueuesRequestMarshaller GetInstance();
    public static ListDeadLetterSourceQueuesRequestMarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ListDeadLetterSourceQueuesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListDeadLetterSourceQueuesResponseUnmarshaller _instance;
    public static ListDeadLetterSourceQueuesResponseUnmarshaller Instance { get; }
    private static ListDeadLetterSourceQueuesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListDeadLetterSourceQueuesResponseUnmarshaller GetInstance();
    public static ListDeadLetterSourceQueuesResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ListMessageMoveTasksRequestMarshaller : object {
    private static ListMessageMoveTasksRequestMarshaller _instance;
    public static ListMessageMoveTasksRequestMarshaller Instance { get; }
    private static ListMessageMoveTasksRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListMessageMoveTasksRequest publicRequest);
    internal static ListMessageMoveTasksRequestMarshaller GetInstance();
    public static ListMessageMoveTasksRequestMarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ListMessageMoveTasksResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListMessageMoveTasksResponseUnmarshaller _instance;
    public static ListMessageMoveTasksResponseUnmarshaller Instance { get; }
    private static ListMessageMoveTasksResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListMessageMoveTasksResponseUnmarshaller GetInstance();
    public static ListMessageMoveTasksResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ListMessageMoveTasksResultEntryUnmarshaller : object {
    private static ListMessageMoveTasksResultEntryUnmarshaller _instance;
    public static ListMessageMoveTasksResultEntryUnmarshaller Instance { get; }
    private static ListMessageMoveTasksResultEntryUnmarshaller();
    private sealed virtual override ListMessageMoveTasksResultEntry Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SQS.Model.ListMessageMoveTasksResultEntry,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ListMessageMoveTasksResultEntry Unmarshall(JsonUnmarshallerContext context);
    public static ListMessageMoveTasksResultEntryUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ListQueuesRequestMarshaller : object {
    private static ListQueuesRequestMarshaller _instance;
    public static ListQueuesRequestMarshaller Instance { get; }
    private static ListQueuesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListQueuesRequest publicRequest);
    internal static ListQueuesRequestMarshaller GetInstance();
    public static ListQueuesRequestMarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ListQueuesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListQueuesResponseUnmarshaller _instance;
    public static ListQueuesResponseUnmarshaller Instance { get; }
    private static ListQueuesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListQueuesResponseUnmarshaller GetInstance();
    public static ListQueuesResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ListQueueTagsRequestMarshaller : object {
    private static ListQueueTagsRequestMarshaller _instance;
    public static ListQueueTagsRequestMarshaller Instance { get; }
    private static ListQueueTagsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListQueueTagsRequest publicRequest);
    internal static ListQueueTagsRequestMarshaller GetInstance();
    public static ListQueueTagsRequestMarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ListQueueTagsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListQueueTagsResponseUnmarshaller _instance;
    public static ListQueueTagsResponseUnmarshaller Instance { get; }
    private static ListQueueTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListQueueTagsResponseUnmarshaller GetInstance();
    public static ListQueueTagsResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.MessageAttributeValueMarshaller : object {
    public static MessageAttributeValueMarshaller Instance;
    private static MessageAttributeValueMarshaller();
    public sealed virtual void Marshall(MessageAttributeValue requestObject, JsonMarshallerContext context);
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.MessageAttributeValueUnmarshaller : object {
    private static MessageAttributeValueUnmarshaller _instance;
    public static MessageAttributeValueUnmarshaller Instance { get; }
    private static MessageAttributeValueUnmarshaller();
    private sealed virtual override MessageAttributeValue Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SQS.Model.MessageAttributeValue,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MessageAttributeValue Unmarshall(JsonUnmarshallerContext context);
    public static MessageAttributeValueUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.MessageNotInflightExceptionUnmarshaller : object {
    private static MessageNotInflightExceptionUnmarshaller _instance;
    public static MessageNotInflightExceptionUnmarshaller Instance { get; }
    private static MessageNotInflightExceptionUnmarshaller();
    public sealed virtual MessageNotInflightException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual MessageNotInflightException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static MessageNotInflightExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.MessageSystemAttributeValueMarshaller : object {
    public static MessageSystemAttributeValueMarshaller Instance;
    private static MessageSystemAttributeValueMarshaller();
    public sealed virtual void Marshall(MessageSystemAttributeValue requestObject, JsonMarshallerContext context);
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.MessageUnmarshaller : object {
    private static MessageUnmarshaller _instance;
    public static MessageUnmarshaller Instance { get; }
    private static MessageUnmarshaller();
    private sealed virtual override Message Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SQS.Model.Message,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Message Unmarshall(JsonUnmarshallerContext context);
    public static MessageUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.OverLimitExceptionUnmarshaller : object {
    private static OverLimitExceptionUnmarshaller _instance;
    public static OverLimitExceptionUnmarshaller Instance { get; }
    private static OverLimitExceptionUnmarshaller();
    public sealed virtual OverLimitException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual OverLimitException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static OverLimitExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.PurgeQueueInProgressExceptionUnmarshaller : object {
    private static PurgeQueueInProgressExceptionUnmarshaller _instance;
    public static PurgeQueueInProgressExceptionUnmarshaller Instance { get; }
    private static PurgeQueueInProgressExceptionUnmarshaller();
    public sealed virtual PurgeQueueInProgressException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual PurgeQueueInProgressException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static PurgeQueueInProgressExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.PurgeQueueRequestMarshaller : object {
    private static PurgeQueueRequestMarshaller _instance;
    public static PurgeQueueRequestMarshaller Instance { get; }
    private static PurgeQueueRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PurgeQueueRequest publicRequest);
    internal static PurgeQueueRequestMarshaller GetInstance();
    public static PurgeQueueRequestMarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.PurgeQueueResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PurgeQueueResponseUnmarshaller _instance;
    public static PurgeQueueResponseUnmarshaller Instance { get; }
    private static PurgeQueueResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PurgeQueueResponseUnmarshaller GetInstance();
    public static PurgeQueueResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.QueueDeletedRecentlyExceptionUnmarshaller : object {
    private static QueueDeletedRecentlyExceptionUnmarshaller _instance;
    public static QueueDeletedRecentlyExceptionUnmarshaller Instance { get; }
    private static QueueDeletedRecentlyExceptionUnmarshaller();
    public sealed virtual QueueDeletedRecentlyException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual QueueDeletedRecentlyException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static QueueDeletedRecentlyExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.QueueDoesNotExistExceptionUnmarshaller : object {
    private static QueueDoesNotExistExceptionUnmarshaller _instance;
    public static QueueDoesNotExistExceptionUnmarshaller Instance { get; }
    private static QueueDoesNotExistExceptionUnmarshaller();
    public sealed virtual QueueDoesNotExistException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual QueueDoesNotExistException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static QueueDoesNotExistExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.QueueNameExistsExceptionUnmarshaller : object {
    private static QueueNameExistsExceptionUnmarshaller _instance;
    public static QueueNameExistsExceptionUnmarshaller Instance { get; }
    private static QueueNameExistsExceptionUnmarshaller();
    public sealed virtual QueueNameExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual QueueNameExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static QueueNameExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ReceiptHandleIsInvalidExceptionUnmarshaller : object {
    private static ReceiptHandleIsInvalidExceptionUnmarshaller _instance;
    public static ReceiptHandleIsInvalidExceptionUnmarshaller Instance { get; }
    private static ReceiptHandleIsInvalidExceptionUnmarshaller();
    public sealed virtual ReceiptHandleIsInvalidException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ReceiptHandleIsInvalidException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ReceiptHandleIsInvalidExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ReceiveMessageRequestMarshaller : object {
    private static ReceiveMessageRequestMarshaller _instance;
    public static ReceiveMessageRequestMarshaller Instance { get; }
    private static ReceiveMessageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReceiveMessageRequest publicRequest);
    internal static ReceiveMessageRequestMarshaller GetInstance();
    public static ReceiveMessageRequestMarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ReceiveMessageResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ReceiveMessageResponseUnmarshaller _instance;
    public static ReceiveMessageResponseUnmarshaller Instance { get; }
    private static ReceiveMessageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReceiveMessageResponseUnmarshaller GetInstance();
    public static ReceiveMessageResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.RemovePermissionRequestMarshaller : object {
    private static RemovePermissionRequestMarshaller _instance;
    public static RemovePermissionRequestMarshaller Instance { get; }
    private static RemovePermissionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemovePermissionRequest publicRequest);
    internal static RemovePermissionRequestMarshaller GetInstance();
    public static RemovePermissionRequestMarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.RemovePermissionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RemovePermissionResponseUnmarshaller _instance;
    public static RemovePermissionResponseUnmarshaller Instance { get; }
    private static RemovePermissionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemovePermissionResponseUnmarshaller GetInstance();
    public static RemovePermissionResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.RequestThrottledExceptionUnmarshaller : object {
    private static RequestThrottledExceptionUnmarshaller _instance;
    public static RequestThrottledExceptionUnmarshaller Instance { get; }
    private static RequestThrottledExceptionUnmarshaller();
    public sealed virtual RequestThrottledException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual RequestThrottledException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static RequestThrottledExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller : object {
    private static ResourceNotFoundExceptionUnmarshaller _instance;
    public static ResourceNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourceNotFoundExceptionUnmarshaller();
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageBatchRequestEntryMarshaller : object {
    public static SendMessageBatchRequestEntryMarshaller Instance;
    private static SendMessageBatchRequestEntryMarshaller();
    public sealed virtual void Marshall(SendMessageBatchRequestEntry requestObject, JsonMarshallerContext context);
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageBatchRequestMarshaller : object {
    private static SendMessageBatchRequestMarshaller _instance;
    public static SendMessageBatchRequestMarshaller Instance { get; }
    private static SendMessageBatchRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SendMessageBatchRequest publicRequest);
    internal static SendMessageBatchRequestMarshaller GetInstance();
    public static SendMessageBatchRequestMarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageBatchResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SendMessageBatchResponseUnmarshaller _instance;
    public static SendMessageBatchResponseUnmarshaller Instance { get; }
    private static SendMessageBatchResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SendMessageBatchResponseUnmarshaller GetInstance();
    public static SendMessageBatchResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageBatchResultEntryUnmarshaller : object {
    private static SendMessageBatchResultEntryUnmarshaller _instance;
    public static SendMessageBatchResultEntryUnmarshaller Instance { get; }
    private static SendMessageBatchResultEntryUnmarshaller();
    private sealed virtual override SendMessageBatchResultEntry Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SQS.Model.SendMessageBatchResultEntry,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SendMessageBatchResultEntry Unmarshall(JsonUnmarshallerContext context);
    public static SendMessageBatchResultEntryUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageRequestMarshaller : object {
    private static SendMessageRequestMarshaller _instance;
    public static SendMessageRequestMarshaller Instance { get; }
    private static SendMessageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SendMessageRequest publicRequest);
    internal static SendMessageRequestMarshaller GetInstance();
    public static SendMessageRequestMarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SendMessageResponseUnmarshaller _instance;
    public static SendMessageResponseUnmarshaller Instance { get; }
    private static SendMessageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SendMessageResponseUnmarshaller GetInstance();
    public static SendMessageResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.SetQueueAttributesRequestMarshaller : object {
    private static SetQueueAttributesRequestMarshaller _instance;
    public static SetQueueAttributesRequestMarshaller Instance { get; }
    private static SetQueueAttributesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetQueueAttributesRequest publicRequest);
    internal static SetQueueAttributesRequestMarshaller GetInstance();
    public static SetQueueAttributesRequestMarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.SetQueueAttributesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SetQueueAttributesResponseUnmarshaller _instance;
    public static SetQueueAttributesResponseUnmarshaller Instance { get; }
    private static SetQueueAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetQueueAttributesResponseUnmarshaller GetInstance();
    public static SetQueueAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.StartMessageMoveTaskRequestMarshaller : object {
    private static StartMessageMoveTaskRequestMarshaller _instance;
    public static StartMessageMoveTaskRequestMarshaller Instance { get; }
    private static StartMessageMoveTaskRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartMessageMoveTaskRequest publicRequest);
    internal static StartMessageMoveTaskRequestMarshaller GetInstance();
    public static StartMessageMoveTaskRequestMarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.StartMessageMoveTaskResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartMessageMoveTaskResponseUnmarshaller _instance;
    public static StartMessageMoveTaskResponseUnmarshaller Instance { get; }
    private static StartMessageMoveTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartMessageMoveTaskResponseUnmarshaller GetInstance();
    public static StartMessageMoveTaskResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.TagQueueRequestMarshaller : object {
    private static TagQueueRequestMarshaller _instance;
    public static TagQueueRequestMarshaller Instance { get; }
    private static TagQueueRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TagQueueRequest publicRequest);
    internal static TagQueueRequestMarshaller GetInstance();
    public static TagQueueRequestMarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.TagQueueResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TagQueueResponseUnmarshaller _instance;
    public static TagQueueResponseUnmarshaller Instance { get; }
    private static TagQueueResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TagQueueResponseUnmarshaller GetInstance();
    public static TagQueueResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.TooManyEntriesInBatchRequestExceptionUnmarshaller : object {
    private static TooManyEntriesInBatchRequestExceptionUnmarshaller _instance;
    public static TooManyEntriesInBatchRequestExceptionUnmarshaller Instance { get; }
    private static TooManyEntriesInBatchRequestExceptionUnmarshaller();
    public sealed virtual TooManyEntriesInBatchRequestException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TooManyEntriesInBatchRequestException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyEntriesInBatchRequestExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.UnsupportedOperationExceptionUnmarshaller : object {
    private static UnsupportedOperationExceptionUnmarshaller _instance;
    public static UnsupportedOperationExceptionUnmarshaller Instance { get; }
    private static UnsupportedOperationExceptionUnmarshaller();
    public sealed virtual UnsupportedOperationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnsupportedOperationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnsupportedOperationExceptionUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.UntagQueueRequestMarshaller : object {
    private static UntagQueueRequestMarshaller _instance;
    public static UntagQueueRequestMarshaller Instance { get; }
    private static UntagQueueRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UntagQueueRequest publicRequest);
    internal static UntagQueueRequestMarshaller GetInstance();
    public static UntagQueueRequestMarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.UntagQueueResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UntagQueueResponseUnmarshaller _instance;
    public static UntagQueueResponseUnmarshaller Instance { get; }
    private static UntagQueueResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UntagQueueResponseUnmarshaller GetInstance();
    public static UntagQueueResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.InvalidAddressException : AmazonSQSException {
    public InvalidAddressException(string message);
    public InvalidAddressException(string message, Exception innerException);
    public InvalidAddressException(Exception innerException);
    public InvalidAddressException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidAddressException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.InvalidAttributeNameException : AmazonSQSException {
    public InvalidAttributeNameException(string message);
    public InvalidAttributeNameException(string message, Exception innerException);
    public InvalidAttributeNameException(Exception innerException);
    public InvalidAttributeNameException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidAttributeNameException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.InvalidAttributeValueException : AmazonSQSException {
    public InvalidAttributeValueException(string message);
    public InvalidAttributeValueException(string message, Exception innerException);
    public InvalidAttributeValueException(Exception innerException);
    public InvalidAttributeValueException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidAttributeValueException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.InvalidBatchEntryIdException : AmazonSQSException {
    public InvalidBatchEntryIdException(string message);
    public InvalidBatchEntryIdException(string message, Exception innerException);
    public InvalidBatchEntryIdException(Exception innerException);
    public InvalidBatchEntryIdException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidBatchEntryIdException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
[ObsoleteAttribute("exception has been included in ReceiptHandleIsInvalid")]
public class Amazon.SQS.Model.InvalidIdFormatException : AmazonSQSException {
    public InvalidIdFormatException(string message);
    public InvalidIdFormatException(string message, Exception innerException);
    public InvalidIdFormatException(Exception innerException);
    public InvalidIdFormatException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidIdFormatException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.InvalidMessageContentsException : AmazonSQSException {
    public InvalidMessageContentsException(string message);
    public InvalidMessageContentsException(string message, Exception innerException);
    public InvalidMessageContentsException(Exception innerException);
    public InvalidMessageContentsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidMessageContentsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.InvalidSecurityException : AmazonSQSException {
    public InvalidSecurityException(string message);
    public InvalidSecurityException(string message, Exception innerException);
    public InvalidSecurityException(Exception innerException);
    public InvalidSecurityException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidSecurityException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public interface Amazon.SQS.Model.ISQSPaginatorFactory {
    public abstract virtual IListDeadLetterSourceQueuesPaginator ListDeadLetterSourceQueues(ListDeadLetterSourceQueuesRequest request);
    public abstract virtual IListQueuesPaginator ListQueues(ListQueuesRequest request);
}
public class Amazon.SQS.Model.KmsAccessDeniedException : AmazonSQSException {
    public KmsAccessDeniedException(string message);
    public KmsAccessDeniedException(string message, Exception innerException);
    public KmsAccessDeniedException(Exception innerException);
    public KmsAccessDeniedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KmsAccessDeniedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.KmsDisabledException : AmazonSQSException {
    public KmsDisabledException(string message);
    public KmsDisabledException(string message, Exception innerException);
    public KmsDisabledException(Exception innerException);
    public KmsDisabledException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KmsDisabledException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.KmsInvalidKeyUsageException : AmazonSQSException {
    public KmsInvalidKeyUsageException(string message);
    public KmsInvalidKeyUsageException(string message, Exception innerException);
    public KmsInvalidKeyUsageException(Exception innerException);
    public KmsInvalidKeyUsageException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KmsInvalidKeyUsageException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.KmsInvalidStateException : AmazonSQSException {
    public KmsInvalidStateException(string message);
    public KmsInvalidStateException(string message, Exception innerException);
    public KmsInvalidStateException(Exception innerException);
    public KmsInvalidStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KmsInvalidStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.KmsNotFoundException : AmazonSQSException {
    public KmsNotFoundException(string message);
    public KmsNotFoundException(string message, Exception innerException);
    public KmsNotFoundException(Exception innerException);
    public KmsNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KmsNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.KmsOptInRequiredException : AmazonSQSException {
    public KmsOptInRequiredException(string message);
    public KmsOptInRequiredException(string message, Exception innerException);
    public KmsOptInRequiredException(Exception innerException);
    public KmsOptInRequiredException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KmsOptInRequiredException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.KmsThrottledException : AmazonSQSException {
    public KmsThrottledException(string message);
    public KmsThrottledException(string message, Exception innerException);
    public KmsThrottledException(Exception innerException);
    public KmsThrottledException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KmsThrottledException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
internal class Amazon.SQS.Model.ListDeadLetterSourceQueuesPaginator : object {
    private IAmazonSQS _client;
    private ListDeadLetterSourceQueuesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListDeadLetterSourceQueuesResponse> Responses { get; }
    public IPaginatedEnumerable`1<string> QueueUrls { get; }
    internal ListDeadLetterSourceQueuesPaginator(IAmazonSQS client, ListDeadLetterSourceQueuesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListDeadLetterSourceQueuesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<string> get_QueueUrls();
    [AsyncIteratorStateMachineAttribute("Amazon.SQS.Model.ListDeadLetterSourceQueuesPaginator/<Amazon-Runtime-IPaginator<Amazon-SQS-Model-ListDeadLetterSourceQueuesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListDeadLetterSourceQueuesResponse> Amazon.Runtime.IPaginator<Amazon.SQS.Model.ListDeadLetterSourceQueuesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SQS.Model.ListDeadLetterSourceQueuesRequest : AmazonSQSRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _queueUrl;
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string QueueUrl { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.ListDeadLetterSourceQueuesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<string> _queueUrls;
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> QueueUrls { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_QueueUrls();
    public void set_QueueUrls(List`1<string> value);
    internal bool IsSetQueueUrls();
}
public class Amazon.SQS.Model.ListMessageMoveTasksRequest : AmazonSQSRequest {
    private Nullable`1<int> _maxResults;
    private string _sourceArn;
    public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string SourceArn { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
}
public class Amazon.SQS.Model.ListMessageMoveTasksResponse : AmazonWebServiceResponse {
    private List`1<ListMessageMoveTasksResultEntry> _results;
    public List`1<ListMessageMoveTasksResultEntry> Results { get; public set; }
    public List`1<ListMessageMoveTasksResultEntry> get_Results();
    public void set_Results(List`1<ListMessageMoveTasksResultEntry> value);
    internal bool IsSetResults();
}
public class Amazon.SQS.Model.ListMessageMoveTasksResultEntry : object {
    private Nullable`1<long> _approximateNumberOfMessagesMoved;
    private Nullable`1<long> _approximateNumberOfMessagesToMove;
    private string _destinationArn;
    private string _failureReason;
    private Nullable`1<int> _maxNumberOfMessagesPerSecond;
    private string _sourceArn;
    private Nullable`1<long> _startedTimestamp;
    private string _status;
    private string _taskHandle;
    public Nullable`1<long> ApproximateNumberOfMessagesMoved { get; public set; }
    public Nullable`1<long> ApproximateNumberOfMessagesToMove { get; public set; }
    public string DestinationArn { get; public set; }
    public string FailureReason { get; public set; }
    public Nullable`1<int> MaxNumberOfMessagesPerSecond { get; public set; }
    public string SourceArn { get; public set; }
    public Nullable`1<long> StartedTimestamp { get; public set; }
    public string Status { get; public set; }
    public string TaskHandle { get; public set; }
    public Nullable`1<long> get_ApproximateNumberOfMessagesMoved();
    public void set_ApproximateNumberOfMessagesMoved(Nullable`1<long> value);
    internal bool IsSetApproximateNumberOfMessagesMoved();
    public Nullable`1<long> get_ApproximateNumberOfMessagesToMove();
    public void set_ApproximateNumberOfMessagesToMove(Nullable`1<long> value);
    internal bool IsSetApproximateNumberOfMessagesToMove();
    public string get_DestinationArn();
    public void set_DestinationArn(string value);
    internal bool IsSetDestinationArn();
    public string get_FailureReason();
    public void set_FailureReason(string value);
    internal bool IsSetFailureReason();
    public Nullable`1<int> get_MaxNumberOfMessagesPerSecond();
    public void set_MaxNumberOfMessagesPerSecond(Nullable`1<int> value);
    internal bool IsSetMaxNumberOfMessagesPerSecond();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
    public Nullable`1<long> get_StartedTimestamp();
    public void set_StartedTimestamp(Nullable`1<long> value);
    internal bool IsSetStartedTimestamp();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_TaskHandle();
    public void set_TaskHandle(string value);
    internal bool IsSetTaskHandle();
}
internal class Amazon.SQS.Model.ListQueuesPaginator : object {
    private IAmazonSQS _client;
    private ListQueuesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListQueuesResponse> Responses { get; }
    public IPaginatedEnumerable`1<string> QueueUrls { get; }
    internal ListQueuesPaginator(IAmazonSQS client, ListQueuesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListQueuesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<string> get_QueueUrls();
    [AsyncIteratorStateMachineAttribute("Amazon.SQS.Model.ListQueuesPaginator/<Amazon-Runtime-IPaginator<Amazon-SQS-Model-ListQueuesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListQueuesResponse> Amazon.Runtime.IPaginator<Amazon.SQS.Model.ListQueuesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.SQS.Model.ListQueuesRequest : AmazonSQSRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _queueNamePrefix;
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string QueueNamePrefix { get; public set; }
    public ListQueuesRequest(string queueNamePrefix);
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_QueueNamePrefix();
    public void set_QueueNamePrefix(string value);
    internal bool IsSetQueueNamePrefix();
}
public class Amazon.SQS.Model.ListQueuesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<string> _queueUrls;
    public string NextToken { get; public set; }
    public List`1<string> QueueUrls { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_QueueUrls();
    public void set_QueueUrls(List`1<string> value);
    internal bool IsSetQueueUrls();
}
public class Amazon.SQS.Model.ListQueueTagsRequest : AmazonSQSRequest {
    private string _queueUrl;
    [AWSPropertyAttribute]
public string QueueUrl { get; public set; }
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.ListQueueTagsResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _tags;
    public Dictionary`2<string, string> Tags { get; public set; }
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.SQS.Model.Message : object {
    private Dictionary`2<string, string> _attributes;
    private string _body;
    private string _md5OfBody;
    private string _md5OfMessageAttributes;
    private Dictionary`2<string, MessageAttributeValue> _messageAttributes;
    private string _messageId;
    private string _receiptHandle;
    public Dictionary`2<string, string> Attributes { get; public set; }
    public string Body { get; public set; }
    public string MD5OfBody { get; public set; }
    public string MD5OfMessageAttributes { get; public set; }
    public Dictionary`2<string, MessageAttributeValue> MessageAttributes { get; public set; }
    public string MessageId { get; public set; }
    public string ReceiptHandle { get; public set; }
    public Dictionary`2<string, string> get_Attributes();
    public void set_Attributes(Dictionary`2<string, string> value);
    internal bool IsSetAttributes();
    public string get_Body();
    public void set_Body(string value);
    internal bool IsSetBody();
    public string get_MD5OfBody();
    public void set_MD5OfBody(string value);
    internal bool IsSetMD5OfBody();
    public string get_MD5OfMessageAttributes();
    public void set_MD5OfMessageAttributes(string value);
    internal bool IsSetMD5OfMessageAttributes();
    public Dictionary`2<string, MessageAttributeValue> get_MessageAttributes();
    public void set_MessageAttributes(Dictionary`2<string, MessageAttributeValue> value);
    internal bool IsSetMessageAttributes();
    public string get_MessageId();
    public void set_MessageId(string value);
    internal bool IsSetMessageId();
    public string get_ReceiptHandle();
    public void set_ReceiptHandle(string value);
    internal bool IsSetReceiptHandle();
}
public class Amazon.SQS.Model.MessageAttributeValue : object {
    private List`1<MemoryStream> _binaryListValues;
    private MemoryStream _binaryValue;
    private string _dataType;
    private List`1<string> _stringListValues;
    private string _stringValue;
    public List`1<MemoryStream> BinaryListValues { get; public set; }
    public MemoryStream BinaryValue { get; public set; }
    [AWSPropertyAttribute]
public string DataType { get; public set; }
    public List`1<string> StringListValues { get; public set; }
    public string StringValue { get; public set; }
    public List`1<MemoryStream> get_BinaryListValues();
    public void set_BinaryListValues(List`1<MemoryStream> value);
    internal bool IsSetBinaryListValues();
    public MemoryStream get_BinaryValue();
    public void set_BinaryValue(MemoryStream value);
    internal bool IsSetBinaryValue();
    public string get_DataType();
    public void set_DataType(string value);
    internal bool IsSetDataType();
    public List`1<string> get_StringListValues();
    public void set_StringListValues(List`1<string> value);
    internal bool IsSetStringListValues();
    public string get_StringValue();
    public void set_StringValue(string value);
    internal bool IsSetStringValue();
}
public class Amazon.SQS.Model.MessageNotInflightException : AmazonSQSException {
    public MessageNotInflightException(string message);
    public MessageNotInflightException(string message, Exception innerException);
    public MessageNotInflightException(Exception innerException);
    public MessageNotInflightException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public MessageNotInflightException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.MessageSystemAttributeValue : object {
    private List`1<MemoryStream> _binaryListValues;
    private MemoryStream _binaryValue;
    private string _dataType;
    private List`1<string> _stringListValues;
    private string _stringValue;
    public List`1<MemoryStream> BinaryListValues { get; public set; }
    public MemoryStream BinaryValue { get; public set; }
    [AWSPropertyAttribute]
public string DataType { get; public set; }
    public List`1<string> StringListValues { get; public set; }
    public string StringValue { get; public set; }
    public List`1<MemoryStream> get_BinaryListValues();
    public void set_BinaryListValues(List`1<MemoryStream> value);
    internal bool IsSetBinaryListValues();
    public MemoryStream get_BinaryValue();
    public void set_BinaryValue(MemoryStream value);
    internal bool IsSetBinaryValue();
    public string get_DataType();
    public void set_DataType(string value);
    internal bool IsSetDataType();
    public List`1<string> get_StringListValues();
    public void set_StringListValues(List`1<string> value);
    internal bool IsSetStringListValues();
    public string get_StringValue();
    public void set_StringValue(string value);
    internal bool IsSetStringValue();
}
public class Amazon.SQS.Model.OverLimitException : AmazonSQSException {
    public OverLimitException(string message);
    public OverLimitException(string message, Exception innerException);
    public OverLimitException(Exception innerException);
    public OverLimitException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OverLimitException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.PurgeQueueInProgressException : AmazonSQSException {
    public PurgeQueueInProgressException(string message);
    public PurgeQueueInProgressException(string message, Exception innerException);
    public PurgeQueueInProgressException(Exception innerException);
    public PurgeQueueInProgressException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PurgeQueueInProgressException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.PurgeQueueRequest : AmazonSQSRequest {
    private string _queueUrl;
    [AWSPropertyAttribute]
public string QueueUrl { get; public set; }
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.PurgeQueueResponse : AmazonWebServiceResponse {
}
public class Amazon.SQS.Model.QueueDeletedRecentlyException : AmazonSQSException {
    public QueueDeletedRecentlyException(string message);
    public QueueDeletedRecentlyException(string message, Exception innerException);
    public QueueDeletedRecentlyException(Exception innerException);
    public QueueDeletedRecentlyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public QueueDeletedRecentlyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.QueueDoesNotExistException : AmazonSQSException {
    public QueueDoesNotExistException(string message);
    public QueueDoesNotExistException(string message, Exception innerException);
    public QueueDoesNotExistException(Exception innerException);
    public QueueDoesNotExistException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public QueueDoesNotExistException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.QueueNameExistsException : AmazonSQSException {
    public QueueNameExistsException(string message);
    public QueueNameExistsException(string message, Exception innerException);
    public QueueNameExistsException(Exception innerException);
    public QueueNameExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public QueueNameExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.ReceiptHandleIsInvalidException : AmazonSQSException {
    public ReceiptHandleIsInvalidException(string message);
    public ReceiptHandleIsInvalidException(string message, Exception innerException);
    public ReceiptHandleIsInvalidException(Exception innerException);
    public ReceiptHandleIsInvalidException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ReceiptHandleIsInvalidException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.ReceiveMessageRequest : AmazonSQSRequest {
    private List`1<string> _attributeNames;
    private Nullable`1<int> _maxNumberOfMessages;
    private List`1<string> _messageAttributeNames;
    private List`1<string> _messageSystemAttributeNames;
    private string _queueUrl;
    private string _receiveRequestAttemptId;
    private Nullable`1<int> _visibilityTimeout;
    private Nullable`1<int> _waitTimeSeconds;
    [ObsoleteAttribute("AttributeNames has been replaced by MessageSystemAttributeNames")]
public List`1<string> AttributeNames { get; public set; }
    public Nullable`1<int> MaxNumberOfMessages { get; public set; }
    public List`1<string> MessageAttributeNames { get; public set; }
    public List`1<string> MessageSystemAttributeNames { get; public set; }
    [AWSPropertyAttribute]
public string QueueUrl { get; public set; }
    public string ReceiveRequestAttemptId { get; public set; }
    public Nullable`1<int> VisibilityTimeout { get; public set; }
    public Nullable`1<int> WaitTimeSeconds { get; public set; }
    public ReceiveMessageRequest(string queueUrl);
    public List`1<string> get_AttributeNames();
    public void set_AttributeNames(List`1<string> value);
    internal bool IsSetAttributeNames();
    public Nullable`1<int> get_MaxNumberOfMessages();
    public void set_MaxNumberOfMessages(Nullable`1<int> value);
    internal bool IsSetMaxNumberOfMessages();
    public List`1<string> get_MessageAttributeNames();
    public void set_MessageAttributeNames(List`1<string> value);
    internal bool IsSetMessageAttributeNames();
    public List`1<string> get_MessageSystemAttributeNames();
    public void set_MessageSystemAttributeNames(List`1<string> value);
    internal bool IsSetMessageSystemAttributeNames();
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
    public string get_ReceiveRequestAttemptId();
    public void set_ReceiveRequestAttemptId(string value);
    internal bool IsSetReceiveRequestAttemptId();
    public Nullable`1<int> get_VisibilityTimeout();
    public void set_VisibilityTimeout(Nullable`1<int> value);
    internal bool IsSetVisibilityTimeout();
    public Nullable`1<int> get_WaitTimeSeconds();
    public void set_WaitTimeSeconds(Nullable`1<int> value);
    internal bool IsSetWaitTimeSeconds();
}
public class Amazon.SQS.Model.ReceiveMessageResponse : AmazonWebServiceResponse {
    private List`1<Message> _messages;
    public List`1<Message> Messages { get; public set; }
    public List`1<Message> get_Messages();
    public void set_Messages(List`1<Message> value);
    internal bool IsSetMessages();
}
public class Amazon.SQS.Model.RemovePermissionRequest : AmazonSQSRequest {
    private string _label;
    private string _queueUrl;
    [AWSPropertyAttribute]
public string Label { get; public set; }
    [AWSPropertyAttribute]
public string QueueUrl { get; public set; }
    public RemovePermissionRequest(string queueUrl, string label);
    public string get_Label();
    public void set_Label(string value);
    internal bool IsSetLabel();
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.RemovePermissionResponse : AmazonWebServiceResponse {
}
public class Amazon.SQS.Model.RequestThrottledException : AmazonSQSException {
    public RequestThrottledException(string message);
    public RequestThrottledException(string message, Exception innerException);
    public RequestThrottledException(Exception innerException);
    public RequestThrottledException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public RequestThrottledException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.ResourceNotFoundException : AmazonSQSException {
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.SendMessageBatchRequest : AmazonSQSRequest {
    private List`1<SendMessageBatchRequestEntry> _entries;
    private string _queueUrl;
    [AWSPropertyAttribute]
public List`1<SendMessageBatchRequestEntry> Entries { get; public set; }
    [AWSPropertyAttribute]
public string QueueUrl { get; public set; }
    public SendMessageBatchRequest(string queueUrl, List`1<SendMessageBatchRequestEntry> entries);
    public List`1<SendMessageBatchRequestEntry> get_Entries();
    public void set_Entries(List`1<SendMessageBatchRequestEntry> value);
    internal bool IsSetEntries();
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.SendMessageBatchRequestEntry : object {
    private Nullable`1<int> _delaySeconds;
    private string _id;
    private Dictionary`2<string, MessageAttributeValue> _messageAttributes;
    private string _messageBody;
    private string _messageDeduplicationId;
    private string _messageGroupId;
    private Dictionary`2<string, MessageSystemAttributeValue> _messageSystemAttributes;
    public Nullable`1<int> DelaySeconds { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public Dictionary`2<string, MessageAttributeValue> MessageAttributes { get; public set; }
    [AWSPropertyAttribute]
public string MessageBody { get; public set; }
    public string MessageDeduplicationId { get; public set; }
    public string MessageGroupId { get; public set; }
    public Dictionary`2<string, MessageSystemAttributeValue> MessageSystemAttributes { get; public set; }
    public SendMessageBatchRequestEntry(string id, string messageBody);
    public Nullable`1<int> get_DelaySeconds();
    public void set_DelaySeconds(Nullable`1<int> value);
    internal bool IsSetDelaySeconds();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Dictionary`2<string, MessageAttributeValue> get_MessageAttributes();
    public void set_MessageAttributes(Dictionary`2<string, MessageAttributeValue> value);
    internal bool IsSetMessageAttributes();
    public string get_MessageBody();
    public void set_MessageBody(string value);
    internal bool IsSetMessageBody();
    public string get_MessageDeduplicationId();
    public void set_MessageDeduplicationId(string value);
    internal bool IsSetMessageDeduplicationId();
    public string get_MessageGroupId();
    public void set_MessageGroupId(string value);
    internal bool IsSetMessageGroupId();
    public Dictionary`2<string, MessageSystemAttributeValue> get_MessageSystemAttributes();
    public void set_MessageSystemAttributes(Dictionary`2<string, MessageSystemAttributeValue> value);
    internal bool IsSetMessageSystemAttributes();
}
public class Amazon.SQS.Model.SendMessageBatchResponse : AmazonWebServiceResponse {
    private List`1<BatchResultErrorEntry> _failed;
    private List`1<SendMessageBatchResultEntry> _successful;
    [AWSPropertyAttribute]
public List`1<BatchResultErrorEntry> Failed { get; public set; }
    [AWSPropertyAttribute]
public List`1<SendMessageBatchResultEntry> Successful { get; public set; }
    public List`1<BatchResultErrorEntry> get_Failed();
    public void set_Failed(List`1<BatchResultErrorEntry> value);
    internal bool IsSetFailed();
    public List`1<SendMessageBatchResultEntry> get_Successful();
    public void set_Successful(List`1<SendMessageBatchResultEntry> value);
    internal bool IsSetSuccessful();
}
public class Amazon.SQS.Model.SendMessageBatchResultEntry : object {
    private string _id;
    private string _md5OfMessageAttributes;
    private string _md5OfMessageBody;
    private string _md5OfMessageSystemAttributes;
    private string _messageId;
    private string _sequenceNumber;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string MD5OfMessageAttributes { get; public set; }
    [AWSPropertyAttribute]
public string MD5OfMessageBody { get; public set; }
    public string MD5OfMessageSystemAttributes { get; public set; }
    [AWSPropertyAttribute]
public string MessageId { get; public set; }
    public string SequenceNumber { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_MD5OfMessageAttributes();
    public void set_MD5OfMessageAttributes(string value);
    internal bool IsSetMD5OfMessageAttributes();
    public string get_MD5OfMessageBody();
    public void set_MD5OfMessageBody(string value);
    internal bool IsSetMD5OfMessageBody();
    public string get_MD5OfMessageSystemAttributes();
    public void set_MD5OfMessageSystemAttributes(string value);
    internal bool IsSetMD5OfMessageSystemAttributes();
    public string get_MessageId();
    public void set_MessageId(string value);
    internal bool IsSetMessageId();
    public string get_SequenceNumber();
    public void set_SequenceNumber(string value);
    internal bool IsSetSequenceNumber();
}
public class Amazon.SQS.Model.SendMessageRequest : AmazonSQSRequest {
    private Nullable`1<int> _delaySeconds;
    private Dictionary`2<string, MessageAttributeValue> _messageAttributes;
    private string _messageBody;
    private string _messageDeduplicationId;
    private string _messageGroupId;
    private Dictionary`2<string, MessageSystemAttributeValue> _messageSystemAttributes;
    private string _queueUrl;
    public Nullable`1<int> DelaySeconds { get; public set; }
    public Dictionary`2<string, MessageAttributeValue> MessageAttributes { get; public set; }
    [AWSPropertyAttribute]
public string MessageBody { get; public set; }
    public string MessageDeduplicationId { get; public set; }
    public string MessageGroupId { get; public set; }
    public Dictionary`2<string, MessageSystemAttributeValue> MessageSystemAttributes { get; public set; }
    [AWSPropertyAttribute]
public string QueueUrl { get; public set; }
    public SendMessageRequest(string queueUrl, string messageBody);
    public Nullable`1<int> get_DelaySeconds();
    public void set_DelaySeconds(Nullable`1<int> value);
    internal bool IsSetDelaySeconds();
    public Dictionary`2<string, MessageAttributeValue> get_MessageAttributes();
    public void set_MessageAttributes(Dictionary`2<string, MessageAttributeValue> value);
    internal bool IsSetMessageAttributes();
    public string get_MessageBody();
    public void set_MessageBody(string value);
    internal bool IsSetMessageBody();
    public string get_MessageDeduplicationId();
    public void set_MessageDeduplicationId(string value);
    internal bool IsSetMessageDeduplicationId();
    public string get_MessageGroupId();
    public void set_MessageGroupId(string value);
    internal bool IsSetMessageGroupId();
    public Dictionary`2<string, MessageSystemAttributeValue> get_MessageSystemAttributes();
    public void set_MessageSystemAttributes(Dictionary`2<string, MessageSystemAttributeValue> value);
    internal bool IsSetMessageSystemAttributes();
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.SendMessageResponse : AmazonWebServiceResponse {
    private string _md5OfMessageAttributes;
    private string _md5OfMessageBody;
    private string _md5OfMessageSystemAttributes;
    private string _messageId;
    private string _sequenceNumber;
    public string MD5OfMessageAttributes { get; public set; }
    public string MD5OfMessageBody { get; public set; }
    public string MD5OfMessageSystemAttributes { get; public set; }
    public string MessageId { get; public set; }
    public string SequenceNumber { get; public set; }
    public string get_MD5OfMessageAttributes();
    public void set_MD5OfMessageAttributes(string value);
    internal bool IsSetMD5OfMessageAttributes();
    public string get_MD5OfMessageBody();
    public void set_MD5OfMessageBody(string value);
    internal bool IsSetMD5OfMessageBody();
    public string get_MD5OfMessageSystemAttributes();
    public void set_MD5OfMessageSystemAttributes(string value);
    internal bool IsSetMD5OfMessageSystemAttributes();
    public string get_MessageId();
    public void set_MessageId(string value);
    internal bool IsSetMessageId();
    public string get_SequenceNumber();
    public void set_SequenceNumber(string value);
    internal bool IsSetSequenceNumber();
}
public class Amazon.SQS.Model.SetQueueAttributesRequest : AmazonSQSRequest {
    private Dictionary`2<string, string> _attributes;
    private string _queueUrl;
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Attributes { get; public set; }
    [AWSPropertyAttribute]
public string QueueUrl { get; public set; }
    public SetQueueAttributesRequest(string queueUrl, Dictionary`2<string, string> attributes);
    public Dictionary`2<string, string> get_Attributes();
    public void set_Attributes(Dictionary`2<string, string> value);
    internal bool IsSetAttributes();
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.SetQueueAttributesResponse : AmazonWebServiceResponse {
}
public class Amazon.SQS.Model.SQSPaginatorFactory : object {
    private IAmazonSQS client;
    internal SQSPaginatorFactory(IAmazonSQS client);
    public sealed virtual IListDeadLetterSourceQueuesPaginator ListDeadLetterSourceQueues(ListDeadLetterSourceQueuesRequest request);
    public sealed virtual IListQueuesPaginator ListQueues(ListQueuesRequest request);
}
public class Amazon.SQS.Model.StartMessageMoveTaskRequest : AmazonSQSRequest {
    private string _destinationArn;
    private Nullable`1<int> _maxNumberOfMessagesPerSecond;
    private string _sourceArn;
    public string DestinationArn { get; public set; }
    public Nullable`1<int> MaxNumberOfMessagesPerSecond { get; public set; }
    [AWSPropertyAttribute]
public string SourceArn { get; public set; }
    public string get_DestinationArn();
    public void set_DestinationArn(string value);
    internal bool IsSetDestinationArn();
    public Nullable`1<int> get_MaxNumberOfMessagesPerSecond();
    public void set_MaxNumberOfMessagesPerSecond(Nullable`1<int> value);
    internal bool IsSetMaxNumberOfMessagesPerSecond();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
}
public class Amazon.SQS.Model.StartMessageMoveTaskResponse : AmazonWebServiceResponse {
    private string _taskHandle;
    public string TaskHandle { get; public set; }
    public string get_TaskHandle();
    public void set_TaskHandle(string value);
    internal bool IsSetTaskHandle();
}
public class Amazon.SQS.Model.TagQueueRequest : AmazonSQSRequest {
    private string _queueUrl;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string QueueUrl { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.SQS.Model.TagQueueResponse : AmazonWebServiceResponse {
}
public class Amazon.SQS.Model.TooManyEntriesInBatchRequestException : AmazonSQSException {
    public TooManyEntriesInBatchRequestException(string message);
    public TooManyEntriesInBatchRequestException(string message, Exception innerException);
    public TooManyEntriesInBatchRequestException(Exception innerException);
    public TooManyEntriesInBatchRequestException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyEntriesInBatchRequestException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.UnsupportedOperationException : AmazonSQSException {
    public UnsupportedOperationException(string message);
    public UnsupportedOperationException(string message, Exception innerException);
    public UnsupportedOperationException(Exception innerException);
    public UnsupportedOperationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnsupportedOperationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.UntagQueueRequest : AmazonSQSRequest {
    private string _queueUrl;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string QueueUrl { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.SQS.Model.UntagQueueResponse : AmazonWebServiceResponse {
}
public class Amazon.SQS.QueueAttributeName : ConstantClass {
    public static QueueAttributeName All;
    public static QueueAttributeName ApproximateNumberOfMessages;
    public static QueueAttributeName ApproximateNumberOfMessagesDelayed;
    public static QueueAttributeName ApproximateNumberOfMessagesNotVisible;
    public static QueueAttributeName ContentBasedDeduplication;
    public static QueueAttributeName CreatedTimestamp;
    public static QueueAttributeName DeduplicationScope;
    public static QueueAttributeName DelaySeconds;
    public static QueueAttributeName FifoQueue;
    public static QueueAttributeName FifoThroughputLimit;
    public static QueueAttributeName KmsDataKeyReusePeriodSeconds;
    public static QueueAttributeName KmsMasterKeyId;
    public static QueueAttributeName LastModifiedTimestamp;
    public static QueueAttributeName MaximumMessageSize;
    public static QueueAttributeName MessageRetentionPeriod;
    public static QueueAttributeName Policy;
    public static QueueAttributeName QueueArn;
    public static QueueAttributeName ReceiveMessageWaitTimeSeconds;
    public static QueueAttributeName RedriveAllowPolicy;
    public static QueueAttributeName RedrivePolicy;
    public static QueueAttributeName SqsManagedSseEnabled;
    public static QueueAttributeName VisibilityTimeout;
    public QueueAttributeName(string value);
    private static QueueAttributeName();
    public static QueueAttributeName FindValue(string value);
    public static QueueAttributeName op_Implicit(string value);
}
public static class Amazon.SQS.Util.SQSConstants : object {
    public static string ATTRIBUTE_ALL;
    public static string ATTRIBUTE_VISIBILITY_TIMEOUT;
    public static string ATTRIBUTE_APPROXIMATE_NUMBER_OF_MESSAGES;
    public static string ATTRIBUTE_APPROXIMATE_NUMBER_OF_MESSAGES_NOT_VISIBLE;
    public static string ATTRIBUTE_APPROXIMATE_NUMBER_OF_MESSAGES_DELAYED;
    public static string ATTRIBUTE_CREATED_TIMESTAMP;
    public static string ATTRIBUTE_LAST_MODIFIED_TIMESTAMP;
    public static string ATTRIBUTE_QUEUE_ARN;
    public static string ATTRIBUTE_MAXIMUM_MESSAGE_SIZE;
    public static string ATTRIBUTE_MESSAGE_RETENTION_PERIOD;
    public static string ATTRIBUTE_POLICY;
    public static string ATTRIBUTE_DELAY_SECONDS;
    public static string ATTRIBUTE_OLDEST_MESSAGE_AGE;
    public static string ATTRIBUTE_RECEIEVE_MESSAGE_WAIT_TIME_SECONDS;
    public static string ATTRIBUTE_REDRIVE_POLICY;
    public static string ATTRIBUTE_CONTENT_BASED_DEDUPLICATION;
    public static string ATTRIBUTE_FIFO_QUEUE;
}
