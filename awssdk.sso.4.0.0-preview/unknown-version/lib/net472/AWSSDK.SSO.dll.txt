public class Amazon.SSO.AmazonSSOClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private ISSOPaginatorFactory _paginators;
    public ISSOPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonSSOClient(RegionEndpoint region);
    public AmazonSSOClient(AmazonSSOConfig config);
    public AmazonSSOClient(AWSCredentials credentials);
    public AmazonSSOClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonSSOClient(AWSCredentials credentials, AmazonSSOConfig clientConfig);
    public AmazonSSOClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonSSOClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonSSOClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonSSOConfig clientConfig);
    public AmazonSSOClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonSSOClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonSSOClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonSSOConfig clientConfig);
    private static AmazonSSOClient();
    private sealed virtual override ImmutableCredentials Amazon.Runtime.SharedInterfaces.ICoreAmazonSSO.CredentialsFromSsoAccessToken(string accountId, string roleName, string accessToken, IDictionary`2<string, object> additionalProperties);
    private sealed virtual override void Amazon.Runtime.SharedInterfaces.ICoreAmazonSSO_Logout.Logout(string accessToken);
    private sealed virtual override Task`1<ImmutableCredentials> Amazon.Runtime.SharedInterfaces.ICoreAmazonSSO.CredentialsFromSsoAccessTokenAsync(string accountId, string roleName, string accessToken, IDictionary`2<string, object> additionalProperties);
    private sealed virtual override Task Amazon.Runtime.SharedInterfaces.ICoreAmazonSSO_Logout.LogoutAsync(string accessToken, CancellationToken cancellationToken);
    public sealed virtual ISSOPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    public virtual GetRoleCredentialsResponse GetRoleCredentials(GetRoleCredentialsRequest request);
    public virtual Task`1<GetRoleCredentialsResponse> GetRoleCredentialsAsync(GetRoleCredentialsRequest request, CancellationToken cancellationToken);
    public virtual ListAccountRolesResponse ListAccountRoles(ListAccountRolesRequest request);
    public virtual Task`1<ListAccountRolesResponse> ListAccountRolesAsync(ListAccountRolesRequest request, CancellationToken cancellationToken);
    public virtual ListAccountsResponse ListAccounts(ListAccountsRequest request);
    public virtual Task`1<ListAccountsResponse> ListAccountsAsync(ListAccountsRequest request, CancellationToken cancellationToken);
    public virtual LogoutResponse Logout(LogoutRequest request);
    public virtual Task`1<LogoutResponse> LogoutAsync(LogoutRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.SSO.AmazonSSOConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonSSOEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonSSOConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.SSO.AmazonSSODefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonSSODefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.SSO.AmazonSSOException : AmazonServiceException {
    public AmazonSSOException(string message);
    public AmazonSSOException(string message, Exception innerException);
    public AmazonSSOException(Exception innerException);
    public AmazonSSOException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonSSOException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected AmazonSSOException(SerializationInfo info, StreamingContext context);
}
public class Amazon.SSO.AmazonSSORequest : AmazonWebServiceRequest {
}
public class Amazon.SSO.Endpoints.SSOEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public interface Amazon.SSO.IAmazonSSO {
    public ISSOPaginatorFactory Paginators { get; }
    public abstract virtual ISSOPaginatorFactory get_Paginators();
    public abstract virtual GetRoleCredentialsResponse GetRoleCredentials(GetRoleCredentialsRequest request);
    public abstract virtual Task`1<GetRoleCredentialsResponse> GetRoleCredentialsAsync(GetRoleCredentialsRequest request, CancellationToken cancellationToken);
    public abstract virtual ListAccountRolesResponse ListAccountRoles(ListAccountRolesRequest request);
    public abstract virtual Task`1<ListAccountRolesResponse> ListAccountRolesAsync(ListAccountRolesRequest request, CancellationToken cancellationToken);
    public abstract virtual ListAccountsResponse ListAccounts(ListAccountsRequest request);
    public abstract virtual Task`1<ListAccountsResponse> ListAccountsAsync(ListAccountsRequest request, CancellationToken cancellationToken);
    public abstract virtual LogoutResponse Logout(LogoutRequest request);
    public abstract virtual Task`1<LogoutResponse> LogoutAsync(LogoutRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
}
public class Amazon.SSO.Internal.AmazonSSOEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.SSO.Internal.AmazonSSOEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.SSO.Internal.AmazonSSOMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public static class Amazon.SSO.Internal.CoreAmazonSSO : object {
    public static ImmutableCredentials CredentialsFromSsoAccessToken(IAmazonSSO client, string accountId, string roleName, string accessToken, IDictionary`2<string, object> additionalProperties);
    public static void Logout(IAmazonSSO client, string accessToken);
    [AsyncStateMachineAttribute("Amazon.SSO.Internal.CoreAmazonSSO/<CredentialsFromSsoAccessTokenAsync>d__2")]
public static Task`1<ImmutableCredentials> CredentialsFromSsoAccessTokenAsync(IAmazonSSO client, string accountId, string roleName, string accessToken, IDictionary`2<string, object> additionalProperties);
    [AsyncStateMachineAttribute("Amazon.SSO.Internal.CoreAmazonSSO/<LogoutAsync>d__3")]
public static Task LogoutAsync(IAmazonSSO client, string accessToken, CancellationToken cancellationToken);
}
public class Amazon.SSO.Model.AccountInfo : object {
    private string _accountId;
    private string _accountName;
    private string _emailAddress;
    public string AccountId { get; public set; }
    public string AccountName { get; public set; }
    [AWSPropertyAttribute]
public string EmailAddress { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_AccountName();
    public void set_AccountName(string value);
    internal bool IsSetAccountName();
    public string get_EmailAddress();
    public void set_EmailAddress(string value);
    internal bool IsSetEmailAddress();
}
public class Amazon.SSO.Model.GetRoleCredentialsRequest : AmazonSSORequest {
    private string _accessToken;
    private string _accountId;
    private string _roleName;
    [AWSPropertyAttribute]
public string AccessToken { get; public set; }
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string RoleName { get; public set; }
    public string get_AccessToken();
    public void set_AccessToken(string value);
    internal bool IsSetAccessToken();
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_RoleName();
    public void set_RoleName(string value);
    internal bool IsSetRoleName();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.SSO.Model.GetRoleCredentialsResponse : AmazonWebServiceResponse {
    private RoleCredentials _roleCredentials;
    public RoleCredentials RoleCredentials { get; public set; }
    public RoleCredentials get_RoleCredentials();
    public void set_RoleCredentials(RoleCredentials value);
    internal bool IsSetRoleCredentials();
}
public interface Amazon.SSO.Model.IListAccountRolesPaginator {
    public IPaginatedEnumerable`1<ListAccountRolesResponse> Responses { get; }
    public IPaginatedEnumerable`1<RoleInfo> RoleList { get; }
    public abstract virtual IPaginatedEnumerable`1<ListAccountRolesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<RoleInfo> get_RoleList();
}
public interface Amazon.SSO.Model.IListAccountsPaginator {
    public IPaginatedEnumerable`1<ListAccountsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AccountInfo> AccountList { get; }
    public abstract virtual IPaginatedEnumerable`1<ListAccountsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<AccountInfo> get_AccountList();
}
public class Amazon.SSO.Model.Internal.MarshallTransformations.AccountInfoUnmarshaller : object {
    private static AccountInfoUnmarshaller _instance;
    public static AccountInfoUnmarshaller Instance { get; }
    private static AccountInfoUnmarshaller();
    private sealed virtual override AccountInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SSO.Model.AccountInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccountInfo Unmarshall(JsonUnmarshallerContext context);
    public static AccountInfoUnmarshaller get_Instance();
}
public class Amazon.SSO.Model.Internal.MarshallTransformations.GetRoleCredentialsRequestMarshaller : object {
    private static GetRoleCredentialsRequestMarshaller _instance;
    public static GetRoleCredentialsRequestMarshaller Instance { get; }
    private static GetRoleCredentialsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetRoleCredentialsRequest publicRequest);
    internal static GetRoleCredentialsRequestMarshaller GetInstance();
    public static GetRoleCredentialsRequestMarshaller get_Instance();
}
public class Amazon.SSO.Model.Internal.MarshallTransformations.GetRoleCredentialsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetRoleCredentialsResponseUnmarshaller _instance;
    public static GetRoleCredentialsResponseUnmarshaller Instance { get; }
    private static GetRoleCredentialsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetRoleCredentialsResponseUnmarshaller GetInstance();
    public static GetRoleCredentialsResponseUnmarshaller get_Instance();
}
public class Amazon.SSO.Model.Internal.MarshallTransformations.InvalidRequestExceptionUnmarshaller : object {
    private static InvalidRequestExceptionUnmarshaller _instance;
    public static InvalidRequestExceptionUnmarshaller Instance { get; }
    private static InvalidRequestExceptionUnmarshaller();
    public sealed virtual InvalidRequestException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidRequestException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidRequestExceptionUnmarshaller get_Instance();
}
public class Amazon.SSO.Model.Internal.MarshallTransformations.ListAccountRolesRequestMarshaller : object {
    private static ListAccountRolesRequestMarshaller _instance;
    public static ListAccountRolesRequestMarshaller Instance { get; }
    private static ListAccountRolesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListAccountRolesRequest publicRequest);
    internal static ListAccountRolesRequestMarshaller GetInstance();
    public static ListAccountRolesRequestMarshaller get_Instance();
}
public class Amazon.SSO.Model.Internal.MarshallTransformations.ListAccountRolesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListAccountRolesResponseUnmarshaller _instance;
    public static ListAccountRolesResponseUnmarshaller Instance { get; }
    private static ListAccountRolesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListAccountRolesResponseUnmarshaller GetInstance();
    public static ListAccountRolesResponseUnmarshaller get_Instance();
}
public class Amazon.SSO.Model.Internal.MarshallTransformations.ListAccountsRequestMarshaller : object {
    private static ListAccountsRequestMarshaller _instance;
    public static ListAccountsRequestMarshaller Instance { get; }
    private static ListAccountsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListAccountsRequest publicRequest);
    internal static ListAccountsRequestMarshaller GetInstance();
    public static ListAccountsRequestMarshaller get_Instance();
}
public class Amazon.SSO.Model.Internal.MarshallTransformations.ListAccountsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListAccountsResponseUnmarshaller _instance;
    public static ListAccountsResponseUnmarshaller Instance { get; }
    private static ListAccountsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListAccountsResponseUnmarshaller GetInstance();
    public static ListAccountsResponseUnmarshaller get_Instance();
}
public class Amazon.SSO.Model.Internal.MarshallTransformations.LogoutRequestMarshaller : object {
    private static LogoutRequestMarshaller _instance;
    public static LogoutRequestMarshaller Instance { get; }
    private static LogoutRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(LogoutRequest publicRequest);
    internal static LogoutRequestMarshaller GetInstance();
    public static LogoutRequestMarshaller get_Instance();
}
public class Amazon.SSO.Model.Internal.MarshallTransformations.LogoutResponseUnmarshaller : JsonResponseUnmarshaller {
    private static LogoutResponseUnmarshaller _instance;
    public static LogoutResponseUnmarshaller Instance { get; }
    private static LogoutResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static LogoutResponseUnmarshaller GetInstance();
    public static LogoutResponseUnmarshaller get_Instance();
}
public class Amazon.SSO.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller : object {
    private static ResourceNotFoundExceptionUnmarshaller _instance;
    public static ResourceNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourceNotFoundExceptionUnmarshaller();
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.SSO.Model.Internal.MarshallTransformations.RoleCredentialsUnmarshaller : object {
    private static RoleCredentialsUnmarshaller _instance;
    public static RoleCredentialsUnmarshaller Instance { get; }
    private static RoleCredentialsUnmarshaller();
    private sealed virtual override RoleCredentials Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SSO.Model.RoleCredentials,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RoleCredentials Unmarshall(JsonUnmarshallerContext context);
    public static RoleCredentialsUnmarshaller get_Instance();
}
public class Amazon.SSO.Model.Internal.MarshallTransformations.RoleInfoUnmarshaller : object {
    private static RoleInfoUnmarshaller _instance;
    public static RoleInfoUnmarshaller Instance { get; }
    private static RoleInfoUnmarshaller();
    private sealed virtual override RoleInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.SSO.Model.RoleInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RoleInfo Unmarshall(JsonUnmarshallerContext context);
    public static RoleInfoUnmarshaller get_Instance();
}
public class Amazon.SSO.Model.Internal.MarshallTransformations.TooManyRequestsExceptionUnmarshaller : object {
    private static TooManyRequestsExceptionUnmarshaller _instance;
    public static TooManyRequestsExceptionUnmarshaller Instance { get; }
    private static TooManyRequestsExceptionUnmarshaller();
    public sealed virtual TooManyRequestsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TooManyRequestsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyRequestsExceptionUnmarshaller get_Instance();
}
public class Amazon.SSO.Model.Internal.MarshallTransformations.UnauthorizedExceptionUnmarshaller : object {
    private static UnauthorizedExceptionUnmarshaller _instance;
    public static UnauthorizedExceptionUnmarshaller Instance { get; }
    private static UnauthorizedExceptionUnmarshaller();
    public sealed virtual UnauthorizedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnauthorizedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnauthorizedExceptionUnmarshaller get_Instance();
}
public class Amazon.SSO.Model.InvalidRequestException : AmazonSSOException {
    public InvalidRequestException(string message);
    public InvalidRequestException(string message, Exception innerException);
    public InvalidRequestException(Exception innerException);
    public InvalidRequestException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidRequestException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected InvalidRequestException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public interface Amazon.SSO.Model.ISSOPaginatorFactory {
    public abstract virtual IListAccountRolesPaginator ListAccountRoles(ListAccountRolesRequest request);
    public abstract virtual IListAccountsPaginator ListAccounts(ListAccountsRequest request);
}
internal class Amazon.SSO.Model.ListAccountRolesPaginator : object {
    private IAmazonSSO _client;
    private ListAccountRolesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListAccountRolesResponse> Responses { get; }
    public IPaginatedEnumerable`1<RoleInfo> RoleList { get; }
    internal ListAccountRolesPaginator(IAmazonSSO client, ListAccountRolesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListAccountRolesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<RoleInfo> get_RoleList();
    [IteratorStateMachineAttribute("Amazon.SSO.Model.ListAccountRolesPaginator/<Amazon-Runtime-IPaginator<Amazon-SSO-Model-ListAccountRolesResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<ListAccountRolesResponse> Amazon.Runtime.IPaginator<Amazon.SSO.Model.ListAccountRolesResponse>.Paginate();
}
public class Amazon.SSO.Model.ListAccountRolesRequest : AmazonSSORequest {
    private string _accessToken;
    private string _accountId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string AccessToken { get; public set; }
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_AccessToken();
    public void set_AccessToken(string value);
    internal bool IsSetAccessToken();
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.SSO.Model.ListAccountRolesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<RoleInfo> _roleList;
    public string NextToken { get; public set; }
    public List`1<RoleInfo> RoleList { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<RoleInfo> get_RoleList();
    public void set_RoleList(List`1<RoleInfo> value);
    internal bool IsSetRoleList();
}
internal class Amazon.SSO.Model.ListAccountsPaginator : object {
    private IAmazonSSO _client;
    private ListAccountsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListAccountsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AccountInfo> AccountList { get; }
    internal ListAccountsPaginator(IAmazonSSO client, ListAccountsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListAccountsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<AccountInfo> get_AccountList();
    [IteratorStateMachineAttribute("Amazon.SSO.Model.ListAccountsPaginator/<Amazon-Runtime-IPaginator<Amazon-SSO-Model-ListAccountsResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<ListAccountsResponse> Amazon.Runtime.IPaginator<Amazon.SSO.Model.ListAccountsResponse>.Paginate();
}
public class Amazon.SSO.Model.ListAccountsRequest : AmazonSSORequest {
    private string _accessToken;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string AccessToken { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_AccessToken();
    public void set_AccessToken(string value);
    internal bool IsSetAccessToken();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.SSO.Model.ListAccountsResponse : AmazonWebServiceResponse {
    private List`1<AccountInfo> _accountList;
    private string _nextToken;
    public List`1<AccountInfo> AccountList { get; public set; }
    public string NextToken { get; public set; }
    public List`1<AccountInfo> get_AccountList();
    public void set_AccountList(List`1<AccountInfo> value);
    internal bool IsSetAccountList();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SSO.Model.LogoutRequest : AmazonSSORequest {
    private string _accessToken;
    [AWSPropertyAttribute]
public string AccessToken { get; public set; }
    public string get_AccessToken();
    public void set_AccessToken(string value);
    internal bool IsSetAccessToken();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.SSO.Model.LogoutResponse : AmazonWebServiceResponse {
}
public class Amazon.SSO.Model.ResourceNotFoundException : AmazonSSOException {
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected ResourceNotFoundException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.SSO.Model.RoleCredentials : object {
    private string _accessKeyId;
    private Nullable`1<long> _expiration;
    private string _secretAccessKey;
    private string _sessionToken;
    public string AccessKeyId { get; public set; }
    public Nullable`1<long> Expiration { get; public set; }
    [AWSPropertyAttribute]
public string SecretAccessKey { get; public set; }
    [AWSPropertyAttribute]
public string SessionToken { get; public set; }
    public string get_AccessKeyId();
    public void set_AccessKeyId(string value);
    internal bool IsSetAccessKeyId();
    public Nullable`1<long> get_Expiration();
    public void set_Expiration(Nullable`1<long> value);
    internal bool IsSetExpiration();
    public string get_SecretAccessKey();
    public void set_SecretAccessKey(string value);
    internal bool IsSetSecretAccessKey();
    public string get_SessionToken();
    public void set_SessionToken(string value);
    internal bool IsSetSessionToken();
}
public class Amazon.SSO.Model.RoleInfo : object {
    private string _accountId;
    private string _roleName;
    public string AccountId { get; public set; }
    public string RoleName { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_RoleName();
    public void set_RoleName(string value);
    internal bool IsSetRoleName();
}
public class Amazon.SSO.Model.SSOPaginatorFactory : object {
    private IAmazonSSO client;
    internal SSOPaginatorFactory(IAmazonSSO client);
    public sealed virtual IListAccountRolesPaginator ListAccountRoles(ListAccountRolesRequest request);
    public sealed virtual IListAccountsPaginator ListAccounts(ListAccountsRequest request);
}
public class Amazon.SSO.Model.TooManyRequestsException : AmazonSSOException {
    public TooManyRequestsException(string message);
    public TooManyRequestsException(string message, Exception innerException);
    public TooManyRequestsException(Exception innerException);
    public TooManyRequestsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyRequestsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected TooManyRequestsException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.SSO.Model.UnauthorizedException : AmazonSSOException {
    public UnauthorizedException(string message);
    public UnauthorizedException(string message, Exception innerException);
    public UnauthorizedException(Exception innerException);
    public UnauthorizedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnauthorizedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected UnauthorizedException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
