public class Amazon.StorageGateway.ActiveDirectoryStatus : ConstantClass {
    public static ActiveDirectoryStatus ACCESS_DENIED;
    public static ActiveDirectoryStatus DETACHED;
    public static ActiveDirectoryStatus JOINED;
    public static ActiveDirectoryStatus JOINING;
    public static ActiveDirectoryStatus NETWORK_ERROR;
    public static ActiveDirectoryStatus TIMEOUT;
    public static ActiveDirectoryStatus UNKNOWN_ERROR;
    public ActiveDirectoryStatus(string value);
    private static ActiveDirectoryStatus();
    public static ActiveDirectoryStatus FindValue(string value);
    public static ActiveDirectoryStatus op_Implicit(string value);
}
public class Amazon.StorageGateway.AmazonStorageGatewayClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private IStorageGatewayPaginatorFactory _paginators;
    public IStorageGatewayPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonStorageGatewayClient(RegionEndpoint region);
    public AmazonStorageGatewayClient(AmazonStorageGatewayConfig config);
    public AmazonStorageGatewayClient(AWSCredentials credentials);
    public AmazonStorageGatewayClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonStorageGatewayClient(AWSCredentials credentials, AmazonStorageGatewayConfig clientConfig);
    public AmazonStorageGatewayClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonStorageGatewayClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonStorageGatewayClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonStorageGatewayConfig clientConfig);
    public AmazonStorageGatewayClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonStorageGatewayClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonStorageGatewayClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonStorageGatewayConfig clientConfig);
    private static AmazonStorageGatewayClient();
    public sealed virtual IStorageGatewayPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual ActivateGatewayResponse ActivateGateway(ActivateGatewayRequest request);
    public virtual Task`1<ActivateGatewayResponse> ActivateGatewayAsync(ActivateGatewayRequest request, CancellationToken cancellationToken);
    internal virtual AddCacheResponse AddCache(AddCacheRequest request);
    public virtual Task`1<AddCacheResponse> AddCacheAsync(AddCacheRequest request, CancellationToken cancellationToken);
    internal virtual AddTagsToResourceResponse AddTagsToResource(AddTagsToResourceRequest request);
    public virtual Task`1<AddTagsToResourceResponse> AddTagsToResourceAsync(AddTagsToResourceRequest request, CancellationToken cancellationToken);
    internal virtual AddUploadBufferResponse AddUploadBuffer(AddUploadBufferRequest request);
    public virtual Task`1<AddUploadBufferResponse> AddUploadBufferAsync(AddUploadBufferRequest request, CancellationToken cancellationToken);
    internal virtual AddWorkingStorageResponse AddWorkingStorage(AddWorkingStorageRequest request);
    public virtual Task`1<AddWorkingStorageResponse> AddWorkingStorageAsync(AddWorkingStorageRequest request, CancellationToken cancellationToken);
    internal virtual AssignTapePoolResponse AssignTapePool(AssignTapePoolRequest request);
    public virtual Task`1<AssignTapePoolResponse> AssignTapePoolAsync(AssignTapePoolRequest request, CancellationToken cancellationToken);
    internal virtual AssociateFileSystemResponse AssociateFileSystem(AssociateFileSystemRequest request);
    public virtual Task`1<AssociateFileSystemResponse> AssociateFileSystemAsync(AssociateFileSystemRequest request, CancellationToken cancellationToken);
    internal virtual AttachVolumeResponse AttachVolume(AttachVolumeRequest request);
    public virtual Task`1<AttachVolumeResponse> AttachVolumeAsync(AttachVolumeRequest request, CancellationToken cancellationToken);
    internal virtual CancelArchivalResponse CancelArchival(CancelArchivalRequest request);
    public virtual Task`1<CancelArchivalResponse> CancelArchivalAsync(CancelArchivalRequest request, CancellationToken cancellationToken);
    internal virtual CancelRetrievalResponse CancelRetrieval(CancelRetrievalRequest request);
    public virtual Task`1<CancelRetrievalResponse> CancelRetrievalAsync(CancelRetrievalRequest request, CancellationToken cancellationToken);
    internal virtual CreateCachediSCSIVolumeResponse CreateCachediSCSIVolume(CreateCachediSCSIVolumeRequest request);
    public virtual Task`1<CreateCachediSCSIVolumeResponse> CreateCachediSCSIVolumeAsync(CreateCachediSCSIVolumeRequest request, CancellationToken cancellationToken);
    internal virtual CreateNFSFileShareResponse CreateNFSFileShare(CreateNFSFileShareRequest request);
    public virtual Task`1<CreateNFSFileShareResponse> CreateNFSFileShareAsync(CreateNFSFileShareRequest request, CancellationToken cancellationToken);
    internal virtual CreateSMBFileShareResponse CreateSMBFileShare(CreateSMBFileShareRequest request);
    public virtual Task`1<CreateSMBFileShareResponse> CreateSMBFileShareAsync(CreateSMBFileShareRequest request, CancellationToken cancellationToken);
    internal virtual CreateSnapshotResponse CreateSnapshot(CreateSnapshotRequest request);
    public virtual Task`1<CreateSnapshotResponse> CreateSnapshotAsync(CreateSnapshotRequest request, CancellationToken cancellationToken);
    internal virtual CreateSnapshotFromVolumeRecoveryPointResponse CreateSnapshotFromVolumeRecoveryPoint(CreateSnapshotFromVolumeRecoveryPointRequest request);
    public virtual Task`1<CreateSnapshotFromVolumeRecoveryPointResponse> CreateSnapshotFromVolumeRecoveryPointAsync(CreateSnapshotFromVolumeRecoveryPointRequest request, CancellationToken cancellationToken);
    internal virtual CreateStorediSCSIVolumeResponse CreateStorediSCSIVolume(CreateStorediSCSIVolumeRequest request);
    public virtual Task`1<CreateStorediSCSIVolumeResponse> CreateStorediSCSIVolumeAsync(CreateStorediSCSIVolumeRequest request, CancellationToken cancellationToken);
    internal virtual CreateTapePoolResponse CreateTapePool(CreateTapePoolRequest request);
    public virtual Task`1<CreateTapePoolResponse> CreateTapePoolAsync(CreateTapePoolRequest request, CancellationToken cancellationToken);
    internal virtual CreateTapesResponse CreateTapes(CreateTapesRequest request);
    public virtual Task`1<CreateTapesResponse> CreateTapesAsync(CreateTapesRequest request, CancellationToken cancellationToken);
    internal virtual CreateTapeWithBarcodeResponse CreateTapeWithBarcode(CreateTapeWithBarcodeRequest request);
    public virtual Task`1<CreateTapeWithBarcodeResponse> CreateTapeWithBarcodeAsync(CreateTapeWithBarcodeRequest request, CancellationToken cancellationToken);
    internal virtual DeleteAutomaticTapeCreationPolicyResponse DeleteAutomaticTapeCreationPolicy(DeleteAutomaticTapeCreationPolicyRequest request);
    public virtual Task`1<DeleteAutomaticTapeCreationPolicyResponse> DeleteAutomaticTapeCreationPolicyAsync(DeleteAutomaticTapeCreationPolicyRequest request, CancellationToken cancellationToken);
    internal virtual DeleteBandwidthRateLimitResponse DeleteBandwidthRateLimit(DeleteBandwidthRateLimitRequest request);
    public virtual Task`1<DeleteBandwidthRateLimitResponse> DeleteBandwidthRateLimitAsync(DeleteBandwidthRateLimitRequest request, CancellationToken cancellationToken);
    internal virtual DeleteChapCredentialsResponse DeleteChapCredentials(DeleteChapCredentialsRequest request);
    public virtual Task`1<DeleteChapCredentialsResponse> DeleteChapCredentialsAsync(DeleteChapCredentialsRequest request, CancellationToken cancellationToken);
    internal virtual DeleteFileShareResponse DeleteFileShare(DeleteFileShareRequest request);
    public virtual Task`1<DeleteFileShareResponse> DeleteFileShareAsync(DeleteFileShareRequest request, CancellationToken cancellationToken);
    internal virtual DeleteGatewayResponse DeleteGateway(DeleteGatewayRequest request);
    public virtual Task`1<DeleteGatewayResponse> DeleteGatewayAsync(DeleteGatewayRequest request, CancellationToken cancellationToken);
    internal virtual DeleteSnapshotScheduleResponse DeleteSnapshotSchedule(DeleteSnapshotScheduleRequest request);
    public virtual Task`1<DeleteSnapshotScheduleResponse> DeleteSnapshotScheduleAsync(DeleteSnapshotScheduleRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTapeResponse DeleteTape(DeleteTapeRequest request);
    public virtual Task`1<DeleteTapeResponse> DeleteTapeAsync(DeleteTapeRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTapeArchiveResponse DeleteTapeArchive(DeleteTapeArchiveRequest request);
    public virtual Task`1<DeleteTapeArchiveResponse> DeleteTapeArchiveAsync(DeleteTapeArchiveRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTapePoolResponse DeleteTapePool(DeleteTapePoolRequest request);
    public virtual Task`1<DeleteTapePoolResponse> DeleteTapePoolAsync(DeleteTapePoolRequest request, CancellationToken cancellationToken);
    internal virtual DeleteVolumeResponse DeleteVolume(DeleteVolumeRequest request);
    public virtual Task`1<DeleteVolumeResponse> DeleteVolumeAsync(DeleteVolumeRequest request, CancellationToken cancellationToken);
    internal virtual DescribeAvailabilityMonitorTestResponse DescribeAvailabilityMonitorTest(DescribeAvailabilityMonitorTestRequest request);
    public virtual Task`1<DescribeAvailabilityMonitorTestResponse> DescribeAvailabilityMonitorTestAsync(DescribeAvailabilityMonitorTestRequest request, CancellationToken cancellationToken);
    internal virtual DescribeBandwidthRateLimitResponse DescribeBandwidthRateLimit(DescribeBandwidthRateLimitRequest request);
    public virtual Task`1<DescribeBandwidthRateLimitResponse> DescribeBandwidthRateLimitAsync(DescribeBandwidthRateLimitRequest request, CancellationToken cancellationToken);
    internal virtual DescribeBandwidthRateLimitScheduleResponse DescribeBandwidthRateLimitSchedule(DescribeBandwidthRateLimitScheduleRequest request);
    public virtual Task`1<DescribeBandwidthRateLimitScheduleResponse> DescribeBandwidthRateLimitScheduleAsync(DescribeBandwidthRateLimitScheduleRequest request, CancellationToken cancellationToken);
    internal virtual DescribeCacheResponse DescribeCache(DescribeCacheRequest request);
    public virtual Task`1<DescribeCacheResponse> DescribeCacheAsync(DescribeCacheRequest request, CancellationToken cancellationToken);
    internal virtual DescribeCachediSCSIVolumesResponse DescribeCachediSCSIVolumes(DescribeCachediSCSIVolumesRequest request);
    public virtual Task`1<DescribeCachediSCSIVolumesResponse> DescribeCachediSCSIVolumesAsync(DescribeCachediSCSIVolumesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeChapCredentialsResponse DescribeChapCredentials(DescribeChapCredentialsRequest request);
    public virtual Task`1<DescribeChapCredentialsResponse> DescribeChapCredentialsAsync(DescribeChapCredentialsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeFileSystemAssociationsResponse DescribeFileSystemAssociations(DescribeFileSystemAssociationsRequest request);
    public virtual Task`1<DescribeFileSystemAssociationsResponse> DescribeFileSystemAssociationsAsync(DescribeFileSystemAssociationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeGatewayInformationResponse DescribeGatewayInformation(DescribeGatewayInformationRequest request);
    public virtual Task`1<DescribeGatewayInformationResponse> DescribeGatewayInformationAsync(DescribeGatewayInformationRequest request, CancellationToken cancellationToken);
    internal virtual DescribeMaintenanceStartTimeResponse DescribeMaintenanceStartTime(DescribeMaintenanceStartTimeRequest request);
    public virtual Task`1<DescribeMaintenanceStartTimeResponse> DescribeMaintenanceStartTimeAsync(DescribeMaintenanceStartTimeRequest request, CancellationToken cancellationToken);
    internal virtual DescribeNFSFileSharesResponse DescribeNFSFileShares(DescribeNFSFileSharesRequest request);
    public virtual Task`1<DescribeNFSFileSharesResponse> DescribeNFSFileSharesAsync(DescribeNFSFileSharesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeSMBFileSharesResponse DescribeSMBFileShares(DescribeSMBFileSharesRequest request);
    public virtual Task`1<DescribeSMBFileSharesResponse> DescribeSMBFileSharesAsync(DescribeSMBFileSharesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeSMBSettingsResponse DescribeSMBSettings(DescribeSMBSettingsRequest request);
    public virtual Task`1<DescribeSMBSettingsResponse> DescribeSMBSettingsAsync(DescribeSMBSettingsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeSnapshotScheduleResponse DescribeSnapshotSchedule(DescribeSnapshotScheduleRequest request);
    public virtual Task`1<DescribeSnapshotScheduleResponse> DescribeSnapshotScheduleAsync(DescribeSnapshotScheduleRequest request, CancellationToken cancellationToken);
    internal virtual DescribeStorediSCSIVolumesResponse DescribeStorediSCSIVolumes(DescribeStorediSCSIVolumesRequest request);
    public virtual Task`1<DescribeStorediSCSIVolumesResponse> DescribeStorediSCSIVolumesAsync(DescribeStorediSCSIVolumesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTapeArchivesResponse DescribeTapeArchives();
    internal virtual DescribeTapeArchivesResponse DescribeTapeArchives(DescribeTapeArchivesRequest request);
    public virtual Task`1<DescribeTapeArchivesResponse> DescribeTapeArchivesAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeTapeArchivesResponse> DescribeTapeArchivesAsync(DescribeTapeArchivesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTapeRecoveryPointsResponse DescribeTapeRecoveryPoints(DescribeTapeRecoveryPointsRequest request);
    public virtual Task`1<DescribeTapeRecoveryPointsResponse> DescribeTapeRecoveryPointsAsync(DescribeTapeRecoveryPointsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTapesResponse DescribeTapes(DescribeTapesRequest request);
    public virtual Task`1<DescribeTapesResponse> DescribeTapesAsync(DescribeTapesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeUploadBufferResponse DescribeUploadBuffer(DescribeUploadBufferRequest request);
    public virtual Task`1<DescribeUploadBufferResponse> DescribeUploadBufferAsync(DescribeUploadBufferRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVTLDevicesResponse DescribeVTLDevices(DescribeVTLDevicesRequest request);
    public virtual Task`1<DescribeVTLDevicesResponse> DescribeVTLDevicesAsync(DescribeVTLDevicesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeWorkingStorageResponse DescribeWorkingStorage(DescribeWorkingStorageRequest request);
    public virtual Task`1<DescribeWorkingStorageResponse> DescribeWorkingStorageAsync(DescribeWorkingStorageRequest request, CancellationToken cancellationToken);
    internal virtual DetachVolumeResponse DetachVolume(DetachVolumeRequest request);
    public virtual Task`1<DetachVolumeResponse> DetachVolumeAsync(DetachVolumeRequest request, CancellationToken cancellationToken);
    internal virtual DisableGatewayResponse DisableGateway(DisableGatewayRequest request);
    public virtual Task`1<DisableGatewayResponse> DisableGatewayAsync(DisableGatewayRequest request, CancellationToken cancellationToken);
    internal virtual DisassociateFileSystemResponse DisassociateFileSystem(DisassociateFileSystemRequest request);
    public virtual Task`1<DisassociateFileSystemResponse> DisassociateFileSystemAsync(DisassociateFileSystemRequest request, CancellationToken cancellationToken);
    internal virtual JoinDomainResponse JoinDomain(JoinDomainRequest request);
    public virtual Task`1<JoinDomainResponse> JoinDomainAsync(JoinDomainRequest request, CancellationToken cancellationToken);
    internal virtual ListAutomaticTapeCreationPoliciesResponse ListAutomaticTapeCreationPolicies(ListAutomaticTapeCreationPoliciesRequest request);
    public virtual Task`1<ListAutomaticTapeCreationPoliciesResponse> ListAutomaticTapeCreationPoliciesAsync(ListAutomaticTapeCreationPoliciesRequest request, CancellationToken cancellationToken);
    internal virtual ListFileSharesResponse ListFileShares(ListFileSharesRequest request);
    public virtual Task`1<ListFileSharesResponse> ListFileSharesAsync(ListFileSharesRequest request, CancellationToken cancellationToken);
    internal virtual ListFileSystemAssociationsResponse ListFileSystemAssociations(ListFileSystemAssociationsRequest request);
    public virtual Task`1<ListFileSystemAssociationsResponse> ListFileSystemAssociationsAsync(ListFileSystemAssociationsRequest request, CancellationToken cancellationToken);
    internal virtual ListGatewaysResponse ListGateways();
    internal virtual ListGatewaysResponse ListGateways(ListGatewaysRequest request);
    public virtual Task`1<ListGatewaysResponse> ListGatewaysAsync(CancellationToken cancellationToken);
    public virtual Task`1<ListGatewaysResponse> ListGatewaysAsync(ListGatewaysRequest request, CancellationToken cancellationToken);
    internal virtual ListLocalDisksResponse ListLocalDisks(ListLocalDisksRequest request);
    public virtual Task`1<ListLocalDisksResponse> ListLocalDisksAsync(ListLocalDisksRequest request, CancellationToken cancellationToken);
    internal virtual ListTagsForResourceResponse ListTagsForResource(ListTagsForResourceRequest request);
    public virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    internal virtual ListTapePoolsResponse ListTapePools(ListTapePoolsRequest request);
    public virtual Task`1<ListTapePoolsResponse> ListTapePoolsAsync(ListTapePoolsRequest request, CancellationToken cancellationToken);
    internal virtual ListTapesResponse ListTapes(ListTapesRequest request);
    public virtual Task`1<ListTapesResponse> ListTapesAsync(ListTapesRequest request, CancellationToken cancellationToken);
    internal virtual ListVolumeInitiatorsResponse ListVolumeInitiators(ListVolumeInitiatorsRequest request);
    public virtual Task`1<ListVolumeInitiatorsResponse> ListVolumeInitiatorsAsync(ListVolumeInitiatorsRequest request, CancellationToken cancellationToken);
    internal virtual ListVolumeRecoveryPointsResponse ListVolumeRecoveryPoints(ListVolumeRecoveryPointsRequest request);
    public virtual Task`1<ListVolumeRecoveryPointsResponse> ListVolumeRecoveryPointsAsync(ListVolumeRecoveryPointsRequest request, CancellationToken cancellationToken);
    internal virtual ListVolumesResponse ListVolumes(ListVolumesRequest request);
    public virtual Task`1<ListVolumesResponse> ListVolumesAsync(ListVolumesRequest request, CancellationToken cancellationToken);
    internal virtual NotifyWhenUploadedResponse NotifyWhenUploaded(NotifyWhenUploadedRequest request);
    public virtual Task`1<NotifyWhenUploadedResponse> NotifyWhenUploadedAsync(NotifyWhenUploadedRequest request, CancellationToken cancellationToken);
    internal virtual RefreshCacheResponse RefreshCache(RefreshCacheRequest request);
    public virtual Task`1<RefreshCacheResponse> RefreshCacheAsync(RefreshCacheRequest request, CancellationToken cancellationToken);
    internal virtual RemoveTagsFromResourceResponse RemoveTagsFromResource(RemoveTagsFromResourceRequest request);
    public virtual Task`1<RemoveTagsFromResourceResponse> RemoveTagsFromResourceAsync(RemoveTagsFromResourceRequest request, CancellationToken cancellationToken);
    internal virtual ResetCacheResponse ResetCache(ResetCacheRequest request);
    public virtual Task`1<ResetCacheResponse> ResetCacheAsync(string gatewayARN, CancellationToken cancellationToken);
    public virtual Task`1<ResetCacheResponse> ResetCacheAsync(ResetCacheRequest request, CancellationToken cancellationToken);
    internal virtual RetrieveTapeArchiveResponse RetrieveTapeArchive(RetrieveTapeArchiveRequest request);
    public virtual Task`1<RetrieveTapeArchiveResponse> RetrieveTapeArchiveAsync(RetrieveTapeArchiveRequest request, CancellationToken cancellationToken);
    internal virtual RetrieveTapeRecoveryPointResponse RetrieveTapeRecoveryPoint(RetrieveTapeRecoveryPointRequest request);
    public virtual Task`1<RetrieveTapeRecoveryPointResponse> RetrieveTapeRecoveryPointAsync(RetrieveTapeRecoveryPointRequest request, CancellationToken cancellationToken);
    internal virtual SetLocalConsolePasswordResponse SetLocalConsolePassword(SetLocalConsolePasswordRequest request);
    public virtual Task`1<SetLocalConsolePasswordResponse> SetLocalConsolePasswordAsync(SetLocalConsolePasswordRequest request, CancellationToken cancellationToken);
    internal virtual SetSMBGuestPasswordResponse SetSMBGuestPassword(SetSMBGuestPasswordRequest request);
    public virtual Task`1<SetSMBGuestPasswordResponse> SetSMBGuestPasswordAsync(SetSMBGuestPasswordRequest request, CancellationToken cancellationToken);
    internal virtual ShutdownGatewayResponse ShutdownGateway(ShutdownGatewayRequest request);
    public virtual Task`1<ShutdownGatewayResponse> ShutdownGatewayAsync(ShutdownGatewayRequest request, CancellationToken cancellationToken);
    internal virtual StartAvailabilityMonitorTestResponse StartAvailabilityMonitorTest(StartAvailabilityMonitorTestRequest request);
    public virtual Task`1<StartAvailabilityMonitorTestResponse> StartAvailabilityMonitorTestAsync(StartAvailabilityMonitorTestRequest request, CancellationToken cancellationToken);
    internal virtual StartGatewayResponse StartGateway(StartGatewayRequest request);
    public virtual Task`1<StartGatewayResponse> StartGatewayAsync(StartGatewayRequest request, CancellationToken cancellationToken);
    internal virtual UpdateAutomaticTapeCreationPolicyResponse UpdateAutomaticTapeCreationPolicy(UpdateAutomaticTapeCreationPolicyRequest request);
    public virtual Task`1<UpdateAutomaticTapeCreationPolicyResponse> UpdateAutomaticTapeCreationPolicyAsync(UpdateAutomaticTapeCreationPolicyRequest request, CancellationToken cancellationToken);
    internal virtual UpdateBandwidthRateLimitResponse UpdateBandwidthRateLimit(UpdateBandwidthRateLimitRequest request);
    public virtual Task`1<UpdateBandwidthRateLimitResponse> UpdateBandwidthRateLimitAsync(UpdateBandwidthRateLimitRequest request, CancellationToken cancellationToken);
    internal virtual UpdateBandwidthRateLimitScheduleResponse UpdateBandwidthRateLimitSchedule(UpdateBandwidthRateLimitScheduleRequest request);
    public virtual Task`1<UpdateBandwidthRateLimitScheduleResponse> UpdateBandwidthRateLimitScheduleAsync(UpdateBandwidthRateLimitScheduleRequest request, CancellationToken cancellationToken);
    internal virtual UpdateChapCredentialsResponse UpdateChapCredentials(UpdateChapCredentialsRequest request);
    public virtual Task`1<UpdateChapCredentialsResponse> UpdateChapCredentialsAsync(UpdateChapCredentialsRequest request, CancellationToken cancellationToken);
    internal virtual UpdateFileSystemAssociationResponse UpdateFileSystemAssociation(UpdateFileSystemAssociationRequest request);
    public virtual Task`1<UpdateFileSystemAssociationResponse> UpdateFileSystemAssociationAsync(UpdateFileSystemAssociationRequest request, CancellationToken cancellationToken);
    internal virtual UpdateGatewayInformationResponse UpdateGatewayInformation(UpdateGatewayInformationRequest request);
    public virtual Task`1<UpdateGatewayInformationResponse> UpdateGatewayInformationAsync(UpdateGatewayInformationRequest request, CancellationToken cancellationToken);
    internal virtual UpdateGatewaySoftwareNowResponse UpdateGatewaySoftwareNow(UpdateGatewaySoftwareNowRequest request);
    public virtual Task`1<UpdateGatewaySoftwareNowResponse> UpdateGatewaySoftwareNowAsync(UpdateGatewaySoftwareNowRequest request, CancellationToken cancellationToken);
    internal virtual UpdateMaintenanceStartTimeResponse UpdateMaintenanceStartTime(UpdateMaintenanceStartTimeRequest request);
    public virtual Task`1<UpdateMaintenanceStartTimeResponse> UpdateMaintenanceStartTimeAsync(UpdateMaintenanceStartTimeRequest request, CancellationToken cancellationToken);
    internal virtual UpdateNFSFileShareResponse UpdateNFSFileShare(UpdateNFSFileShareRequest request);
    public virtual Task`1<UpdateNFSFileShareResponse> UpdateNFSFileShareAsync(UpdateNFSFileShareRequest request, CancellationToken cancellationToken);
    internal virtual UpdateSMBFileShareResponse UpdateSMBFileShare(UpdateSMBFileShareRequest request);
    public virtual Task`1<UpdateSMBFileShareResponse> UpdateSMBFileShareAsync(UpdateSMBFileShareRequest request, CancellationToken cancellationToken);
    internal virtual UpdateSMBFileShareVisibilityResponse UpdateSMBFileShareVisibility(UpdateSMBFileShareVisibilityRequest request);
    public virtual Task`1<UpdateSMBFileShareVisibilityResponse> UpdateSMBFileShareVisibilityAsync(UpdateSMBFileShareVisibilityRequest request, CancellationToken cancellationToken);
    internal virtual UpdateSMBLocalGroupsResponse UpdateSMBLocalGroups(UpdateSMBLocalGroupsRequest request);
    public virtual Task`1<UpdateSMBLocalGroupsResponse> UpdateSMBLocalGroupsAsync(UpdateSMBLocalGroupsRequest request, CancellationToken cancellationToken);
    internal virtual UpdateSMBSecurityStrategyResponse UpdateSMBSecurityStrategy(UpdateSMBSecurityStrategyRequest request);
    public virtual Task`1<UpdateSMBSecurityStrategyResponse> UpdateSMBSecurityStrategyAsync(UpdateSMBSecurityStrategyRequest request, CancellationToken cancellationToken);
    internal virtual UpdateSnapshotScheduleResponse UpdateSnapshotSchedule(UpdateSnapshotScheduleRequest request);
    public virtual Task`1<UpdateSnapshotScheduleResponse> UpdateSnapshotScheduleAsync(UpdateSnapshotScheduleRequest request, CancellationToken cancellationToken);
    internal virtual UpdateVTLDeviceTypeResponse UpdateVTLDeviceType(UpdateVTLDeviceTypeRequest request);
    public virtual Task`1<UpdateVTLDeviceTypeResponse> UpdateVTLDeviceTypeAsync(UpdateVTLDeviceTypeRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.StorageGateway.AmazonStorageGatewayConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonStorageGatewayEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonStorageGatewayConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.StorageGateway.AmazonStorageGatewayDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonStorageGatewayDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.StorageGateway.AmazonStorageGatewayException : AmazonServiceException {
    public AmazonStorageGatewayException(string message);
    public AmazonStorageGatewayException(string message, Exception innerException);
    public AmazonStorageGatewayException(Exception innerException);
    public AmazonStorageGatewayException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonStorageGatewayException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.StorageGateway.AmazonStorageGatewayRequest : AmazonWebServiceRequest {
}
public class Amazon.StorageGateway.AutomaticUpdatePolicy : ConstantClass {
    public static AutomaticUpdatePolicy ALL_VERSIONS;
    public static AutomaticUpdatePolicy EMERGENCY_VERSIONS_ONLY;
    public AutomaticUpdatePolicy(string value);
    private static AutomaticUpdatePolicy();
    public static AutomaticUpdatePolicy FindValue(string value);
    public static AutomaticUpdatePolicy op_Implicit(string value);
}
public class Amazon.StorageGateway.AvailabilityMonitorTestStatus : ConstantClass {
    public static AvailabilityMonitorTestStatus COMPLETE;
    public static AvailabilityMonitorTestStatus FAILED;
    public static AvailabilityMonitorTestStatus PENDING;
    public AvailabilityMonitorTestStatus(string value);
    private static AvailabilityMonitorTestStatus();
    public static AvailabilityMonitorTestStatus FindValue(string value);
    public static AvailabilityMonitorTestStatus op_Implicit(string value);
}
public class Amazon.StorageGateway.CaseSensitivity : ConstantClass {
    public static CaseSensitivity CaseSensitive;
    public static CaseSensitivity ClientSpecified;
    public CaseSensitivity(string value);
    private static CaseSensitivity();
    public static CaseSensitivity FindValue(string value);
    public static CaseSensitivity op_Implicit(string value);
}
public class Amazon.StorageGateway.Endpoints.StorageGatewayEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.StorageGateway.ErrorCode : ConstantClass {
    public static ErrorCode ActivationKeyExpired;
    public static ErrorCode ActivationKeyInvalid;
    public static ErrorCode ActivationKeyNotFound;
    public static ErrorCode AuthenticationFailure;
    public static ErrorCode BandwidthThrottleScheduleNotFound;
    public static ErrorCode Blocked;
    public static ErrorCode CannotExportSnapshot;
    public static ErrorCode ChapCredentialNotFound;
    public static ErrorCode DiskAlreadyAllocated;
    public static ErrorCode DiskDoesNotExist;
    public static ErrorCode DiskSizeGreaterThanVolumeMaxSize;
    public static ErrorCode DiskSizeLessThanVolumeSize;
    public static ErrorCode DiskSizeNotGigAligned;
    public static ErrorCode DuplicateCertificateInfo;
    public static ErrorCode DuplicateSchedule;
    public static ErrorCode EndpointNotFound;
    public static ErrorCode GatewayInternalError;
    public static ErrorCode GatewayNotConnected;
    public static ErrorCode GatewayNotFound;
    public static ErrorCode GatewayProxyNetworkConnectionBusy;
    public static ErrorCode IAMNotSupported;
    public static ErrorCode InitiatorInvalid;
    public static ErrorCode InitiatorNotFound;
    public static ErrorCode InternalError;
    public static ErrorCode InvalidEndpoint;
    public static ErrorCode InvalidGateway;
    public static ErrorCode InvalidParameters;
    public static ErrorCode InvalidSchedule;
    public static ErrorCode JoinDomainInProgress;
    public static ErrorCode LocalStorageLimitExceeded;
    public static ErrorCode LunAlreadyAllocated;
    public static ErrorCode LunInvalid;
    public static ErrorCode MaximumContentLengthExceeded;
    public static ErrorCode MaximumTapeCartridgeCountExceeded;
    public static ErrorCode MaximumVolumeCountExceeded;
    public static ErrorCode NetworkConfigurationChanged;
    public static ErrorCode NoDisksAvailable;
    public static ErrorCode NotImplemented;
    public static ErrorCode NotSupported;
    public static ErrorCode OperationAborted;
    public static ErrorCode OutdatedGateway;
    public static ErrorCode ParametersNotImplemented;
    public static ErrorCode RegionInvalid;
    public static ErrorCode RequestTimeout;
    public static ErrorCode ServiceUnavailable;
    public static ErrorCode SnapshotDeleted;
    public static ErrorCode SnapshotIdInvalid;
    public static ErrorCode SnapshotInProgress;
    public static ErrorCode SnapshotNotFound;
    public static ErrorCode SnapshotScheduleNotFound;
    public static ErrorCode StagingAreaFull;
    public static ErrorCode StorageFailure;
    public static ErrorCode TapeCartridgeNotFound;
    public static ErrorCode TargetAlreadyExists;
    public static ErrorCode TargetInvalid;
    public static ErrorCode TargetNotFound;
    public static ErrorCode UnauthorizedOperation;
    public static ErrorCode VolumeAlreadyExists;
    public static ErrorCode VolumeIdInvalid;
    public static ErrorCode VolumeInUse;
    public static ErrorCode VolumeNotFound;
    public static ErrorCode VolumeNotReady;
    public ErrorCode(string value);
    private static ErrorCode();
    public static ErrorCode FindValue(string value);
    public static ErrorCode op_Implicit(string value);
}
public class Amazon.StorageGateway.FileShareType : ConstantClass {
    public static FileShareType NFS;
    public static FileShareType SMB;
    public FileShareType(string value);
    private static FileShareType();
    public static FileShareType FindValue(string value);
    public static FileShareType op_Implicit(string value);
}
public class Amazon.StorageGateway.GatewayCapacity : ConstantClass {
    public static GatewayCapacity Large;
    public static GatewayCapacity Medium;
    public static GatewayCapacity Small;
    public GatewayCapacity(string value);
    private static GatewayCapacity();
    public static GatewayCapacity FindValue(string value);
    public static GatewayCapacity op_Implicit(string value);
}
public class Amazon.StorageGateway.HostEnvironment : ConstantClass {
    public static HostEnvironment EC2;
    public static HostEnvironment HYPERV;
    public static HostEnvironment KVM;
    public static HostEnvironment OTHER;
    public static HostEnvironment SNOWBALL;
    public static HostEnvironment VMWARE;
    public HostEnvironment(string value);
    private static HostEnvironment();
    public static HostEnvironment FindValue(string value);
    public static HostEnvironment op_Implicit(string value);
}
public interface Amazon.StorageGateway.IAmazonStorageGateway {
    public IStorageGatewayPaginatorFactory Paginators { get; }
    public abstract virtual IStorageGatewayPaginatorFactory get_Paginators();
    public abstract virtual Task`1<ActivateGatewayResponse> ActivateGatewayAsync(ActivateGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AddCacheResponse> AddCacheAsync(AddCacheRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AddTagsToResourceResponse> AddTagsToResourceAsync(AddTagsToResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AddUploadBufferResponse> AddUploadBufferAsync(AddUploadBufferRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AddWorkingStorageResponse> AddWorkingStorageAsync(AddWorkingStorageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssignTapePoolResponse> AssignTapePoolAsync(AssignTapePoolRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssociateFileSystemResponse> AssociateFileSystemAsync(AssociateFileSystemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AttachVolumeResponse> AttachVolumeAsync(AttachVolumeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelArchivalResponse> CancelArchivalAsync(CancelArchivalRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelRetrievalResponse> CancelRetrievalAsync(CancelRetrievalRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateCachediSCSIVolumeResponse> CreateCachediSCSIVolumeAsync(CreateCachediSCSIVolumeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateNFSFileShareResponse> CreateNFSFileShareAsync(CreateNFSFileShareRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateSMBFileShareResponse> CreateSMBFileShareAsync(CreateSMBFileShareRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateSnapshotResponse> CreateSnapshotAsync(CreateSnapshotRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateSnapshotFromVolumeRecoveryPointResponse> CreateSnapshotFromVolumeRecoveryPointAsync(CreateSnapshotFromVolumeRecoveryPointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateStorediSCSIVolumeResponse> CreateStorediSCSIVolumeAsync(CreateStorediSCSIVolumeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTapePoolResponse> CreateTapePoolAsync(CreateTapePoolRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTapesResponse> CreateTapesAsync(CreateTapesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTapeWithBarcodeResponse> CreateTapeWithBarcodeAsync(CreateTapeWithBarcodeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteAutomaticTapeCreationPolicyResponse> DeleteAutomaticTapeCreationPolicyAsync(DeleteAutomaticTapeCreationPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteBandwidthRateLimitResponse> DeleteBandwidthRateLimitAsync(DeleteBandwidthRateLimitRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteChapCredentialsResponse> DeleteChapCredentialsAsync(DeleteChapCredentialsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteFileShareResponse> DeleteFileShareAsync(DeleteFileShareRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteGatewayResponse> DeleteGatewayAsync(DeleteGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteSnapshotScheduleResponse> DeleteSnapshotScheduleAsync(DeleteSnapshotScheduleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTapeResponse> DeleteTapeAsync(DeleteTapeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTapeArchiveResponse> DeleteTapeArchiveAsync(DeleteTapeArchiveRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTapePoolResponse> DeleteTapePoolAsync(DeleteTapePoolRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVolumeResponse> DeleteVolumeAsync(DeleteVolumeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAvailabilityMonitorTestResponse> DescribeAvailabilityMonitorTestAsync(DescribeAvailabilityMonitorTestRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeBandwidthRateLimitResponse> DescribeBandwidthRateLimitAsync(DescribeBandwidthRateLimitRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeBandwidthRateLimitScheduleResponse> DescribeBandwidthRateLimitScheduleAsync(DescribeBandwidthRateLimitScheduleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeCacheResponse> DescribeCacheAsync(DescribeCacheRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeCachediSCSIVolumesResponse> DescribeCachediSCSIVolumesAsync(DescribeCachediSCSIVolumesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeChapCredentialsResponse> DescribeChapCredentialsAsync(DescribeChapCredentialsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeFileSystemAssociationsResponse> DescribeFileSystemAssociationsAsync(DescribeFileSystemAssociationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeGatewayInformationResponse> DescribeGatewayInformationAsync(DescribeGatewayInformationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeMaintenanceStartTimeResponse> DescribeMaintenanceStartTimeAsync(DescribeMaintenanceStartTimeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeNFSFileSharesResponse> DescribeNFSFileSharesAsync(DescribeNFSFileSharesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSMBFileSharesResponse> DescribeSMBFileSharesAsync(DescribeSMBFileSharesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSMBSettingsResponse> DescribeSMBSettingsAsync(DescribeSMBSettingsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSnapshotScheduleResponse> DescribeSnapshotScheduleAsync(DescribeSnapshotScheduleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeStorediSCSIVolumesResponse> DescribeStorediSCSIVolumesAsync(DescribeStorediSCSIVolumesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTapeArchivesResponse> DescribeTapeArchivesAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTapeArchivesResponse> DescribeTapeArchivesAsync(DescribeTapeArchivesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTapeRecoveryPointsResponse> DescribeTapeRecoveryPointsAsync(DescribeTapeRecoveryPointsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTapesResponse> DescribeTapesAsync(DescribeTapesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeUploadBufferResponse> DescribeUploadBufferAsync(DescribeUploadBufferRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVTLDevicesResponse> DescribeVTLDevicesAsync(DescribeVTLDevicesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeWorkingStorageResponse> DescribeWorkingStorageAsync(DescribeWorkingStorageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DetachVolumeResponse> DetachVolumeAsync(DetachVolumeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableGatewayResponse> DisableGatewayAsync(DisableGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisassociateFileSystemResponse> DisassociateFileSystemAsync(DisassociateFileSystemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<JoinDomainResponse> JoinDomainAsync(JoinDomainRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListAutomaticTapeCreationPoliciesResponse> ListAutomaticTapeCreationPoliciesAsync(ListAutomaticTapeCreationPoliciesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListFileSharesResponse> ListFileSharesAsync(ListFileSharesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListFileSystemAssociationsResponse> ListFileSystemAssociationsAsync(ListFileSystemAssociationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListGatewaysResponse> ListGatewaysAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<ListGatewaysResponse> ListGatewaysAsync(ListGatewaysRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListLocalDisksResponse> ListLocalDisksAsync(ListLocalDisksRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTapePoolsResponse> ListTapePoolsAsync(ListTapePoolsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTapesResponse> ListTapesAsync(ListTapesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListVolumeInitiatorsResponse> ListVolumeInitiatorsAsync(ListVolumeInitiatorsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListVolumeRecoveryPointsResponse> ListVolumeRecoveryPointsAsync(ListVolumeRecoveryPointsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListVolumesResponse> ListVolumesAsync(ListVolumesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotifyWhenUploadedResponse> NotifyWhenUploadedAsync(NotifyWhenUploadedRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RefreshCacheResponse> RefreshCacheAsync(RefreshCacheRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemoveTagsFromResourceResponse> RemoveTagsFromResourceAsync(RemoveTagsFromResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResetCacheResponse> ResetCacheAsync(string gatewayARN, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResetCacheResponse> ResetCacheAsync(ResetCacheRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RetrieveTapeArchiveResponse> RetrieveTapeArchiveAsync(RetrieveTapeArchiveRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RetrieveTapeRecoveryPointResponse> RetrieveTapeRecoveryPointAsync(RetrieveTapeRecoveryPointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetLocalConsolePasswordResponse> SetLocalConsolePasswordAsync(SetLocalConsolePasswordRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetSMBGuestPasswordResponse> SetSMBGuestPasswordAsync(SetSMBGuestPasswordRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ShutdownGatewayResponse> ShutdownGatewayAsync(ShutdownGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartAvailabilityMonitorTestResponse> StartAvailabilityMonitorTestAsync(StartAvailabilityMonitorTestRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartGatewayResponse> StartGatewayAsync(StartGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateAutomaticTapeCreationPolicyResponse> UpdateAutomaticTapeCreationPolicyAsync(UpdateAutomaticTapeCreationPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateBandwidthRateLimitResponse> UpdateBandwidthRateLimitAsync(UpdateBandwidthRateLimitRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateBandwidthRateLimitScheduleResponse> UpdateBandwidthRateLimitScheduleAsync(UpdateBandwidthRateLimitScheduleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateChapCredentialsResponse> UpdateChapCredentialsAsync(UpdateChapCredentialsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateFileSystemAssociationResponse> UpdateFileSystemAssociationAsync(UpdateFileSystemAssociationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateGatewayInformationResponse> UpdateGatewayInformationAsync(UpdateGatewayInformationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateGatewaySoftwareNowResponse> UpdateGatewaySoftwareNowAsync(UpdateGatewaySoftwareNowRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateMaintenanceStartTimeResponse> UpdateMaintenanceStartTimeAsync(UpdateMaintenanceStartTimeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateNFSFileShareResponse> UpdateNFSFileShareAsync(UpdateNFSFileShareRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateSMBFileShareResponse> UpdateSMBFileShareAsync(UpdateSMBFileShareRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateSMBFileShareVisibilityResponse> UpdateSMBFileShareVisibilityAsync(UpdateSMBFileShareVisibilityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateSMBLocalGroupsResponse> UpdateSMBLocalGroupsAsync(UpdateSMBLocalGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateSMBSecurityStrategyResponse> UpdateSMBSecurityStrategyAsync(UpdateSMBSecurityStrategyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateSnapshotScheduleResponse> UpdateSnapshotScheduleAsync(UpdateSnapshotScheduleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateVTLDeviceTypeResponse> UpdateVTLDeviceTypeAsync(UpdateVTLDeviceTypeRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
}
public class Amazon.StorageGateway.Internal.AmazonStorageGatewayEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.StorageGateway.Internal.AmazonStorageGatewayEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.StorageGateway.Internal.AmazonStorageGatewayMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.StorageGateway.Model.ActivateGatewayRequest : AmazonStorageGatewayRequest {
    private string _activationKey;
    private string _gatewayName;
    private string _gatewayRegion;
    private string _gatewayTimezone;
    private string _gatewayType;
    private string _mediumChangerType;
    private List`1<Tag> _tags;
    private string _tapeDriveType;
    [AWSPropertyAttribute]
public string ActivationKey { get; public set; }
    [AWSPropertyAttribute]
public string GatewayName { get; public set; }
    [AWSPropertyAttribute]
public string GatewayRegion { get; public set; }
    [AWSPropertyAttribute]
public string GatewayTimezone { get; public set; }
    [AWSPropertyAttribute]
public string GatewayType { get; public set; }
    [AWSPropertyAttribute]
public string MediumChangerType { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TapeDriveType { get; public set; }
    public string get_ActivationKey();
    public void set_ActivationKey(string value);
    internal bool IsSetActivationKey();
    public string get_GatewayName();
    public void set_GatewayName(string value);
    internal bool IsSetGatewayName();
    public string get_GatewayRegion();
    public void set_GatewayRegion(string value);
    internal bool IsSetGatewayRegion();
    public string get_GatewayTimezone();
    public void set_GatewayTimezone(string value);
    internal bool IsSetGatewayTimezone();
    public string get_GatewayType();
    public void set_GatewayType(string value);
    internal bool IsSetGatewayType();
    public string get_MediumChangerType();
    public void set_MediumChangerType(string value);
    internal bool IsSetMediumChangerType();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TapeDriveType();
    public void set_TapeDriveType(string value);
    internal bool IsSetTapeDriveType();
}
public class Amazon.StorageGateway.Model.ActivateGatewayResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.AddCacheRequest : AmazonStorageGatewayRequest {
    private List`1<string> _diskIds;
    private string _gatewayARN;
    [AWSPropertyAttribute]
public List`1<string> DiskIds { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public List`1<string> get_DiskIds();
    public void set_DiskIds(List`1<string> value);
    internal bool IsSetDiskIds();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.AddCacheResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.AddTagsToResourceRequest : AmazonStorageGatewayRequest {
    private string _resourceARN;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string ResourceARN { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_ResourceARN();
    public void set_ResourceARN(string value);
    internal bool IsSetResourceARN();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.StorageGateway.Model.AddTagsToResourceResponse : AmazonWebServiceResponse {
    private string _resourceARN;
    [AWSPropertyAttribute]
public string ResourceARN { get; public set; }
    public string get_ResourceARN();
    public void set_ResourceARN(string value);
    internal bool IsSetResourceARN();
}
public class Amazon.StorageGateway.Model.AddUploadBufferRequest : AmazonStorageGatewayRequest {
    private List`1<string> _diskIds;
    private string _gatewayARN;
    [AWSPropertyAttribute]
public List`1<string> DiskIds { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public List`1<string> get_DiskIds();
    public void set_DiskIds(List`1<string> value);
    internal bool IsSetDiskIds();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.AddUploadBufferResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.AddWorkingStorageRequest : AmazonStorageGatewayRequest {
    private List`1<string> _diskIds;
    private string _gatewayARN;
    [AWSPropertyAttribute]
public List`1<string> DiskIds { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public List`1<string> get_DiskIds();
    public void set_DiskIds(List`1<string> value);
    internal bool IsSetDiskIds();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.AddWorkingStorageResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.AssignTapePoolRequest : AmazonStorageGatewayRequest {
    private Nullable`1<bool> _bypassGovernanceRetention;
    private string _poolId;
    private string _tapeARN;
    public Nullable`1<bool> BypassGovernanceRetention { get; public set; }
    [AWSPropertyAttribute]
public string PoolId { get; public set; }
    [AWSPropertyAttribute]
public string TapeARN { get; public set; }
    public Nullable`1<bool> get_BypassGovernanceRetention();
    public void set_BypassGovernanceRetention(Nullable`1<bool> value);
    internal bool IsSetBypassGovernanceRetention();
    public string get_PoolId();
    public void set_PoolId(string value);
    internal bool IsSetPoolId();
    public string get_TapeARN();
    public void set_TapeARN(string value);
    internal bool IsSetTapeARN();
}
public class Amazon.StorageGateway.Model.AssignTapePoolResponse : AmazonWebServiceResponse {
    private string _tapeARN;
    [AWSPropertyAttribute]
public string TapeARN { get; public set; }
    public string get_TapeARN();
    public void set_TapeARN(string value);
    internal bool IsSetTapeARN();
}
public class Amazon.StorageGateway.Model.AssociateFileSystemRequest : AmazonStorageGatewayRequest {
    private string _auditDestinationARN;
    private CacheAttributes _cacheAttributes;
    private string _clientToken;
    private EndpointNetworkConfiguration _endpointNetworkConfiguration;
    private string _gatewayARN;
    private string _locationARN;
    private string _password;
    private List`1<Tag> _tags;
    private string _userName;
    [AWSPropertyAttribute]
public string AuditDestinationARN { get; public set; }
    public CacheAttributes CacheAttributes { get; public set; }
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    public EndpointNetworkConfiguration EndpointNetworkConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public string LocationARN { get; public set; }
    [AWSPropertyAttribute]
public string Password { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string UserName { get; public set; }
    public string get_AuditDestinationARN();
    public void set_AuditDestinationARN(string value);
    internal bool IsSetAuditDestinationARN();
    public CacheAttributes get_CacheAttributes();
    public void set_CacheAttributes(CacheAttributes value);
    internal bool IsSetCacheAttributes();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public EndpointNetworkConfiguration get_EndpointNetworkConfiguration();
    public void set_EndpointNetworkConfiguration(EndpointNetworkConfiguration value);
    internal bool IsSetEndpointNetworkConfiguration();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public string get_LocationARN();
    public void set_LocationARN(string value);
    internal bool IsSetLocationARN();
    public string get_Password();
    public void set_Password(string value);
    internal bool IsSetPassword();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_UserName();
    public void set_UserName(string value);
    internal bool IsSetUserName();
}
public class Amazon.StorageGateway.Model.AssociateFileSystemResponse : AmazonWebServiceResponse {
    private string _fileSystemAssociationARN;
    [AWSPropertyAttribute]
public string FileSystemAssociationARN { get; public set; }
    public string get_FileSystemAssociationARN();
    public void set_FileSystemAssociationARN(string value);
    internal bool IsSetFileSystemAssociationARN();
}
public class Amazon.StorageGateway.Model.AttachVolumeRequest : AmazonStorageGatewayRequest {
    private string _diskId;
    private string _gatewayARN;
    private string _networkInterfaceId;
    private string _targetName;
    private string _volumeARN;
    [AWSPropertyAttribute]
public string DiskId { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public string NetworkInterfaceId { get; public set; }
    [AWSPropertyAttribute]
public string TargetName { get; public set; }
    [AWSPropertyAttribute]
public string VolumeARN { get; public set; }
    public string get_DiskId();
    public void set_DiskId(string value);
    internal bool IsSetDiskId();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_TargetName();
    public void set_TargetName(string value);
    internal bool IsSetTargetName();
    public string get_VolumeARN();
    public void set_VolumeARN(string value);
    internal bool IsSetVolumeARN();
}
public class Amazon.StorageGateway.Model.AttachVolumeResponse : AmazonWebServiceResponse {
    private string _targetARN;
    private string _volumeARN;
    [AWSPropertyAttribute]
public string TargetARN { get; public set; }
    [AWSPropertyAttribute]
public string VolumeARN { get; public set; }
    public string get_TargetARN();
    public void set_TargetARN(string value);
    internal bool IsSetTargetARN();
    public string get_VolumeARN();
    public void set_VolumeARN(string value);
    internal bool IsSetVolumeARN();
}
public class Amazon.StorageGateway.Model.AutomaticTapeCreationPolicyInfo : object {
    private List`1<AutomaticTapeCreationRule> _automaticTapeCreationRules;
    private string _gatewayARN;
    [AWSPropertyAttribute]
public List`1<AutomaticTapeCreationRule> AutomaticTapeCreationRules { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public List`1<AutomaticTapeCreationRule> get_AutomaticTapeCreationRules();
    public void set_AutomaticTapeCreationRules(List`1<AutomaticTapeCreationRule> value);
    internal bool IsSetAutomaticTapeCreationRules();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.AutomaticTapeCreationRule : object {
    private Nullable`1<int> _minimumNumTapes;
    private string _poolId;
    private string _tapeBarcodePrefix;
    private Nullable`1<long> _tapeSizeInBytes;
    private Nullable`1<bool> _worm;
    [AWSPropertyAttribute]
public Nullable`1<int> MinimumNumTapes { get; public set; }
    [AWSPropertyAttribute]
public string PoolId { get; public set; }
    [AWSPropertyAttribute]
public string TapeBarcodePrefix { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> TapeSizeInBytes { get; public set; }
    public Nullable`1<bool> Worm { get; public set; }
    public Nullable`1<int> get_MinimumNumTapes();
    public void set_MinimumNumTapes(Nullable`1<int> value);
    internal bool IsSetMinimumNumTapes();
    public string get_PoolId();
    public void set_PoolId(string value);
    internal bool IsSetPoolId();
    public string get_TapeBarcodePrefix();
    public void set_TapeBarcodePrefix(string value);
    internal bool IsSetTapeBarcodePrefix();
    public Nullable`1<long> get_TapeSizeInBytes();
    public void set_TapeSizeInBytes(Nullable`1<long> value);
    internal bool IsSetTapeSizeInBytes();
    public Nullable`1<bool> get_Worm();
    public void set_Worm(Nullable`1<bool> value);
    internal bool IsSetWorm();
}
public class Amazon.StorageGateway.Model.BandwidthRateLimitInterval : object {
    private Nullable`1<long> _averageDownloadRateLimitInBitsPerSec;
    private Nullable`1<long> _averageUploadRateLimitInBitsPerSec;
    private List`1<int> _daysOfWeek;
    private Nullable`1<int> _endHourOfDay;
    private Nullable`1<int> _endMinuteOfHour;
    private Nullable`1<int> _startHourOfDay;
    private Nullable`1<int> _startMinuteOfHour;
    [AWSPropertyAttribute]
public Nullable`1<long> AverageDownloadRateLimitInBitsPerSec { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> AverageUploadRateLimitInBitsPerSec { get; public set; }
    [AWSPropertyAttribute]
public List`1<int> DaysOfWeek { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> EndHourOfDay { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> EndMinuteOfHour { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> StartHourOfDay { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> StartMinuteOfHour { get; public set; }
    public Nullable`1<long> get_AverageDownloadRateLimitInBitsPerSec();
    public void set_AverageDownloadRateLimitInBitsPerSec(Nullable`1<long> value);
    internal bool IsSetAverageDownloadRateLimitInBitsPerSec();
    public Nullable`1<long> get_AverageUploadRateLimitInBitsPerSec();
    public void set_AverageUploadRateLimitInBitsPerSec(Nullable`1<long> value);
    internal bool IsSetAverageUploadRateLimitInBitsPerSec();
    public List`1<int> get_DaysOfWeek();
    public void set_DaysOfWeek(List`1<int> value);
    internal bool IsSetDaysOfWeek();
    public Nullable`1<int> get_EndHourOfDay();
    public void set_EndHourOfDay(Nullable`1<int> value);
    internal bool IsSetEndHourOfDay();
    public Nullable`1<int> get_EndMinuteOfHour();
    public void set_EndMinuteOfHour(Nullable`1<int> value);
    internal bool IsSetEndMinuteOfHour();
    public Nullable`1<int> get_StartHourOfDay();
    public void set_StartHourOfDay(Nullable`1<int> value);
    internal bool IsSetStartHourOfDay();
    public Nullable`1<int> get_StartMinuteOfHour();
    public void set_StartMinuteOfHour(Nullable`1<int> value);
    internal bool IsSetStartMinuteOfHour();
}
public class Amazon.StorageGateway.Model.CacheAttributes : object {
    private Nullable`1<int> _cacheStaleTimeoutInSeconds;
    public Nullable`1<int> CacheStaleTimeoutInSeconds { get; public set; }
    public Nullable`1<int> get_CacheStaleTimeoutInSeconds();
    public void set_CacheStaleTimeoutInSeconds(Nullable`1<int> value);
    internal bool IsSetCacheStaleTimeoutInSeconds();
}
public class Amazon.StorageGateway.Model.CachediSCSIVolume : object {
    private Nullable`1<DateTime> _createdDate;
    private string _kmsKey;
    private string _sourceSnapshotId;
    private string _targetName;
    private string _volumeARN;
    private string _volumeAttachmentStatus;
    private string _volumeId;
    private VolumeiSCSIAttributes _volumeiSCSIAttributes;
    private Nullable`1<double> _volumeProgress;
    private Nullable`1<long> _volumeSizeInBytes;
    private string _volumeStatus;
    private string _volumeType;
    private Nullable`1<long> _volumeUsedInBytes;
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    [AWSPropertyAttribute]
public string KMSKey { get; public set; }
    public string SourceSnapshotId { get; public set; }
    [AWSPropertyAttribute]
public string TargetName { get; public set; }
    [AWSPropertyAttribute]
public string VolumeARN { get; public set; }
    [AWSPropertyAttribute]
public string VolumeAttachmentStatus { get; public set; }
    [AWSPropertyAttribute]
public string VolumeId { get; public set; }
    public VolumeiSCSIAttributes VolumeiSCSIAttributes { get; public set; }
    public Nullable`1<double> VolumeProgress { get; public set; }
    public Nullable`1<long> VolumeSizeInBytes { get; public set; }
    [AWSPropertyAttribute]
public string VolumeStatus { get; public set; }
    [AWSPropertyAttribute]
public string VolumeType { get; public set; }
    public Nullable`1<long> VolumeUsedInBytes { get; public set; }
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_KMSKey();
    public void set_KMSKey(string value);
    internal bool IsSetKMSKey();
    public string get_SourceSnapshotId();
    public void set_SourceSnapshotId(string value);
    internal bool IsSetSourceSnapshotId();
    public string get_TargetName();
    public void set_TargetName(string value);
    internal bool IsSetTargetName();
    public string get_VolumeARN();
    public void set_VolumeARN(string value);
    internal bool IsSetVolumeARN();
    public string get_VolumeAttachmentStatus();
    public void set_VolumeAttachmentStatus(string value);
    internal bool IsSetVolumeAttachmentStatus();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
    public VolumeiSCSIAttributes get_VolumeiSCSIAttributes();
    public void set_VolumeiSCSIAttributes(VolumeiSCSIAttributes value);
    internal bool IsSetVolumeiSCSIAttributes();
    public Nullable`1<double> get_VolumeProgress();
    public void set_VolumeProgress(Nullable`1<double> value);
    internal bool IsSetVolumeProgress();
    public Nullable`1<long> get_VolumeSizeInBytes();
    public void set_VolumeSizeInBytes(Nullable`1<long> value);
    internal bool IsSetVolumeSizeInBytes();
    public string get_VolumeStatus();
    public void set_VolumeStatus(string value);
    internal bool IsSetVolumeStatus();
    public string get_VolumeType();
    public void set_VolumeType(string value);
    internal bool IsSetVolumeType();
    public Nullable`1<long> get_VolumeUsedInBytes();
    public void set_VolumeUsedInBytes(Nullable`1<long> value);
    internal bool IsSetVolumeUsedInBytes();
}
public class Amazon.StorageGateway.Model.CancelArchivalRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    private string _tapeARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public string TapeARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public string get_TapeARN();
    public void set_TapeARN(string value);
    internal bool IsSetTapeARN();
}
public class Amazon.StorageGateway.Model.CancelArchivalResponse : AmazonWebServiceResponse {
    private string _tapeARN;
    [AWSPropertyAttribute]
public string TapeARN { get; public set; }
    public string get_TapeARN();
    public void set_TapeARN(string value);
    internal bool IsSetTapeARN();
}
public class Amazon.StorageGateway.Model.CancelRetrievalRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    private string _tapeARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public string TapeARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public string get_TapeARN();
    public void set_TapeARN(string value);
    internal bool IsSetTapeARN();
}
public class Amazon.StorageGateway.Model.CancelRetrievalResponse : AmazonWebServiceResponse {
    private string _tapeARN;
    [AWSPropertyAttribute]
public string TapeARN { get; public set; }
    public string get_TapeARN();
    public void set_TapeARN(string value);
    internal bool IsSetTapeARN();
}
public class Amazon.StorageGateway.Model.ChapInfo : object {
    private string _initiatorName;
    private string _secretToAuthenticateInitiator;
    private string _secretToAuthenticateTarget;
    private string _targetARN;
    [AWSPropertyAttribute]
public string InitiatorName { get; public set; }
    [AWSPropertyAttribute]
public string SecretToAuthenticateInitiator { get; public set; }
    [AWSPropertyAttribute]
public string SecretToAuthenticateTarget { get; public set; }
    [AWSPropertyAttribute]
public string TargetARN { get; public set; }
    public string get_InitiatorName();
    public void set_InitiatorName(string value);
    internal bool IsSetInitiatorName();
    public string get_SecretToAuthenticateInitiator();
    public void set_SecretToAuthenticateInitiator(string value);
    internal bool IsSetSecretToAuthenticateInitiator();
    public string get_SecretToAuthenticateTarget();
    public void set_SecretToAuthenticateTarget(string value);
    internal bool IsSetSecretToAuthenticateTarget();
    public string get_TargetARN();
    public void set_TargetARN(string value);
    internal bool IsSetTargetARN();
}
public class Amazon.StorageGateway.Model.CreateCachediSCSIVolumeRequest : AmazonStorageGatewayRequest {
    private string _clientToken;
    private string _gatewayARN;
    private Nullable`1<bool> _kmsEncrypted;
    private string _kmsKey;
    private string _networkInterfaceId;
    private string _snapshotId;
    private string _sourceVolumeARN;
    private List`1<Tag> _tags;
    private string _targetName;
    private Nullable`1<long> _volumeSizeInBytes;
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public Nullable`1<bool> KMSEncrypted { get; public set; }
    [AWSPropertyAttribute]
public string KMSKey { get; public set; }
    [AWSPropertyAttribute]
public string NetworkInterfaceId { get; public set; }
    public string SnapshotId { get; public set; }
    [AWSPropertyAttribute]
public string SourceVolumeARN { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TargetName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> VolumeSizeInBytes { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public Nullable`1<bool> get_KMSEncrypted();
    public void set_KMSEncrypted(Nullable`1<bool> value);
    internal bool IsSetKMSEncrypted();
    public string get_KMSKey();
    public void set_KMSKey(string value);
    internal bool IsSetKMSKey();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public string get_SourceVolumeARN();
    public void set_SourceVolumeARN(string value);
    internal bool IsSetSourceVolumeARN();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TargetName();
    public void set_TargetName(string value);
    internal bool IsSetTargetName();
    public Nullable`1<long> get_VolumeSizeInBytes();
    public void set_VolumeSizeInBytes(Nullable`1<long> value);
    internal bool IsSetVolumeSizeInBytes();
}
public class Amazon.StorageGateway.Model.CreateCachediSCSIVolumeResponse : AmazonWebServiceResponse {
    private string _targetARN;
    private string _volumeARN;
    [AWSPropertyAttribute]
public string TargetARN { get; public set; }
    [AWSPropertyAttribute]
public string VolumeARN { get; public set; }
    public string get_TargetARN();
    public void set_TargetARN(string value);
    internal bool IsSetTargetARN();
    public string get_VolumeARN();
    public void set_VolumeARN(string value);
    internal bool IsSetVolumeARN();
}
public class Amazon.StorageGateway.Model.CreateNFSFileShareRequest : AmazonStorageGatewayRequest {
    private string _auditDestinationARN;
    private string _bucketRegion;
    private CacheAttributes _cacheAttributes;
    private List`1<string> _clientList;
    private string _clientToken;
    private string _defaultStorageClass;
    private string _fileShareName;
    private string _gatewayARN;
    private Nullable`1<bool> _guessMIMETypeEnabled;
    private Nullable`1<bool> _kmsEncrypted;
    private string _kmsKey;
    private string _locationARN;
    private NFSFileShareDefaults _nfsFileShareDefaults;
    private string _notificationPolicy;
    private ObjectACL _objectACL;
    private Nullable`1<bool> _readOnly;
    private Nullable`1<bool> _requesterPays;
    private string _role;
    private string _squash;
    private List`1<Tag> _tags;
    private string _vpcEndpointDNSName;
    [AWSPropertyAttribute]
public string AuditDestinationARN { get; public set; }
    [AWSPropertyAttribute]
public string BucketRegion { get; public set; }
    public CacheAttributes CacheAttributes { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ClientList { get; public set; }
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string DefaultStorageClass { get; public set; }
    [AWSPropertyAttribute]
public string FileShareName { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public Nullable`1<bool> GuessMIMETypeEnabled { get; public set; }
    public Nullable`1<bool> KMSEncrypted { get; public set; }
    [AWSPropertyAttribute]
public string KMSKey { get; public set; }
    [AWSPropertyAttribute]
public string LocationARN { get; public set; }
    public NFSFileShareDefaults NFSFileShareDefaults { get; public set; }
    [AWSPropertyAttribute]
public string NotificationPolicy { get; public set; }
    public ObjectACL ObjectACL { get; public set; }
    public Nullable`1<bool> ReadOnly { get; public set; }
    public Nullable`1<bool> RequesterPays { get; public set; }
    [AWSPropertyAttribute]
public string Role { get; public set; }
    [AWSPropertyAttribute]
public string Squash { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string VPCEndpointDNSName { get; public set; }
    public string get_AuditDestinationARN();
    public void set_AuditDestinationARN(string value);
    internal bool IsSetAuditDestinationARN();
    public string get_BucketRegion();
    public void set_BucketRegion(string value);
    internal bool IsSetBucketRegion();
    public CacheAttributes get_CacheAttributes();
    public void set_CacheAttributes(CacheAttributes value);
    internal bool IsSetCacheAttributes();
    public List`1<string> get_ClientList();
    public void set_ClientList(List`1<string> value);
    internal bool IsSetClientList();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_DefaultStorageClass();
    public void set_DefaultStorageClass(string value);
    internal bool IsSetDefaultStorageClass();
    public string get_FileShareName();
    public void set_FileShareName(string value);
    internal bool IsSetFileShareName();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public Nullable`1<bool> get_GuessMIMETypeEnabled();
    public void set_GuessMIMETypeEnabled(Nullable`1<bool> value);
    internal bool IsSetGuessMIMETypeEnabled();
    public Nullable`1<bool> get_KMSEncrypted();
    public void set_KMSEncrypted(Nullable`1<bool> value);
    internal bool IsSetKMSEncrypted();
    public string get_KMSKey();
    public void set_KMSKey(string value);
    internal bool IsSetKMSKey();
    public string get_LocationARN();
    public void set_LocationARN(string value);
    internal bool IsSetLocationARN();
    public NFSFileShareDefaults get_NFSFileShareDefaults();
    public void set_NFSFileShareDefaults(NFSFileShareDefaults value);
    internal bool IsSetNFSFileShareDefaults();
    public string get_NotificationPolicy();
    public void set_NotificationPolicy(string value);
    internal bool IsSetNotificationPolicy();
    public ObjectACL get_ObjectACL();
    public void set_ObjectACL(ObjectACL value);
    internal bool IsSetObjectACL();
    public Nullable`1<bool> get_ReadOnly();
    public void set_ReadOnly(Nullable`1<bool> value);
    internal bool IsSetReadOnly();
    public Nullable`1<bool> get_RequesterPays();
    public void set_RequesterPays(Nullable`1<bool> value);
    internal bool IsSetRequesterPays();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public string get_Squash();
    public void set_Squash(string value);
    internal bool IsSetSquash();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VPCEndpointDNSName();
    public void set_VPCEndpointDNSName(string value);
    internal bool IsSetVPCEndpointDNSName();
}
public class Amazon.StorageGateway.Model.CreateNFSFileShareResponse : AmazonWebServiceResponse {
    private string _fileShareARN;
    [AWSPropertyAttribute]
public string FileShareARN { get; public set; }
    public string get_FileShareARN();
    public void set_FileShareARN(string value);
    internal bool IsSetFileShareARN();
}
public class Amazon.StorageGateway.Model.CreateSMBFileShareRequest : AmazonStorageGatewayRequest {
    private Nullable`1<bool> _accessBasedEnumeration;
    private List`1<string> _adminUserList;
    private string _auditDestinationARN;
    private string _authentication;
    private string _bucketRegion;
    private CacheAttributes _cacheAttributes;
    private CaseSensitivity _caseSensitivity;
    private string _clientToken;
    private string _defaultStorageClass;
    private string _fileShareName;
    private string _gatewayARN;
    private Nullable`1<bool> _guessMIMETypeEnabled;
    private List`1<string> _invalidUserList;
    private Nullable`1<bool> _kmsEncrypted;
    private string _kmsKey;
    private string _locationARN;
    private string _notificationPolicy;
    private ObjectACL _objectACL;
    private Nullable`1<bool> _oplocksEnabled;
    private Nullable`1<bool> _readOnly;
    private Nullable`1<bool> _requesterPays;
    private string _role;
    private Nullable`1<bool> _smbaclEnabled;
    private List`1<Tag> _tags;
    private List`1<string> _validUserList;
    private string _vpcEndpointDNSName;
    public Nullable`1<bool> AccessBasedEnumeration { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> AdminUserList { get; public set; }
    [AWSPropertyAttribute]
public string AuditDestinationARN { get; public set; }
    [AWSPropertyAttribute]
public string Authentication { get; public set; }
    [AWSPropertyAttribute]
public string BucketRegion { get; public set; }
    public CacheAttributes CacheAttributes { get; public set; }
    public CaseSensitivity CaseSensitivity { get; public set; }
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string DefaultStorageClass { get; public set; }
    [AWSPropertyAttribute]
public string FileShareName { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public Nullable`1<bool> GuessMIMETypeEnabled { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> InvalidUserList { get; public set; }
    public Nullable`1<bool> KMSEncrypted { get; public set; }
    [AWSPropertyAttribute]
public string KMSKey { get; public set; }
    [AWSPropertyAttribute]
public string LocationARN { get; public set; }
    [AWSPropertyAttribute]
public string NotificationPolicy { get; public set; }
    public ObjectACL ObjectACL { get; public set; }
    public Nullable`1<bool> OplocksEnabled { get; public set; }
    public Nullable`1<bool> ReadOnly { get; public set; }
    public Nullable`1<bool> RequesterPays { get; public set; }
    [AWSPropertyAttribute]
public string Role { get; public set; }
    public Nullable`1<bool> SMBACLEnabled { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ValidUserList { get; public set; }
    [AWSPropertyAttribute]
public string VPCEndpointDNSName { get; public set; }
    public Nullable`1<bool> get_AccessBasedEnumeration();
    public void set_AccessBasedEnumeration(Nullable`1<bool> value);
    internal bool IsSetAccessBasedEnumeration();
    public List`1<string> get_AdminUserList();
    public void set_AdminUserList(List`1<string> value);
    internal bool IsSetAdminUserList();
    public string get_AuditDestinationARN();
    public void set_AuditDestinationARN(string value);
    internal bool IsSetAuditDestinationARN();
    public string get_Authentication();
    public void set_Authentication(string value);
    internal bool IsSetAuthentication();
    public string get_BucketRegion();
    public void set_BucketRegion(string value);
    internal bool IsSetBucketRegion();
    public CacheAttributes get_CacheAttributes();
    public void set_CacheAttributes(CacheAttributes value);
    internal bool IsSetCacheAttributes();
    public CaseSensitivity get_CaseSensitivity();
    public void set_CaseSensitivity(CaseSensitivity value);
    internal bool IsSetCaseSensitivity();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_DefaultStorageClass();
    public void set_DefaultStorageClass(string value);
    internal bool IsSetDefaultStorageClass();
    public string get_FileShareName();
    public void set_FileShareName(string value);
    internal bool IsSetFileShareName();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public Nullable`1<bool> get_GuessMIMETypeEnabled();
    public void set_GuessMIMETypeEnabled(Nullable`1<bool> value);
    internal bool IsSetGuessMIMETypeEnabled();
    public List`1<string> get_InvalidUserList();
    public void set_InvalidUserList(List`1<string> value);
    internal bool IsSetInvalidUserList();
    public Nullable`1<bool> get_KMSEncrypted();
    public void set_KMSEncrypted(Nullable`1<bool> value);
    internal bool IsSetKMSEncrypted();
    public string get_KMSKey();
    public void set_KMSKey(string value);
    internal bool IsSetKMSKey();
    public string get_LocationARN();
    public void set_LocationARN(string value);
    internal bool IsSetLocationARN();
    public string get_NotificationPolicy();
    public void set_NotificationPolicy(string value);
    internal bool IsSetNotificationPolicy();
    public ObjectACL get_ObjectACL();
    public void set_ObjectACL(ObjectACL value);
    internal bool IsSetObjectACL();
    public Nullable`1<bool> get_OplocksEnabled();
    public void set_OplocksEnabled(Nullable`1<bool> value);
    internal bool IsSetOplocksEnabled();
    public Nullable`1<bool> get_ReadOnly();
    public void set_ReadOnly(Nullable`1<bool> value);
    internal bool IsSetReadOnly();
    public Nullable`1<bool> get_RequesterPays();
    public void set_RequesterPays(Nullable`1<bool> value);
    internal bool IsSetRequesterPays();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public Nullable`1<bool> get_SMBACLEnabled();
    public void set_SMBACLEnabled(Nullable`1<bool> value);
    internal bool IsSetSMBACLEnabled();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public List`1<string> get_ValidUserList();
    public void set_ValidUserList(List`1<string> value);
    internal bool IsSetValidUserList();
    public string get_VPCEndpointDNSName();
    public void set_VPCEndpointDNSName(string value);
    internal bool IsSetVPCEndpointDNSName();
}
public class Amazon.StorageGateway.Model.CreateSMBFileShareResponse : AmazonWebServiceResponse {
    private string _fileShareARN;
    [AWSPropertyAttribute]
public string FileShareARN { get; public set; }
    public string get_FileShareARN();
    public void set_FileShareARN(string value);
    internal bool IsSetFileShareARN();
}
public class Amazon.StorageGateway.Model.CreateSnapshotFromVolumeRecoveryPointRequest : AmazonStorageGatewayRequest {
    private string _snapshotDescription;
    private List`1<Tag> _tags;
    private string _volumeARN;
    [AWSPropertyAttribute]
public string SnapshotDescription { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string VolumeARN { get; public set; }
    public string get_SnapshotDescription();
    public void set_SnapshotDescription(string value);
    internal bool IsSetSnapshotDescription();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VolumeARN();
    public void set_VolumeARN(string value);
    internal bool IsSetVolumeARN();
}
public class Amazon.StorageGateway.Model.CreateSnapshotFromVolumeRecoveryPointResponse : AmazonWebServiceResponse {
    private string _snapshotId;
    private string _volumeARN;
    private string _volumeRecoveryPointTime;
    public string SnapshotId { get; public set; }
    [AWSPropertyAttribute]
public string VolumeARN { get; public set; }
    public string VolumeRecoveryPointTime { get; public set; }
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public string get_VolumeARN();
    public void set_VolumeARN(string value);
    internal bool IsSetVolumeARN();
    public string get_VolumeRecoveryPointTime();
    public void set_VolumeRecoveryPointTime(string value);
    internal bool IsSetVolumeRecoveryPointTime();
}
public class Amazon.StorageGateway.Model.CreateSnapshotRequest : AmazonStorageGatewayRequest {
    private string _snapshotDescription;
    private List`1<Tag> _tags;
    private string _volumeARN;
    [AWSPropertyAttribute]
public string SnapshotDescription { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string VolumeARN { get; public set; }
    public string get_SnapshotDescription();
    public void set_SnapshotDescription(string value);
    internal bool IsSetSnapshotDescription();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VolumeARN();
    public void set_VolumeARN(string value);
    internal bool IsSetVolumeARN();
}
public class Amazon.StorageGateway.Model.CreateSnapshotResponse : AmazonWebServiceResponse {
    private string _snapshotId;
    private string _volumeARN;
    public string SnapshotId { get; public set; }
    [AWSPropertyAttribute]
public string VolumeARN { get; public set; }
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public string get_VolumeARN();
    public void set_VolumeARN(string value);
    internal bool IsSetVolumeARN();
}
public class Amazon.StorageGateway.Model.CreateStorediSCSIVolumeRequest : AmazonStorageGatewayRequest {
    private string _diskId;
    private string _gatewayARN;
    private Nullable`1<bool> _kmsEncrypted;
    private string _kmsKey;
    private string _networkInterfaceId;
    private Nullable`1<bool> _preserveExistingData;
    private string _snapshotId;
    private List`1<Tag> _tags;
    private string _targetName;
    [AWSPropertyAttribute]
public string DiskId { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public Nullable`1<bool> KMSEncrypted { get; public set; }
    [AWSPropertyAttribute]
public string KMSKey { get; public set; }
    [AWSPropertyAttribute]
public string NetworkInterfaceId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> PreserveExistingData { get; public set; }
    public string SnapshotId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TargetName { get; public set; }
    public string get_DiskId();
    public void set_DiskId(string value);
    internal bool IsSetDiskId();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public Nullable`1<bool> get_KMSEncrypted();
    public void set_KMSEncrypted(Nullable`1<bool> value);
    internal bool IsSetKMSEncrypted();
    public string get_KMSKey();
    public void set_KMSKey(string value);
    internal bool IsSetKMSKey();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public Nullable`1<bool> get_PreserveExistingData();
    public void set_PreserveExistingData(Nullable`1<bool> value);
    internal bool IsSetPreserveExistingData();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TargetName();
    public void set_TargetName(string value);
    internal bool IsSetTargetName();
}
public class Amazon.StorageGateway.Model.CreateStorediSCSIVolumeResponse : AmazonWebServiceResponse {
    private string _targetARN;
    private string _volumeARN;
    private Nullable`1<long> _volumeSizeInBytes;
    [AWSPropertyAttribute]
public string TargetARN { get; public set; }
    [AWSPropertyAttribute]
public string VolumeARN { get; public set; }
    public Nullable`1<long> VolumeSizeInBytes { get; public set; }
    public string get_TargetARN();
    public void set_TargetARN(string value);
    internal bool IsSetTargetARN();
    public string get_VolumeARN();
    public void set_VolumeARN(string value);
    internal bool IsSetVolumeARN();
    public Nullable`1<long> get_VolumeSizeInBytes();
    public void set_VolumeSizeInBytes(Nullable`1<long> value);
    internal bool IsSetVolumeSizeInBytes();
}
public class Amazon.StorageGateway.Model.CreateTapePoolRequest : AmazonStorageGatewayRequest {
    private string _poolName;
    private Nullable`1<int> _retentionLockTimeInDays;
    private RetentionLockType _retentionLockType;
    private TapeStorageClass _storageClass;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string PoolName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RetentionLockTimeInDays { get; public set; }
    public RetentionLockType RetentionLockType { get; public set; }
    [AWSPropertyAttribute]
public TapeStorageClass StorageClass { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_PoolName();
    public void set_PoolName(string value);
    internal bool IsSetPoolName();
    public Nullable`1<int> get_RetentionLockTimeInDays();
    public void set_RetentionLockTimeInDays(Nullable`1<int> value);
    internal bool IsSetRetentionLockTimeInDays();
    public RetentionLockType get_RetentionLockType();
    public void set_RetentionLockType(RetentionLockType value);
    internal bool IsSetRetentionLockType();
    public TapeStorageClass get_StorageClass();
    public void set_StorageClass(TapeStorageClass value);
    internal bool IsSetStorageClass();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.StorageGateway.Model.CreateTapePoolResponse : AmazonWebServiceResponse {
    private string _poolARN;
    [AWSPropertyAttribute]
public string PoolARN { get; public set; }
    public string get_PoolARN();
    public void set_PoolARN(string value);
    internal bool IsSetPoolARN();
}
public class Amazon.StorageGateway.Model.CreateTapesRequest : AmazonStorageGatewayRequest {
    private string _clientToken;
    private string _gatewayARN;
    private Nullable`1<bool> _kmsEncrypted;
    private string _kmsKey;
    private Nullable`1<int> _numTapesToCreate;
    private string _poolId;
    private List`1<Tag> _tags;
    private string _tapeBarcodePrefix;
    private Nullable`1<long> _tapeSizeInBytes;
    private Nullable`1<bool> _worm;
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public Nullable`1<bool> KMSEncrypted { get; public set; }
    [AWSPropertyAttribute]
public string KMSKey { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> NumTapesToCreate { get; public set; }
    [AWSPropertyAttribute]
public string PoolId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TapeBarcodePrefix { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> TapeSizeInBytes { get; public set; }
    public Nullable`1<bool> Worm { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public Nullable`1<bool> get_KMSEncrypted();
    public void set_KMSEncrypted(Nullable`1<bool> value);
    internal bool IsSetKMSEncrypted();
    public string get_KMSKey();
    public void set_KMSKey(string value);
    internal bool IsSetKMSKey();
    public Nullable`1<int> get_NumTapesToCreate();
    public void set_NumTapesToCreate(Nullable`1<int> value);
    internal bool IsSetNumTapesToCreate();
    public string get_PoolId();
    public void set_PoolId(string value);
    internal bool IsSetPoolId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TapeBarcodePrefix();
    public void set_TapeBarcodePrefix(string value);
    internal bool IsSetTapeBarcodePrefix();
    public Nullable`1<long> get_TapeSizeInBytes();
    public void set_TapeSizeInBytes(Nullable`1<long> value);
    internal bool IsSetTapeSizeInBytes();
    public Nullable`1<bool> get_Worm();
    public void set_Worm(Nullable`1<bool> value);
    internal bool IsSetWorm();
}
public class Amazon.StorageGateway.Model.CreateTapesResponse : AmazonWebServiceResponse {
    private List`1<string> _tapeARNs;
    public List`1<string> TapeARNs { get; public set; }
    public List`1<string> get_TapeARNs();
    public void set_TapeARNs(List`1<string> value);
    internal bool IsSetTapeARNs();
}
public class Amazon.StorageGateway.Model.CreateTapeWithBarcodeRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    private Nullable`1<bool> _kmsEncrypted;
    private string _kmsKey;
    private string _poolId;
    private List`1<Tag> _tags;
    private string _tapeBarcode;
    private Nullable`1<long> _tapeSizeInBytes;
    private Nullable`1<bool> _worm;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public Nullable`1<bool> KMSEncrypted { get; public set; }
    [AWSPropertyAttribute]
public string KMSKey { get; public set; }
    [AWSPropertyAttribute]
public string PoolId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TapeBarcode { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> TapeSizeInBytes { get; public set; }
    public Nullable`1<bool> Worm { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public Nullable`1<bool> get_KMSEncrypted();
    public void set_KMSEncrypted(Nullable`1<bool> value);
    internal bool IsSetKMSEncrypted();
    public string get_KMSKey();
    public void set_KMSKey(string value);
    internal bool IsSetKMSKey();
    public string get_PoolId();
    public void set_PoolId(string value);
    internal bool IsSetPoolId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TapeBarcode();
    public void set_TapeBarcode(string value);
    internal bool IsSetTapeBarcode();
    public Nullable`1<long> get_TapeSizeInBytes();
    public void set_TapeSizeInBytes(Nullable`1<long> value);
    internal bool IsSetTapeSizeInBytes();
    public Nullable`1<bool> get_Worm();
    public void set_Worm(Nullable`1<bool> value);
    internal bool IsSetWorm();
}
public class Amazon.StorageGateway.Model.CreateTapeWithBarcodeResponse : AmazonWebServiceResponse {
    private string _tapeARN;
    [AWSPropertyAttribute]
public string TapeARN { get; public set; }
    public string get_TapeARN();
    public void set_TapeARN(string value);
    internal bool IsSetTapeARN();
}
public class Amazon.StorageGateway.Model.DeleteAutomaticTapeCreationPolicyRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.DeleteAutomaticTapeCreationPolicyResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.DeleteBandwidthRateLimitRequest : AmazonStorageGatewayRequest {
    private string _bandwidthType;
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string BandwidthType { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_BandwidthType();
    public void set_BandwidthType(string value);
    internal bool IsSetBandwidthType();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.DeleteBandwidthRateLimitResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.DeleteChapCredentialsRequest : AmazonStorageGatewayRequest {
    private string _initiatorName;
    private string _targetARN;
    [AWSPropertyAttribute]
public string InitiatorName { get; public set; }
    [AWSPropertyAttribute]
public string TargetARN { get; public set; }
    public string get_InitiatorName();
    public void set_InitiatorName(string value);
    internal bool IsSetInitiatorName();
    public string get_TargetARN();
    public void set_TargetARN(string value);
    internal bool IsSetTargetARN();
}
public class Amazon.StorageGateway.Model.DeleteChapCredentialsResponse : AmazonWebServiceResponse {
    private string _initiatorName;
    private string _targetARN;
    [AWSPropertyAttribute]
public string InitiatorName { get; public set; }
    [AWSPropertyAttribute]
public string TargetARN { get; public set; }
    public string get_InitiatorName();
    public void set_InitiatorName(string value);
    internal bool IsSetInitiatorName();
    public string get_TargetARN();
    public void set_TargetARN(string value);
    internal bool IsSetTargetARN();
}
public class Amazon.StorageGateway.Model.DeleteFileShareRequest : AmazonStorageGatewayRequest {
    private string _fileShareARN;
    private Nullable`1<bool> _forceDelete;
    [AWSPropertyAttribute]
public string FileShareARN { get; public set; }
    public Nullable`1<bool> ForceDelete { get; public set; }
    public string get_FileShareARN();
    public void set_FileShareARN(string value);
    internal bool IsSetFileShareARN();
    public Nullable`1<bool> get_ForceDelete();
    public void set_ForceDelete(Nullable`1<bool> value);
    internal bool IsSetForceDelete();
}
public class Amazon.StorageGateway.Model.DeleteFileShareResponse : AmazonWebServiceResponse {
    private string _fileShareARN;
    [AWSPropertyAttribute]
public string FileShareARN { get; public set; }
    public string get_FileShareARN();
    public void set_FileShareARN(string value);
    internal bool IsSetFileShareARN();
}
public class Amazon.StorageGateway.Model.DeleteGatewayRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.DeleteGatewayResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.DeleteSnapshotScheduleRequest : AmazonStorageGatewayRequest {
    private string _volumeARN;
    [AWSPropertyAttribute]
public string VolumeARN { get; public set; }
    public string get_VolumeARN();
    public void set_VolumeARN(string value);
    internal bool IsSetVolumeARN();
}
public class Amazon.StorageGateway.Model.DeleteSnapshotScheduleResponse : AmazonWebServiceResponse {
    private string _volumeARN;
    [AWSPropertyAttribute]
public string VolumeARN { get; public set; }
    public string get_VolumeARN();
    public void set_VolumeARN(string value);
    internal bool IsSetVolumeARN();
}
public class Amazon.StorageGateway.Model.DeleteTapeArchiveRequest : AmazonStorageGatewayRequest {
    private Nullable`1<bool> _bypassGovernanceRetention;
    private string _tapeARN;
    public Nullable`1<bool> BypassGovernanceRetention { get; public set; }
    [AWSPropertyAttribute]
public string TapeARN { get; public set; }
    public Nullable`1<bool> get_BypassGovernanceRetention();
    public void set_BypassGovernanceRetention(Nullable`1<bool> value);
    internal bool IsSetBypassGovernanceRetention();
    public string get_TapeARN();
    public void set_TapeARN(string value);
    internal bool IsSetTapeARN();
}
public class Amazon.StorageGateway.Model.DeleteTapeArchiveResponse : AmazonWebServiceResponse {
    private string _tapeARN;
    [AWSPropertyAttribute]
public string TapeARN { get; public set; }
    public string get_TapeARN();
    public void set_TapeARN(string value);
    internal bool IsSetTapeARN();
}
public class Amazon.StorageGateway.Model.DeleteTapePoolRequest : AmazonStorageGatewayRequest {
    private string _poolARN;
    [AWSPropertyAttribute]
public string PoolARN { get; public set; }
    public string get_PoolARN();
    public void set_PoolARN(string value);
    internal bool IsSetPoolARN();
}
public class Amazon.StorageGateway.Model.DeleteTapePoolResponse : AmazonWebServiceResponse {
    private string _poolARN;
    [AWSPropertyAttribute]
public string PoolARN { get; public set; }
    public string get_PoolARN();
    public void set_PoolARN(string value);
    internal bool IsSetPoolARN();
}
public class Amazon.StorageGateway.Model.DeleteTapeRequest : AmazonStorageGatewayRequest {
    private Nullable`1<bool> _bypassGovernanceRetention;
    private string _gatewayARN;
    private string _tapeARN;
    public Nullable`1<bool> BypassGovernanceRetention { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public string TapeARN { get; public set; }
    public Nullable`1<bool> get_BypassGovernanceRetention();
    public void set_BypassGovernanceRetention(Nullable`1<bool> value);
    internal bool IsSetBypassGovernanceRetention();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public string get_TapeARN();
    public void set_TapeARN(string value);
    internal bool IsSetTapeARN();
}
public class Amazon.StorageGateway.Model.DeleteTapeResponse : AmazonWebServiceResponse {
    private string _tapeARN;
    [AWSPropertyAttribute]
public string TapeARN { get; public set; }
    public string get_TapeARN();
    public void set_TapeARN(string value);
    internal bool IsSetTapeARN();
}
public class Amazon.StorageGateway.Model.DeleteVolumeRequest : AmazonStorageGatewayRequest {
    private string _volumeARN;
    [AWSPropertyAttribute]
public string VolumeARN { get; public set; }
    public string get_VolumeARN();
    public void set_VolumeARN(string value);
    internal bool IsSetVolumeARN();
}
public class Amazon.StorageGateway.Model.DeleteVolumeResponse : AmazonWebServiceResponse {
    private string _volumeARN;
    [AWSPropertyAttribute]
public string VolumeARN { get; public set; }
    public string get_VolumeARN();
    public void set_VolumeARN(string value);
    internal bool IsSetVolumeARN();
}
public class Amazon.StorageGateway.Model.DescribeAvailabilityMonitorTestRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.DescribeAvailabilityMonitorTestResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    private Nullable`1<DateTime> _startTime;
    private AvailabilityMonitorTestStatus _status;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public AvailabilityMonitorTestStatus Status { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public AvailabilityMonitorTestStatus get_Status();
    public void set_Status(AvailabilityMonitorTestStatus value);
    internal bool IsSetStatus();
}
public class Amazon.StorageGateway.Model.DescribeBandwidthRateLimitRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.DescribeBandwidthRateLimitResponse : AmazonWebServiceResponse {
    private Nullable`1<long> _averageDownloadRateLimitInBitsPerSec;
    private Nullable`1<long> _averageUploadRateLimitInBitsPerSec;
    private string _gatewayARN;
    [AWSPropertyAttribute]
public Nullable`1<long> AverageDownloadRateLimitInBitsPerSec { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> AverageUploadRateLimitInBitsPerSec { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public Nullable`1<long> get_AverageDownloadRateLimitInBitsPerSec();
    public void set_AverageDownloadRateLimitInBitsPerSec(Nullable`1<long> value);
    internal bool IsSetAverageDownloadRateLimitInBitsPerSec();
    public Nullable`1<long> get_AverageUploadRateLimitInBitsPerSec();
    public void set_AverageUploadRateLimitInBitsPerSec(Nullable`1<long> value);
    internal bool IsSetAverageUploadRateLimitInBitsPerSec();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.DescribeBandwidthRateLimitScheduleRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.DescribeBandwidthRateLimitScheduleResponse : AmazonWebServiceResponse {
    private List`1<BandwidthRateLimitInterval> _bandwidthRateLimitIntervals;
    private string _gatewayARN;
    [AWSPropertyAttribute]
public List`1<BandwidthRateLimitInterval> BandwidthRateLimitIntervals { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public List`1<BandwidthRateLimitInterval> get_BandwidthRateLimitIntervals();
    public void set_BandwidthRateLimitIntervals(List`1<BandwidthRateLimitInterval> value);
    internal bool IsSetBandwidthRateLimitIntervals();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.DescribeCachediSCSIVolumesRequest : AmazonStorageGatewayRequest {
    private List`1<string> _volumeARNs;
    [AWSPropertyAttribute]
public List`1<string> VolumeARNs { get; public set; }
    public List`1<string> get_VolumeARNs();
    public void set_VolumeARNs(List`1<string> value);
    internal bool IsSetVolumeARNs();
}
public class Amazon.StorageGateway.Model.DescribeCachediSCSIVolumesResponse : AmazonWebServiceResponse {
    private List`1<CachediSCSIVolume> _cachediSCSIVolumes;
    public List`1<CachediSCSIVolume> CachediSCSIVolumes { get; public set; }
    public List`1<CachediSCSIVolume> get_CachediSCSIVolumes();
    public void set_CachediSCSIVolumes(List`1<CachediSCSIVolume> value);
    internal bool IsSetCachediSCSIVolumes();
}
public class Amazon.StorageGateway.Model.DescribeCacheRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.DescribeCacheResponse : AmazonWebServiceResponse {
    private Nullable`1<long> _cacheAllocatedInBytes;
    private Nullable`1<double> _cacheDirtyPercentage;
    private Nullable`1<double> _cacheHitPercentage;
    private Nullable`1<double> _cacheMissPercentage;
    private Nullable`1<double> _cacheUsedPercentage;
    private List`1<string> _diskIds;
    private string _gatewayARN;
    public Nullable`1<long> CacheAllocatedInBytes { get; public set; }
    public Nullable`1<double> CacheDirtyPercentage { get; public set; }
    public Nullable`1<double> CacheHitPercentage { get; public set; }
    public Nullable`1<double> CacheMissPercentage { get; public set; }
    public Nullable`1<double> CacheUsedPercentage { get; public set; }
    public List`1<string> DiskIds { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public Nullable`1<long> get_CacheAllocatedInBytes();
    public void set_CacheAllocatedInBytes(Nullable`1<long> value);
    internal bool IsSetCacheAllocatedInBytes();
    public Nullable`1<double> get_CacheDirtyPercentage();
    public void set_CacheDirtyPercentage(Nullable`1<double> value);
    internal bool IsSetCacheDirtyPercentage();
    public Nullable`1<double> get_CacheHitPercentage();
    public void set_CacheHitPercentage(Nullable`1<double> value);
    internal bool IsSetCacheHitPercentage();
    public Nullable`1<double> get_CacheMissPercentage();
    public void set_CacheMissPercentage(Nullable`1<double> value);
    internal bool IsSetCacheMissPercentage();
    public Nullable`1<double> get_CacheUsedPercentage();
    public void set_CacheUsedPercentage(Nullable`1<double> value);
    internal bool IsSetCacheUsedPercentage();
    public List`1<string> get_DiskIds();
    public void set_DiskIds(List`1<string> value);
    internal bool IsSetDiskIds();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.DescribeChapCredentialsRequest : AmazonStorageGatewayRequest {
    private string _targetARN;
    [AWSPropertyAttribute]
public string TargetARN { get; public set; }
    public string get_TargetARN();
    public void set_TargetARN(string value);
    internal bool IsSetTargetARN();
}
public class Amazon.StorageGateway.Model.DescribeChapCredentialsResponse : AmazonWebServiceResponse {
    private List`1<ChapInfo> _chapCredentials;
    public List`1<ChapInfo> ChapCredentials { get; public set; }
    public List`1<ChapInfo> get_ChapCredentials();
    public void set_ChapCredentials(List`1<ChapInfo> value);
    internal bool IsSetChapCredentials();
}
public class Amazon.StorageGateway.Model.DescribeFileSystemAssociationsRequest : AmazonStorageGatewayRequest {
    private List`1<string> _fileSystemAssociationARNList;
    [AWSPropertyAttribute]
public List`1<string> FileSystemAssociationARNList { get; public set; }
    public List`1<string> get_FileSystemAssociationARNList();
    public void set_FileSystemAssociationARNList(List`1<string> value);
    internal bool IsSetFileSystemAssociationARNList();
}
public class Amazon.StorageGateway.Model.DescribeFileSystemAssociationsResponse : AmazonWebServiceResponse {
    private List`1<FileSystemAssociationInfo> _fileSystemAssociationInfoList;
    public List`1<FileSystemAssociationInfo> FileSystemAssociationInfoList { get; public set; }
    public List`1<FileSystemAssociationInfo> get_FileSystemAssociationInfoList();
    public void set_FileSystemAssociationInfoList(List`1<FileSystemAssociationInfo> value);
    internal bool IsSetFileSystemAssociationInfoList();
}
public class Amazon.StorageGateway.Model.DescribeGatewayInformationRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.DescribeGatewayInformationResponse : AmazonWebServiceResponse {
    private string _cloudWatchLogGroupARN;
    private string _deprecationDate;
    private string _ec2InstanceId;
    private string _ec2InstanceRegion;
    private string _endpointType;
    private string _gatewayARN;
    private GatewayCapacity _gatewayCapacity;
    private string _gatewayId;
    private string _gatewayName;
    private List`1<NetworkInterface> _gatewayNetworkInterfaces;
    private string _gatewayState;
    private string _gatewayTimezone;
    private string _gatewayType;
    private HostEnvironment _hostEnvironment;
    private string _hostEnvironmentId;
    private string _lastSoftwareUpdate;
    private string _nextUpdateAvailabilityDate;
    private string _softwareUpdatesEndDate;
    private string _softwareVersion;
    private List`1<string> _supportedGatewayCapacities;
    private List`1<Tag> _tags;
    private string _vpcEndpoint;
    [AWSPropertyAttribute]
public string CloudWatchLogGroupARN { get; public set; }
    [AWSPropertyAttribute]
public string DeprecationDate { get; public set; }
    public string Ec2InstanceId { get; public set; }
    public string Ec2InstanceRegion { get; public set; }
    [AWSPropertyAttribute]
public string EndpointType { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public GatewayCapacity GatewayCapacity { get; public set; }
    [AWSPropertyAttribute]
public string GatewayId { get; public set; }
    public string GatewayName { get; public set; }
    public List`1<NetworkInterface> GatewayNetworkInterfaces { get; public set; }
    [AWSPropertyAttribute]
public string GatewayState { get; public set; }
    [AWSPropertyAttribute]
public string GatewayTimezone { get; public set; }
    [AWSPropertyAttribute]
public string GatewayType { get; public set; }
    public HostEnvironment HostEnvironment { get; public set; }
    [AWSPropertyAttribute]
public string HostEnvironmentId { get; public set; }
    [AWSPropertyAttribute]
public string LastSoftwareUpdate { get; public set; }
    [AWSPropertyAttribute]
public string NextUpdateAvailabilityDate { get; public set; }
    [AWSPropertyAttribute]
public string SoftwareUpdatesEndDate { get; public set; }
    public string SoftwareVersion { get; public set; }
    public List`1<string> SupportedGatewayCapacities { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VPCEndpoint { get; public set; }
    public string get_CloudWatchLogGroupARN();
    public void set_CloudWatchLogGroupARN(string value);
    internal bool IsSetCloudWatchLogGroupARN();
    public string get_DeprecationDate();
    public void set_DeprecationDate(string value);
    internal bool IsSetDeprecationDate();
    public string get_Ec2InstanceId();
    public void set_Ec2InstanceId(string value);
    internal bool IsSetEc2InstanceId();
    public string get_Ec2InstanceRegion();
    public void set_Ec2InstanceRegion(string value);
    internal bool IsSetEc2InstanceRegion();
    public string get_EndpointType();
    public void set_EndpointType(string value);
    internal bool IsSetEndpointType();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public GatewayCapacity get_GatewayCapacity();
    public void set_GatewayCapacity(GatewayCapacity value);
    internal bool IsSetGatewayCapacity();
    public string get_GatewayId();
    public void set_GatewayId(string value);
    internal bool IsSetGatewayId();
    public string get_GatewayName();
    public void set_GatewayName(string value);
    internal bool IsSetGatewayName();
    public List`1<NetworkInterface> get_GatewayNetworkInterfaces();
    public void set_GatewayNetworkInterfaces(List`1<NetworkInterface> value);
    internal bool IsSetGatewayNetworkInterfaces();
    public string get_GatewayState();
    public void set_GatewayState(string value);
    internal bool IsSetGatewayState();
    public string get_GatewayTimezone();
    public void set_GatewayTimezone(string value);
    internal bool IsSetGatewayTimezone();
    public string get_GatewayType();
    public void set_GatewayType(string value);
    internal bool IsSetGatewayType();
    public HostEnvironment get_HostEnvironment();
    public void set_HostEnvironment(HostEnvironment value);
    internal bool IsSetHostEnvironment();
    public string get_HostEnvironmentId();
    public void set_HostEnvironmentId(string value);
    internal bool IsSetHostEnvironmentId();
    public string get_LastSoftwareUpdate();
    public void set_LastSoftwareUpdate(string value);
    internal bool IsSetLastSoftwareUpdate();
    public string get_NextUpdateAvailabilityDate();
    public void set_NextUpdateAvailabilityDate(string value);
    internal bool IsSetNextUpdateAvailabilityDate();
    public string get_SoftwareUpdatesEndDate();
    public void set_SoftwareUpdatesEndDate(string value);
    internal bool IsSetSoftwareUpdatesEndDate();
    public string get_SoftwareVersion();
    public void set_SoftwareVersion(string value);
    internal bool IsSetSoftwareVersion();
    public List`1<string> get_SupportedGatewayCapacities();
    public void set_SupportedGatewayCapacities(List`1<string> value);
    internal bool IsSetSupportedGatewayCapacities();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VPCEndpoint();
    public void set_VPCEndpoint(string value);
    internal bool IsSetVPCEndpoint();
}
public class Amazon.StorageGateway.Model.DescribeMaintenanceStartTimeRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.DescribeMaintenanceStartTimeResponse : AmazonWebServiceResponse {
    private Nullable`1<int> _dayOfMonth;
    private Nullable`1<int> _dayOfWeek;
    private string _gatewayARN;
    private Nullable`1<int> _hourOfDay;
    private Nullable`1<int> _minuteOfHour;
    private SoftwareUpdatePreferences _softwareUpdatePreferences;
    private string _timezone;
    [AWSPropertyAttribute]
public Nullable`1<int> DayOfMonth { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> DayOfWeek { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> HourOfDay { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MinuteOfHour { get; public set; }
    public SoftwareUpdatePreferences SoftwareUpdatePreferences { get; public set; }
    [AWSPropertyAttribute]
public string Timezone { get; public set; }
    public Nullable`1<int> get_DayOfMonth();
    public void set_DayOfMonth(Nullable`1<int> value);
    internal bool IsSetDayOfMonth();
    public Nullable`1<int> get_DayOfWeek();
    public void set_DayOfWeek(Nullable`1<int> value);
    internal bool IsSetDayOfWeek();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public Nullable`1<int> get_HourOfDay();
    public void set_HourOfDay(Nullable`1<int> value);
    internal bool IsSetHourOfDay();
    public Nullable`1<int> get_MinuteOfHour();
    public void set_MinuteOfHour(Nullable`1<int> value);
    internal bool IsSetMinuteOfHour();
    public SoftwareUpdatePreferences get_SoftwareUpdatePreferences();
    public void set_SoftwareUpdatePreferences(SoftwareUpdatePreferences value);
    internal bool IsSetSoftwareUpdatePreferences();
    public string get_Timezone();
    public void set_Timezone(string value);
    internal bool IsSetTimezone();
}
public class Amazon.StorageGateway.Model.DescribeNFSFileSharesRequest : AmazonStorageGatewayRequest {
    private List`1<string> _fileShareARNList;
    [AWSPropertyAttribute]
public List`1<string> FileShareARNList { get; public set; }
    public List`1<string> get_FileShareARNList();
    public void set_FileShareARNList(List`1<string> value);
    internal bool IsSetFileShareARNList();
}
public class Amazon.StorageGateway.Model.DescribeNFSFileSharesResponse : AmazonWebServiceResponse {
    private List`1<NFSFileShareInfo> _nfsFileShareInfoList;
    public List`1<NFSFileShareInfo> NFSFileShareInfoList { get; public set; }
    public List`1<NFSFileShareInfo> get_NFSFileShareInfoList();
    public void set_NFSFileShareInfoList(List`1<NFSFileShareInfo> value);
    internal bool IsSetNFSFileShareInfoList();
}
public class Amazon.StorageGateway.Model.DescribeSMBFileSharesRequest : AmazonStorageGatewayRequest {
    private List`1<string> _fileShareARNList;
    [AWSPropertyAttribute]
public List`1<string> FileShareARNList { get; public set; }
    public List`1<string> get_FileShareARNList();
    public void set_FileShareARNList(List`1<string> value);
    internal bool IsSetFileShareARNList();
}
public class Amazon.StorageGateway.Model.DescribeSMBFileSharesResponse : AmazonWebServiceResponse {
    private List`1<SMBFileShareInfo> _smbFileShareInfoList;
    public List`1<SMBFileShareInfo> SMBFileShareInfoList { get; public set; }
    public List`1<SMBFileShareInfo> get_SMBFileShareInfoList();
    public void set_SMBFileShareInfoList(List`1<SMBFileShareInfo> value);
    internal bool IsSetSMBFileShareInfoList();
}
public class Amazon.StorageGateway.Model.DescribeSMBSettingsRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.DescribeSMBSettingsResponse : AmazonWebServiceResponse {
    private ActiveDirectoryStatus _activeDirectoryStatus;
    private string _domainName;
    private Nullable`1<bool> _fileSharesVisible;
    private string _gatewayARN;
    private Nullable`1<bool> _smbGuestPasswordSet;
    private SMBLocalGroups _smbLocalGroups;
    private SMBSecurityStrategy _smbSecurityStrategy;
    public ActiveDirectoryStatus ActiveDirectoryStatus { get; public set; }
    [AWSPropertyAttribute]
public string DomainName { get; public set; }
    public Nullable`1<bool> FileSharesVisible { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public Nullable`1<bool> SMBGuestPasswordSet { get; public set; }
    public SMBLocalGroups SMBLocalGroups { get; public set; }
    public SMBSecurityStrategy SMBSecurityStrategy { get; public set; }
    public ActiveDirectoryStatus get_ActiveDirectoryStatus();
    public void set_ActiveDirectoryStatus(ActiveDirectoryStatus value);
    internal bool IsSetActiveDirectoryStatus();
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
    public Nullable`1<bool> get_FileSharesVisible();
    public void set_FileSharesVisible(Nullable`1<bool> value);
    internal bool IsSetFileSharesVisible();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public Nullable`1<bool> get_SMBGuestPasswordSet();
    public void set_SMBGuestPasswordSet(Nullable`1<bool> value);
    internal bool IsSetSMBGuestPasswordSet();
    public SMBLocalGroups get_SMBLocalGroups();
    public void set_SMBLocalGroups(SMBLocalGroups value);
    internal bool IsSetSMBLocalGroups();
    public SMBSecurityStrategy get_SMBSecurityStrategy();
    public void set_SMBSecurityStrategy(SMBSecurityStrategy value);
    internal bool IsSetSMBSecurityStrategy();
}
public class Amazon.StorageGateway.Model.DescribeSnapshotScheduleRequest : AmazonStorageGatewayRequest {
    private string _volumeARN;
    [AWSPropertyAttribute]
public string VolumeARN { get; public set; }
    public string get_VolumeARN();
    public void set_VolumeARN(string value);
    internal bool IsSetVolumeARN();
}
public class Amazon.StorageGateway.Model.DescribeSnapshotScheduleResponse : AmazonWebServiceResponse {
    private string _description;
    private Nullable`1<int> _recurrenceInHours;
    private Nullable`1<int> _startAt;
    private List`1<Tag> _tags;
    private string _timezone;
    private string _volumeARN;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RecurrenceInHours { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> StartAt { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string Timezone { get; public set; }
    [AWSPropertyAttribute]
public string VolumeARN { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<int> get_RecurrenceInHours();
    public void set_RecurrenceInHours(Nullable`1<int> value);
    internal bool IsSetRecurrenceInHours();
    public Nullable`1<int> get_StartAt();
    public void set_StartAt(Nullable`1<int> value);
    internal bool IsSetStartAt();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_Timezone();
    public void set_Timezone(string value);
    internal bool IsSetTimezone();
    public string get_VolumeARN();
    public void set_VolumeARN(string value);
    internal bool IsSetVolumeARN();
}
public class Amazon.StorageGateway.Model.DescribeStorediSCSIVolumesRequest : AmazonStorageGatewayRequest {
    private List`1<string> _volumeARNs;
    [AWSPropertyAttribute]
public List`1<string> VolumeARNs { get; public set; }
    public List`1<string> get_VolumeARNs();
    public void set_VolumeARNs(List`1<string> value);
    internal bool IsSetVolumeARNs();
}
public class Amazon.StorageGateway.Model.DescribeStorediSCSIVolumesResponse : AmazonWebServiceResponse {
    private List`1<StorediSCSIVolume> _storediSCSIVolumes;
    public List`1<StorediSCSIVolume> StorediSCSIVolumes { get; public set; }
    public List`1<StorediSCSIVolume> get_StorediSCSIVolumes();
    public void set_StorediSCSIVolumes(List`1<StorediSCSIVolume> value);
    internal bool IsSetStorediSCSIVolumes();
}
internal class Amazon.StorageGateway.Model.DescribeTapeArchivesPaginator : object {
    private IAmazonStorageGateway _client;
    private DescribeTapeArchivesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeTapeArchivesResponse> Responses { get; }
    public IPaginatedEnumerable`1<TapeArchive> TapeArchives { get; }
    internal DescribeTapeArchivesPaginator(IAmazonStorageGateway client, DescribeTapeArchivesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeTapeArchivesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TapeArchive> get_TapeArchives();
    [AsyncIteratorStateMachineAttribute("Amazon.StorageGateway.Model.DescribeTapeArchivesPaginator/<Amazon-Runtime-IPaginator<Amazon-StorageGateway-Model-DescribeTapeArchivesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeTapeArchivesResponse> Amazon.Runtime.IPaginator<Amazon.StorageGateway.Model.DescribeTapeArchivesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.StorageGateway.Model.DescribeTapeArchivesRequest : AmazonStorageGatewayRequest {
    private Nullable`1<int> _limit;
    private string _marker;
    private List`1<string> _tapeARNs;
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    public List`1<string> TapeARNs { get; public set; }
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<string> get_TapeARNs();
    public void set_TapeARNs(List`1<string> value);
    internal bool IsSetTapeARNs();
}
public class Amazon.StorageGateway.Model.DescribeTapeArchivesResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<TapeArchive> _tapeArchives;
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    public List`1<TapeArchive> TapeArchives { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<TapeArchive> get_TapeArchives();
    public void set_TapeArchives(List`1<TapeArchive> value);
    internal bool IsSetTapeArchives();
}
internal class Amazon.StorageGateway.Model.DescribeTapeRecoveryPointsPaginator : object {
    private IAmazonStorageGateway _client;
    private DescribeTapeRecoveryPointsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeTapeRecoveryPointsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TapeRecoveryPointInfo> TapeRecoveryPointInfos { get; }
    internal DescribeTapeRecoveryPointsPaginator(IAmazonStorageGateway client, DescribeTapeRecoveryPointsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeTapeRecoveryPointsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TapeRecoveryPointInfo> get_TapeRecoveryPointInfos();
    [AsyncIteratorStateMachineAttribute("Amazon.StorageGateway.Model.DescribeTapeRecoveryPointsPaginator/<Amazon-Runtime-IPaginator<Amazon-StorageGateway-Model-DescribeTapeRecoveryPointsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeTapeRecoveryPointsResponse> Amazon.Runtime.IPaginator<Amazon.StorageGateway.Model.DescribeTapeRecoveryPointsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.StorageGateway.Model.DescribeTapeRecoveryPointsRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    private Nullable`1<int> _limit;
    private string _marker;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.StorageGateway.Model.DescribeTapeRecoveryPointsResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    private string _marker;
    private List`1<TapeRecoveryPointInfo> _tapeRecoveryPointInfos;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    public List`1<TapeRecoveryPointInfo> TapeRecoveryPointInfos { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<TapeRecoveryPointInfo> get_TapeRecoveryPointInfos();
    public void set_TapeRecoveryPointInfos(List`1<TapeRecoveryPointInfo> value);
    internal bool IsSetTapeRecoveryPointInfos();
}
internal class Amazon.StorageGateway.Model.DescribeTapesPaginator : object {
    private IAmazonStorageGateway _client;
    private DescribeTapesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeTapesResponse> Responses { get; }
    public IPaginatedEnumerable`1<Tape> Tapes { get; }
    internal DescribeTapesPaginator(IAmazonStorageGateway client, DescribeTapesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeTapesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Tape> get_Tapes();
    [AsyncIteratorStateMachineAttribute("Amazon.StorageGateway.Model.DescribeTapesPaginator/<Amazon-Runtime-IPaginator<Amazon-StorageGateway-Model-DescribeTapesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeTapesResponse> Amazon.Runtime.IPaginator<Amazon.StorageGateway.Model.DescribeTapesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.StorageGateway.Model.DescribeTapesRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    private Nullable`1<int> _limit;
    private string _marker;
    private List`1<string> _tapeARNs;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    public List`1<string> TapeARNs { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<string> get_TapeARNs();
    public void set_TapeARNs(List`1<string> value);
    internal bool IsSetTapeARNs();
}
public class Amazon.StorageGateway.Model.DescribeTapesResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<Tape> _tapes;
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    public List`1<Tape> Tapes { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<Tape> get_Tapes();
    public void set_Tapes(List`1<Tape> value);
    internal bool IsSetTapes();
}
public class Amazon.StorageGateway.Model.DescribeUploadBufferRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.DescribeUploadBufferResponse : AmazonWebServiceResponse {
    private List`1<string> _diskIds;
    private string _gatewayARN;
    private Nullable`1<long> _uploadBufferAllocatedInBytes;
    private Nullable`1<long> _uploadBufferUsedInBytes;
    public List`1<string> DiskIds { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public Nullable`1<long> UploadBufferAllocatedInBytes { get; public set; }
    public Nullable`1<long> UploadBufferUsedInBytes { get; public set; }
    public List`1<string> get_DiskIds();
    public void set_DiskIds(List`1<string> value);
    internal bool IsSetDiskIds();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public Nullable`1<long> get_UploadBufferAllocatedInBytes();
    public void set_UploadBufferAllocatedInBytes(Nullable`1<long> value);
    internal bool IsSetUploadBufferAllocatedInBytes();
    public Nullable`1<long> get_UploadBufferUsedInBytes();
    public void set_UploadBufferUsedInBytes(Nullable`1<long> value);
    internal bool IsSetUploadBufferUsedInBytes();
}
internal class Amazon.StorageGateway.Model.DescribeVTLDevicesPaginator : object {
    private IAmazonStorageGateway _client;
    private DescribeVTLDevicesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeVTLDevicesResponse> Responses { get; }
    public IPaginatedEnumerable`1<VTLDevice> VTLDevices { get; }
    internal DescribeVTLDevicesPaginator(IAmazonStorageGateway client, DescribeVTLDevicesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeVTLDevicesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<VTLDevice> get_VTLDevices();
    [AsyncIteratorStateMachineAttribute("Amazon.StorageGateway.Model.DescribeVTLDevicesPaginator/<Amazon-Runtime-IPaginator<Amazon-StorageGateway-Model-DescribeVTLDevicesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeVTLDevicesResponse> Amazon.Runtime.IPaginator<Amazon.StorageGateway.Model.DescribeVTLDevicesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.StorageGateway.Model.DescribeVTLDevicesRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    private Nullable`1<int> _limit;
    private string _marker;
    private List`1<string> _vtlDeviceARNs;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    public List`1<string> VTLDeviceARNs { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<string> get_VTLDeviceARNs();
    public void set_VTLDeviceARNs(List`1<string> value);
    internal bool IsSetVTLDeviceARNs();
}
public class Amazon.StorageGateway.Model.DescribeVTLDevicesResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    private string _marker;
    private List`1<VTLDevice> _vtlDevices;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    public List`1<VTLDevice> VTLDevices { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<VTLDevice> get_VTLDevices();
    public void set_VTLDevices(List`1<VTLDevice> value);
    internal bool IsSetVTLDevices();
}
public class Amazon.StorageGateway.Model.DescribeWorkingStorageRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.DescribeWorkingStorageResponse : AmazonWebServiceResponse {
    private List`1<string> _diskIds;
    private string _gatewayARN;
    private Nullable`1<long> _workingStorageAllocatedInBytes;
    private Nullable`1<long> _workingStorageUsedInBytes;
    public List`1<string> DiskIds { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public Nullable`1<long> WorkingStorageAllocatedInBytes { get; public set; }
    public Nullable`1<long> WorkingStorageUsedInBytes { get; public set; }
    public List`1<string> get_DiskIds();
    public void set_DiskIds(List`1<string> value);
    internal bool IsSetDiskIds();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public Nullable`1<long> get_WorkingStorageAllocatedInBytes();
    public void set_WorkingStorageAllocatedInBytes(Nullable`1<long> value);
    internal bool IsSetWorkingStorageAllocatedInBytes();
    public Nullable`1<long> get_WorkingStorageUsedInBytes();
    public void set_WorkingStorageUsedInBytes(Nullable`1<long> value);
    internal bool IsSetWorkingStorageUsedInBytes();
}
public class Amazon.StorageGateway.Model.DetachVolumeRequest : AmazonStorageGatewayRequest {
    private Nullable`1<bool> _forceDetach;
    private string _volumeARN;
    public Nullable`1<bool> ForceDetach { get; public set; }
    [AWSPropertyAttribute]
public string VolumeARN { get; public set; }
    public Nullable`1<bool> get_ForceDetach();
    public void set_ForceDetach(Nullable`1<bool> value);
    internal bool IsSetForceDetach();
    public string get_VolumeARN();
    public void set_VolumeARN(string value);
    internal bool IsSetVolumeARN();
}
public class Amazon.StorageGateway.Model.DetachVolumeResponse : AmazonWebServiceResponse {
    private string _volumeARN;
    [AWSPropertyAttribute]
public string VolumeARN { get; public set; }
    public string get_VolumeARN();
    public void set_VolumeARN(string value);
    internal bool IsSetVolumeARN();
}
public class Amazon.StorageGateway.Model.DeviceiSCSIAttributes : object {
    private Nullable`1<bool> _chapEnabled;
    private string _networkInterfaceId;
    private Nullable`1<int> _networkInterfacePort;
    private string _targetARN;
    public Nullable`1<bool> ChapEnabled { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public Nullable`1<int> NetworkInterfacePort { get; public set; }
    [AWSPropertyAttribute]
public string TargetARN { get; public set; }
    public Nullable`1<bool> get_ChapEnabled();
    public void set_ChapEnabled(Nullable`1<bool> value);
    internal bool IsSetChapEnabled();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public Nullable`1<int> get_NetworkInterfacePort();
    public void set_NetworkInterfacePort(Nullable`1<int> value);
    internal bool IsSetNetworkInterfacePort();
    public string get_TargetARN();
    public void set_TargetARN(string value);
    internal bool IsSetTargetARN();
}
public class Amazon.StorageGateway.Model.DisableGatewayRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.DisableGatewayResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.DisassociateFileSystemRequest : AmazonStorageGatewayRequest {
    private string _fileSystemAssociationARN;
    private Nullable`1<bool> _forceDelete;
    [AWSPropertyAttribute]
public string FileSystemAssociationARN { get; public set; }
    public Nullable`1<bool> ForceDelete { get; public set; }
    public string get_FileSystemAssociationARN();
    public void set_FileSystemAssociationARN(string value);
    internal bool IsSetFileSystemAssociationARN();
    public Nullable`1<bool> get_ForceDelete();
    public void set_ForceDelete(Nullable`1<bool> value);
    internal bool IsSetForceDelete();
}
public class Amazon.StorageGateway.Model.DisassociateFileSystemResponse : AmazonWebServiceResponse {
    private string _fileSystemAssociationARN;
    [AWSPropertyAttribute]
public string FileSystemAssociationARN { get; public set; }
    public string get_FileSystemAssociationARN();
    public void set_FileSystemAssociationARN(string value);
    internal bool IsSetFileSystemAssociationARN();
}
public class Amazon.StorageGateway.Model.Disk : object {
    private string _diskAllocationResource;
    private string _diskAllocationType;
    private List`1<string> _diskAttributeList;
    private string _diskId;
    private string _diskNode;
    private string _diskPath;
    private Nullable`1<long> _diskSizeInBytes;
    private string _diskStatus;
    public string DiskAllocationResource { get; public set; }
    [AWSPropertyAttribute]
public string DiskAllocationType { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> DiskAttributeList { get; public set; }
    [AWSPropertyAttribute]
public string DiskId { get; public set; }
    public string DiskNode { get; public set; }
    public string DiskPath { get; public set; }
    public Nullable`1<long> DiskSizeInBytes { get; public set; }
    public string DiskStatus { get; public set; }
    public string get_DiskAllocationResource();
    public void set_DiskAllocationResource(string value);
    internal bool IsSetDiskAllocationResource();
    public string get_DiskAllocationType();
    public void set_DiskAllocationType(string value);
    internal bool IsSetDiskAllocationType();
    public List`1<string> get_DiskAttributeList();
    public void set_DiskAttributeList(List`1<string> value);
    internal bool IsSetDiskAttributeList();
    public string get_DiskId();
    public void set_DiskId(string value);
    internal bool IsSetDiskId();
    public string get_DiskNode();
    public void set_DiskNode(string value);
    internal bool IsSetDiskNode();
    public string get_DiskPath();
    public void set_DiskPath(string value);
    internal bool IsSetDiskPath();
    public Nullable`1<long> get_DiskSizeInBytes();
    public void set_DiskSizeInBytes(Nullable`1<long> value);
    internal bool IsSetDiskSizeInBytes();
    public string get_DiskStatus();
    public void set_DiskStatus(string value);
    internal bool IsSetDiskStatus();
}
public class Amazon.StorageGateway.Model.EndpointNetworkConfiguration : object {
    private List`1<string> _ipAddresses;
    [AWSPropertyAttribute]
public List`1<string> IpAddresses { get; public set; }
    public List`1<string> get_IpAddresses();
    public void set_IpAddresses(List`1<string> value);
    internal bool IsSetIpAddresses();
}
public class Amazon.StorageGateway.Model.FileShareInfo : object {
    private string _fileShareARN;
    private string _fileShareId;
    private string _fileShareStatus;
    private FileShareType _fileShareType;
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string FileShareARN { get; public set; }
    [AWSPropertyAttribute]
public string FileShareId { get; public set; }
    [AWSPropertyAttribute]
public string FileShareStatus { get; public set; }
    public FileShareType FileShareType { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_FileShareARN();
    public void set_FileShareARN(string value);
    internal bool IsSetFileShareARN();
    public string get_FileShareId();
    public void set_FileShareId(string value);
    internal bool IsSetFileShareId();
    public string get_FileShareStatus();
    public void set_FileShareStatus(string value);
    internal bool IsSetFileShareStatus();
    public FileShareType get_FileShareType();
    public void set_FileShareType(FileShareType value);
    internal bool IsSetFileShareType();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.FileSystemAssociationInfo : object {
    private string _auditDestinationARN;
    private CacheAttributes _cacheAttributes;
    private EndpointNetworkConfiguration _endpointNetworkConfiguration;
    private string _fileSystemAssociationARN;
    private string _fileSystemAssociationStatus;
    private List`1<FileSystemAssociationStatusDetail> _fileSystemAssociationStatusDetails;
    private string _gatewayARN;
    private string _locationARN;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string AuditDestinationARN { get; public set; }
    public CacheAttributes CacheAttributes { get; public set; }
    public EndpointNetworkConfiguration EndpointNetworkConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string FileSystemAssociationARN { get; public set; }
    [AWSPropertyAttribute]
public string FileSystemAssociationStatus { get; public set; }
    public List`1<FileSystemAssociationStatusDetail> FileSystemAssociationStatusDetails { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public string LocationARN { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_AuditDestinationARN();
    public void set_AuditDestinationARN(string value);
    internal bool IsSetAuditDestinationARN();
    public CacheAttributes get_CacheAttributes();
    public void set_CacheAttributes(CacheAttributes value);
    internal bool IsSetCacheAttributes();
    public EndpointNetworkConfiguration get_EndpointNetworkConfiguration();
    public void set_EndpointNetworkConfiguration(EndpointNetworkConfiguration value);
    internal bool IsSetEndpointNetworkConfiguration();
    public string get_FileSystemAssociationARN();
    public void set_FileSystemAssociationARN(string value);
    internal bool IsSetFileSystemAssociationARN();
    public string get_FileSystemAssociationStatus();
    public void set_FileSystemAssociationStatus(string value);
    internal bool IsSetFileSystemAssociationStatus();
    public List`1<FileSystemAssociationStatusDetail> get_FileSystemAssociationStatusDetails();
    public void set_FileSystemAssociationStatusDetails(List`1<FileSystemAssociationStatusDetail> value);
    internal bool IsSetFileSystemAssociationStatusDetails();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public string get_LocationARN();
    public void set_LocationARN(string value);
    internal bool IsSetLocationARN();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.StorageGateway.Model.FileSystemAssociationStatusDetail : object {
    private string _errorCode;
    public string ErrorCode { get; public set; }
    public string get_ErrorCode();
    public void set_ErrorCode(string value);
    internal bool IsSetErrorCode();
}
public class Amazon.StorageGateway.Model.FileSystemAssociationSummary : object {
    private string _fileSystemAssociationARN;
    private string _fileSystemAssociationId;
    private string _fileSystemAssociationStatus;
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string FileSystemAssociationARN { get; public set; }
    [AWSPropertyAttribute]
public string FileSystemAssociationId { get; public set; }
    [AWSPropertyAttribute]
public string FileSystemAssociationStatus { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_FileSystemAssociationARN();
    public void set_FileSystemAssociationARN(string value);
    internal bool IsSetFileSystemAssociationARN();
    public string get_FileSystemAssociationId();
    public void set_FileSystemAssociationId(string value);
    internal bool IsSetFileSystemAssociationId();
    public string get_FileSystemAssociationStatus();
    public void set_FileSystemAssociationStatus(string value);
    internal bool IsSetFileSystemAssociationStatus();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.GatewayInfo : object {
    private string _deprecationDate;
    private string _ec2InstanceId;
    private string _ec2InstanceRegion;
    private string _gatewayARN;
    private string _gatewayId;
    private string _gatewayName;
    private string _gatewayOperationalState;
    private string _gatewayType;
    private HostEnvironment _hostEnvironment;
    private string _hostEnvironmentId;
    private string _softwareVersion;
    [AWSPropertyAttribute]
public string DeprecationDate { get; public set; }
    public string Ec2InstanceId { get; public set; }
    public string Ec2InstanceRegion { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public string GatewayId { get; public set; }
    public string GatewayName { get; public set; }
    [AWSPropertyAttribute]
public string GatewayOperationalState { get; public set; }
    [AWSPropertyAttribute]
public string GatewayType { get; public set; }
    public HostEnvironment HostEnvironment { get; public set; }
    [AWSPropertyAttribute]
public string HostEnvironmentId { get; public set; }
    public string SoftwareVersion { get; public set; }
    public string get_DeprecationDate();
    public void set_DeprecationDate(string value);
    internal bool IsSetDeprecationDate();
    public string get_Ec2InstanceId();
    public void set_Ec2InstanceId(string value);
    internal bool IsSetEc2InstanceId();
    public string get_Ec2InstanceRegion();
    public void set_Ec2InstanceRegion(string value);
    internal bool IsSetEc2InstanceRegion();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public string get_GatewayId();
    public void set_GatewayId(string value);
    internal bool IsSetGatewayId();
    public string get_GatewayName();
    public void set_GatewayName(string value);
    internal bool IsSetGatewayName();
    public string get_GatewayOperationalState();
    public void set_GatewayOperationalState(string value);
    internal bool IsSetGatewayOperationalState();
    public string get_GatewayType();
    public void set_GatewayType(string value);
    internal bool IsSetGatewayType();
    public HostEnvironment get_HostEnvironment();
    public void set_HostEnvironment(HostEnvironment value);
    internal bool IsSetHostEnvironment();
    public string get_HostEnvironmentId();
    public void set_HostEnvironmentId(string value);
    internal bool IsSetHostEnvironmentId();
    public string get_SoftwareVersion();
    public void set_SoftwareVersion(string value);
    internal bool IsSetSoftwareVersion();
}
public interface Amazon.StorageGateway.Model.IDescribeTapeArchivesPaginator {
    public IPaginatedEnumerable`1<DescribeTapeArchivesResponse> Responses { get; }
    public IPaginatedEnumerable`1<TapeArchive> TapeArchives { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeTapeArchivesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TapeArchive> get_TapeArchives();
}
public interface Amazon.StorageGateway.Model.IDescribeTapeRecoveryPointsPaginator {
    public IPaginatedEnumerable`1<DescribeTapeRecoveryPointsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TapeRecoveryPointInfo> TapeRecoveryPointInfos { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeTapeRecoveryPointsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TapeRecoveryPointInfo> get_TapeRecoveryPointInfos();
}
public interface Amazon.StorageGateway.Model.IDescribeTapesPaginator {
    public IPaginatedEnumerable`1<DescribeTapesResponse> Responses { get; }
    public IPaginatedEnumerable`1<Tape> Tapes { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeTapesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Tape> get_Tapes();
}
public interface Amazon.StorageGateway.Model.IDescribeVTLDevicesPaginator {
    public IPaginatedEnumerable`1<DescribeVTLDevicesResponse> Responses { get; }
    public IPaginatedEnumerable`1<VTLDevice> VTLDevices { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeVTLDevicesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<VTLDevice> get_VTLDevices();
}
public interface Amazon.StorageGateway.Model.IListFileSharesPaginator {
    public IPaginatedEnumerable`1<ListFileSharesResponse> Responses { get; }
    public IPaginatedEnumerable`1<FileShareInfo> FileShareInfoList { get; }
    public abstract virtual IPaginatedEnumerable`1<ListFileSharesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<FileShareInfo> get_FileShareInfoList();
}
public interface Amazon.StorageGateway.Model.IListFileSystemAssociationsPaginator {
    public IPaginatedEnumerable`1<ListFileSystemAssociationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<FileSystemAssociationSummary> FileSystemAssociationSummaryList { get; }
    public abstract virtual IPaginatedEnumerable`1<ListFileSystemAssociationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<FileSystemAssociationSummary> get_FileSystemAssociationSummaryList();
}
public interface Amazon.StorageGateway.Model.IListGatewaysPaginator {
    public IPaginatedEnumerable`1<ListGatewaysResponse> Responses { get; }
    public IPaginatedEnumerable`1<GatewayInfo> Gateways { get; }
    public abstract virtual IPaginatedEnumerable`1<ListGatewaysResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<GatewayInfo> get_Gateways();
}
public interface Amazon.StorageGateway.Model.IListTagsForResourcePaginator {
    public IPaginatedEnumerable`1<ListTagsForResourceResponse> Responses { get; }
    public IPaginatedEnumerable`1<Tag> Tags { get; }
    public abstract virtual IPaginatedEnumerable`1<ListTagsForResourceResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Tag> get_Tags();
}
public interface Amazon.StorageGateway.Model.IListTapePoolsPaginator {
    public IPaginatedEnumerable`1<ListTapePoolsResponse> Responses { get; }
    public IPaginatedEnumerable`1<PoolInfo> PoolInfos { get; }
    public abstract virtual IPaginatedEnumerable`1<ListTapePoolsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<PoolInfo> get_PoolInfos();
}
public interface Amazon.StorageGateway.Model.IListTapesPaginator {
    public IPaginatedEnumerable`1<ListTapesResponse> Responses { get; }
    public IPaginatedEnumerable`1<TapeInfo> TapeInfos { get; }
    public abstract virtual IPaginatedEnumerable`1<ListTapesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TapeInfo> get_TapeInfos();
}
public interface Amazon.StorageGateway.Model.IListVolumesPaginator {
    public IPaginatedEnumerable`1<ListVolumesResponse> Responses { get; }
    public IPaginatedEnumerable`1<VolumeInfo> VolumeInfos { get; }
    public abstract virtual IPaginatedEnumerable`1<ListVolumesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<VolumeInfo> get_VolumeInfos();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ActivateGatewayRequestMarshaller : object {
    private static ActivateGatewayRequestMarshaller _instance;
    public static ActivateGatewayRequestMarshaller Instance { get; }
    private static ActivateGatewayRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ActivateGatewayRequest publicRequest);
    internal static ActivateGatewayRequestMarshaller GetInstance();
    public static ActivateGatewayRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ActivateGatewayResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ActivateGatewayResponseUnmarshaller _instance;
    public static ActivateGatewayResponseUnmarshaller Instance { get; }
    private static ActivateGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ActivateGatewayResponseUnmarshaller GetInstance();
    public static ActivateGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.AddCacheRequestMarshaller : object {
    private static AddCacheRequestMarshaller _instance;
    public static AddCacheRequestMarshaller Instance { get; }
    private static AddCacheRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddCacheRequest publicRequest);
    internal static AddCacheRequestMarshaller GetInstance();
    public static AddCacheRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.AddCacheResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AddCacheResponseUnmarshaller _instance;
    public static AddCacheResponseUnmarshaller Instance { get; }
    private static AddCacheResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddCacheResponseUnmarshaller GetInstance();
    public static AddCacheResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.AddTagsToResourceRequestMarshaller : object {
    private static AddTagsToResourceRequestMarshaller _instance;
    public static AddTagsToResourceRequestMarshaller Instance { get; }
    private static AddTagsToResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddTagsToResourceRequest publicRequest);
    internal static AddTagsToResourceRequestMarshaller GetInstance();
    public static AddTagsToResourceRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.AddTagsToResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AddTagsToResourceResponseUnmarshaller _instance;
    public static AddTagsToResourceResponseUnmarshaller Instance { get; }
    private static AddTagsToResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddTagsToResourceResponseUnmarshaller GetInstance();
    public static AddTagsToResourceResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.AddUploadBufferRequestMarshaller : object {
    private static AddUploadBufferRequestMarshaller _instance;
    public static AddUploadBufferRequestMarshaller Instance { get; }
    private static AddUploadBufferRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddUploadBufferRequest publicRequest);
    internal static AddUploadBufferRequestMarshaller GetInstance();
    public static AddUploadBufferRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.AddUploadBufferResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AddUploadBufferResponseUnmarshaller _instance;
    public static AddUploadBufferResponseUnmarshaller Instance { get; }
    private static AddUploadBufferResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddUploadBufferResponseUnmarshaller GetInstance();
    public static AddUploadBufferResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.AddWorkingStorageRequestMarshaller : object {
    private static AddWorkingStorageRequestMarshaller _instance;
    public static AddWorkingStorageRequestMarshaller Instance { get; }
    private static AddWorkingStorageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddWorkingStorageRequest publicRequest);
    internal static AddWorkingStorageRequestMarshaller GetInstance();
    public static AddWorkingStorageRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.AddWorkingStorageResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AddWorkingStorageResponseUnmarshaller _instance;
    public static AddWorkingStorageResponseUnmarshaller Instance { get; }
    private static AddWorkingStorageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddWorkingStorageResponseUnmarshaller GetInstance();
    public static AddWorkingStorageResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.AssignTapePoolRequestMarshaller : object {
    private static AssignTapePoolRequestMarshaller _instance;
    public static AssignTapePoolRequestMarshaller Instance { get; }
    private static AssignTapePoolRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssignTapePoolRequest publicRequest);
    internal static AssignTapePoolRequestMarshaller GetInstance();
    public static AssignTapePoolRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.AssignTapePoolResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AssignTapePoolResponseUnmarshaller _instance;
    public static AssignTapePoolResponseUnmarshaller Instance { get; }
    private static AssignTapePoolResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssignTapePoolResponseUnmarshaller GetInstance();
    public static AssignTapePoolResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.AssociateFileSystemRequestMarshaller : object {
    private static AssociateFileSystemRequestMarshaller _instance;
    public static AssociateFileSystemRequestMarshaller Instance { get; }
    private static AssociateFileSystemRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateFileSystemRequest publicRequest);
    internal static AssociateFileSystemRequestMarshaller GetInstance();
    public static AssociateFileSystemRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.AssociateFileSystemResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AssociateFileSystemResponseUnmarshaller _instance;
    public static AssociateFileSystemResponseUnmarshaller Instance { get; }
    private static AssociateFileSystemResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateFileSystemResponseUnmarshaller GetInstance();
    public static AssociateFileSystemResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.AttachVolumeRequestMarshaller : object {
    private static AttachVolumeRequestMarshaller _instance;
    public static AttachVolumeRequestMarshaller Instance { get; }
    private static AttachVolumeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AttachVolumeRequest publicRequest);
    internal static AttachVolumeRequestMarshaller GetInstance();
    public static AttachVolumeRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.AttachVolumeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AttachVolumeResponseUnmarshaller _instance;
    public static AttachVolumeResponseUnmarshaller Instance { get; }
    private static AttachVolumeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AttachVolumeResponseUnmarshaller GetInstance();
    public static AttachVolumeResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.AutomaticTapeCreationPolicyInfoUnmarshaller : object {
    private static AutomaticTapeCreationPolicyInfoUnmarshaller _instance;
    public static AutomaticTapeCreationPolicyInfoUnmarshaller Instance { get; }
    private static AutomaticTapeCreationPolicyInfoUnmarshaller();
    private sealed virtual override AutomaticTapeCreationPolicyInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.AutomaticTapeCreationPolicyInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AutomaticTapeCreationPolicyInfo Unmarshall(JsonUnmarshallerContext context);
    public static AutomaticTapeCreationPolicyInfoUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.AutomaticTapeCreationRuleMarshaller : object {
    public static AutomaticTapeCreationRuleMarshaller Instance;
    private static AutomaticTapeCreationRuleMarshaller();
    public sealed virtual void Marshall(AutomaticTapeCreationRule requestObject, JsonMarshallerContext context);
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.AutomaticTapeCreationRuleUnmarshaller : object {
    private static AutomaticTapeCreationRuleUnmarshaller _instance;
    public static AutomaticTapeCreationRuleUnmarshaller Instance { get; }
    private static AutomaticTapeCreationRuleUnmarshaller();
    private sealed virtual override AutomaticTapeCreationRule Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.AutomaticTapeCreationRule,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AutomaticTapeCreationRule Unmarshall(JsonUnmarshallerContext context);
    public static AutomaticTapeCreationRuleUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.BandwidthRateLimitIntervalMarshaller : object {
    public static BandwidthRateLimitIntervalMarshaller Instance;
    private static BandwidthRateLimitIntervalMarshaller();
    public sealed virtual void Marshall(BandwidthRateLimitInterval requestObject, JsonMarshallerContext context);
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.BandwidthRateLimitIntervalUnmarshaller : object {
    private static BandwidthRateLimitIntervalUnmarshaller _instance;
    public static BandwidthRateLimitIntervalUnmarshaller Instance { get; }
    private static BandwidthRateLimitIntervalUnmarshaller();
    private sealed virtual override BandwidthRateLimitInterval Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.BandwidthRateLimitInterval,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BandwidthRateLimitInterval Unmarshall(JsonUnmarshallerContext context);
    public static BandwidthRateLimitIntervalUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CacheAttributesMarshaller : object {
    public static CacheAttributesMarshaller Instance;
    private static CacheAttributesMarshaller();
    public sealed virtual void Marshall(CacheAttributes requestObject, JsonMarshallerContext context);
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CacheAttributesUnmarshaller : object {
    private static CacheAttributesUnmarshaller _instance;
    public static CacheAttributesUnmarshaller Instance { get; }
    private static CacheAttributesUnmarshaller();
    private sealed virtual override CacheAttributes Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.CacheAttributes,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CacheAttributes Unmarshall(JsonUnmarshallerContext context);
    public static CacheAttributesUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CachediSCSIVolumeUnmarshaller : object {
    private static CachediSCSIVolumeUnmarshaller _instance;
    public static CachediSCSIVolumeUnmarshaller Instance { get; }
    private static CachediSCSIVolumeUnmarshaller();
    private sealed virtual override CachediSCSIVolume Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.CachediSCSIVolume,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CachediSCSIVolume Unmarshall(JsonUnmarshallerContext context);
    public static CachediSCSIVolumeUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CancelArchivalRequestMarshaller : object {
    private static CancelArchivalRequestMarshaller _instance;
    public static CancelArchivalRequestMarshaller Instance { get; }
    private static CancelArchivalRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelArchivalRequest publicRequest);
    internal static CancelArchivalRequestMarshaller GetInstance();
    public static CancelArchivalRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CancelArchivalResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CancelArchivalResponseUnmarshaller _instance;
    public static CancelArchivalResponseUnmarshaller Instance { get; }
    private static CancelArchivalResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelArchivalResponseUnmarshaller GetInstance();
    public static CancelArchivalResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CancelRetrievalRequestMarshaller : object {
    private static CancelRetrievalRequestMarshaller _instance;
    public static CancelRetrievalRequestMarshaller Instance { get; }
    private static CancelRetrievalRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelRetrievalRequest publicRequest);
    internal static CancelRetrievalRequestMarshaller GetInstance();
    public static CancelRetrievalRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CancelRetrievalResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CancelRetrievalResponseUnmarshaller _instance;
    public static CancelRetrievalResponseUnmarshaller Instance { get; }
    private static CancelRetrievalResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelRetrievalResponseUnmarshaller GetInstance();
    public static CancelRetrievalResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ChapInfoUnmarshaller : object {
    private static ChapInfoUnmarshaller _instance;
    public static ChapInfoUnmarshaller Instance { get; }
    private static ChapInfoUnmarshaller();
    private sealed virtual override ChapInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.ChapInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ChapInfo Unmarshall(JsonUnmarshallerContext context);
    public static ChapInfoUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CreateCachediSCSIVolumeRequestMarshaller : object {
    private static CreateCachediSCSIVolumeRequestMarshaller _instance;
    public static CreateCachediSCSIVolumeRequestMarshaller Instance { get; }
    private static CreateCachediSCSIVolumeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateCachediSCSIVolumeRequest publicRequest);
    internal static CreateCachediSCSIVolumeRequestMarshaller GetInstance();
    public static CreateCachediSCSIVolumeRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CreateCachediSCSIVolumeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateCachediSCSIVolumeResponseUnmarshaller _instance;
    public static CreateCachediSCSIVolumeResponseUnmarshaller Instance { get; }
    private static CreateCachediSCSIVolumeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateCachediSCSIVolumeResponseUnmarshaller GetInstance();
    public static CreateCachediSCSIVolumeResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CreateNFSFileShareRequestMarshaller : object {
    private static CreateNFSFileShareRequestMarshaller _instance;
    public static CreateNFSFileShareRequestMarshaller Instance { get; }
    private static CreateNFSFileShareRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateNFSFileShareRequest publicRequest);
    internal static CreateNFSFileShareRequestMarshaller GetInstance();
    public static CreateNFSFileShareRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CreateNFSFileShareResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateNFSFileShareResponseUnmarshaller _instance;
    public static CreateNFSFileShareResponseUnmarshaller Instance { get; }
    private static CreateNFSFileShareResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateNFSFileShareResponseUnmarshaller GetInstance();
    public static CreateNFSFileShareResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CreateSMBFileShareRequestMarshaller : object {
    private static CreateSMBFileShareRequestMarshaller _instance;
    public static CreateSMBFileShareRequestMarshaller Instance { get; }
    private static CreateSMBFileShareRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateSMBFileShareRequest publicRequest);
    internal static CreateSMBFileShareRequestMarshaller GetInstance();
    public static CreateSMBFileShareRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CreateSMBFileShareResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateSMBFileShareResponseUnmarshaller _instance;
    public static CreateSMBFileShareResponseUnmarshaller Instance { get; }
    private static CreateSMBFileShareResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateSMBFileShareResponseUnmarshaller GetInstance();
    public static CreateSMBFileShareResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CreateSnapshotFromVolumeRecoveryPointRequestMarshaller : object {
    private static CreateSnapshotFromVolumeRecoveryPointRequestMarshaller _instance;
    public static CreateSnapshotFromVolumeRecoveryPointRequestMarshaller Instance { get; }
    private static CreateSnapshotFromVolumeRecoveryPointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateSnapshotFromVolumeRecoveryPointRequest publicRequest);
    internal static CreateSnapshotFromVolumeRecoveryPointRequestMarshaller GetInstance();
    public static CreateSnapshotFromVolumeRecoveryPointRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CreateSnapshotFromVolumeRecoveryPointResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateSnapshotFromVolumeRecoveryPointResponseUnmarshaller _instance;
    public static CreateSnapshotFromVolumeRecoveryPointResponseUnmarshaller Instance { get; }
    private static CreateSnapshotFromVolumeRecoveryPointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateSnapshotFromVolumeRecoveryPointResponseUnmarshaller GetInstance();
    public static CreateSnapshotFromVolumeRecoveryPointResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CreateSnapshotRequestMarshaller : object {
    private static CreateSnapshotRequestMarshaller _instance;
    public static CreateSnapshotRequestMarshaller Instance { get; }
    private static CreateSnapshotRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateSnapshotRequest publicRequest);
    internal static CreateSnapshotRequestMarshaller GetInstance();
    public static CreateSnapshotRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CreateSnapshotResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateSnapshotResponseUnmarshaller _instance;
    public static CreateSnapshotResponseUnmarshaller Instance { get; }
    private static CreateSnapshotResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateSnapshotResponseUnmarshaller GetInstance();
    public static CreateSnapshotResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CreateStorediSCSIVolumeRequestMarshaller : object {
    private static CreateStorediSCSIVolumeRequestMarshaller _instance;
    public static CreateStorediSCSIVolumeRequestMarshaller Instance { get; }
    private static CreateStorediSCSIVolumeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateStorediSCSIVolumeRequest publicRequest);
    internal static CreateStorediSCSIVolumeRequestMarshaller GetInstance();
    public static CreateStorediSCSIVolumeRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CreateStorediSCSIVolumeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateStorediSCSIVolumeResponseUnmarshaller _instance;
    public static CreateStorediSCSIVolumeResponseUnmarshaller Instance { get; }
    private static CreateStorediSCSIVolumeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateStorediSCSIVolumeResponseUnmarshaller GetInstance();
    public static CreateStorediSCSIVolumeResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CreateTapePoolRequestMarshaller : object {
    private static CreateTapePoolRequestMarshaller _instance;
    public static CreateTapePoolRequestMarshaller Instance { get; }
    private static CreateTapePoolRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTapePoolRequest publicRequest);
    internal static CreateTapePoolRequestMarshaller GetInstance();
    public static CreateTapePoolRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CreateTapePoolResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateTapePoolResponseUnmarshaller _instance;
    public static CreateTapePoolResponseUnmarshaller Instance { get; }
    private static CreateTapePoolResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTapePoolResponseUnmarshaller GetInstance();
    public static CreateTapePoolResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CreateTapesRequestMarshaller : object {
    private static CreateTapesRequestMarshaller _instance;
    public static CreateTapesRequestMarshaller Instance { get; }
    private static CreateTapesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTapesRequest publicRequest);
    internal static CreateTapesRequestMarshaller GetInstance();
    public static CreateTapesRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CreateTapesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateTapesResponseUnmarshaller _instance;
    public static CreateTapesResponseUnmarshaller Instance { get; }
    private static CreateTapesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTapesResponseUnmarshaller GetInstance();
    public static CreateTapesResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CreateTapeWithBarcodeRequestMarshaller : object {
    private static CreateTapeWithBarcodeRequestMarshaller _instance;
    public static CreateTapeWithBarcodeRequestMarshaller Instance { get; }
    private static CreateTapeWithBarcodeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTapeWithBarcodeRequest publicRequest);
    internal static CreateTapeWithBarcodeRequestMarshaller GetInstance();
    public static CreateTapeWithBarcodeRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.CreateTapeWithBarcodeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateTapeWithBarcodeResponseUnmarshaller _instance;
    public static CreateTapeWithBarcodeResponseUnmarshaller Instance { get; }
    private static CreateTapeWithBarcodeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTapeWithBarcodeResponseUnmarshaller GetInstance();
    public static CreateTapeWithBarcodeResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DeleteAutomaticTapeCreationPolicyRequestMarshaller : object {
    private static DeleteAutomaticTapeCreationPolicyRequestMarshaller _instance;
    public static DeleteAutomaticTapeCreationPolicyRequestMarshaller Instance { get; }
    private static DeleteAutomaticTapeCreationPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteAutomaticTapeCreationPolicyRequest publicRequest);
    internal static DeleteAutomaticTapeCreationPolicyRequestMarshaller GetInstance();
    public static DeleteAutomaticTapeCreationPolicyRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DeleteAutomaticTapeCreationPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteAutomaticTapeCreationPolicyResponseUnmarshaller _instance;
    public static DeleteAutomaticTapeCreationPolicyResponseUnmarshaller Instance { get; }
    private static DeleteAutomaticTapeCreationPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteAutomaticTapeCreationPolicyResponseUnmarshaller GetInstance();
    public static DeleteAutomaticTapeCreationPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DeleteBandwidthRateLimitRequestMarshaller : object {
    private static DeleteBandwidthRateLimitRequestMarshaller _instance;
    public static DeleteBandwidthRateLimitRequestMarshaller Instance { get; }
    private static DeleteBandwidthRateLimitRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteBandwidthRateLimitRequest publicRequest);
    internal static DeleteBandwidthRateLimitRequestMarshaller GetInstance();
    public static DeleteBandwidthRateLimitRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DeleteBandwidthRateLimitResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteBandwidthRateLimitResponseUnmarshaller _instance;
    public static DeleteBandwidthRateLimitResponseUnmarshaller Instance { get; }
    private static DeleteBandwidthRateLimitResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteBandwidthRateLimitResponseUnmarshaller GetInstance();
    public static DeleteBandwidthRateLimitResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DeleteChapCredentialsRequestMarshaller : object {
    private static DeleteChapCredentialsRequestMarshaller _instance;
    public static DeleteChapCredentialsRequestMarshaller Instance { get; }
    private static DeleteChapCredentialsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteChapCredentialsRequest publicRequest);
    internal static DeleteChapCredentialsRequestMarshaller GetInstance();
    public static DeleteChapCredentialsRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DeleteChapCredentialsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteChapCredentialsResponseUnmarshaller _instance;
    public static DeleteChapCredentialsResponseUnmarshaller Instance { get; }
    private static DeleteChapCredentialsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteChapCredentialsResponseUnmarshaller GetInstance();
    public static DeleteChapCredentialsResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DeleteFileShareRequestMarshaller : object {
    private static DeleteFileShareRequestMarshaller _instance;
    public static DeleteFileShareRequestMarshaller Instance { get; }
    private static DeleteFileShareRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteFileShareRequest publicRequest);
    internal static DeleteFileShareRequestMarshaller GetInstance();
    public static DeleteFileShareRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DeleteFileShareResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteFileShareResponseUnmarshaller _instance;
    public static DeleteFileShareResponseUnmarshaller Instance { get; }
    private static DeleteFileShareResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteFileShareResponseUnmarshaller GetInstance();
    public static DeleteFileShareResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DeleteGatewayRequestMarshaller : object {
    private static DeleteGatewayRequestMarshaller _instance;
    public static DeleteGatewayRequestMarshaller Instance { get; }
    private static DeleteGatewayRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteGatewayRequest publicRequest);
    internal static DeleteGatewayRequestMarshaller GetInstance();
    public static DeleteGatewayRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DeleteGatewayResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteGatewayResponseUnmarshaller _instance;
    public static DeleteGatewayResponseUnmarshaller Instance { get; }
    private static DeleteGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteGatewayResponseUnmarshaller GetInstance();
    public static DeleteGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DeleteSnapshotScheduleRequestMarshaller : object {
    private static DeleteSnapshotScheduleRequestMarshaller _instance;
    public static DeleteSnapshotScheduleRequestMarshaller Instance { get; }
    private static DeleteSnapshotScheduleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteSnapshotScheduleRequest publicRequest);
    internal static DeleteSnapshotScheduleRequestMarshaller GetInstance();
    public static DeleteSnapshotScheduleRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DeleteSnapshotScheduleResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteSnapshotScheduleResponseUnmarshaller _instance;
    public static DeleteSnapshotScheduleResponseUnmarshaller Instance { get; }
    private static DeleteSnapshotScheduleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteSnapshotScheduleResponseUnmarshaller GetInstance();
    public static DeleteSnapshotScheduleResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DeleteTapeArchiveRequestMarshaller : object {
    private static DeleteTapeArchiveRequestMarshaller _instance;
    public static DeleteTapeArchiveRequestMarshaller Instance { get; }
    private static DeleteTapeArchiveRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTapeArchiveRequest publicRequest);
    internal static DeleteTapeArchiveRequestMarshaller GetInstance();
    public static DeleteTapeArchiveRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DeleteTapeArchiveResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteTapeArchiveResponseUnmarshaller _instance;
    public static DeleteTapeArchiveResponseUnmarshaller Instance { get; }
    private static DeleteTapeArchiveResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTapeArchiveResponseUnmarshaller GetInstance();
    public static DeleteTapeArchiveResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DeleteTapePoolRequestMarshaller : object {
    private static DeleteTapePoolRequestMarshaller _instance;
    public static DeleteTapePoolRequestMarshaller Instance { get; }
    private static DeleteTapePoolRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTapePoolRequest publicRequest);
    internal static DeleteTapePoolRequestMarshaller GetInstance();
    public static DeleteTapePoolRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DeleteTapePoolResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteTapePoolResponseUnmarshaller _instance;
    public static DeleteTapePoolResponseUnmarshaller Instance { get; }
    private static DeleteTapePoolResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTapePoolResponseUnmarshaller GetInstance();
    public static DeleteTapePoolResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DeleteTapeRequestMarshaller : object {
    private static DeleteTapeRequestMarshaller _instance;
    public static DeleteTapeRequestMarshaller Instance { get; }
    private static DeleteTapeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTapeRequest publicRequest);
    internal static DeleteTapeRequestMarshaller GetInstance();
    public static DeleteTapeRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DeleteTapeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteTapeResponseUnmarshaller _instance;
    public static DeleteTapeResponseUnmarshaller Instance { get; }
    private static DeleteTapeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTapeResponseUnmarshaller GetInstance();
    public static DeleteTapeResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DeleteVolumeRequestMarshaller : object {
    private static DeleteVolumeRequestMarshaller _instance;
    public static DeleteVolumeRequestMarshaller Instance { get; }
    private static DeleteVolumeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVolumeRequest publicRequest);
    internal static DeleteVolumeRequestMarshaller GetInstance();
    public static DeleteVolumeRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DeleteVolumeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteVolumeResponseUnmarshaller _instance;
    public static DeleteVolumeResponseUnmarshaller Instance { get; }
    private static DeleteVolumeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVolumeResponseUnmarshaller GetInstance();
    public static DeleteVolumeResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeAvailabilityMonitorTestRequestMarshaller : object {
    private static DescribeAvailabilityMonitorTestRequestMarshaller _instance;
    public static DescribeAvailabilityMonitorTestRequestMarshaller Instance { get; }
    private static DescribeAvailabilityMonitorTestRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAvailabilityMonitorTestRequest publicRequest);
    internal static DescribeAvailabilityMonitorTestRequestMarshaller GetInstance();
    public static DescribeAvailabilityMonitorTestRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeAvailabilityMonitorTestResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeAvailabilityMonitorTestResponseUnmarshaller _instance;
    public static DescribeAvailabilityMonitorTestResponseUnmarshaller Instance { get; }
    private static DescribeAvailabilityMonitorTestResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAvailabilityMonitorTestResponseUnmarshaller GetInstance();
    public static DescribeAvailabilityMonitorTestResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeBandwidthRateLimitRequestMarshaller : object {
    private static DescribeBandwidthRateLimitRequestMarshaller _instance;
    public static DescribeBandwidthRateLimitRequestMarshaller Instance { get; }
    private static DescribeBandwidthRateLimitRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeBandwidthRateLimitRequest publicRequest);
    internal static DescribeBandwidthRateLimitRequestMarshaller GetInstance();
    public static DescribeBandwidthRateLimitRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeBandwidthRateLimitResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeBandwidthRateLimitResponseUnmarshaller _instance;
    public static DescribeBandwidthRateLimitResponseUnmarshaller Instance { get; }
    private static DescribeBandwidthRateLimitResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeBandwidthRateLimitResponseUnmarshaller GetInstance();
    public static DescribeBandwidthRateLimitResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeBandwidthRateLimitScheduleRequestMarshaller : object {
    private static DescribeBandwidthRateLimitScheduleRequestMarshaller _instance;
    public static DescribeBandwidthRateLimitScheduleRequestMarshaller Instance { get; }
    private static DescribeBandwidthRateLimitScheduleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeBandwidthRateLimitScheduleRequest publicRequest);
    internal static DescribeBandwidthRateLimitScheduleRequestMarshaller GetInstance();
    public static DescribeBandwidthRateLimitScheduleRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeBandwidthRateLimitScheduleResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeBandwidthRateLimitScheduleResponseUnmarshaller _instance;
    public static DescribeBandwidthRateLimitScheduleResponseUnmarshaller Instance { get; }
    private static DescribeBandwidthRateLimitScheduleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeBandwidthRateLimitScheduleResponseUnmarshaller GetInstance();
    public static DescribeBandwidthRateLimitScheduleResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeCachediSCSIVolumesRequestMarshaller : object {
    private static DescribeCachediSCSIVolumesRequestMarshaller _instance;
    public static DescribeCachediSCSIVolumesRequestMarshaller Instance { get; }
    private static DescribeCachediSCSIVolumesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeCachediSCSIVolumesRequest publicRequest);
    internal static DescribeCachediSCSIVolumesRequestMarshaller GetInstance();
    public static DescribeCachediSCSIVolumesRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeCachediSCSIVolumesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeCachediSCSIVolumesResponseUnmarshaller _instance;
    public static DescribeCachediSCSIVolumesResponseUnmarshaller Instance { get; }
    private static DescribeCachediSCSIVolumesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeCachediSCSIVolumesResponseUnmarshaller GetInstance();
    public static DescribeCachediSCSIVolumesResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeCacheRequestMarshaller : object {
    private static DescribeCacheRequestMarshaller _instance;
    public static DescribeCacheRequestMarshaller Instance { get; }
    private static DescribeCacheRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeCacheRequest publicRequest);
    internal static DescribeCacheRequestMarshaller GetInstance();
    public static DescribeCacheRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeCacheResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeCacheResponseUnmarshaller _instance;
    public static DescribeCacheResponseUnmarshaller Instance { get; }
    private static DescribeCacheResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeCacheResponseUnmarshaller GetInstance();
    public static DescribeCacheResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeChapCredentialsRequestMarshaller : object {
    private static DescribeChapCredentialsRequestMarshaller _instance;
    public static DescribeChapCredentialsRequestMarshaller Instance { get; }
    private static DescribeChapCredentialsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeChapCredentialsRequest publicRequest);
    internal static DescribeChapCredentialsRequestMarshaller GetInstance();
    public static DescribeChapCredentialsRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeChapCredentialsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeChapCredentialsResponseUnmarshaller _instance;
    public static DescribeChapCredentialsResponseUnmarshaller Instance { get; }
    private static DescribeChapCredentialsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeChapCredentialsResponseUnmarshaller GetInstance();
    public static DescribeChapCredentialsResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeFileSystemAssociationsRequestMarshaller : object {
    private static DescribeFileSystemAssociationsRequestMarshaller _instance;
    public static DescribeFileSystemAssociationsRequestMarshaller Instance { get; }
    private static DescribeFileSystemAssociationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeFileSystemAssociationsRequest publicRequest);
    internal static DescribeFileSystemAssociationsRequestMarshaller GetInstance();
    public static DescribeFileSystemAssociationsRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeFileSystemAssociationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeFileSystemAssociationsResponseUnmarshaller _instance;
    public static DescribeFileSystemAssociationsResponseUnmarshaller Instance { get; }
    private static DescribeFileSystemAssociationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeFileSystemAssociationsResponseUnmarshaller GetInstance();
    public static DescribeFileSystemAssociationsResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeGatewayInformationRequestMarshaller : object {
    private static DescribeGatewayInformationRequestMarshaller _instance;
    public static DescribeGatewayInformationRequestMarshaller Instance { get; }
    private static DescribeGatewayInformationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeGatewayInformationRequest publicRequest);
    internal static DescribeGatewayInformationRequestMarshaller GetInstance();
    public static DescribeGatewayInformationRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeGatewayInformationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeGatewayInformationResponseUnmarshaller _instance;
    public static DescribeGatewayInformationResponseUnmarshaller Instance { get; }
    private static DescribeGatewayInformationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeGatewayInformationResponseUnmarshaller GetInstance();
    public static DescribeGatewayInformationResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeMaintenanceStartTimeRequestMarshaller : object {
    private static DescribeMaintenanceStartTimeRequestMarshaller _instance;
    public static DescribeMaintenanceStartTimeRequestMarshaller Instance { get; }
    private static DescribeMaintenanceStartTimeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeMaintenanceStartTimeRequest publicRequest);
    internal static DescribeMaintenanceStartTimeRequestMarshaller GetInstance();
    public static DescribeMaintenanceStartTimeRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeMaintenanceStartTimeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeMaintenanceStartTimeResponseUnmarshaller _instance;
    public static DescribeMaintenanceStartTimeResponseUnmarshaller Instance { get; }
    private static DescribeMaintenanceStartTimeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeMaintenanceStartTimeResponseUnmarshaller GetInstance();
    public static DescribeMaintenanceStartTimeResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeNFSFileSharesRequestMarshaller : object {
    private static DescribeNFSFileSharesRequestMarshaller _instance;
    public static DescribeNFSFileSharesRequestMarshaller Instance { get; }
    private static DescribeNFSFileSharesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeNFSFileSharesRequest publicRequest);
    internal static DescribeNFSFileSharesRequestMarshaller GetInstance();
    public static DescribeNFSFileSharesRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeNFSFileSharesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeNFSFileSharesResponseUnmarshaller _instance;
    public static DescribeNFSFileSharesResponseUnmarshaller Instance { get; }
    private static DescribeNFSFileSharesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeNFSFileSharesResponseUnmarshaller GetInstance();
    public static DescribeNFSFileSharesResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeSMBFileSharesRequestMarshaller : object {
    private static DescribeSMBFileSharesRequestMarshaller _instance;
    public static DescribeSMBFileSharesRequestMarshaller Instance { get; }
    private static DescribeSMBFileSharesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSMBFileSharesRequest publicRequest);
    internal static DescribeSMBFileSharesRequestMarshaller GetInstance();
    public static DescribeSMBFileSharesRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeSMBFileSharesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeSMBFileSharesResponseUnmarshaller _instance;
    public static DescribeSMBFileSharesResponseUnmarshaller Instance { get; }
    private static DescribeSMBFileSharesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSMBFileSharesResponseUnmarshaller GetInstance();
    public static DescribeSMBFileSharesResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeSMBSettingsRequestMarshaller : object {
    private static DescribeSMBSettingsRequestMarshaller _instance;
    public static DescribeSMBSettingsRequestMarshaller Instance { get; }
    private static DescribeSMBSettingsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSMBSettingsRequest publicRequest);
    internal static DescribeSMBSettingsRequestMarshaller GetInstance();
    public static DescribeSMBSettingsRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeSMBSettingsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeSMBSettingsResponseUnmarshaller _instance;
    public static DescribeSMBSettingsResponseUnmarshaller Instance { get; }
    private static DescribeSMBSettingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSMBSettingsResponseUnmarshaller GetInstance();
    public static DescribeSMBSettingsResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeSnapshotScheduleRequestMarshaller : object {
    private static DescribeSnapshotScheduleRequestMarshaller _instance;
    public static DescribeSnapshotScheduleRequestMarshaller Instance { get; }
    private static DescribeSnapshotScheduleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSnapshotScheduleRequest publicRequest);
    internal static DescribeSnapshotScheduleRequestMarshaller GetInstance();
    public static DescribeSnapshotScheduleRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeSnapshotScheduleResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeSnapshotScheduleResponseUnmarshaller _instance;
    public static DescribeSnapshotScheduleResponseUnmarshaller Instance { get; }
    private static DescribeSnapshotScheduleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSnapshotScheduleResponseUnmarshaller GetInstance();
    public static DescribeSnapshotScheduleResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeStorediSCSIVolumesRequestMarshaller : object {
    private static DescribeStorediSCSIVolumesRequestMarshaller _instance;
    public static DescribeStorediSCSIVolumesRequestMarshaller Instance { get; }
    private static DescribeStorediSCSIVolumesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeStorediSCSIVolumesRequest publicRequest);
    internal static DescribeStorediSCSIVolumesRequestMarshaller GetInstance();
    public static DescribeStorediSCSIVolumesRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeStorediSCSIVolumesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeStorediSCSIVolumesResponseUnmarshaller _instance;
    public static DescribeStorediSCSIVolumesResponseUnmarshaller Instance { get; }
    private static DescribeStorediSCSIVolumesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeStorediSCSIVolumesResponseUnmarshaller GetInstance();
    public static DescribeStorediSCSIVolumesResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeTapeArchivesRequestMarshaller : object {
    private static DescribeTapeArchivesRequestMarshaller _instance;
    public static DescribeTapeArchivesRequestMarshaller Instance { get; }
    private static DescribeTapeArchivesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTapeArchivesRequest publicRequest);
    internal static DescribeTapeArchivesRequestMarshaller GetInstance();
    public static DescribeTapeArchivesRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeTapeArchivesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeTapeArchivesResponseUnmarshaller _instance;
    public static DescribeTapeArchivesResponseUnmarshaller Instance { get; }
    private static DescribeTapeArchivesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTapeArchivesResponseUnmarshaller GetInstance();
    public static DescribeTapeArchivesResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeTapeRecoveryPointsRequestMarshaller : object {
    private static DescribeTapeRecoveryPointsRequestMarshaller _instance;
    public static DescribeTapeRecoveryPointsRequestMarshaller Instance { get; }
    private static DescribeTapeRecoveryPointsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTapeRecoveryPointsRequest publicRequest);
    internal static DescribeTapeRecoveryPointsRequestMarshaller GetInstance();
    public static DescribeTapeRecoveryPointsRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeTapeRecoveryPointsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeTapeRecoveryPointsResponseUnmarshaller _instance;
    public static DescribeTapeRecoveryPointsResponseUnmarshaller Instance { get; }
    private static DescribeTapeRecoveryPointsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTapeRecoveryPointsResponseUnmarshaller GetInstance();
    public static DescribeTapeRecoveryPointsResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeTapesRequestMarshaller : object {
    private static DescribeTapesRequestMarshaller _instance;
    public static DescribeTapesRequestMarshaller Instance { get; }
    private static DescribeTapesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTapesRequest publicRequest);
    internal static DescribeTapesRequestMarshaller GetInstance();
    public static DescribeTapesRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeTapesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeTapesResponseUnmarshaller _instance;
    public static DescribeTapesResponseUnmarshaller Instance { get; }
    private static DescribeTapesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTapesResponseUnmarshaller GetInstance();
    public static DescribeTapesResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeUploadBufferRequestMarshaller : object {
    private static DescribeUploadBufferRequestMarshaller _instance;
    public static DescribeUploadBufferRequestMarshaller Instance { get; }
    private static DescribeUploadBufferRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeUploadBufferRequest publicRequest);
    internal static DescribeUploadBufferRequestMarshaller GetInstance();
    public static DescribeUploadBufferRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeUploadBufferResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeUploadBufferResponseUnmarshaller _instance;
    public static DescribeUploadBufferResponseUnmarshaller Instance { get; }
    private static DescribeUploadBufferResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeUploadBufferResponseUnmarshaller GetInstance();
    public static DescribeUploadBufferResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeVTLDevicesRequestMarshaller : object {
    private static DescribeVTLDevicesRequestMarshaller _instance;
    public static DescribeVTLDevicesRequestMarshaller Instance { get; }
    private static DescribeVTLDevicesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVTLDevicesRequest publicRequest);
    internal static DescribeVTLDevicesRequestMarshaller GetInstance();
    public static DescribeVTLDevicesRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeVTLDevicesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeVTLDevicesResponseUnmarshaller _instance;
    public static DescribeVTLDevicesResponseUnmarshaller Instance { get; }
    private static DescribeVTLDevicesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVTLDevicesResponseUnmarshaller GetInstance();
    public static DescribeVTLDevicesResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeWorkingStorageRequestMarshaller : object {
    private static DescribeWorkingStorageRequestMarshaller _instance;
    public static DescribeWorkingStorageRequestMarshaller Instance { get; }
    private static DescribeWorkingStorageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeWorkingStorageRequest publicRequest);
    internal static DescribeWorkingStorageRequestMarshaller GetInstance();
    public static DescribeWorkingStorageRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DescribeWorkingStorageResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeWorkingStorageResponseUnmarshaller _instance;
    public static DescribeWorkingStorageResponseUnmarshaller Instance { get; }
    private static DescribeWorkingStorageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeWorkingStorageResponseUnmarshaller GetInstance();
    public static DescribeWorkingStorageResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DetachVolumeRequestMarshaller : object {
    private static DetachVolumeRequestMarshaller _instance;
    public static DetachVolumeRequestMarshaller Instance { get; }
    private static DetachVolumeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DetachVolumeRequest publicRequest);
    internal static DetachVolumeRequestMarshaller GetInstance();
    public static DetachVolumeRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DetachVolumeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DetachVolumeResponseUnmarshaller _instance;
    public static DetachVolumeResponseUnmarshaller Instance { get; }
    private static DetachVolumeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DetachVolumeResponseUnmarshaller GetInstance();
    public static DetachVolumeResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DeviceiSCSIAttributesUnmarshaller : object {
    private static DeviceiSCSIAttributesUnmarshaller _instance;
    public static DeviceiSCSIAttributesUnmarshaller Instance { get; }
    private static DeviceiSCSIAttributesUnmarshaller();
    private sealed virtual override DeviceiSCSIAttributes Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.DeviceiSCSIAttributes,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeviceiSCSIAttributes Unmarshall(JsonUnmarshallerContext context);
    public static DeviceiSCSIAttributesUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DisableGatewayRequestMarshaller : object {
    private static DisableGatewayRequestMarshaller _instance;
    public static DisableGatewayRequestMarshaller Instance { get; }
    private static DisableGatewayRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableGatewayRequest publicRequest);
    internal static DisableGatewayRequestMarshaller GetInstance();
    public static DisableGatewayRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DisableGatewayResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DisableGatewayResponseUnmarshaller _instance;
    public static DisableGatewayResponseUnmarshaller Instance { get; }
    private static DisableGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableGatewayResponseUnmarshaller GetInstance();
    public static DisableGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DisassociateFileSystemRequestMarshaller : object {
    private static DisassociateFileSystemRequestMarshaller _instance;
    public static DisassociateFileSystemRequestMarshaller Instance { get; }
    private static DisassociateFileSystemRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisassociateFileSystemRequest publicRequest);
    internal static DisassociateFileSystemRequestMarshaller GetInstance();
    public static DisassociateFileSystemRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DisassociateFileSystemResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DisassociateFileSystemResponseUnmarshaller _instance;
    public static DisassociateFileSystemResponseUnmarshaller Instance { get; }
    private static DisassociateFileSystemResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisassociateFileSystemResponseUnmarshaller GetInstance();
    public static DisassociateFileSystemResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.DiskUnmarshaller : object {
    private static DiskUnmarshaller _instance;
    public static DiskUnmarshaller Instance { get; }
    private static DiskUnmarshaller();
    private sealed virtual override Disk Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.Disk,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Disk Unmarshall(JsonUnmarshallerContext context);
    public static DiskUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.EndpointNetworkConfigurationMarshaller : object {
    public static EndpointNetworkConfigurationMarshaller Instance;
    private static EndpointNetworkConfigurationMarshaller();
    public sealed virtual void Marshall(EndpointNetworkConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.EndpointNetworkConfigurationUnmarshaller : object {
    private static EndpointNetworkConfigurationUnmarshaller _instance;
    public static EndpointNetworkConfigurationUnmarshaller Instance { get; }
    private static EndpointNetworkConfigurationUnmarshaller();
    private sealed virtual override EndpointNetworkConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.EndpointNetworkConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EndpointNetworkConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static EndpointNetworkConfigurationUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.FileShareInfoUnmarshaller : object {
    private static FileShareInfoUnmarshaller _instance;
    public static FileShareInfoUnmarshaller Instance { get; }
    private static FileShareInfoUnmarshaller();
    private sealed virtual override FileShareInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.FileShareInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FileShareInfo Unmarshall(JsonUnmarshallerContext context);
    public static FileShareInfoUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.FileSystemAssociationInfoUnmarshaller : object {
    private static FileSystemAssociationInfoUnmarshaller _instance;
    public static FileSystemAssociationInfoUnmarshaller Instance { get; }
    private static FileSystemAssociationInfoUnmarshaller();
    private sealed virtual override FileSystemAssociationInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.FileSystemAssociationInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FileSystemAssociationInfo Unmarshall(JsonUnmarshallerContext context);
    public static FileSystemAssociationInfoUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.FileSystemAssociationStatusDetailUnmarshaller : object {
    private static FileSystemAssociationStatusDetailUnmarshaller _instance;
    public static FileSystemAssociationStatusDetailUnmarshaller Instance { get; }
    private static FileSystemAssociationStatusDetailUnmarshaller();
    private sealed virtual override FileSystemAssociationStatusDetail Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.FileSystemAssociationStatusDetail,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FileSystemAssociationStatusDetail Unmarshall(JsonUnmarshallerContext context);
    public static FileSystemAssociationStatusDetailUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.FileSystemAssociationSummaryUnmarshaller : object {
    private static FileSystemAssociationSummaryUnmarshaller _instance;
    public static FileSystemAssociationSummaryUnmarshaller Instance { get; }
    private static FileSystemAssociationSummaryUnmarshaller();
    private sealed virtual override FileSystemAssociationSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.FileSystemAssociationSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FileSystemAssociationSummary Unmarshall(JsonUnmarshallerContext context);
    public static FileSystemAssociationSummaryUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.GatewayInfoUnmarshaller : object {
    private static GatewayInfoUnmarshaller _instance;
    public static GatewayInfoUnmarshaller Instance { get; }
    private static GatewayInfoUnmarshaller();
    private sealed virtual override GatewayInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.GatewayInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GatewayInfo Unmarshall(JsonUnmarshallerContext context);
    public static GatewayInfoUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller : object {
    private static InternalServerErrorExceptionUnmarshaller _instance;
    public static InternalServerErrorExceptionUnmarshaller Instance { get; }
    private static InternalServerErrorExceptionUnmarshaller();
    public sealed virtual InternalServerErrorException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InternalServerErrorException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InternalServerErrorExceptionUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.InvalidGatewayRequestExceptionUnmarshaller : object {
    private static InvalidGatewayRequestExceptionUnmarshaller _instance;
    public static InvalidGatewayRequestExceptionUnmarshaller Instance { get; }
    private static InvalidGatewayRequestExceptionUnmarshaller();
    public sealed virtual InvalidGatewayRequestException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidGatewayRequestException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidGatewayRequestExceptionUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.JoinDomainRequestMarshaller : object {
    private static JoinDomainRequestMarshaller _instance;
    public static JoinDomainRequestMarshaller Instance { get; }
    private static JoinDomainRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(JoinDomainRequest publicRequest);
    internal static JoinDomainRequestMarshaller GetInstance();
    public static JoinDomainRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.JoinDomainResponseUnmarshaller : JsonResponseUnmarshaller {
    private static JoinDomainResponseUnmarshaller _instance;
    public static JoinDomainResponseUnmarshaller Instance { get; }
    private static JoinDomainResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static JoinDomainResponseUnmarshaller GetInstance();
    public static JoinDomainResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ListAutomaticTapeCreationPoliciesRequestMarshaller : object {
    private static ListAutomaticTapeCreationPoliciesRequestMarshaller _instance;
    public static ListAutomaticTapeCreationPoliciesRequestMarshaller Instance { get; }
    private static ListAutomaticTapeCreationPoliciesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListAutomaticTapeCreationPoliciesRequest publicRequest);
    internal static ListAutomaticTapeCreationPoliciesRequestMarshaller GetInstance();
    public static ListAutomaticTapeCreationPoliciesRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ListAutomaticTapeCreationPoliciesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListAutomaticTapeCreationPoliciesResponseUnmarshaller _instance;
    public static ListAutomaticTapeCreationPoliciesResponseUnmarshaller Instance { get; }
    private static ListAutomaticTapeCreationPoliciesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListAutomaticTapeCreationPoliciesResponseUnmarshaller GetInstance();
    public static ListAutomaticTapeCreationPoliciesResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ListFileSharesRequestMarshaller : object {
    private static ListFileSharesRequestMarshaller _instance;
    public static ListFileSharesRequestMarshaller Instance { get; }
    private static ListFileSharesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListFileSharesRequest publicRequest);
    internal static ListFileSharesRequestMarshaller GetInstance();
    public static ListFileSharesRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ListFileSharesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListFileSharesResponseUnmarshaller _instance;
    public static ListFileSharesResponseUnmarshaller Instance { get; }
    private static ListFileSharesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListFileSharesResponseUnmarshaller GetInstance();
    public static ListFileSharesResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ListFileSystemAssociationsRequestMarshaller : object {
    private static ListFileSystemAssociationsRequestMarshaller _instance;
    public static ListFileSystemAssociationsRequestMarshaller Instance { get; }
    private static ListFileSystemAssociationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListFileSystemAssociationsRequest publicRequest);
    internal static ListFileSystemAssociationsRequestMarshaller GetInstance();
    public static ListFileSystemAssociationsRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ListFileSystemAssociationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListFileSystemAssociationsResponseUnmarshaller _instance;
    public static ListFileSystemAssociationsResponseUnmarshaller Instance { get; }
    private static ListFileSystemAssociationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListFileSystemAssociationsResponseUnmarshaller GetInstance();
    public static ListFileSystemAssociationsResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ListGatewaysRequestMarshaller : object {
    private static ListGatewaysRequestMarshaller _instance;
    public static ListGatewaysRequestMarshaller Instance { get; }
    private static ListGatewaysRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListGatewaysRequest publicRequest);
    internal static ListGatewaysRequestMarshaller GetInstance();
    public static ListGatewaysRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ListGatewaysResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListGatewaysResponseUnmarshaller _instance;
    public static ListGatewaysResponseUnmarshaller Instance { get; }
    private static ListGatewaysResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListGatewaysResponseUnmarshaller GetInstance();
    public static ListGatewaysResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ListLocalDisksRequestMarshaller : object {
    private static ListLocalDisksRequestMarshaller _instance;
    public static ListLocalDisksRequestMarshaller Instance { get; }
    private static ListLocalDisksRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListLocalDisksRequest publicRequest);
    internal static ListLocalDisksRequestMarshaller GetInstance();
    public static ListLocalDisksRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ListLocalDisksResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListLocalDisksResponseUnmarshaller _instance;
    public static ListLocalDisksResponseUnmarshaller Instance { get; }
    private static ListLocalDisksResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListLocalDisksResponseUnmarshaller GetInstance();
    public static ListLocalDisksResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller : object {
    private static ListTagsForResourceRequestMarshaller _instance;
    public static ListTagsForResourceRequestMarshaller Instance { get; }
    private static ListTagsForResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsForResourceRequest publicRequest);
    internal static ListTagsForResourceRequestMarshaller GetInstance();
    public static ListTagsForResourceRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTagsForResourceResponseUnmarshaller _instance;
    public static ListTagsForResourceResponseUnmarshaller Instance { get; }
    private static ListTagsForResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsForResourceResponseUnmarshaller GetInstance();
    public static ListTagsForResourceResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ListTapePoolsRequestMarshaller : object {
    private static ListTapePoolsRequestMarshaller _instance;
    public static ListTapePoolsRequestMarshaller Instance { get; }
    private static ListTapePoolsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTapePoolsRequest publicRequest);
    internal static ListTapePoolsRequestMarshaller GetInstance();
    public static ListTapePoolsRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ListTapePoolsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTapePoolsResponseUnmarshaller _instance;
    public static ListTapePoolsResponseUnmarshaller Instance { get; }
    private static ListTapePoolsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTapePoolsResponseUnmarshaller GetInstance();
    public static ListTapePoolsResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ListTapesRequestMarshaller : object {
    private static ListTapesRequestMarshaller _instance;
    public static ListTapesRequestMarshaller Instance { get; }
    private static ListTapesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTapesRequest publicRequest);
    internal static ListTapesRequestMarshaller GetInstance();
    public static ListTapesRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ListTapesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTapesResponseUnmarshaller _instance;
    public static ListTapesResponseUnmarshaller Instance { get; }
    private static ListTapesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTapesResponseUnmarshaller GetInstance();
    public static ListTapesResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ListVolumeInitiatorsRequestMarshaller : object {
    private static ListVolumeInitiatorsRequestMarshaller _instance;
    public static ListVolumeInitiatorsRequestMarshaller Instance { get; }
    private static ListVolumeInitiatorsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListVolumeInitiatorsRequest publicRequest);
    internal static ListVolumeInitiatorsRequestMarshaller GetInstance();
    public static ListVolumeInitiatorsRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ListVolumeInitiatorsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListVolumeInitiatorsResponseUnmarshaller _instance;
    public static ListVolumeInitiatorsResponseUnmarshaller Instance { get; }
    private static ListVolumeInitiatorsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListVolumeInitiatorsResponseUnmarshaller GetInstance();
    public static ListVolumeInitiatorsResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ListVolumeRecoveryPointsRequestMarshaller : object {
    private static ListVolumeRecoveryPointsRequestMarshaller _instance;
    public static ListVolumeRecoveryPointsRequestMarshaller Instance { get; }
    private static ListVolumeRecoveryPointsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListVolumeRecoveryPointsRequest publicRequest);
    internal static ListVolumeRecoveryPointsRequestMarshaller GetInstance();
    public static ListVolumeRecoveryPointsRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ListVolumeRecoveryPointsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListVolumeRecoveryPointsResponseUnmarshaller _instance;
    public static ListVolumeRecoveryPointsResponseUnmarshaller Instance { get; }
    private static ListVolumeRecoveryPointsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListVolumeRecoveryPointsResponseUnmarshaller GetInstance();
    public static ListVolumeRecoveryPointsResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ListVolumesRequestMarshaller : object {
    private static ListVolumesRequestMarshaller _instance;
    public static ListVolumesRequestMarshaller Instance { get; }
    private static ListVolumesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListVolumesRequest publicRequest);
    internal static ListVolumesRequestMarshaller GetInstance();
    public static ListVolumesRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ListVolumesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListVolumesResponseUnmarshaller _instance;
    public static ListVolumesResponseUnmarshaller Instance { get; }
    private static ListVolumesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListVolumesResponseUnmarshaller GetInstance();
    public static ListVolumesResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.NetworkInterfaceUnmarshaller : object {
    private static NetworkInterfaceUnmarshaller _instance;
    public static NetworkInterfaceUnmarshaller Instance { get; }
    private static NetworkInterfaceUnmarshaller();
    private sealed virtual override NetworkInterface Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.NetworkInterface,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkInterface Unmarshall(JsonUnmarshallerContext context);
    public static NetworkInterfaceUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.NFSFileShareDefaultsMarshaller : object {
    public static NFSFileShareDefaultsMarshaller Instance;
    private static NFSFileShareDefaultsMarshaller();
    public sealed virtual void Marshall(NFSFileShareDefaults requestObject, JsonMarshallerContext context);
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.NFSFileShareDefaultsUnmarshaller : object {
    private static NFSFileShareDefaultsUnmarshaller _instance;
    public static NFSFileShareDefaultsUnmarshaller Instance { get; }
    private static NFSFileShareDefaultsUnmarshaller();
    private sealed virtual override NFSFileShareDefaults Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.NFSFileShareDefaults,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NFSFileShareDefaults Unmarshall(JsonUnmarshallerContext context);
    public static NFSFileShareDefaultsUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.NFSFileShareInfoUnmarshaller : object {
    private static NFSFileShareInfoUnmarshaller _instance;
    public static NFSFileShareInfoUnmarshaller Instance { get; }
    private static NFSFileShareInfoUnmarshaller();
    private sealed virtual override NFSFileShareInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.NFSFileShareInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NFSFileShareInfo Unmarshall(JsonUnmarshallerContext context);
    public static NFSFileShareInfoUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.NotifyWhenUploadedRequestMarshaller : object {
    private static NotifyWhenUploadedRequestMarshaller _instance;
    public static NotifyWhenUploadedRequestMarshaller Instance { get; }
    private static NotifyWhenUploadedRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(NotifyWhenUploadedRequest publicRequest);
    internal static NotifyWhenUploadedRequestMarshaller GetInstance();
    public static NotifyWhenUploadedRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.NotifyWhenUploadedResponseUnmarshaller : JsonResponseUnmarshaller {
    private static NotifyWhenUploadedResponseUnmarshaller _instance;
    public static NotifyWhenUploadedResponseUnmarshaller Instance { get; }
    private static NotifyWhenUploadedResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static NotifyWhenUploadedResponseUnmarshaller GetInstance();
    public static NotifyWhenUploadedResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.PoolInfoUnmarshaller : object {
    private static PoolInfoUnmarshaller _instance;
    public static PoolInfoUnmarshaller Instance { get; }
    private static PoolInfoUnmarshaller();
    private sealed virtual override PoolInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.PoolInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PoolInfo Unmarshall(JsonUnmarshallerContext context);
    public static PoolInfoUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.RefreshCacheRequestMarshaller : object {
    private static RefreshCacheRequestMarshaller _instance;
    public static RefreshCacheRequestMarshaller Instance { get; }
    private static RefreshCacheRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RefreshCacheRequest publicRequest);
    internal static RefreshCacheRequestMarshaller GetInstance();
    public static RefreshCacheRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.RefreshCacheResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RefreshCacheResponseUnmarshaller _instance;
    public static RefreshCacheResponseUnmarshaller Instance { get; }
    private static RefreshCacheResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RefreshCacheResponseUnmarshaller GetInstance();
    public static RefreshCacheResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.RemoveTagsFromResourceRequestMarshaller : object {
    private static RemoveTagsFromResourceRequestMarshaller _instance;
    public static RemoveTagsFromResourceRequestMarshaller Instance { get; }
    private static RemoveTagsFromResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemoveTagsFromResourceRequest publicRequest);
    internal static RemoveTagsFromResourceRequestMarshaller GetInstance();
    public static RemoveTagsFromResourceRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.RemoveTagsFromResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RemoveTagsFromResourceResponseUnmarshaller _instance;
    public static RemoveTagsFromResourceResponseUnmarshaller Instance { get; }
    private static RemoveTagsFromResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemoveTagsFromResourceResponseUnmarshaller GetInstance();
    public static RemoveTagsFromResourceResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ResetCacheRequestMarshaller : object {
    private static ResetCacheRequestMarshaller _instance;
    public static ResetCacheRequestMarshaller Instance { get; }
    private static ResetCacheRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ResetCacheRequest publicRequest);
    internal static ResetCacheRequestMarshaller GetInstance();
    public static ResetCacheRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ResetCacheResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ResetCacheResponseUnmarshaller _instance;
    public static ResetCacheResponseUnmarshaller Instance { get; }
    private static ResetCacheResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ResetCacheResponseUnmarshaller GetInstance();
    public static ResetCacheResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.RetrieveTapeArchiveRequestMarshaller : object {
    private static RetrieveTapeArchiveRequestMarshaller _instance;
    public static RetrieveTapeArchiveRequestMarshaller Instance { get; }
    private static RetrieveTapeArchiveRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RetrieveTapeArchiveRequest publicRequest);
    internal static RetrieveTapeArchiveRequestMarshaller GetInstance();
    public static RetrieveTapeArchiveRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.RetrieveTapeArchiveResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RetrieveTapeArchiveResponseUnmarshaller _instance;
    public static RetrieveTapeArchiveResponseUnmarshaller Instance { get; }
    private static RetrieveTapeArchiveResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RetrieveTapeArchiveResponseUnmarshaller GetInstance();
    public static RetrieveTapeArchiveResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.RetrieveTapeRecoveryPointRequestMarshaller : object {
    private static RetrieveTapeRecoveryPointRequestMarshaller _instance;
    public static RetrieveTapeRecoveryPointRequestMarshaller Instance { get; }
    private static RetrieveTapeRecoveryPointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RetrieveTapeRecoveryPointRequest publicRequest);
    internal static RetrieveTapeRecoveryPointRequestMarshaller GetInstance();
    public static RetrieveTapeRecoveryPointRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.RetrieveTapeRecoveryPointResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RetrieveTapeRecoveryPointResponseUnmarshaller _instance;
    public static RetrieveTapeRecoveryPointResponseUnmarshaller Instance { get; }
    private static RetrieveTapeRecoveryPointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RetrieveTapeRecoveryPointResponseUnmarshaller GetInstance();
    public static RetrieveTapeRecoveryPointResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ServiceUnavailableErrorExceptionUnmarshaller : object {
    private static ServiceUnavailableErrorExceptionUnmarshaller _instance;
    public static ServiceUnavailableErrorExceptionUnmarshaller Instance { get; }
    private static ServiceUnavailableErrorExceptionUnmarshaller();
    public sealed virtual ServiceUnavailableErrorException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ServiceUnavailableErrorException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ServiceUnavailableErrorExceptionUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.SetLocalConsolePasswordRequestMarshaller : object {
    private static SetLocalConsolePasswordRequestMarshaller _instance;
    public static SetLocalConsolePasswordRequestMarshaller Instance { get; }
    private static SetLocalConsolePasswordRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetLocalConsolePasswordRequest publicRequest);
    internal static SetLocalConsolePasswordRequestMarshaller GetInstance();
    public static SetLocalConsolePasswordRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.SetLocalConsolePasswordResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SetLocalConsolePasswordResponseUnmarshaller _instance;
    public static SetLocalConsolePasswordResponseUnmarshaller Instance { get; }
    private static SetLocalConsolePasswordResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetLocalConsolePasswordResponseUnmarshaller GetInstance();
    public static SetLocalConsolePasswordResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.SetSMBGuestPasswordRequestMarshaller : object {
    private static SetSMBGuestPasswordRequestMarshaller _instance;
    public static SetSMBGuestPasswordRequestMarshaller Instance { get; }
    private static SetSMBGuestPasswordRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetSMBGuestPasswordRequest publicRequest);
    internal static SetSMBGuestPasswordRequestMarshaller GetInstance();
    public static SetSMBGuestPasswordRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.SetSMBGuestPasswordResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SetSMBGuestPasswordResponseUnmarshaller _instance;
    public static SetSMBGuestPasswordResponseUnmarshaller Instance { get; }
    private static SetSMBGuestPasswordResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetSMBGuestPasswordResponseUnmarshaller GetInstance();
    public static SetSMBGuestPasswordResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ShutdownGatewayRequestMarshaller : object {
    private static ShutdownGatewayRequestMarshaller _instance;
    public static ShutdownGatewayRequestMarshaller Instance { get; }
    private static ShutdownGatewayRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ShutdownGatewayRequest publicRequest);
    internal static ShutdownGatewayRequestMarshaller GetInstance();
    public static ShutdownGatewayRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.ShutdownGatewayResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ShutdownGatewayResponseUnmarshaller _instance;
    public static ShutdownGatewayResponseUnmarshaller Instance { get; }
    private static ShutdownGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ShutdownGatewayResponseUnmarshaller GetInstance();
    public static ShutdownGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.SMBFileShareInfoUnmarshaller : object {
    private static SMBFileShareInfoUnmarshaller _instance;
    public static SMBFileShareInfoUnmarshaller Instance { get; }
    private static SMBFileShareInfoUnmarshaller();
    private sealed virtual override SMBFileShareInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.SMBFileShareInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SMBFileShareInfo Unmarshall(JsonUnmarshallerContext context);
    public static SMBFileShareInfoUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.SMBLocalGroupsMarshaller : object {
    public static SMBLocalGroupsMarshaller Instance;
    private static SMBLocalGroupsMarshaller();
    public sealed virtual void Marshall(SMBLocalGroups requestObject, JsonMarshallerContext context);
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.SMBLocalGroupsUnmarshaller : object {
    private static SMBLocalGroupsUnmarshaller _instance;
    public static SMBLocalGroupsUnmarshaller Instance { get; }
    private static SMBLocalGroupsUnmarshaller();
    private sealed virtual override SMBLocalGroups Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.SMBLocalGroups,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SMBLocalGroups Unmarshall(JsonUnmarshallerContext context);
    public static SMBLocalGroupsUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.SoftwareUpdatePreferencesMarshaller : object {
    public static SoftwareUpdatePreferencesMarshaller Instance;
    private static SoftwareUpdatePreferencesMarshaller();
    public sealed virtual void Marshall(SoftwareUpdatePreferences requestObject, JsonMarshallerContext context);
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.SoftwareUpdatePreferencesUnmarshaller : object {
    private static SoftwareUpdatePreferencesUnmarshaller _instance;
    public static SoftwareUpdatePreferencesUnmarshaller Instance { get; }
    private static SoftwareUpdatePreferencesUnmarshaller();
    private sealed virtual override SoftwareUpdatePreferences Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.SoftwareUpdatePreferences,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SoftwareUpdatePreferences Unmarshall(JsonUnmarshallerContext context);
    public static SoftwareUpdatePreferencesUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.StartAvailabilityMonitorTestRequestMarshaller : object {
    private static StartAvailabilityMonitorTestRequestMarshaller _instance;
    public static StartAvailabilityMonitorTestRequestMarshaller Instance { get; }
    private static StartAvailabilityMonitorTestRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartAvailabilityMonitorTestRequest publicRequest);
    internal static StartAvailabilityMonitorTestRequestMarshaller GetInstance();
    public static StartAvailabilityMonitorTestRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.StartAvailabilityMonitorTestResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartAvailabilityMonitorTestResponseUnmarshaller _instance;
    public static StartAvailabilityMonitorTestResponseUnmarshaller Instance { get; }
    private static StartAvailabilityMonitorTestResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartAvailabilityMonitorTestResponseUnmarshaller GetInstance();
    public static StartAvailabilityMonitorTestResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.StartGatewayRequestMarshaller : object {
    private static StartGatewayRequestMarshaller _instance;
    public static StartGatewayRequestMarshaller Instance { get; }
    private static StartGatewayRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartGatewayRequest publicRequest);
    internal static StartGatewayRequestMarshaller GetInstance();
    public static StartGatewayRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.StartGatewayResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartGatewayResponseUnmarshaller _instance;
    public static StartGatewayResponseUnmarshaller Instance { get; }
    private static StartGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartGatewayResponseUnmarshaller GetInstance();
    public static StartGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.StorageGatewayErrorUnmarshaller : object {
    private static StorageGatewayErrorUnmarshaller _instance;
    public static StorageGatewayErrorUnmarshaller Instance { get; }
    private static StorageGatewayErrorUnmarshaller();
    private sealed virtual override StorageGatewayError Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.StorageGatewayError,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StorageGatewayError Unmarshall(JsonUnmarshallerContext context);
    public static StorageGatewayErrorUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.StorediSCSIVolumeUnmarshaller : object {
    private static StorediSCSIVolumeUnmarshaller _instance;
    public static StorediSCSIVolumeUnmarshaller Instance { get; }
    private static StorediSCSIVolumeUnmarshaller();
    private sealed virtual override StorediSCSIVolume Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.StorediSCSIVolume,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StorediSCSIVolume Unmarshall(JsonUnmarshallerContext context);
    public static StorediSCSIVolumeUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.TagMarshaller : object {
    public static TagMarshaller Instance;
    private static TagMarshaller();
    public sealed virtual void Marshall(Tag requestObject, JsonMarshallerContext context);
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.TagUnmarshaller : object {
    private static TagUnmarshaller _instance;
    public static TagUnmarshaller Instance { get; }
    private static TagUnmarshaller();
    private sealed virtual override Tag Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.Tag,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tag Unmarshall(JsonUnmarshallerContext context);
    public static TagUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.TapeArchiveUnmarshaller : object {
    private static TapeArchiveUnmarshaller _instance;
    public static TapeArchiveUnmarshaller Instance { get; }
    private static TapeArchiveUnmarshaller();
    private sealed virtual override TapeArchive Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.TapeArchive,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TapeArchive Unmarshall(JsonUnmarshallerContext context);
    public static TapeArchiveUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.TapeInfoUnmarshaller : object {
    private static TapeInfoUnmarshaller _instance;
    public static TapeInfoUnmarshaller Instance { get; }
    private static TapeInfoUnmarshaller();
    private sealed virtual override TapeInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.TapeInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TapeInfo Unmarshall(JsonUnmarshallerContext context);
    public static TapeInfoUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.TapeRecoveryPointInfoUnmarshaller : object {
    private static TapeRecoveryPointInfoUnmarshaller _instance;
    public static TapeRecoveryPointInfoUnmarshaller Instance { get; }
    private static TapeRecoveryPointInfoUnmarshaller();
    private sealed virtual override TapeRecoveryPointInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.TapeRecoveryPointInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TapeRecoveryPointInfo Unmarshall(JsonUnmarshallerContext context);
    public static TapeRecoveryPointInfoUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.TapeUnmarshaller : object {
    private static TapeUnmarshaller _instance;
    public static TapeUnmarshaller Instance { get; }
    private static TapeUnmarshaller();
    private sealed virtual override Tape Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.Tape,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tape Unmarshall(JsonUnmarshallerContext context);
    public static TapeUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateAutomaticTapeCreationPolicyRequestMarshaller : object {
    private static UpdateAutomaticTapeCreationPolicyRequestMarshaller _instance;
    public static UpdateAutomaticTapeCreationPolicyRequestMarshaller Instance { get; }
    private static UpdateAutomaticTapeCreationPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateAutomaticTapeCreationPolicyRequest publicRequest);
    internal static UpdateAutomaticTapeCreationPolicyRequestMarshaller GetInstance();
    public static UpdateAutomaticTapeCreationPolicyRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateAutomaticTapeCreationPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateAutomaticTapeCreationPolicyResponseUnmarshaller _instance;
    public static UpdateAutomaticTapeCreationPolicyResponseUnmarshaller Instance { get; }
    private static UpdateAutomaticTapeCreationPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateAutomaticTapeCreationPolicyResponseUnmarshaller GetInstance();
    public static UpdateAutomaticTapeCreationPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateBandwidthRateLimitRequestMarshaller : object {
    private static UpdateBandwidthRateLimitRequestMarshaller _instance;
    public static UpdateBandwidthRateLimitRequestMarshaller Instance { get; }
    private static UpdateBandwidthRateLimitRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateBandwidthRateLimitRequest publicRequest);
    internal static UpdateBandwidthRateLimitRequestMarshaller GetInstance();
    public static UpdateBandwidthRateLimitRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateBandwidthRateLimitResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateBandwidthRateLimitResponseUnmarshaller _instance;
    public static UpdateBandwidthRateLimitResponseUnmarshaller Instance { get; }
    private static UpdateBandwidthRateLimitResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateBandwidthRateLimitResponseUnmarshaller GetInstance();
    public static UpdateBandwidthRateLimitResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateBandwidthRateLimitScheduleRequestMarshaller : object {
    private static UpdateBandwidthRateLimitScheduleRequestMarshaller _instance;
    public static UpdateBandwidthRateLimitScheduleRequestMarshaller Instance { get; }
    private static UpdateBandwidthRateLimitScheduleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateBandwidthRateLimitScheduleRequest publicRequest);
    internal static UpdateBandwidthRateLimitScheduleRequestMarshaller GetInstance();
    public static UpdateBandwidthRateLimitScheduleRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateBandwidthRateLimitScheduleResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateBandwidthRateLimitScheduleResponseUnmarshaller _instance;
    public static UpdateBandwidthRateLimitScheduleResponseUnmarshaller Instance { get; }
    private static UpdateBandwidthRateLimitScheduleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateBandwidthRateLimitScheduleResponseUnmarshaller GetInstance();
    public static UpdateBandwidthRateLimitScheduleResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateChapCredentialsRequestMarshaller : object {
    private static UpdateChapCredentialsRequestMarshaller _instance;
    public static UpdateChapCredentialsRequestMarshaller Instance { get; }
    private static UpdateChapCredentialsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateChapCredentialsRequest publicRequest);
    internal static UpdateChapCredentialsRequestMarshaller GetInstance();
    public static UpdateChapCredentialsRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateChapCredentialsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateChapCredentialsResponseUnmarshaller _instance;
    public static UpdateChapCredentialsResponseUnmarshaller Instance { get; }
    private static UpdateChapCredentialsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateChapCredentialsResponseUnmarshaller GetInstance();
    public static UpdateChapCredentialsResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateFileSystemAssociationRequestMarshaller : object {
    private static UpdateFileSystemAssociationRequestMarshaller _instance;
    public static UpdateFileSystemAssociationRequestMarshaller Instance { get; }
    private static UpdateFileSystemAssociationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateFileSystemAssociationRequest publicRequest);
    internal static UpdateFileSystemAssociationRequestMarshaller GetInstance();
    public static UpdateFileSystemAssociationRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateFileSystemAssociationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateFileSystemAssociationResponseUnmarshaller _instance;
    public static UpdateFileSystemAssociationResponseUnmarshaller Instance { get; }
    private static UpdateFileSystemAssociationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateFileSystemAssociationResponseUnmarshaller GetInstance();
    public static UpdateFileSystemAssociationResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateGatewayInformationRequestMarshaller : object {
    private static UpdateGatewayInformationRequestMarshaller _instance;
    public static UpdateGatewayInformationRequestMarshaller Instance { get; }
    private static UpdateGatewayInformationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateGatewayInformationRequest publicRequest);
    internal static UpdateGatewayInformationRequestMarshaller GetInstance();
    public static UpdateGatewayInformationRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateGatewayInformationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateGatewayInformationResponseUnmarshaller _instance;
    public static UpdateGatewayInformationResponseUnmarshaller Instance { get; }
    private static UpdateGatewayInformationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateGatewayInformationResponseUnmarshaller GetInstance();
    public static UpdateGatewayInformationResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateGatewaySoftwareNowRequestMarshaller : object {
    private static UpdateGatewaySoftwareNowRequestMarshaller _instance;
    public static UpdateGatewaySoftwareNowRequestMarshaller Instance { get; }
    private static UpdateGatewaySoftwareNowRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateGatewaySoftwareNowRequest publicRequest);
    internal static UpdateGatewaySoftwareNowRequestMarshaller GetInstance();
    public static UpdateGatewaySoftwareNowRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateGatewaySoftwareNowResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateGatewaySoftwareNowResponseUnmarshaller _instance;
    public static UpdateGatewaySoftwareNowResponseUnmarshaller Instance { get; }
    private static UpdateGatewaySoftwareNowResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateGatewaySoftwareNowResponseUnmarshaller GetInstance();
    public static UpdateGatewaySoftwareNowResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateMaintenanceStartTimeRequestMarshaller : object {
    private static UpdateMaintenanceStartTimeRequestMarshaller _instance;
    public static UpdateMaintenanceStartTimeRequestMarshaller Instance { get; }
    private static UpdateMaintenanceStartTimeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateMaintenanceStartTimeRequest publicRequest);
    internal static UpdateMaintenanceStartTimeRequestMarshaller GetInstance();
    public static UpdateMaintenanceStartTimeRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateMaintenanceStartTimeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateMaintenanceStartTimeResponseUnmarshaller _instance;
    public static UpdateMaintenanceStartTimeResponseUnmarshaller Instance { get; }
    private static UpdateMaintenanceStartTimeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateMaintenanceStartTimeResponseUnmarshaller GetInstance();
    public static UpdateMaintenanceStartTimeResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateNFSFileShareRequestMarshaller : object {
    private static UpdateNFSFileShareRequestMarshaller _instance;
    public static UpdateNFSFileShareRequestMarshaller Instance { get; }
    private static UpdateNFSFileShareRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateNFSFileShareRequest publicRequest);
    internal static UpdateNFSFileShareRequestMarshaller GetInstance();
    public static UpdateNFSFileShareRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateNFSFileShareResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateNFSFileShareResponseUnmarshaller _instance;
    public static UpdateNFSFileShareResponseUnmarshaller Instance { get; }
    private static UpdateNFSFileShareResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateNFSFileShareResponseUnmarshaller GetInstance();
    public static UpdateNFSFileShareResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateSMBFileShareRequestMarshaller : object {
    private static UpdateSMBFileShareRequestMarshaller _instance;
    public static UpdateSMBFileShareRequestMarshaller Instance { get; }
    private static UpdateSMBFileShareRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateSMBFileShareRequest publicRequest);
    internal static UpdateSMBFileShareRequestMarshaller GetInstance();
    public static UpdateSMBFileShareRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateSMBFileShareResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateSMBFileShareResponseUnmarshaller _instance;
    public static UpdateSMBFileShareResponseUnmarshaller Instance { get; }
    private static UpdateSMBFileShareResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateSMBFileShareResponseUnmarshaller GetInstance();
    public static UpdateSMBFileShareResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateSMBFileShareVisibilityRequestMarshaller : object {
    private static UpdateSMBFileShareVisibilityRequestMarshaller _instance;
    public static UpdateSMBFileShareVisibilityRequestMarshaller Instance { get; }
    private static UpdateSMBFileShareVisibilityRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateSMBFileShareVisibilityRequest publicRequest);
    internal static UpdateSMBFileShareVisibilityRequestMarshaller GetInstance();
    public static UpdateSMBFileShareVisibilityRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateSMBFileShareVisibilityResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateSMBFileShareVisibilityResponseUnmarshaller _instance;
    public static UpdateSMBFileShareVisibilityResponseUnmarshaller Instance { get; }
    private static UpdateSMBFileShareVisibilityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateSMBFileShareVisibilityResponseUnmarshaller GetInstance();
    public static UpdateSMBFileShareVisibilityResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateSMBLocalGroupsRequestMarshaller : object {
    private static UpdateSMBLocalGroupsRequestMarshaller _instance;
    public static UpdateSMBLocalGroupsRequestMarshaller Instance { get; }
    private static UpdateSMBLocalGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateSMBLocalGroupsRequest publicRequest);
    internal static UpdateSMBLocalGroupsRequestMarshaller GetInstance();
    public static UpdateSMBLocalGroupsRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateSMBLocalGroupsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateSMBLocalGroupsResponseUnmarshaller _instance;
    public static UpdateSMBLocalGroupsResponseUnmarshaller Instance { get; }
    private static UpdateSMBLocalGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateSMBLocalGroupsResponseUnmarshaller GetInstance();
    public static UpdateSMBLocalGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateSMBSecurityStrategyRequestMarshaller : object {
    private static UpdateSMBSecurityStrategyRequestMarshaller _instance;
    public static UpdateSMBSecurityStrategyRequestMarshaller Instance { get; }
    private static UpdateSMBSecurityStrategyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateSMBSecurityStrategyRequest publicRequest);
    internal static UpdateSMBSecurityStrategyRequestMarshaller GetInstance();
    public static UpdateSMBSecurityStrategyRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateSMBSecurityStrategyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateSMBSecurityStrategyResponseUnmarshaller _instance;
    public static UpdateSMBSecurityStrategyResponseUnmarshaller Instance { get; }
    private static UpdateSMBSecurityStrategyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateSMBSecurityStrategyResponseUnmarshaller GetInstance();
    public static UpdateSMBSecurityStrategyResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateSnapshotScheduleRequestMarshaller : object {
    private static UpdateSnapshotScheduleRequestMarshaller _instance;
    public static UpdateSnapshotScheduleRequestMarshaller Instance { get; }
    private static UpdateSnapshotScheduleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateSnapshotScheduleRequest publicRequest);
    internal static UpdateSnapshotScheduleRequestMarshaller GetInstance();
    public static UpdateSnapshotScheduleRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateSnapshotScheduleResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateSnapshotScheduleResponseUnmarshaller _instance;
    public static UpdateSnapshotScheduleResponseUnmarshaller Instance { get; }
    private static UpdateSnapshotScheduleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateSnapshotScheduleResponseUnmarshaller GetInstance();
    public static UpdateSnapshotScheduleResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateVTLDeviceTypeRequestMarshaller : object {
    private static UpdateVTLDeviceTypeRequestMarshaller _instance;
    public static UpdateVTLDeviceTypeRequestMarshaller Instance { get; }
    private static UpdateVTLDeviceTypeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateVTLDeviceTypeRequest publicRequest);
    internal static UpdateVTLDeviceTypeRequestMarshaller GetInstance();
    public static UpdateVTLDeviceTypeRequestMarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.UpdateVTLDeviceTypeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateVTLDeviceTypeResponseUnmarshaller _instance;
    public static UpdateVTLDeviceTypeResponseUnmarshaller Instance { get; }
    private static UpdateVTLDeviceTypeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateVTLDeviceTypeResponseUnmarshaller GetInstance();
    public static UpdateVTLDeviceTypeResponseUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.VolumeInfoUnmarshaller : object {
    private static VolumeInfoUnmarshaller _instance;
    public static VolumeInfoUnmarshaller Instance { get; }
    private static VolumeInfoUnmarshaller();
    private sealed virtual override VolumeInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.VolumeInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VolumeInfo Unmarshall(JsonUnmarshallerContext context);
    public static VolumeInfoUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.VolumeiSCSIAttributesUnmarshaller : object {
    private static VolumeiSCSIAttributesUnmarshaller _instance;
    public static VolumeiSCSIAttributesUnmarshaller Instance { get; }
    private static VolumeiSCSIAttributesUnmarshaller();
    private sealed virtual override VolumeiSCSIAttributes Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.VolumeiSCSIAttributes,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VolumeiSCSIAttributes Unmarshall(JsonUnmarshallerContext context);
    public static VolumeiSCSIAttributesUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.VolumeRecoveryPointInfoUnmarshaller : object {
    private static VolumeRecoveryPointInfoUnmarshaller _instance;
    public static VolumeRecoveryPointInfoUnmarshaller Instance { get; }
    private static VolumeRecoveryPointInfoUnmarshaller();
    private sealed virtual override VolumeRecoveryPointInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.VolumeRecoveryPointInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VolumeRecoveryPointInfo Unmarshall(JsonUnmarshallerContext context);
    public static VolumeRecoveryPointInfoUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.Internal.MarshallTransformations.VTLDeviceUnmarshaller : object {
    private static VTLDeviceUnmarshaller _instance;
    public static VTLDeviceUnmarshaller Instance { get; }
    private static VTLDeviceUnmarshaller();
    private sealed virtual override VTLDevice Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.StorageGateway.Model.VTLDevice,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VTLDevice Unmarshall(JsonUnmarshallerContext context);
    public static VTLDeviceUnmarshaller get_Instance();
}
public class Amazon.StorageGateway.Model.InternalServerErrorException : AmazonStorageGatewayException {
    private StorageGatewayError _error;
    public StorageGatewayError Error { get; public set; }
    public InternalServerErrorException(string message);
    public InternalServerErrorException(string message, Exception innerException);
    public InternalServerErrorException(Exception innerException);
    public InternalServerErrorException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InternalServerErrorException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public StorageGatewayError get_Error();
    public void set_Error(StorageGatewayError value);
    internal bool IsSetError();
}
public class Amazon.StorageGateway.Model.InvalidGatewayRequestException : AmazonStorageGatewayException {
    private StorageGatewayError _error;
    public StorageGatewayError Error { get; public set; }
    public InvalidGatewayRequestException(string message);
    public InvalidGatewayRequestException(string message, Exception innerException);
    public InvalidGatewayRequestException(Exception innerException);
    public InvalidGatewayRequestException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidGatewayRequestException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public StorageGatewayError get_Error();
    public void set_Error(StorageGatewayError value);
    internal bool IsSetError();
}
public interface Amazon.StorageGateway.Model.IStorageGatewayPaginatorFactory {
    public abstract virtual IDescribeTapeArchivesPaginator DescribeTapeArchives(DescribeTapeArchivesRequest request);
    public abstract virtual IDescribeTapeRecoveryPointsPaginator DescribeTapeRecoveryPoints(DescribeTapeRecoveryPointsRequest request);
    public abstract virtual IDescribeTapesPaginator DescribeTapes(DescribeTapesRequest request);
    public abstract virtual IDescribeVTLDevicesPaginator DescribeVTLDevices(DescribeVTLDevicesRequest request);
    public abstract virtual IListFileSharesPaginator ListFileShares(ListFileSharesRequest request);
    public abstract virtual IListFileSystemAssociationsPaginator ListFileSystemAssociations(ListFileSystemAssociationsRequest request);
    public abstract virtual IListGatewaysPaginator ListGateways(ListGatewaysRequest request);
    public abstract virtual IListTagsForResourcePaginator ListTagsForResource(ListTagsForResourceRequest request);
    public abstract virtual IListTapePoolsPaginator ListTapePools(ListTapePoolsRequest request);
    public abstract virtual IListTapesPaginator ListTapes(ListTapesRequest request);
    public abstract virtual IListVolumesPaginator ListVolumes(ListVolumesRequest request);
}
public class Amazon.StorageGateway.Model.JoinDomainRequest : AmazonStorageGatewayRequest {
    private List`1<string> _domainControllers;
    private string _domainName;
    private string _gatewayARN;
    private string _organizationalUnit;
    private string _password;
    private Nullable`1<int> _timeoutInSeconds;
    private string _userName;
    public List`1<string> DomainControllers { get; public set; }
    [AWSPropertyAttribute]
public string DomainName { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public string OrganizationalUnit { get; public set; }
    [AWSPropertyAttribute]
public string Password { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TimeoutInSeconds { get; public set; }
    [AWSPropertyAttribute]
public string UserName { get; public set; }
    public List`1<string> get_DomainControllers();
    public void set_DomainControllers(List`1<string> value);
    internal bool IsSetDomainControllers();
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public string get_OrganizationalUnit();
    public void set_OrganizationalUnit(string value);
    internal bool IsSetOrganizationalUnit();
    public string get_Password();
    public void set_Password(string value);
    internal bool IsSetPassword();
    public Nullable`1<int> get_TimeoutInSeconds();
    public void set_TimeoutInSeconds(Nullable`1<int> value);
    internal bool IsSetTimeoutInSeconds();
    public string get_UserName();
    public void set_UserName(string value);
    internal bool IsSetUserName();
}
public class Amazon.StorageGateway.Model.JoinDomainResponse : AmazonWebServiceResponse {
    private ActiveDirectoryStatus _activeDirectoryStatus;
    private string _gatewayARN;
    public ActiveDirectoryStatus ActiveDirectoryStatus { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public ActiveDirectoryStatus get_ActiveDirectoryStatus();
    public void set_ActiveDirectoryStatus(ActiveDirectoryStatus value);
    internal bool IsSetActiveDirectoryStatus();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.ListAutomaticTapeCreationPoliciesRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.ListAutomaticTapeCreationPoliciesResponse : AmazonWebServiceResponse {
    private List`1<AutomaticTapeCreationPolicyInfo> _automaticTapeCreationPolicyInfos;
    public List`1<AutomaticTapeCreationPolicyInfo> AutomaticTapeCreationPolicyInfos { get; public set; }
    public List`1<AutomaticTapeCreationPolicyInfo> get_AutomaticTapeCreationPolicyInfos();
    public void set_AutomaticTapeCreationPolicyInfos(List`1<AutomaticTapeCreationPolicyInfo> value);
    internal bool IsSetAutomaticTapeCreationPolicyInfos();
}
internal class Amazon.StorageGateway.Model.ListFileSharesPaginator : object {
    private IAmazonStorageGateway _client;
    private ListFileSharesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListFileSharesResponse> Responses { get; }
    public IPaginatedEnumerable`1<FileShareInfo> FileShareInfoList { get; }
    internal ListFileSharesPaginator(IAmazonStorageGateway client, ListFileSharesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListFileSharesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<FileShareInfo> get_FileShareInfoList();
    [AsyncIteratorStateMachineAttribute("Amazon.StorageGateway.Model.ListFileSharesPaginator/<Amazon-Runtime-IPaginator<Amazon-StorageGateway-Model-ListFileSharesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListFileSharesResponse> Amazon.Runtime.IPaginator<Amazon.StorageGateway.Model.ListFileSharesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.StorageGateway.Model.ListFileSharesRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    private Nullable`1<int> _limit;
    private string _marker;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.StorageGateway.Model.ListFileSharesResponse : AmazonWebServiceResponse {
    private List`1<FileShareInfo> _fileShareInfoList;
    private string _marker;
    private string _nextMarker;
    public List`1<FileShareInfo> FileShareInfoList { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    [AWSPropertyAttribute]
public string NextMarker { get; public set; }
    public List`1<FileShareInfo> get_FileShareInfoList();
    public void set_FileShareInfoList(List`1<FileShareInfo> value);
    internal bool IsSetFileShareInfoList();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
}
internal class Amazon.StorageGateway.Model.ListFileSystemAssociationsPaginator : object {
    private IAmazonStorageGateway _client;
    private ListFileSystemAssociationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListFileSystemAssociationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<FileSystemAssociationSummary> FileSystemAssociationSummaryList { get; }
    internal ListFileSystemAssociationsPaginator(IAmazonStorageGateway client, ListFileSystemAssociationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListFileSystemAssociationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<FileSystemAssociationSummary> get_FileSystemAssociationSummaryList();
    [AsyncIteratorStateMachineAttribute("Amazon.StorageGateway.Model.ListFileSystemAssociationsPaginator/<Amazon-Runtime-IPaginator<Amazon-StorageGateway-Model-ListFileSystemAssociationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListFileSystemAssociationsResponse> Amazon.Runtime.IPaginator<Amazon.StorageGateway.Model.ListFileSystemAssociationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.StorageGateway.Model.ListFileSystemAssociationsRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    private Nullable`1<int> _limit;
    private string _marker;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.StorageGateway.Model.ListFileSystemAssociationsResponse : AmazonWebServiceResponse {
    private List`1<FileSystemAssociationSummary> _fileSystemAssociationSummaryList;
    private string _marker;
    private string _nextMarker;
    public List`1<FileSystemAssociationSummary> FileSystemAssociationSummaryList { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    [AWSPropertyAttribute]
public string NextMarker { get; public set; }
    public List`1<FileSystemAssociationSummary> get_FileSystemAssociationSummaryList();
    public void set_FileSystemAssociationSummaryList(List`1<FileSystemAssociationSummary> value);
    internal bool IsSetFileSystemAssociationSummaryList();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
}
internal class Amazon.StorageGateway.Model.ListGatewaysPaginator : object {
    private IAmazonStorageGateway _client;
    private ListGatewaysRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListGatewaysResponse> Responses { get; }
    public IPaginatedEnumerable`1<GatewayInfo> Gateways { get; }
    internal ListGatewaysPaginator(IAmazonStorageGateway client, ListGatewaysRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListGatewaysResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<GatewayInfo> get_Gateways();
    [AsyncIteratorStateMachineAttribute("Amazon.StorageGateway.Model.ListGatewaysPaginator/<Amazon-Runtime-IPaginator<Amazon-StorageGateway-Model-ListGatewaysResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListGatewaysResponse> Amazon.Runtime.IPaginator<Amazon.StorageGateway.Model.ListGatewaysResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.StorageGateway.Model.ListGatewaysRequest : AmazonStorageGatewayRequest {
    private Nullable`1<int> _limit;
    private string _marker;
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.StorageGateway.Model.ListGatewaysResponse : AmazonWebServiceResponse {
    private List`1<GatewayInfo> _gateways;
    private string _marker;
    public List`1<GatewayInfo> Gateways { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    public List`1<GatewayInfo> get_Gateways();
    public void set_Gateways(List`1<GatewayInfo> value);
    internal bool IsSetGateways();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.StorageGateway.Model.ListLocalDisksRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.ListLocalDisksResponse : AmazonWebServiceResponse {
    private List`1<Disk> _disks;
    private string _gatewayARN;
    public List`1<Disk> Disks { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public List`1<Disk> get_Disks();
    public void set_Disks(List`1<Disk> value);
    internal bool IsSetDisks();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
internal class Amazon.StorageGateway.Model.ListTagsForResourcePaginator : object {
    private IAmazonStorageGateway _client;
    private ListTagsForResourceRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListTagsForResourceResponse> Responses { get; }
    public IPaginatedEnumerable`1<Tag> Tags { get; }
    internal ListTagsForResourcePaginator(IAmazonStorageGateway client, ListTagsForResourceRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListTagsForResourceResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Tag> get_Tags();
    [AsyncIteratorStateMachineAttribute("Amazon.StorageGateway.Model.ListTagsForResourcePaginator/<Amazon-Runtime-IPaginator<Amazon-StorageGateway-Model-ListTagsForResourceResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListTagsForResourceResponse> Amazon.Runtime.IPaginator<Amazon.StorageGateway.Model.ListTagsForResourceResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.StorageGateway.Model.ListTagsForResourceRequest : AmazonStorageGatewayRequest {
    private Nullable`1<int> _limit;
    private string _marker;
    private string _resourceARN;
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    [AWSPropertyAttribute]
public string ResourceARN { get; public set; }
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_ResourceARN();
    public void set_ResourceARN(string value);
    internal bool IsSetResourceARN();
}
public class Amazon.StorageGateway.Model.ListTagsForResourceResponse : AmazonWebServiceResponse {
    private string _marker;
    private string _resourceARN;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    [AWSPropertyAttribute]
public string ResourceARN { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_ResourceARN();
    public void set_ResourceARN(string value);
    internal bool IsSetResourceARN();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
internal class Amazon.StorageGateway.Model.ListTapePoolsPaginator : object {
    private IAmazonStorageGateway _client;
    private ListTapePoolsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListTapePoolsResponse> Responses { get; }
    public IPaginatedEnumerable`1<PoolInfo> PoolInfos { get; }
    internal ListTapePoolsPaginator(IAmazonStorageGateway client, ListTapePoolsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListTapePoolsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<PoolInfo> get_PoolInfos();
    [AsyncIteratorStateMachineAttribute("Amazon.StorageGateway.Model.ListTapePoolsPaginator/<Amazon-Runtime-IPaginator<Amazon-StorageGateway-Model-ListTapePoolsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListTapePoolsResponse> Amazon.Runtime.IPaginator<Amazon.StorageGateway.Model.ListTapePoolsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.StorageGateway.Model.ListTapePoolsRequest : AmazonStorageGatewayRequest {
    private Nullable`1<int> _limit;
    private string _marker;
    private List`1<string> _poolARNs;
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    public List`1<string> PoolARNs { get; public set; }
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<string> get_PoolARNs();
    public void set_PoolARNs(List`1<string> value);
    internal bool IsSetPoolARNs();
}
public class Amazon.StorageGateway.Model.ListTapePoolsResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<PoolInfo> _poolInfos;
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    public List`1<PoolInfo> PoolInfos { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<PoolInfo> get_PoolInfos();
    public void set_PoolInfos(List`1<PoolInfo> value);
    internal bool IsSetPoolInfos();
}
internal class Amazon.StorageGateway.Model.ListTapesPaginator : object {
    private IAmazonStorageGateway _client;
    private ListTapesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListTapesResponse> Responses { get; }
    public IPaginatedEnumerable`1<TapeInfo> TapeInfos { get; }
    internal ListTapesPaginator(IAmazonStorageGateway client, ListTapesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListTapesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TapeInfo> get_TapeInfos();
    [AsyncIteratorStateMachineAttribute("Amazon.StorageGateway.Model.ListTapesPaginator/<Amazon-Runtime-IPaginator<Amazon-StorageGateway-Model-ListTapesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListTapesResponse> Amazon.Runtime.IPaginator<Amazon.StorageGateway.Model.ListTapesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.StorageGateway.Model.ListTapesRequest : AmazonStorageGatewayRequest {
    private Nullable`1<int> _limit;
    private string _marker;
    private List`1<string> _tapeARNs;
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    public List`1<string> TapeARNs { get; public set; }
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<string> get_TapeARNs();
    public void set_TapeARNs(List`1<string> value);
    internal bool IsSetTapeARNs();
}
public class Amazon.StorageGateway.Model.ListTapesResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<TapeInfo> _tapeInfos;
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    public List`1<TapeInfo> TapeInfos { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<TapeInfo> get_TapeInfos();
    public void set_TapeInfos(List`1<TapeInfo> value);
    internal bool IsSetTapeInfos();
}
public class Amazon.StorageGateway.Model.ListVolumeInitiatorsRequest : AmazonStorageGatewayRequest {
    private string _volumeARN;
    [AWSPropertyAttribute]
public string VolumeARN { get; public set; }
    public string get_VolumeARN();
    public void set_VolumeARN(string value);
    internal bool IsSetVolumeARN();
}
public class Amazon.StorageGateway.Model.ListVolumeInitiatorsResponse : AmazonWebServiceResponse {
    private List`1<string> _initiators;
    public List`1<string> Initiators { get; public set; }
    public List`1<string> get_Initiators();
    public void set_Initiators(List`1<string> value);
    internal bool IsSetInitiators();
}
public class Amazon.StorageGateway.Model.ListVolumeRecoveryPointsRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.ListVolumeRecoveryPointsResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    private List`1<VolumeRecoveryPointInfo> _volumeRecoveryPointInfos;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public List`1<VolumeRecoveryPointInfo> VolumeRecoveryPointInfos { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public List`1<VolumeRecoveryPointInfo> get_VolumeRecoveryPointInfos();
    public void set_VolumeRecoveryPointInfos(List`1<VolumeRecoveryPointInfo> value);
    internal bool IsSetVolumeRecoveryPointInfos();
}
internal class Amazon.StorageGateway.Model.ListVolumesPaginator : object {
    private IAmazonStorageGateway _client;
    private ListVolumesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListVolumesResponse> Responses { get; }
    public IPaginatedEnumerable`1<VolumeInfo> VolumeInfos { get; }
    internal ListVolumesPaginator(IAmazonStorageGateway client, ListVolumesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListVolumesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<VolumeInfo> get_VolumeInfos();
    [AsyncIteratorStateMachineAttribute("Amazon.StorageGateway.Model.ListVolumesPaginator/<Amazon-Runtime-IPaginator<Amazon-StorageGateway-Model-ListVolumesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListVolumesResponse> Amazon.Runtime.IPaginator<Amazon.StorageGateway.Model.ListVolumesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.StorageGateway.Model.ListVolumesRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    private Nullable`1<int> _limit;
    private string _marker;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.StorageGateway.Model.ListVolumesResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    private string _marker;
    private List`1<VolumeInfo> _volumeInfos;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    public List`1<VolumeInfo> VolumeInfos { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<VolumeInfo> get_VolumeInfos();
    public void set_VolumeInfos(List`1<VolumeInfo> value);
    internal bool IsSetVolumeInfos();
}
public class Amazon.StorageGateway.Model.NetworkInterface : object {
    private string _ipv4Address;
    private string _ipv6Address;
    private string _macAddress;
    public string Ipv4Address { get; public set; }
    public string Ipv6Address { get; public set; }
    public string MacAddress { get; public set; }
    public string get_Ipv4Address();
    public void set_Ipv4Address(string value);
    internal bool IsSetIpv4Address();
    public string get_Ipv6Address();
    public void set_Ipv6Address(string value);
    internal bool IsSetIpv6Address();
    public string get_MacAddress();
    public void set_MacAddress(string value);
    internal bool IsSetMacAddress();
}
public class Amazon.StorageGateway.Model.NFSFileShareDefaults : object {
    private string _directoryMode;
    private string _fileMode;
    private Nullable`1<long> _groupId;
    private Nullable`1<long> _ownerId;
    [AWSPropertyAttribute]
public string DirectoryMode { get; public set; }
    [AWSPropertyAttribute]
public string FileMode { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> GroupId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> OwnerId { get; public set; }
    public string get_DirectoryMode();
    public void set_DirectoryMode(string value);
    internal bool IsSetDirectoryMode();
    public string get_FileMode();
    public void set_FileMode(string value);
    internal bool IsSetFileMode();
    public Nullable`1<long> get_GroupId();
    public void set_GroupId(Nullable`1<long> value);
    internal bool IsSetGroupId();
    public Nullable`1<long> get_OwnerId();
    public void set_OwnerId(Nullable`1<long> value);
    internal bool IsSetOwnerId();
}
public class Amazon.StorageGateway.Model.NFSFileShareInfo : object {
    private string _auditDestinationARN;
    private string _bucketRegion;
    private CacheAttributes _cacheAttributes;
    private List`1<string> _clientList;
    private string _defaultStorageClass;
    private string _fileShareARN;
    private string _fileShareId;
    private string _fileShareName;
    private string _fileShareStatus;
    private string _gatewayARN;
    private Nullable`1<bool> _guessMIMETypeEnabled;
    private Nullable`1<bool> _kmsEncrypted;
    private string _kmsKey;
    private string _locationARN;
    private NFSFileShareDefaults _nfsFileShareDefaults;
    private string _notificationPolicy;
    private ObjectACL _objectACL;
    private string _path;
    private Nullable`1<bool> _readOnly;
    private Nullable`1<bool> _requesterPays;
    private string _role;
    private string _squash;
    private List`1<Tag> _tags;
    private string _vpcEndpointDNSName;
    [AWSPropertyAttribute]
public string AuditDestinationARN { get; public set; }
    [AWSPropertyAttribute]
public string BucketRegion { get; public set; }
    public CacheAttributes CacheAttributes { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ClientList { get; public set; }
    [AWSPropertyAttribute]
public string DefaultStorageClass { get; public set; }
    [AWSPropertyAttribute]
public string FileShareARN { get; public set; }
    [AWSPropertyAttribute]
public string FileShareId { get; public set; }
    [AWSPropertyAttribute]
public string FileShareName { get; public set; }
    [AWSPropertyAttribute]
public string FileShareStatus { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public Nullable`1<bool> GuessMIMETypeEnabled { get; public set; }
    public Nullable`1<bool> KMSEncrypted { get; public set; }
    [AWSPropertyAttribute]
public string KMSKey { get; public set; }
    [AWSPropertyAttribute]
public string LocationARN { get; public set; }
    public NFSFileShareDefaults NFSFileShareDefaults { get; public set; }
    [AWSPropertyAttribute]
public string NotificationPolicy { get; public set; }
    public ObjectACL ObjectACL { get; public set; }
    public string Path { get; public set; }
    public Nullable`1<bool> ReadOnly { get; public set; }
    public Nullable`1<bool> RequesterPays { get; public set; }
    [AWSPropertyAttribute]
public string Role { get; public set; }
    [AWSPropertyAttribute]
public string Squash { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string VPCEndpointDNSName { get; public set; }
    public string get_AuditDestinationARN();
    public void set_AuditDestinationARN(string value);
    internal bool IsSetAuditDestinationARN();
    public string get_BucketRegion();
    public void set_BucketRegion(string value);
    internal bool IsSetBucketRegion();
    public CacheAttributes get_CacheAttributes();
    public void set_CacheAttributes(CacheAttributes value);
    internal bool IsSetCacheAttributes();
    public List`1<string> get_ClientList();
    public void set_ClientList(List`1<string> value);
    internal bool IsSetClientList();
    public string get_DefaultStorageClass();
    public void set_DefaultStorageClass(string value);
    internal bool IsSetDefaultStorageClass();
    public string get_FileShareARN();
    public void set_FileShareARN(string value);
    internal bool IsSetFileShareARN();
    public string get_FileShareId();
    public void set_FileShareId(string value);
    internal bool IsSetFileShareId();
    public string get_FileShareName();
    public void set_FileShareName(string value);
    internal bool IsSetFileShareName();
    public string get_FileShareStatus();
    public void set_FileShareStatus(string value);
    internal bool IsSetFileShareStatus();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public Nullable`1<bool> get_GuessMIMETypeEnabled();
    public void set_GuessMIMETypeEnabled(Nullable`1<bool> value);
    internal bool IsSetGuessMIMETypeEnabled();
    public Nullable`1<bool> get_KMSEncrypted();
    public void set_KMSEncrypted(Nullable`1<bool> value);
    internal bool IsSetKMSEncrypted();
    public string get_KMSKey();
    public void set_KMSKey(string value);
    internal bool IsSetKMSKey();
    public string get_LocationARN();
    public void set_LocationARN(string value);
    internal bool IsSetLocationARN();
    public NFSFileShareDefaults get_NFSFileShareDefaults();
    public void set_NFSFileShareDefaults(NFSFileShareDefaults value);
    internal bool IsSetNFSFileShareDefaults();
    public string get_NotificationPolicy();
    public void set_NotificationPolicy(string value);
    internal bool IsSetNotificationPolicy();
    public ObjectACL get_ObjectACL();
    public void set_ObjectACL(ObjectACL value);
    internal bool IsSetObjectACL();
    public string get_Path();
    public void set_Path(string value);
    internal bool IsSetPath();
    public Nullable`1<bool> get_ReadOnly();
    public void set_ReadOnly(Nullable`1<bool> value);
    internal bool IsSetReadOnly();
    public Nullable`1<bool> get_RequesterPays();
    public void set_RequesterPays(Nullable`1<bool> value);
    internal bool IsSetRequesterPays();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public string get_Squash();
    public void set_Squash(string value);
    internal bool IsSetSquash();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VPCEndpointDNSName();
    public void set_VPCEndpointDNSName(string value);
    internal bool IsSetVPCEndpointDNSName();
}
public class Amazon.StorageGateway.Model.NotifyWhenUploadedRequest : AmazonStorageGatewayRequest {
    private string _fileShareARN;
    [AWSPropertyAttribute]
public string FileShareARN { get; public set; }
    public string get_FileShareARN();
    public void set_FileShareARN(string value);
    internal bool IsSetFileShareARN();
}
public class Amazon.StorageGateway.Model.NotifyWhenUploadedResponse : AmazonWebServiceResponse {
    private string _fileShareARN;
    private string _notificationId;
    [AWSPropertyAttribute]
public string FileShareARN { get; public set; }
    [AWSPropertyAttribute]
public string NotificationId { get; public set; }
    public string get_FileShareARN();
    public void set_FileShareARN(string value);
    internal bool IsSetFileShareARN();
    public string get_NotificationId();
    public void set_NotificationId(string value);
    internal bool IsSetNotificationId();
}
public class Amazon.StorageGateway.Model.PoolInfo : object {
    private string _poolARN;
    private string _poolName;
    private PoolStatus _poolStatus;
    private Nullable`1<int> _retentionLockTimeInDays;
    private RetentionLockType _retentionLockType;
    private TapeStorageClass _storageClass;
    [AWSPropertyAttribute]
public string PoolARN { get; public set; }
    [AWSPropertyAttribute]
public string PoolName { get; public set; }
    public PoolStatus PoolStatus { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RetentionLockTimeInDays { get; public set; }
    public RetentionLockType RetentionLockType { get; public set; }
    public TapeStorageClass StorageClass { get; public set; }
    public string get_PoolARN();
    public void set_PoolARN(string value);
    internal bool IsSetPoolARN();
    public string get_PoolName();
    public void set_PoolName(string value);
    internal bool IsSetPoolName();
    public PoolStatus get_PoolStatus();
    public void set_PoolStatus(PoolStatus value);
    internal bool IsSetPoolStatus();
    public Nullable`1<int> get_RetentionLockTimeInDays();
    public void set_RetentionLockTimeInDays(Nullable`1<int> value);
    internal bool IsSetRetentionLockTimeInDays();
    public RetentionLockType get_RetentionLockType();
    public void set_RetentionLockType(RetentionLockType value);
    internal bool IsSetRetentionLockType();
    public TapeStorageClass get_StorageClass();
    public void set_StorageClass(TapeStorageClass value);
    internal bool IsSetStorageClass();
}
public class Amazon.StorageGateway.Model.RefreshCacheRequest : AmazonStorageGatewayRequest {
    private string _fileShareARN;
    private List`1<string> _folderList;
    private Nullable`1<bool> _recursive;
    [AWSPropertyAttribute]
public string FileShareARN { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> FolderList { get; public set; }
    public Nullable`1<bool> Recursive { get; public set; }
    public string get_FileShareARN();
    public void set_FileShareARN(string value);
    internal bool IsSetFileShareARN();
    public List`1<string> get_FolderList();
    public void set_FolderList(List`1<string> value);
    internal bool IsSetFolderList();
    public Nullable`1<bool> get_Recursive();
    public void set_Recursive(Nullable`1<bool> value);
    internal bool IsSetRecursive();
}
public class Amazon.StorageGateway.Model.RefreshCacheResponse : AmazonWebServiceResponse {
    private string _fileShareARN;
    private string _notificationId;
    [AWSPropertyAttribute]
public string FileShareARN { get; public set; }
    [AWSPropertyAttribute]
public string NotificationId { get; public set; }
    public string get_FileShareARN();
    public void set_FileShareARN(string value);
    internal bool IsSetFileShareARN();
    public string get_NotificationId();
    public void set_NotificationId(string value);
    internal bool IsSetNotificationId();
}
public class Amazon.StorageGateway.Model.RemoveTagsFromResourceRequest : AmazonStorageGatewayRequest {
    private string _resourceARN;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string ResourceARN { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_ResourceARN();
    public void set_ResourceARN(string value);
    internal bool IsSetResourceARN();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.StorageGateway.Model.RemoveTagsFromResourceResponse : AmazonWebServiceResponse {
    private string _resourceARN;
    [AWSPropertyAttribute]
public string ResourceARN { get; public set; }
    public string get_ResourceARN();
    public void set_ResourceARN(string value);
    internal bool IsSetResourceARN();
}
public class Amazon.StorageGateway.Model.ResetCacheRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.ResetCacheResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.RetrieveTapeArchiveRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    private string _tapeARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public string TapeARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public string get_TapeARN();
    public void set_TapeARN(string value);
    internal bool IsSetTapeARN();
}
public class Amazon.StorageGateway.Model.RetrieveTapeArchiveResponse : AmazonWebServiceResponse {
    private string _tapeARN;
    [AWSPropertyAttribute]
public string TapeARN { get; public set; }
    public string get_TapeARN();
    public void set_TapeARN(string value);
    internal bool IsSetTapeARN();
}
public class Amazon.StorageGateway.Model.RetrieveTapeRecoveryPointRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    private string _tapeARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public string TapeARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public string get_TapeARN();
    public void set_TapeARN(string value);
    internal bool IsSetTapeARN();
}
public class Amazon.StorageGateway.Model.RetrieveTapeRecoveryPointResponse : AmazonWebServiceResponse {
    private string _tapeARN;
    [AWSPropertyAttribute]
public string TapeARN { get; public set; }
    public string get_TapeARN();
    public void set_TapeARN(string value);
    internal bool IsSetTapeARN();
}
public class Amazon.StorageGateway.Model.ServiceUnavailableErrorException : AmazonStorageGatewayException {
    private StorageGatewayError _error;
    public StorageGatewayError Error { get; public set; }
    public ServiceUnavailableErrorException(string message);
    public ServiceUnavailableErrorException(string message, Exception innerException);
    public ServiceUnavailableErrorException(Exception innerException);
    public ServiceUnavailableErrorException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ServiceUnavailableErrorException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public StorageGatewayError get_Error();
    public void set_Error(StorageGatewayError value);
    internal bool IsSetError();
}
public class Amazon.StorageGateway.Model.SetLocalConsolePasswordRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    private string _localConsolePassword;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public string LocalConsolePassword { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public string get_LocalConsolePassword();
    public void set_LocalConsolePassword(string value);
    internal bool IsSetLocalConsolePassword();
}
public class Amazon.StorageGateway.Model.SetLocalConsolePasswordResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.SetSMBGuestPasswordRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    private string _password;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public string Password { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public string get_Password();
    public void set_Password(string value);
    internal bool IsSetPassword();
}
public class Amazon.StorageGateway.Model.SetSMBGuestPasswordResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.ShutdownGatewayRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.ShutdownGatewayResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.SMBFileShareInfo : object {
    private Nullable`1<bool> _accessBasedEnumeration;
    private List`1<string> _adminUserList;
    private string _auditDestinationARN;
    private string _authentication;
    private string _bucketRegion;
    private CacheAttributes _cacheAttributes;
    private CaseSensitivity _caseSensitivity;
    private string _defaultStorageClass;
    private string _fileShareARN;
    private string _fileShareId;
    private string _fileShareName;
    private string _fileShareStatus;
    private string _gatewayARN;
    private Nullable`1<bool> _guessMIMETypeEnabled;
    private List`1<string> _invalidUserList;
    private Nullable`1<bool> _kmsEncrypted;
    private string _kmsKey;
    private string _locationARN;
    private string _notificationPolicy;
    private ObjectACL _objectACL;
    private Nullable`1<bool> _oplocksEnabled;
    private string _path;
    private Nullable`1<bool> _readOnly;
    private Nullable`1<bool> _requesterPays;
    private string _role;
    private Nullable`1<bool> _smbaclEnabled;
    private List`1<Tag> _tags;
    private List`1<string> _validUserList;
    private string _vpcEndpointDNSName;
    public Nullable`1<bool> AccessBasedEnumeration { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> AdminUserList { get; public set; }
    [AWSPropertyAttribute]
public string AuditDestinationARN { get; public set; }
    [AWSPropertyAttribute]
public string Authentication { get; public set; }
    [AWSPropertyAttribute]
public string BucketRegion { get; public set; }
    public CacheAttributes CacheAttributes { get; public set; }
    public CaseSensitivity CaseSensitivity { get; public set; }
    [AWSPropertyAttribute]
public string DefaultStorageClass { get; public set; }
    [AWSPropertyAttribute]
public string FileShareARN { get; public set; }
    [AWSPropertyAttribute]
public string FileShareId { get; public set; }
    [AWSPropertyAttribute]
public string FileShareName { get; public set; }
    [AWSPropertyAttribute]
public string FileShareStatus { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public Nullable`1<bool> GuessMIMETypeEnabled { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> InvalidUserList { get; public set; }
    public Nullable`1<bool> KMSEncrypted { get; public set; }
    [AWSPropertyAttribute]
public string KMSKey { get; public set; }
    [AWSPropertyAttribute]
public string LocationARN { get; public set; }
    [AWSPropertyAttribute]
public string NotificationPolicy { get; public set; }
    public ObjectACL ObjectACL { get; public set; }
    public Nullable`1<bool> OplocksEnabled { get; public set; }
    public string Path { get; public set; }
    public Nullable`1<bool> ReadOnly { get; public set; }
    public Nullable`1<bool> RequesterPays { get; public set; }
    [AWSPropertyAttribute]
public string Role { get; public set; }
    public Nullable`1<bool> SMBACLEnabled { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ValidUserList { get; public set; }
    [AWSPropertyAttribute]
public string VPCEndpointDNSName { get; public set; }
    public Nullable`1<bool> get_AccessBasedEnumeration();
    public void set_AccessBasedEnumeration(Nullable`1<bool> value);
    internal bool IsSetAccessBasedEnumeration();
    public List`1<string> get_AdminUserList();
    public void set_AdminUserList(List`1<string> value);
    internal bool IsSetAdminUserList();
    public string get_AuditDestinationARN();
    public void set_AuditDestinationARN(string value);
    internal bool IsSetAuditDestinationARN();
    public string get_Authentication();
    public void set_Authentication(string value);
    internal bool IsSetAuthentication();
    public string get_BucketRegion();
    public void set_BucketRegion(string value);
    internal bool IsSetBucketRegion();
    public CacheAttributes get_CacheAttributes();
    public void set_CacheAttributes(CacheAttributes value);
    internal bool IsSetCacheAttributes();
    public CaseSensitivity get_CaseSensitivity();
    public void set_CaseSensitivity(CaseSensitivity value);
    internal bool IsSetCaseSensitivity();
    public string get_DefaultStorageClass();
    public void set_DefaultStorageClass(string value);
    internal bool IsSetDefaultStorageClass();
    public string get_FileShareARN();
    public void set_FileShareARN(string value);
    internal bool IsSetFileShareARN();
    public string get_FileShareId();
    public void set_FileShareId(string value);
    internal bool IsSetFileShareId();
    public string get_FileShareName();
    public void set_FileShareName(string value);
    internal bool IsSetFileShareName();
    public string get_FileShareStatus();
    public void set_FileShareStatus(string value);
    internal bool IsSetFileShareStatus();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public Nullable`1<bool> get_GuessMIMETypeEnabled();
    public void set_GuessMIMETypeEnabled(Nullable`1<bool> value);
    internal bool IsSetGuessMIMETypeEnabled();
    public List`1<string> get_InvalidUserList();
    public void set_InvalidUserList(List`1<string> value);
    internal bool IsSetInvalidUserList();
    public Nullable`1<bool> get_KMSEncrypted();
    public void set_KMSEncrypted(Nullable`1<bool> value);
    internal bool IsSetKMSEncrypted();
    public string get_KMSKey();
    public void set_KMSKey(string value);
    internal bool IsSetKMSKey();
    public string get_LocationARN();
    public void set_LocationARN(string value);
    internal bool IsSetLocationARN();
    public string get_NotificationPolicy();
    public void set_NotificationPolicy(string value);
    internal bool IsSetNotificationPolicy();
    public ObjectACL get_ObjectACL();
    public void set_ObjectACL(ObjectACL value);
    internal bool IsSetObjectACL();
    public Nullable`1<bool> get_OplocksEnabled();
    public void set_OplocksEnabled(Nullable`1<bool> value);
    internal bool IsSetOplocksEnabled();
    public string get_Path();
    public void set_Path(string value);
    internal bool IsSetPath();
    public Nullable`1<bool> get_ReadOnly();
    public void set_ReadOnly(Nullable`1<bool> value);
    internal bool IsSetReadOnly();
    public Nullable`1<bool> get_RequesterPays();
    public void set_RequesterPays(Nullable`1<bool> value);
    internal bool IsSetRequesterPays();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public Nullable`1<bool> get_SMBACLEnabled();
    public void set_SMBACLEnabled(Nullable`1<bool> value);
    internal bool IsSetSMBACLEnabled();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public List`1<string> get_ValidUserList();
    public void set_ValidUserList(List`1<string> value);
    internal bool IsSetValidUserList();
    public string get_VPCEndpointDNSName();
    public void set_VPCEndpointDNSName(string value);
    internal bool IsSetVPCEndpointDNSName();
}
public class Amazon.StorageGateway.Model.SMBLocalGroups : object {
    private List`1<string> _gatewayAdmins;
    [AWSPropertyAttribute]
public List`1<string> GatewayAdmins { get; public set; }
    public List`1<string> get_GatewayAdmins();
    public void set_GatewayAdmins(List`1<string> value);
    internal bool IsSetGatewayAdmins();
}
public class Amazon.StorageGateway.Model.SoftwareUpdatePreferences : object {
    private AutomaticUpdatePolicy _automaticUpdatePolicy;
    public AutomaticUpdatePolicy AutomaticUpdatePolicy { get; public set; }
    public AutomaticUpdatePolicy get_AutomaticUpdatePolicy();
    public void set_AutomaticUpdatePolicy(AutomaticUpdatePolicy value);
    internal bool IsSetAutomaticUpdatePolicy();
}
public class Amazon.StorageGateway.Model.StartAvailabilityMonitorTestRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.StartAvailabilityMonitorTestResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.StartGatewayRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.StartGatewayResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.StorageGatewayError : object {
    private ErrorCode _errorCode;
    private Dictionary`2<string, string> _errorDetails;
    public ErrorCode ErrorCode { get; public set; }
    public Dictionary`2<string, string> ErrorDetails { get; public set; }
    public ErrorCode get_ErrorCode();
    public void set_ErrorCode(ErrorCode value);
    internal bool IsSetErrorCode();
    public Dictionary`2<string, string> get_ErrorDetails();
    public void set_ErrorDetails(Dictionary`2<string, string> value);
    internal bool IsSetErrorDetails();
}
public class Amazon.StorageGateway.Model.StorageGatewayPaginatorFactory : object {
    private IAmazonStorageGateway client;
    internal StorageGatewayPaginatorFactory(IAmazonStorageGateway client);
    public sealed virtual IDescribeTapeArchivesPaginator DescribeTapeArchives(DescribeTapeArchivesRequest request);
    public sealed virtual IDescribeTapeRecoveryPointsPaginator DescribeTapeRecoveryPoints(DescribeTapeRecoveryPointsRequest request);
    public sealed virtual IDescribeTapesPaginator DescribeTapes(DescribeTapesRequest request);
    public sealed virtual IDescribeVTLDevicesPaginator DescribeVTLDevices(DescribeVTLDevicesRequest request);
    public sealed virtual IListFileSharesPaginator ListFileShares(ListFileSharesRequest request);
    public sealed virtual IListFileSystemAssociationsPaginator ListFileSystemAssociations(ListFileSystemAssociationsRequest request);
    public sealed virtual IListGatewaysPaginator ListGateways(ListGatewaysRequest request);
    public sealed virtual IListTagsForResourcePaginator ListTagsForResource(ListTagsForResourceRequest request);
    public sealed virtual IListTapePoolsPaginator ListTapePools(ListTapePoolsRequest request);
    public sealed virtual IListTapesPaginator ListTapes(ListTapesRequest request);
    public sealed virtual IListVolumesPaginator ListVolumes(ListVolumesRequest request);
}
public class Amazon.StorageGateway.Model.StorediSCSIVolume : object {
    private Nullable`1<DateTime> _createdDate;
    private string _kmsKey;
    private Nullable`1<bool> _preservedExistingData;
    private string _sourceSnapshotId;
    private string _targetName;
    private string _volumeARN;
    private string _volumeAttachmentStatus;
    private string _volumeDiskId;
    private string _volumeId;
    private VolumeiSCSIAttributes _volumeiSCSIAttributes;
    private Nullable`1<double> _volumeProgress;
    private Nullable`1<long> _volumeSizeInBytes;
    private string _volumeStatus;
    private string _volumeType;
    private Nullable`1<long> _volumeUsedInBytes;
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    [AWSPropertyAttribute]
public string KMSKey { get; public set; }
    public Nullable`1<bool> PreservedExistingData { get; public set; }
    public string SourceSnapshotId { get; public set; }
    [AWSPropertyAttribute]
public string TargetName { get; public set; }
    [AWSPropertyAttribute]
public string VolumeARN { get; public set; }
    [AWSPropertyAttribute]
public string VolumeAttachmentStatus { get; public set; }
    [AWSPropertyAttribute]
public string VolumeDiskId { get; public set; }
    [AWSPropertyAttribute]
public string VolumeId { get; public set; }
    public VolumeiSCSIAttributes VolumeiSCSIAttributes { get; public set; }
    public Nullable`1<double> VolumeProgress { get; public set; }
    public Nullable`1<long> VolumeSizeInBytes { get; public set; }
    [AWSPropertyAttribute]
public string VolumeStatus { get; public set; }
    [AWSPropertyAttribute]
public string VolumeType { get; public set; }
    public Nullable`1<long> VolumeUsedInBytes { get; public set; }
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_KMSKey();
    public void set_KMSKey(string value);
    internal bool IsSetKMSKey();
    public Nullable`1<bool> get_PreservedExistingData();
    public void set_PreservedExistingData(Nullable`1<bool> value);
    internal bool IsSetPreservedExistingData();
    public string get_SourceSnapshotId();
    public void set_SourceSnapshotId(string value);
    internal bool IsSetSourceSnapshotId();
    public string get_TargetName();
    public void set_TargetName(string value);
    internal bool IsSetTargetName();
    public string get_VolumeARN();
    public void set_VolumeARN(string value);
    internal bool IsSetVolumeARN();
    public string get_VolumeAttachmentStatus();
    public void set_VolumeAttachmentStatus(string value);
    internal bool IsSetVolumeAttachmentStatus();
    public string get_VolumeDiskId();
    public void set_VolumeDiskId(string value);
    internal bool IsSetVolumeDiskId();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
    public VolumeiSCSIAttributes get_VolumeiSCSIAttributes();
    public void set_VolumeiSCSIAttributes(VolumeiSCSIAttributes value);
    internal bool IsSetVolumeiSCSIAttributes();
    public Nullable`1<double> get_VolumeProgress();
    public void set_VolumeProgress(Nullable`1<double> value);
    internal bool IsSetVolumeProgress();
    public Nullable`1<long> get_VolumeSizeInBytes();
    public void set_VolumeSizeInBytes(Nullable`1<long> value);
    internal bool IsSetVolumeSizeInBytes();
    public string get_VolumeStatus();
    public void set_VolumeStatus(string value);
    internal bool IsSetVolumeStatus();
    public string get_VolumeType();
    public void set_VolumeType(string value);
    internal bool IsSetVolumeType();
    public Nullable`1<long> get_VolumeUsedInBytes();
    public void set_VolumeUsedInBytes(Nullable`1<long> value);
    internal bool IsSetVolumeUsedInBytes();
}
public class Amazon.StorageGateway.Model.Tag : object {
    private string _key;
    private string _value;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.StorageGateway.Model.Tape : object {
    private string _kmsKey;
    private Nullable`1<DateTime> _poolEntryDate;
    private string _poolId;
    private Nullable`1<double> _progress;
    private Nullable`1<DateTime> _retentionStartDate;
    private string _tapeARN;
    private string _tapeBarcode;
    private Nullable`1<DateTime> _tapeCreatedDate;
    private Nullable`1<long> _tapeSizeInBytes;
    private string _tapeStatus;
    private Nullable`1<long> _tapeUsedInBytes;
    private string _vtlDevice;
    private Nullable`1<bool> _worm;
    [AWSPropertyAttribute]
public string KMSKey { get; public set; }
    public Nullable`1<DateTime> PoolEntryDate { get; public set; }
    [AWSPropertyAttribute]
public string PoolId { get; public set; }
    public Nullable`1<double> Progress { get; public set; }
    public Nullable`1<DateTime> RetentionStartDate { get; public set; }
    [AWSPropertyAttribute]
public string TapeARN { get; public set; }
    [AWSPropertyAttribute]
public string TapeBarcode { get; public set; }
    public Nullable`1<DateTime> TapeCreatedDate { get; public set; }
    public Nullable`1<long> TapeSizeInBytes { get; public set; }
    public string TapeStatus { get; public set; }
    public Nullable`1<long> TapeUsedInBytes { get; public set; }
    [AWSPropertyAttribute]
public string VTLDevice { get; public set; }
    public Nullable`1<bool> Worm { get; public set; }
    public string get_KMSKey();
    public void set_KMSKey(string value);
    internal bool IsSetKMSKey();
    public Nullable`1<DateTime> get_PoolEntryDate();
    public void set_PoolEntryDate(Nullable`1<DateTime> value);
    internal bool IsSetPoolEntryDate();
    public string get_PoolId();
    public void set_PoolId(string value);
    internal bool IsSetPoolId();
    public Nullable`1<double> get_Progress();
    public void set_Progress(Nullable`1<double> value);
    internal bool IsSetProgress();
    public Nullable`1<DateTime> get_RetentionStartDate();
    public void set_RetentionStartDate(Nullable`1<DateTime> value);
    internal bool IsSetRetentionStartDate();
    public string get_TapeARN();
    public void set_TapeARN(string value);
    internal bool IsSetTapeARN();
    public string get_TapeBarcode();
    public void set_TapeBarcode(string value);
    internal bool IsSetTapeBarcode();
    public Nullable`1<DateTime> get_TapeCreatedDate();
    public void set_TapeCreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetTapeCreatedDate();
    public Nullable`1<long> get_TapeSizeInBytes();
    public void set_TapeSizeInBytes(Nullable`1<long> value);
    internal bool IsSetTapeSizeInBytes();
    public string get_TapeStatus();
    public void set_TapeStatus(string value);
    internal bool IsSetTapeStatus();
    public Nullable`1<long> get_TapeUsedInBytes();
    public void set_TapeUsedInBytes(Nullable`1<long> value);
    internal bool IsSetTapeUsedInBytes();
    public string get_VTLDevice();
    public void set_VTLDevice(string value);
    internal bool IsSetVTLDevice();
    public Nullable`1<bool> get_Worm();
    public void set_Worm(Nullable`1<bool> value);
    internal bool IsSetWorm();
}
public class Amazon.StorageGateway.Model.TapeArchive : object {
    private Nullable`1<DateTime> _completionTime;
    private string _kmsKey;
    private Nullable`1<DateTime> _poolEntryDate;
    private string _poolId;
    private Nullable`1<DateTime> _retentionStartDate;
    private string _retrievedTo;
    private string _tapeARN;
    private string _tapeBarcode;
    private Nullable`1<DateTime> _tapeCreatedDate;
    private Nullable`1<long> _tapeSizeInBytes;
    private string _tapeStatus;
    private Nullable`1<long> _tapeUsedInBytes;
    private Nullable`1<bool> _worm;
    public Nullable`1<DateTime> CompletionTime { get; public set; }
    [AWSPropertyAttribute]
public string KMSKey { get; public set; }
    public Nullable`1<DateTime> PoolEntryDate { get; public set; }
    [AWSPropertyAttribute]
public string PoolId { get; public set; }
    public Nullable`1<DateTime> RetentionStartDate { get; public set; }
    [AWSPropertyAttribute]
public string RetrievedTo { get; public set; }
    [AWSPropertyAttribute]
public string TapeARN { get; public set; }
    [AWSPropertyAttribute]
public string TapeBarcode { get; public set; }
    public Nullable`1<DateTime> TapeCreatedDate { get; public set; }
    public Nullable`1<long> TapeSizeInBytes { get; public set; }
    public string TapeStatus { get; public set; }
    public Nullable`1<long> TapeUsedInBytes { get; public set; }
    public Nullable`1<bool> Worm { get; public set; }
    public Nullable`1<DateTime> get_CompletionTime();
    public void set_CompletionTime(Nullable`1<DateTime> value);
    internal bool IsSetCompletionTime();
    public string get_KMSKey();
    public void set_KMSKey(string value);
    internal bool IsSetKMSKey();
    public Nullable`1<DateTime> get_PoolEntryDate();
    public void set_PoolEntryDate(Nullable`1<DateTime> value);
    internal bool IsSetPoolEntryDate();
    public string get_PoolId();
    public void set_PoolId(string value);
    internal bool IsSetPoolId();
    public Nullable`1<DateTime> get_RetentionStartDate();
    public void set_RetentionStartDate(Nullable`1<DateTime> value);
    internal bool IsSetRetentionStartDate();
    public string get_RetrievedTo();
    public void set_RetrievedTo(string value);
    internal bool IsSetRetrievedTo();
    public string get_TapeARN();
    public void set_TapeARN(string value);
    internal bool IsSetTapeARN();
    public string get_TapeBarcode();
    public void set_TapeBarcode(string value);
    internal bool IsSetTapeBarcode();
    public Nullable`1<DateTime> get_TapeCreatedDate();
    public void set_TapeCreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetTapeCreatedDate();
    public Nullable`1<long> get_TapeSizeInBytes();
    public void set_TapeSizeInBytes(Nullable`1<long> value);
    internal bool IsSetTapeSizeInBytes();
    public string get_TapeStatus();
    public void set_TapeStatus(string value);
    internal bool IsSetTapeStatus();
    public Nullable`1<long> get_TapeUsedInBytes();
    public void set_TapeUsedInBytes(Nullable`1<long> value);
    internal bool IsSetTapeUsedInBytes();
    public Nullable`1<bool> get_Worm();
    public void set_Worm(Nullable`1<bool> value);
    internal bool IsSetWorm();
}
public class Amazon.StorageGateway.Model.TapeInfo : object {
    private string _gatewayARN;
    private Nullable`1<DateTime> _poolEntryDate;
    private string _poolId;
    private Nullable`1<DateTime> _retentionStartDate;
    private string _tapeARN;
    private string _tapeBarcode;
    private Nullable`1<long> _tapeSizeInBytes;
    private string _tapeStatus;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public Nullable`1<DateTime> PoolEntryDate { get; public set; }
    [AWSPropertyAttribute]
public string PoolId { get; public set; }
    public Nullable`1<DateTime> RetentionStartDate { get; public set; }
    [AWSPropertyAttribute]
public string TapeARN { get; public set; }
    [AWSPropertyAttribute]
public string TapeBarcode { get; public set; }
    public Nullable`1<long> TapeSizeInBytes { get; public set; }
    public string TapeStatus { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public Nullable`1<DateTime> get_PoolEntryDate();
    public void set_PoolEntryDate(Nullable`1<DateTime> value);
    internal bool IsSetPoolEntryDate();
    public string get_PoolId();
    public void set_PoolId(string value);
    internal bool IsSetPoolId();
    public Nullable`1<DateTime> get_RetentionStartDate();
    public void set_RetentionStartDate(Nullable`1<DateTime> value);
    internal bool IsSetRetentionStartDate();
    public string get_TapeARN();
    public void set_TapeARN(string value);
    internal bool IsSetTapeARN();
    public string get_TapeBarcode();
    public void set_TapeBarcode(string value);
    internal bool IsSetTapeBarcode();
    public Nullable`1<long> get_TapeSizeInBytes();
    public void set_TapeSizeInBytes(Nullable`1<long> value);
    internal bool IsSetTapeSizeInBytes();
    public string get_TapeStatus();
    public void set_TapeStatus(string value);
    internal bool IsSetTapeStatus();
}
public class Amazon.StorageGateway.Model.TapeRecoveryPointInfo : object {
    private string _tapeARN;
    private Nullable`1<DateTime> _tapeRecoveryPointTime;
    private Nullable`1<long> _tapeSizeInBytes;
    private string _tapeStatus;
    [AWSPropertyAttribute]
public string TapeARN { get; public set; }
    public Nullable`1<DateTime> TapeRecoveryPointTime { get; public set; }
    public Nullable`1<long> TapeSizeInBytes { get; public set; }
    public string TapeStatus { get; public set; }
    public string get_TapeARN();
    public void set_TapeARN(string value);
    internal bool IsSetTapeARN();
    public Nullable`1<DateTime> get_TapeRecoveryPointTime();
    public void set_TapeRecoveryPointTime(Nullable`1<DateTime> value);
    internal bool IsSetTapeRecoveryPointTime();
    public Nullable`1<long> get_TapeSizeInBytes();
    public void set_TapeSizeInBytes(Nullable`1<long> value);
    internal bool IsSetTapeSizeInBytes();
    public string get_TapeStatus();
    public void set_TapeStatus(string value);
    internal bool IsSetTapeStatus();
}
public class Amazon.StorageGateway.Model.UpdateAutomaticTapeCreationPolicyRequest : AmazonStorageGatewayRequest {
    private List`1<AutomaticTapeCreationRule> _automaticTapeCreationRules;
    private string _gatewayARN;
    [AWSPropertyAttribute]
public List`1<AutomaticTapeCreationRule> AutomaticTapeCreationRules { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public List`1<AutomaticTapeCreationRule> get_AutomaticTapeCreationRules();
    public void set_AutomaticTapeCreationRules(List`1<AutomaticTapeCreationRule> value);
    internal bool IsSetAutomaticTapeCreationRules();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.UpdateAutomaticTapeCreationPolicyResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.UpdateBandwidthRateLimitRequest : AmazonStorageGatewayRequest {
    private Nullable`1<long> _averageDownloadRateLimitInBitsPerSec;
    private Nullable`1<long> _averageUploadRateLimitInBitsPerSec;
    private string _gatewayARN;
    [AWSPropertyAttribute]
public Nullable`1<long> AverageDownloadRateLimitInBitsPerSec { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> AverageUploadRateLimitInBitsPerSec { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public Nullable`1<long> get_AverageDownloadRateLimitInBitsPerSec();
    public void set_AverageDownloadRateLimitInBitsPerSec(Nullable`1<long> value);
    internal bool IsSetAverageDownloadRateLimitInBitsPerSec();
    public Nullable`1<long> get_AverageUploadRateLimitInBitsPerSec();
    public void set_AverageUploadRateLimitInBitsPerSec(Nullable`1<long> value);
    internal bool IsSetAverageUploadRateLimitInBitsPerSec();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.UpdateBandwidthRateLimitResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.UpdateBandwidthRateLimitScheduleRequest : AmazonStorageGatewayRequest {
    private List`1<BandwidthRateLimitInterval> _bandwidthRateLimitIntervals;
    private string _gatewayARN;
    [AWSPropertyAttribute]
public List`1<BandwidthRateLimitInterval> BandwidthRateLimitIntervals { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public List`1<BandwidthRateLimitInterval> get_BandwidthRateLimitIntervals();
    public void set_BandwidthRateLimitIntervals(List`1<BandwidthRateLimitInterval> value);
    internal bool IsSetBandwidthRateLimitIntervals();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.UpdateBandwidthRateLimitScheduleResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.UpdateChapCredentialsRequest : AmazonStorageGatewayRequest {
    private string _initiatorName;
    private string _secretToAuthenticateInitiator;
    private string _secretToAuthenticateTarget;
    private string _targetARN;
    [AWSPropertyAttribute]
public string InitiatorName { get; public set; }
    [AWSPropertyAttribute]
public string SecretToAuthenticateInitiator { get; public set; }
    [AWSPropertyAttribute]
public string SecretToAuthenticateTarget { get; public set; }
    [AWSPropertyAttribute]
public string TargetARN { get; public set; }
    public string get_InitiatorName();
    public void set_InitiatorName(string value);
    internal bool IsSetInitiatorName();
    public string get_SecretToAuthenticateInitiator();
    public void set_SecretToAuthenticateInitiator(string value);
    internal bool IsSetSecretToAuthenticateInitiator();
    public string get_SecretToAuthenticateTarget();
    public void set_SecretToAuthenticateTarget(string value);
    internal bool IsSetSecretToAuthenticateTarget();
    public string get_TargetARN();
    public void set_TargetARN(string value);
    internal bool IsSetTargetARN();
}
public class Amazon.StorageGateway.Model.UpdateChapCredentialsResponse : AmazonWebServiceResponse {
    private string _initiatorName;
    private string _targetARN;
    [AWSPropertyAttribute]
public string InitiatorName { get; public set; }
    [AWSPropertyAttribute]
public string TargetARN { get; public set; }
    public string get_InitiatorName();
    public void set_InitiatorName(string value);
    internal bool IsSetInitiatorName();
    public string get_TargetARN();
    public void set_TargetARN(string value);
    internal bool IsSetTargetARN();
}
public class Amazon.StorageGateway.Model.UpdateFileSystemAssociationRequest : AmazonStorageGatewayRequest {
    private string _auditDestinationARN;
    private CacheAttributes _cacheAttributes;
    private string _fileSystemAssociationARN;
    private string _password;
    private string _userName;
    [AWSPropertyAttribute]
public string AuditDestinationARN { get; public set; }
    public CacheAttributes CacheAttributes { get; public set; }
    [AWSPropertyAttribute]
public string FileSystemAssociationARN { get; public set; }
    [AWSPropertyAttribute]
public string Password { get; public set; }
    [AWSPropertyAttribute]
public string UserName { get; public set; }
    public string get_AuditDestinationARN();
    public void set_AuditDestinationARN(string value);
    internal bool IsSetAuditDestinationARN();
    public CacheAttributes get_CacheAttributes();
    public void set_CacheAttributes(CacheAttributes value);
    internal bool IsSetCacheAttributes();
    public string get_FileSystemAssociationARN();
    public void set_FileSystemAssociationARN(string value);
    internal bool IsSetFileSystemAssociationARN();
    public string get_Password();
    public void set_Password(string value);
    internal bool IsSetPassword();
    public string get_UserName();
    public void set_UserName(string value);
    internal bool IsSetUserName();
}
public class Amazon.StorageGateway.Model.UpdateFileSystemAssociationResponse : AmazonWebServiceResponse {
    private string _fileSystemAssociationARN;
    [AWSPropertyAttribute]
public string FileSystemAssociationARN { get; public set; }
    public string get_FileSystemAssociationARN();
    public void set_FileSystemAssociationARN(string value);
    internal bool IsSetFileSystemAssociationARN();
}
public class Amazon.StorageGateway.Model.UpdateGatewayInformationRequest : AmazonStorageGatewayRequest {
    private string _cloudWatchLogGroupARN;
    private string _gatewayARN;
    private GatewayCapacity _gatewayCapacity;
    private string _gatewayName;
    private string _gatewayTimezone;
    [AWSPropertyAttribute]
public string CloudWatchLogGroupARN { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public GatewayCapacity GatewayCapacity { get; public set; }
    [AWSPropertyAttribute]
public string GatewayName { get; public set; }
    [AWSPropertyAttribute]
public string GatewayTimezone { get; public set; }
    public string get_CloudWatchLogGroupARN();
    public void set_CloudWatchLogGroupARN(string value);
    internal bool IsSetCloudWatchLogGroupARN();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public GatewayCapacity get_GatewayCapacity();
    public void set_GatewayCapacity(GatewayCapacity value);
    internal bool IsSetGatewayCapacity();
    public string get_GatewayName();
    public void set_GatewayName(string value);
    internal bool IsSetGatewayName();
    public string get_GatewayTimezone();
    public void set_GatewayTimezone(string value);
    internal bool IsSetGatewayTimezone();
}
public class Amazon.StorageGateway.Model.UpdateGatewayInformationResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    private string _gatewayName;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string GatewayName { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public string get_GatewayName();
    public void set_GatewayName(string value);
    internal bool IsSetGatewayName();
}
public class Amazon.StorageGateway.Model.UpdateGatewaySoftwareNowRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.UpdateGatewaySoftwareNowResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.UpdateMaintenanceStartTimeRequest : AmazonStorageGatewayRequest {
    private Nullable`1<int> _dayOfMonth;
    private Nullable`1<int> _dayOfWeek;
    private string _gatewayARN;
    private Nullable`1<int> _hourOfDay;
    private Nullable`1<int> _minuteOfHour;
    private SoftwareUpdatePreferences _softwareUpdatePreferences;
    [AWSPropertyAttribute]
public Nullable`1<int> DayOfMonth { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> DayOfWeek { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> HourOfDay { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MinuteOfHour { get; public set; }
    public SoftwareUpdatePreferences SoftwareUpdatePreferences { get; public set; }
    public Nullable`1<int> get_DayOfMonth();
    public void set_DayOfMonth(Nullable`1<int> value);
    internal bool IsSetDayOfMonth();
    public Nullable`1<int> get_DayOfWeek();
    public void set_DayOfWeek(Nullable`1<int> value);
    internal bool IsSetDayOfWeek();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public Nullable`1<int> get_HourOfDay();
    public void set_HourOfDay(Nullable`1<int> value);
    internal bool IsSetHourOfDay();
    public Nullable`1<int> get_MinuteOfHour();
    public void set_MinuteOfHour(Nullable`1<int> value);
    internal bool IsSetMinuteOfHour();
    public SoftwareUpdatePreferences get_SoftwareUpdatePreferences();
    public void set_SoftwareUpdatePreferences(SoftwareUpdatePreferences value);
    internal bool IsSetSoftwareUpdatePreferences();
}
public class Amazon.StorageGateway.Model.UpdateMaintenanceStartTimeResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.UpdateNFSFileShareRequest : AmazonStorageGatewayRequest {
    private string _auditDestinationARN;
    private CacheAttributes _cacheAttributes;
    private List`1<string> _clientList;
    private string _defaultStorageClass;
    private string _fileShareARN;
    private string _fileShareName;
    private Nullable`1<bool> _guessMIMETypeEnabled;
    private Nullable`1<bool> _kmsEncrypted;
    private string _kmsKey;
    private NFSFileShareDefaults _nfsFileShareDefaults;
    private string _notificationPolicy;
    private ObjectACL _objectACL;
    private Nullable`1<bool> _readOnly;
    private Nullable`1<bool> _requesterPays;
    private string _squash;
    [AWSPropertyAttribute]
public string AuditDestinationARN { get; public set; }
    public CacheAttributes CacheAttributes { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ClientList { get; public set; }
    [AWSPropertyAttribute]
public string DefaultStorageClass { get; public set; }
    [AWSPropertyAttribute]
public string FileShareARN { get; public set; }
    [AWSPropertyAttribute]
public string FileShareName { get; public set; }
    public Nullable`1<bool> GuessMIMETypeEnabled { get; public set; }
    public Nullable`1<bool> KMSEncrypted { get; public set; }
    [AWSPropertyAttribute]
public string KMSKey { get; public set; }
    public NFSFileShareDefaults NFSFileShareDefaults { get; public set; }
    [AWSPropertyAttribute]
public string NotificationPolicy { get; public set; }
    public ObjectACL ObjectACL { get; public set; }
    public Nullable`1<bool> ReadOnly { get; public set; }
    public Nullable`1<bool> RequesterPays { get; public set; }
    [AWSPropertyAttribute]
public string Squash { get; public set; }
    public string get_AuditDestinationARN();
    public void set_AuditDestinationARN(string value);
    internal bool IsSetAuditDestinationARN();
    public CacheAttributes get_CacheAttributes();
    public void set_CacheAttributes(CacheAttributes value);
    internal bool IsSetCacheAttributes();
    public List`1<string> get_ClientList();
    public void set_ClientList(List`1<string> value);
    internal bool IsSetClientList();
    public string get_DefaultStorageClass();
    public void set_DefaultStorageClass(string value);
    internal bool IsSetDefaultStorageClass();
    public string get_FileShareARN();
    public void set_FileShareARN(string value);
    internal bool IsSetFileShareARN();
    public string get_FileShareName();
    public void set_FileShareName(string value);
    internal bool IsSetFileShareName();
    public Nullable`1<bool> get_GuessMIMETypeEnabled();
    public void set_GuessMIMETypeEnabled(Nullable`1<bool> value);
    internal bool IsSetGuessMIMETypeEnabled();
    public Nullable`1<bool> get_KMSEncrypted();
    public void set_KMSEncrypted(Nullable`1<bool> value);
    internal bool IsSetKMSEncrypted();
    public string get_KMSKey();
    public void set_KMSKey(string value);
    internal bool IsSetKMSKey();
    public NFSFileShareDefaults get_NFSFileShareDefaults();
    public void set_NFSFileShareDefaults(NFSFileShareDefaults value);
    internal bool IsSetNFSFileShareDefaults();
    public string get_NotificationPolicy();
    public void set_NotificationPolicy(string value);
    internal bool IsSetNotificationPolicy();
    public ObjectACL get_ObjectACL();
    public void set_ObjectACL(ObjectACL value);
    internal bool IsSetObjectACL();
    public Nullable`1<bool> get_ReadOnly();
    public void set_ReadOnly(Nullable`1<bool> value);
    internal bool IsSetReadOnly();
    public Nullable`1<bool> get_RequesterPays();
    public void set_RequesterPays(Nullable`1<bool> value);
    internal bool IsSetRequesterPays();
    public string get_Squash();
    public void set_Squash(string value);
    internal bool IsSetSquash();
}
public class Amazon.StorageGateway.Model.UpdateNFSFileShareResponse : AmazonWebServiceResponse {
    private string _fileShareARN;
    [AWSPropertyAttribute]
public string FileShareARN { get; public set; }
    public string get_FileShareARN();
    public void set_FileShareARN(string value);
    internal bool IsSetFileShareARN();
}
public class Amazon.StorageGateway.Model.UpdateSMBFileShareRequest : AmazonStorageGatewayRequest {
    private Nullable`1<bool> _accessBasedEnumeration;
    private List`1<string> _adminUserList;
    private string _auditDestinationARN;
    private CacheAttributes _cacheAttributes;
    private CaseSensitivity _caseSensitivity;
    private string _defaultStorageClass;
    private string _fileShareARN;
    private string _fileShareName;
    private Nullable`1<bool> _guessMIMETypeEnabled;
    private List`1<string> _invalidUserList;
    private Nullable`1<bool> _kmsEncrypted;
    private string _kmsKey;
    private string _notificationPolicy;
    private ObjectACL _objectACL;
    private Nullable`1<bool> _oplocksEnabled;
    private Nullable`1<bool> _readOnly;
    private Nullable`1<bool> _requesterPays;
    private Nullable`1<bool> _smbaclEnabled;
    private List`1<string> _validUserList;
    public Nullable`1<bool> AccessBasedEnumeration { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> AdminUserList { get; public set; }
    [AWSPropertyAttribute]
public string AuditDestinationARN { get; public set; }
    public CacheAttributes CacheAttributes { get; public set; }
    public CaseSensitivity CaseSensitivity { get; public set; }
    [AWSPropertyAttribute]
public string DefaultStorageClass { get; public set; }
    [AWSPropertyAttribute]
public string FileShareARN { get; public set; }
    [AWSPropertyAttribute]
public string FileShareName { get; public set; }
    public Nullable`1<bool> GuessMIMETypeEnabled { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> InvalidUserList { get; public set; }
    public Nullable`1<bool> KMSEncrypted { get; public set; }
    [AWSPropertyAttribute]
public string KMSKey { get; public set; }
    [AWSPropertyAttribute]
public string NotificationPolicy { get; public set; }
    public ObjectACL ObjectACL { get; public set; }
    public Nullable`1<bool> OplocksEnabled { get; public set; }
    public Nullable`1<bool> ReadOnly { get; public set; }
    public Nullable`1<bool> RequesterPays { get; public set; }
    public Nullable`1<bool> SMBACLEnabled { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ValidUserList { get; public set; }
    public Nullable`1<bool> get_AccessBasedEnumeration();
    public void set_AccessBasedEnumeration(Nullable`1<bool> value);
    internal bool IsSetAccessBasedEnumeration();
    public List`1<string> get_AdminUserList();
    public void set_AdminUserList(List`1<string> value);
    internal bool IsSetAdminUserList();
    public string get_AuditDestinationARN();
    public void set_AuditDestinationARN(string value);
    internal bool IsSetAuditDestinationARN();
    public CacheAttributes get_CacheAttributes();
    public void set_CacheAttributes(CacheAttributes value);
    internal bool IsSetCacheAttributes();
    public CaseSensitivity get_CaseSensitivity();
    public void set_CaseSensitivity(CaseSensitivity value);
    internal bool IsSetCaseSensitivity();
    public string get_DefaultStorageClass();
    public void set_DefaultStorageClass(string value);
    internal bool IsSetDefaultStorageClass();
    public string get_FileShareARN();
    public void set_FileShareARN(string value);
    internal bool IsSetFileShareARN();
    public string get_FileShareName();
    public void set_FileShareName(string value);
    internal bool IsSetFileShareName();
    public Nullable`1<bool> get_GuessMIMETypeEnabled();
    public void set_GuessMIMETypeEnabled(Nullable`1<bool> value);
    internal bool IsSetGuessMIMETypeEnabled();
    public List`1<string> get_InvalidUserList();
    public void set_InvalidUserList(List`1<string> value);
    internal bool IsSetInvalidUserList();
    public Nullable`1<bool> get_KMSEncrypted();
    public void set_KMSEncrypted(Nullable`1<bool> value);
    internal bool IsSetKMSEncrypted();
    public string get_KMSKey();
    public void set_KMSKey(string value);
    internal bool IsSetKMSKey();
    public string get_NotificationPolicy();
    public void set_NotificationPolicy(string value);
    internal bool IsSetNotificationPolicy();
    public ObjectACL get_ObjectACL();
    public void set_ObjectACL(ObjectACL value);
    internal bool IsSetObjectACL();
    public Nullable`1<bool> get_OplocksEnabled();
    public void set_OplocksEnabled(Nullable`1<bool> value);
    internal bool IsSetOplocksEnabled();
    public Nullable`1<bool> get_ReadOnly();
    public void set_ReadOnly(Nullable`1<bool> value);
    internal bool IsSetReadOnly();
    public Nullable`1<bool> get_RequesterPays();
    public void set_RequesterPays(Nullable`1<bool> value);
    internal bool IsSetRequesterPays();
    public Nullable`1<bool> get_SMBACLEnabled();
    public void set_SMBACLEnabled(Nullable`1<bool> value);
    internal bool IsSetSMBACLEnabled();
    public List`1<string> get_ValidUserList();
    public void set_ValidUserList(List`1<string> value);
    internal bool IsSetValidUserList();
}
public class Amazon.StorageGateway.Model.UpdateSMBFileShareResponse : AmazonWebServiceResponse {
    private string _fileShareARN;
    [AWSPropertyAttribute]
public string FileShareARN { get; public set; }
    public string get_FileShareARN();
    public void set_FileShareARN(string value);
    internal bool IsSetFileShareARN();
}
public class Amazon.StorageGateway.Model.UpdateSMBFileShareVisibilityRequest : AmazonStorageGatewayRequest {
    private Nullable`1<bool> _fileSharesVisible;
    private string _gatewayARN;
    [AWSPropertyAttribute]
public Nullable`1<bool> FileSharesVisible { get; public set; }
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public Nullable`1<bool> get_FileSharesVisible();
    public void set_FileSharesVisible(Nullable`1<bool> value);
    internal bool IsSetFileSharesVisible();
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.UpdateSMBFileShareVisibilityResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.UpdateSMBLocalGroupsRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    private SMBLocalGroups _smbLocalGroups;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public SMBLocalGroups SMBLocalGroups { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public SMBLocalGroups get_SMBLocalGroups();
    public void set_SMBLocalGroups(SMBLocalGroups value);
    internal bool IsSetSMBLocalGroups();
}
public class Amazon.StorageGateway.Model.UpdateSMBLocalGroupsResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.UpdateSMBSecurityStrategyRequest : AmazonStorageGatewayRequest {
    private string _gatewayARN;
    private SMBSecurityStrategy _smbSecurityStrategy;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public SMBSecurityStrategy SMBSecurityStrategy { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public SMBSecurityStrategy get_SMBSecurityStrategy();
    public void set_SMBSecurityStrategy(SMBSecurityStrategy value);
    internal bool IsSetSMBSecurityStrategy();
}
public class Amazon.StorageGateway.Model.UpdateSMBSecurityStrategyResponse : AmazonWebServiceResponse {
    private string _gatewayARN;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
}
public class Amazon.StorageGateway.Model.UpdateSnapshotScheduleRequest : AmazonStorageGatewayRequest {
    private string _description;
    private Nullable`1<int> _recurrenceInHours;
    private Nullable`1<int> _startAt;
    private List`1<Tag> _tags;
    private string _volumeARN;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RecurrenceInHours { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> StartAt { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string VolumeARN { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<int> get_RecurrenceInHours();
    public void set_RecurrenceInHours(Nullable`1<int> value);
    internal bool IsSetRecurrenceInHours();
    public Nullable`1<int> get_StartAt();
    public void set_StartAt(Nullable`1<int> value);
    internal bool IsSetStartAt();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VolumeARN();
    public void set_VolumeARN(string value);
    internal bool IsSetVolumeARN();
}
public class Amazon.StorageGateway.Model.UpdateSnapshotScheduleResponse : AmazonWebServiceResponse {
    private string _volumeARN;
    [AWSPropertyAttribute]
public string VolumeARN { get; public set; }
    public string get_VolumeARN();
    public void set_VolumeARN(string value);
    internal bool IsSetVolumeARN();
}
public class Amazon.StorageGateway.Model.UpdateVTLDeviceTypeRequest : AmazonStorageGatewayRequest {
    private string _deviceType;
    private string _vtlDeviceARN;
    [AWSPropertyAttribute]
public string DeviceType { get; public set; }
    [AWSPropertyAttribute]
public string VTLDeviceARN { get; public set; }
    public string get_DeviceType();
    public void set_DeviceType(string value);
    internal bool IsSetDeviceType();
    public string get_VTLDeviceARN();
    public void set_VTLDeviceARN(string value);
    internal bool IsSetVTLDeviceARN();
}
public class Amazon.StorageGateway.Model.UpdateVTLDeviceTypeResponse : AmazonWebServiceResponse {
    private string _vtlDeviceARN;
    [AWSPropertyAttribute]
public string VTLDeviceARN { get; public set; }
    public string get_VTLDeviceARN();
    public void set_VTLDeviceARN(string value);
    internal bool IsSetVTLDeviceARN();
}
public class Amazon.StorageGateway.Model.VolumeInfo : object {
    private string _gatewayARN;
    private string _gatewayId;
    private string _volumeARN;
    private string _volumeAttachmentStatus;
    private string _volumeId;
    private Nullable`1<long> _volumeSizeInBytes;
    private string _volumeType;
    [AWSPropertyAttribute]
public string GatewayARN { get; public set; }
    [AWSPropertyAttribute]
public string GatewayId { get; public set; }
    [AWSPropertyAttribute]
public string VolumeARN { get; public set; }
    [AWSPropertyAttribute]
public string VolumeAttachmentStatus { get; public set; }
    [AWSPropertyAttribute]
public string VolumeId { get; public set; }
    public Nullable`1<long> VolumeSizeInBytes { get; public set; }
    [AWSPropertyAttribute]
public string VolumeType { get; public set; }
    public string get_GatewayARN();
    public void set_GatewayARN(string value);
    internal bool IsSetGatewayARN();
    public string get_GatewayId();
    public void set_GatewayId(string value);
    internal bool IsSetGatewayId();
    public string get_VolumeARN();
    public void set_VolumeARN(string value);
    internal bool IsSetVolumeARN();
    public string get_VolumeAttachmentStatus();
    public void set_VolumeAttachmentStatus(string value);
    internal bool IsSetVolumeAttachmentStatus();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
    public Nullable`1<long> get_VolumeSizeInBytes();
    public void set_VolumeSizeInBytes(Nullable`1<long> value);
    internal bool IsSetVolumeSizeInBytes();
    public string get_VolumeType();
    public void set_VolumeType(string value);
    internal bool IsSetVolumeType();
}
public class Amazon.StorageGateway.Model.VolumeiSCSIAttributes : object {
    private Nullable`1<bool> _chapEnabled;
    private Nullable`1<int> _lunNumber;
    private string _networkInterfaceId;
    private Nullable`1<int> _networkInterfacePort;
    private string _targetARN;
    public Nullable`1<bool> ChapEnabled { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> LunNumber { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public Nullable`1<int> NetworkInterfacePort { get; public set; }
    [AWSPropertyAttribute]
public string TargetARN { get; public set; }
    public Nullable`1<bool> get_ChapEnabled();
    public void set_ChapEnabled(Nullable`1<bool> value);
    internal bool IsSetChapEnabled();
    public Nullable`1<int> get_LunNumber();
    public void set_LunNumber(Nullable`1<int> value);
    internal bool IsSetLunNumber();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public Nullable`1<int> get_NetworkInterfacePort();
    public void set_NetworkInterfacePort(Nullable`1<int> value);
    internal bool IsSetNetworkInterfacePort();
    public string get_TargetARN();
    public void set_TargetARN(string value);
    internal bool IsSetTargetARN();
}
public class Amazon.StorageGateway.Model.VolumeRecoveryPointInfo : object {
    private string _volumeARN;
    private string _volumeRecoveryPointTime;
    private Nullable`1<long> _volumeSizeInBytes;
    private Nullable`1<long> _volumeUsageInBytes;
    [AWSPropertyAttribute]
public string VolumeARN { get; public set; }
    public string VolumeRecoveryPointTime { get; public set; }
    public Nullable`1<long> VolumeSizeInBytes { get; public set; }
    public Nullable`1<long> VolumeUsageInBytes { get; public set; }
    public string get_VolumeARN();
    public void set_VolumeARN(string value);
    internal bool IsSetVolumeARN();
    public string get_VolumeRecoveryPointTime();
    public void set_VolumeRecoveryPointTime(string value);
    internal bool IsSetVolumeRecoveryPointTime();
    public Nullable`1<long> get_VolumeSizeInBytes();
    public void set_VolumeSizeInBytes(Nullable`1<long> value);
    internal bool IsSetVolumeSizeInBytes();
    public Nullable`1<long> get_VolumeUsageInBytes();
    public void set_VolumeUsageInBytes(Nullable`1<long> value);
    internal bool IsSetVolumeUsageInBytes();
}
public class Amazon.StorageGateway.Model.VTLDevice : object {
    private DeviceiSCSIAttributes _deviceiSCSIAttributes;
    private string _vtlDeviceARN;
    private string _vtlDeviceProductIdentifier;
    private string _vtlDeviceType;
    private string _vtlDeviceVendor;
    public DeviceiSCSIAttributes DeviceiSCSIAttributes { get; public set; }
    [AWSPropertyAttribute]
public string VTLDeviceARN { get; public set; }
    public string VTLDeviceProductIdentifier { get; public set; }
    public string VTLDeviceType { get; public set; }
    public string VTLDeviceVendor { get; public set; }
    public DeviceiSCSIAttributes get_DeviceiSCSIAttributes();
    public void set_DeviceiSCSIAttributes(DeviceiSCSIAttributes value);
    internal bool IsSetDeviceiSCSIAttributes();
    public string get_VTLDeviceARN();
    public void set_VTLDeviceARN(string value);
    internal bool IsSetVTLDeviceARN();
    public string get_VTLDeviceProductIdentifier();
    public void set_VTLDeviceProductIdentifier(string value);
    internal bool IsSetVTLDeviceProductIdentifier();
    public string get_VTLDeviceType();
    public void set_VTLDeviceType(string value);
    internal bool IsSetVTLDeviceType();
    public string get_VTLDeviceVendor();
    public void set_VTLDeviceVendor(string value);
    internal bool IsSetVTLDeviceVendor();
}
public class Amazon.StorageGateway.ObjectACL : ConstantClass {
    public static ObjectACL AuthenticatedRead;
    public static ObjectACL AwsExecRead;
    public static ObjectACL BucketOwnerFullControl;
    public static ObjectACL BucketOwnerRead;
    public static ObjectACL Private;
    public static ObjectACL PublicRead;
    public static ObjectACL PublicReadWrite;
    public ObjectACL(string value);
    private static ObjectACL();
    public static ObjectACL FindValue(string value);
    public static ObjectACL op_Implicit(string value);
}
public class Amazon.StorageGateway.PoolStatus : ConstantClass {
    public static PoolStatus ACTIVE;
    public static PoolStatus DELETED;
    public PoolStatus(string value);
    private static PoolStatus();
    public static PoolStatus FindValue(string value);
    public static PoolStatus op_Implicit(string value);
}
public class Amazon.StorageGateway.RetentionLockType : ConstantClass {
    public static RetentionLockType COMPLIANCE;
    public static RetentionLockType GOVERNANCE;
    public static RetentionLockType NONE;
    public RetentionLockType(string value);
    private static RetentionLockType();
    public static RetentionLockType FindValue(string value);
    public static RetentionLockType op_Implicit(string value);
}
public class Amazon.StorageGateway.SMBSecurityStrategy : ConstantClass {
    public static SMBSecurityStrategy ClientSpecified;
    public static SMBSecurityStrategy MandatoryEncryption;
    public static SMBSecurityStrategy MandatoryEncryptionNoAes128;
    public static SMBSecurityStrategy MandatorySigning;
    public SMBSecurityStrategy(string value);
    private static SMBSecurityStrategy();
    public static SMBSecurityStrategy FindValue(string value);
    public static SMBSecurityStrategy op_Implicit(string value);
}
public class Amazon.StorageGateway.TapeStorageClass : ConstantClass {
    public static TapeStorageClass DEEP_ARCHIVE;
    public static TapeStorageClass GLACIER;
    public TapeStorageClass(string value);
    private static TapeStorageClass();
    public static TapeStorageClass FindValue(string value);
    public static TapeStorageClass op_Implicit(string value);
}
