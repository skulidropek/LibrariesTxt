public class Amazon.TranscribeService.AmazonTranscribeServiceClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private ITranscribeServicePaginatorFactory _paginators;
    public ITranscribeServicePaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonTranscribeServiceClient(RegionEndpoint region);
    public AmazonTranscribeServiceClient(AmazonTranscribeServiceConfig config);
    public AmazonTranscribeServiceClient(AWSCredentials credentials);
    public AmazonTranscribeServiceClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonTranscribeServiceClient(AWSCredentials credentials, AmazonTranscribeServiceConfig clientConfig);
    public AmazonTranscribeServiceClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonTranscribeServiceClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonTranscribeServiceClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonTranscribeServiceConfig clientConfig);
    public AmazonTranscribeServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonTranscribeServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonTranscribeServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonTranscribeServiceConfig clientConfig);
    private static AmazonTranscribeServiceClient();
    public sealed virtual ITranscribeServicePaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    public virtual CreateCallAnalyticsCategoryResponse CreateCallAnalyticsCategory(CreateCallAnalyticsCategoryRequest request);
    public virtual Task`1<CreateCallAnalyticsCategoryResponse> CreateCallAnalyticsCategoryAsync(CreateCallAnalyticsCategoryRequest request, CancellationToken cancellationToken);
    public virtual CreateLanguageModelResponse CreateLanguageModel(CreateLanguageModelRequest request);
    public virtual Task`1<CreateLanguageModelResponse> CreateLanguageModelAsync(CreateLanguageModelRequest request, CancellationToken cancellationToken);
    public virtual CreateMedicalVocabularyResponse CreateMedicalVocabulary(CreateMedicalVocabularyRequest request);
    public virtual Task`1<CreateMedicalVocabularyResponse> CreateMedicalVocabularyAsync(CreateMedicalVocabularyRequest request, CancellationToken cancellationToken);
    public virtual CreateVocabularyResponse CreateVocabulary(CreateVocabularyRequest request);
    public virtual Task`1<CreateVocabularyResponse> CreateVocabularyAsync(CreateVocabularyRequest request, CancellationToken cancellationToken);
    public virtual CreateVocabularyFilterResponse CreateVocabularyFilter(CreateVocabularyFilterRequest request);
    public virtual Task`1<CreateVocabularyFilterResponse> CreateVocabularyFilterAsync(CreateVocabularyFilterRequest request, CancellationToken cancellationToken);
    public virtual DeleteCallAnalyticsCategoryResponse DeleteCallAnalyticsCategory(DeleteCallAnalyticsCategoryRequest request);
    public virtual Task`1<DeleteCallAnalyticsCategoryResponse> DeleteCallAnalyticsCategoryAsync(DeleteCallAnalyticsCategoryRequest request, CancellationToken cancellationToken);
    public virtual DeleteCallAnalyticsJobResponse DeleteCallAnalyticsJob(DeleteCallAnalyticsJobRequest request);
    public virtual Task`1<DeleteCallAnalyticsJobResponse> DeleteCallAnalyticsJobAsync(DeleteCallAnalyticsJobRequest request, CancellationToken cancellationToken);
    public virtual DeleteLanguageModelResponse DeleteLanguageModel(DeleteLanguageModelRequest request);
    public virtual Task`1<DeleteLanguageModelResponse> DeleteLanguageModelAsync(DeleteLanguageModelRequest request, CancellationToken cancellationToken);
    public virtual DeleteMedicalScribeJobResponse DeleteMedicalScribeJob(DeleteMedicalScribeJobRequest request);
    public virtual Task`1<DeleteMedicalScribeJobResponse> DeleteMedicalScribeJobAsync(DeleteMedicalScribeJobRequest request, CancellationToken cancellationToken);
    public virtual DeleteMedicalTranscriptionJobResponse DeleteMedicalTranscriptionJob(DeleteMedicalTranscriptionJobRequest request);
    public virtual Task`1<DeleteMedicalTranscriptionJobResponse> DeleteMedicalTranscriptionJobAsync(DeleteMedicalTranscriptionJobRequest request, CancellationToken cancellationToken);
    public virtual DeleteMedicalVocabularyResponse DeleteMedicalVocabulary(DeleteMedicalVocabularyRequest request);
    public virtual Task`1<DeleteMedicalVocabularyResponse> DeleteMedicalVocabularyAsync(DeleteMedicalVocabularyRequest request, CancellationToken cancellationToken);
    public virtual DeleteTranscriptionJobResponse DeleteTranscriptionJob(DeleteTranscriptionJobRequest request);
    public virtual Task`1<DeleteTranscriptionJobResponse> DeleteTranscriptionJobAsync(DeleteTranscriptionJobRequest request, CancellationToken cancellationToken);
    public virtual DeleteVocabularyResponse DeleteVocabulary(DeleteVocabularyRequest request);
    public virtual Task`1<DeleteVocabularyResponse> DeleteVocabularyAsync(DeleteVocabularyRequest request, CancellationToken cancellationToken);
    public virtual DeleteVocabularyFilterResponse DeleteVocabularyFilter(DeleteVocabularyFilterRequest request);
    public virtual Task`1<DeleteVocabularyFilterResponse> DeleteVocabularyFilterAsync(DeleteVocabularyFilterRequest request, CancellationToken cancellationToken);
    public virtual DescribeLanguageModelResponse DescribeLanguageModel(DescribeLanguageModelRequest request);
    public virtual Task`1<DescribeLanguageModelResponse> DescribeLanguageModelAsync(DescribeLanguageModelRequest request, CancellationToken cancellationToken);
    public virtual GetCallAnalyticsCategoryResponse GetCallAnalyticsCategory(GetCallAnalyticsCategoryRequest request);
    public virtual Task`1<GetCallAnalyticsCategoryResponse> GetCallAnalyticsCategoryAsync(GetCallAnalyticsCategoryRequest request, CancellationToken cancellationToken);
    public virtual GetCallAnalyticsJobResponse GetCallAnalyticsJob(GetCallAnalyticsJobRequest request);
    public virtual Task`1<GetCallAnalyticsJobResponse> GetCallAnalyticsJobAsync(GetCallAnalyticsJobRequest request, CancellationToken cancellationToken);
    public virtual GetMedicalScribeJobResponse GetMedicalScribeJob(GetMedicalScribeJobRequest request);
    public virtual Task`1<GetMedicalScribeJobResponse> GetMedicalScribeJobAsync(GetMedicalScribeJobRequest request, CancellationToken cancellationToken);
    public virtual GetMedicalTranscriptionJobResponse GetMedicalTranscriptionJob(GetMedicalTranscriptionJobRequest request);
    public virtual Task`1<GetMedicalTranscriptionJobResponse> GetMedicalTranscriptionJobAsync(GetMedicalTranscriptionJobRequest request, CancellationToken cancellationToken);
    public virtual GetMedicalVocabularyResponse GetMedicalVocabulary(GetMedicalVocabularyRequest request);
    public virtual Task`1<GetMedicalVocabularyResponse> GetMedicalVocabularyAsync(GetMedicalVocabularyRequest request, CancellationToken cancellationToken);
    public virtual GetTranscriptionJobResponse GetTranscriptionJob(GetTranscriptionJobRequest request);
    public virtual Task`1<GetTranscriptionJobResponse> GetTranscriptionJobAsync(GetTranscriptionJobRequest request, CancellationToken cancellationToken);
    public virtual GetVocabularyResponse GetVocabulary(GetVocabularyRequest request);
    public virtual Task`1<GetVocabularyResponse> GetVocabularyAsync(GetVocabularyRequest request, CancellationToken cancellationToken);
    public virtual GetVocabularyFilterResponse GetVocabularyFilter(GetVocabularyFilterRequest request);
    public virtual Task`1<GetVocabularyFilterResponse> GetVocabularyFilterAsync(GetVocabularyFilterRequest request, CancellationToken cancellationToken);
    public virtual ListCallAnalyticsCategoriesResponse ListCallAnalyticsCategories(ListCallAnalyticsCategoriesRequest request);
    public virtual Task`1<ListCallAnalyticsCategoriesResponse> ListCallAnalyticsCategoriesAsync(ListCallAnalyticsCategoriesRequest request, CancellationToken cancellationToken);
    public virtual ListCallAnalyticsJobsResponse ListCallAnalyticsJobs(ListCallAnalyticsJobsRequest request);
    public virtual Task`1<ListCallAnalyticsJobsResponse> ListCallAnalyticsJobsAsync(ListCallAnalyticsJobsRequest request, CancellationToken cancellationToken);
    public virtual ListLanguageModelsResponse ListLanguageModels(ListLanguageModelsRequest request);
    public virtual Task`1<ListLanguageModelsResponse> ListLanguageModelsAsync(ListLanguageModelsRequest request, CancellationToken cancellationToken);
    public virtual ListMedicalScribeJobsResponse ListMedicalScribeJobs(ListMedicalScribeJobsRequest request);
    public virtual Task`1<ListMedicalScribeJobsResponse> ListMedicalScribeJobsAsync(ListMedicalScribeJobsRequest request, CancellationToken cancellationToken);
    public virtual ListMedicalTranscriptionJobsResponse ListMedicalTranscriptionJobs(ListMedicalTranscriptionJobsRequest request);
    public virtual Task`1<ListMedicalTranscriptionJobsResponse> ListMedicalTranscriptionJobsAsync(ListMedicalTranscriptionJobsRequest request, CancellationToken cancellationToken);
    public virtual ListMedicalVocabulariesResponse ListMedicalVocabularies(ListMedicalVocabulariesRequest request);
    public virtual Task`1<ListMedicalVocabulariesResponse> ListMedicalVocabulariesAsync(ListMedicalVocabulariesRequest request, CancellationToken cancellationToken);
    public virtual ListTagsForResourceResponse ListTagsForResource(ListTagsForResourceRequest request);
    public virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    public virtual ListTranscriptionJobsResponse ListTranscriptionJobs(ListTranscriptionJobsRequest request);
    public virtual Task`1<ListTranscriptionJobsResponse> ListTranscriptionJobsAsync(ListTranscriptionJobsRequest request, CancellationToken cancellationToken);
    public virtual ListVocabulariesResponse ListVocabularies(ListVocabulariesRequest request);
    public virtual Task`1<ListVocabulariesResponse> ListVocabulariesAsync(ListVocabulariesRequest request, CancellationToken cancellationToken);
    public virtual ListVocabularyFiltersResponse ListVocabularyFilters(ListVocabularyFiltersRequest request);
    public virtual Task`1<ListVocabularyFiltersResponse> ListVocabularyFiltersAsync(ListVocabularyFiltersRequest request, CancellationToken cancellationToken);
    public virtual StartCallAnalyticsJobResponse StartCallAnalyticsJob(StartCallAnalyticsJobRequest request);
    public virtual Task`1<StartCallAnalyticsJobResponse> StartCallAnalyticsJobAsync(StartCallAnalyticsJobRequest request, CancellationToken cancellationToken);
    public virtual StartMedicalScribeJobResponse StartMedicalScribeJob(StartMedicalScribeJobRequest request);
    public virtual Task`1<StartMedicalScribeJobResponse> StartMedicalScribeJobAsync(StartMedicalScribeJobRequest request, CancellationToken cancellationToken);
    public virtual StartMedicalTranscriptionJobResponse StartMedicalTranscriptionJob(StartMedicalTranscriptionJobRequest request);
    public virtual Task`1<StartMedicalTranscriptionJobResponse> StartMedicalTranscriptionJobAsync(StartMedicalTranscriptionJobRequest request, CancellationToken cancellationToken);
    public virtual StartTranscriptionJobResponse StartTranscriptionJob(StartTranscriptionJobRequest request);
    public virtual Task`1<StartTranscriptionJobResponse> StartTranscriptionJobAsync(StartTranscriptionJobRequest request, CancellationToken cancellationToken);
    public virtual TagResourceResponse TagResource(TagResourceRequest request);
    public virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public virtual UpdateCallAnalyticsCategoryResponse UpdateCallAnalyticsCategory(UpdateCallAnalyticsCategoryRequest request);
    public virtual Task`1<UpdateCallAnalyticsCategoryResponse> UpdateCallAnalyticsCategoryAsync(UpdateCallAnalyticsCategoryRequest request, CancellationToken cancellationToken);
    public virtual UpdateMedicalVocabularyResponse UpdateMedicalVocabulary(UpdateMedicalVocabularyRequest request);
    public virtual Task`1<UpdateMedicalVocabularyResponse> UpdateMedicalVocabularyAsync(UpdateMedicalVocabularyRequest request, CancellationToken cancellationToken);
    public virtual UpdateVocabularyResponse UpdateVocabulary(UpdateVocabularyRequest request);
    public virtual Task`1<UpdateVocabularyResponse> UpdateVocabularyAsync(UpdateVocabularyRequest request, CancellationToken cancellationToken);
    public virtual UpdateVocabularyFilterResponse UpdateVocabularyFilter(UpdateVocabularyFilterRequest request);
    public virtual Task`1<UpdateVocabularyFilterResponse> UpdateVocabularyFilterAsync(UpdateVocabularyFilterRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.TranscribeService.AmazonTranscribeServiceConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonTranscribeServiceEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonTranscribeServiceConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.TranscribeService.AmazonTranscribeServiceDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonTranscribeServiceDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.TranscribeService.AmazonTranscribeServiceException : AmazonServiceException {
    public AmazonTranscribeServiceException(string message);
    public AmazonTranscribeServiceException(string message, Exception innerException);
    public AmazonTranscribeServiceException(Exception innerException);
    public AmazonTranscribeServiceException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonTranscribeServiceException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected AmazonTranscribeServiceException(SerializationInfo info, StreamingContext context);
}
public class Amazon.TranscribeService.AmazonTranscribeServiceRequest : AmazonWebServiceRequest {
}
public class Amazon.TranscribeService.BaseModelName : ConstantClass {
    public static BaseModelName NarrowBand;
    public static BaseModelName WideBand;
    public BaseModelName(string value);
    private static BaseModelName();
    public static BaseModelName FindValue(string value);
    public static BaseModelName op_Implicit(string value);
}
public class Amazon.TranscribeService.CallAnalyticsFeature : ConstantClass {
    public static CallAnalyticsFeature GENERATIVE_SUMMARIZATION;
    public CallAnalyticsFeature(string value);
    private static CallAnalyticsFeature();
    public static CallAnalyticsFeature FindValue(string value);
    public static CallAnalyticsFeature op_Implicit(string value);
}
public class Amazon.TranscribeService.CallAnalyticsJobStatus : ConstantClass {
    public static CallAnalyticsJobStatus COMPLETED;
    public static CallAnalyticsJobStatus FAILED;
    public static CallAnalyticsJobStatus IN_PROGRESS;
    public static CallAnalyticsJobStatus QUEUED;
    public CallAnalyticsJobStatus(string value);
    private static CallAnalyticsJobStatus();
    public static CallAnalyticsJobStatus FindValue(string value);
    public static CallAnalyticsJobStatus op_Implicit(string value);
}
public class Amazon.TranscribeService.CallAnalyticsSkippedReasonCode : ConstantClass {
    public static CallAnalyticsSkippedReasonCode FAILED_SAFETY_GUIDELINES;
    public static CallAnalyticsSkippedReasonCode INSUFFICIENT_CONVERSATION_CONTENT;
    public CallAnalyticsSkippedReasonCode(string value);
    private static CallAnalyticsSkippedReasonCode();
    public static CallAnalyticsSkippedReasonCode FindValue(string value);
    public static CallAnalyticsSkippedReasonCode op_Implicit(string value);
}
public class Amazon.TranscribeService.CLMLanguageCode : ConstantClass {
    public static CLMLanguageCode DeDE;
    public static CLMLanguageCode EnAU;
    public static CLMLanguageCode EnGB;
    public static CLMLanguageCode EnUS;
    public static CLMLanguageCode EsUS;
    public static CLMLanguageCode HiIN;
    public static CLMLanguageCode JaJP;
    public CLMLanguageCode(string value);
    private static CLMLanguageCode();
    public static CLMLanguageCode FindValue(string value);
    public static CLMLanguageCode op_Implicit(string value);
}
public class Amazon.TranscribeService.Endpoints.TranscribeServiceEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public interface Amazon.TranscribeService.IAmazonTranscribeService {
    public ITranscribeServicePaginatorFactory Paginators { get; }
    public abstract virtual ITranscribeServicePaginatorFactory get_Paginators();
    public abstract virtual CreateCallAnalyticsCategoryResponse CreateCallAnalyticsCategory(CreateCallAnalyticsCategoryRequest request);
    public abstract virtual Task`1<CreateCallAnalyticsCategoryResponse> CreateCallAnalyticsCategoryAsync(CreateCallAnalyticsCategoryRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateLanguageModelResponse CreateLanguageModel(CreateLanguageModelRequest request);
    public abstract virtual Task`1<CreateLanguageModelResponse> CreateLanguageModelAsync(CreateLanguageModelRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateMedicalVocabularyResponse CreateMedicalVocabulary(CreateMedicalVocabularyRequest request);
    public abstract virtual Task`1<CreateMedicalVocabularyResponse> CreateMedicalVocabularyAsync(CreateMedicalVocabularyRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateVocabularyResponse CreateVocabulary(CreateVocabularyRequest request);
    public abstract virtual Task`1<CreateVocabularyResponse> CreateVocabularyAsync(CreateVocabularyRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateVocabularyFilterResponse CreateVocabularyFilter(CreateVocabularyFilterRequest request);
    public abstract virtual Task`1<CreateVocabularyFilterResponse> CreateVocabularyFilterAsync(CreateVocabularyFilterRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteCallAnalyticsCategoryResponse DeleteCallAnalyticsCategory(DeleteCallAnalyticsCategoryRequest request);
    public abstract virtual Task`1<DeleteCallAnalyticsCategoryResponse> DeleteCallAnalyticsCategoryAsync(DeleteCallAnalyticsCategoryRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteCallAnalyticsJobResponse DeleteCallAnalyticsJob(DeleteCallAnalyticsJobRequest request);
    public abstract virtual Task`1<DeleteCallAnalyticsJobResponse> DeleteCallAnalyticsJobAsync(DeleteCallAnalyticsJobRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteLanguageModelResponse DeleteLanguageModel(DeleteLanguageModelRequest request);
    public abstract virtual Task`1<DeleteLanguageModelResponse> DeleteLanguageModelAsync(DeleteLanguageModelRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteMedicalScribeJobResponse DeleteMedicalScribeJob(DeleteMedicalScribeJobRequest request);
    public abstract virtual Task`1<DeleteMedicalScribeJobResponse> DeleteMedicalScribeJobAsync(DeleteMedicalScribeJobRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteMedicalTranscriptionJobResponse DeleteMedicalTranscriptionJob(DeleteMedicalTranscriptionJobRequest request);
    public abstract virtual Task`1<DeleteMedicalTranscriptionJobResponse> DeleteMedicalTranscriptionJobAsync(DeleteMedicalTranscriptionJobRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteMedicalVocabularyResponse DeleteMedicalVocabulary(DeleteMedicalVocabularyRequest request);
    public abstract virtual Task`1<DeleteMedicalVocabularyResponse> DeleteMedicalVocabularyAsync(DeleteMedicalVocabularyRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteTranscriptionJobResponse DeleteTranscriptionJob(DeleteTranscriptionJobRequest request);
    public abstract virtual Task`1<DeleteTranscriptionJobResponse> DeleteTranscriptionJobAsync(DeleteTranscriptionJobRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteVocabularyResponse DeleteVocabulary(DeleteVocabularyRequest request);
    public abstract virtual Task`1<DeleteVocabularyResponse> DeleteVocabularyAsync(DeleteVocabularyRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteVocabularyFilterResponse DeleteVocabularyFilter(DeleteVocabularyFilterRequest request);
    public abstract virtual Task`1<DeleteVocabularyFilterResponse> DeleteVocabularyFilterAsync(DeleteVocabularyFilterRequest request, CancellationToken cancellationToken);
    public abstract virtual DescribeLanguageModelResponse DescribeLanguageModel(DescribeLanguageModelRequest request);
    public abstract virtual Task`1<DescribeLanguageModelResponse> DescribeLanguageModelAsync(DescribeLanguageModelRequest request, CancellationToken cancellationToken);
    public abstract virtual GetCallAnalyticsCategoryResponse GetCallAnalyticsCategory(GetCallAnalyticsCategoryRequest request);
    public abstract virtual Task`1<GetCallAnalyticsCategoryResponse> GetCallAnalyticsCategoryAsync(GetCallAnalyticsCategoryRequest request, CancellationToken cancellationToken);
    public abstract virtual GetCallAnalyticsJobResponse GetCallAnalyticsJob(GetCallAnalyticsJobRequest request);
    public abstract virtual Task`1<GetCallAnalyticsJobResponse> GetCallAnalyticsJobAsync(GetCallAnalyticsJobRequest request, CancellationToken cancellationToken);
    public abstract virtual GetMedicalScribeJobResponse GetMedicalScribeJob(GetMedicalScribeJobRequest request);
    public abstract virtual Task`1<GetMedicalScribeJobResponse> GetMedicalScribeJobAsync(GetMedicalScribeJobRequest request, CancellationToken cancellationToken);
    public abstract virtual GetMedicalTranscriptionJobResponse GetMedicalTranscriptionJob(GetMedicalTranscriptionJobRequest request);
    public abstract virtual Task`1<GetMedicalTranscriptionJobResponse> GetMedicalTranscriptionJobAsync(GetMedicalTranscriptionJobRequest request, CancellationToken cancellationToken);
    public abstract virtual GetMedicalVocabularyResponse GetMedicalVocabulary(GetMedicalVocabularyRequest request);
    public abstract virtual Task`1<GetMedicalVocabularyResponse> GetMedicalVocabularyAsync(GetMedicalVocabularyRequest request, CancellationToken cancellationToken);
    public abstract virtual GetTranscriptionJobResponse GetTranscriptionJob(GetTranscriptionJobRequest request);
    public abstract virtual Task`1<GetTranscriptionJobResponse> GetTranscriptionJobAsync(GetTranscriptionJobRequest request, CancellationToken cancellationToken);
    public abstract virtual GetVocabularyResponse GetVocabulary(GetVocabularyRequest request);
    public abstract virtual Task`1<GetVocabularyResponse> GetVocabularyAsync(GetVocabularyRequest request, CancellationToken cancellationToken);
    public abstract virtual GetVocabularyFilterResponse GetVocabularyFilter(GetVocabularyFilterRequest request);
    public abstract virtual Task`1<GetVocabularyFilterResponse> GetVocabularyFilterAsync(GetVocabularyFilterRequest request, CancellationToken cancellationToken);
    public abstract virtual ListCallAnalyticsCategoriesResponse ListCallAnalyticsCategories(ListCallAnalyticsCategoriesRequest request);
    public abstract virtual Task`1<ListCallAnalyticsCategoriesResponse> ListCallAnalyticsCategoriesAsync(ListCallAnalyticsCategoriesRequest request, CancellationToken cancellationToken);
    public abstract virtual ListCallAnalyticsJobsResponse ListCallAnalyticsJobs(ListCallAnalyticsJobsRequest request);
    public abstract virtual Task`1<ListCallAnalyticsJobsResponse> ListCallAnalyticsJobsAsync(ListCallAnalyticsJobsRequest request, CancellationToken cancellationToken);
    public abstract virtual ListLanguageModelsResponse ListLanguageModels(ListLanguageModelsRequest request);
    public abstract virtual Task`1<ListLanguageModelsResponse> ListLanguageModelsAsync(ListLanguageModelsRequest request, CancellationToken cancellationToken);
    public abstract virtual ListMedicalScribeJobsResponse ListMedicalScribeJobs(ListMedicalScribeJobsRequest request);
    public abstract virtual Task`1<ListMedicalScribeJobsResponse> ListMedicalScribeJobsAsync(ListMedicalScribeJobsRequest request, CancellationToken cancellationToken);
    public abstract virtual ListMedicalTranscriptionJobsResponse ListMedicalTranscriptionJobs(ListMedicalTranscriptionJobsRequest request);
    public abstract virtual Task`1<ListMedicalTranscriptionJobsResponse> ListMedicalTranscriptionJobsAsync(ListMedicalTranscriptionJobsRequest request, CancellationToken cancellationToken);
    public abstract virtual ListMedicalVocabulariesResponse ListMedicalVocabularies(ListMedicalVocabulariesRequest request);
    public abstract virtual Task`1<ListMedicalVocabulariesResponse> ListMedicalVocabulariesAsync(ListMedicalVocabulariesRequest request, CancellationToken cancellationToken);
    public abstract virtual ListTagsForResourceResponse ListTagsForResource(ListTagsForResourceRequest request);
    public abstract virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual ListTranscriptionJobsResponse ListTranscriptionJobs(ListTranscriptionJobsRequest request);
    public abstract virtual Task`1<ListTranscriptionJobsResponse> ListTranscriptionJobsAsync(ListTranscriptionJobsRequest request, CancellationToken cancellationToken);
    public abstract virtual ListVocabulariesResponse ListVocabularies(ListVocabulariesRequest request);
    public abstract virtual Task`1<ListVocabulariesResponse> ListVocabulariesAsync(ListVocabulariesRequest request, CancellationToken cancellationToken);
    public abstract virtual ListVocabularyFiltersResponse ListVocabularyFilters(ListVocabularyFiltersRequest request);
    public abstract virtual Task`1<ListVocabularyFiltersResponse> ListVocabularyFiltersAsync(ListVocabularyFiltersRequest request, CancellationToken cancellationToken);
    public abstract virtual StartCallAnalyticsJobResponse StartCallAnalyticsJob(StartCallAnalyticsJobRequest request);
    public abstract virtual Task`1<StartCallAnalyticsJobResponse> StartCallAnalyticsJobAsync(StartCallAnalyticsJobRequest request, CancellationToken cancellationToken);
    public abstract virtual StartMedicalScribeJobResponse StartMedicalScribeJob(StartMedicalScribeJobRequest request);
    public abstract virtual Task`1<StartMedicalScribeJobResponse> StartMedicalScribeJobAsync(StartMedicalScribeJobRequest request, CancellationToken cancellationToken);
    public abstract virtual StartMedicalTranscriptionJobResponse StartMedicalTranscriptionJob(StartMedicalTranscriptionJobRequest request);
    public abstract virtual Task`1<StartMedicalTranscriptionJobResponse> StartMedicalTranscriptionJobAsync(StartMedicalTranscriptionJobRequest request, CancellationToken cancellationToken);
    public abstract virtual StartTranscriptionJobResponse StartTranscriptionJob(StartTranscriptionJobRequest request);
    public abstract virtual Task`1<StartTranscriptionJobResponse> StartTranscriptionJobAsync(StartTranscriptionJobRequest request, CancellationToken cancellationToken);
    public abstract virtual TagResourceResponse TagResource(TagResourceRequest request);
    public abstract virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public abstract virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual UpdateCallAnalyticsCategoryResponse UpdateCallAnalyticsCategory(UpdateCallAnalyticsCategoryRequest request);
    public abstract virtual Task`1<UpdateCallAnalyticsCategoryResponse> UpdateCallAnalyticsCategoryAsync(UpdateCallAnalyticsCategoryRequest request, CancellationToken cancellationToken);
    public abstract virtual UpdateMedicalVocabularyResponse UpdateMedicalVocabulary(UpdateMedicalVocabularyRequest request);
    public abstract virtual Task`1<UpdateMedicalVocabularyResponse> UpdateMedicalVocabularyAsync(UpdateMedicalVocabularyRequest request, CancellationToken cancellationToken);
    public abstract virtual UpdateVocabularyResponse UpdateVocabulary(UpdateVocabularyRequest request);
    public abstract virtual Task`1<UpdateVocabularyResponse> UpdateVocabularyAsync(UpdateVocabularyRequest request, CancellationToken cancellationToken);
    public abstract virtual UpdateVocabularyFilterResponse UpdateVocabularyFilter(UpdateVocabularyFilterRequest request);
    public abstract virtual Task`1<UpdateVocabularyFilterResponse> UpdateVocabularyFilterAsync(UpdateVocabularyFilterRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
}
public class Amazon.TranscribeService.InputType : ConstantClass {
    public static InputType POST_CALL;
    public static InputType REAL_TIME;
    public InputType(string value);
    private static InputType();
    public static InputType FindValue(string value);
    public static InputType op_Implicit(string value);
}
public class Amazon.TranscribeService.Internal.AmazonTranscribeServiceEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.TranscribeService.Internal.AmazonTranscribeServiceEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.TranscribeService.Internal.AmazonTranscribeServiceMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.TranscribeService.LanguageCode : ConstantClass {
    public static LanguageCode AbGE;
    public static LanguageCode AfZA;
    public static LanguageCode ArAE;
    public static LanguageCode ArSA;
    public static LanguageCode AstES;
    public static LanguageCode AzAZ;
    public static LanguageCode BaRU;
    public static LanguageCode BeBY;
    public static LanguageCode BgBG;
    public static LanguageCode BnIN;
    public static LanguageCode BsBA;
    public static LanguageCode CaES;
    public static LanguageCode CkbIQ;
    public static LanguageCode CkbIR;
    public static LanguageCode CsCZ;
    public static LanguageCode CyWL;
    public static LanguageCode DaDK;
    public static LanguageCode DeCH;
    public static LanguageCode DeDE;
    public static LanguageCode ElGR;
    public static LanguageCode EnAB;
    public static LanguageCode EnAU;
    public static LanguageCode EnGB;
    public static LanguageCode EnIE;
    public static LanguageCode EnIN;
    public static LanguageCode EnNZ;
    public static LanguageCode EnUS;
    public static LanguageCode EnWL;
    public static LanguageCode EnZA;
    public static LanguageCode EsES;
    public static LanguageCode EsUS;
    public static LanguageCode EtET;
    public static LanguageCode EuES;
    public static LanguageCode FaIR;
    public static LanguageCode FiFI;
    public static LanguageCode FrCA;
    public static LanguageCode FrFR;
    public static LanguageCode GlES;
    public static LanguageCode GuIN;
    public static LanguageCode HaNG;
    public static LanguageCode HeIL;
    public static LanguageCode HiIN;
    public static LanguageCode HrHR;
    public static LanguageCode HuHU;
    public static LanguageCode HyAM;
    public static LanguageCode IdID;
    public static LanguageCode IsIS;
    public static LanguageCode ItIT;
    public static LanguageCode JaJP;
    public static LanguageCode KabDZ;
    public static LanguageCode KaGE;
    public static LanguageCode KkKZ;
    public static LanguageCode KnIN;
    public static LanguageCode KoKR;
    public static LanguageCode KyKG;
    public static LanguageCode LgIN;
    public static LanguageCode LtLT;
    public static LanguageCode LvLV;
    public static LanguageCode MhrRU;
    public static LanguageCode MiNZ;
    public static LanguageCode MkMK;
    public static LanguageCode MlIN;
    public static LanguageCode MnMN;
    public static LanguageCode MrIN;
    public static LanguageCode MsMY;
    public static LanguageCode MtMT;
    public static LanguageCode NlNL;
    public static LanguageCode NoNO;
    public static LanguageCode OrIN;
    public static LanguageCode PaIN;
    public static LanguageCode PlPL;
    public static LanguageCode PsAF;
    public static LanguageCode PtBR;
    public static LanguageCode PtPT;
    public static LanguageCode RoRO;
    public static LanguageCode RuRU;
    public static LanguageCode RwRW;
    public static LanguageCode SiLK;
    public static LanguageCode SkSK;
    public static LanguageCode SlSI;
    public static LanguageCode SoSO;
    public static LanguageCode SrRS;
    public static LanguageCode SuID;
    public static LanguageCode SvSE;
    public static LanguageCode SwBI;
    public static LanguageCode SwKE;
    public static LanguageCode SwRW;
    public static LanguageCode SwTZ;
    public static LanguageCode SwUG;
    public static LanguageCode TaIN;
    public static LanguageCode TeIN;
    public static LanguageCode ThTH;
    public static LanguageCode TlPH;
    public static LanguageCode TrTR;
    public static LanguageCode TtRU;
    public static LanguageCode UgCN;
    public static LanguageCode UkUA;
    public static LanguageCode UzUZ;
    public static LanguageCode ViVN;
    public static LanguageCode WoSN;
    public static LanguageCode ZhCN;
    public static LanguageCode ZhTW;
    public static LanguageCode ZuZA;
    public LanguageCode(string value);
    private static LanguageCode();
    public static LanguageCode FindValue(string value);
    public static LanguageCode op_Implicit(string value);
}
public class Amazon.TranscribeService.MediaFormat : ConstantClass {
    public static MediaFormat Amr;
    public static MediaFormat Flac;
    public static MediaFormat M4a;
    public static MediaFormat Mp3;
    public static MediaFormat Mp4;
    public static MediaFormat Ogg;
    public static MediaFormat Wav;
    public static MediaFormat Webm;
    public MediaFormat(string value);
    private static MediaFormat();
    public static MediaFormat FindValue(string value);
    public static MediaFormat op_Implicit(string value);
}
public class Amazon.TranscribeService.MedicalContentIdentificationType : ConstantClass {
    public static MedicalContentIdentificationType PHI;
    public MedicalContentIdentificationType(string value);
    private static MedicalContentIdentificationType();
    public static MedicalContentIdentificationType FindValue(string value);
    public static MedicalContentIdentificationType op_Implicit(string value);
}
public class Amazon.TranscribeService.MedicalScribeJobStatus : ConstantClass {
    public static MedicalScribeJobStatus COMPLETED;
    public static MedicalScribeJobStatus FAILED;
    public static MedicalScribeJobStatus IN_PROGRESS;
    public static MedicalScribeJobStatus QUEUED;
    public MedicalScribeJobStatus(string value);
    private static MedicalScribeJobStatus();
    public static MedicalScribeJobStatus FindValue(string value);
    public static MedicalScribeJobStatus op_Implicit(string value);
}
public class Amazon.TranscribeService.MedicalScribeLanguageCode : ConstantClass {
    public static MedicalScribeLanguageCode EnUS;
    public MedicalScribeLanguageCode(string value);
    private static MedicalScribeLanguageCode();
    public static MedicalScribeLanguageCode FindValue(string value);
    public static MedicalScribeLanguageCode op_Implicit(string value);
}
public class Amazon.TranscribeService.MedicalScribeParticipantRole : ConstantClass {
    public static MedicalScribeParticipantRole CLINICIAN;
    public static MedicalScribeParticipantRole PATIENT;
    public MedicalScribeParticipantRole(string value);
    private static MedicalScribeParticipantRole();
    public static MedicalScribeParticipantRole FindValue(string value);
    public static MedicalScribeParticipantRole op_Implicit(string value);
}
public class Amazon.TranscribeService.Model.AbsoluteTimeRange : object {
    private Nullable`1<long> _endTime;
    private Nullable`1<long> _first;
    private Nullable`1<long> _last;
    private Nullable`1<long> _startTime;
    [AWSPropertyAttribute]
public Nullable`1<long> EndTime { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> First { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> Last { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> StartTime { get; public set; }
    public Nullable`1<long> get_EndTime();
    public void set_EndTime(Nullable`1<long> value);
    internal bool IsSetEndTime();
    public Nullable`1<long> get_First();
    public void set_First(Nullable`1<long> value);
    internal bool IsSetFirst();
    public Nullable`1<long> get_Last();
    public void set_Last(Nullable`1<long> value);
    internal bool IsSetLast();
    public Nullable`1<long> get_StartTime();
    public void set_StartTime(Nullable`1<long> value);
    internal bool IsSetStartTime();
}
public class Amazon.TranscribeService.Model.BadRequestException : AmazonTranscribeServiceException {
    public BadRequestException(string message);
    public BadRequestException(string message, Exception innerException);
    public BadRequestException(Exception innerException);
    public BadRequestException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public BadRequestException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected BadRequestException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.TranscribeService.Model.CallAnalyticsJob : object {
    private CallAnalyticsJobDetails _callAnalyticsJobDetails;
    private string _callAnalyticsJobName;
    private CallAnalyticsJobStatus _callAnalyticsJobStatus;
    private List`1<ChannelDefinition> _channelDefinitions;
    private Nullable`1<DateTime> _completionTime;
    private Nullable`1<DateTime> _creationTime;
    private string _dataAccessRoleArn;
    private string _failureReason;
    private Nullable`1<float> _identifiedLanguageScore;
    private LanguageCode _languageCode;
    private Media _media;
    private MediaFormat _mediaFormat;
    private Nullable`1<int> _mediaSampleRateHertz;
    private CallAnalyticsJobSettings _settings;
    private Nullable`1<DateTime> _startTime;
    private Transcript _transcript;
    public CallAnalyticsJobDetails CallAnalyticsJobDetails { get; public set; }
    [AWSPropertyAttribute]
public string CallAnalyticsJobName { get; public set; }
    public CallAnalyticsJobStatus CallAnalyticsJobStatus { get; public set; }
    [AWSPropertyAttribute]
public List`1<ChannelDefinition> ChannelDefinitions { get; public set; }
    public Nullable`1<DateTime> CompletionTime { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    [AWSPropertyAttribute]
public string DataAccessRoleArn { get; public set; }
    public string FailureReason { get; public set; }
    public Nullable`1<float> IdentifiedLanguageScore { get; public set; }
    public LanguageCode LanguageCode { get; public set; }
    public Media Media { get; public set; }
    public MediaFormat MediaFormat { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MediaSampleRateHertz { get; public set; }
    public CallAnalyticsJobSettings Settings { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public Transcript Transcript { get; public set; }
    public CallAnalyticsJobDetails get_CallAnalyticsJobDetails();
    public void set_CallAnalyticsJobDetails(CallAnalyticsJobDetails value);
    internal bool IsSetCallAnalyticsJobDetails();
    public string get_CallAnalyticsJobName();
    public void set_CallAnalyticsJobName(string value);
    internal bool IsSetCallAnalyticsJobName();
    public CallAnalyticsJobStatus get_CallAnalyticsJobStatus();
    public void set_CallAnalyticsJobStatus(CallAnalyticsJobStatus value);
    internal bool IsSetCallAnalyticsJobStatus();
    public List`1<ChannelDefinition> get_ChannelDefinitions();
    public void set_ChannelDefinitions(List`1<ChannelDefinition> value);
    internal bool IsSetChannelDefinitions();
    public Nullable`1<DateTime> get_CompletionTime();
    public void set_CompletionTime(Nullable`1<DateTime> value);
    internal bool IsSetCompletionTime();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_DataAccessRoleArn();
    public void set_DataAccessRoleArn(string value);
    internal bool IsSetDataAccessRoleArn();
    public string get_FailureReason();
    public void set_FailureReason(string value);
    internal bool IsSetFailureReason();
    public Nullable`1<float> get_IdentifiedLanguageScore();
    public void set_IdentifiedLanguageScore(Nullable`1<float> value);
    internal bool IsSetIdentifiedLanguageScore();
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
    public Media get_Media();
    public void set_Media(Media value);
    internal bool IsSetMedia();
    public MediaFormat get_MediaFormat();
    public void set_MediaFormat(MediaFormat value);
    internal bool IsSetMediaFormat();
    public Nullable`1<int> get_MediaSampleRateHertz();
    public void set_MediaSampleRateHertz(Nullable`1<int> value);
    internal bool IsSetMediaSampleRateHertz();
    public CallAnalyticsJobSettings get_Settings();
    public void set_Settings(CallAnalyticsJobSettings value);
    internal bool IsSetSettings();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public Transcript get_Transcript();
    public void set_Transcript(Transcript value);
    internal bool IsSetTranscript();
}
public class Amazon.TranscribeService.Model.CallAnalyticsJobDetails : object {
    private List`1<CallAnalyticsSkippedFeature> _skipped;
    public List`1<CallAnalyticsSkippedFeature> Skipped { get; public set; }
    public List`1<CallAnalyticsSkippedFeature> get_Skipped();
    public void set_Skipped(List`1<CallAnalyticsSkippedFeature> value);
    internal bool IsSetSkipped();
}
public class Amazon.TranscribeService.Model.CallAnalyticsJobSettings : object {
    private ContentRedaction _contentRedaction;
    private Dictionary`2<string, LanguageIdSettings> _languageIdSettings;
    private string _languageModelName;
    private List`1<string> _languageOptions;
    private Summarization _summarization;
    private VocabularyFilterMethod _vocabularyFilterMethod;
    private string _vocabularyFilterName;
    private string _vocabularyName;
    public ContentRedaction ContentRedaction { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, LanguageIdSettings> LanguageIdSettings { get; public set; }
    [AWSPropertyAttribute]
public string LanguageModelName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> LanguageOptions { get; public set; }
    public Summarization Summarization { get; public set; }
    public VocabularyFilterMethod VocabularyFilterMethod { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyFilterName { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyName { get; public set; }
    public ContentRedaction get_ContentRedaction();
    public void set_ContentRedaction(ContentRedaction value);
    internal bool IsSetContentRedaction();
    public Dictionary`2<string, LanguageIdSettings> get_LanguageIdSettings();
    public void set_LanguageIdSettings(Dictionary`2<string, LanguageIdSettings> value);
    internal bool IsSetLanguageIdSettings();
    public string get_LanguageModelName();
    public void set_LanguageModelName(string value);
    internal bool IsSetLanguageModelName();
    public List`1<string> get_LanguageOptions();
    public void set_LanguageOptions(List`1<string> value);
    internal bool IsSetLanguageOptions();
    public Summarization get_Summarization();
    public void set_Summarization(Summarization value);
    internal bool IsSetSummarization();
    public VocabularyFilterMethod get_VocabularyFilterMethod();
    public void set_VocabularyFilterMethod(VocabularyFilterMethod value);
    internal bool IsSetVocabularyFilterMethod();
    public string get_VocabularyFilterName();
    public void set_VocabularyFilterName(string value);
    internal bool IsSetVocabularyFilterName();
    public string get_VocabularyName();
    public void set_VocabularyName(string value);
    internal bool IsSetVocabularyName();
}
public class Amazon.TranscribeService.Model.CallAnalyticsJobSummary : object {
    private CallAnalyticsJobDetails _callAnalyticsJobDetails;
    private string _callAnalyticsJobName;
    private CallAnalyticsJobStatus _callAnalyticsJobStatus;
    private Nullable`1<DateTime> _completionTime;
    private Nullable`1<DateTime> _creationTime;
    private string _failureReason;
    private LanguageCode _languageCode;
    private Nullable`1<DateTime> _startTime;
    public CallAnalyticsJobDetails CallAnalyticsJobDetails { get; public set; }
    [AWSPropertyAttribute]
public string CallAnalyticsJobName { get; public set; }
    public CallAnalyticsJobStatus CallAnalyticsJobStatus { get; public set; }
    public Nullable`1<DateTime> CompletionTime { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public string FailureReason { get; public set; }
    public LanguageCode LanguageCode { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public CallAnalyticsJobDetails get_CallAnalyticsJobDetails();
    public void set_CallAnalyticsJobDetails(CallAnalyticsJobDetails value);
    internal bool IsSetCallAnalyticsJobDetails();
    public string get_CallAnalyticsJobName();
    public void set_CallAnalyticsJobName(string value);
    internal bool IsSetCallAnalyticsJobName();
    public CallAnalyticsJobStatus get_CallAnalyticsJobStatus();
    public void set_CallAnalyticsJobStatus(CallAnalyticsJobStatus value);
    internal bool IsSetCallAnalyticsJobStatus();
    public Nullable`1<DateTime> get_CompletionTime();
    public void set_CompletionTime(Nullable`1<DateTime> value);
    internal bool IsSetCompletionTime();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_FailureReason();
    public void set_FailureReason(string value);
    internal bool IsSetFailureReason();
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
}
public class Amazon.TranscribeService.Model.CallAnalyticsSkippedFeature : object {
    private CallAnalyticsFeature _feature;
    private string _message;
    private CallAnalyticsSkippedReasonCode _reasonCode;
    public CallAnalyticsFeature Feature { get; public set; }
    public string Message { get; public set; }
    public CallAnalyticsSkippedReasonCode ReasonCode { get; public set; }
    public CallAnalyticsFeature get_Feature();
    public void set_Feature(CallAnalyticsFeature value);
    internal bool IsSetFeature();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public CallAnalyticsSkippedReasonCode get_ReasonCode();
    public void set_ReasonCode(CallAnalyticsSkippedReasonCode value);
    internal bool IsSetReasonCode();
}
public class Amazon.TranscribeService.Model.CategoryProperties : object {
    private string _categoryName;
    private Nullable`1<DateTime> _createTime;
    private InputType _inputType;
    private Nullable`1<DateTime> _lastUpdateTime;
    private List`1<Rule> _rules;
    [AWSPropertyAttribute]
public string CategoryName { get; public set; }
    public Nullable`1<DateTime> CreateTime { get; public set; }
    public InputType InputType { get; public set; }
    public Nullable`1<DateTime> LastUpdateTime { get; public set; }
    [AWSPropertyAttribute]
public List`1<Rule> Rules { get; public set; }
    public string get_CategoryName();
    public void set_CategoryName(string value);
    internal bool IsSetCategoryName();
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public InputType get_InputType();
    public void set_InputType(InputType value);
    internal bool IsSetInputType();
    public Nullable`1<DateTime> get_LastUpdateTime();
    public void set_LastUpdateTime(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdateTime();
    public List`1<Rule> get_Rules();
    public void set_Rules(List`1<Rule> value);
    internal bool IsSetRules();
}
public class Amazon.TranscribeService.Model.ChannelDefinition : object {
    private Nullable`1<int> _channelId;
    private ParticipantRole _participantRole;
    [AWSPropertyAttribute]
public Nullable`1<int> ChannelId { get; public set; }
    public ParticipantRole ParticipantRole { get; public set; }
    public Nullable`1<int> get_ChannelId();
    public void set_ChannelId(Nullable`1<int> value);
    internal bool IsSetChannelId();
    public ParticipantRole get_ParticipantRole();
    public void set_ParticipantRole(ParticipantRole value);
    internal bool IsSetParticipantRole();
}
public class Amazon.TranscribeService.Model.ConflictException : AmazonTranscribeServiceException {
    public ConflictException(string message);
    public ConflictException(string message, Exception innerException);
    public ConflictException(Exception innerException);
    public ConflictException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConflictException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected ConflictException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.TranscribeService.Model.ContentRedaction : object {
    private List`1<string> _piiEntityTypes;
    private RedactionOutput _redactionOutput;
    private RedactionType _redactionType;
    [AWSPropertyAttribute]
public List`1<string> PiiEntityTypes { get; public set; }
    [AWSPropertyAttribute]
public RedactionOutput RedactionOutput { get; public set; }
    [AWSPropertyAttribute]
public RedactionType RedactionType { get; public set; }
    public List`1<string> get_PiiEntityTypes();
    public void set_PiiEntityTypes(List`1<string> value);
    internal bool IsSetPiiEntityTypes();
    public RedactionOutput get_RedactionOutput();
    public void set_RedactionOutput(RedactionOutput value);
    internal bool IsSetRedactionOutput();
    public RedactionType get_RedactionType();
    public void set_RedactionType(RedactionType value);
    internal bool IsSetRedactionType();
}
public class Amazon.TranscribeService.Model.CreateCallAnalyticsCategoryRequest : AmazonTranscribeServiceRequest {
    private string _categoryName;
    private InputType _inputType;
    private List`1<Rule> _rules;
    [AWSPropertyAttribute]
public string CategoryName { get; public set; }
    public InputType InputType { get; public set; }
    [AWSPropertyAttribute]
public List`1<Rule> Rules { get; public set; }
    public string get_CategoryName();
    public void set_CategoryName(string value);
    internal bool IsSetCategoryName();
    public InputType get_InputType();
    public void set_InputType(InputType value);
    internal bool IsSetInputType();
    public List`1<Rule> get_Rules();
    public void set_Rules(List`1<Rule> value);
    internal bool IsSetRules();
}
public class Amazon.TranscribeService.Model.CreateCallAnalyticsCategoryResponse : AmazonWebServiceResponse {
    private CategoryProperties _categoryProperties;
    public CategoryProperties CategoryProperties { get; public set; }
    public CategoryProperties get_CategoryProperties();
    public void set_CategoryProperties(CategoryProperties value);
    internal bool IsSetCategoryProperties();
}
public class Amazon.TranscribeService.Model.CreateLanguageModelRequest : AmazonTranscribeServiceRequest {
    private BaseModelName _baseModelName;
    private InputDataConfig _inputDataConfig;
    private CLMLanguageCode _languageCode;
    private string _modelName;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public BaseModelName BaseModelName { get; public set; }
    [AWSPropertyAttribute]
public InputDataConfig InputDataConfig { get; public set; }
    [AWSPropertyAttribute]
public CLMLanguageCode LanguageCode { get; public set; }
    [AWSPropertyAttribute]
public string ModelName { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public BaseModelName get_BaseModelName();
    public void set_BaseModelName(BaseModelName value);
    internal bool IsSetBaseModelName();
    public InputDataConfig get_InputDataConfig();
    public void set_InputDataConfig(InputDataConfig value);
    internal bool IsSetInputDataConfig();
    public CLMLanguageCode get_LanguageCode();
    public void set_LanguageCode(CLMLanguageCode value);
    internal bool IsSetLanguageCode();
    public string get_ModelName();
    public void set_ModelName(string value);
    internal bool IsSetModelName();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.TranscribeService.Model.CreateLanguageModelResponse : AmazonWebServiceResponse {
    private BaseModelName _baseModelName;
    private InputDataConfig _inputDataConfig;
    private CLMLanguageCode _languageCode;
    private string _modelName;
    private ModelStatus _modelStatus;
    public BaseModelName BaseModelName { get; public set; }
    public InputDataConfig InputDataConfig { get; public set; }
    public CLMLanguageCode LanguageCode { get; public set; }
    [AWSPropertyAttribute]
public string ModelName { get; public set; }
    public ModelStatus ModelStatus { get; public set; }
    public BaseModelName get_BaseModelName();
    public void set_BaseModelName(BaseModelName value);
    internal bool IsSetBaseModelName();
    public InputDataConfig get_InputDataConfig();
    public void set_InputDataConfig(InputDataConfig value);
    internal bool IsSetInputDataConfig();
    public CLMLanguageCode get_LanguageCode();
    public void set_LanguageCode(CLMLanguageCode value);
    internal bool IsSetLanguageCode();
    public string get_ModelName();
    public void set_ModelName(string value);
    internal bool IsSetModelName();
    public ModelStatus get_ModelStatus();
    public void set_ModelStatus(ModelStatus value);
    internal bool IsSetModelStatus();
}
public class Amazon.TranscribeService.Model.CreateMedicalVocabularyRequest : AmazonTranscribeServiceRequest {
    private LanguageCode _languageCode;
    private List`1<Tag> _tags;
    private string _vocabularyFileUri;
    private string _vocabularyName;
    [AWSPropertyAttribute]
public LanguageCode LanguageCode { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyFileUri { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyName { get; public set; }
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VocabularyFileUri();
    public void set_VocabularyFileUri(string value);
    internal bool IsSetVocabularyFileUri();
    public string get_VocabularyName();
    public void set_VocabularyName(string value);
    internal bool IsSetVocabularyName();
}
public class Amazon.TranscribeService.Model.CreateMedicalVocabularyResponse : AmazonWebServiceResponse {
    private string _failureReason;
    private LanguageCode _languageCode;
    private Nullable`1<DateTime> _lastModifiedTime;
    private string _vocabularyName;
    private VocabularyState _vocabularyState;
    public string FailureReason { get; public set; }
    public LanguageCode LanguageCode { get; public set; }
    public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyName { get; public set; }
    public VocabularyState VocabularyState { get; public set; }
    public string get_FailureReason();
    public void set_FailureReason(string value);
    internal bool IsSetFailureReason();
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public string get_VocabularyName();
    public void set_VocabularyName(string value);
    internal bool IsSetVocabularyName();
    public VocabularyState get_VocabularyState();
    public void set_VocabularyState(VocabularyState value);
    internal bool IsSetVocabularyState();
}
public class Amazon.TranscribeService.Model.CreateVocabularyFilterRequest : AmazonTranscribeServiceRequest {
    private string _dataAccessRoleArn;
    private LanguageCode _languageCode;
    private List`1<Tag> _tags;
    private string _vocabularyFilterFileUri;
    private string _vocabularyFilterName;
    private List`1<string> _words;
    [AWSPropertyAttribute]
public string DataAccessRoleArn { get; public set; }
    [AWSPropertyAttribute]
public LanguageCode LanguageCode { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyFilterFileUri { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyFilterName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Words { get; public set; }
    public string get_DataAccessRoleArn();
    public void set_DataAccessRoleArn(string value);
    internal bool IsSetDataAccessRoleArn();
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VocabularyFilterFileUri();
    public void set_VocabularyFilterFileUri(string value);
    internal bool IsSetVocabularyFilterFileUri();
    public string get_VocabularyFilterName();
    public void set_VocabularyFilterName(string value);
    internal bool IsSetVocabularyFilterName();
    public List`1<string> get_Words();
    public void set_Words(List`1<string> value);
    internal bool IsSetWords();
}
public class Amazon.TranscribeService.Model.CreateVocabularyFilterResponse : AmazonWebServiceResponse {
    private LanguageCode _languageCode;
    private Nullable`1<DateTime> _lastModifiedTime;
    private string _vocabularyFilterName;
    public LanguageCode LanguageCode { get; public set; }
    public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyFilterName { get; public set; }
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public string get_VocabularyFilterName();
    public void set_VocabularyFilterName(string value);
    internal bool IsSetVocabularyFilterName();
}
public class Amazon.TranscribeService.Model.CreateVocabularyRequest : AmazonTranscribeServiceRequest {
    private string _dataAccessRoleArn;
    private LanguageCode _languageCode;
    private List`1<string> _phrases;
    private List`1<Tag> _tags;
    private string _vocabularyFileUri;
    private string _vocabularyName;
    [AWSPropertyAttribute]
public string DataAccessRoleArn { get; public set; }
    [AWSPropertyAttribute]
public LanguageCode LanguageCode { get; public set; }
    public List`1<string> Phrases { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyFileUri { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyName { get; public set; }
    public string get_DataAccessRoleArn();
    public void set_DataAccessRoleArn(string value);
    internal bool IsSetDataAccessRoleArn();
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
    public List`1<string> get_Phrases();
    public void set_Phrases(List`1<string> value);
    internal bool IsSetPhrases();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VocabularyFileUri();
    public void set_VocabularyFileUri(string value);
    internal bool IsSetVocabularyFileUri();
    public string get_VocabularyName();
    public void set_VocabularyName(string value);
    internal bool IsSetVocabularyName();
}
public class Amazon.TranscribeService.Model.CreateVocabularyResponse : AmazonWebServiceResponse {
    private string _failureReason;
    private LanguageCode _languageCode;
    private Nullable`1<DateTime> _lastModifiedTime;
    private string _vocabularyName;
    private VocabularyState _vocabularyState;
    public string FailureReason { get; public set; }
    public LanguageCode LanguageCode { get; public set; }
    public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyName { get; public set; }
    public VocabularyState VocabularyState { get; public set; }
    public string get_FailureReason();
    public void set_FailureReason(string value);
    internal bool IsSetFailureReason();
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public string get_VocabularyName();
    public void set_VocabularyName(string value);
    internal bool IsSetVocabularyName();
    public VocabularyState get_VocabularyState();
    public void set_VocabularyState(VocabularyState value);
    internal bool IsSetVocabularyState();
}
public class Amazon.TranscribeService.Model.DeleteCallAnalyticsCategoryRequest : AmazonTranscribeServiceRequest {
    private string _categoryName;
    [AWSPropertyAttribute]
public string CategoryName { get; public set; }
    public string get_CategoryName();
    public void set_CategoryName(string value);
    internal bool IsSetCategoryName();
}
public class Amazon.TranscribeService.Model.DeleteCallAnalyticsCategoryResponse : AmazonWebServiceResponse {
}
public class Amazon.TranscribeService.Model.DeleteCallAnalyticsJobRequest : AmazonTranscribeServiceRequest {
    private string _callAnalyticsJobName;
    [AWSPropertyAttribute]
public string CallAnalyticsJobName { get; public set; }
    public string get_CallAnalyticsJobName();
    public void set_CallAnalyticsJobName(string value);
    internal bool IsSetCallAnalyticsJobName();
}
public class Amazon.TranscribeService.Model.DeleteCallAnalyticsJobResponse : AmazonWebServiceResponse {
}
public class Amazon.TranscribeService.Model.DeleteLanguageModelRequest : AmazonTranscribeServiceRequest {
    private string _modelName;
    [AWSPropertyAttribute]
public string ModelName { get; public set; }
    public string get_ModelName();
    public void set_ModelName(string value);
    internal bool IsSetModelName();
}
public class Amazon.TranscribeService.Model.DeleteLanguageModelResponse : AmazonWebServiceResponse {
}
public class Amazon.TranscribeService.Model.DeleteMedicalScribeJobRequest : AmazonTranscribeServiceRequest {
    private string _medicalScribeJobName;
    [AWSPropertyAttribute]
public string MedicalScribeJobName { get; public set; }
    public string get_MedicalScribeJobName();
    public void set_MedicalScribeJobName(string value);
    internal bool IsSetMedicalScribeJobName();
}
public class Amazon.TranscribeService.Model.DeleteMedicalScribeJobResponse : AmazonWebServiceResponse {
}
public class Amazon.TranscribeService.Model.DeleteMedicalTranscriptionJobRequest : AmazonTranscribeServiceRequest {
    private string _medicalTranscriptionJobName;
    [AWSPropertyAttribute]
public string MedicalTranscriptionJobName { get; public set; }
    public string get_MedicalTranscriptionJobName();
    public void set_MedicalTranscriptionJobName(string value);
    internal bool IsSetMedicalTranscriptionJobName();
}
public class Amazon.TranscribeService.Model.DeleteMedicalTranscriptionJobResponse : AmazonWebServiceResponse {
}
public class Amazon.TranscribeService.Model.DeleteMedicalVocabularyRequest : AmazonTranscribeServiceRequest {
    private string _vocabularyName;
    [AWSPropertyAttribute]
public string VocabularyName { get; public set; }
    public string get_VocabularyName();
    public void set_VocabularyName(string value);
    internal bool IsSetVocabularyName();
}
public class Amazon.TranscribeService.Model.DeleteMedicalVocabularyResponse : AmazonWebServiceResponse {
}
public class Amazon.TranscribeService.Model.DeleteTranscriptionJobRequest : AmazonTranscribeServiceRequest {
    private string _transcriptionJobName;
    [AWSPropertyAttribute]
public string TranscriptionJobName { get; public set; }
    public string get_TranscriptionJobName();
    public void set_TranscriptionJobName(string value);
    internal bool IsSetTranscriptionJobName();
}
public class Amazon.TranscribeService.Model.DeleteTranscriptionJobResponse : AmazonWebServiceResponse {
}
public class Amazon.TranscribeService.Model.DeleteVocabularyFilterRequest : AmazonTranscribeServiceRequest {
    private string _vocabularyFilterName;
    [AWSPropertyAttribute]
public string VocabularyFilterName { get; public set; }
    public string get_VocabularyFilterName();
    public void set_VocabularyFilterName(string value);
    internal bool IsSetVocabularyFilterName();
}
public class Amazon.TranscribeService.Model.DeleteVocabularyFilterResponse : AmazonWebServiceResponse {
}
public class Amazon.TranscribeService.Model.DeleteVocabularyRequest : AmazonTranscribeServiceRequest {
    private string _vocabularyName;
    [AWSPropertyAttribute]
public string VocabularyName { get; public set; }
    public string get_VocabularyName();
    public void set_VocabularyName(string value);
    internal bool IsSetVocabularyName();
}
public class Amazon.TranscribeService.Model.DeleteVocabularyResponse : AmazonWebServiceResponse {
}
public class Amazon.TranscribeService.Model.DescribeLanguageModelRequest : AmazonTranscribeServiceRequest {
    private string _modelName;
    [AWSPropertyAttribute]
public string ModelName { get; public set; }
    public string get_ModelName();
    public void set_ModelName(string value);
    internal bool IsSetModelName();
}
public class Amazon.TranscribeService.Model.DescribeLanguageModelResponse : AmazonWebServiceResponse {
    private LanguageModel _languageModel;
    public LanguageModel LanguageModel { get; public set; }
    public LanguageModel get_LanguageModel();
    public void set_LanguageModel(LanguageModel value);
    internal bool IsSetLanguageModel();
}
public class Amazon.TranscribeService.Model.GetCallAnalyticsCategoryRequest : AmazonTranscribeServiceRequest {
    private string _categoryName;
    [AWSPropertyAttribute]
public string CategoryName { get; public set; }
    public string get_CategoryName();
    public void set_CategoryName(string value);
    internal bool IsSetCategoryName();
}
public class Amazon.TranscribeService.Model.GetCallAnalyticsCategoryResponse : AmazonWebServiceResponse {
    private CategoryProperties _categoryProperties;
    public CategoryProperties CategoryProperties { get; public set; }
    public CategoryProperties get_CategoryProperties();
    public void set_CategoryProperties(CategoryProperties value);
    internal bool IsSetCategoryProperties();
}
public class Amazon.TranscribeService.Model.GetCallAnalyticsJobRequest : AmazonTranscribeServiceRequest {
    private string _callAnalyticsJobName;
    [AWSPropertyAttribute]
public string CallAnalyticsJobName { get; public set; }
    public string get_CallAnalyticsJobName();
    public void set_CallAnalyticsJobName(string value);
    internal bool IsSetCallAnalyticsJobName();
}
public class Amazon.TranscribeService.Model.GetCallAnalyticsJobResponse : AmazonWebServiceResponse {
    private CallAnalyticsJob _callAnalyticsJob;
    public CallAnalyticsJob CallAnalyticsJob { get; public set; }
    public CallAnalyticsJob get_CallAnalyticsJob();
    public void set_CallAnalyticsJob(CallAnalyticsJob value);
    internal bool IsSetCallAnalyticsJob();
}
public class Amazon.TranscribeService.Model.GetMedicalScribeJobRequest : AmazonTranscribeServiceRequest {
    private string _medicalScribeJobName;
    [AWSPropertyAttribute]
public string MedicalScribeJobName { get; public set; }
    public string get_MedicalScribeJobName();
    public void set_MedicalScribeJobName(string value);
    internal bool IsSetMedicalScribeJobName();
}
public class Amazon.TranscribeService.Model.GetMedicalScribeJobResponse : AmazonWebServiceResponse {
    private MedicalScribeJob _medicalScribeJob;
    public MedicalScribeJob MedicalScribeJob { get; public set; }
    public MedicalScribeJob get_MedicalScribeJob();
    public void set_MedicalScribeJob(MedicalScribeJob value);
    internal bool IsSetMedicalScribeJob();
}
public class Amazon.TranscribeService.Model.GetMedicalTranscriptionJobRequest : AmazonTranscribeServiceRequest {
    private string _medicalTranscriptionJobName;
    [AWSPropertyAttribute]
public string MedicalTranscriptionJobName { get; public set; }
    public string get_MedicalTranscriptionJobName();
    public void set_MedicalTranscriptionJobName(string value);
    internal bool IsSetMedicalTranscriptionJobName();
}
public class Amazon.TranscribeService.Model.GetMedicalTranscriptionJobResponse : AmazonWebServiceResponse {
    private MedicalTranscriptionJob _medicalTranscriptionJob;
    public MedicalTranscriptionJob MedicalTranscriptionJob { get; public set; }
    public MedicalTranscriptionJob get_MedicalTranscriptionJob();
    public void set_MedicalTranscriptionJob(MedicalTranscriptionJob value);
    internal bool IsSetMedicalTranscriptionJob();
}
public class Amazon.TranscribeService.Model.GetMedicalVocabularyRequest : AmazonTranscribeServiceRequest {
    private string _vocabularyName;
    [AWSPropertyAttribute]
public string VocabularyName { get; public set; }
    public string get_VocabularyName();
    public void set_VocabularyName(string value);
    internal bool IsSetVocabularyName();
}
public class Amazon.TranscribeService.Model.GetMedicalVocabularyResponse : AmazonWebServiceResponse {
    private string _downloadUri;
    private string _failureReason;
    private LanguageCode _languageCode;
    private Nullable`1<DateTime> _lastModifiedTime;
    private string _vocabularyName;
    private VocabularyState _vocabularyState;
    [AWSPropertyAttribute]
public string DownloadUri { get; public set; }
    public string FailureReason { get; public set; }
    public LanguageCode LanguageCode { get; public set; }
    public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyName { get; public set; }
    public VocabularyState VocabularyState { get; public set; }
    public string get_DownloadUri();
    public void set_DownloadUri(string value);
    internal bool IsSetDownloadUri();
    public string get_FailureReason();
    public void set_FailureReason(string value);
    internal bool IsSetFailureReason();
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public string get_VocabularyName();
    public void set_VocabularyName(string value);
    internal bool IsSetVocabularyName();
    public VocabularyState get_VocabularyState();
    public void set_VocabularyState(VocabularyState value);
    internal bool IsSetVocabularyState();
}
public class Amazon.TranscribeService.Model.GetTranscriptionJobRequest : AmazonTranscribeServiceRequest {
    private string _transcriptionJobName;
    [AWSPropertyAttribute]
public string TranscriptionJobName { get; public set; }
    public string get_TranscriptionJobName();
    public void set_TranscriptionJobName(string value);
    internal bool IsSetTranscriptionJobName();
}
public class Amazon.TranscribeService.Model.GetTranscriptionJobResponse : AmazonWebServiceResponse {
    private TranscriptionJob _transcriptionJob;
    public TranscriptionJob TranscriptionJob { get; public set; }
    public TranscriptionJob get_TranscriptionJob();
    public void set_TranscriptionJob(TranscriptionJob value);
    internal bool IsSetTranscriptionJob();
}
public class Amazon.TranscribeService.Model.GetVocabularyFilterRequest : AmazonTranscribeServiceRequest {
    private string _vocabularyFilterName;
    [AWSPropertyAttribute]
public string VocabularyFilterName { get; public set; }
    public string get_VocabularyFilterName();
    public void set_VocabularyFilterName(string value);
    internal bool IsSetVocabularyFilterName();
}
public class Amazon.TranscribeService.Model.GetVocabularyFilterResponse : AmazonWebServiceResponse {
    private string _downloadUri;
    private LanguageCode _languageCode;
    private Nullable`1<DateTime> _lastModifiedTime;
    private string _vocabularyFilterName;
    [AWSPropertyAttribute]
public string DownloadUri { get; public set; }
    public LanguageCode LanguageCode { get; public set; }
    public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyFilterName { get; public set; }
    public string get_DownloadUri();
    public void set_DownloadUri(string value);
    internal bool IsSetDownloadUri();
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public string get_VocabularyFilterName();
    public void set_VocabularyFilterName(string value);
    internal bool IsSetVocabularyFilterName();
}
public class Amazon.TranscribeService.Model.GetVocabularyRequest : AmazonTranscribeServiceRequest {
    private string _vocabularyName;
    [AWSPropertyAttribute]
public string VocabularyName { get; public set; }
    public string get_VocabularyName();
    public void set_VocabularyName(string value);
    internal bool IsSetVocabularyName();
}
public class Amazon.TranscribeService.Model.GetVocabularyResponse : AmazonWebServiceResponse {
    private string _downloadUri;
    private string _failureReason;
    private LanguageCode _languageCode;
    private Nullable`1<DateTime> _lastModifiedTime;
    private string _vocabularyName;
    private VocabularyState _vocabularyState;
    [AWSPropertyAttribute]
public string DownloadUri { get; public set; }
    public string FailureReason { get; public set; }
    public LanguageCode LanguageCode { get; public set; }
    public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyName { get; public set; }
    public VocabularyState VocabularyState { get; public set; }
    public string get_DownloadUri();
    public void set_DownloadUri(string value);
    internal bool IsSetDownloadUri();
    public string get_FailureReason();
    public void set_FailureReason(string value);
    internal bool IsSetFailureReason();
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public string get_VocabularyName();
    public void set_VocabularyName(string value);
    internal bool IsSetVocabularyName();
    public VocabularyState get_VocabularyState();
    public void set_VocabularyState(VocabularyState value);
    internal bool IsSetVocabularyState();
}
public interface Amazon.TranscribeService.Model.IListCallAnalyticsCategoriesPaginator {
    public IPaginatedEnumerable`1<ListCallAnalyticsCategoriesResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListCallAnalyticsCategoriesResponse> get_Responses();
}
public interface Amazon.TranscribeService.Model.IListCallAnalyticsJobsPaginator {
    public IPaginatedEnumerable`1<ListCallAnalyticsJobsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListCallAnalyticsJobsResponse> get_Responses();
}
public interface Amazon.TranscribeService.Model.IListLanguageModelsPaginator {
    public IPaginatedEnumerable`1<ListLanguageModelsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListLanguageModelsResponse> get_Responses();
}
public interface Amazon.TranscribeService.Model.IListMedicalScribeJobsPaginator {
    public IPaginatedEnumerable`1<ListMedicalScribeJobsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListMedicalScribeJobsResponse> get_Responses();
}
public interface Amazon.TranscribeService.Model.IListMedicalTranscriptionJobsPaginator {
    public IPaginatedEnumerable`1<ListMedicalTranscriptionJobsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListMedicalTranscriptionJobsResponse> get_Responses();
}
public interface Amazon.TranscribeService.Model.IListMedicalVocabulariesPaginator {
    public IPaginatedEnumerable`1<ListMedicalVocabulariesResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListMedicalVocabulariesResponse> get_Responses();
}
public interface Amazon.TranscribeService.Model.IListTranscriptionJobsPaginator {
    public IPaginatedEnumerable`1<ListTranscriptionJobsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListTranscriptionJobsResponse> get_Responses();
}
public interface Amazon.TranscribeService.Model.IListVocabulariesPaginator {
    public IPaginatedEnumerable`1<ListVocabulariesResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListVocabulariesResponse> get_Responses();
}
public interface Amazon.TranscribeService.Model.IListVocabularyFiltersPaginator {
    public IPaginatedEnumerable`1<ListVocabularyFiltersResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListVocabularyFiltersResponse> get_Responses();
}
public class Amazon.TranscribeService.Model.InputDataConfig : object {
    private string _dataAccessRoleArn;
    private string _s3Uri;
    private string _tuningDataS3Uri;
    [AWSPropertyAttribute]
public string DataAccessRoleArn { get; public set; }
    [AWSPropertyAttribute]
public string S3Uri { get; public set; }
    [AWSPropertyAttribute]
public string TuningDataS3Uri { get; public set; }
    public string get_DataAccessRoleArn();
    public void set_DataAccessRoleArn(string value);
    internal bool IsSetDataAccessRoleArn();
    public string get_S3Uri();
    public void set_S3Uri(string value);
    internal bool IsSetS3Uri();
    public string get_TuningDataS3Uri();
    public void set_TuningDataS3Uri(string value);
    internal bool IsSetTuningDataS3Uri();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.AbsoluteTimeRangeMarshaller : object {
    public static AbsoluteTimeRangeMarshaller Instance;
    private static AbsoluteTimeRangeMarshaller();
    public sealed virtual void Marshall(AbsoluteTimeRange requestObject, JsonMarshallerContext context);
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.AbsoluteTimeRangeUnmarshaller : object {
    private static AbsoluteTimeRangeUnmarshaller _instance;
    public static AbsoluteTimeRangeUnmarshaller Instance { get; }
    private static AbsoluteTimeRangeUnmarshaller();
    private sealed virtual override AbsoluteTimeRange Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.AbsoluteTimeRange,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AbsoluteTimeRange Unmarshall(JsonUnmarshallerContext context);
    public static AbsoluteTimeRangeUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller : object {
    private static BadRequestExceptionUnmarshaller _instance;
    public static BadRequestExceptionUnmarshaller Instance { get; }
    private static BadRequestExceptionUnmarshaller();
    public sealed virtual BadRequestException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual BadRequestException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static BadRequestExceptionUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.CallAnalyticsJobDetailsUnmarshaller : object {
    private static CallAnalyticsJobDetailsUnmarshaller _instance;
    public static CallAnalyticsJobDetailsUnmarshaller Instance { get; }
    private static CallAnalyticsJobDetailsUnmarshaller();
    private sealed virtual override CallAnalyticsJobDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.CallAnalyticsJobDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CallAnalyticsJobDetails Unmarshall(JsonUnmarshallerContext context);
    public static CallAnalyticsJobDetailsUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.CallAnalyticsJobSettingsMarshaller : object {
    public static CallAnalyticsJobSettingsMarshaller Instance;
    private static CallAnalyticsJobSettingsMarshaller();
    public sealed virtual void Marshall(CallAnalyticsJobSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.CallAnalyticsJobSettingsUnmarshaller : object {
    private static CallAnalyticsJobSettingsUnmarshaller _instance;
    public static CallAnalyticsJobSettingsUnmarshaller Instance { get; }
    private static CallAnalyticsJobSettingsUnmarshaller();
    private sealed virtual override CallAnalyticsJobSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.CallAnalyticsJobSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CallAnalyticsJobSettings Unmarshall(JsonUnmarshallerContext context);
    public static CallAnalyticsJobSettingsUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.CallAnalyticsJobSummaryUnmarshaller : object {
    private static CallAnalyticsJobSummaryUnmarshaller _instance;
    public static CallAnalyticsJobSummaryUnmarshaller Instance { get; }
    private static CallAnalyticsJobSummaryUnmarshaller();
    private sealed virtual override CallAnalyticsJobSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.CallAnalyticsJobSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CallAnalyticsJobSummary Unmarshall(JsonUnmarshallerContext context);
    public static CallAnalyticsJobSummaryUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.CallAnalyticsJobUnmarshaller : object {
    private static CallAnalyticsJobUnmarshaller _instance;
    public static CallAnalyticsJobUnmarshaller Instance { get; }
    private static CallAnalyticsJobUnmarshaller();
    private sealed virtual override CallAnalyticsJob Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.CallAnalyticsJob,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CallAnalyticsJob Unmarshall(JsonUnmarshallerContext context);
    public static CallAnalyticsJobUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.CallAnalyticsSkippedFeatureUnmarshaller : object {
    private static CallAnalyticsSkippedFeatureUnmarshaller _instance;
    public static CallAnalyticsSkippedFeatureUnmarshaller Instance { get; }
    private static CallAnalyticsSkippedFeatureUnmarshaller();
    private sealed virtual override CallAnalyticsSkippedFeature Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.CallAnalyticsSkippedFeature,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CallAnalyticsSkippedFeature Unmarshall(JsonUnmarshallerContext context);
    public static CallAnalyticsSkippedFeatureUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.CategoryPropertiesUnmarshaller : object {
    private static CategoryPropertiesUnmarshaller _instance;
    public static CategoryPropertiesUnmarshaller Instance { get; }
    private static CategoryPropertiesUnmarshaller();
    private sealed virtual override CategoryProperties Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.CategoryProperties,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CategoryProperties Unmarshall(JsonUnmarshallerContext context);
    public static CategoryPropertiesUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ChannelDefinitionMarshaller : object {
    public static ChannelDefinitionMarshaller Instance;
    private static ChannelDefinitionMarshaller();
    public sealed virtual void Marshall(ChannelDefinition requestObject, JsonMarshallerContext context);
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ChannelDefinitionUnmarshaller : object {
    private static ChannelDefinitionUnmarshaller _instance;
    public static ChannelDefinitionUnmarshaller Instance { get; }
    private static ChannelDefinitionUnmarshaller();
    private sealed virtual override ChannelDefinition Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.ChannelDefinition,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ChannelDefinition Unmarshall(JsonUnmarshallerContext context);
    public static ChannelDefinitionUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller : object {
    private static ConflictExceptionUnmarshaller _instance;
    public static ConflictExceptionUnmarshaller Instance { get; }
    private static ConflictExceptionUnmarshaller();
    public sealed virtual ConflictException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ConflictException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConflictExceptionUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ContentRedactionMarshaller : object {
    public static ContentRedactionMarshaller Instance;
    private static ContentRedactionMarshaller();
    public sealed virtual void Marshall(ContentRedaction requestObject, JsonMarshallerContext context);
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ContentRedactionUnmarshaller : object {
    private static ContentRedactionUnmarshaller _instance;
    public static ContentRedactionUnmarshaller Instance { get; }
    private static ContentRedactionUnmarshaller();
    private sealed virtual override ContentRedaction Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.ContentRedaction,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ContentRedaction Unmarshall(JsonUnmarshallerContext context);
    public static ContentRedactionUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.CreateCallAnalyticsCategoryRequestMarshaller : object {
    private static CreateCallAnalyticsCategoryRequestMarshaller _instance;
    public static CreateCallAnalyticsCategoryRequestMarshaller Instance { get; }
    private static CreateCallAnalyticsCategoryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateCallAnalyticsCategoryRequest publicRequest);
    internal static CreateCallAnalyticsCategoryRequestMarshaller GetInstance();
    public static CreateCallAnalyticsCategoryRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.CreateCallAnalyticsCategoryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateCallAnalyticsCategoryResponseUnmarshaller _instance;
    public static CreateCallAnalyticsCategoryResponseUnmarshaller Instance { get; }
    private static CreateCallAnalyticsCategoryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateCallAnalyticsCategoryResponseUnmarshaller GetInstance();
    public static CreateCallAnalyticsCategoryResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.CreateLanguageModelRequestMarshaller : object {
    private static CreateLanguageModelRequestMarshaller _instance;
    public static CreateLanguageModelRequestMarshaller Instance { get; }
    private static CreateLanguageModelRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateLanguageModelRequest publicRequest);
    internal static CreateLanguageModelRequestMarshaller GetInstance();
    public static CreateLanguageModelRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.CreateLanguageModelResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateLanguageModelResponseUnmarshaller _instance;
    public static CreateLanguageModelResponseUnmarshaller Instance { get; }
    private static CreateLanguageModelResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateLanguageModelResponseUnmarshaller GetInstance();
    public static CreateLanguageModelResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.CreateMedicalVocabularyRequestMarshaller : object {
    private static CreateMedicalVocabularyRequestMarshaller _instance;
    public static CreateMedicalVocabularyRequestMarshaller Instance { get; }
    private static CreateMedicalVocabularyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateMedicalVocabularyRequest publicRequest);
    internal static CreateMedicalVocabularyRequestMarshaller GetInstance();
    public static CreateMedicalVocabularyRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.CreateMedicalVocabularyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateMedicalVocabularyResponseUnmarshaller _instance;
    public static CreateMedicalVocabularyResponseUnmarshaller Instance { get; }
    private static CreateMedicalVocabularyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateMedicalVocabularyResponseUnmarshaller GetInstance();
    public static CreateMedicalVocabularyResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.CreateVocabularyFilterRequestMarshaller : object {
    private static CreateVocabularyFilterRequestMarshaller _instance;
    public static CreateVocabularyFilterRequestMarshaller Instance { get; }
    private static CreateVocabularyFilterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVocabularyFilterRequest publicRequest);
    internal static CreateVocabularyFilterRequestMarshaller GetInstance();
    public static CreateVocabularyFilterRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.CreateVocabularyFilterResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateVocabularyFilterResponseUnmarshaller _instance;
    public static CreateVocabularyFilterResponseUnmarshaller Instance { get; }
    private static CreateVocabularyFilterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVocabularyFilterResponseUnmarshaller GetInstance();
    public static CreateVocabularyFilterResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.CreateVocabularyRequestMarshaller : object {
    private static CreateVocabularyRequestMarshaller _instance;
    public static CreateVocabularyRequestMarshaller Instance { get; }
    private static CreateVocabularyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVocabularyRequest publicRequest);
    internal static CreateVocabularyRequestMarshaller GetInstance();
    public static CreateVocabularyRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.CreateVocabularyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateVocabularyResponseUnmarshaller _instance;
    public static CreateVocabularyResponseUnmarshaller Instance { get; }
    private static CreateVocabularyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVocabularyResponseUnmarshaller GetInstance();
    public static CreateVocabularyResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.DeleteCallAnalyticsCategoryRequestMarshaller : object {
    private static DeleteCallAnalyticsCategoryRequestMarshaller _instance;
    public static DeleteCallAnalyticsCategoryRequestMarshaller Instance { get; }
    private static DeleteCallAnalyticsCategoryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteCallAnalyticsCategoryRequest publicRequest);
    internal static DeleteCallAnalyticsCategoryRequestMarshaller GetInstance();
    public static DeleteCallAnalyticsCategoryRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.DeleteCallAnalyticsCategoryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteCallAnalyticsCategoryResponseUnmarshaller _instance;
    public static DeleteCallAnalyticsCategoryResponseUnmarshaller Instance { get; }
    private static DeleteCallAnalyticsCategoryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteCallAnalyticsCategoryResponseUnmarshaller GetInstance();
    public static DeleteCallAnalyticsCategoryResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.DeleteCallAnalyticsJobRequestMarshaller : object {
    private static DeleteCallAnalyticsJobRequestMarshaller _instance;
    public static DeleteCallAnalyticsJobRequestMarshaller Instance { get; }
    private static DeleteCallAnalyticsJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteCallAnalyticsJobRequest publicRequest);
    internal static DeleteCallAnalyticsJobRequestMarshaller GetInstance();
    public static DeleteCallAnalyticsJobRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.DeleteCallAnalyticsJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteCallAnalyticsJobResponseUnmarshaller _instance;
    public static DeleteCallAnalyticsJobResponseUnmarshaller Instance { get; }
    private static DeleteCallAnalyticsJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteCallAnalyticsJobResponseUnmarshaller GetInstance();
    public static DeleteCallAnalyticsJobResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.DeleteLanguageModelRequestMarshaller : object {
    private static DeleteLanguageModelRequestMarshaller _instance;
    public static DeleteLanguageModelRequestMarshaller Instance { get; }
    private static DeleteLanguageModelRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteLanguageModelRequest publicRequest);
    internal static DeleteLanguageModelRequestMarshaller GetInstance();
    public static DeleteLanguageModelRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.DeleteLanguageModelResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteLanguageModelResponseUnmarshaller _instance;
    public static DeleteLanguageModelResponseUnmarshaller Instance { get; }
    private static DeleteLanguageModelResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteLanguageModelResponseUnmarshaller GetInstance();
    public static DeleteLanguageModelResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.DeleteMedicalScribeJobRequestMarshaller : object {
    private static DeleteMedicalScribeJobRequestMarshaller _instance;
    public static DeleteMedicalScribeJobRequestMarshaller Instance { get; }
    private static DeleteMedicalScribeJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteMedicalScribeJobRequest publicRequest);
    internal static DeleteMedicalScribeJobRequestMarshaller GetInstance();
    public static DeleteMedicalScribeJobRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.DeleteMedicalScribeJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteMedicalScribeJobResponseUnmarshaller _instance;
    public static DeleteMedicalScribeJobResponseUnmarshaller Instance { get; }
    private static DeleteMedicalScribeJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteMedicalScribeJobResponseUnmarshaller GetInstance();
    public static DeleteMedicalScribeJobResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.DeleteMedicalTranscriptionJobRequestMarshaller : object {
    private static DeleteMedicalTranscriptionJobRequestMarshaller _instance;
    public static DeleteMedicalTranscriptionJobRequestMarshaller Instance { get; }
    private static DeleteMedicalTranscriptionJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteMedicalTranscriptionJobRequest publicRequest);
    internal static DeleteMedicalTranscriptionJobRequestMarshaller GetInstance();
    public static DeleteMedicalTranscriptionJobRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.DeleteMedicalTranscriptionJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteMedicalTranscriptionJobResponseUnmarshaller _instance;
    public static DeleteMedicalTranscriptionJobResponseUnmarshaller Instance { get; }
    private static DeleteMedicalTranscriptionJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteMedicalTranscriptionJobResponseUnmarshaller GetInstance();
    public static DeleteMedicalTranscriptionJobResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.DeleteMedicalVocabularyRequestMarshaller : object {
    private static DeleteMedicalVocabularyRequestMarshaller _instance;
    public static DeleteMedicalVocabularyRequestMarshaller Instance { get; }
    private static DeleteMedicalVocabularyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteMedicalVocabularyRequest publicRequest);
    internal static DeleteMedicalVocabularyRequestMarshaller GetInstance();
    public static DeleteMedicalVocabularyRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.DeleteMedicalVocabularyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteMedicalVocabularyResponseUnmarshaller _instance;
    public static DeleteMedicalVocabularyResponseUnmarshaller Instance { get; }
    private static DeleteMedicalVocabularyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteMedicalVocabularyResponseUnmarshaller GetInstance();
    public static DeleteMedicalVocabularyResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.DeleteTranscriptionJobRequestMarshaller : object {
    private static DeleteTranscriptionJobRequestMarshaller _instance;
    public static DeleteTranscriptionJobRequestMarshaller Instance { get; }
    private static DeleteTranscriptionJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTranscriptionJobRequest publicRequest);
    internal static DeleteTranscriptionJobRequestMarshaller GetInstance();
    public static DeleteTranscriptionJobRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.DeleteTranscriptionJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteTranscriptionJobResponseUnmarshaller _instance;
    public static DeleteTranscriptionJobResponseUnmarshaller Instance { get; }
    private static DeleteTranscriptionJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTranscriptionJobResponseUnmarshaller GetInstance();
    public static DeleteTranscriptionJobResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.DeleteVocabularyFilterRequestMarshaller : object {
    private static DeleteVocabularyFilterRequestMarshaller _instance;
    public static DeleteVocabularyFilterRequestMarshaller Instance { get; }
    private static DeleteVocabularyFilterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVocabularyFilterRequest publicRequest);
    internal static DeleteVocabularyFilterRequestMarshaller GetInstance();
    public static DeleteVocabularyFilterRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.DeleteVocabularyFilterResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteVocabularyFilterResponseUnmarshaller _instance;
    public static DeleteVocabularyFilterResponseUnmarshaller Instance { get; }
    private static DeleteVocabularyFilterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVocabularyFilterResponseUnmarshaller GetInstance();
    public static DeleteVocabularyFilterResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.DeleteVocabularyRequestMarshaller : object {
    private static DeleteVocabularyRequestMarshaller _instance;
    public static DeleteVocabularyRequestMarshaller Instance { get; }
    private static DeleteVocabularyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVocabularyRequest publicRequest);
    internal static DeleteVocabularyRequestMarshaller GetInstance();
    public static DeleteVocabularyRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.DeleteVocabularyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteVocabularyResponseUnmarshaller _instance;
    public static DeleteVocabularyResponseUnmarshaller Instance { get; }
    private static DeleteVocabularyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVocabularyResponseUnmarshaller GetInstance();
    public static DeleteVocabularyResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.DescribeLanguageModelRequestMarshaller : object {
    private static DescribeLanguageModelRequestMarshaller _instance;
    public static DescribeLanguageModelRequestMarshaller Instance { get; }
    private static DescribeLanguageModelRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLanguageModelRequest publicRequest);
    internal static DescribeLanguageModelRequestMarshaller GetInstance();
    public static DescribeLanguageModelRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.DescribeLanguageModelResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeLanguageModelResponseUnmarshaller _instance;
    public static DescribeLanguageModelResponseUnmarshaller Instance { get; }
    private static DescribeLanguageModelResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLanguageModelResponseUnmarshaller GetInstance();
    public static DescribeLanguageModelResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.GetCallAnalyticsCategoryRequestMarshaller : object {
    private static GetCallAnalyticsCategoryRequestMarshaller _instance;
    public static GetCallAnalyticsCategoryRequestMarshaller Instance { get; }
    private static GetCallAnalyticsCategoryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetCallAnalyticsCategoryRequest publicRequest);
    internal static GetCallAnalyticsCategoryRequestMarshaller GetInstance();
    public static GetCallAnalyticsCategoryRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.GetCallAnalyticsCategoryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetCallAnalyticsCategoryResponseUnmarshaller _instance;
    public static GetCallAnalyticsCategoryResponseUnmarshaller Instance { get; }
    private static GetCallAnalyticsCategoryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetCallAnalyticsCategoryResponseUnmarshaller GetInstance();
    public static GetCallAnalyticsCategoryResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.GetCallAnalyticsJobRequestMarshaller : object {
    private static GetCallAnalyticsJobRequestMarshaller _instance;
    public static GetCallAnalyticsJobRequestMarshaller Instance { get; }
    private static GetCallAnalyticsJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetCallAnalyticsJobRequest publicRequest);
    internal static GetCallAnalyticsJobRequestMarshaller GetInstance();
    public static GetCallAnalyticsJobRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.GetCallAnalyticsJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetCallAnalyticsJobResponseUnmarshaller _instance;
    public static GetCallAnalyticsJobResponseUnmarshaller Instance { get; }
    private static GetCallAnalyticsJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetCallAnalyticsJobResponseUnmarshaller GetInstance();
    public static GetCallAnalyticsJobResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.GetMedicalScribeJobRequestMarshaller : object {
    private static GetMedicalScribeJobRequestMarshaller _instance;
    public static GetMedicalScribeJobRequestMarshaller Instance { get; }
    private static GetMedicalScribeJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetMedicalScribeJobRequest publicRequest);
    internal static GetMedicalScribeJobRequestMarshaller GetInstance();
    public static GetMedicalScribeJobRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.GetMedicalScribeJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetMedicalScribeJobResponseUnmarshaller _instance;
    public static GetMedicalScribeJobResponseUnmarshaller Instance { get; }
    private static GetMedicalScribeJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetMedicalScribeJobResponseUnmarshaller GetInstance();
    public static GetMedicalScribeJobResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.GetMedicalTranscriptionJobRequestMarshaller : object {
    private static GetMedicalTranscriptionJobRequestMarshaller _instance;
    public static GetMedicalTranscriptionJobRequestMarshaller Instance { get; }
    private static GetMedicalTranscriptionJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetMedicalTranscriptionJobRequest publicRequest);
    internal static GetMedicalTranscriptionJobRequestMarshaller GetInstance();
    public static GetMedicalTranscriptionJobRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.GetMedicalTranscriptionJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetMedicalTranscriptionJobResponseUnmarshaller _instance;
    public static GetMedicalTranscriptionJobResponseUnmarshaller Instance { get; }
    private static GetMedicalTranscriptionJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetMedicalTranscriptionJobResponseUnmarshaller GetInstance();
    public static GetMedicalTranscriptionJobResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.GetMedicalVocabularyRequestMarshaller : object {
    private static GetMedicalVocabularyRequestMarshaller _instance;
    public static GetMedicalVocabularyRequestMarshaller Instance { get; }
    private static GetMedicalVocabularyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetMedicalVocabularyRequest publicRequest);
    internal static GetMedicalVocabularyRequestMarshaller GetInstance();
    public static GetMedicalVocabularyRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.GetMedicalVocabularyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetMedicalVocabularyResponseUnmarshaller _instance;
    public static GetMedicalVocabularyResponseUnmarshaller Instance { get; }
    private static GetMedicalVocabularyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetMedicalVocabularyResponseUnmarshaller GetInstance();
    public static GetMedicalVocabularyResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.GetTranscriptionJobRequestMarshaller : object {
    private static GetTranscriptionJobRequestMarshaller _instance;
    public static GetTranscriptionJobRequestMarshaller Instance { get; }
    private static GetTranscriptionJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTranscriptionJobRequest publicRequest);
    internal static GetTranscriptionJobRequestMarshaller GetInstance();
    public static GetTranscriptionJobRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.GetTranscriptionJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetTranscriptionJobResponseUnmarshaller _instance;
    public static GetTranscriptionJobResponseUnmarshaller Instance { get; }
    private static GetTranscriptionJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTranscriptionJobResponseUnmarshaller GetInstance();
    public static GetTranscriptionJobResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.GetVocabularyFilterRequestMarshaller : object {
    private static GetVocabularyFilterRequestMarshaller _instance;
    public static GetVocabularyFilterRequestMarshaller Instance { get; }
    private static GetVocabularyFilterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetVocabularyFilterRequest publicRequest);
    internal static GetVocabularyFilterRequestMarshaller GetInstance();
    public static GetVocabularyFilterRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.GetVocabularyFilterResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetVocabularyFilterResponseUnmarshaller _instance;
    public static GetVocabularyFilterResponseUnmarshaller Instance { get; }
    private static GetVocabularyFilterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetVocabularyFilterResponseUnmarshaller GetInstance();
    public static GetVocabularyFilterResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.GetVocabularyRequestMarshaller : object {
    private static GetVocabularyRequestMarshaller _instance;
    public static GetVocabularyRequestMarshaller Instance { get; }
    private static GetVocabularyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetVocabularyRequest publicRequest);
    internal static GetVocabularyRequestMarshaller GetInstance();
    public static GetVocabularyRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.GetVocabularyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetVocabularyResponseUnmarshaller _instance;
    public static GetVocabularyResponseUnmarshaller Instance { get; }
    private static GetVocabularyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetVocabularyResponseUnmarshaller GetInstance();
    public static GetVocabularyResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.InputDataConfigMarshaller : object {
    public static InputDataConfigMarshaller Instance;
    private static InputDataConfigMarshaller();
    public sealed virtual void Marshall(InputDataConfig requestObject, JsonMarshallerContext context);
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.InputDataConfigUnmarshaller : object {
    private static InputDataConfigUnmarshaller _instance;
    public static InputDataConfigUnmarshaller Instance { get; }
    private static InputDataConfigUnmarshaller();
    private sealed virtual override InputDataConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.InputDataConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InputDataConfig Unmarshall(JsonUnmarshallerContext context);
    public static InputDataConfigUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.InternalFailureExceptionUnmarshaller : object {
    private static InternalFailureExceptionUnmarshaller _instance;
    public static InternalFailureExceptionUnmarshaller Instance { get; }
    private static InternalFailureExceptionUnmarshaller();
    public sealed virtual InternalFailureException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InternalFailureException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InternalFailureExceptionUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.InterruptionFilterMarshaller : object {
    public static InterruptionFilterMarshaller Instance;
    private static InterruptionFilterMarshaller();
    public sealed virtual void Marshall(InterruptionFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.InterruptionFilterUnmarshaller : object {
    private static InterruptionFilterUnmarshaller _instance;
    public static InterruptionFilterUnmarshaller Instance { get; }
    private static InterruptionFilterUnmarshaller();
    private sealed virtual override InterruptionFilter Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.InterruptionFilter,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InterruptionFilter Unmarshall(JsonUnmarshallerContext context);
    public static InterruptionFilterUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.JobExecutionSettingsMarshaller : object {
    public static JobExecutionSettingsMarshaller Instance;
    private static JobExecutionSettingsMarshaller();
    public sealed virtual void Marshall(JobExecutionSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.JobExecutionSettingsUnmarshaller : object {
    private static JobExecutionSettingsUnmarshaller _instance;
    public static JobExecutionSettingsUnmarshaller Instance { get; }
    private static JobExecutionSettingsUnmarshaller();
    private sealed virtual override JobExecutionSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.JobExecutionSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JobExecutionSettings Unmarshall(JsonUnmarshallerContext context);
    public static JobExecutionSettingsUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.LanguageCodeItemUnmarshaller : object {
    private static LanguageCodeItemUnmarshaller _instance;
    public static LanguageCodeItemUnmarshaller Instance { get; }
    private static LanguageCodeItemUnmarshaller();
    private sealed virtual override LanguageCodeItem Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.LanguageCodeItem,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LanguageCodeItem Unmarshall(JsonUnmarshallerContext context);
    public static LanguageCodeItemUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.LanguageIdSettingsMarshaller : object {
    public static LanguageIdSettingsMarshaller Instance;
    private static LanguageIdSettingsMarshaller();
    public sealed virtual void Marshall(LanguageIdSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.LanguageIdSettingsUnmarshaller : object {
    private static LanguageIdSettingsUnmarshaller _instance;
    public static LanguageIdSettingsUnmarshaller Instance { get; }
    private static LanguageIdSettingsUnmarshaller();
    private sealed virtual override LanguageIdSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.LanguageIdSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LanguageIdSettings Unmarshall(JsonUnmarshallerContext context);
    public static LanguageIdSettingsUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.LanguageModelUnmarshaller : object {
    private static LanguageModelUnmarshaller _instance;
    public static LanguageModelUnmarshaller Instance { get; }
    private static LanguageModelUnmarshaller();
    private sealed virtual override LanguageModel Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.LanguageModel,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LanguageModel Unmarshall(JsonUnmarshallerContext context);
    public static LanguageModelUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller : object {
    private static LimitExceededExceptionUnmarshaller _instance;
    public static LimitExceededExceptionUnmarshaller Instance { get; }
    private static LimitExceededExceptionUnmarshaller();
    public sealed virtual LimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual LimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static LimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ListCallAnalyticsCategoriesRequestMarshaller : object {
    private static ListCallAnalyticsCategoriesRequestMarshaller _instance;
    public static ListCallAnalyticsCategoriesRequestMarshaller Instance { get; }
    private static ListCallAnalyticsCategoriesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListCallAnalyticsCategoriesRequest publicRequest);
    internal static ListCallAnalyticsCategoriesRequestMarshaller GetInstance();
    public static ListCallAnalyticsCategoriesRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ListCallAnalyticsCategoriesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListCallAnalyticsCategoriesResponseUnmarshaller _instance;
    public static ListCallAnalyticsCategoriesResponseUnmarshaller Instance { get; }
    private static ListCallAnalyticsCategoriesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListCallAnalyticsCategoriesResponseUnmarshaller GetInstance();
    public static ListCallAnalyticsCategoriesResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ListCallAnalyticsJobsRequestMarshaller : object {
    private static ListCallAnalyticsJobsRequestMarshaller _instance;
    public static ListCallAnalyticsJobsRequestMarshaller Instance { get; }
    private static ListCallAnalyticsJobsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListCallAnalyticsJobsRequest publicRequest);
    internal static ListCallAnalyticsJobsRequestMarshaller GetInstance();
    public static ListCallAnalyticsJobsRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ListCallAnalyticsJobsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListCallAnalyticsJobsResponseUnmarshaller _instance;
    public static ListCallAnalyticsJobsResponseUnmarshaller Instance { get; }
    private static ListCallAnalyticsJobsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListCallAnalyticsJobsResponseUnmarshaller GetInstance();
    public static ListCallAnalyticsJobsResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ListLanguageModelsRequestMarshaller : object {
    private static ListLanguageModelsRequestMarshaller _instance;
    public static ListLanguageModelsRequestMarshaller Instance { get; }
    private static ListLanguageModelsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListLanguageModelsRequest publicRequest);
    internal static ListLanguageModelsRequestMarshaller GetInstance();
    public static ListLanguageModelsRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ListLanguageModelsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListLanguageModelsResponseUnmarshaller _instance;
    public static ListLanguageModelsResponseUnmarshaller Instance { get; }
    private static ListLanguageModelsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListLanguageModelsResponseUnmarshaller GetInstance();
    public static ListLanguageModelsResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ListMedicalScribeJobsRequestMarshaller : object {
    private static ListMedicalScribeJobsRequestMarshaller _instance;
    public static ListMedicalScribeJobsRequestMarshaller Instance { get; }
    private static ListMedicalScribeJobsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListMedicalScribeJobsRequest publicRequest);
    internal static ListMedicalScribeJobsRequestMarshaller GetInstance();
    public static ListMedicalScribeJobsRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ListMedicalScribeJobsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListMedicalScribeJobsResponseUnmarshaller _instance;
    public static ListMedicalScribeJobsResponseUnmarshaller Instance { get; }
    private static ListMedicalScribeJobsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListMedicalScribeJobsResponseUnmarshaller GetInstance();
    public static ListMedicalScribeJobsResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ListMedicalTranscriptionJobsRequestMarshaller : object {
    private static ListMedicalTranscriptionJobsRequestMarshaller _instance;
    public static ListMedicalTranscriptionJobsRequestMarshaller Instance { get; }
    private static ListMedicalTranscriptionJobsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListMedicalTranscriptionJobsRequest publicRequest);
    internal static ListMedicalTranscriptionJobsRequestMarshaller GetInstance();
    public static ListMedicalTranscriptionJobsRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ListMedicalTranscriptionJobsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListMedicalTranscriptionJobsResponseUnmarshaller _instance;
    public static ListMedicalTranscriptionJobsResponseUnmarshaller Instance { get; }
    private static ListMedicalTranscriptionJobsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListMedicalTranscriptionJobsResponseUnmarshaller GetInstance();
    public static ListMedicalTranscriptionJobsResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ListMedicalVocabulariesRequestMarshaller : object {
    private static ListMedicalVocabulariesRequestMarshaller _instance;
    public static ListMedicalVocabulariesRequestMarshaller Instance { get; }
    private static ListMedicalVocabulariesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListMedicalVocabulariesRequest publicRequest);
    internal static ListMedicalVocabulariesRequestMarshaller GetInstance();
    public static ListMedicalVocabulariesRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ListMedicalVocabulariesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListMedicalVocabulariesResponseUnmarshaller _instance;
    public static ListMedicalVocabulariesResponseUnmarshaller Instance { get; }
    private static ListMedicalVocabulariesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListMedicalVocabulariesResponseUnmarshaller GetInstance();
    public static ListMedicalVocabulariesResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller : object {
    private static ListTagsForResourceRequestMarshaller _instance;
    public static ListTagsForResourceRequestMarshaller Instance { get; }
    private static ListTagsForResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsForResourceRequest publicRequest);
    internal static ListTagsForResourceRequestMarshaller GetInstance();
    public static ListTagsForResourceRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTagsForResourceResponseUnmarshaller _instance;
    public static ListTagsForResourceResponseUnmarshaller Instance { get; }
    private static ListTagsForResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsForResourceResponseUnmarshaller GetInstance();
    public static ListTagsForResourceResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ListTranscriptionJobsRequestMarshaller : object {
    private static ListTranscriptionJobsRequestMarshaller _instance;
    public static ListTranscriptionJobsRequestMarshaller Instance { get; }
    private static ListTranscriptionJobsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTranscriptionJobsRequest publicRequest);
    internal static ListTranscriptionJobsRequestMarshaller GetInstance();
    public static ListTranscriptionJobsRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ListTranscriptionJobsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTranscriptionJobsResponseUnmarshaller _instance;
    public static ListTranscriptionJobsResponseUnmarshaller Instance { get; }
    private static ListTranscriptionJobsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTranscriptionJobsResponseUnmarshaller GetInstance();
    public static ListTranscriptionJobsResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ListVocabulariesRequestMarshaller : object {
    private static ListVocabulariesRequestMarshaller _instance;
    public static ListVocabulariesRequestMarshaller Instance { get; }
    private static ListVocabulariesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListVocabulariesRequest publicRequest);
    internal static ListVocabulariesRequestMarshaller GetInstance();
    public static ListVocabulariesRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ListVocabulariesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListVocabulariesResponseUnmarshaller _instance;
    public static ListVocabulariesResponseUnmarshaller Instance { get; }
    private static ListVocabulariesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListVocabulariesResponseUnmarshaller GetInstance();
    public static ListVocabulariesResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ListVocabularyFiltersRequestMarshaller : object {
    private static ListVocabularyFiltersRequestMarshaller _instance;
    public static ListVocabularyFiltersRequestMarshaller Instance { get; }
    private static ListVocabularyFiltersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListVocabularyFiltersRequest publicRequest);
    internal static ListVocabularyFiltersRequestMarshaller GetInstance();
    public static ListVocabularyFiltersRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ListVocabularyFiltersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListVocabularyFiltersResponseUnmarshaller _instance;
    public static ListVocabularyFiltersResponseUnmarshaller Instance { get; }
    private static ListVocabularyFiltersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListVocabularyFiltersResponseUnmarshaller GetInstance();
    public static ListVocabularyFiltersResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.MediaMarshaller : object {
    public static MediaMarshaller Instance;
    private static MediaMarshaller();
    public sealed virtual void Marshall(Media requestObject, JsonMarshallerContext context);
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.MediaUnmarshaller : object {
    private static MediaUnmarshaller _instance;
    public static MediaUnmarshaller Instance { get; }
    private static MediaUnmarshaller();
    private sealed virtual override Media Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.Media,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Media Unmarshall(JsonUnmarshallerContext context);
    public static MediaUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.MedicalScribeChannelDefinitionMarshaller : object {
    public static MedicalScribeChannelDefinitionMarshaller Instance;
    private static MedicalScribeChannelDefinitionMarshaller();
    public sealed virtual void Marshall(MedicalScribeChannelDefinition requestObject, JsonMarshallerContext context);
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.MedicalScribeChannelDefinitionUnmarshaller : object {
    private static MedicalScribeChannelDefinitionUnmarshaller _instance;
    public static MedicalScribeChannelDefinitionUnmarshaller Instance { get; }
    private static MedicalScribeChannelDefinitionUnmarshaller();
    private sealed virtual override MedicalScribeChannelDefinition Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.MedicalScribeChannelDefinition,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MedicalScribeChannelDefinition Unmarshall(JsonUnmarshallerContext context);
    public static MedicalScribeChannelDefinitionUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.MedicalScribeJobSummaryUnmarshaller : object {
    private static MedicalScribeJobSummaryUnmarshaller _instance;
    public static MedicalScribeJobSummaryUnmarshaller Instance { get; }
    private static MedicalScribeJobSummaryUnmarshaller();
    private sealed virtual override MedicalScribeJobSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.MedicalScribeJobSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MedicalScribeJobSummary Unmarshall(JsonUnmarshallerContext context);
    public static MedicalScribeJobSummaryUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.MedicalScribeJobUnmarshaller : object {
    private static MedicalScribeJobUnmarshaller _instance;
    public static MedicalScribeJobUnmarshaller Instance { get; }
    private static MedicalScribeJobUnmarshaller();
    private sealed virtual override MedicalScribeJob Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.MedicalScribeJob,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MedicalScribeJob Unmarshall(JsonUnmarshallerContext context);
    public static MedicalScribeJobUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.MedicalScribeOutputUnmarshaller : object {
    private static MedicalScribeOutputUnmarshaller _instance;
    public static MedicalScribeOutputUnmarshaller Instance { get; }
    private static MedicalScribeOutputUnmarshaller();
    private sealed virtual override MedicalScribeOutput Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.MedicalScribeOutput,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MedicalScribeOutput Unmarshall(JsonUnmarshallerContext context);
    public static MedicalScribeOutputUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.MedicalScribeSettingsMarshaller : object {
    public static MedicalScribeSettingsMarshaller Instance;
    private static MedicalScribeSettingsMarshaller();
    public sealed virtual void Marshall(MedicalScribeSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.MedicalScribeSettingsUnmarshaller : object {
    private static MedicalScribeSettingsUnmarshaller _instance;
    public static MedicalScribeSettingsUnmarshaller Instance { get; }
    private static MedicalScribeSettingsUnmarshaller();
    private sealed virtual override MedicalScribeSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.MedicalScribeSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MedicalScribeSettings Unmarshall(JsonUnmarshallerContext context);
    public static MedicalScribeSettingsUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.MedicalTranscriptionJobSummaryUnmarshaller : object {
    private static MedicalTranscriptionJobSummaryUnmarshaller _instance;
    public static MedicalTranscriptionJobSummaryUnmarshaller Instance { get; }
    private static MedicalTranscriptionJobSummaryUnmarshaller();
    private sealed virtual override MedicalTranscriptionJobSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.MedicalTranscriptionJobSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MedicalTranscriptionJobSummary Unmarshall(JsonUnmarshallerContext context);
    public static MedicalTranscriptionJobSummaryUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.MedicalTranscriptionJobUnmarshaller : object {
    private static MedicalTranscriptionJobUnmarshaller _instance;
    public static MedicalTranscriptionJobUnmarshaller Instance { get; }
    private static MedicalTranscriptionJobUnmarshaller();
    private sealed virtual override MedicalTranscriptionJob Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.MedicalTranscriptionJob,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MedicalTranscriptionJob Unmarshall(JsonUnmarshallerContext context);
    public static MedicalTranscriptionJobUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.MedicalTranscriptionSettingMarshaller : object {
    public static MedicalTranscriptionSettingMarshaller Instance;
    private static MedicalTranscriptionSettingMarshaller();
    public sealed virtual void Marshall(MedicalTranscriptionSetting requestObject, JsonMarshallerContext context);
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.MedicalTranscriptionSettingUnmarshaller : object {
    private static MedicalTranscriptionSettingUnmarshaller _instance;
    public static MedicalTranscriptionSettingUnmarshaller Instance { get; }
    private static MedicalTranscriptionSettingUnmarshaller();
    private sealed virtual override MedicalTranscriptionSetting Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.MedicalTranscriptionSetting,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MedicalTranscriptionSetting Unmarshall(JsonUnmarshallerContext context);
    public static MedicalTranscriptionSettingUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.MedicalTranscriptUnmarshaller : object {
    private static MedicalTranscriptUnmarshaller _instance;
    public static MedicalTranscriptUnmarshaller Instance { get; }
    private static MedicalTranscriptUnmarshaller();
    private sealed virtual override MedicalTranscript Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.MedicalTranscript,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MedicalTranscript Unmarshall(JsonUnmarshallerContext context);
    public static MedicalTranscriptUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ModelSettingsMarshaller : object {
    public static ModelSettingsMarshaller Instance;
    private static ModelSettingsMarshaller();
    public sealed virtual void Marshall(ModelSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ModelSettingsUnmarshaller : object {
    private static ModelSettingsUnmarshaller _instance;
    public static ModelSettingsUnmarshaller Instance { get; }
    private static ModelSettingsUnmarshaller();
    private sealed virtual override ModelSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.ModelSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ModelSettings Unmarshall(JsonUnmarshallerContext context);
    public static ModelSettingsUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.NonTalkTimeFilterMarshaller : object {
    public static NonTalkTimeFilterMarshaller Instance;
    private static NonTalkTimeFilterMarshaller();
    public sealed virtual void Marshall(NonTalkTimeFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.NonTalkTimeFilterUnmarshaller : object {
    private static NonTalkTimeFilterUnmarshaller _instance;
    public static NonTalkTimeFilterUnmarshaller Instance { get; }
    private static NonTalkTimeFilterUnmarshaller();
    private sealed virtual override NonTalkTimeFilter Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.NonTalkTimeFilter,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NonTalkTimeFilter Unmarshall(JsonUnmarshallerContext context);
    public static NonTalkTimeFilterUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller : object {
    private static NotFoundExceptionUnmarshaller _instance;
    public static NotFoundExceptionUnmarshaller Instance { get; }
    private static NotFoundExceptionUnmarshaller();
    public sealed virtual NotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual NotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static NotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.RelativeTimeRangeMarshaller : object {
    public static RelativeTimeRangeMarshaller Instance;
    private static RelativeTimeRangeMarshaller();
    public sealed virtual void Marshall(RelativeTimeRange requestObject, JsonMarshallerContext context);
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.RelativeTimeRangeUnmarshaller : object {
    private static RelativeTimeRangeUnmarshaller _instance;
    public static RelativeTimeRangeUnmarshaller Instance { get; }
    private static RelativeTimeRangeUnmarshaller();
    private sealed virtual override RelativeTimeRange Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.RelativeTimeRange,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RelativeTimeRange Unmarshall(JsonUnmarshallerContext context);
    public static RelativeTimeRangeUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.RuleMarshaller : object {
    public static RuleMarshaller Instance;
    private static RuleMarshaller();
    public sealed virtual void Marshall(Rule requestObject, JsonMarshallerContext context);
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.RuleUnmarshaller : object {
    private static RuleUnmarshaller _instance;
    public static RuleUnmarshaller Instance { get; }
    private static RuleUnmarshaller();
    private sealed virtual override Rule Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.Rule,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Rule Unmarshall(JsonUnmarshallerContext context);
    public static RuleUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.SentimentFilterMarshaller : object {
    public static SentimentFilterMarshaller Instance;
    private static SentimentFilterMarshaller();
    public sealed virtual void Marshall(SentimentFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.SentimentFilterUnmarshaller : object {
    private static SentimentFilterUnmarshaller _instance;
    public static SentimentFilterUnmarshaller Instance { get; }
    private static SentimentFilterUnmarshaller();
    private sealed virtual override SentimentFilter Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.SentimentFilter,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SentimentFilter Unmarshall(JsonUnmarshallerContext context);
    public static SentimentFilterUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.SettingsMarshaller : object {
    public static SettingsMarshaller Instance;
    private static SettingsMarshaller();
    public sealed virtual void Marshall(Settings requestObject, JsonMarshallerContext context);
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.SettingsUnmarshaller : object {
    private static SettingsUnmarshaller _instance;
    public static SettingsUnmarshaller Instance { get; }
    private static SettingsUnmarshaller();
    private sealed virtual override Settings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.Settings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Settings Unmarshall(JsonUnmarshallerContext context);
    public static SettingsUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.StartCallAnalyticsJobRequestMarshaller : object {
    private static StartCallAnalyticsJobRequestMarshaller _instance;
    public static StartCallAnalyticsJobRequestMarshaller Instance { get; }
    private static StartCallAnalyticsJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartCallAnalyticsJobRequest publicRequest);
    internal static StartCallAnalyticsJobRequestMarshaller GetInstance();
    public static StartCallAnalyticsJobRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.StartCallAnalyticsJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartCallAnalyticsJobResponseUnmarshaller _instance;
    public static StartCallAnalyticsJobResponseUnmarshaller Instance { get; }
    private static StartCallAnalyticsJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartCallAnalyticsJobResponseUnmarshaller GetInstance();
    public static StartCallAnalyticsJobResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.StartMedicalScribeJobRequestMarshaller : object {
    private static StartMedicalScribeJobRequestMarshaller _instance;
    public static StartMedicalScribeJobRequestMarshaller Instance { get; }
    private static StartMedicalScribeJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartMedicalScribeJobRequest publicRequest);
    internal static StartMedicalScribeJobRequestMarshaller GetInstance();
    public static StartMedicalScribeJobRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.StartMedicalScribeJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartMedicalScribeJobResponseUnmarshaller _instance;
    public static StartMedicalScribeJobResponseUnmarshaller Instance { get; }
    private static StartMedicalScribeJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartMedicalScribeJobResponseUnmarshaller GetInstance();
    public static StartMedicalScribeJobResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.StartMedicalTranscriptionJobRequestMarshaller : object {
    private static StartMedicalTranscriptionJobRequestMarshaller _instance;
    public static StartMedicalTranscriptionJobRequestMarshaller Instance { get; }
    private static StartMedicalTranscriptionJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartMedicalTranscriptionJobRequest publicRequest);
    internal static StartMedicalTranscriptionJobRequestMarshaller GetInstance();
    public static StartMedicalTranscriptionJobRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.StartMedicalTranscriptionJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartMedicalTranscriptionJobResponseUnmarshaller _instance;
    public static StartMedicalTranscriptionJobResponseUnmarshaller Instance { get; }
    private static StartMedicalTranscriptionJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartMedicalTranscriptionJobResponseUnmarshaller GetInstance();
    public static StartMedicalTranscriptionJobResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.StartTranscriptionJobRequestMarshaller : object {
    private static StartTranscriptionJobRequestMarshaller _instance;
    public static StartTranscriptionJobRequestMarshaller Instance { get; }
    private static StartTranscriptionJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartTranscriptionJobRequest publicRequest);
    internal static StartTranscriptionJobRequestMarshaller GetInstance();
    public static StartTranscriptionJobRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.StartTranscriptionJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartTranscriptionJobResponseUnmarshaller _instance;
    public static StartTranscriptionJobResponseUnmarshaller Instance { get; }
    private static StartTranscriptionJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartTranscriptionJobResponseUnmarshaller GetInstance();
    public static StartTranscriptionJobResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.SubtitlesMarshaller : object {
    public static SubtitlesMarshaller Instance;
    private static SubtitlesMarshaller();
    public sealed virtual void Marshall(Subtitles requestObject, JsonMarshallerContext context);
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.SubtitlesOutputUnmarshaller : object {
    private static SubtitlesOutputUnmarshaller _instance;
    public static SubtitlesOutputUnmarshaller Instance { get; }
    private static SubtitlesOutputUnmarshaller();
    private sealed virtual override SubtitlesOutput Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.SubtitlesOutput,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SubtitlesOutput Unmarshall(JsonUnmarshallerContext context);
    public static SubtitlesOutputUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.SummarizationMarshaller : object {
    public static SummarizationMarshaller Instance;
    private static SummarizationMarshaller();
    public sealed virtual void Marshall(Summarization requestObject, JsonMarshallerContext context);
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.SummarizationUnmarshaller : object {
    private static SummarizationUnmarshaller _instance;
    public static SummarizationUnmarshaller Instance { get; }
    private static SummarizationUnmarshaller();
    private sealed virtual override Summarization Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.Summarization,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Summarization Unmarshall(JsonUnmarshallerContext context);
    public static SummarizationUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.TagMarshaller : object {
    public static TagMarshaller Instance;
    private static TagMarshaller();
    public sealed virtual void Marshall(Tag requestObject, JsonMarshallerContext context);
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller : object {
    private static TagResourceRequestMarshaller _instance;
    public static TagResourceRequestMarshaller Instance { get; }
    private static TagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TagResourceRequest publicRequest);
    internal static TagResourceRequestMarshaller GetInstance();
    public static TagResourceRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TagResourceResponseUnmarshaller _instance;
    public static TagResourceResponseUnmarshaller Instance { get; }
    private static TagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TagResourceResponseUnmarshaller GetInstance();
    public static TagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.TagUnmarshaller : object {
    private static TagUnmarshaller _instance;
    public static TagUnmarshaller Instance { get; }
    private static TagUnmarshaller();
    private sealed virtual override Tag Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.Tag,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tag Unmarshall(JsonUnmarshallerContext context);
    public static TagUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ToxicityDetectionSettingsMarshaller : object {
    public static ToxicityDetectionSettingsMarshaller Instance;
    private static ToxicityDetectionSettingsMarshaller();
    public sealed virtual void Marshall(ToxicityDetectionSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.ToxicityDetectionSettingsUnmarshaller : object {
    private static ToxicityDetectionSettingsUnmarshaller _instance;
    public static ToxicityDetectionSettingsUnmarshaller Instance { get; }
    private static ToxicityDetectionSettingsUnmarshaller();
    private sealed virtual override ToxicityDetectionSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.ToxicityDetectionSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ToxicityDetectionSettings Unmarshall(JsonUnmarshallerContext context);
    public static ToxicityDetectionSettingsUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.TranscriptFilterMarshaller : object {
    public static TranscriptFilterMarshaller Instance;
    private static TranscriptFilterMarshaller();
    public sealed virtual void Marshall(TranscriptFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.TranscriptFilterUnmarshaller : object {
    private static TranscriptFilterUnmarshaller _instance;
    public static TranscriptFilterUnmarshaller Instance { get; }
    private static TranscriptFilterUnmarshaller();
    private sealed virtual override TranscriptFilter Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.TranscriptFilter,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TranscriptFilter Unmarshall(JsonUnmarshallerContext context);
    public static TranscriptFilterUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.TranscriptionJobSummaryUnmarshaller : object {
    private static TranscriptionJobSummaryUnmarshaller _instance;
    public static TranscriptionJobSummaryUnmarshaller Instance { get; }
    private static TranscriptionJobSummaryUnmarshaller();
    private sealed virtual override TranscriptionJobSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.TranscriptionJobSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TranscriptionJobSummary Unmarshall(JsonUnmarshallerContext context);
    public static TranscriptionJobSummaryUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.TranscriptionJobUnmarshaller : object {
    private static TranscriptionJobUnmarshaller _instance;
    public static TranscriptionJobUnmarshaller Instance { get; }
    private static TranscriptionJobUnmarshaller();
    private sealed virtual override TranscriptionJob Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.TranscriptionJob,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TranscriptionJob Unmarshall(JsonUnmarshallerContext context);
    public static TranscriptionJobUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.TranscriptUnmarshaller : object {
    private static TranscriptUnmarshaller _instance;
    public static TranscriptUnmarshaller Instance { get; }
    private static TranscriptUnmarshaller();
    private sealed virtual override Transcript Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.Transcript,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Transcript Unmarshall(JsonUnmarshallerContext context);
    public static TranscriptUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller : object {
    private static UntagResourceRequestMarshaller _instance;
    public static UntagResourceRequestMarshaller Instance { get; }
    private static UntagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UntagResourceRequest publicRequest);
    internal static UntagResourceRequestMarshaller GetInstance();
    public static UntagResourceRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UntagResourceResponseUnmarshaller _instance;
    public static UntagResourceResponseUnmarshaller Instance { get; }
    private static UntagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UntagResourceResponseUnmarshaller GetInstance();
    public static UntagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.UpdateCallAnalyticsCategoryRequestMarshaller : object {
    private static UpdateCallAnalyticsCategoryRequestMarshaller _instance;
    public static UpdateCallAnalyticsCategoryRequestMarshaller Instance { get; }
    private static UpdateCallAnalyticsCategoryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateCallAnalyticsCategoryRequest publicRequest);
    internal static UpdateCallAnalyticsCategoryRequestMarshaller GetInstance();
    public static UpdateCallAnalyticsCategoryRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.UpdateCallAnalyticsCategoryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateCallAnalyticsCategoryResponseUnmarshaller _instance;
    public static UpdateCallAnalyticsCategoryResponseUnmarshaller Instance { get; }
    private static UpdateCallAnalyticsCategoryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateCallAnalyticsCategoryResponseUnmarshaller GetInstance();
    public static UpdateCallAnalyticsCategoryResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.UpdateMedicalVocabularyRequestMarshaller : object {
    private static UpdateMedicalVocabularyRequestMarshaller _instance;
    public static UpdateMedicalVocabularyRequestMarshaller Instance { get; }
    private static UpdateMedicalVocabularyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateMedicalVocabularyRequest publicRequest);
    internal static UpdateMedicalVocabularyRequestMarshaller GetInstance();
    public static UpdateMedicalVocabularyRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.UpdateMedicalVocabularyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateMedicalVocabularyResponseUnmarshaller _instance;
    public static UpdateMedicalVocabularyResponseUnmarshaller Instance { get; }
    private static UpdateMedicalVocabularyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateMedicalVocabularyResponseUnmarshaller GetInstance();
    public static UpdateMedicalVocabularyResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.UpdateVocabularyFilterRequestMarshaller : object {
    private static UpdateVocabularyFilterRequestMarshaller _instance;
    public static UpdateVocabularyFilterRequestMarshaller Instance { get; }
    private static UpdateVocabularyFilterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateVocabularyFilterRequest publicRequest);
    internal static UpdateVocabularyFilterRequestMarshaller GetInstance();
    public static UpdateVocabularyFilterRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.UpdateVocabularyFilterResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateVocabularyFilterResponseUnmarshaller _instance;
    public static UpdateVocabularyFilterResponseUnmarshaller Instance { get; }
    private static UpdateVocabularyFilterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateVocabularyFilterResponseUnmarshaller GetInstance();
    public static UpdateVocabularyFilterResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.UpdateVocabularyRequestMarshaller : object {
    private static UpdateVocabularyRequestMarshaller _instance;
    public static UpdateVocabularyRequestMarshaller Instance { get; }
    private static UpdateVocabularyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateVocabularyRequest publicRequest);
    internal static UpdateVocabularyRequestMarshaller GetInstance();
    public static UpdateVocabularyRequestMarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.UpdateVocabularyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateVocabularyResponseUnmarshaller _instance;
    public static UpdateVocabularyResponseUnmarshaller Instance { get; }
    private static UpdateVocabularyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateVocabularyResponseUnmarshaller GetInstance();
    public static UpdateVocabularyResponseUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.VocabularyFilterInfoUnmarshaller : object {
    private static VocabularyFilterInfoUnmarshaller _instance;
    public static VocabularyFilterInfoUnmarshaller Instance { get; }
    private static VocabularyFilterInfoUnmarshaller();
    private sealed virtual override VocabularyFilterInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.VocabularyFilterInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VocabularyFilterInfo Unmarshall(JsonUnmarshallerContext context);
    public static VocabularyFilterInfoUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.Internal.MarshallTransformations.VocabularyInfoUnmarshaller : object {
    private static VocabularyInfoUnmarshaller _instance;
    public static VocabularyInfoUnmarshaller Instance { get; }
    private static VocabularyInfoUnmarshaller();
    private sealed virtual override VocabularyInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.TranscribeService.Model.VocabularyInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VocabularyInfo Unmarshall(JsonUnmarshallerContext context);
    public static VocabularyInfoUnmarshaller get_Instance();
}
public class Amazon.TranscribeService.Model.InternalFailureException : AmazonTranscribeServiceException {
    public InternalFailureException(string message);
    public InternalFailureException(string message, Exception innerException);
    public InternalFailureException(Exception innerException);
    public InternalFailureException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InternalFailureException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected InternalFailureException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.TranscribeService.Model.InterruptionFilter : object {
    private AbsoluteTimeRange _absoluteTimeRange;
    private Nullable`1<bool> _negate;
    private ParticipantRole _participantRole;
    private RelativeTimeRange _relativeTimeRange;
    private Nullable`1<long> _threshold;
    public AbsoluteTimeRange AbsoluteTimeRange { get; public set; }
    public Nullable`1<bool> Negate { get; public set; }
    public ParticipantRole ParticipantRole { get; public set; }
    public RelativeTimeRange RelativeTimeRange { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> Threshold { get; public set; }
    public AbsoluteTimeRange get_AbsoluteTimeRange();
    public void set_AbsoluteTimeRange(AbsoluteTimeRange value);
    internal bool IsSetAbsoluteTimeRange();
    public Nullable`1<bool> get_Negate();
    public void set_Negate(Nullable`1<bool> value);
    internal bool IsSetNegate();
    public ParticipantRole get_ParticipantRole();
    public void set_ParticipantRole(ParticipantRole value);
    internal bool IsSetParticipantRole();
    public RelativeTimeRange get_RelativeTimeRange();
    public void set_RelativeTimeRange(RelativeTimeRange value);
    internal bool IsSetRelativeTimeRange();
    public Nullable`1<long> get_Threshold();
    public void set_Threshold(Nullable`1<long> value);
    internal bool IsSetThreshold();
}
public interface Amazon.TranscribeService.Model.ITranscribeServicePaginatorFactory {
    public abstract virtual IListCallAnalyticsCategoriesPaginator ListCallAnalyticsCategories(ListCallAnalyticsCategoriesRequest request);
    public abstract virtual IListCallAnalyticsJobsPaginator ListCallAnalyticsJobs(ListCallAnalyticsJobsRequest request);
    public abstract virtual IListLanguageModelsPaginator ListLanguageModels(ListLanguageModelsRequest request);
    public abstract virtual IListMedicalScribeJobsPaginator ListMedicalScribeJobs(ListMedicalScribeJobsRequest request);
    public abstract virtual IListMedicalTranscriptionJobsPaginator ListMedicalTranscriptionJobs(ListMedicalTranscriptionJobsRequest request);
    public abstract virtual IListMedicalVocabulariesPaginator ListMedicalVocabularies(ListMedicalVocabulariesRequest request);
    public abstract virtual IListTranscriptionJobsPaginator ListTranscriptionJobs(ListTranscriptionJobsRequest request);
    public abstract virtual IListVocabulariesPaginator ListVocabularies(ListVocabulariesRequest request);
    public abstract virtual IListVocabularyFiltersPaginator ListVocabularyFilters(ListVocabularyFiltersRequest request);
}
public class Amazon.TranscribeService.Model.JobExecutionSettings : object {
    private Nullable`1<bool> _allowDeferredExecution;
    private string _dataAccessRoleArn;
    public Nullable`1<bool> AllowDeferredExecution { get; public set; }
    [AWSPropertyAttribute]
public string DataAccessRoleArn { get; public set; }
    public Nullable`1<bool> get_AllowDeferredExecution();
    public void set_AllowDeferredExecution(Nullable`1<bool> value);
    internal bool IsSetAllowDeferredExecution();
    public string get_DataAccessRoleArn();
    public void set_DataAccessRoleArn(string value);
    internal bool IsSetDataAccessRoleArn();
}
public class Amazon.TranscribeService.Model.LanguageCodeItem : object {
    private Nullable`1<float> _durationInSeconds;
    private LanguageCode _languageCode;
    public Nullable`1<float> DurationInSeconds { get; public set; }
    public LanguageCode LanguageCode { get; public set; }
    public Nullable`1<float> get_DurationInSeconds();
    public void set_DurationInSeconds(Nullable`1<float> value);
    internal bool IsSetDurationInSeconds();
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
}
public class Amazon.TranscribeService.Model.LanguageIdSettings : object {
    private string _languageModelName;
    private string _vocabularyFilterName;
    private string _vocabularyName;
    [AWSPropertyAttribute]
public string LanguageModelName { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyFilterName { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyName { get; public set; }
    public string get_LanguageModelName();
    public void set_LanguageModelName(string value);
    internal bool IsSetLanguageModelName();
    public string get_VocabularyFilterName();
    public void set_VocabularyFilterName(string value);
    internal bool IsSetVocabularyFilterName();
    public string get_VocabularyName();
    public void set_VocabularyName(string value);
    internal bool IsSetVocabularyName();
}
public class Amazon.TranscribeService.Model.LanguageModel : object {
    private BaseModelName _baseModelName;
    private Nullable`1<DateTime> _createTime;
    private string _failureReason;
    private InputDataConfig _inputDataConfig;
    private CLMLanguageCode _languageCode;
    private Nullable`1<DateTime> _lastModifiedTime;
    private string _modelName;
    private ModelStatus _modelStatus;
    private Nullable`1<bool> _upgradeAvailability;
    public BaseModelName BaseModelName { get; public set; }
    public Nullable`1<DateTime> CreateTime { get; public set; }
    public string FailureReason { get; public set; }
    public InputDataConfig InputDataConfig { get; public set; }
    public CLMLanguageCode LanguageCode { get; public set; }
    public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    [AWSPropertyAttribute]
public string ModelName { get; public set; }
    public ModelStatus ModelStatus { get; public set; }
    public Nullable`1<bool> UpgradeAvailability { get; public set; }
    public BaseModelName get_BaseModelName();
    public void set_BaseModelName(BaseModelName value);
    internal bool IsSetBaseModelName();
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public string get_FailureReason();
    public void set_FailureReason(string value);
    internal bool IsSetFailureReason();
    public InputDataConfig get_InputDataConfig();
    public void set_InputDataConfig(InputDataConfig value);
    internal bool IsSetInputDataConfig();
    public CLMLanguageCode get_LanguageCode();
    public void set_LanguageCode(CLMLanguageCode value);
    internal bool IsSetLanguageCode();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public string get_ModelName();
    public void set_ModelName(string value);
    internal bool IsSetModelName();
    public ModelStatus get_ModelStatus();
    public void set_ModelStatus(ModelStatus value);
    internal bool IsSetModelStatus();
    public Nullable`1<bool> get_UpgradeAvailability();
    public void set_UpgradeAvailability(Nullable`1<bool> value);
    internal bool IsSetUpgradeAvailability();
}
public class Amazon.TranscribeService.Model.LimitExceededException : AmazonTranscribeServiceException {
    public LimitExceededException(string message);
    public LimitExceededException(string message, Exception innerException);
    public LimitExceededException(Exception innerException);
    public LimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public LimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected LimitExceededException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
internal class Amazon.TranscribeService.Model.ListCallAnalyticsCategoriesPaginator : object {
    private IAmazonTranscribeService _client;
    private ListCallAnalyticsCategoriesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListCallAnalyticsCategoriesResponse> Responses { get; }
    internal ListCallAnalyticsCategoriesPaginator(IAmazonTranscribeService client, ListCallAnalyticsCategoriesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListCallAnalyticsCategoriesResponse> get_Responses();
    [IteratorStateMachineAttribute("Amazon.TranscribeService.Model.ListCallAnalyticsCategoriesPaginator/<Amazon-Runtime-IPaginator<Amazon-TranscribeService-Model-ListCallAnalyticsCategoriesResponse>-Paginate>d__6")]
private sealed virtual override IEnumerable`1<ListCallAnalyticsCategoriesResponse> Amazon.Runtime.IPaginator<Amazon.TranscribeService.Model.ListCallAnalyticsCategoriesResponse>.Paginate();
}
public class Amazon.TranscribeService.Model.ListCallAnalyticsCategoriesRequest : AmazonTranscribeServiceRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.TranscribeService.Model.ListCallAnalyticsCategoriesResponse : AmazonWebServiceResponse {
    private List`1<CategoryProperties> _categories;
    private string _nextToken;
    public List`1<CategoryProperties> Categories { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<CategoryProperties> get_Categories();
    public void set_Categories(List`1<CategoryProperties> value);
    internal bool IsSetCategories();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.TranscribeService.Model.ListCallAnalyticsJobsPaginator : object {
    private IAmazonTranscribeService _client;
    private ListCallAnalyticsJobsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListCallAnalyticsJobsResponse> Responses { get; }
    internal ListCallAnalyticsJobsPaginator(IAmazonTranscribeService client, ListCallAnalyticsJobsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListCallAnalyticsJobsResponse> get_Responses();
    [IteratorStateMachineAttribute("Amazon.TranscribeService.Model.ListCallAnalyticsJobsPaginator/<Amazon-Runtime-IPaginator<Amazon-TranscribeService-Model-ListCallAnalyticsJobsResponse>-Paginate>d__6")]
private sealed virtual override IEnumerable`1<ListCallAnalyticsJobsResponse> Amazon.Runtime.IPaginator<Amazon.TranscribeService.Model.ListCallAnalyticsJobsResponse>.Paginate();
}
public class Amazon.TranscribeService.Model.ListCallAnalyticsJobsRequest : AmazonTranscribeServiceRequest {
    private string _jobNameContains;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private CallAnalyticsJobStatus _status;
    [AWSPropertyAttribute]
public string JobNameContains { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public CallAnalyticsJobStatus Status { get; public set; }
    public string get_JobNameContains();
    public void set_JobNameContains(string value);
    internal bool IsSetJobNameContains();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public CallAnalyticsJobStatus get_Status();
    public void set_Status(CallAnalyticsJobStatus value);
    internal bool IsSetStatus();
}
public class Amazon.TranscribeService.Model.ListCallAnalyticsJobsResponse : AmazonWebServiceResponse {
    private List`1<CallAnalyticsJobSummary> _callAnalyticsJobSummaries;
    private string _nextToken;
    private CallAnalyticsJobStatus _status;
    public List`1<CallAnalyticsJobSummary> CallAnalyticsJobSummaries { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public CallAnalyticsJobStatus Status { get; public set; }
    public List`1<CallAnalyticsJobSummary> get_CallAnalyticsJobSummaries();
    public void set_CallAnalyticsJobSummaries(List`1<CallAnalyticsJobSummary> value);
    internal bool IsSetCallAnalyticsJobSummaries();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public CallAnalyticsJobStatus get_Status();
    public void set_Status(CallAnalyticsJobStatus value);
    internal bool IsSetStatus();
}
internal class Amazon.TranscribeService.Model.ListLanguageModelsPaginator : object {
    private IAmazonTranscribeService _client;
    private ListLanguageModelsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListLanguageModelsResponse> Responses { get; }
    internal ListLanguageModelsPaginator(IAmazonTranscribeService client, ListLanguageModelsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListLanguageModelsResponse> get_Responses();
    [IteratorStateMachineAttribute("Amazon.TranscribeService.Model.ListLanguageModelsPaginator/<Amazon-Runtime-IPaginator<Amazon-TranscribeService-Model-ListLanguageModelsResponse>-Paginate>d__6")]
private sealed virtual override IEnumerable`1<ListLanguageModelsResponse> Amazon.Runtime.IPaginator<Amazon.TranscribeService.Model.ListLanguageModelsResponse>.Paginate();
}
public class Amazon.TranscribeService.Model.ListLanguageModelsRequest : AmazonTranscribeServiceRequest {
    private Nullable`1<int> _maxResults;
    private string _nameContains;
    private string _nextToken;
    private ModelStatus _statusEquals;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NameContains { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public ModelStatus StatusEquals { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NameContains();
    public void set_NameContains(string value);
    internal bool IsSetNameContains();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public ModelStatus get_StatusEquals();
    public void set_StatusEquals(ModelStatus value);
    internal bool IsSetStatusEquals();
}
public class Amazon.TranscribeService.Model.ListLanguageModelsResponse : AmazonWebServiceResponse {
    private List`1<LanguageModel> _models;
    private string _nextToken;
    public List`1<LanguageModel> Models { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<LanguageModel> get_Models();
    public void set_Models(List`1<LanguageModel> value);
    internal bool IsSetModels();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.TranscribeService.Model.ListMedicalScribeJobsPaginator : object {
    private IAmazonTranscribeService _client;
    private ListMedicalScribeJobsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListMedicalScribeJobsResponse> Responses { get; }
    internal ListMedicalScribeJobsPaginator(IAmazonTranscribeService client, ListMedicalScribeJobsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListMedicalScribeJobsResponse> get_Responses();
    [IteratorStateMachineAttribute("Amazon.TranscribeService.Model.ListMedicalScribeJobsPaginator/<Amazon-Runtime-IPaginator<Amazon-TranscribeService-Model-ListMedicalScribeJobsResponse>-Paginate>d__6")]
private sealed virtual override IEnumerable`1<ListMedicalScribeJobsResponse> Amazon.Runtime.IPaginator<Amazon.TranscribeService.Model.ListMedicalScribeJobsResponse>.Paginate();
}
public class Amazon.TranscribeService.Model.ListMedicalScribeJobsRequest : AmazonTranscribeServiceRequest {
    private string _jobNameContains;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private MedicalScribeJobStatus _status;
    [AWSPropertyAttribute]
public string JobNameContains { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public MedicalScribeJobStatus Status { get; public set; }
    public string get_JobNameContains();
    public void set_JobNameContains(string value);
    internal bool IsSetJobNameContains();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public MedicalScribeJobStatus get_Status();
    public void set_Status(MedicalScribeJobStatus value);
    internal bool IsSetStatus();
}
public class Amazon.TranscribeService.Model.ListMedicalScribeJobsResponse : AmazonWebServiceResponse {
    private List`1<MedicalScribeJobSummary> _medicalScribeJobSummaries;
    private string _nextToken;
    private MedicalScribeJobStatus _status;
    public List`1<MedicalScribeJobSummary> MedicalScribeJobSummaries { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public MedicalScribeJobStatus Status { get; public set; }
    public List`1<MedicalScribeJobSummary> get_MedicalScribeJobSummaries();
    public void set_MedicalScribeJobSummaries(List`1<MedicalScribeJobSummary> value);
    internal bool IsSetMedicalScribeJobSummaries();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public MedicalScribeJobStatus get_Status();
    public void set_Status(MedicalScribeJobStatus value);
    internal bool IsSetStatus();
}
internal class Amazon.TranscribeService.Model.ListMedicalTranscriptionJobsPaginator : object {
    private IAmazonTranscribeService _client;
    private ListMedicalTranscriptionJobsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListMedicalTranscriptionJobsResponse> Responses { get; }
    internal ListMedicalTranscriptionJobsPaginator(IAmazonTranscribeService client, ListMedicalTranscriptionJobsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListMedicalTranscriptionJobsResponse> get_Responses();
    [IteratorStateMachineAttribute("Amazon.TranscribeService.Model.ListMedicalTranscriptionJobsPaginator/<Amazon-Runtime-IPaginator<Amazon-TranscribeService-Model-ListMedicalTranscriptionJobsResponse>-Paginate>d__6")]
private sealed virtual override IEnumerable`1<ListMedicalTranscriptionJobsResponse> Amazon.Runtime.IPaginator<Amazon.TranscribeService.Model.ListMedicalTranscriptionJobsResponse>.Paginate();
}
public class Amazon.TranscribeService.Model.ListMedicalTranscriptionJobsRequest : AmazonTranscribeServiceRequest {
    private string _jobNameContains;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private TranscriptionJobStatus _status;
    [AWSPropertyAttribute]
public string JobNameContains { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public TranscriptionJobStatus Status { get; public set; }
    public string get_JobNameContains();
    public void set_JobNameContains(string value);
    internal bool IsSetJobNameContains();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public TranscriptionJobStatus get_Status();
    public void set_Status(TranscriptionJobStatus value);
    internal bool IsSetStatus();
}
public class Amazon.TranscribeService.Model.ListMedicalTranscriptionJobsResponse : AmazonWebServiceResponse {
    private List`1<MedicalTranscriptionJobSummary> _medicalTranscriptionJobSummaries;
    private string _nextToken;
    private TranscriptionJobStatus _status;
    public List`1<MedicalTranscriptionJobSummary> MedicalTranscriptionJobSummaries { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public TranscriptionJobStatus Status { get; public set; }
    public List`1<MedicalTranscriptionJobSummary> get_MedicalTranscriptionJobSummaries();
    public void set_MedicalTranscriptionJobSummaries(List`1<MedicalTranscriptionJobSummary> value);
    internal bool IsSetMedicalTranscriptionJobSummaries();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public TranscriptionJobStatus get_Status();
    public void set_Status(TranscriptionJobStatus value);
    internal bool IsSetStatus();
}
internal class Amazon.TranscribeService.Model.ListMedicalVocabulariesPaginator : object {
    private IAmazonTranscribeService _client;
    private ListMedicalVocabulariesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListMedicalVocabulariesResponse> Responses { get; }
    internal ListMedicalVocabulariesPaginator(IAmazonTranscribeService client, ListMedicalVocabulariesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListMedicalVocabulariesResponse> get_Responses();
    [IteratorStateMachineAttribute("Amazon.TranscribeService.Model.ListMedicalVocabulariesPaginator/<Amazon-Runtime-IPaginator<Amazon-TranscribeService-Model-ListMedicalVocabulariesResponse>-Paginate>d__6")]
private sealed virtual override IEnumerable`1<ListMedicalVocabulariesResponse> Amazon.Runtime.IPaginator<Amazon.TranscribeService.Model.ListMedicalVocabulariesResponse>.Paginate();
}
public class Amazon.TranscribeService.Model.ListMedicalVocabulariesRequest : AmazonTranscribeServiceRequest {
    private Nullable`1<int> _maxResults;
    private string _nameContains;
    private string _nextToken;
    private VocabularyState _stateEquals;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NameContains { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public VocabularyState StateEquals { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NameContains();
    public void set_NameContains(string value);
    internal bool IsSetNameContains();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public VocabularyState get_StateEquals();
    public void set_StateEquals(VocabularyState value);
    internal bool IsSetStateEquals();
}
public class Amazon.TranscribeService.Model.ListMedicalVocabulariesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private VocabularyState _status;
    private List`1<VocabularyInfo> _vocabularies;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public VocabularyState Status { get; public set; }
    public List`1<VocabularyInfo> Vocabularies { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public VocabularyState get_Status();
    public void set_Status(VocabularyState value);
    internal bool IsSetStatus();
    public List`1<VocabularyInfo> get_Vocabularies();
    public void set_Vocabularies(List`1<VocabularyInfo> value);
    internal bool IsSetVocabularies();
}
public class Amazon.TranscribeService.Model.ListTagsForResourceRequest : AmazonTranscribeServiceRequest {
    private string _resourceArn;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.TranscribeService.Model.ListTagsForResourceResponse : AmazonWebServiceResponse {
    private string _resourceArn;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
internal class Amazon.TranscribeService.Model.ListTranscriptionJobsPaginator : object {
    private IAmazonTranscribeService _client;
    private ListTranscriptionJobsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListTranscriptionJobsResponse> Responses { get; }
    internal ListTranscriptionJobsPaginator(IAmazonTranscribeService client, ListTranscriptionJobsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListTranscriptionJobsResponse> get_Responses();
    [IteratorStateMachineAttribute("Amazon.TranscribeService.Model.ListTranscriptionJobsPaginator/<Amazon-Runtime-IPaginator<Amazon-TranscribeService-Model-ListTranscriptionJobsResponse>-Paginate>d__6")]
private sealed virtual override IEnumerable`1<ListTranscriptionJobsResponse> Amazon.Runtime.IPaginator<Amazon.TranscribeService.Model.ListTranscriptionJobsResponse>.Paginate();
}
public class Amazon.TranscribeService.Model.ListTranscriptionJobsRequest : AmazonTranscribeServiceRequest {
    private string _jobNameContains;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private TranscriptionJobStatus _status;
    [AWSPropertyAttribute]
public string JobNameContains { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public TranscriptionJobStatus Status { get; public set; }
    public string get_JobNameContains();
    public void set_JobNameContains(string value);
    internal bool IsSetJobNameContains();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public TranscriptionJobStatus get_Status();
    public void set_Status(TranscriptionJobStatus value);
    internal bool IsSetStatus();
}
public class Amazon.TranscribeService.Model.ListTranscriptionJobsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private TranscriptionJobStatus _status;
    private List`1<TranscriptionJobSummary> _transcriptionJobSummaries;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public TranscriptionJobStatus Status { get; public set; }
    public List`1<TranscriptionJobSummary> TranscriptionJobSummaries { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public TranscriptionJobStatus get_Status();
    public void set_Status(TranscriptionJobStatus value);
    internal bool IsSetStatus();
    public List`1<TranscriptionJobSummary> get_TranscriptionJobSummaries();
    public void set_TranscriptionJobSummaries(List`1<TranscriptionJobSummary> value);
    internal bool IsSetTranscriptionJobSummaries();
}
internal class Amazon.TranscribeService.Model.ListVocabulariesPaginator : object {
    private IAmazonTranscribeService _client;
    private ListVocabulariesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListVocabulariesResponse> Responses { get; }
    internal ListVocabulariesPaginator(IAmazonTranscribeService client, ListVocabulariesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListVocabulariesResponse> get_Responses();
    [IteratorStateMachineAttribute("Amazon.TranscribeService.Model.ListVocabulariesPaginator/<Amazon-Runtime-IPaginator<Amazon-TranscribeService-Model-ListVocabulariesResponse>-Paginate>d__6")]
private sealed virtual override IEnumerable`1<ListVocabulariesResponse> Amazon.Runtime.IPaginator<Amazon.TranscribeService.Model.ListVocabulariesResponse>.Paginate();
}
public class Amazon.TranscribeService.Model.ListVocabulariesRequest : AmazonTranscribeServiceRequest {
    private Nullable`1<int> _maxResults;
    private string _nameContains;
    private string _nextToken;
    private VocabularyState _stateEquals;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NameContains { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public VocabularyState StateEquals { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NameContains();
    public void set_NameContains(string value);
    internal bool IsSetNameContains();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public VocabularyState get_StateEquals();
    public void set_StateEquals(VocabularyState value);
    internal bool IsSetStateEquals();
}
public class Amazon.TranscribeService.Model.ListVocabulariesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private VocabularyState _status;
    private List`1<VocabularyInfo> _vocabularies;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public VocabularyState Status { get; public set; }
    public List`1<VocabularyInfo> Vocabularies { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public VocabularyState get_Status();
    public void set_Status(VocabularyState value);
    internal bool IsSetStatus();
    public List`1<VocabularyInfo> get_Vocabularies();
    public void set_Vocabularies(List`1<VocabularyInfo> value);
    internal bool IsSetVocabularies();
}
internal class Amazon.TranscribeService.Model.ListVocabularyFiltersPaginator : object {
    private IAmazonTranscribeService _client;
    private ListVocabularyFiltersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListVocabularyFiltersResponse> Responses { get; }
    internal ListVocabularyFiltersPaginator(IAmazonTranscribeService client, ListVocabularyFiltersRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListVocabularyFiltersResponse> get_Responses();
    [IteratorStateMachineAttribute("Amazon.TranscribeService.Model.ListVocabularyFiltersPaginator/<Amazon-Runtime-IPaginator<Amazon-TranscribeService-Model-ListVocabularyFiltersResponse>-Paginate>d__6")]
private sealed virtual override IEnumerable`1<ListVocabularyFiltersResponse> Amazon.Runtime.IPaginator<Amazon.TranscribeService.Model.ListVocabularyFiltersResponse>.Paginate();
}
public class Amazon.TranscribeService.Model.ListVocabularyFiltersRequest : AmazonTranscribeServiceRequest {
    private Nullable`1<int> _maxResults;
    private string _nameContains;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NameContains { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NameContains();
    public void set_NameContains(string value);
    internal bool IsSetNameContains();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.TranscribeService.Model.ListVocabularyFiltersResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<VocabularyFilterInfo> _vocabularyFilters;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<VocabularyFilterInfo> VocabularyFilters { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<VocabularyFilterInfo> get_VocabularyFilters();
    public void set_VocabularyFilters(List`1<VocabularyFilterInfo> value);
    internal bool IsSetVocabularyFilters();
}
public class Amazon.TranscribeService.Model.Media : object {
    private string _mediaFileUri;
    private string _redactedMediaFileUri;
    [AWSPropertyAttribute]
public string MediaFileUri { get; public set; }
    [AWSPropertyAttribute]
public string RedactedMediaFileUri { get; public set; }
    public string get_MediaFileUri();
    public void set_MediaFileUri(string value);
    internal bool IsSetMediaFileUri();
    public string get_RedactedMediaFileUri();
    public void set_RedactedMediaFileUri(string value);
    internal bool IsSetRedactedMediaFileUri();
}
public class Amazon.TranscribeService.Model.MedicalScribeChannelDefinition : object {
    private Nullable`1<int> _channelId;
    private MedicalScribeParticipantRole _participantRole;
    [AWSPropertyAttribute]
public Nullable`1<int> ChannelId { get; public set; }
    [AWSPropertyAttribute]
public MedicalScribeParticipantRole ParticipantRole { get; public set; }
    public Nullable`1<int> get_ChannelId();
    public void set_ChannelId(Nullable`1<int> value);
    internal bool IsSetChannelId();
    public MedicalScribeParticipantRole get_ParticipantRole();
    public void set_ParticipantRole(MedicalScribeParticipantRole value);
    internal bool IsSetParticipantRole();
}
public class Amazon.TranscribeService.Model.MedicalScribeJob : object {
    private List`1<MedicalScribeChannelDefinition> _channelDefinitions;
    private Nullable`1<DateTime> _completionTime;
    private Nullable`1<DateTime> _creationTime;
    private string _dataAccessRoleArn;
    private string _failureReason;
    private MedicalScribeLanguageCode _languageCode;
    private Media _media;
    private string _medicalScribeJobName;
    private MedicalScribeJobStatus _medicalScribeJobStatus;
    private MedicalScribeOutput _medicalScribeOutput;
    private MedicalScribeSettings _settings;
    private Nullable`1<DateTime> _startTime;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public List`1<MedicalScribeChannelDefinition> ChannelDefinitions { get; public set; }
    public Nullable`1<DateTime> CompletionTime { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    [AWSPropertyAttribute]
public string DataAccessRoleArn { get; public set; }
    public string FailureReason { get; public set; }
    public MedicalScribeLanguageCode LanguageCode { get; public set; }
    public Media Media { get; public set; }
    [AWSPropertyAttribute]
public string MedicalScribeJobName { get; public set; }
    public MedicalScribeJobStatus MedicalScribeJobStatus { get; public set; }
    public MedicalScribeOutput MedicalScribeOutput { get; public set; }
    public MedicalScribeSettings Settings { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public List`1<MedicalScribeChannelDefinition> get_ChannelDefinitions();
    public void set_ChannelDefinitions(List`1<MedicalScribeChannelDefinition> value);
    internal bool IsSetChannelDefinitions();
    public Nullable`1<DateTime> get_CompletionTime();
    public void set_CompletionTime(Nullable`1<DateTime> value);
    internal bool IsSetCompletionTime();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_DataAccessRoleArn();
    public void set_DataAccessRoleArn(string value);
    internal bool IsSetDataAccessRoleArn();
    public string get_FailureReason();
    public void set_FailureReason(string value);
    internal bool IsSetFailureReason();
    public MedicalScribeLanguageCode get_LanguageCode();
    public void set_LanguageCode(MedicalScribeLanguageCode value);
    internal bool IsSetLanguageCode();
    public Media get_Media();
    public void set_Media(Media value);
    internal bool IsSetMedia();
    public string get_MedicalScribeJobName();
    public void set_MedicalScribeJobName(string value);
    internal bool IsSetMedicalScribeJobName();
    public MedicalScribeJobStatus get_MedicalScribeJobStatus();
    public void set_MedicalScribeJobStatus(MedicalScribeJobStatus value);
    internal bool IsSetMedicalScribeJobStatus();
    public MedicalScribeOutput get_MedicalScribeOutput();
    public void set_MedicalScribeOutput(MedicalScribeOutput value);
    internal bool IsSetMedicalScribeOutput();
    public MedicalScribeSettings get_Settings();
    public void set_Settings(MedicalScribeSettings value);
    internal bool IsSetSettings();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.TranscribeService.Model.MedicalScribeJobSummary : object {
    private Nullable`1<DateTime> _completionTime;
    private Nullable`1<DateTime> _creationTime;
    private string _failureReason;
    private MedicalScribeLanguageCode _languageCode;
    private string _medicalScribeJobName;
    private MedicalScribeJobStatus _medicalScribeJobStatus;
    private Nullable`1<DateTime> _startTime;
    public Nullable`1<DateTime> CompletionTime { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public string FailureReason { get; public set; }
    public MedicalScribeLanguageCode LanguageCode { get; public set; }
    [AWSPropertyAttribute]
public string MedicalScribeJobName { get; public set; }
    public MedicalScribeJobStatus MedicalScribeJobStatus { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public Nullable`1<DateTime> get_CompletionTime();
    public void set_CompletionTime(Nullable`1<DateTime> value);
    internal bool IsSetCompletionTime();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_FailureReason();
    public void set_FailureReason(string value);
    internal bool IsSetFailureReason();
    public MedicalScribeLanguageCode get_LanguageCode();
    public void set_LanguageCode(MedicalScribeLanguageCode value);
    internal bool IsSetLanguageCode();
    public string get_MedicalScribeJobName();
    public void set_MedicalScribeJobName(string value);
    internal bool IsSetMedicalScribeJobName();
    public MedicalScribeJobStatus get_MedicalScribeJobStatus();
    public void set_MedicalScribeJobStatus(MedicalScribeJobStatus value);
    internal bool IsSetMedicalScribeJobStatus();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
}
public class Amazon.TranscribeService.Model.MedicalScribeOutput : object {
    private string _clinicalDocumentUri;
    private string _transcriptFileUri;
    [AWSPropertyAttribute]
public string ClinicalDocumentUri { get; public set; }
    [AWSPropertyAttribute]
public string TranscriptFileUri { get; public set; }
    public string get_ClinicalDocumentUri();
    public void set_ClinicalDocumentUri(string value);
    internal bool IsSetClinicalDocumentUri();
    public string get_TranscriptFileUri();
    public void set_TranscriptFileUri(string value);
    internal bool IsSetTranscriptFileUri();
}
public class Amazon.TranscribeService.Model.MedicalScribeSettings : object {
    private Nullable`1<bool> _channelIdentification;
    private Nullable`1<int> _maxSpeakerLabels;
    private Nullable`1<bool> _showSpeakerLabels;
    private VocabularyFilterMethod _vocabularyFilterMethod;
    private string _vocabularyFilterName;
    private string _vocabularyName;
    public Nullable`1<bool> ChannelIdentification { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxSpeakerLabels { get; public set; }
    public Nullable`1<bool> ShowSpeakerLabels { get; public set; }
    public VocabularyFilterMethod VocabularyFilterMethod { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyFilterName { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyName { get; public set; }
    public Nullable`1<bool> get_ChannelIdentification();
    public void set_ChannelIdentification(Nullable`1<bool> value);
    internal bool IsSetChannelIdentification();
    public Nullable`1<int> get_MaxSpeakerLabels();
    public void set_MaxSpeakerLabels(Nullable`1<int> value);
    internal bool IsSetMaxSpeakerLabels();
    public Nullable`1<bool> get_ShowSpeakerLabels();
    public void set_ShowSpeakerLabels(Nullable`1<bool> value);
    internal bool IsSetShowSpeakerLabels();
    public VocabularyFilterMethod get_VocabularyFilterMethod();
    public void set_VocabularyFilterMethod(VocabularyFilterMethod value);
    internal bool IsSetVocabularyFilterMethod();
    public string get_VocabularyFilterName();
    public void set_VocabularyFilterName(string value);
    internal bool IsSetVocabularyFilterName();
    public string get_VocabularyName();
    public void set_VocabularyName(string value);
    internal bool IsSetVocabularyName();
}
public class Amazon.TranscribeService.Model.MedicalTranscript : object {
    private string _transcriptFileUri;
    [AWSPropertyAttribute]
public string TranscriptFileUri { get; public set; }
    public string get_TranscriptFileUri();
    public void set_TranscriptFileUri(string value);
    internal bool IsSetTranscriptFileUri();
}
public class Amazon.TranscribeService.Model.MedicalTranscriptionJob : object {
    private Nullable`1<DateTime> _completionTime;
    private MedicalContentIdentificationType _contentIdentificationType;
    private Nullable`1<DateTime> _creationTime;
    private string _failureReason;
    private LanguageCode _languageCode;
    private Media _media;
    private MediaFormat _mediaFormat;
    private Nullable`1<int> _mediaSampleRateHertz;
    private string _medicalTranscriptionJobName;
    private MedicalTranscriptionSetting _settings;
    private Specialty _specialty;
    private Nullable`1<DateTime> _startTime;
    private List`1<Tag> _tags;
    private MedicalTranscript _transcript;
    private TranscriptionJobStatus _transcriptionJobStatus;
    private Type _type;
    public Nullable`1<DateTime> CompletionTime { get; public set; }
    public MedicalContentIdentificationType ContentIdentificationType { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public string FailureReason { get; public set; }
    public LanguageCode LanguageCode { get; public set; }
    public Media Media { get; public set; }
    public MediaFormat MediaFormat { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MediaSampleRateHertz { get; public set; }
    [AWSPropertyAttribute]
public string MedicalTranscriptionJobName { get; public set; }
    public MedicalTranscriptionSetting Settings { get; public set; }
    public Specialty Specialty { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public MedicalTranscript Transcript { get; public set; }
    public TranscriptionJobStatus TranscriptionJobStatus { get; public set; }
    public Type Type { get; public set; }
    public Nullable`1<DateTime> get_CompletionTime();
    public void set_CompletionTime(Nullable`1<DateTime> value);
    internal bool IsSetCompletionTime();
    public MedicalContentIdentificationType get_ContentIdentificationType();
    public void set_ContentIdentificationType(MedicalContentIdentificationType value);
    internal bool IsSetContentIdentificationType();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_FailureReason();
    public void set_FailureReason(string value);
    internal bool IsSetFailureReason();
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
    public Media get_Media();
    public void set_Media(Media value);
    internal bool IsSetMedia();
    public MediaFormat get_MediaFormat();
    public void set_MediaFormat(MediaFormat value);
    internal bool IsSetMediaFormat();
    public Nullable`1<int> get_MediaSampleRateHertz();
    public void set_MediaSampleRateHertz(Nullable`1<int> value);
    internal bool IsSetMediaSampleRateHertz();
    public string get_MedicalTranscriptionJobName();
    public void set_MedicalTranscriptionJobName(string value);
    internal bool IsSetMedicalTranscriptionJobName();
    public MedicalTranscriptionSetting get_Settings();
    public void set_Settings(MedicalTranscriptionSetting value);
    internal bool IsSetSettings();
    public Specialty get_Specialty();
    public void set_Specialty(Specialty value);
    internal bool IsSetSpecialty();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public MedicalTranscript get_Transcript();
    public void set_Transcript(MedicalTranscript value);
    internal bool IsSetTranscript();
    public TranscriptionJobStatus get_TranscriptionJobStatus();
    public void set_TranscriptionJobStatus(TranscriptionJobStatus value);
    internal bool IsSetTranscriptionJobStatus();
    public Type get_Type();
    public void set_Type(Type value);
    internal bool IsSetType();
}
public class Amazon.TranscribeService.Model.MedicalTranscriptionJobSummary : object {
    private Nullable`1<DateTime> _completionTime;
    private MedicalContentIdentificationType _contentIdentificationType;
    private Nullable`1<DateTime> _creationTime;
    private string _failureReason;
    private LanguageCode _languageCode;
    private string _medicalTranscriptionJobName;
    private OutputLocationType _outputLocationType;
    private Specialty _specialty;
    private Nullable`1<DateTime> _startTime;
    private TranscriptionJobStatus _transcriptionJobStatus;
    private Type _type;
    public Nullable`1<DateTime> CompletionTime { get; public set; }
    public MedicalContentIdentificationType ContentIdentificationType { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public string FailureReason { get; public set; }
    public LanguageCode LanguageCode { get; public set; }
    [AWSPropertyAttribute]
public string MedicalTranscriptionJobName { get; public set; }
    public OutputLocationType OutputLocationType { get; public set; }
    public Specialty Specialty { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public TranscriptionJobStatus TranscriptionJobStatus { get; public set; }
    public Type Type { get; public set; }
    public Nullable`1<DateTime> get_CompletionTime();
    public void set_CompletionTime(Nullable`1<DateTime> value);
    internal bool IsSetCompletionTime();
    public MedicalContentIdentificationType get_ContentIdentificationType();
    public void set_ContentIdentificationType(MedicalContentIdentificationType value);
    internal bool IsSetContentIdentificationType();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_FailureReason();
    public void set_FailureReason(string value);
    internal bool IsSetFailureReason();
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
    public string get_MedicalTranscriptionJobName();
    public void set_MedicalTranscriptionJobName(string value);
    internal bool IsSetMedicalTranscriptionJobName();
    public OutputLocationType get_OutputLocationType();
    public void set_OutputLocationType(OutputLocationType value);
    internal bool IsSetOutputLocationType();
    public Specialty get_Specialty();
    public void set_Specialty(Specialty value);
    internal bool IsSetSpecialty();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public TranscriptionJobStatus get_TranscriptionJobStatus();
    public void set_TranscriptionJobStatus(TranscriptionJobStatus value);
    internal bool IsSetTranscriptionJobStatus();
    public Type get_Type();
    public void set_Type(Type value);
    internal bool IsSetType();
}
public class Amazon.TranscribeService.Model.MedicalTranscriptionSetting : object {
    private Nullable`1<bool> _channelIdentification;
    private Nullable`1<int> _maxAlternatives;
    private Nullable`1<int> _maxSpeakerLabels;
    private Nullable`1<bool> _showAlternatives;
    private Nullable`1<bool> _showSpeakerLabels;
    private string _vocabularyName;
    public Nullable`1<bool> ChannelIdentification { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxAlternatives { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxSpeakerLabels { get; public set; }
    public Nullable`1<bool> ShowAlternatives { get; public set; }
    public Nullable`1<bool> ShowSpeakerLabels { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyName { get; public set; }
    public Nullable`1<bool> get_ChannelIdentification();
    public void set_ChannelIdentification(Nullable`1<bool> value);
    internal bool IsSetChannelIdentification();
    public Nullable`1<int> get_MaxAlternatives();
    public void set_MaxAlternatives(Nullable`1<int> value);
    internal bool IsSetMaxAlternatives();
    public Nullable`1<int> get_MaxSpeakerLabels();
    public void set_MaxSpeakerLabels(Nullable`1<int> value);
    internal bool IsSetMaxSpeakerLabels();
    public Nullable`1<bool> get_ShowAlternatives();
    public void set_ShowAlternatives(Nullable`1<bool> value);
    internal bool IsSetShowAlternatives();
    public Nullable`1<bool> get_ShowSpeakerLabels();
    public void set_ShowSpeakerLabels(Nullable`1<bool> value);
    internal bool IsSetShowSpeakerLabels();
    public string get_VocabularyName();
    public void set_VocabularyName(string value);
    internal bool IsSetVocabularyName();
}
public class Amazon.TranscribeService.Model.ModelSettings : object {
    private string _languageModelName;
    [AWSPropertyAttribute]
public string LanguageModelName { get; public set; }
    public string get_LanguageModelName();
    public void set_LanguageModelName(string value);
    internal bool IsSetLanguageModelName();
}
public class Amazon.TranscribeService.Model.NonTalkTimeFilter : object {
    private AbsoluteTimeRange _absoluteTimeRange;
    private Nullable`1<bool> _negate;
    private RelativeTimeRange _relativeTimeRange;
    private Nullable`1<long> _threshold;
    public AbsoluteTimeRange AbsoluteTimeRange { get; public set; }
    public Nullable`1<bool> Negate { get; public set; }
    public RelativeTimeRange RelativeTimeRange { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> Threshold { get; public set; }
    public AbsoluteTimeRange get_AbsoluteTimeRange();
    public void set_AbsoluteTimeRange(AbsoluteTimeRange value);
    internal bool IsSetAbsoluteTimeRange();
    public Nullable`1<bool> get_Negate();
    public void set_Negate(Nullable`1<bool> value);
    internal bool IsSetNegate();
    public RelativeTimeRange get_RelativeTimeRange();
    public void set_RelativeTimeRange(RelativeTimeRange value);
    internal bool IsSetRelativeTimeRange();
    public Nullable`1<long> get_Threshold();
    public void set_Threshold(Nullable`1<long> value);
    internal bool IsSetThreshold();
}
public class Amazon.TranscribeService.Model.NotFoundException : AmazonTranscribeServiceException {
    public NotFoundException(string message);
    public NotFoundException(string message, Exception innerException);
    public NotFoundException(Exception innerException);
    public NotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected NotFoundException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.TranscribeService.Model.RelativeTimeRange : object {
    private Nullable`1<int> _endPercentage;
    private Nullable`1<int> _first;
    private Nullable`1<int> _last;
    private Nullable`1<int> _startPercentage;
    [AWSPropertyAttribute]
public Nullable`1<int> EndPercentage { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> First { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Last { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> StartPercentage { get; public set; }
    public Nullable`1<int> get_EndPercentage();
    public void set_EndPercentage(Nullable`1<int> value);
    internal bool IsSetEndPercentage();
    public Nullable`1<int> get_First();
    public void set_First(Nullable`1<int> value);
    internal bool IsSetFirst();
    public Nullable`1<int> get_Last();
    public void set_Last(Nullable`1<int> value);
    internal bool IsSetLast();
    public Nullable`1<int> get_StartPercentage();
    public void set_StartPercentage(Nullable`1<int> value);
    internal bool IsSetStartPercentage();
}
public class Amazon.TranscribeService.Model.Rule : object {
    private InterruptionFilter _interruptionFilter;
    private NonTalkTimeFilter _nonTalkTimeFilter;
    private SentimentFilter _sentimentFilter;
    private TranscriptFilter _transcriptFilter;
    public InterruptionFilter InterruptionFilter { get; public set; }
    public NonTalkTimeFilter NonTalkTimeFilter { get; public set; }
    public SentimentFilter SentimentFilter { get; public set; }
    public TranscriptFilter TranscriptFilter { get; public set; }
    public InterruptionFilter get_InterruptionFilter();
    public void set_InterruptionFilter(InterruptionFilter value);
    internal bool IsSetInterruptionFilter();
    public NonTalkTimeFilter get_NonTalkTimeFilter();
    public void set_NonTalkTimeFilter(NonTalkTimeFilter value);
    internal bool IsSetNonTalkTimeFilter();
    public SentimentFilter get_SentimentFilter();
    public void set_SentimentFilter(SentimentFilter value);
    internal bool IsSetSentimentFilter();
    public TranscriptFilter get_TranscriptFilter();
    public void set_TranscriptFilter(TranscriptFilter value);
    internal bool IsSetTranscriptFilter();
}
public class Amazon.TranscribeService.Model.SentimentFilter : object {
    private AbsoluteTimeRange _absoluteTimeRange;
    private Nullable`1<bool> _negate;
    private ParticipantRole _participantRole;
    private RelativeTimeRange _relativeTimeRange;
    private List`1<string> _sentiments;
    public AbsoluteTimeRange AbsoluteTimeRange { get; public set; }
    public Nullable`1<bool> Negate { get; public set; }
    public ParticipantRole ParticipantRole { get; public set; }
    public RelativeTimeRange RelativeTimeRange { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Sentiments { get; public set; }
    public AbsoluteTimeRange get_AbsoluteTimeRange();
    public void set_AbsoluteTimeRange(AbsoluteTimeRange value);
    internal bool IsSetAbsoluteTimeRange();
    public Nullable`1<bool> get_Negate();
    public void set_Negate(Nullable`1<bool> value);
    internal bool IsSetNegate();
    public ParticipantRole get_ParticipantRole();
    public void set_ParticipantRole(ParticipantRole value);
    internal bool IsSetParticipantRole();
    public RelativeTimeRange get_RelativeTimeRange();
    public void set_RelativeTimeRange(RelativeTimeRange value);
    internal bool IsSetRelativeTimeRange();
    public List`1<string> get_Sentiments();
    public void set_Sentiments(List`1<string> value);
    internal bool IsSetSentiments();
}
public class Amazon.TranscribeService.Model.Settings : object {
    private Nullable`1<bool> _channelIdentification;
    private Nullable`1<int> _maxAlternatives;
    private Nullable`1<int> _maxSpeakerLabels;
    private Nullable`1<bool> _showAlternatives;
    private Nullable`1<bool> _showSpeakerLabels;
    private VocabularyFilterMethod _vocabularyFilterMethod;
    private string _vocabularyFilterName;
    private string _vocabularyName;
    public Nullable`1<bool> ChannelIdentification { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxAlternatives { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxSpeakerLabels { get; public set; }
    public Nullable`1<bool> ShowAlternatives { get; public set; }
    public Nullable`1<bool> ShowSpeakerLabels { get; public set; }
    public VocabularyFilterMethod VocabularyFilterMethod { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyFilterName { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyName { get; public set; }
    public Nullable`1<bool> get_ChannelIdentification();
    public void set_ChannelIdentification(Nullable`1<bool> value);
    internal bool IsSetChannelIdentification();
    public Nullable`1<int> get_MaxAlternatives();
    public void set_MaxAlternatives(Nullable`1<int> value);
    internal bool IsSetMaxAlternatives();
    public Nullable`1<int> get_MaxSpeakerLabels();
    public void set_MaxSpeakerLabels(Nullable`1<int> value);
    internal bool IsSetMaxSpeakerLabels();
    public Nullable`1<bool> get_ShowAlternatives();
    public void set_ShowAlternatives(Nullable`1<bool> value);
    internal bool IsSetShowAlternatives();
    public Nullable`1<bool> get_ShowSpeakerLabels();
    public void set_ShowSpeakerLabels(Nullable`1<bool> value);
    internal bool IsSetShowSpeakerLabels();
    public VocabularyFilterMethod get_VocabularyFilterMethod();
    public void set_VocabularyFilterMethod(VocabularyFilterMethod value);
    internal bool IsSetVocabularyFilterMethod();
    public string get_VocabularyFilterName();
    public void set_VocabularyFilterName(string value);
    internal bool IsSetVocabularyFilterName();
    public string get_VocabularyName();
    public void set_VocabularyName(string value);
    internal bool IsSetVocabularyName();
}
public class Amazon.TranscribeService.Model.StartCallAnalyticsJobRequest : AmazonTranscribeServiceRequest {
    private string _callAnalyticsJobName;
    private List`1<ChannelDefinition> _channelDefinitions;
    private string _dataAccessRoleArn;
    private Media _media;
    private string _outputEncryptionKMSKeyId;
    private string _outputLocation;
    private CallAnalyticsJobSettings _settings;
    [AWSPropertyAttribute]
public string CallAnalyticsJobName { get; public set; }
    [AWSPropertyAttribute]
public List`1<ChannelDefinition> ChannelDefinitions { get; public set; }
    [AWSPropertyAttribute]
public string DataAccessRoleArn { get; public set; }
    [AWSPropertyAttribute]
public Media Media { get; public set; }
    [AWSPropertyAttribute]
public string OutputEncryptionKMSKeyId { get; public set; }
    [AWSPropertyAttribute]
public string OutputLocation { get; public set; }
    public CallAnalyticsJobSettings Settings { get; public set; }
    public string get_CallAnalyticsJobName();
    public void set_CallAnalyticsJobName(string value);
    internal bool IsSetCallAnalyticsJobName();
    public List`1<ChannelDefinition> get_ChannelDefinitions();
    public void set_ChannelDefinitions(List`1<ChannelDefinition> value);
    internal bool IsSetChannelDefinitions();
    public string get_DataAccessRoleArn();
    public void set_DataAccessRoleArn(string value);
    internal bool IsSetDataAccessRoleArn();
    public Media get_Media();
    public void set_Media(Media value);
    internal bool IsSetMedia();
    public string get_OutputEncryptionKMSKeyId();
    public void set_OutputEncryptionKMSKeyId(string value);
    internal bool IsSetOutputEncryptionKMSKeyId();
    public string get_OutputLocation();
    public void set_OutputLocation(string value);
    internal bool IsSetOutputLocation();
    public CallAnalyticsJobSettings get_Settings();
    public void set_Settings(CallAnalyticsJobSettings value);
    internal bool IsSetSettings();
}
public class Amazon.TranscribeService.Model.StartCallAnalyticsJobResponse : AmazonWebServiceResponse {
    private CallAnalyticsJob _callAnalyticsJob;
    public CallAnalyticsJob CallAnalyticsJob { get; public set; }
    public CallAnalyticsJob get_CallAnalyticsJob();
    public void set_CallAnalyticsJob(CallAnalyticsJob value);
    internal bool IsSetCallAnalyticsJob();
}
public class Amazon.TranscribeService.Model.StartMedicalScribeJobRequest : AmazonTranscribeServiceRequest {
    private List`1<MedicalScribeChannelDefinition> _channelDefinitions;
    private string _dataAccessRoleArn;
    private Dictionary`2<string, string> _kmsEncryptionContext;
    private Media _media;
    private string _medicalScribeJobName;
    private string _outputBucketName;
    private string _outputEncryptionKMSKeyId;
    private MedicalScribeSettings _settings;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public List`1<MedicalScribeChannelDefinition> ChannelDefinitions { get; public set; }
    [AWSPropertyAttribute]
public string DataAccessRoleArn { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> KMSEncryptionContext { get; public set; }
    [AWSPropertyAttribute]
public Media Media { get; public set; }
    [AWSPropertyAttribute]
public string MedicalScribeJobName { get; public set; }
    [AWSPropertyAttribute]
public string OutputBucketName { get; public set; }
    [AWSPropertyAttribute]
public string OutputEncryptionKMSKeyId { get; public set; }
    [AWSPropertyAttribute]
public MedicalScribeSettings Settings { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public List`1<MedicalScribeChannelDefinition> get_ChannelDefinitions();
    public void set_ChannelDefinitions(List`1<MedicalScribeChannelDefinition> value);
    internal bool IsSetChannelDefinitions();
    public string get_DataAccessRoleArn();
    public void set_DataAccessRoleArn(string value);
    internal bool IsSetDataAccessRoleArn();
    public Dictionary`2<string, string> get_KMSEncryptionContext();
    public void set_KMSEncryptionContext(Dictionary`2<string, string> value);
    internal bool IsSetKMSEncryptionContext();
    public Media get_Media();
    public void set_Media(Media value);
    internal bool IsSetMedia();
    public string get_MedicalScribeJobName();
    public void set_MedicalScribeJobName(string value);
    internal bool IsSetMedicalScribeJobName();
    public string get_OutputBucketName();
    public void set_OutputBucketName(string value);
    internal bool IsSetOutputBucketName();
    public string get_OutputEncryptionKMSKeyId();
    public void set_OutputEncryptionKMSKeyId(string value);
    internal bool IsSetOutputEncryptionKMSKeyId();
    public MedicalScribeSettings get_Settings();
    public void set_Settings(MedicalScribeSettings value);
    internal bool IsSetSettings();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.TranscribeService.Model.StartMedicalScribeJobResponse : AmazonWebServiceResponse {
    private MedicalScribeJob _medicalScribeJob;
    public MedicalScribeJob MedicalScribeJob { get; public set; }
    public MedicalScribeJob get_MedicalScribeJob();
    public void set_MedicalScribeJob(MedicalScribeJob value);
    internal bool IsSetMedicalScribeJob();
}
public class Amazon.TranscribeService.Model.StartMedicalTranscriptionJobRequest : AmazonTranscribeServiceRequest {
    private MedicalContentIdentificationType _contentIdentificationType;
    private Dictionary`2<string, string> _kmsEncryptionContext;
    private LanguageCode _languageCode;
    private Media _media;
    private MediaFormat _mediaFormat;
    private Nullable`1<int> _mediaSampleRateHertz;
    private string _medicalTranscriptionJobName;
    private string _outputBucketName;
    private string _outputEncryptionKMSKeyId;
    private string _outputKey;
    private MedicalTranscriptionSetting _settings;
    private Specialty _specialty;
    private List`1<Tag> _tags;
    private Type _type;
    public MedicalContentIdentificationType ContentIdentificationType { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> KMSEncryptionContext { get; public set; }
    [AWSPropertyAttribute]
public LanguageCode LanguageCode { get; public set; }
    [AWSPropertyAttribute]
public Media Media { get; public set; }
    public MediaFormat MediaFormat { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MediaSampleRateHertz { get; public set; }
    [AWSPropertyAttribute]
public string MedicalTranscriptionJobName { get; public set; }
    [AWSPropertyAttribute]
public string OutputBucketName { get; public set; }
    [AWSPropertyAttribute]
public string OutputEncryptionKMSKeyId { get; public set; }
    [AWSPropertyAttribute]
public string OutputKey { get; public set; }
    public MedicalTranscriptionSetting Settings { get; public set; }
    [AWSPropertyAttribute]
public Specialty Specialty { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public Type Type { get; public set; }
    public MedicalContentIdentificationType get_ContentIdentificationType();
    public void set_ContentIdentificationType(MedicalContentIdentificationType value);
    internal bool IsSetContentIdentificationType();
    public Dictionary`2<string, string> get_KMSEncryptionContext();
    public void set_KMSEncryptionContext(Dictionary`2<string, string> value);
    internal bool IsSetKMSEncryptionContext();
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
    public Media get_Media();
    public void set_Media(Media value);
    internal bool IsSetMedia();
    public MediaFormat get_MediaFormat();
    public void set_MediaFormat(MediaFormat value);
    internal bool IsSetMediaFormat();
    public Nullable`1<int> get_MediaSampleRateHertz();
    public void set_MediaSampleRateHertz(Nullable`1<int> value);
    internal bool IsSetMediaSampleRateHertz();
    public string get_MedicalTranscriptionJobName();
    public void set_MedicalTranscriptionJobName(string value);
    internal bool IsSetMedicalTranscriptionJobName();
    public string get_OutputBucketName();
    public void set_OutputBucketName(string value);
    internal bool IsSetOutputBucketName();
    public string get_OutputEncryptionKMSKeyId();
    public void set_OutputEncryptionKMSKeyId(string value);
    internal bool IsSetOutputEncryptionKMSKeyId();
    public string get_OutputKey();
    public void set_OutputKey(string value);
    internal bool IsSetOutputKey();
    public MedicalTranscriptionSetting get_Settings();
    public void set_Settings(MedicalTranscriptionSetting value);
    internal bool IsSetSettings();
    public Specialty get_Specialty();
    public void set_Specialty(Specialty value);
    internal bool IsSetSpecialty();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public Type get_Type();
    public void set_Type(Type value);
    internal bool IsSetType();
}
public class Amazon.TranscribeService.Model.StartMedicalTranscriptionJobResponse : AmazonWebServiceResponse {
    private MedicalTranscriptionJob _medicalTranscriptionJob;
    public MedicalTranscriptionJob MedicalTranscriptionJob { get; public set; }
    public MedicalTranscriptionJob get_MedicalTranscriptionJob();
    public void set_MedicalTranscriptionJob(MedicalTranscriptionJob value);
    internal bool IsSetMedicalTranscriptionJob();
}
public class Amazon.TranscribeService.Model.StartTranscriptionJobRequest : AmazonTranscribeServiceRequest {
    private ContentRedaction _contentRedaction;
    private Nullable`1<bool> _identifyLanguage;
    private Nullable`1<bool> _identifyMultipleLanguages;
    private JobExecutionSettings _jobExecutionSettings;
    private Dictionary`2<string, string> _kmsEncryptionContext;
    private LanguageCode _languageCode;
    private Dictionary`2<string, LanguageIdSettings> _languageIdSettings;
    private List`1<string> _languageOptions;
    private Media _media;
    private MediaFormat _mediaFormat;
    private Nullable`1<int> _mediaSampleRateHertz;
    private ModelSettings _modelSettings;
    private string _outputBucketName;
    private string _outputEncryptionKMSKeyId;
    private string _outputKey;
    private Settings _settings;
    private Subtitles _subtitles;
    private List`1<Tag> _tags;
    private List`1<ToxicityDetectionSettings> _toxicityDetection;
    private string _transcriptionJobName;
    public ContentRedaction ContentRedaction { get; public set; }
    public Nullable`1<bool> IdentifyLanguage { get; public set; }
    public Nullable`1<bool> IdentifyMultipleLanguages { get; public set; }
    public JobExecutionSettings JobExecutionSettings { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> KMSEncryptionContext { get; public set; }
    public LanguageCode LanguageCode { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, LanguageIdSettings> LanguageIdSettings { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> LanguageOptions { get; public set; }
    [AWSPropertyAttribute]
public Media Media { get; public set; }
    public MediaFormat MediaFormat { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MediaSampleRateHertz { get; public set; }
    public ModelSettings ModelSettings { get; public set; }
    [AWSPropertyAttribute]
public string OutputBucketName { get; public set; }
    [AWSPropertyAttribute]
public string OutputEncryptionKMSKeyId { get; public set; }
    [AWSPropertyAttribute]
public string OutputKey { get; public set; }
    public Settings Settings { get; public set; }
    public Subtitles Subtitles { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public List`1<ToxicityDetectionSettings> ToxicityDetection { get; public set; }
    [AWSPropertyAttribute]
public string TranscriptionJobName { get; public set; }
    public ContentRedaction get_ContentRedaction();
    public void set_ContentRedaction(ContentRedaction value);
    internal bool IsSetContentRedaction();
    public Nullable`1<bool> get_IdentifyLanguage();
    public void set_IdentifyLanguage(Nullable`1<bool> value);
    internal bool IsSetIdentifyLanguage();
    public Nullable`1<bool> get_IdentifyMultipleLanguages();
    public void set_IdentifyMultipleLanguages(Nullable`1<bool> value);
    internal bool IsSetIdentifyMultipleLanguages();
    public JobExecutionSettings get_JobExecutionSettings();
    public void set_JobExecutionSettings(JobExecutionSettings value);
    internal bool IsSetJobExecutionSettings();
    public Dictionary`2<string, string> get_KMSEncryptionContext();
    public void set_KMSEncryptionContext(Dictionary`2<string, string> value);
    internal bool IsSetKMSEncryptionContext();
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
    public Dictionary`2<string, LanguageIdSettings> get_LanguageIdSettings();
    public void set_LanguageIdSettings(Dictionary`2<string, LanguageIdSettings> value);
    internal bool IsSetLanguageIdSettings();
    public List`1<string> get_LanguageOptions();
    public void set_LanguageOptions(List`1<string> value);
    internal bool IsSetLanguageOptions();
    public Media get_Media();
    public void set_Media(Media value);
    internal bool IsSetMedia();
    public MediaFormat get_MediaFormat();
    public void set_MediaFormat(MediaFormat value);
    internal bool IsSetMediaFormat();
    public Nullable`1<int> get_MediaSampleRateHertz();
    public void set_MediaSampleRateHertz(Nullable`1<int> value);
    internal bool IsSetMediaSampleRateHertz();
    public ModelSettings get_ModelSettings();
    public void set_ModelSettings(ModelSettings value);
    internal bool IsSetModelSettings();
    public string get_OutputBucketName();
    public void set_OutputBucketName(string value);
    internal bool IsSetOutputBucketName();
    public string get_OutputEncryptionKMSKeyId();
    public void set_OutputEncryptionKMSKeyId(string value);
    internal bool IsSetOutputEncryptionKMSKeyId();
    public string get_OutputKey();
    public void set_OutputKey(string value);
    internal bool IsSetOutputKey();
    public Settings get_Settings();
    public void set_Settings(Settings value);
    internal bool IsSetSettings();
    public Subtitles get_Subtitles();
    public void set_Subtitles(Subtitles value);
    internal bool IsSetSubtitles();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public List`1<ToxicityDetectionSettings> get_ToxicityDetection();
    public void set_ToxicityDetection(List`1<ToxicityDetectionSettings> value);
    internal bool IsSetToxicityDetection();
    public string get_TranscriptionJobName();
    public void set_TranscriptionJobName(string value);
    internal bool IsSetTranscriptionJobName();
}
public class Amazon.TranscribeService.Model.StartTranscriptionJobResponse : AmazonWebServiceResponse {
    private TranscriptionJob _transcriptionJob;
    public TranscriptionJob TranscriptionJob { get; public set; }
    public TranscriptionJob get_TranscriptionJob();
    public void set_TranscriptionJob(TranscriptionJob value);
    internal bool IsSetTranscriptionJob();
}
public class Amazon.TranscribeService.Model.Subtitles : object {
    private List`1<string> _formats;
    private Nullable`1<int> _outputStartIndex;
    public List`1<string> Formats { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> OutputStartIndex { get; public set; }
    public List`1<string> get_Formats();
    public void set_Formats(List`1<string> value);
    internal bool IsSetFormats();
    public Nullable`1<int> get_OutputStartIndex();
    public void set_OutputStartIndex(Nullable`1<int> value);
    internal bool IsSetOutputStartIndex();
}
public class Amazon.TranscribeService.Model.SubtitlesOutput : object {
    private List`1<string> _formats;
    private Nullable`1<int> _outputStartIndex;
    private List`1<string> _subtitleFileUris;
    public List`1<string> Formats { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> OutputStartIndex { get; public set; }
    public List`1<string> SubtitleFileUris { get; public set; }
    public List`1<string> get_Formats();
    public void set_Formats(List`1<string> value);
    internal bool IsSetFormats();
    public Nullable`1<int> get_OutputStartIndex();
    public void set_OutputStartIndex(Nullable`1<int> value);
    internal bool IsSetOutputStartIndex();
    public List`1<string> get_SubtitleFileUris();
    public void set_SubtitleFileUris(List`1<string> value);
    internal bool IsSetSubtitleFileUris();
}
public class Amazon.TranscribeService.Model.Summarization : object {
    private Nullable`1<bool> _generateAbstractiveSummary;
    [AWSPropertyAttribute]
public Nullable`1<bool> GenerateAbstractiveSummary { get; public set; }
    public Nullable`1<bool> get_GenerateAbstractiveSummary();
    public void set_GenerateAbstractiveSummary(Nullable`1<bool> value);
    internal bool IsSetGenerateAbstractiveSummary();
}
public class Amazon.TranscribeService.Model.Tag : object {
    private string _key;
    private string _value;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.TranscribeService.Model.TagResourceRequest : AmazonTranscribeServiceRequest {
    private string _resourceArn;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.TranscribeService.Model.TagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.TranscribeService.Model.ToxicityDetectionSettings : object {
    private List`1<string> _toxicityCategories;
    [AWSPropertyAttribute]
public List`1<string> ToxicityCategories { get; public set; }
    public List`1<string> get_ToxicityCategories();
    public void set_ToxicityCategories(List`1<string> value);
    internal bool IsSetToxicityCategories();
}
public class Amazon.TranscribeService.Model.TranscribeServicePaginatorFactory : object {
    private IAmazonTranscribeService client;
    internal TranscribeServicePaginatorFactory(IAmazonTranscribeService client);
    public sealed virtual IListCallAnalyticsCategoriesPaginator ListCallAnalyticsCategories(ListCallAnalyticsCategoriesRequest request);
    public sealed virtual IListCallAnalyticsJobsPaginator ListCallAnalyticsJobs(ListCallAnalyticsJobsRequest request);
    public sealed virtual IListLanguageModelsPaginator ListLanguageModels(ListLanguageModelsRequest request);
    public sealed virtual IListMedicalScribeJobsPaginator ListMedicalScribeJobs(ListMedicalScribeJobsRequest request);
    public sealed virtual IListMedicalTranscriptionJobsPaginator ListMedicalTranscriptionJobs(ListMedicalTranscriptionJobsRequest request);
    public sealed virtual IListMedicalVocabulariesPaginator ListMedicalVocabularies(ListMedicalVocabulariesRequest request);
    public sealed virtual IListTranscriptionJobsPaginator ListTranscriptionJobs(ListTranscriptionJobsRequest request);
    public sealed virtual IListVocabulariesPaginator ListVocabularies(ListVocabulariesRequest request);
    public sealed virtual IListVocabularyFiltersPaginator ListVocabularyFilters(ListVocabularyFiltersRequest request);
}
public class Amazon.TranscribeService.Model.Transcript : object {
    private string _redactedTranscriptFileUri;
    private string _transcriptFileUri;
    [AWSPropertyAttribute]
public string RedactedTranscriptFileUri { get; public set; }
    [AWSPropertyAttribute]
public string TranscriptFileUri { get; public set; }
    public string get_RedactedTranscriptFileUri();
    public void set_RedactedTranscriptFileUri(string value);
    internal bool IsSetRedactedTranscriptFileUri();
    public string get_TranscriptFileUri();
    public void set_TranscriptFileUri(string value);
    internal bool IsSetTranscriptFileUri();
}
public class Amazon.TranscribeService.Model.TranscriptFilter : object {
    private AbsoluteTimeRange _absoluteTimeRange;
    private Nullable`1<bool> _negate;
    private ParticipantRole _participantRole;
    private RelativeTimeRange _relativeTimeRange;
    private List`1<string> _targets;
    private TranscriptFilterType _transcriptFilterType;
    public AbsoluteTimeRange AbsoluteTimeRange { get; public set; }
    public Nullable`1<bool> Negate { get; public set; }
    public ParticipantRole ParticipantRole { get; public set; }
    public RelativeTimeRange RelativeTimeRange { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Targets { get; public set; }
    [AWSPropertyAttribute]
public TranscriptFilterType TranscriptFilterType { get; public set; }
    public AbsoluteTimeRange get_AbsoluteTimeRange();
    public void set_AbsoluteTimeRange(AbsoluteTimeRange value);
    internal bool IsSetAbsoluteTimeRange();
    public Nullable`1<bool> get_Negate();
    public void set_Negate(Nullable`1<bool> value);
    internal bool IsSetNegate();
    public ParticipantRole get_ParticipantRole();
    public void set_ParticipantRole(ParticipantRole value);
    internal bool IsSetParticipantRole();
    public RelativeTimeRange get_RelativeTimeRange();
    public void set_RelativeTimeRange(RelativeTimeRange value);
    internal bool IsSetRelativeTimeRange();
    public List`1<string> get_Targets();
    public void set_Targets(List`1<string> value);
    internal bool IsSetTargets();
    public TranscriptFilterType get_TranscriptFilterType();
    public void set_TranscriptFilterType(TranscriptFilterType value);
    internal bool IsSetTranscriptFilterType();
}
public class Amazon.TranscribeService.Model.TranscriptionJob : object {
    private Nullable`1<DateTime> _completionTime;
    private ContentRedaction _contentRedaction;
    private Nullable`1<DateTime> _creationTime;
    private string _failureReason;
    private Nullable`1<float> _identifiedLanguageScore;
    private Nullable`1<bool> _identifyLanguage;
    private Nullable`1<bool> _identifyMultipleLanguages;
    private JobExecutionSettings _jobExecutionSettings;
    private LanguageCode _languageCode;
    private List`1<LanguageCodeItem> _languageCodes;
    private Dictionary`2<string, LanguageIdSettings> _languageIdSettings;
    private List`1<string> _languageOptions;
    private Media _media;
    private MediaFormat _mediaFormat;
    private Nullable`1<int> _mediaSampleRateHertz;
    private ModelSettings _modelSettings;
    private Settings _settings;
    private Nullable`1<DateTime> _startTime;
    private SubtitlesOutput _subtitles;
    private List`1<Tag> _tags;
    private List`1<ToxicityDetectionSettings> _toxicityDetection;
    private Transcript _transcript;
    private string _transcriptionJobName;
    private TranscriptionJobStatus _transcriptionJobStatus;
    public Nullable`1<DateTime> CompletionTime { get; public set; }
    public ContentRedaction ContentRedaction { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public string FailureReason { get; public set; }
    public Nullable`1<float> IdentifiedLanguageScore { get; public set; }
    public Nullable`1<bool> IdentifyLanguage { get; public set; }
    public Nullable`1<bool> IdentifyMultipleLanguages { get; public set; }
    public JobExecutionSettings JobExecutionSettings { get; public set; }
    public LanguageCode LanguageCode { get; public set; }
    public List`1<LanguageCodeItem> LanguageCodes { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, LanguageIdSettings> LanguageIdSettings { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> LanguageOptions { get; public set; }
    public Media Media { get; public set; }
    public MediaFormat MediaFormat { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MediaSampleRateHertz { get; public set; }
    public ModelSettings ModelSettings { get; public set; }
    public Settings Settings { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public SubtitlesOutput Subtitles { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public List`1<ToxicityDetectionSettings> ToxicityDetection { get; public set; }
    public Transcript Transcript { get; public set; }
    [AWSPropertyAttribute]
public string TranscriptionJobName { get; public set; }
    public TranscriptionJobStatus TranscriptionJobStatus { get; public set; }
    public Nullable`1<DateTime> get_CompletionTime();
    public void set_CompletionTime(Nullable`1<DateTime> value);
    internal bool IsSetCompletionTime();
    public ContentRedaction get_ContentRedaction();
    public void set_ContentRedaction(ContentRedaction value);
    internal bool IsSetContentRedaction();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_FailureReason();
    public void set_FailureReason(string value);
    internal bool IsSetFailureReason();
    public Nullable`1<float> get_IdentifiedLanguageScore();
    public void set_IdentifiedLanguageScore(Nullable`1<float> value);
    internal bool IsSetIdentifiedLanguageScore();
    public Nullable`1<bool> get_IdentifyLanguage();
    public void set_IdentifyLanguage(Nullable`1<bool> value);
    internal bool IsSetIdentifyLanguage();
    public Nullable`1<bool> get_IdentifyMultipleLanguages();
    public void set_IdentifyMultipleLanguages(Nullable`1<bool> value);
    internal bool IsSetIdentifyMultipleLanguages();
    public JobExecutionSettings get_JobExecutionSettings();
    public void set_JobExecutionSettings(JobExecutionSettings value);
    internal bool IsSetJobExecutionSettings();
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
    public List`1<LanguageCodeItem> get_LanguageCodes();
    public void set_LanguageCodes(List`1<LanguageCodeItem> value);
    internal bool IsSetLanguageCodes();
    public Dictionary`2<string, LanguageIdSettings> get_LanguageIdSettings();
    public void set_LanguageIdSettings(Dictionary`2<string, LanguageIdSettings> value);
    internal bool IsSetLanguageIdSettings();
    public List`1<string> get_LanguageOptions();
    public void set_LanguageOptions(List`1<string> value);
    internal bool IsSetLanguageOptions();
    public Media get_Media();
    public void set_Media(Media value);
    internal bool IsSetMedia();
    public MediaFormat get_MediaFormat();
    public void set_MediaFormat(MediaFormat value);
    internal bool IsSetMediaFormat();
    public Nullable`1<int> get_MediaSampleRateHertz();
    public void set_MediaSampleRateHertz(Nullable`1<int> value);
    internal bool IsSetMediaSampleRateHertz();
    public ModelSettings get_ModelSettings();
    public void set_ModelSettings(ModelSettings value);
    internal bool IsSetModelSettings();
    public Settings get_Settings();
    public void set_Settings(Settings value);
    internal bool IsSetSettings();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public SubtitlesOutput get_Subtitles();
    public void set_Subtitles(SubtitlesOutput value);
    internal bool IsSetSubtitles();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public List`1<ToxicityDetectionSettings> get_ToxicityDetection();
    public void set_ToxicityDetection(List`1<ToxicityDetectionSettings> value);
    internal bool IsSetToxicityDetection();
    public Transcript get_Transcript();
    public void set_Transcript(Transcript value);
    internal bool IsSetTranscript();
    public string get_TranscriptionJobName();
    public void set_TranscriptionJobName(string value);
    internal bool IsSetTranscriptionJobName();
    public TranscriptionJobStatus get_TranscriptionJobStatus();
    public void set_TranscriptionJobStatus(TranscriptionJobStatus value);
    internal bool IsSetTranscriptionJobStatus();
}
public class Amazon.TranscribeService.Model.TranscriptionJobSummary : object {
    private Nullable`1<DateTime> _completionTime;
    private ContentRedaction _contentRedaction;
    private Nullable`1<DateTime> _creationTime;
    private string _failureReason;
    private Nullable`1<float> _identifiedLanguageScore;
    private Nullable`1<bool> _identifyLanguage;
    private Nullable`1<bool> _identifyMultipleLanguages;
    private LanguageCode _languageCode;
    private List`1<LanguageCodeItem> _languageCodes;
    private ModelSettings _modelSettings;
    private OutputLocationType _outputLocationType;
    private Nullable`1<DateTime> _startTime;
    private List`1<ToxicityDetectionSettings> _toxicityDetection;
    private string _transcriptionJobName;
    private TranscriptionJobStatus _transcriptionJobStatus;
    public Nullable`1<DateTime> CompletionTime { get; public set; }
    public ContentRedaction ContentRedaction { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public string FailureReason { get; public set; }
    public Nullable`1<float> IdentifiedLanguageScore { get; public set; }
    public Nullable`1<bool> IdentifyLanguage { get; public set; }
    public Nullable`1<bool> IdentifyMultipleLanguages { get; public set; }
    public LanguageCode LanguageCode { get; public set; }
    public List`1<LanguageCodeItem> LanguageCodes { get; public set; }
    public ModelSettings ModelSettings { get; public set; }
    public OutputLocationType OutputLocationType { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    [AWSPropertyAttribute]
public List`1<ToxicityDetectionSettings> ToxicityDetection { get; public set; }
    [AWSPropertyAttribute]
public string TranscriptionJobName { get; public set; }
    public TranscriptionJobStatus TranscriptionJobStatus { get; public set; }
    public Nullable`1<DateTime> get_CompletionTime();
    public void set_CompletionTime(Nullable`1<DateTime> value);
    internal bool IsSetCompletionTime();
    public ContentRedaction get_ContentRedaction();
    public void set_ContentRedaction(ContentRedaction value);
    internal bool IsSetContentRedaction();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_FailureReason();
    public void set_FailureReason(string value);
    internal bool IsSetFailureReason();
    public Nullable`1<float> get_IdentifiedLanguageScore();
    public void set_IdentifiedLanguageScore(Nullable`1<float> value);
    internal bool IsSetIdentifiedLanguageScore();
    public Nullable`1<bool> get_IdentifyLanguage();
    public void set_IdentifyLanguage(Nullable`1<bool> value);
    internal bool IsSetIdentifyLanguage();
    public Nullable`1<bool> get_IdentifyMultipleLanguages();
    public void set_IdentifyMultipleLanguages(Nullable`1<bool> value);
    internal bool IsSetIdentifyMultipleLanguages();
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
    public List`1<LanguageCodeItem> get_LanguageCodes();
    public void set_LanguageCodes(List`1<LanguageCodeItem> value);
    internal bool IsSetLanguageCodes();
    public ModelSettings get_ModelSettings();
    public void set_ModelSettings(ModelSettings value);
    internal bool IsSetModelSettings();
    public OutputLocationType get_OutputLocationType();
    public void set_OutputLocationType(OutputLocationType value);
    internal bool IsSetOutputLocationType();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public List`1<ToxicityDetectionSettings> get_ToxicityDetection();
    public void set_ToxicityDetection(List`1<ToxicityDetectionSettings> value);
    internal bool IsSetToxicityDetection();
    public string get_TranscriptionJobName();
    public void set_TranscriptionJobName(string value);
    internal bool IsSetTranscriptionJobName();
    public TranscriptionJobStatus get_TranscriptionJobStatus();
    public void set_TranscriptionJobStatus(TranscriptionJobStatus value);
    internal bool IsSetTranscriptionJobStatus();
}
public class Amazon.TranscribeService.Model.UntagResourceRequest : AmazonTranscribeServiceRequest {
    private string _resourceArn;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.TranscribeService.Model.UntagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.TranscribeService.Model.UpdateCallAnalyticsCategoryRequest : AmazonTranscribeServiceRequest {
    private string _categoryName;
    private InputType _inputType;
    private List`1<Rule> _rules;
    [AWSPropertyAttribute]
public string CategoryName { get; public set; }
    public InputType InputType { get; public set; }
    [AWSPropertyAttribute]
public List`1<Rule> Rules { get; public set; }
    public string get_CategoryName();
    public void set_CategoryName(string value);
    internal bool IsSetCategoryName();
    public InputType get_InputType();
    public void set_InputType(InputType value);
    internal bool IsSetInputType();
    public List`1<Rule> get_Rules();
    public void set_Rules(List`1<Rule> value);
    internal bool IsSetRules();
}
public class Amazon.TranscribeService.Model.UpdateCallAnalyticsCategoryResponse : AmazonWebServiceResponse {
    private CategoryProperties _categoryProperties;
    public CategoryProperties CategoryProperties { get; public set; }
    public CategoryProperties get_CategoryProperties();
    public void set_CategoryProperties(CategoryProperties value);
    internal bool IsSetCategoryProperties();
}
public class Amazon.TranscribeService.Model.UpdateMedicalVocabularyRequest : AmazonTranscribeServiceRequest {
    private LanguageCode _languageCode;
    private string _vocabularyFileUri;
    private string _vocabularyName;
    [AWSPropertyAttribute]
public LanguageCode LanguageCode { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyFileUri { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyName { get; public set; }
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
    public string get_VocabularyFileUri();
    public void set_VocabularyFileUri(string value);
    internal bool IsSetVocabularyFileUri();
    public string get_VocabularyName();
    public void set_VocabularyName(string value);
    internal bool IsSetVocabularyName();
}
public class Amazon.TranscribeService.Model.UpdateMedicalVocabularyResponse : AmazonWebServiceResponse {
    private LanguageCode _languageCode;
    private Nullable`1<DateTime> _lastModifiedTime;
    private string _vocabularyName;
    private VocabularyState _vocabularyState;
    public LanguageCode LanguageCode { get; public set; }
    public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyName { get; public set; }
    public VocabularyState VocabularyState { get; public set; }
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public string get_VocabularyName();
    public void set_VocabularyName(string value);
    internal bool IsSetVocabularyName();
    public VocabularyState get_VocabularyState();
    public void set_VocabularyState(VocabularyState value);
    internal bool IsSetVocabularyState();
}
public class Amazon.TranscribeService.Model.UpdateVocabularyFilterRequest : AmazonTranscribeServiceRequest {
    private string _dataAccessRoleArn;
    private string _vocabularyFilterFileUri;
    private string _vocabularyFilterName;
    private List`1<string> _words;
    [AWSPropertyAttribute]
public string DataAccessRoleArn { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyFilterFileUri { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyFilterName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Words { get; public set; }
    public string get_DataAccessRoleArn();
    public void set_DataAccessRoleArn(string value);
    internal bool IsSetDataAccessRoleArn();
    public string get_VocabularyFilterFileUri();
    public void set_VocabularyFilterFileUri(string value);
    internal bool IsSetVocabularyFilterFileUri();
    public string get_VocabularyFilterName();
    public void set_VocabularyFilterName(string value);
    internal bool IsSetVocabularyFilterName();
    public List`1<string> get_Words();
    public void set_Words(List`1<string> value);
    internal bool IsSetWords();
}
public class Amazon.TranscribeService.Model.UpdateVocabularyFilterResponse : AmazonWebServiceResponse {
    private LanguageCode _languageCode;
    private Nullable`1<DateTime> _lastModifiedTime;
    private string _vocabularyFilterName;
    public LanguageCode LanguageCode { get; public set; }
    public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyFilterName { get; public set; }
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public string get_VocabularyFilterName();
    public void set_VocabularyFilterName(string value);
    internal bool IsSetVocabularyFilterName();
}
public class Amazon.TranscribeService.Model.UpdateVocabularyRequest : AmazonTranscribeServiceRequest {
    private string _dataAccessRoleArn;
    private LanguageCode _languageCode;
    private List`1<string> _phrases;
    private string _vocabularyFileUri;
    private string _vocabularyName;
    [AWSPropertyAttribute]
public string DataAccessRoleArn { get; public set; }
    [AWSPropertyAttribute]
public LanguageCode LanguageCode { get; public set; }
    public List`1<string> Phrases { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyFileUri { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyName { get; public set; }
    public string get_DataAccessRoleArn();
    public void set_DataAccessRoleArn(string value);
    internal bool IsSetDataAccessRoleArn();
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
    public List`1<string> get_Phrases();
    public void set_Phrases(List`1<string> value);
    internal bool IsSetPhrases();
    public string get_VocabularyFileUri();
    public void set_VocabularyFileUri(string value);
    internal bool IsSetVocabularyFileUri();
    public string get_VocabularyName();
    public void set_VocabularyName(string value);
    internal bool IsSetVocabularyName();
}
public class Amazon.TranscribeService.Model.UpdateVocabularyResponse : AmazonWebServiceResponse {
    private LanguageCode _languageCode;
    private Nullable`1<DateTime> _lastModifiedTime;
    private string _vocabularyName;
    private VocabularyState _vocabularyState;
    public LanguageCode LanguageCode { get; public set; }
    public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyName { get; public set; }
    public VocabularyState VocabularyState { get; public set; }
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public string get_VocabularyName();
    public void set_VocabularyName(string value);
    internal bool IsSetVocabularyName();
    public VocabularyState get_VocabularyState();
    public void set_VocabularyState(VocabularyState value);
    internal bool IsSetVocabularyState();
}
public class Amazon.TranscribeService.Model.VocabularyFilterInfo : object {
    private LanguageCode _languageCode;
    private Nullable`1<DateTime> _lastModifiedTime;
    private string _vocabularyFilterName;
    public LanguageCode LanguageCode { get; public set; }
    public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyFilterName { get; public set; }
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public string get_VocabularyFilterName();
    public void set_VocabularyFilterName(string value);
    internal bool IsSetVocabularyFilterName();
}
public class Amazon.TranscribeService.Model.VocabularyInfo : object {
    private LanguageCode _languageCode;
    private Nullable`1<DateTime> _lastModifiedTime;
    private string _vocabularyName;
    private VocabularyState _vocabularyState;
    public LanguageCode LanguageCode { get; public set; }
    public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    [AWSPropertyAttribute]
public string VocabularyName { get; public set; }
    public VocabularyState VocabularyState { get; public set; }
    public LanguageCode get_LanguageCode();
    public void set_LanguageCode(LanguageCode value);
    internal bool IsSetLanguageCode();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public string get_VocabularyName();
    public void set_VocabularyName(string value);
    internal bool IsSetVocabularyName();
    public VocabularyState get_VocabularyState();
    public void set_VocabularyState(VocabularyState value);
    internal bool IsSetVocabularyState();
}
public class Amazon.TranscribeService.ModelStatus : ConstantClass {
    public static ModelStatus COMPLETED;
    public static ModelStatus FAILED;
    public static ModelStatus IN_PROGRESS;
    public ModelStatus(string value);
    private static ModelStatus();
    public static ModelStatus FindValue(string value);
    public static ModelStatus op_Implicit(string value);
}
public class Amazon.TranscribeService.OutputLocationType : ConstantClass {
    public static OutputLocationType CUSTOMER_BUCKET;
    public static OutputLocationType SERVICE_BUCKET;
    public OutputLocationType(string value);
    private static OutputLocationType();
    public static OutputLocationType FindValue(string value);
    public static OutputLocationType op_Implicit(string value);
}
public class Amazon.TranscribeService.ParticipantRole : ConstantClass {
    public static ParticipantRole AGENT;
    public static ParticipantRole CUSTOMER;
    public ParticipantRole(string value);
    private static ParticipantRole();
    public static ParticipantRole FindValue(string value);
    public static ParticipantRole op_Implicit(string value);
}
public class Amazon.TranscribeService.PiiEntityType : ConstantClass {
    public static PiiEntityType ADDRESS;
    public static PiiEntityType ALL;
    public static PiiEntityType BANK_ACCOUNT_NUMBER;
    public static PiiEntityType BANK_ROUTING;
    public static PiiEntityType CREDIT_DEBIT_CVV;
    public static PiiEntityType CREDIT_DEBIT_EXPIRY;
    public static PiiEntityType CREDIT_DEBIT_NUMBER;
    public static PiiEntityType EMAIL;
    public static PiiEntityType NAME;
    public static PiiEntityType PHONE;
    public static PiiEntityType PIN;
    public static PiiEntityType SSN;
    public PiiEntityType(string value);
    private static PiiEntityType();
    public static PiiEntityType FindValue(string value);
    public static PiiEntityType op_Implicit(string value);
}
public class Amazon.TranscribeService.RedactionOutput : ConstantClass {
    public static RedactionOutput Redacted;
    public static RedactionOutput Redacted_and_unredacted;
    public RedactionOutput(string value);
    private static RedactionOutput();
    public static RedactionOutput FindValue(string value);
    public static RedactionOutput op_Implicit(string value);
}
public class Amazon.TranscribeService.RedactionType : ConstantClass {
    public static RedactionType PII;
    public RedactionType(string value);
    private static RedactionType();
    public static RedactionType FindValue(string value);
    public static RedactionType op_Implicit(string value);
}
public class Amazon.TranscribeService.SentimentValue : ConstantClass {
    public static SentimentValue MIXED;
    public static SentimentValue NEGATIVE;
    public static SentimentValue NEUTRAL;
    public static SentimentValue POSITIVE;
    public SentimentValue(string value);
    private static SentimentValue();
    public static SentimentValue FindValue(string value);
    public static SentimentValue op_Implicit(string value);
}
public class Amazon.TranscribeService.Specialty : ConstantClass {
    public static Specialty PRIMARYCARE;
    public Specialty(string value);
    private static Specialty();
    public static Specialty FindValue(string value);
    public static Specialty op_Implicit(string value);
}
public class Amazon.TranscribeService.SubtitleFormat : ConstantClass {
    public static SubtitleFormat Srt;
    public static SubtitleFormat Vtt;
    public SubtitleFormat(string value);
    private static SubtitleFormat();
    public static SubtitleFormat FindValue(string value);
    public static SubtitleFormat op_Implicit(string value);
}
public class Amazon.TranscribeService.ToxicityCategory : ConstantClass {
    public static ToxicityCategory ALL;
    public ToxicityCategory(string value);
    private static ToxicityCategory();
    public static ToxicityCategory FindValue(string value);
    public static ToxicityCategory op_Implicit(string value);
}
public class Amazon.TranscribeService.TranscriptFilterType : ConstantClass {
    public static TranscriptFilterType EXACT;
    public TranscriptFilterType(string value);
    private static TranscriptFilterType();
    public static TranscriptFilterType FindValue(string value);
    public static TranscriptFilterType op_Implicit(string value);
}
public class Amazon.TranscribeService.TranscriptionJobStatus : ConstantClass {
    public static TranscriptionJobStatus COMPLETED;
    public static TranscriptionJobStatus FAILED;
    public static TranscriptionJobStatus IN_PROGRESS;
    public static TranscriptionJobStatus QUEUED;
    public TranscriptionJobStatus(string value);
    private static TranscriptionJobStatus();
    public static TranscriptionJobStatus FindValue(string value);
    public static TranscriptionJobStatus op_Implicit(string value);
}
public class Amazon.TranscribeService.Type : ConstantClass {
    public static Type CONVERSATION;
    public static Type DICTATION;
    public Type(string value);
    private static Type();
    public static Type FindValue(string value);
    public static Type op_Implicit(string value);
}
public class Amazon.TranscribeService.VocabularyFilterMethod : ConstantClass {
    public static VocabularyFilterMethod Mask;
    public static VocabularyFilterMethod Remove;
    public static VocabularyFilterMethod Tag;
    public VocabularyFilterMethod(string value);
    private static VocabularyFilterMethod();
    public static VocabularyFilterMethod FindValue(string value);
    public static VocabularyFilterMethod op_Implicit(string value);
}
public class Amazon.TranscribeService.VocabularyState : ConstantClass {
    public static VocabularyState FAILED;
    public static VocabularyState PENDING;
    public static VocabularyState READY;
    public VocabularyState(string value);
    private static VocabularyState();
    public static VocabularyState FindValue(string value);
    public static VocabularyState op_Implicit(string value);
}
