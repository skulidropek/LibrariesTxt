public class Amazon.Translate.AmazonTranslateClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private ITranslatePaginatorFactory _paginators;
    public ITranslatePaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonTranslateClient(RegionEndpoint region);
    public AmazonTranslateClient(AmazonTranslateConfig config);
    public AmazonTranslateClient(AWSCredentials credentials);
    public AmazonTranslateClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonTranslateClient(AWSCredentials credentials, AmazonTranslateConfig clientConfig);
    public AmazonTranslateClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonTranslateClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonTranslateClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonTranslateConfig clientConfig);
    public AmazonTranslateClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonTranslateClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonTranslateClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonTranslateConfig clientConfig);
    private static AmazonTranslateClient();
    public sealed virtual ITranslatePaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    public virtual CreateParallelDataResponse CreateParallelData(CreateParallelDataRequest request);
    public virtual Task`1<CreateParallelDataResponse> CreateParallelDataAsync(CreateParallelDataRequest request, CancellationToken cancellationToken);
    public virtual DeleteParallelDataResponse DeleteParallelData(DeleteParallelDataRequest request);
    public virtual Task`1<DeleteParallelDataResponse> DeleteParallelDataAsync(DeleteParallelDataRequest request, CancellationToken cancellationToken);
    public virtual DeleteTerminologyResponse DeleteTerminology(DeleteTerminologyRequest request);
    public virtual Task`1<DeleteTerminologyResponse> DeleteTerminologyAsync(DeleteTerminologyRequest request, CancellationToken cancellationToken);
    public virtual DescribeTextTranslationJobResponse DescribeTextTranslationJob(DescribeTextTranslationJobRequest request);
    public virtual Task`1<DescribeTextTranslationJobResponse> DescribeTextTranslationJobAsync(DescribeTextTranslationJobRequest request, CancellationToken cancellationToken);
    public virtual GetParallelDataResponse GetParallelData(GetParallelDataRequest request);
    public virtual Task`1<GetParallelDataResponse> GetParallelDataAsync(GetParallelDataRequest request, CancellationToken cancellationToken);
    public virtual GetTerminologyResponse GetTerminology(GetTerminologyRequest request);
    public virtual Task`1<GetTerminologyResponse> GetTerminologyAsync(GetTerminologyRequest request, CancellationToken cancellationToken);
    public virtual ImportTerminologyResponse ImportTerminology(ImportTerminologyRequest request);
    public virtual Task`1<ImportTerminologyResponse> ImportTerminologyAsync(ImportTerminologyRequest request, CancellationToken cancellationToken);
    public virtual ListLanguagesResponse ListLanguages(ListLanguagesRequest request);
    public virtual Task`1<ListLanguagesResponse> ListLanguagesAsync(ListLanguagesRequest request, CancellationToken cancellationToken);
    public virtual ListParallelDataResponse ListParallelData(ListParallelDataRequest request);
    public virtual Task`1<ListParallelDataResponse> ListParallelDataAsync(ListParallelDataRequest request, CancellationToken cancellationToken);
    public virtual ListTagsForResourceResponse ListTagsForResource(ListTagsForResourceRequest request);
    public virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    public virtual ListTerminologiesResponse ListTerminologies(ListTerminologiesRequest request);
    public virtual Task`1<ListTerminologiesResponse> ListTerminologiesAsync(ListTerminologiesRequest request, CancellationToken cancellationToken);
    public virtual ListTextTranslationJobsResponse ListTextTranslationJobs(ListTextTranslationJobsRequest request);
    public virtual Task`1<ListTextTranslationJobsResponse> ListTextTranslationJobsAsync(ListTextTranslationJobsRequest request, CancellationToken cancellationToken);
    public virtual StartTextTranslationJobResponse StartTextTranslationJob(StartTextTranslationJobRequest request);
    public virtual Task`1<StartTextTranslationJobResponse> StartTextTranslationJobAsync(StartTextTranslationJobRequest request, CancellationToken cancellationToken);
    public virtual StopTextTranslationJobResponse StopTextTranslationJob(StopTextTranslationJobRequest request);
    public virtual Task`1<StopTextTranslationJobResponse> StopTextTranslationJobAsync(StopTextTranslationJobRequest request, CancellationToken cancellationToken);
    public virtual TagResourceResponse TagResource(TagResourceRequest request);
    public virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public virtual TranslateDocumentResponse TranslateDocument(TranslateDocumentRequest request);
    public virtual Task`1<TranslateDocumentResponse> TranslateDocumentAsync(TranslateDocumentRequest request, CancellationToken cancellationToken);
    public virtual TranslateTextResponse TranslateText(TranslateTextRequest request);
    public virtual Task`1<TranslateTextResponse> TranslateTextAsync(TranslateTextRequest request, CancellationToken cancellationToken);
    public virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public virtual UpdateParallelDataResponse UpdateParallelData(UpdateParallelDataRequest request);
    public virtual Task`1<UpdateParallelDataResponse> UpdateParallelDataAsync(UpdateParallelDataRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.Translate.AmazonTranslateConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonTranslateEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonTranslateConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.Translate.AmazonTranslateDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonTranslateDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.Translate.AmazonTranslateException : AmazonServiceException {
    public AmazonTranslateException(string message);
    public AmazonTranslateException(string message, Exception innerException);
    public AmazonTranslateException(Exception innerException);
    public AmazonTranslateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonTranslateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected AmazonTranslateException(SerializationInfo info, StreamingContext context);
}
public class Amazon.Translate.AmazonTranslateRequest : AmazonWebServiceRequest {
}
public class Amazon.Translate.Brevity : ConstantClass {
    public static Brevity ON;
    public Brevity(string value);
    private static Brevity();
    public static Brevity FindValue(string value);
    public static Brevity op_Implicit(string value);
}
public class Amazon.Translate.Directionality : ConstantClass {
    public static Directionality MULTI;
    public static Directionality UNI;
    public Directionality(string value);
    private static Directionality();
    public static Directionality FindValue(string value);
    public static Directionality op_Implicit(string value);
}
public class Amazon.Translate.DisplayLanguageCode : ConstantClass {
    public static DisplayLanguageCode De;
    public static DisplayLanguageCode En;
    public static DisplayLanguageCode Es;
    public static DisplayLanguageCode Fr;
    public static DisplayLanguageCode It;
    public static DisplayLanguageCode Ja;
    public static DisplayLanguageCode Ko;
    public static DisplayLanguageCode Pt;
    public static DisplayLanguageCode Zh;
    public static DisplayLanguageCode ZhTW;
    public DisplayLanguageCode(string value);
    private static DisplayLanguageCode();
    public static DisplayLanguageCode FindValue(string value);
    public static DisplayLanguageCode op_Implicit(string value);
}
public class Amazon.Translate.EncryptionKeyType : ConstantClass {
    public static EncryptionKeyType KMS;
    public EncryptionKeyType(string value);
    private static EncryptionKeyType();
    public static EncryptionKeyType FindValue(string value);
    public static EncryptionKeyType op_Implicit(string value);
}
public class Amazon.Translate.Endpoints.TranslateEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.Translate.Formality : ConstantClass {
    public static Formality FORMAL;
    public static Formality INFORMAL;
    public Formality(string value);
    private static Formality();
    public static Formality FindValue(string value);
    public static Formality op_Implicit(string value);
}
public interface Amazon.Translate.IAmazonTranslate {
    public ITranslatePaginatorFactory Paginators { get; }
    public abstract virtual ITranslatePaginatorFactory get_Paginators();
    public abstract virtual CreateParallelDataResponse CreateParallelData(CreateParallelDataRequest request);
    public abstract virtual Task`1<CreateParallelDataResponse> CreateParallelDataAsync(CreateParallelDataRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteParallelDataResponse DeleteParallelData(DeleteParallelDataRequest request);
    public abstract virtual Task`1<DeleteParallelDataResponse> DeleteParallelDataAsync(DeleteParallelDataRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteTerminologyResponse DeleteTerminology(DeleteTerminologyRequest request);
    public abstract virtual Task`1<DeleteTerminologyResponse> DeleteTerminologyAsync(DeleteTerminologyRequest request, CancellationToken cancellationToken);
    public abstract virtual DescribeTextTranslationJobResponse DescribeTextTranslationJob(DescribeTextTranslationJobRequest request);
    public abstract virtual Task`1<DescribeTextTranslationJobResponse> DescribeTextTranslationJobAsync(DescribeTextTranslationJobRequest request, CancellationToken cancellationToken);
    public abstract virtual GetParallelDataResponse GetParallelData(GetParallelDataRequest request);
    public abstract virtual Task`1<GetParallelDataResponse> GetParallelDataAsync(GetParallelDataRequest request, CancellationToken cancellationToken);
    public abstract virtual GetTerminologyResponse GetTerminology(GetTerminologyRequest request);
    public abstract virtual Task`1<GetTerminologyResponse> GetTerminologyAsync(GetTerminologyRequest request, CancellationToken cancellationToken);
    public abstract virtual ImportTerminologyResponse ImportTerminology(ImportTerminologyRequest request);
    public abstract virtual Task`1<ImportTerminologyResponse> ImportTerminologyAsync(ImportTerminologyRequest request, CancellationToken cancellationToken);
    public abstract virtual ListLanguagesResponse ListLanguages(ListLanguagesRequest request);
    public abstract virtual Task`1<ListLanguagesResponse> ListLanguagesAsync(ListLanguagesRequest request, CancellationToken cancellationToken);
    public abstract virtual ListParallelDataResponse ListParallelData(ListParallelDataRequest request);
    public abstract virtual Task`1<ListParallelDataResponse> ListParallelDataAsync(ListParallelDataRequest request, CancellationToken cancellationToken);
    public abstract virtual ListTagsForResourceResponse ListTagsForResource(ListTagsForResourceRequest request);
    public abstract virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual ListTerminologiesResponse ListTerminologies(ListTerminologiesRequest request);
    public abstract virtual Task`1<ListTerminologiesResponse> ListTerminologiesAsync(ListTerminologiesRequest request, CancellationToken cancellationToken);
    public abstract virtual ListTextTranslationJobsResponse ListTextTranslationJobs(ListTextTranslationJobsRequest request);
    public abstract virtual Task`1<ListTextTranslationJobsResponse> ListTextTranslationJobsAsync(ListTextTranslationJobsRequest request, CancellationToken cancellationToken);
    public abstract virtual StartTextTranslationJobResponse StartTextTranslationJob(StartTextTranslationJobRequest request);
    public abstract virtual Task`1<StartTextTranslationJobResponse> StartTextTranslationJobAsync(StartTextTranslationJobRequest request, CancellationToken cancellationToken);
    public abstract virtual StopTextTranslationJobResponse StopTextTranslationJob(StopTextTranslationJobRequest request);
    public abstract virtual Task`1<StopTextTranslationJobResponse> StopTextTranslationJobAsync(StopTextTranslationJobRequest request, CancellationToken cancellationToken);
    public abstract virtual TagResourceResponse TagResource(TagResourceRequest request);
    public abstract virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual TranslateDocumentResponse TranslateDocument(TranslateDocumentRequest request);
    public abstract virtual Task`1<TranslateDocumentResponse> TranslateDocumentAsync(TranslateDocumentRequest request, CancellationToken cancellationToken);
    public abstract virtual TranslateTextResponse TranslateText(TranslateTextRequest request);
    public abstract virtual Task`1<TranslateTextResponse> TranslateTextAsync(TranslateTextRequest request, CancellationToken cancellationToken);
    public abstract virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public abstract virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual UpdateParallelDataResponse UpdateParallelData(UpdateParallelDataRequest request);
    public abstract virtual Task`1<UpdateParallelDataResponse> UpdateParallelDataAsync(UpdateParallelDataRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
}
public class Amazon.Translate.Internal.AmazonTranslateEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.Translate.Internal.AmazonTranslateEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.Translate.Internal.AmazonTranslateMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.Translate.JobStatus : ConstantClass {
    public static JobStatus COMPLETED;
    public static JobStatus COMPLETED_WITH_ERROR;
    public static JobStatus FAILED;
    public static JobStatus IN_PROGRESS;
    public static JobStatus STOP_REQUESTED;
    public static JobStatus STOPPED;
    public static JobStatus SUBMITTED;
    public JobStatus(string value);
    private static JobStatus();
    public static JobStatus FindValue(string value);
    public static JobStatus op_Implicit(string value);
}
public class Amazon.Translate.MergeStrategy : ConstantClass {
    public static MergeStrategy OVERWRITE;
    public MergeStrategy(string value);
    private static MergeStrategy();
    public static MergeStrategy FindValue(string value);
    public static MergeStrategy op_Implicit(string value);
}
public class Amazon.Translate.Model.AppliedTerminology : object {
    private string _name;
    private List`1<Term> _terms;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<Term> Terms { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<Term> get_Terms();
    public void set_Terms(List`1<Term> value);
    internal bool IsSetTerms();
}
public class Amazon.Translate.Model.ConcurrentModificationException : AmazonTranslateException {
    public ConcurrentModificationException(string message);
    public ConcurrentModificationException(string message, Exception innerException);
    public ConcurrentModificationException(Exception innerException);
    public ConcurrentModificationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConcurrentModificationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected ConcurrentModificationException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.Translate.Model.ConflictException : AmazonTranslateException {
    public ConflictException(string message);
    public ConflictException(string message, Exception innerException);
    public ConflictException(Exception innerException);
    public ConflictException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConflictException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected ConflictException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.Translate.Model.CreateParallelDataRequest : AmazonTranslateRequest {
    private string _clientToken;
    private string _description;
    private EncryptionKey _encryptionKey;
    private string _name;
    private ParallelDataConfig _parallelDataConfig;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public EncryptionKey EncryptionKey { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public ParallelDataConfig ParallelDataConfig { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public EncryptionKey get_EncryptionKey();
    public void set_EncryptionKey(EncryptionKey value);
    internal bool IsSetEncryptionKey();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public ParallelDataConfig get_ParallelDataConfig();
    public void set_ParallelDataConfig(ParallelDataConfig value);
    internal bool IsSetParallelDataConfig();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.Translate.Model.CreateParallelDataResponse : AmazonWebServiceResponse {
    private string _name;
    private ParallelDataStatus _status;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public ParallelDataStatus Status { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public ParallelDataStatus get_Status();
    public void set_Status(ParallelDataStatus value);
    internal bool IsSetStatus();
}
public class Amazon.Translate.Model.DeleteParallelDataRequest : AmazonTranslateRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Translate.Model.DeleteParallelDataResponse : AmazonWebServiceResponse {
    private string _name;
    private ParallelDataStatus _status;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public ParallelDataStatus Status { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public ParallelDataStatus get_Status();
    public void set_Status(ParallelDataStatus value);
    internal bool IsSetStatus();
}
public class Amazon.Translate.Model.DeleteTerminologyRequest : AmazonTranslateRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Translate.Model.DeleteTerminologyResponse : AmazonWebServiceResponse {
}
public class Amazon.Translate.Model.DescribeTextTranslationJobRequest : AmazonTranslateRequest {
    private string _jobId;
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
}
public class Amazon.Translate.Model.DescribeTextTranslationJobResponse : AmazonWebServiceResponse {
    private TextTranslationJobProperties _textTranslationJobProperties;
    public TextTranslationJobProperties TextTranslationJobProperties { get; public set; }
    public TextTranslationJobProperties get_TextTranslationJobProperties();
    public void set_TextTranslationJobProperties(TextTranslationJobProperties value);
    internal bool IsSetTextTranslationJobProperties();
}
public class Amazon.Translate.Model.DetectedLanguageLowConfidenceException : AmazonTranslateException {
    private string _detectedLanguageCode;
    [AWSPropertyAttribute]
public string DetectedLanguageCode { get; public set; }
    public DetectedLanguageLowConfidenceException(string message);
    public DetectedLanguageLowConfidenceException(string message, Exception innerException);
    public DetectedLanguageLowConfidenceException(Exception innerException);
    public DetectedLanguageLowConfidenceException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DetectedLanguageLowConfidenceException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected DetectedLanguageLowConfidenceException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public string get_DetectedLanguageCode();
    public void set_DetectedLanguageCode(string value);
    internal bool IsSetDetectedLanguageCode();
}
public class Amazon.Translate.Model.Document : object {
    private MemoryStream _content;
    private string _contentType;
    [AWSPropertyAttribute]
public MemoryStream Content { get; public set; }
    [AWSPropertyAttribute]
public string ContentType { get; public set; }
    public MemoryStream get_Content();
    public void set_Content(MemoryStream value);
    internal bool IsSetContent();
    public string get_ContentType();
    public void set_ContentType(string value);
    internal bool IsSetContentType();
}
public class Amazon.Translate.Model.EncryptionKey : object {
    private string _id;
    private EncryptionKeyType _type;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public EncryptionKeyType Type { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public EncryptionKeyType get_Type();
    public void set_Type(EncryptionKeyType value);
    internal bool IsSetType();
}
public class Amazon.Translate.Model.GetParallelDataRequest : AmazonTranslateRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Translate.Model.GetParallelDataResponse : AmazonWebServiceResponse {
    private ParallelDataDataLocation _auxiliaryDataLocation;
    private ParallelDataDataLocation _dataLocation;
    private ParallelDataDataLocation _latestUpdateAttemptAuxiliaryDataLocation;
    private ParallelDataProperties _parallelDataProperties;
    public ParallelDataDataLocation AuxiliaryDataLocation { get; public set; }
    public ParallelDataDataLocation DataLocation { get; public set; }
    public ParallelDataDataLocation LatestUpdateAttemptAuxiliaryDataLocation { get; public set; }
    public ParallelDataProperties ParallelDataProperties { get; public set; }
    public ParallelDataDataLocation get_AuxiliaryDataLocation();
    public void set_AuxiliaryDataLocation(ParallelDataDataLocation value);
    internal bool IsSetAuxiliaryDataLocation();
    public ParallelDataDataLocation get_DataLocation();
    public void set_DataLocation(ParallelDataDataLocation value);
    internal bool IsSetDataLocation();
    public ParallelDataDataLocation get_LatestUpdateAttemptAuxiliaryDataLocation();
    public void set_LatestUpdateAttemptAuxiliaryDataLocation(ParallelDataDataLocation value);
    internal bool IsSetLatestUpdateAttemptAuxiliaryDataLocation();
    public ParallelDataProperties get_ParallelDataProperties();
    public void set_ParallelDataProperties(ParallelDataProperties value);
    internal bool IsSetParallelDataProperties();
}
public class Amazon.Translate.Model.GetTerminologyRequest : AmazonTranslateRequest {
    private string _name;
    private TerminologyDataFormat _terminologyDataFormat;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public TerminologyDataFormat TerminologyDataFormat { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public TerminologyDataFormat get_TerminologyDataFormat();
    public void set_TerminologyDataFormat(TerminologyDataFormat value);
    internal bool IsSetTerminologyDataFormat();
}
public class Amazon.Translate.Model.GetTerminologyResponse : AmazonWebServiceResponse {
    private TerminologyDataLocation _auxiliaryDataLocation;
    private TerminologyDataLocation _terminologyDataLocation;
    private TerminologyProperties _terminologyProperties;
    public TerminologyDataLocation AuxiliaryDataLocation { get; public set; }
    public TerminologyDataLocation TerminologyDataLocation { get; public set; }
    public TerminologyProperties TerminologyProperties { get; public set; }
    public TerminologyDataLocation get_AuxiliaryDataLocation();
    public void set_AuxiliaryDataLocation(TerminologyDataLocation value);
    internal bool IsSetAuxiliaryDataLocation();
    public TerminologyDataLocation get_TerminologyDataLocation();
    public void set_TerminologyDataLocation(TerminologyDataLocation value);
    internal bool IsSetTerminologyDataLocation();
    public TerminologyProperties get_TerminologyProperties();
    public void set_TerminologyProperties(TerminologyProperties value);
    internal bool IsSetTerminologyProperties();
}
public interface Amazon.Translate.Model.IListLanguagesPaginator {
    public IPaginatedEnumerable`1<ListLanguagesResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListLanguagesResponse> get_Responses();
}
public interface Amazon.Translate.Model.IListParallelDataPaginator {
    public IPaginatedEnumerable`1<ListParallelDataResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListParallelDataResponse> get_Responses();
}
public interface Amazon.Translate.Model.IListTerminologiesPaginator {
    public IPaginatedEnumerable`1<ListTerminologiesResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListTerminologiesResponse> get_Responses();
}
public interface Amazon.Translate.Model.IListTextTranslationJobsPaginator {
    public IPaginatedEnumerable`1<ListTextTranslationJobsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListTextTranslationJobsResponse> get_Responses();
}
public class Amazon.Translate.Model.ImportTerminologyRequest : AmazonTranslateRequest {
    private string _description;
    private EncryptionKey _encryptionKey;
    private MergeStrategy _mergeStrategy;
    private string _name;
    private List`1<Tag> _tags;
    private TerminologyData _terminologyData;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public EncryptionKey EncryptionKey { get; public set; }
    [AWSPropertyAttribute]
public MergeStrategy MergeStrategy { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public TerminologyData TerminologyData { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public EncryptionKey get_EncryptionKey();
    public void set_EncryptionKey(EncryptionKey value);
    internal bool IsSetEncryptionKey();
    public MergeStrategy get_MergeStrategy();
    public void set_MergeStrategy(MergeStrategy value);
    internal bool IsSetMergeStrategy();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public TerminologyData get_TerminologyData();
    public void set_TerminologyData(TerminologyData value);
    internal bool IsSetTerminologyData();
}
public class Amazon.Translate.Model.ImportTerminologyResponse : AmazonWebServiceResponse {
    private TerminologyDataLocation _auxiliaryDataLocation;
    private TerminologyProperties _terminologyProperties;
    public TerminologyDataLocation AuxiliaryDataLocation { get; public set; }
    public TerminologyProperties TerminologyProperties { get; public set; }
    public TerminologyDataLocation get_AuxiliaryDataLocation();
    public void set_AuxiliaryDataLocation(TerminologyDataLocation value);
    internal bool IsSetAuxiliaryDataLocation();
    public TerminologyProperties get_TerminologyProperties();
    public void set_TerminologyProperties(TerminologyProperties value);
    internal bool IsSetTerminologyProperties();
}
public class Amazon.Translate.Model.InputDataConfig : object {
    private string _contentType;
    private string _s3Uri;
    [AWSPropertyAttribute]
public string ContentType { get; public set; }
    [AWSPropertyAttribute]
public string S3Uri { get; public set; }
    public string get_ContentType();
    public void set_ContentType(string value);
    internal bool IsSetContentType();
    public string get_S3Uri();
    public void set_S3Uri(string value);
    internal bool IsSetS3Uri();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.AppliedTerminologyUnmarshaller : object {
    private static AppliedTerminologyUnmarshaller _instance;
    public static AppliedTerminologyUnmarshaller Instance { get; }
    private static AppliedTerminologyUnmarshaller();
    private sealed virtual override AppliedTerminology Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Translate.Model.AppliedTerminology,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AppliedTerminology Unmarshall(JsonUnmarshallerContext context);
    public static AppliedTerminologyUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller : object {
    private static ConcurrentModificationExceptionUnmarshaller _instance;
    public static ConcurrentModificationExceptionUnmarshaller Instance { get; }
    private static ConcurrentModificationExceptionUnmarshaller();
    public sealed virtual ConcurrentModificationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ConcurrentModificationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConcurrentModificationExceptionUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller : object {
    private static ConflictExceptionUnmarshaller _instance;
    public static ConflictExceptionUnmarshaller Instance { get; }
    private static ConflictExceptionUnmarshaller();
    public sealed virtual ConflictException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ConflictException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConflictExceptionUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.CreateParallelDataRequestMarshaller : object {
    private static CreateParallelDataRequestMarshaller _instance;
    public static CreateParallelDataRequestMarshaller Instance { get; }
    private static CreateParallelDataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateParallelDataRequest publicRequest);
    internal static CreateParallelDataRequestMarshaller GetInstance();
    public static CreateParallelDataRequestMarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.CreateParallelDataResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateParallelDataResponseUnmarshaller _instance;
    public static CreateParallelDataResponseUnmarshaller Instance { get; }
    private static CreateParallelDataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateParallelDataResponseUnmarshaller GetInstance();
    public static CreateParallelDataResponseUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.DeleteParallelDataRequestMarshaller : object {
    private static DeleteParallelDataRequestMarshaller _instance;
    public static DeleteParallelDataRequestMarshaller Instance { get; }
    private static DeleteParallelDataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteParallelDataRequest publicRequest);
    internal static DeleteParallelDataRequestMarshaller GetInstance();
    public static DeleteParallelDataRequestMarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.DeleteParallelDataResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteParallelDataResponseUnmarshaller _instance;
    public static DeleteParallelDataResponseUnmarshaller Instance { get; }
    private static DeleteParallelDataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteParallelDataResponseUnmarshaller GetInstance();
    public static DeleteParallelDataResponseUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.DeleteTerminologyRequestMarshaller : object {
    private static DeleteTerminologyRequestMarshaller _instance;
    public static DeleteTerminologyRequestMarshaller Instance { get; }
    private static DeleteTerminologyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTerminologyRequest publicRequest);
    internal static DeleteTerminologyRequestMarshaller GetInstance();
    public static DeleteTerminologyRequestMarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.DeleteTerminologyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteTerminologyResponseUnmarshaller _instance;
    public static DeleteTerminologyResponseUnmarshaller Instance { get; }
    private static DeleteTerminologyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTerminologyResponseUnmarshaller GetInstance();
    public static DeleteTerminologyResponseUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.DescribeTextTranslationJobRequestMarshaller : object {
    private static DescribeTextTranslationJobRequestMarshaller _instance;
    public static DescribeTextTranslationJobRequestMarshaller Instance { get; }
    private static DescribeTextTranslationJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTextTranslationJobRequest publicRequest);
    internal static DescribeTextTranslationJobRequestMarshaller GetInstance();
    public static DescribeTextTranslationJobRequestMarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.DescribeTextTranslationJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeTextTranslationJobResponseUnmarshaller _instance;
    public static DescribeTextTranslationJobResponseUnmarshaller Instance { get; }
    private static DescribeTextTranslationJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTextTranslationJobResponseUnmarshaller GetInstance();
    public static DescribeTextTranslationJobResponseUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.DetectedLanguageLowConfidenceExceptionUnmarshaller : object {
    private static DetectedLanguageLowConfidenceExceptionUnmarshaller _instance;
    public static DetectedLanguageLowConfidenceExceptionUnmarshaller Instance { get; }
    private static DetectedLanguageLowConfidenceExceptionUnmarshaller();
    public sealed virtual DetectedLanguageLowConfidenceException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual DetectedLanguageLowConfidenceException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static DetectedLanguageLowConfidenceExceptionUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.DocumentMarshaller : object {
    public static DocumentMarshaller Instance;
    private static DocumentMarshaller();
    public sealed virtual void Marshall(Document requestObject, JsonMarshallerContext context);
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.EncryptionKeyMarshaller : object {
    public static EncryptionKeyMarshaller Instance;
    private static EncryptionKeyMarshaller();
    public sealed virtual void Marshall(EncryptionKey requestObject, JsonMarshallerContext context);
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.EncryptionKeyUnmarshaller : object {
    private static EncryptionKeyUnmarshaller _instance;
    public static EncryptionKeyUnmarshaller Instance { get; }
    private static EncryptionKeyUnmarshaller();
    private sealed virtual override EncryptionKey Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Translate.Model.EncryptionKey,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EncryptionKey Unmarshall(JsonUnmarshallerContext context);
    public static EncryptionKeyUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.GetParallelDataRequestMarshaller : object {
    private static GetParallelDataRequestMarshaller _instance;
    public static GetParallelDataRequestMarshaller Instance { get; }
    private static GetParallelDataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetParallelDataRequest publicRequest);
    internal static GetParallelDataRequestMarshaller GetInstance();
    public static GetParallelDataRequestMarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.GetParallelDataResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetParallelDataResponseUnmarshaller _instance;
    public static GetParallelDataResponseUnmarshaller Instance { get; }
    private static GetParallelDataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetParallelDataResponseUnmarshaller GetInstance();
    public static GetParallelDataResponseUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.GetTerminologyRequestMarshaller : object {
    private static GetTerminologyRequestMarshaller _instance;
    public static GetTerminologyRequestMarshaller Instance { get; }
    private static GetTerminologyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTerminologyRequest publicRequest);
    internal static GetTerminologyRequestMarshaller GetInstance();
    public static GetTerminologyRequestMarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.GetTerminologyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetTerminologyResponseUnmarshaller _instance;
    public static GetTerminologyResponseUnmarshaller Instance { get; }
    private static GetTerminologyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTerminologyResponseUnmarshaller GetInstance();
    public static GetTerminologyResponseUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.ImportTerminologyRequestMarshaller : object {
    private static ImportTerminologyRequestMarshaller _instance;
    public static ImportTerminologyRequestMarshaller Instance { get; }
    private static ImportTerminologyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ImportTerminologyRequest publicRequest);
    internal static ImportTerminologyRequestMarshaller GetInstance();
    public static ImportTerminologyRequestMarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.ImportTerminologyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ImportTerminologyResponseUnmarshaller _instance;
    public static ImportTerminologyResponseUnmarshaller Instance { get; }
    private static ImportTerminologyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ImportTerminologyResponseUnmarshaller GetInstance();
    public static ImportTerminologyResponseUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.InputDataConfigMarshaller : object {
    public static InputDataConfigMarshaller Instance;
    private static InputDataConfigMarshaller();
    public sealed virtual void Marshall(InputDataConfig requestObject, JsonMarshallerContext context);
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.InputDataConfigUnmarshaller : object {
    private static InputDataConfigUnmarshaller _instance;
    public static InputDataConfigUnmarshaller Instance { get; }
    private static InputDataConfigUnmarshaller();
    private sealed virtual override InputDataConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Translate.Model.InputDataConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InputDataConfig Unmarshall(JsonUnmarshallerContext context);
    public static InputDataConfigUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller : object {
    private static InternalServerExceptionUnmarshaller _instance;
    public static InternalServerExceptionUnmarshaller Instance { get; }
    private static InternalServerExceptionUnmarshaller();
    public sealed virtual InternalServerException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InternalServerException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InternalServerExceptionUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.InvalidFilterExceptionUnmarshaller : object {
    private static InvalidFilterExceptionUnmarshaller _instance;
    public static InvalidFilterExceptionUnmarshaller Instance { get; }
    private static InvalidFilterExceptionUnmarshaller();
    public sealed virtual InvalidFilterException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidFilterException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidFilterExceptionUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.InvalidParameterValueExceptionUnmarshaller : object {
    private static InvalidParameterValueExceptionUnmarshaller _instance;
    public static InvalidParameterValueExceptionUnmarshaller Instance { get; }
    private static InvalidParameterValueExceptionUnmarshaller();
    public sealed virtual InvalidParameterValueException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidParameterValueException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidParameterValueExceptionUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.InvalidRequestExceptionUnmarshaller : object {
    private static InvalidRequestExceptionUnmarshaller _instance;
    public static InvalidRequestExceptionUnmarshaller Instance { get; }
    private static InvalidRequestExceptionUnmarshaller();
    public sealed virtual InvalidRequestException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidRequestException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidRequestExceptionUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.JobDetailsUnmarshaller : object {
    private static JobDetailsUnmarshaller _instance;
    public static JobDetailsUnmarshaller Instance { get; }
    private static JobDetailsUnmarshaller();
    private sealed virtual override JobDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Translate.Model.JobDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JobDetails Unmarshall(JsonUnmarshallerContext context);
    public static JobDetailsUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.LanguageUnmarshaller : object {
    private static LanguageUnmarshaller _instance;
    public static LanguageUnmarshaller Instance { get; }
    private static LanguageUnmarshaller();
    private sealed virtual override Language Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Translate.Model.Language,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Language Unmarshall(JsonUnmarshallerContext context);
    public static LanguageUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller : object {
    private static LimitExceededExceptionUnmarshaller _instance;
    public static LimitExceededExceptionUnmarshaller Instance { get; }
    private static LimitExceededExceptionUnmarshaller();
    public sealed virtual LimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual LimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static LimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.ListLanguagesRequestMarshaller : object {
    private static ListLanguagesRequestMarshaller _instance;
    public static ListLanguagesRequestMarshaller Instance { get; }
    private static ListLanguagesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListLanguagesRequest publicRequest);
    internal static ListLanguagesRequestMarshaller GetInstance();
    public static ListLanguagesRequestMarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.ListLanguagesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListLanguagesResponseUnmarshaller _instance;
    public static ListLanguagesResponseUnmarshaller Instance { get; }
    private static ListLanguagesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListLanguagesResponseUnmarshaller GetInstance();
    public static ListLanguagesResponseUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.ListParallelDataRequestMarshaller : object {
    private static ListParallelDataRequestMarshaller _instance;
    public static ListParallelDataRequestMarshaller Instance { get; }
    private static ListParallelDataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListParallelDataRequest publicRequest);
    internal static ListParallelDataRequestMarshaller GetInstance();
    public static ListParallelDataRequestMarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.ListParallelDataResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListParallelDataResponseUnmarshaller _instance;
    public static ListParallelDataResponseUnmarshaller Instance { get; }
    private static ListParallelDataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListParallelDataResponseUnmarshaller GetInstance();
    public static ListParallelDataResponseUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller : object {
    private static ListTagsForResourceRequestMarshaller _instance;
    public static ListTagsForResourceRequestMarshaller Instance { get; }
    private static ListTagsForResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsForResourceRequest publicRequest);
    internal static ListTagsForResourceRequestMarshaller GetInstance();
    public static ListTagsForResourceRequestMarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTagsForResourceResponseUnmarshaller _instance;
    public static ListTagsForResourceResponseUnmarshaller Instance { get; }
    private static ListTagsForResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsForResourceResponseUnmarshaller GetInstance();
    public static ListTagsForResourceResponseUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.ListTerminologiesRequestMarshaller : object {
    private static ListTerminologiesRequestMarshaller _instance;
    public static ListTerminologiesRequestMarshaller Instance { get; }
    private static ListTerminologiesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTerminologiesRequest publicRequest);
    internal static ListTerminologiesRequestMarshaller GetInstance();
    public static ListTerminologiesRequestMarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.ListTerminologiesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTerminologiesResponseUnmarshaller _instance;
    public static ListTerminologiesResponseUnmarshaller Instance { get; }
    private static ListTerminologiesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTerminologiesResponseUnmarshaller GetInstance();
    public static ListTerminologiesResponseUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.ListTextTranslationJobsRequestMarshaller : object {
    private static ListTextTranslationJobsRequestMarshaller _instance;
    public static ListTextTranslationJobsRequestMarshaller Instance { get; }
    private static ListTextTranslationJobsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTextTranslationJobsRequest publicRequest);
    internal static ListTextTranslationJobsRequestMarshaller GetInstance();
    public static ListTextTranslationJobsRequestMarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.ListTextTranslationJobsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTextTranslationJobsResponseUnmarshaller _instance;
    public static ListTextTranslationJobsResponseUnmarshaller Instance { get; }
    private static ListTextTranslationJobsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTextTranslationJobsResponseUnmarshaller GetInstance();
    public static ListTextTranslationJobsResponseUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.OutputDataConfigMarshaller : object {
    public static OutputDataConfigMarshaller Instance;
    private static OutputDataConfigMarshaller();
    public sealed virtual void Marshall(OutputDataConfig requestObject, JsonMarshallerContext context);
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.OutputDataConfigUnmarshaller : object {
    private static OutputDataConfigUnmarshaller _instance;
    public static OutputDataConfigUnmarshaller Instance { get; }
    private static OutputDataConfigUnmarshaller();
    private sealed virtual override OutputDataConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Translate.Model.OutputDataConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OutputDataConfig Unmarshall(JsonUnmarshallerContext context);
    public static OutputDataConfigUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.ParallelDataConfigMarshaller : object {
    public static ParallelDataConfigMarshaller Instance;
    private static ParallelDataConfigMarshaller();
    public sealed virtual void Marshall(ParallelDataConfig requestObject, JsonMarshallerContext context);
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.ParallelDataConfigUnmarshaller : object {
    private static ParallelDataConfigUnmarshaller _instance;
    public static ParallelDataConfigUnmarshaller Instance { get; }
    private static ParallelDataConfigUnmarshaller();
    private sealed virtual override ParallelDataConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Translate.Model.ParallelDataConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ParallelDataConfig Unmarshall(JsonUnmarshallerContext context);
    public static ParallelDataConfigUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.ParallelDataDataLocationUnmarshaller : object {
    private static ParallelDataDataLocationUnmarshaller _instance;
    public static ParallelDataDataLocationUnmarshaller Instance { get; }
    private static ParallelDataDataLocationUnmarshaller();
    private sealed virtual override ParallelDataDataLocation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Translate.Model.ParallelDataDataLocation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ParallelDataDataLocation Unmarshall(JsonUnmarshallerContext context);
    public static ParallelDataDataLocationUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.ParallelDataPropertiesUnmarshaller : object {
    private static ParallelDataPropertiesUnmarshaller _instance;
    public static ParallelDataPropertiesUnmarshaller Instance { get; }
    private static ParallelDataPropertiesUnmarshaller();
    private sealed virtual override ParallelDataProperties Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Translate.Model.ParallelDataProperties,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ParallelDataProperties Unmarshall(JsonUnmarshallerContext context);
    public static ParallelDataPropertiesUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller : object {
    private static ResourceNotFoundExceptionUnmarshaller _instance;
    public static ResourceNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourceNotFoundExceptionUnmarshaller();
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller : object {
    private static ServiceUnavailableExceptionUnmarshaller _instance;
    public static ServiceUnavailableExceptionUnmarshaller Instance { get; }
    private static ServiceUnavailableExceptionUnmarshaller();
    public sealed virtual ServiceUnavailableException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ServiceUnavailableException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ServiceUnavailableExceptionUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.StartTextTranslationJobRequestMarshaller : object {
    private static StartTextTranslationJobRequestMarshaller _instance;
    public static StartTextTranslationJobRequestMarshaller Instance { get; }
    private static StartTextTranslationJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartTextTranslationJobRequest publicRequest);
    internal static StartTextTranslationJobRequestMarshaller GetInstance();
    public static StartTextTranslationJobRequestMarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.StartTextTranslationJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartTextTranslationJobResponseUnmarshaller _instance;
    public static StartTextTranslationJobResponseUnmarshaller Instance { get; }
    private static StartTextTranslationJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartTextTranslationJobResponseUnmarshaller GetInstance();
    public static StartTextTranslationJobResponseUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.StopTextTranslationJobRequestMarshaller : object {
    private static StopTextTranslationJobRequestMarshaller _instance;
    public static StopTextTranslationJobRequestMarshaller Instance { get; }
    private static StopTextTranslationJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopTextTranslationJobRequest publicRequest);
    internal static StopTextTranslationJobRequestMarshaller GetInstance();
    public static StopTextTranslationJobRequestMarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.StopTextTranslationJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StopTextTranslationJobResponseUnmarshaller _instance;
    public static StopTextTranslationJobResponseUnmarshaller Instance { get; }
    private static StopTextTranslationJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopTextTranslationJobResponseUnmarshaller GetInstance();
    public static StopTextTranslationJobResponseUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.TagMarshaller : object {
    public static TagMarshaller Instance;
    private static TagMarshaller();
    public sealed virtual void Marshall(Tag requestObject, JsonMarshallerContext context);
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller : object {
    private static TagResourceRequestMarshaller _instance;
    public static TagResourceRequestMarshaller Instance { get; }
    private static TagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TagResourceRequest publicRequest);
    internal static TagResourceRequestMarshaller GetInstance();
    public static TagResourceRequestMarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TagResourceResponseUnmarshaller _instance;
    public static TagResourceResponseUnmarshaller Instance { get; }
    private static TagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TagResourceResponseUnmarshaller GetInstance();
    public static TagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.TagUnmarshaller : object {
    private static TagUnmarshaller _instance;
    public static TagUnmarshaller Instance { get; }
    private static TagUnmarshaller();
    private sealed virtual override Tag Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Translate.Model.Tag,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tag Unmarshall(JsonUnmarshallerContext context);
    public static TagUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.TerminologyDataLocationUnmarshaller : object {
    private static TerminologyDataLocationUnmarshaller _instance;
    public static TerminologyDataLocationUnmarshaller Instance { get; }
    private static TerminologyDataLocationUnmarshaller();
    private sealed virtual override TerminologyDataLocation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Translate.Model.TerminologyDataLocation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TerminologyDataLocation Unmarshall(JsonUnmarshallerContext context);
    public static TerminologyDataLocationUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.TerminologyDataMarshaller : object {
    public static TerminologyDataMarshaller Instance;
    private static TerminologyDataMarshaller();
    public sealed virtual void Marshall(TerminologyData requestObject, JsonMarshallerContext context);
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.TerminologyPropertiesUnmarshaller : object {
    private static TerminologyPropertiesUnmarshaller _instance;
    public static TerminologyPropertiesUnmarshaller Instance { get; }
    private static TerminologyPropertiesUnmarshaller();
    private sealed virtual override TerminologyProperties Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Translate.Model.TerminologyProperties,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TerminologyProperties Unmarshall(JsonUnmarshallerContext context);
    public static TerminologyPropertiesUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.TermUnmarshaller : object {
    private static TermUnmarshaller _instance;
    public static TermUnmarshaller Instance { get; }
    private static TermUnmarshaller();
    private sealed virtual override Term Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Translate.Model.Term,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Term Unmarshall(JsonUnmarshallerContext context);
    public static TermUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.TextSizeLimitExceededExceptionUnmarshaller : object {
    private static TextSizeLimitExceededExceptionUnmarshaller _instance;
    public static TextSizeLimitExceededExceptionUnmarshaller Instance { get; }
    private static TextSizeLimitExceededExceptionUnmarshaller();
    public sealed virtual TextSizeLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TextSizeLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TextSizeLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.TextTranslationJobFilterMarshaller : object {
    public static TextTranslationJobFilterMarshaller Instance;
    private static TextTranslationJobFilterMarshaller();
    public sealed virtual void Marshall(TextTranslationJobFilter requestObject, JsonMarshallerContext context);
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.TextTranslationJobPropertiesUnmarshaller : object {
    private static TextTranslationJobPropertiesUnmarshaller _instance;
    public static TextTranslationJobPropertiesUnmarshaller Instance { get; }
    private static TextTranslationJobPropertiesUnmarshaller();
    private sealed virtual override TextTranslationJobProperties Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Translate.Model.TextTranslationJobProperties,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TextTranslationJobProperties Unmarshall(JsonUnmarshallerContext context);
    public static TextTranslationJobPropertiesUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.TooManyRequestsExceptionUnmarshaller : object {
    private static TooManyRequestsExceptionUnmarshaller _instance;
    public static TooManyRequestsExceptionUnmarshaller Instance { get; }
    private static TooManyRequestsExceptionUnmarshaller();
    public sealed virtual TooManyRequestsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TooManyRequestsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyRequestsExceptionUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller : object {
    private static TooManyTagsExceptionUnmarshaller _instance;
    public static TooManyTagsExceptionUnmarshaller Instance { get; }
    private static TooManyTagsExceptionUnmarshaller();
    public sealed virtual TooManyTagsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TooManyTagsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyTagsExceptionUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.TranslatedDocumentUnmarshaller : object {
    private static TranslatedDocumentUnmarshaller _instance;
    public static TranslatedDocumentUnmarshaller Instance { get; }
    private static TranslatedDocumentUnmarshaller();
    private sealed virtual override TranslatedDocument Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Translate.Model.TranslatedDocument,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TranslatedDocument Unmarshall(JsonUnmarshallerContext context);
    public static TranslatedDocumentUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.TranslateDocumentRequestMarshaller : object {
    private static TranslateDocumentRequestMarshaller _instance;
    public static TranslateDocumentRequestMarshaller Instance { get; }
    private static TranslateDocumentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TranslateDocumentRequest publicRequest);
    internal static TranslateDocumentRequestMarshaller GetInstance();
    public static TranslateDocumentRequestMarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.TranslateDocumentResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TranslateDocumentResponseUnmarshaller _instance;
    public static TranslateDocumentResponseUnmarshaller Instance { get; }
    private static TranslateDocumentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TranslateDocumentResponseUnmarshaller GetInstance();
    public static TranslateDocumentResponseUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.TranslateTextRequestMarshaller : object {
    private static TranslateTextRequestMarshaller _instance;
    public static TranslateTextRequestMarshaller Instance { get; }
    private static TranslateTextRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TranslateTextRequest publicRequest);
    internal static TranslateTextRequestMarshaller GetInstance();
    public static TranslateTextRequestMarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.TranslateTextResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TranslateTextResponseUnmarshaller _instance;
    public static TranslateTextResponseUnmarshaller Instance { get; }
    private static TranslateTextResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TranslateTextResponseUnmarshaller GetInstance();
    public static TranslateTextResponseUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.TranslationSettingsMarshaller : object {
    public static TranslationSettingsMarshaller Instance;
    private static TranslationSettingsMarshaller();
    public sealed virtual void Marshall(TranslationSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.TranslationSettingsUnmarshaller : object {
    private static TranslationSettingsUnmarshaller _instance;
    public static TranslationSettingsUnmarshaller Instance { get; }
    private static TranslationSettingsUnmarshaller();
    private sealed virtual override TranslationSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Translate.Model.TranslationSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TranslationSettings Unmarshall(JsonUnmarshallerContext context);
    public static TranslationSettingsUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.UnsupportedDisplayLanguageCodeExceptionUnmarshaller : object {
    private static UnsupportedDisplayLanguageCodeExceptionUnmarshaller _instance;
    public static UnsupportedDisplayLanguageCodeExceptionUnmarshaller Instance { get; }
    private static UnsupportedDisplayLanguageCodeExceptionUnmarshaller();
    public sealed virtual UnsupportedDisplayLanguageCodeException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnsupportedDisplayLanguageCodeException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnsupportedDisplayLanguageCodeExceptionUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.UnsupportedLanguagePairExceptionUnmarshaller : object {
    private static UnsupportedLanguagePairExceptionUnmarshaller _instance;
    public static UnsupportedLanguagePairExceptionUnmarshaller Instance { get; }
    private static UnsupportedLanguagePairExceptionUnmarshaller();
    public sealed virtual UnsupportedLanguagePairException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnsupportedLanguagePairException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnsupportedLanguagePairExceptionUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller : object {
    private static UntagResourceRequestMarshaller _instance;
    public static UntagResourceRequestMarshaller Instance { get; }
    private static UntagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UntagResourceRequest publicRequest);
    internal static UntagResourceRequestMarshaller GetInstance();
    public static UntagResourceRequestMarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UntagResourceResponseUnmarshaller _instance;
    public static UntagResourceResponseUnmarshaller Instance { get; }
    private static UntagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UntagResourceResponseUnmarshaller GetInstance();
    public static UntagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.UpdateParallelDataRequestMarshaller : object {
    private static UpdateParallelDataRequestMarshaller _instance;
    public static UpdateParallelDataRequestMarshaller Instance { get; }
    private static UpdateParallelDataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateParallelDataRequest publicRequest);
    internal static UpdateParallelDataRequestMarshaller GetInstance();
    public static UpdateParallelDataRequestMarshaller get_Instance();
}
public class Amazon.Translate.Model.Internal.MarshallTransformations.UpdateParallelDataResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateParallelDataResponseUnmarshaller _instance;
    public static UpdateParallelDataResponseUnmarshaller Instance { get; }
    private static UpdateParallelDataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateParallelDataResponseUnmarshaller GetInstance();
    public static UpdateParallelDataResponseUnmarshaller get_Instance();
}
public class Amazon.Translate.Model.InternalServerException : AmazonTranslateException {
    public InternalServerException(string message);
    public InternalServerException(string message, Exception innerException);
    public InternalServerException(Exception innerException);
    public InternalServerException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InternalServerException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected InternalServerException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.Translate.Model.InvalidFilterException : AmazonTranslateException {
    public InvalidFilterException(string message);
    public InvalidFilterException(string message, Exception innerException);
    public InvalidFilterException(Exception innerException);
    public InvalidFilterException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidFilterException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected InvalidFilterException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.Translate.Model.InvalidParameterValueException : AmazonTranslateException {
    public InvalidParameterValueException(string message);
    public InvalidParameterValueException(string message, Exception innerException);
    public InvalidParameterValueException(Exception innerException);
    public InvalidParameterValueException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidParameterValueException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected InvalidParameterValueException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.Translate.Model.InvalidRequestException : AmazonTranslateException {
    public InvalidRequestException(string message);
    public InvalidRequestException(string message, Exception innerException);
    public InvalidRequestException(Exception innerException);
    public InvalidRequestException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidRequestException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected InvalidRequestException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public interface Amazon.Translate.Model.ITranslatePaginatorFactory {
    public abstract virtual IListLanguagesPaginator ListLanguages(ListLanguagesRequest request);
    public abstract virtual IListParallelDataPaginator ListParallelData(ListParallelDataRequest request);
    public abstract virtual IListTerminologiesPaginator ListTerminologies(ListTerminologiesRequest request);
    public abstract virtual IListTextTranslationJobsPaginator ListTextTranslationJobs(ListTextTranslationJobsRequest request);
}
public class Amazon.Translate.Model.JobDetails : object {
    private Nullable`1<int> _documentsWithErrorsCount;
    private Nullable`1<int> _inputDocumentsCount;
    private Nullable`1<int> _translatedDocumentsCount;
    public Nullable`1<int> DocumentsWithErrorsCount { get; public set; }
    public Nullable`1<int> InputDocumentsCount { get; public set; }
    public Nullable`1<int> TranslatedDocumentsCount { get; public set; }
    public Nullable`1<int> get_DocumentsWithErrorsCount();
    public void set_DocumentsWithErrorsCount(Nullable`1<int> value);
    internal bool IsSetDocumentsWithErrorsCount();
    public Nullable`1<int> get_InputDocumentsCount();
    public void set_InputDocumentsCount(Nullable`1<int> value);
    internal bool IsSetInputDocumentsCount();
    public Nullable`1<int> get_TranslatedDocumentsCount();
    public void set_TranslatedDocumentsCount(Nullable`1<int> value);
    internal bool IsSetTranslatedDocumentsCount();
}
public class Amazon.Translate.Model.Language : object {
    private string _languageCode;
    private string _languageName;
    [AWSPropertyAttribute]
public string LanguageCode { get; public set; }
    [AWSPropertyAttribute]
public string LanguageName { get; public set; }
    public string get_LanguageCode();
    public void set_LanguageCode(string value);
    internal bool IsSetLanguageCode();
    public string get_LanguageName();
    public void set_LanguageName(string value);
    internal bool IsSetLanguageName();
}
public class Amazon.Translate.Model.LimitExceededException : AmazonTranslateException {
    public LimitExceededException(string message);
    public LimitExceededException(string message, Exception innerException);
    public LimitExceededException(Exception innerException);
    public LimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public LimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected LimitExceededException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
internal class Amazon.Translate.Model.ListLanguagesPaginator : object {
    private IAmazonTranslate _client;
    private ListLanguagesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListLanguagesResponse> Responses { get; }
    internal ListLanguagesPaginator(IAmazonTranslate client, ListLanguagesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListLanguagesResponse> get_Responses();
    [IteratorStateMachineAttribute("Amazon.Translate.Model.ListLanguagesPaginator/<Amazon-Runtime-IPaginator<Amazon-Translate-Model-ListLanguagesResponse>-Paginate>d__6")]
private sealed virtual override IEnumerable`1<ListLanguagesResponse> Amazon.Runtime.IPaginator<Amazon.Translate.Model.ListLanguagesResponse>.Paginate();
}
public class Amazon.Translate.Model.ListLanguagesRequest : AmazonTranslateRequest {
    private DisplayLanguageCode _displayLanguageCode;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public DisplayLanguageCode DisplayLanguageCode { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public DisplayLanguageCode get_DisplayLanguageCode();
    public void set_DisplayLanguageCode(DisplayLanguageCode value);
    internal bool IsSetDisplayLanguageCode();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Translate.Model.ListLanguagesResponse : AmazonWebServiceResponse {
    private DisplayLanguageCode _displayLanguageCode;
    private List`1<Language> _languages;
    private string _nextToken;
    public DisplayLanguageCode DisplayLanguageCode { get; public set; }
    public List`1<Language> Languages { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public DisplayLanguageCode get_DisplayLanguageCode();
    public void set_DisplayLanguageCode(DisplayLanguageCode value);
    internal bool IsSetDisplayLanguageCode();
    public List`1<Language> get_Languages();
    public void set_Languages(List`1<Language> value);
    internal bool IsSetLanguages();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.Translate.Model.ListParallelDataPaginator : object {
    private IAmazonTranslate _client;
    private ListParallelDataRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListParallelDataResponse> Responses { get; }
    internal ListParallelDataPaginator(IAmazonTranslate client, ListParallelDataRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListParallelDataResponse> get_Responses();
    [IteratorStateMachineAttribute("Amazon.Translate.Model.ListParallelDataPaginator/<Amazon-Runtime-IPaginator<Amazon-Translate-Model-ListParallelDataResponse>-Paginate>d__6")]
private sealed virtual override IEnumerable`1<ListParallelDataResponse> Amazon.Runtime.IPaginator<Amazon.Translate.Model.ListParallelDataResponse>.Paginate();
}
public class Amazon.Translate.Model.ListParallelDataRequest : AmazonTranslateRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Translate.Model.ListParallelDataResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ParallelDataProperties> _parallelDataPropertiesList;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<ParallelDataProperties> ParallelDataPropertiesList { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ParallelDataProperties> get_ParallelDataPropertiesList();
    public void set_ParallelDataPropertiesList(List`1<ParallelDataProperties> value);
    internal bool IsSetParallelDataPropertiesList();
}
public class Amazon.Translate.Model.ListTagsForResourceRequest : AmazonTranslateRequest {
    private string _resourceArn;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.Translate.Model.ListTagsForResourceResponse : AmazonWebServiceResponse {
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
internal class Amazon.Translate.Model.ListTerminologiesPaginator : object {
    private IAmazonTranslate _client;
    private ListTerminologiesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListTerminologiesResponse> Responses { get; }
    internal ListTerminologiesPaginator(IAmazonTranslate client, ListTerminologiesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListTerminologiesResponse> get_Responses();
    [IteratorStateMachineAttribute("Amazon.Translate.Model.ListTerminologiesPaginator/<Amazon-Runtime-IPaginator<Amazon-Translate-Model-ListTerminologiesResponse>-Paginate>d__6")]
private sealed virtual override IEnumerable`1<ListTerminologiesResponse> Amazon.Runtime.IPaginator<Amazon.Translate.Model.ListTerminologiesResponse>.Paginate();
}
public class Amazon.Translate.Model.ListTerminologiesRequest : AmazonTranslateRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Translate.Model.ListTerminologiesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TerminologyProperties> _terminologyPropertiesList;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<TerminologyProperties> TerminologyPropertiesList { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TerminologyProperties> get_TerminologyPropertiesList();
    public void set_TerminologyPropertiesList(List`1<TerminologyProperties> value);
    internal bool IsSetTerminologyPropertiesList();
}
internal class Amazon.Translate.Model.ListTextTranslationJobsPaginator : object {
    private IAmazonTranslate _client;
    private ListTextTranslationJobsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListTextTranslationJobsResponse> Responses { get; }
    internal ListTextTranslationJobsPaginator(IAmazonTranslate client, ListTextTranslationJobsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListTextTranslationJobsResponse> get_Responses();
    [IteratorStateMachineAttribute("Amazon.Translate.Model.ListTextTranslationJobsPaginator/<Amazon-Runtime-IPaginator<Amazon-Translate-Model-ListTextTranslationJobsResponse>-Paginate>d__6")]
private sealed virtual override IEnumerable`1<ListTextTranslationJobsResponse> Amazon.Runtime.IPaginator<Amazon.Translate.Model.ListTextTranslationJobsResponse>.Paginate();
}
public class Amazon.Translate.Model.ListTextTranslationJobsRequest : AmazonTranslateRequest {
    private TextTranslationJobFilter _filter;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public TextTranslationJobFilter Filter { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public TextTranslationJobFilter get_Filter();
    public void set_Filter(TextTranslationJobFilter value);
    internal bool IsSetFilter();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.Translate.Model.ListTextTranslationJobsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TextTranslationJobProperties> _textTranslationJobPropertiesList;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<TextTranslationJobProperties> TextTranslationJobPropertiesList { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TextTranslationJobProperties> get_TextTranslationJobPropertiesList();
    public void set_TextTranslationJobPropertiesList(List`1<TextTranslationJobProperties> value);
    internal bool IsSetTextTranslationJobPropertiesList();
}
public class Amazon.Translate.Model.OutputDataConfig : object {
    private EncryptionKey _encryptionKey;
    private string _s3Uri;
    public EncryptionKey EncryptionKey { get; public set; }
    [AWSPropertyAttribute]
public string S3Uri { get; public set; }
    public EncryptionKey get_EncryptionKey();
    public void set_EncryptionKey(EncryptionKey value);
    internal bool IsSetEncryptionKey();
    public string get_S3Uri();
    public void set_S3Uri(string value);
    internal bool IsSetS3Uri();
}
public class Amazon.Translate.Model.ParallelDataConfig : object {
    private ParallelDataFormat _format;
    private string _s3Uri;
    public ParallelDataFormat Format { get; public set; }
    [AWSPropertyAttribute]
public string S3Uri { get; public set; }
    public ParallelDataFormat get_Format();
    public void set_Format(ParallelDataFormat value);
    internal bool IsSetFormat();
    public string get_S3Uri();
    public void set_S3Uri(string value);
    internal bool IsSetS3Uri();
}
public class Amazon.Translate.Model.ParallelDataDataLocation : object {
    private string _location;
    private string _repositoryType;
    [AWSPropertyAttribute]
public string Location { get; public set; }
    [AWSPropertyAttribute]
public string RepositoryType { get; public set; }
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
    public string get_RepositoryType();
    public void set_RepositoryType(string value);
    internal bool IsSetRepositoryType();
}
public class Amazon.Translate.Model.ParallelDataProperties : object {
    private string _arn;
    private Nullable`1<DateTime> _createdAt;
    private string _description;
    private EncryptionKey _encryptionKey;
    private Nullable`1<long> _failedRecordCount;
    private Nullable`1<long> _importedDataSize;
    private Nullable`1<long> _importedRecordCount;
    private Nullable`1<DateTime> _lastUpdatedAt;
    private Nullable`1<DateTime> _latestUpdateAttemptAt;
    private ParallelDataStatus _latestUpdateAttemptStatus;
    private string _message;
    private string _name;
    private ParallelDataConfig _parallelDataConfig;
    private Nullable`1<long> _skippedRecordCount;
    private string _sourceLanguageCode;
    private ParallelDataStatus _status;
    private List`1<string> _targetLanguageCodes;
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    public Nullable`1<DateTime> CreatedAt { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public EncryptionKey EncryptionKey { get; public set; }
    public Nullable`1<long> FailedRecordCount { get; public set; }
    public Nullable`1<long> ImportedDataSize { get; public set; }
    public Nullable`1<long> ImportedRecordCount { get; public set; }
    public Nullable`1<DateTime> LastUpdatedAt { get; public set; }
    public Nullable`1<DateTime> LatestUpdateAttemptAt { get; public set; }
    public ParallelDataStatus LatestUpdateAttemptStatus { get; public set; }
    public string Message { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public ParallelDataConfig ParallelDataConfig { get; public set; }
    public Nullable`1<long> SkippedRecordCount { get; public set; }
    [AWSPropertyAttribute]
public string SourceLanguageCode { get; public set; }
    public ParallelDataStatus Status { get; public set; }
    public List`1<string> TargetLanguageCodes { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public EncryptionKey get_EncryptionKey();
    public void set_EncryptionKey(EncryptionKey value);
    internal bool IsSetEncryptionKey();
    public Nullable`1<long> get_FailedRecordCount();
    public void set_FailedRecordCount(Nullable`1<long> value);
    internal bool IsSetFailedRecordCount();
    public Nullable`1<long> get_ImportedDataSize();
    public void set_ImportedDataSize(Nullable`1<long> value);
    internal bool IsSetImportedDataSize();
    public Nullable`1<long> get_ImportedRecordCount();
    public void set_ImportedRecordCount(Nullable`1<long> value);
    internal bool IsSetImportedRecordCount();
    public Nullable`1<DateTime> get_LastUpdatedAt();
    public void set_LastUpdatedAt(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdatedAt();
    public Nullable`1<DateTime> get_LatestUpdateAttemptAt();
    public void set_LatestUpdateAttemptAt(Nullable`1<DateTime> value);
    internal bool IsSetLatestUpdateAttemptAt();
    public ParallelDataStatus get_LatestUpdateAttemptStatus();
    public void set_LatestUpdateAttemptStatus(ParallelDataStatus value);
    internal bool IsSetLatestUpdateAttemptStatus();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public ParallelDataConfig get_ParallelDataConfig();
    public void set_ParallelDataConfig(ParallelDataConfig value);
    internal bool IsSetParallelDataConfig();
    public Nullable`1<long> get_SkippedRecordCount();
    public void set_SkippedRecordCount(Nullable`1<long> value);
    internal bool IsSetSkippedRecordCount();
    public string get_SourceLanguageCode();
    public void set_SourceLanguageCode(string value);
    internal bool IsSetSourceLanguageCode();
    public ParallelDataStatus get_Status();
    public void set_Status(ParallelDataStatus value);
    internal bool IsSetStatus();
    public List`1<string> get_TargetLanguageCodes();
    public void set_TargetLanguageCodes(List`1<string> value);
    internal bool IsSetTargetLanguageCodes();
}
public class Amazon.Translate.Model.ResourceNotFoundException : AmazonTranslateException {
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected ResourceNotFoundException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.Translate.Model.ServiceUnavailableException : AmazonTranslateException {
    public ServiceUnavailableException(string message);
    public ServiceUnavailableException(string message, Exception innerException);
    public ServiceUnavailableException(Exception innerException);
    public ServiceUnavailableException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ServiceUnavailableException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected ServiceUnavailableException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.Translate.Model.StartTextTranslationJobRequest : AmazonTranslateRequest {
    private string _clientToken;
    private string _dataAccessRoleArn;
    private InputDataConfig _inputDataConfig;
    private string _jobName;
    private OutputDataConfig _outputDataConfig;
    private List`1<string> _parallelDataNames;
    private TranslationSettings _settings;
    private string _sourceLanguageCode;
    private List`1<string> _targetLanguageCodes;
    private List`1<string> _terminologyNames;
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string DataAccessRoleArn { get; public set; }
    [AWSPropertyAttribute]
public InputDataConfig InputDataConfig { get; public set; }
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    [AWSPropertyAttribute]
public OutputDataConfig OutputDataConfig { get; public set; }
    public List`1<string> ParallelDataNames { get; public set; }
    public TranslationSettings Settings { get; public set; }
    [AWSPropertyAttribute]
public string SourceLanguageCode { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TargetLanguageCodes { get; public set; }
    public List`1<string> TerminologyNames { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_DataAccessRoleArn();
    public void set_DataAccessRoleArn(string value);
    internal bool IsSetDataAccessRoleArn();
    public InputDataConfig get_InputDataConfig();
    public void set_InputDataConfig(InputDataConfig value);
    internal bool IsSetInputDataConfig();
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public OutputDataConfig get_OutputDataConfig();
    public void set_OutputDataConfig(OutputDataConfig value);
    internal bool IsSetOutputDataConfig();
    public List`1<string> get_ParallelDataNames();
    public void set_ParallelDataNames(List`1<string> value);
    internal bool IsSetParallelDataNames();
    public TranslationSettings get_Settings();
    public void set_Settings(TranslationSettings value);
    internal bool IsSetSettings();
    public string get_SourceLanguageCode();
    public void set_SourceLanguageCode(string value);
    internal bool IsSetSourceLanguageCode();
    public List`1<string> get_TargetLanguageCodes();
    public void set_TargetLanguageCodes(List`1<string> value);
    internal bool IsSetTargetLanguageCodes();
    public List`1<string> get_TerminologyNames();
    public void set_TerminologyNames(List`1<string> value);
    internal bool IsSetTerminologyNames();
}
public class Amazon.Translate.Model.StartTextTranslationJobResponse : AmazonWebServiceResponse {
    private string _jobId;
    private JobStatus _jobStatus;
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    public JobStatus JobStatus { get; public set; }
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
    public JobStatus get_JobStatus();
    public void set_JobStatus(JobStatus value);
    internal bool IsSetJobStatus();
}
public class Amazon.Translate.Model.StopTextTranslationJobRequest : AmazonTranslateRequest {
    private string _jobId;
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
}
public class Amazon.Translate.Model.StopTextTranslationJobResponse : AmazonWebServiceResponse {
    private string _jobId;
    private JobStatus _jobStatus;
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    public JobStatus JobStatus { get; public set; }
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
    public JobStatus get_JobStatus();
    public void set_JobStatus(JobStatus value);
    internal bool IsSetJobStatus();
}
public class Amazon.Translate.Model.Tag : object {
    private string _key;
    private string _value;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.Translate.Model.TagResourceRequest : AmazonTranslateRequest {
    private string _resourceArn;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.Translate.Model.TagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.Translate.Model.Term : object {
    private string _sourceText;
    private string _targetText;
    [AWSPropertyAttribute]
public string SourceText { get; public set; }
    [AWSPropertyAttribute]
public string TargetText { get; public set; }
    public string get_SourceText();
    public void set_SourceText(string value);
    internal bool IsSetSourceText();
    public string get_TargetText();
    public void set_TargetText(string value);
    internal bool IsSetTargetText();
}
public class Amazon.Translate.Model.TerminologyData : object {
    private Directionality _directionality;
    private MemoryStream _file;
    private TerminologyDataFormat _format;
    public Directionality Directionality { get; public set; }
    [AWSPropertyAttribute]
public MemoryStream File { get; public set; }
    [AWSPropertyAttribute]
public TerminologyDataFormat Format { get; public set; }
    public Directionality get_Directionality();
    public void set_Directionality(Directionality value);
    internal bool IsSetDirectionality();
    public MemoryStream get_File();
    public void set_File(MemoryStream value);
    internal bool IsSetFile();
    public TerminologyDataFormat get_Format();
    public void set_Format(TerminologyDataFormat value);
    internal bool IsSetFormat();
}
public class Amazon.Translate.Model.TerminologyDataLocation : object {
    private string _location;
    private string _repositoryType;
    [AWSPropertyAttribute]
public string Location { get; public set; }
    [AWSPropertyAttribute]
public string RepositoryType { get; public set; }
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
    public string get_RepositoryType();
    public void set_RepositoryType(string value);
    internal bool IsSetRepositoryType();
}
public class Amazon.Translate.Model.TerminologyProperties : object {
    private string _arn;
    private Nullable`1<DateTime> _createdAt;
    private string _description;
    private Directionality _directionality;
    private EncryptionKey _encryptionKey;
    private TerminologyDataFormat _format;
    private Nullable`1<DateTime> _lastUpdatedAt;
    private string _message;
    private string _name;
    private Nullable`1<int> _sizeBytes;
    private Nullable`1<int> _skippedTermCount;
    private string _sourceLanguageCode;
    private List`1<string> _targetLanguageCodes;
    private Nullable`1<int> _termCount;
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    public Nullable`1<DateTime> CreatedAt { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    public Directionality Directionality { get; public set; }
    public EncryptionKey EncryptionKey { get; public set; }
    public TerminologyDataFormat Format { get; public set; }
    public Nullable`1<DateTime> LastUpdatedAt { get; public set; }
    public string Message { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<int> SizeBytes { get; public set; }
    public Nullable`1<int> SkippedTermCount { get; public set; }
    [AWSPropertyAttribute]
public string SourceLanguageCode { get; public set; }
    public List`1<string> TargetLanguageCodes { get; public set; }
    public Nullable`1<int> TermCount { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Directionality get_Directionality();
    public void set_Directionality(Directionality value);
    internal bool IsSetDirectionality();
    public EncryptionKey get_EncryptionKey();
    public void set_EncryptionKey(EncryptionKey value);
    internal bool IsSetEncryptionKey();
    public TerminologyDataFormat get_Format();
    public void set_Format(TerminologyDataFormat value);
    internal bool IsSetFormat();
    public Nullable`1<DateTime> get_LastUpdatedAt();
    public void set_LastUpdatedAt(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdatedAt();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<int> get_SizeBytes();
    public void set_SizeBytes(Nullable`1<int> value);
    internal bool IsSetSizeBytes();
    public Nullable`1<int> get_SkippedTermCount();
    public void set_SkippedTermCount(Nullable`1<int> value);
    internal bool IsSetSkippedTermCount();
    public string get_SourceLanguageCode();
    public void set_SourceLanguageCode(string value);
    internal bool IsSetSourceLanguageCode();
    public List`1<string> get_TargetLanguageCodes();
    public void set_TargetLanguageCodes(List`1<string> value);
    internal bool IsSetTargetLanguageCodes();
    public Nullable`1<int> get_TermCount();
    public void set_TermCount(Nullable`1<int> value);
    internal bool IsSetTermCount();
}
public class Amazon.Translate.Model.TextSizeLimitExceededException : AmazonTranslateException {
    public TextSizeLimitExceededException(string message);
    public TextSizeLimitExceededException(string message, Exception innerException);
    public TextSizeLimitExceededException(Exception innerException);
    public TextSizeLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TextSizeLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected TextSizeLimitExceededException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.Translate.Model.TextTranslationJobFilter : object {
    private string _jobName;
    private JobStatus _jobStatus;
    private Nullable`1<DateTime> _submittedAfterTime;
    private Nullable`1<DateTime> _submittedBeforeTime;
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    public JobStatus JobStatus { get; public set; }
    public Nullable`1<DateTime> SubmittedAfterTime { get; public set; }
    public Nullable`1<DateTime> SubmittedBeforeTime { get; public set; }
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public JobStatus get_JobStatus();
    public void set_JobStatus(JobStatus value);
    internal bool IsSetJobStatus();
    public Nullable`1<DateTime> get_SubmittedAfterTime();
    public void set_SubmittedAfterTime(Nullable`1<DateTime> value);
    internal bool IsSetSubmittedAfterTime();
    public Nullable`1<DateTime> get_SubmittedBeforeTime();
    public void set_SubmittedBeforeTime(Nullable`1<DateTime> value);
    internal bool IsSetSubmittedBeforeTime();
}
public class Amazon.Translate.Model.TextTranslationJobProperties : object {
    private string _dataAccessRoleArn;
    private Nullable`1<DateTime> _endTime;
    private InputDataConfig _inputDataConfig;
    private JobDetails _jobDetails;
    private string _jobId;
    private string _jobName;
    private JobStatus _jobStatus;
    private string _message;
    private OutputDataConfig _outputDataConfig;
    private List`1<string> _parallelDataNames;
    private TranslationSettings _settings;
    private string _sourceLanguageCode;
    private Nullable`1<DateTime> _submittedTime;
    private List`1<string> _targetLanguageCodes;
    private List`1<string> _terminologyNames;
    [AWSPropertyAttribute]
public string DataAccessRoleArn { get; public set; }
    public Nullable`1<DateTime> EndTime { get; public set; }
    public InputDataConfig InputDataConfig { get; public set; }
    public JobDetails JobDetails { get; public set; }
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    public JobStatus JobStatus { get; public set; }
    public string Message { get; public set; }
    public OutputDataConfig OutputDataConfig { get; public set; }
    public List`1<string> ParallelDataNames { get; public set; }
    public TranslationSettings Settings { get; public set; }
    [AWSPropertyAttribute]
public string SourceLanguageCode { get; public set; }
    public Nullable`1<DateTime> SubmittedTime { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TargetLanguageCodes { get; public set; }
    public List`1<string> TerminologyNames { get; public set; }
    public string get_DataAccessRoleArn();
    public void set_DataAccessRoleArn(string value);
    internal bool IsSetDataAccessRoleArn();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public InputDataConfig get_InputDataConfig();
    public void set_InputDataConfig(InputDataConfig value);
    internal bool IsSetInputDataConfig();
    public JobDetails get_JobDetails();
    public void set_JobDetails(JobDetails value);
    internal bool IsSetJobDetails();
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public JobStatus get_JobStatus();
    public void set_JobStatus(JobStatus value);
    internal bool IsSetJobStatus();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public OutputDataConfig get_OutputDataConfig();
    public void set_OutputDataConfig(OutputDataConfig value);
    internal bool IsSetOutputDataConfig();
    public List`1<string> get_ParallelDataNames();
    public void set_ParallelDataNames(List`1<string> value);
    internal bool IsSetParallelDataNames();
    public TranslationSettings get_Settings();
    public void set_Settings(TranslationSettings value);
    internal bool IsSetSettings();
    public string get_SourceLanguageCode();
    public void set_SourceLanguageCode(string value);
    internal bool IsSetSourceLanguageCode();
    public Nullable`1<DateTime> get_SubmittedTime();
    public void set_SubmittedTime(Nullable`1<DateTime> value);
    internal bool IsSetSubmittedTime();
    public List`1<string> get_TargetLanguageCodes();
    public void set_TargetLanguageCodes(List`1<string> value);
    internal bool IsSetTargetLanguageCodes();
    public List`1<string> get_TerminologyNames();
    public void set_TerminologyNames(List`1<string> value);
    internal bool IsSetTerminologyNames();
}
public class Amazon.Translate.Model.TooManyRequestsException : AmazonTranslateException {
    public TooManyRequestsException(string message);
    public TooManyRequestsException(string message, Exception innerException);
    public TooManyRequestsException(Exception innerException);
    public TooManyRequestsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyRequestsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected TooManyRequestsException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.Translate.Model.TooManyTagsException : AmazonTranslateException {
    private string _resourceArn;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public TooManyTagsException(string message);
    public TooManyTagsException(string message, Exception innerException);
    public TooManyTagsException(Exception innerException);
    public TooManyTagsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyTagsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected TooManyTagsException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.Translate.Model.TranslatedDocument : object {
    private MemoryStream _content;
    [AWSPropertyAttribute]
public MemoryStream Content { get; public set; }
    public MemoryStream get_Content();
    public void set_Content(MemoryStream value);
    internal bool IsSetContent();
}
public class Amazon.Translate.Model.TranslateDocumentRequest : AmazonTranslateRequest {
    private Document _document;
    private TranslationSettings _settings;
    private string _sourceLanguageCode;
    private string _targetLanguageCode;
    private List`1<string> _terminologyNames;
    [AWSPropertyAttribute]
public Document Document { get; public set; }
    public TranslationSettings Settings { get; public set; }
    [AWSPropertyAttribute]
public string SourceLanguageCode { get; public set; }
    [AWSPropertyAttribute]
public string TargetLanguageCode { get; public set; }
    public List`1<string> TerminologyNames { get; public set; }
    public Document get_Document();
    public void set_Document(Document value);
    internal bool IsSetDocument();
    public TranslationSettings get_Settings();
    public void set_Settings(TranslationSettings value);
    internal bool IsSetSettings();
    public string get_SourceLanguageCode();
    public void set_SourceLanguageCode(string value);
    internal bool IsSetSourceLanguageCode();
    public string get_TargetLanguageCode();
    public void set_TargetLanguageCode(string value);
    internal bool IsSetTargetLanguageCode();
    public List`1<string> get_TerminologyNames();
    public void set_TerminologyNames(List`1<string> value);
    internal bool IsSetTerminologyNames();
}
public class Amazon.Translate.Model.TranslateDocumentResponse : AmazonWebServiceResponse {
    private TranslationSettings _appliedSettings;
    private List`1<AppliedTerminology> _appliedTerminologies;
    private string _sourceLanguageCode;
    private string _targetLanguageCode;
    private TranslatedDocument _translatedDocument;
    public TranslationSettings AppliedSettings { get; public set; }
    public List`1<AppliedTerminology> AppliedTerminologies { get; public set; }
    [AWSPropertyAttribute]
public string SourceLanguageCode { get; public set; }
    [AWSPropertyAttribute]
public string TargetLanguageCode { get; public set; }
    [AWSPropertyAttribute]
public TranslatedDocument TranslatedDocument { get; public set; }
    public TranslationSettings get_AppliedSettings();
    public void set_AppliedSettings(TranslationSettings value);
    internal bool IsSetAppliedSettings();
    public List`1<AppliedTerminology> get_AppliedTerminologies();
    public void set_AppliedTerminologies(List`1<AppliedTerminology> value);
    internal bool IsSetAppliedTerminologies();
    public string get_SourceLanguageCode();
    public void set_SourceLanguageCode(string value);
    internal bool IsSetSourceLanguageCode();
    public string get_TargetLanguageCode();
    public void set_TargetLanguageCode(string value);
    internal bool IsSetTargetLanguageCode();
    public TranslatedDocument get_TranslatedDocument();
    public void set_TranslatedDocument(TranslatedDocument value);
    internal bool IsSetTranslatedDocument();
}
public class Amazon.Translate.Model.TranslatePaginatorFactory : object {
    private IAmazonTranslate client;
    internal TranslatePaginatorFactory(IAmazonTranslate client);
    public sealed virtual IListLanguagesPaginator ListLanguages(ListLanguagesRequest request);
    public sealed virtual IListParallelDataPaginator ListParallelData(ListParallelDataRequest request);
    public sealed virtual IListTerminologiesPaginator ListTerminologies(ListTerminologiesRequest request);
    public sealed virtual IListTextTranslationJobsPaginator ListTextTranslationJobs(ListTextTranslationJobsRequest request);
}
public class Amazon.Translate.Model.TranslateTextRequest : AmazonTranslateRequest {
    private TranslationSettings _settings;
    private string _sourceLanguageCode;
    private string _targetLanguageCode;
    private List`1<string> _terminologyNames;
    private string _text;
    public TranslationSettings Settings { get; public set; }
    [AWSPropertyAttribute]
public string SourceLanguageCode { get; public set; }
    [AWSPropertyAttribute]
public string TargetLanguageCode { get; public set; }
    public List`1<string> TerminologyNames { get; public set; }
    [AWSPropertyAttribute]
public string Text { get; public set; }
    public TranslationSettings get_Settings();
    public void set_Settings(TranslationSettings value);
    internal bool IsSetSettings();
    public string get_SourceLanguageCode();
    public void set_SourceLanguageCode(string value);
    internal bool IsSetSourceLanguageCode();
    public string get_TargetLanguageCode();
    public void set_TargetLanguageCode(string value);
    internal bool IsSetTargetLanguageCode();
    public List`1<string> get_TerminologyNames();
    public void set_TerminologyNames(List`1<string> value);
    internal bool IsSetTerminologyNames();
    public string get_Text();
    public void set_Text(string value);
    internal bool IsSetText();
}
public class Amazon.Translate.Model.TranslateTextResponse : AmazonWebServiceResponse {
    private TranslationSettings _appliedSettings;
    private List`1<AppliedTerminology> _appliedTerminologies;
    private string _sourceLanguageCode;
    private string _targetLanguageCode;
    private string _translatedText;
    public TranslationSettings AppliedSettings { get; public set; }
    public List`1<AppliedTerminology> AppliedTerminologies { get; public set; }
    [AWSPropertyAttribute]
public string SourceLanguageCode { get; public set; }
    [AWSPropertyAttribute]
public string TargetLanguageCode { get; public set; }
    [AWSPropertyAttribute]
public string TranslatedText { get; public set; }
    public TranslationSettings get_AppliedSettings();
    public void set_AppliedSettings(TranslationSettings value);
    internal bool IsSetAppliedSettings();
    public List`1<AppliedTerminology> get_AppliedTerminologies();
    public void set_AppliedTerminologies(List`1<AppliedTerminology> value);
    internal bool IsSetAppliedTerminologies();
    public string get_SourceLanguageCode();
    public void set_SourceLanguageCode(string value);
    internal bool IsSetSourceLanguageCode();
    public string get_TargetLanguageCode();
    public void set_TargetLanguageCode(string value);
    internal bool IsSetTargetLanguageCode();
    public string get_TranslatedText();
    public void set_TranslatedText(string value);
    internal bool IsSetTranslatedText();
}
public class Amazon.Translate.Model.TranslationSettings : object {
    private Brevity _brevity;
    private Formality _formality;
    private Profanity _profanity;
    public Brevity Brevity { get; public set; }
    public Formality Formality { get; public set; }
    public Profanity Profanity { get; public set; }
    public Brevity get_Brevity();
    public void set_Brevity(Brevity value);
    internal bool IsSetBrevity();
    public Formality get_Formality();
    public void set_Formality(Formality value);
    internal bool IsSetFormality();
    public Profanity get_Profanity();
    public void set_Profanity(Profanity value);
    internal bool IsSetProfanity();
}
public class Amazon.Translate.Model.UnsupportedDisplayLanguageCodeException : AmazonTranslateException {
    private string _displayLanguageCode;
    [AWSPropertyAttribute]
public string DisplayLanguageCode { get; public set; }
    public UnsupportedDisplayLanguageCodeException(string message);
    public UnsupportedDisplayLanguageCodeException(string message, Exception innerException);
    public UnsupportedDisplayLanguageCodeException(Exception innerException);
    public UnsupportedDisplayLanguageCodeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnsupportedDisplayLanguageCodeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected UnsupportedDisplayLanguageCodeException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public string get_DisplayLanguageCode();
    public void set_DisplayLanguageCode(string value);
    internal bool IsSetDisplayLanguageCode();
}
public class Amazon.Translate.Model.UnsupportedLanguagePairException : AmazonTranslateException {
    private string _sourceLanguageCode;
    private string _targetLanguageCode;
    [AWSPropertyAttribute]
public string SourceLanguageCode { get; public set; }
    [AWSPropertyAttribute]
public string TargetLanguageCode { get; public set; }
    public UnsupportedLanguagePairException(string message);
    public UnsupportedLanguagePairException(string message, Exception innerException);
    public UnsupportedLanguagePairException(Exception innerException);
    public UnsupportedLanguagePairException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnsupportedLanguagePairException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected UnsupportedLanguagePairException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public string get_SourceLanguageCode();
    public void set_SourceLanguageCode(string value);
    internal bool IsSetSourceLanguageCode();
    public string get_TargetLanguageCode();
    public void set_TargetLanguageCode(string value);
    internal bool IsSetTargetLanguageCode();
}
public class Amazon.Translate.Model.UntagResourceRequest : AmazonTranslateRequest {
    private string _resourceArn;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.Translate.Model.UntagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.Translate.Model.UpdateParallelDataRequest : AmazonTranslateRequest {
    private string _clientToken;
    private string _description;
    private string _name;
    private ParallelDataConfig _parallelDataConfig;
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public ParallelDataConfig ParallelDataConfig { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public ParallelDataConfig get_ParallelDataConfig();
    public void set_ParallelDataConfig(ParallelDataConfig value);
    internal bool IsSetParallelDataConfig();
}
public class Amazon.Translate.Model.UpdateParallelDataResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _latestUpdateAttemptAt;
    private ParallelDataStatus _latestUpdateAttemptStatus;
    private string _name;
    private ParallelDataStatus _status;
    public Nullable`1<DateTime> LatestUpdateAttemptAt { get; public set; }
    public ParallelDataStatus LatestUpdateAttemptStatus { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public ParallelDataStatus Status { get; public set; }
    public Nullable`1<DateTime> get_LatestUpdateAttemptAt();
    public void set_LatestUpdateAttemptAt(Nullable`1<DateTime> value);
    internal bool IsSetLatestUpdateAttemptAt();
    public ParallelDataStatus get_LatestUpdateAttemptStatus();
    public void set_LatestUpdateAttemptStatus(ParallelDataStatus value);
    internal bool IsSetLatestUpdateAttemptStatus();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public ParallelDataStatus get_Status();
    public void set_Status(ParallelDataStatus value);
    internal bool IsSetStatus();
}
public class Amazon.Translate.ParallelDataFormat : ConstantClass {
    public static ParallelDataFormat CSV;
    public static ParallelDataFormat TMX;
    public static ParallelDataFormat TSV;
    public ParallelDataFormat(string value);
    private static ParallelDataFormat();
    public static ParallelDataFormat FindValue(string value);
    public static ParallelDataFormat op_Implicit(string value);
}
public class Amazon.Translate.ParallelDataStatus : ConstantClass {
    public static ParallelDataStatus ACTIVE;
    public static ParallelDataStatus CREATING;
    public static ParallelDataStatus DELETING;
    public static ParallelDataStatus FAILED;
    public static ParallelDataStatus UPDATING;
    public ParallelDataStatus(string value);
    private static ParallelDataStatus();
    public static ParallelDataStatus FindValue(string value);
    public static ParallelDataStatus op_Implicit(string value);
}
public class Amazon.Translate.Profanity : ConstantClass {
    public static Profanity MASK;
    public Profanity(string value);
    private static Profanity();
    public static Profanity FindValue(string value);
    public static Profanity op_Implicit(string value);
}
public class Amazon.Translate.TerminologyDataFormat : ConstantClass {
    public static TerminologyDataFormat CSV;
    public static TerminologyDataFormat TMX;
    public static TerminologyDataFormat TSV;
    public TerminologyDataFormat(string value);
    private static TerminologyDataFormat();
    public static TerminologyDataFormat FindValue(string value);
    public static TerminologyDataFormat op_Implicit(string value);
}
