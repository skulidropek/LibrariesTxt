public class Amazon.XRay.AmazonXRayClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private IXRayPaginatorFactory _paginators;
    public IXRayPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonXRayClient(RegionEndpoint region);
    public AmazonXRayClient(AmazonXRayConfig config);
    public AmazonXRayClient(AWSCredentials credentials);
    public AmazonXRayClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonXRayClient(AWSCredentials credentials, AmazonXRayConfig clientConfig);
    public AmazonXRayClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonXRayClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonXRayClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonXRayConfig clientConfig);
    public AmazonXRayClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonXRayClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonXRayClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonXRayConfig clientConfig);
    private static AmazonXRayClient();
    public sealed virtual IXRayPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    public virtual BatchGetTracesResponse BatchGetTraces(BatchGetTracesRequest request);
    public virtual Task`1<BatchGetTracesResponse> BatchGetTracesAsync(BatchGetTracesRequest request, CancellationToken cancellationToken);
    public virtual CreateGroupResponse CreateGroup(CreateGroupRequest request);
    public virtual Task`1<CreateGroupResponse> CreateGroupAsync(CreateGroupRequest request, CancellationToken cancellationToken);
    public virtual CreateSamplingRuleResponse CreateSamplingRule(CreateSamplingRuleRequest request);
    public virtual Task`1<CreateSamplingRuleResponse> CreateSamplingRuleAsync(CreateSamplingRuleRequest request, CancellationToken cancellationToken);
    public virtual DeleteGroupResponse DeleteGroup(DeleteGroupRequest request);
    public virtual Task`1<DeleteGroupResponse> DeleteGroupAsync(DeleteGroupRequest request, CancellationToken cancellationToken);
    public virtual DeleteResourcePolicyResponse DeleteResourcePolicy(DeleteResourcePolicyRequest request);
    public virtual Task`1<DeleteResourcePolicyResponse> DeleteResourcePolicyAsync(DeleteResourcePolicyRequest request, CancellationToken cancellationToken);
    public virtual DeleteSamplingRuleResponse DeleteSamplingRule(DeleteSamplingRuleRequest request);
    public virtual Task`1<DeleteSamplingRuleResponse> DeleteSamplingRuleAsync(DeleteSamplingRuleRequest request, CancellationToken cancellationToken);
    public virtual GetEncryptionConfigResponse GetEncryptionConfig(GetEncryptionConfigRequest request);
    public virtual Task`1<GetEncryptionConfigResponse> GetEncryptionConfigAsync(GetEncryptionConfigRequest request, CancellationToken cancellationToken);
    public virtual GetGroupResponse GetGroup(GetGroupRequest request);
    public virtual Task`1<GetGroupResponse> GetGroupAsync(GetGroupRequest request, CancellationToken cancellationToken);
    public virtual GetGroupsResponse GetGroups(GetGroupsRequest request);
    public virtual Task`1<GetGroupsResponse> GetGroupsAsync(GetGroupsRequest request, CancellationToken cancellationToken);
    public virtual GetInsightResponse GetInsight(GetInsightRequest request);
    public virtual Task`1<GetInsightResponse> GetInsightAsync(GetInsightRequest request, CancellationToken cancellationToken);
    public virtual GetInsightEventsResponse GetInsightEvents(GetInsightEventsRequest request);
    public virtual Task`1<GetInsightEventsResponse> GetInsightEventsAsync(GetInsightEventsRequest request, CancellationToken cancellationToken);
    public virtual GetInsightImpactGraphResponse GetInsightImpactGraph(GetInsightImpactGraphRequest request);
    public virtual Task`1<GetInsightImpactGraphResponse> GetInsightImpactGraphAsync(GetInsightImpactGraphRequest request, CancellationToken cancellationToken);
    public virtual GetInsightSummariesResponse GetInsightSummaries(GetInsightSummariesRequest request);
    public virtual Task`1<GetInsightSummariesResponse> GetInsightSummariesAsync(GetInsightSummariesRequest request, CancellationToken cancellationToken);
    public virtual GetSamplingRulesResponse GetSamplingRules(GetSamplingRulesRequest request);
    public virtual Task`1<GetSamplingRulesResponse> GetSamplingRulesAsync(GetSamplingRulesRequest request, CancellationToken cancellationToken);
    public virtual GetSamplingStatisticSummariesResponse GetSamplingStatisticSummaries(GetSamplingStatisticSummariesRequest request);
    public virtual Task`1<GetSamplingStatisticSummariesResponse> GetSamplingStatisticSummariesAsync(GetSamplingStatisticSummariesRequest request, CancellationToken cancellationToken);
    public virtual GetSamplingTargetsResponse GetSamplingTargets(GetSamplingTargetsRequest request);
    public virtual Task`1<GetSamplingTargetsResponse> GetSamplingTargetsAsync(GetSamplingTargetsRequest request, CancellationToken cancellationToken);
    public virtual GetServiceGraphResponse GetServiceGraph(GetServiceGraphRequest request);
    public virtual Task`1<GetServiceGraphResponse> GetServiceGraphAsync(GetServiceGraphRequest request, CancellationToken cancellationToken);
    public virtual GetTimeSeriesServiceStatisticsResponse GetTimeSeriesServiceStatistics(GetTimeSeriesServiceStatisticsRequest request);
    public virtual Task`1<GetTimeSeriesServiceStatisticsResponse> GetTimeSeriesServiceStatisticsAsync(GetTimeSeriesServiceStatisticsRequest request, CancellationToken cancellationToken);
    public virtual GetTraceGraphResponse GetTraceGraph(GetTraceGraphRequest request);
    public virtual Task`1<GetTraceGraphResponse> GetTraceGraphAsync(GetTraceGraphRequest request, CancellationToken cancellationToken);
    public virtual GetTraceSummariesResponse GetTraceSummaries(GetTraceSummariesRequest request);
    public virtual Task`1<GetTraceSummariesResponse> GetTraceSummariesAsync(GetTraceSummariesRequest request, CancellationToken cancellationToken);
    public virtual ListResourcePoliciesResponse ListResourcePolicies(ListResourcePoliciesRequest request);
    public virtual Task`1<ListResourcePoliciesResponse> ListResourcePoliciesAsync(ListResourcePoliciesRequest request, CancellationToken cancellationToken);
    public virtual ListTagsForResourceResponse ListTagsForResource(ListTagsForResourceRequest request);
    public virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    public virtual PutEncryptionConfigResponse PutEncryptionConfig(PutEncryptionConfigRequest request);
    public virtual Task`1<PutEncryptionConfigResponse> PutEncryptionConfigAsync(PutEncryptionConfigRequest request, CancellationToken cancellationToken);
    public virtual PutResourcePolicyResponse PutResourcePolicy(PutResourcePolicyRequest request);
    public virtual Task`1<PutResourcePolicyResponse> PutResourcePolicyAsync(PutResourcePolicyRequest request, CancellationToken cancellationToken);
    public virtual PutTelemetryRecordsResponse PutTelemetryRecords(PutTelemetryRecordsRequest request);
    public virtual Task`1<PutTelemetryRecordsResponse> PutTelemetryRecordsAsync(PutTelemetryRecordsRequest request, CancellationToken cancellationToken);
    public virtual PutTraceSegmentsResponse PutTraceSegments(PutTraceSegmentsRequest request);
    public virtual Task`1<PutTraceSegmentsResponse> PutTraceSegmentsAsync(PutTraceSegmentsRequest request, CancellationToken cancellationToken);
    public virtual TagResourceResponse TagResource(TagResourceRequest request);
    public virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public virtual UpdateGroupResponse UpdateGroup(UpdateGroupRequest request);
    public virtual Task`1<UpdateGroupResponse> UpdateGroupAsync(UpdateGroupRequest request, CancellationToken cancellationToken);
    public virtual UpdateSamplingRuleResponse UpdateSamplingRule(UpdateSamplingRuleRequest request);
    public virtual Task`1<UpdateSamplingRuleResponse> UpdateSamplingRuleAsync(UpdateSamplingRuleRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.XRay.AmazonXRayConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonXRayEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonXRayConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.XRay.AmazonXRayDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonXRayDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.XRay.AmazonXRayException : AmazonServiceException {
    public AmazonXRayException(string message);
    public AmazonXRayException(string message, Exception innerException);
    public AmazonXRayException(Exception innerException);
    public AmazonXRayException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonXRayException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected AmazonXRayException(SerializationInfo info, StreamingContext context);
}
public class Amazon.XRay.AmazonXRayRequest : AmazonWebServiceRequest {
}
public class Amazon.XRay.EncryptionStatus : ConstantClass {
    public static EncryptionStatus ACTIVE;
    public static EncryptionStatus UPDATING;
    public EncryptionStatus(string value);
    private static EncryptionStatus();
    public static EncryptionStatus FindValue(string value);
    public static EncryptionStatus op_Implicit(string value);
}
public class Amazon.XRay.EncryptionType : ConstantClass {
    public static EncryptionType KMS;
    public static EncryptionType NONE;
    public EncryptionType(string value);
    private static EncryptionType();
    public static EncryptionType FindValue(string value);
    public static EncryptionType op_Implicit(string value);
}
public class Amazon.XRay.Endpoints.XRayEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public interface Amazon.XRay.IAmazonXRay {
    public IXRayPaginatorFactory Paginators { get; }
    public abstract virtual IXRayPaginatorFactory get_Paginators();
    public abstract virtual BatchGetTracesResponse BatchGetTraces(BatchGetTracesRequest request);
    public abstract virtual Task`1<BatchGetTracesResponse> BatchGetTracesAsync(BatchGetTracesRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateGroupResponse CreateGroup(CreateGroupRequest request);
    public abstract virtual Task`1<CreateGroupResponse> CreateGroupAsync(CreateGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateSamplingRuleResponse CreateSamplingRule(CreateSamplingRuleRequest request);
    public abstract virtual Task`1<CreateSamplingRuleResponse> CreateSamplingRuleAsync(CreateSamplingRuleRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteGroupResponse DeleteGroup(DeleteGroupRequest request);
    public abstract virtual Task`1<DeleteGroupResponse> DeleteGroupAsync(DeleteGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteResourcePolicyResponse DeleteResourcePolicy(DeleteResourcePolicyRequest request);
    public abstract virtual Task`1<DeleteResourcePolicyResponse> DeleteResourcePolicyAsync(DeleteResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteSamplingRuleResponse DeleteSamplingRule(DeleteSamplingRuleRequest request);
    public abstract virtual Task`1<DeleteSamplingRuleResponse> DeleteSamplingRuleAsync(DeleteSamplingRuleRequest request, CancellationToken cancellationToken);
    public abstract virtual GetEncryptionConfigResponse GetEncryptionConfig(GetEncryptionConfigRequest request);
    public abstract virtual Task`1<GetEncryptionConfigResponse> GetEncryptionConfigAsync(GetEncryptionConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual GetGroupResponse GetGroup(GetGroupRequest request);
    public abstract virtual Task`1<GetGroupResponse> GetGroupAsync(GetGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual GetGroupsResponse GetGroups(GetGroupsRequest request);
    public abstract virtual Task`1<GetGroupsResponse> GetGroupsAsync(GetGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual GetInsightResponse GetInsight(GetInsightRequest request);
    public abstract virtual Task`1<GetInsightResponse> GetInsightAsync(GetInsightRequest request, CancellationToken cancellationToken);
    public abstract virtual GetInsightEventsResponse GetInsightEvents(GetInsightEventsRequest request);
    public abstract virtual Task`1<GetInsightEventsResponse> GetInsightEventsAsync(GetInsightEventsRequest request, CancellationToken cancellationToken);
    public abstract virtual GetInsightImpactGraphResponse GetInsightImpactGraph(GetInsightImpactGraphRequest request);
    public abstract virtual Task`1<GetInsightImpactGraphResponse> GetInsightImpactGraphAsync(GetInsightImpactGraphRequest request, CancellationToken cancellationToken);
    public abstract virtual GetInsightSummariesResponse GetInsightSummaries(GetInsightSummariesRequest request);
    public abstract virtual Task`1<GetInsightSummariesResponse> GetInsightSummariesAsync(GetInsightSummariesRequest request, CancellationToken cancellationToken);
    public abstract virtual GetSamplingRulesResponse GetSamplingRules(GetSamplingRulesRequest request);
    public abstract virtual Task`1<GetSamplingRulesResponse> GetSamplingRulesAsync(GetSamplingRulesRequest request, CancellationToken cancellationToken);
    public abstract virtual GetSamplingStatisticSummariesResponse GetSamplingStatisticSummaries(GetSamplingStatisticSummariesRequest request);
    public abstract virtual Task`1<GetSamplingStatisticSummariesResponse> GetSamplingStatisticSummariesAsync(GetSamplingStatisticSummariesRequest request, CancellationToken cancellationToken);
    public abstract virtual GetSamplingTargetsResponse GetSamplingTargets(GetSamplingTargetsRequest request);
    public abstract virtual Task`1<GetSamplingTargetsResponse> GetSamplingTargetsAsync(GetSamplingTargetsRequest request, CancellationToken cancellationToken);
    public abstract virtual GetServiceGraphResponse GetServiceGraph(GetServiceGraphRequest request);
    public abstract virtual Task`1<GetServiceGraphResponse> GetServiceGraphAsync(GetServiceGraphRequest request, CancellationToken cancellationToken);
    public abstract virtual GetTimeSeriesServiceStatisticsResponse GetTimeSeriesServiceStatistics(GetTimeSeriesServiceStatisticsRequest request);
    public abstract virtual Task`1<GetTimeSeriesServiceStatisticsResponse> GetTimeSeriesServiceStatisticsAsync(GetTimeSeriesServiceStatisticsRequest request, CancellationToken cancellationToken);
    public abstract virtual GetTraceGraphResponse GetTraceGraph(GetTraceGraphRequest request);
    public abstract virtual Task`1<GetTraceGraphResponse> GetTraceGraphAsync(GetTraceGraphRequest request, CancellationToken cancellationToken);
    public abstract virtual GetTraceSummariesResponse GetTraceSummaries(GetTraceSummariesRequest request);
    public abstract virtual Task`1<GetTraceSummariesResponse> GetTraceSummariesAsync(GetTraceSummariesRequest request, CancellationToken cancellationToken);
    public abstract virtual ListResourcePoliciesResponse ListResourcePolicies(ListResourcePoliciesRequest request);
    public abstract virtual Task`1<ListResourcePoliciesResponse> ListResourcePoliciesAsync(ListResourcePoliciesRequest request, CancellationToken cancellationToken);
    public abstract virtual ListTagsForResourceResponse ListTagsForResource(ListTagsForResourceRequest request);
    public abstract virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual PutEncryptionConfigResponse PutEncryptionConfig(PutEncryptionConfigRequest request);
    public abstract virtual Task`1<PutEncryptionConfigResponse> PutEncryptionConfigAsync(PutEncryptionConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual PutResourcePolicyResponse PutResourcePolicy(PutResourcePolicyRequest request);
    public abstract virtual Task`1<PutResourcePolicyResponse> PutResourcePolicyAsync(PutResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual PutTelemetryRecordsResponse PutTelemetryRecords(PutTelemetryRecordsRequest request);
    public abstract virtual Task`1<PutTelemetryRecordsResponse> PutTelemetryRecordsAsync(PutTelemetryRecordsRequest request, CancellationToken cancellationToken);
    public abstract virtual PutTraceSegmentsResponse PutTraceSegments(PutTraceSegmentsRequest request);
    public abstract virtual Task`1<PutTraceSegmentsResponse> PutTraceSegmentsAsync(PutTraceSegmentsRequest request, CancellationToken cancellationToken);
    public abstract virtual TagResourceResponse TagResource(TagResourceRequest request);
    public abstract virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public abstract virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual UpdateGroupResponse UpdateGroup(UpdateGroupRequest request);
    public abstract virtual Task`1<UpdateGroupResponse> UpdateGroupAsync(UpdateGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual UpdateSamplingRuleResponse UpdateSamplingRule(UpdateSamplingRuleRequest request);
    public abstract virtual Task`1<UpdateSamplingRuleResponse> UpdateSamplingRuleAsync(UpdateSamplingRuleRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
}
public class Amazon.XRay.InsightCategory : ConstantClass {
    public static InsightCategory FAULT;
    public InsightCategory(string value);
    private static InsightCategory();
    public static InsightCategory FindValue(string value);
    public static InsightCategory op_Implicit(string value);
}
public class Amazon.XRay.InsightState : ConstantClass {
    public static InsightState ACTIVE;
    public static InsightState CLOSED;
    public InsightState(string value);
    private static InsightState();
    public static InsightState FindValue(string value);
    public static InsightState op_Implicit(string value);
}
public class Amazon.XRay.Internal.AmazonXRayEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.XRay.Internal.AmazonXRayEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.XRay.Internal.AmazonXRayMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.XRay.Model.Alias : object {
    private string _name;
    private List`1<string> _names;
    private string _type;
    public string Name { get; public set; }
    public List`1<string> Names { get; public set; }
    public string Type { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_Names();
    public void set_Names(List`1<string> value);
    internal bool IsSetNames();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.XRay.Model.AnnotationValue : object {
    private Nullable`1<bool> _booleanValue;
    private Nullable`1<double> _numberValue;
    private string _stringValue;
    public Nullable`1<bool> BooleanValue { get; public set; }
    public Nullable`1<double> NumberValue { get; public set; }
    public string StringValue { get; public set; }
    public Nullable`1<bool> get_BooleanValue();
    public void set_BooleanValue(Nullable`1<bool> value);
    internal bool IsSetBooleanValue();
    public Nullable`1<double> get_NumberValue();
    public void set_NumberValue(Nullable`1<double> value);
    internal bool IsSetNumberValue();
    public string get_StringValue();
    public void set_StringValue(string value);
    internal bool IsSetStringValue();
}
public class Amazon.XRay.Model.AnomalousService : object {
    private ServiceId _serviceId;
    public ServiceId ServiceId { get; public set; }
    public ServiceId get_ServiceId();
    public void set_ServiceId(ServiceId value);
    internal bool IsSetServiceId();
}
public class Amazon.XRay.Model.AvailabilityZoneDetail : object {
    private string _name;
    public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.XRay.Model.BackendConnectionErrors : object {
    private Nullable`1<int> _connectionRefusedCount;
    private Nullable`1<int> _httpCode4XXCount;
    private Nullable`1<int> _httpCode5XXCount;
    private Nullable`1<int> _otherCount;
    private Nullable`1<int> _timeoutCount;
    private Nullable`1<int> _unknownHostCount;
    public Nullable`1<int> ConnectionRefusedCount { get; public set; }
    public Nullable`1<int> HTTPCode4XXCount { get; public set; }
    public Nullable`1<int> HTTPCode5XXCount { get; public set; }
    public Nullable`1<int> OtherCount { get; public set; }
    public Nullable`1<int> TimeoutCount { get; public set; }
    public Nullable`1<int> UnknownHostCount { get; public set; }
    public Nullable`1<int> get_ConnectionRefusedCount();
    public void set_ConnectionRefusedCount(Nullable`1<int> value);
    internal bool IsSetConnectionRefusedCount();
    public Nullable`1<int> get_HTTPCode4XXCount();
    public void set_HTTPCode4XXCount(Nullable`1<int> value);
    internal bool IsSetHTTPCode4XXCount();
    public Nullable`1<int> get_HTTPCode5XXCount();
    public void set_HTTPCode5XXCount(Nullable`1<int> value);
    internal bool IsSetHTTPCode5XXCount();
    public Nullable`1<int> get_OtherCount();
    public void set_OtherCount(Nullable`1<int> value);
    internal bool IsSetOtherCount();
    public Nullable`1<int> get_TimeoutCount();
    public void set_TimeoutCount(Nullable`1<int> value);
    internal bool IsSetTimeoutCount();
    public Nullable`1<int> get_UnknownHostCount();
    public void set_UnknownHostCount(Nullable`1<int> value);
    internal bool IsSetUnknownHostCount();
}
internal class Amazon.XRay.Model.BatchGetTracesPaginator : object {
    private IAmazonXRay _client;
    private BatchGetTracesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<BatchGetTracesResponse> Responses { get; }
    public IPaginatedEnumerable`1<Trace> Traces { get; }
    internal BatchGetTracesPaginator(IAmazonXRay client, BatchGetTracesRequest request);
    public sealed virtual IPaginatedEnumerable`1<BatchGetTracesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Trace> get_Traces();
    [IteratorStateMachineAttribute("Amazon.XRay.Model.BatchGetTracesPaginator/<Amazon-Runtime-IPaginator<Amazon-XRay-Model-BatchGetTracesResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<BatchGetTracesResponse> Amazon.Runtime.IPaginator<Amazon.XRay.Model.BatchGetTracesResponse>.Paginate();
}
public class Amazon.XRay.Model.BatchGetTracesRequest : AmazonXRayRequest {
    private string _nextToken;
    private List`1<string> _traceIds;
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TraceIds { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_TraceIds();
    public void set_TraceIds(List`1<string> value);
    internal bool IsSetTraceIds();
}
public class Amazon.XRay.Model.BatchGetTracesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Trace> _traces;
    private List`1<string> _unprocessedTraceIds;
    public string NextToken { get; public set; }
    public List`1<Trace> Traces { get; public set; }
    public List`1<string> UnprocessedTraceIds { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Trace> get_Traces();
    public void set_Traces(List`1<Trace> value);
    internal bool IsSetTraces();
    public List`1<string> get_UnprocessedTraceIds();
    public void set_UnprocessedTraceIds(List`1<string> value);
    internal bool IsSetUnprocessedTraceIds();
}
public class Amazon.XRay.Model.CreateGroupRequest : AmazonXRayRequest {
    private string _filterExpression;
    private string _groupName;
    private InsightsConfiguration _insightsConfiguration;
    private List`1<Tag> _tags;
    public string FilterExpression { get; public set; }
    [AWSPropertyAttribute]
public string GroupName { get; public set; }
    public InsightsConfiguration InsightsConfiguration { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_FilterExpression();
    public void set_FilterExpression(string value);
    internal bool IsSetFilterExpression();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public InsightsConfiguration get_InsightsConfiguration();
    public void set_InsightsConfiguration(InsightsConfiguration value);
    internal bool IsSetInsightsConfiguration();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.XRay.Model.CreateGroupResponse : AmazonWebServiceResponse {
    private Group _group;
    public Group Group { get; public set; }
    public Group get_Group();
    public void set_Group(Group value);
    internal bool IsSetGroup();
}
public class Amazon.XRay.Model.CreateSamplingRuleRequest : AmazonXRayRequest {
    private SamplingRule _samplingRule;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public SamplingRule SamplingRule { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public SamplingRule get_SamplingRule();
    public void set_SamplingRule(SamplingRule value);
    internal bool IsSetSamplingRule();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.XRay.Model.CreateSamplingRuleResponse : AmazonWebServiceResponse {
    private SamplingRuleRecord _samplingRuleRecord;
    public SamplingRuleRecord SamplingRuleRecord { get; public set; }
    public SamplingRuleRecord get_SamplingRuleRecord();
    public void set_SamplingRuleRecord(SamplingRuleRecord value);
    internal bool IsSetSamplingRuleRecord();
}
public class Amazon.XRay.Model.DeleteGroupRequest : AmazonXRayRequest {
    private string _groupARN;
    private string _groupName;
    [AWSPropertyAttribute]
public string GroupARN { get; public set; }
    [AWSPropertyAttribute]
public string GroupName { get; public set; }
    public string get_GroupARN();
    public void set_GroupARN(string value);
    internal bool IsSetGroupARN();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
}
public class Amazon.XRay.Model.DeleteGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.XRay.Model.DeleteResourcePolicyRequest : AmazonXRayRequest {
    private string _policyName;
    private string _policyRevisionId;
    [AWSPropertyAttribute]
public string PolicyName { get; public set; }
    public string PolicyRevisionId { get; public set; }
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
    public string get_PolicyRevisionId();
    public void set_PolicyRevisionId(string value);
    internal bool IsSetPolicyRevisionId();
}
public class Amazon.XRay.Model.DeleteResourcePolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.XRay.Model.DeleteSamplingRuleRequest : AmazonXRayRequest {
    private string _ruleARN;
    private string _ruleName;
    public string RuleARN { get; public set; }
    public string RuleName { get; public set; }
    public string get_RuleARN();
    public void set_RuleARN(string value);
    internal bool IsSetRuleARN();
    public string get_RuleName();
    public void set_RuleName(string value);
    internal bool IsSetRuleName();
}
public class Amazon.XRay.Model.DeleteSamplingRuleResponse : AmazonWebServiceResponse {
    private SamplingRuleRecord _samplingRuleRecord;
    public SamplingRuleRecord SamplingRuleRecord { get; public set; }
    public SamplingRuleRecord get_SamplingRuleRecord();
    public void set_SamplingRuleRecord(SamplingRuleRecord value);
    internal bool IsSetSamplingRuleRecord();
}
public class Amazon.XRay.Model.Edge : object {
    private List`1<Alias> _aliases;
    private string _edgeType;
    private Nullable`1<DateTime> _endTime;
    private List`1<HistogramEntry> _receivedEventAgeHistogram;
    private Nullable`1<int> _referenceId;
    private List`1<HistogramEntry> _responseTimeHistogram;
    private Nullable`1<DateTime> _startTime;
    private EdgeStatistics _summaryStatistics;
    public List`1<Alias> Aliases { get; public set; }
    public string EdgeType { get; public set; }
    public Nullable`1<DateTime> EndTime { get; public set; }
    public List`1<HistogramEntry> ReceivedEventAgeHistogram { get; public set; }
    public Nullable`1<int> ReferenceId { get; public set; }
    public List`1<HistogramEntry> ResponseTimeHistogram { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public EdgeStatistics SummaryStatistics { get; public set; }
    public List`1<Alias> get_Aliases();
    public void set_Aliases(List`1<Alias> value);
    internal bool IsSetAliases();
    public string get_EdgeType();
    public void set_EdgeType(string value);
    internal bool IsSetEdgeType();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public List`1<HistogramEntry> get_ReceivedEventAgeHistogram();
    public void set_ReceivedEventAgeHistogram(List`1<HistogramEntry> value);
    internal bool IsSetReceivedEventAgeHistogram();
    public Nullable`1<int> get_ReferenceId();
    public void set_ReferenceId(Nullable`1<int> value);
    internal bool IsSetReferenceId();
    public List`1<HistogramEntry> get_ResponseTimeHistogram();
    public void set_ResponseTimeHistogram(List`1<HistogramEntry> value);
    internal bool IsSetResponseTimeHistogram();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public EdgeStatistics get_SummaryStatistics();
    public void set_SummaryStatistics(EdgeStatistics value);
    internal bool IsSetSummaryStatistics();
}
public class Amazon.XRay.Model.EdgeStatistics : object {
    private ErrorStatistics _errorStatistics;
    private FaultStatistics _faultStatistics;
    private Nullable`1<long> _okCount;
    private Nullable`1<long> _totalCount;
    private Nullable`1<double> _totalResponseTime;
    public ErrorStatistics ErrorStatistics { get; public set; }
    public FaultStatistics FaultStatistics { get; public set; }
    public Nullable`1<long> OkCount { get; public set; }
    public Nullable`1<long> TotalCount { get; public set; }
    public Nullable`1<double> TotalResponseTime { get; public set; }
    public ErrorStatistics get_ErrorStatistics();
    public void set_ErrorStatistics(ErrorStatistics value);
    internal bool IsSetErrorStatistics();
    public FaultStatistics get_FaultStatistics();
    public void set_FaultStatistics(FaultStatistics value);
    internal bool IsSetFaultStatistics();
    public Nullable`1<long> get_OkCount();
    public void set_OkCount(Nullable`1<long> value);
    internal bool IsSetOkCount();
    public Nullable`1<long> get_TotalCount();
    public void set_TotalCount(Nullable`1<long> value);
    internal bool IsSetTotalCount();
    public Nullable`1<double> get_TotalResponseTime();
    public void set_TotalResponseTime(Nullable`1<double> value);
    internal bool IsSetTotalResponseTime();
}
public class Amazon.XRay.Model.EncryptionConfig : object {
    private string _keyId;
    private EncryptionStatus _status;
    private EncryptionType _type;
    public string KeyId { get; public set; }
    public EncryptionStatus Status { get; public set; }
    public EncryptionType Type { get; public set; }
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
    public EncryptionStatus get_Status();
    public void set_Status(EncryptionStatus value);
    internal bool IsSetStatus();
    public EncryptionType get_Type();
    public void set_Type(EncryptionType value);
    internal bool IsSetType();
}
public class Amazon.XRay.Model.ErrorRootCause : object {
    private Nullable`1<bool> _clientImpacting;
    private List`1<ErrorRootCauseService> _services;
    public Nullable`1<bool> ClientImpacting { get; public set; }
    public List`1<ErrorRootCauseService> Services { get; public set; }
    public Nullable`1<bool> get_ClientImpacting();
    public void set_ClientImpacting(Nullable`1<bool> value);
    internal bool IsSetClientImpacting();
    public List`1<ErrorRootCauseService> get_Services();
    public void set_Services(List`1<ErrorRootCauseService> value);
    internal bool IsSetServices();
}
public class Amazon.XRay.Model.ErrorRootCauseEntity : object {
    private List`1<RootCauseException> _exceptions;
    private string _name;
    private Nullable`1<bool> _remote;
    public List`1<RootCauseException> Exceptions { get; public set; }
    public string Name { get; public set; }
    public Nullable`1<bool> Remote { get; public set; }
    public List`1<RootCauseException> get_Exceptions();
    public void set_Exceptions(List`1<RootCauseException> value);
    internal bool IsSetExceptions();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<bool> get_Remote();
    public void set_Remote(Nullable`1<bool> value);
    internal bool IsSetRemote();
}
public class Amazon.XRay.Model.ErrorRootCauseService : object {
    private string _accountId;
    private List`1<ErrorRootCauseEntity> _entityPath;
    private Nullable`1<bool> _inferred;
    private string _name;
    private List`1<string> _names;
    private string _type;
    public string AccountId { get; public set; }
    public List`1<ErrorRootCauseEntity> EntityPath { get; public set; }
    public Nullable`1<bool> Inferred { get; public set; }
    public string Name { get; public set; }
    public List`1<string> Names { get; public set; }
    public string Type { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public List`1<ErrorRootCauseEntity> get_EntityPath();
    public void set_EntityPath(List`1<ErrorRootCauseEntity> value);
    internal bool IsSetEntityPath();
    public Nullable`1<bool> get_Inferred();
    public void set_Inferred(Nullable`1<bool> value);
    internal bool IsSetInferred();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_Names();
    public void set_Names(List`1<string> value);
    internal bool IsSetNames();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.XRay.Model.ErrorStatistics : object {
    private Nullable`1<long> _otherCount;
    private Nullable`1<long> _throttleCount;
    private Nullable`1<long> _totalCount;
    public Nullable`1<long> OtherCount { get; public set; }
    public Nullable`1<long> ThrottleCount { get; public set; }
    public Nullable`1<long> TotalCount { get; public set; }
    public Nullable`1<long> get_OtherCount();
    public void set_OtherCount(Nullable`1<long> value);
    internal bool IsSetOtherCount();
    public Nullable`1<long> get_ThrottleCount();
    public void set_ThrottleCount(Nullable`1<long> value);
    internal bool IsSetThrottleCount();
    public Nullable`1<long> get_TotalCount();
    public void set_TotalCount(Nullable`1<long> value);
    internal bool IsSetTotalCount();
}
public class Amazon.XRay.Model.FaultRootCause : object {
    private Nullable`1<bool> _clientImpacting;
    private List`1<FaultRootCauseService> _services;
    public Nullable`1<bool> ClientImpacting { get; public set; }
    public List`1<FaultRootCauseService> Services { get; public set; }
    public Nullable`1<bool> get_ClientImpacting();
    public void set_ClientImpacting(Nullable`1<bool> value);
    internal bool IsSetClientImpacting();
    public List`1<FaultRootCauseService> get_Services();
    public void set_Services(List`1<FaultRootCauseService> value);
    internal bool IsSetServices();
}
public class Amazon.XRay.Model.FaultRootCauseEntity : object {
    private List`1<RootCauseException> _exceptions;
    private string _name;
    private Nullable`1<bool> _remote;
    public List`1<RootCauseException> Exceptions { get; public set; }
    public string Name { get; public set; }
    public Nullable`1<bool> Remote { get; public set; }
    public List`1<RootCauseException> get_Exceptions();
    public void set_Exceptions(List`1<RootCauseException> value);
    internal bool IsSetExceptions();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<bool> get_Remote();
    public void set_Remote(Nullable`1<bool> value);
    internal bool IsSetRemote();
}
public class Amazon.XRay.Model.FaultRootCauseService : object {
    private string _accountId;
    private List`1<FaultRootCauseEntity> _entityPath;
    private Nullable`1<bool> _inferred;
    private string _name;
    private List`1<string> _names;
    private string _type;
    public string AccountId { get; public set; }
    public List`1<FaultRootCauseEntity> EntityPath { get; public set; }
    public Nullable`1<bool> Inferred { get; public set; }
    public string Name { get; public set; }
    public List`1<string> Names { get; public set; }
    public string Type { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public List`1<FaultRootCauseEntity> get_EntityPath();
    public void set_EntityPath(List`1<FaultRootCauseEntity> value);
    internal bool IsSetEntityPath();
    public Nullable`1<bool> get_Inferred();
    public void set_Inferred(Nullable`1<bool> value);
    internal bool IsSetInferred();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_Names();
    public void set_Names(List`1<string> value);
    internal bool IsSetNames();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.XRay.Model.FaultStatistics : object {
    private Nullable`1<long> _otherCount;
    private Nullable`1<long> _totalCount;
    public Nullable`1<long> OtherCount { get; public set; }
    public Nullable`1<long> TotalCount { get; public set; }
    public Nullable`1<long> get_OtherCount();
    public void set_OtherCount(Nullable`1<long> value);
    internal bool IsSetOtherCount();
    public Nullable`1<long> get_TotalCount();
    public void set_TotalCount(Nullable`1<long> value);
    internal bool IsSetTotalCount();
}
public class Amazon.XRay.Model.ForecastStatistics : object {
    private Nullable`1<long> _faultCountHigh;
    private Nullable`1<long> _faultCountLow;
    public Nullable`1<long> FaultCountHigh { get; public set; }
    public Nullable`1<long> FaultCountLow { get; public set; }
    public Nullable`1<long> get_FaultCountHigh();
    public void set_FaultCountHigh(Nullable`1<long> value);
    internal bool IsSetFaultCountHigh();
    public Nullable`1<long> get_FaultCountLow();
    public void set_FaultCountLow(Nullable`1<long> value);
    internal bool IsSetFaultCountLow();
}
public class Amazon.XRay.Model.GetEncryptionConfigRequest : AmazonXRayRequest {
}
public class Amazon.XRay.Model.GetEncryptionConfigResponse : AmazonWebServiceResponse {
    private EncryptionConfig _encryptionConfig;
    public EncryptionConfig EncryptionConfig { get; public set; }
    public EncryptionConfig get_EncryptionConfig();
    public void set_EncryptionConfig(EncryptionConfig value);
    internal bool IsSetEncryptionConfig();
}
public class Amazon.XRay.Model.GetGroupRequest : AmazonXRayRequest {
    private string _groupARN;
    private string _groupName;
    [AWSPropertyAttribute]
public string GroupARN { get; public set; }
    [AWSPropertyAttribute]
public string GroupName { get; public set; }
    public string get_GroupARN();
    public void set_GroupARN(string value);
    internal bool IsSetGroupARN();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
}
public class Amazon.XRay.Model.GetGroupResponse : AmazonWebServiceResponse {
    private Group _group;
    public Group Group { get; public set; }
    public Group get_Group();
    public void set_Group(Group value);
    internal bool IsSetGroup();
}
internal class Amazon.XRay.Model.GetGroupsPaginator : object {
    private IAmazonXRay _client;
    private GetGroupsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<GroupSummary> Groups { get; }
    internal GetGroupsPaginator(IAmazonXRay client, GetGroupsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetGroupsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<GroupSummary> get_Groups();
    [IteratorStateMachineAttribute("Amazon.XRay.Model.GetGroupsPaginator/<Amazon-Runtime-IPaginator<Amazon-XRay-Model-GetGroupsResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<GetGroupsResponse> Amazon.Runtime.IPaginator<Amazon.XRay.Model.GetGroupsResponse>.Paginate();
}
public class Amazon.XRay.Model.GetGroupsRequest : AmazonXRayRequest {
    private string _nextToken;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.XRay.Model.GetGroupsResponse : AmazonWebServiceResponse {
    private List`1<GroupSummary> _groups;
    private string _nextToken;
    public List`1<GroupSummary> Groups { get; public set; }
    public string NextToken { get; public set; }
    public List`1<GroupSummary> get_Groups();
    public void set_Groups(List`1<GroupSummary> value);
    internal bool IsSetGroups();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.XRay.Model.GetInsightEventsPaginator : object {
    private IAmazonXRay _client;
    private GetInsightEventsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetInsightEventsResponse> Responses { get; }
    internal GetInsightEventsPaginator(IAmazonXRay client, GetInsightEventsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetInsightEventsResponse> get_Responses();
    [IteratorStateMachineAttribute("Amazon.XRay.Model.GetInsightEventsPaginator/<Amazon-Runtime-IPaginator<Amazon-XRay-Model-GetInsightEventsResponse>-Paginate>d__6")]
private sealed virtual override IEnumerable`1<GetInsightEventsResponse> Amazon.Runtime.IPaginator<Amazon.XRay.Model.GetInsightEventsResponse>.Paginate();
}
public class Amazon.XRay.Model.GetInsightEventsRequest : AmazonXRayRequest {
    private string _insightId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string InsightId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public string get_InsightId();
    public void set_InsightId(string value);
    internal bool IsSetInsightId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.XRay.Model.GetInsightEventsResponse : AmazonWebServiceResponse {
    private List`1<InsightEvent> _insightEvents;
    private string _nextToken;
    public List`1<InsightEvent> InsightEvents { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<InsightEvent> get_InsightEvents();
    public void set_InsightEvents(List`1<InsightEvent> value);
    internal bool IsSetInsightEvents();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.XRay.Model.GetInsightImpactGraphRequest : AmazonXRayRequest {
    private Nullable`1<DateTime> _endTime;
    private string _insightId;
    private string _nextToken;
    private Nullable`1<DateTime> _startTime;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> EndTime { get; public set; }
    [AWSPropertyAttribute]
public string InsightId { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> StartTime { get; public set; }
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public string get_InsightId();
    public void set_InsightId(string value);
    internal bool IsSetInsightId();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
}
public class Amazon.XRay.Model.GetInsightImpactGraphResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _endTime;
    private string _insightId;
    private string _nextToken;
    private Nullable`1<DateTime> _serviceGraphEndTime;
    private Nullable`1<DateTime> _serviceGraphStartTime;
    private List`1<InsightImpactGraphService> _services;
    private Nullable`1<DateTime> _startTime;
    public Nullable`1<DateTime> EndTime { get; public set; }
    public string InsightId { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public Nullable`1<DateTime> ServiceGraphEndTime { get; public set; }
    public Nullable`1<DateTime> ServiceGraphStartTime { get; public set; }
    public List`1<InsightImpactGraphService> Services { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public string get_InsightId();
    public void set_InsightId(string value);
    internal bool IsSetInsightId();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<DateTime> get_ServiceGraphEndTime();
    public void set_ServiceGraphEndTime(Nullable`1<DateTime> value);
    internal bool IsSetServiceGraphEndTime();
    public Nullable`1<DateTime> get_ServiceGraphStartTime();
    public void set_ServiceGraphStartTime(Nullable`1<DateTime> value);
    internal bool IsSetServiceGraphStartTime();
    public List`1<InsightImpactGraphService> get_Services();
    public void set_Services(List`1<InsightImpactGraphService> value);
    internal bool IsSetServices();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
}
public class Amazon.XRay.Model.GetInsightRequest : AmazonXRayRequest {
    private string _insightId;
    [AWSPropertyAttribute]
public string InsightId { get; public set; }
    public string get_InsightId();
    public void set_InsightId(string value);
    internal bool IsSetInsightId();
}
public class Amazon.XRay.Model.GetInsightResponse : AmazonWebServiceResponse {
    private Insight _insight;
    public Insight Insight { get; public set; }
    public Insight get_Insight();
    public void set_Insight(Insight value);
    internal bool IsSetInsight();
}
internal class Amazon.XRay.Model.GetInsightSummariesPaginator : object {
    private IAmazonXRay _client;
    private GetInsightSummariesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetInsightSummariesResponse> Responses { get; }
    internal GetInsightSummariesPaginator(IAmazonXRay client, GetInsightSummariesRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetInsightSummariesResponse> get_Responses();
    [IteratorStateMachineAttribute("Amazon.XRay.Model.GetInsightSummariesPaginator/<Amazon-Runtime-IPaginator<Amazon-XRay-Model-GetInsightSummariesResponse>-Paginate>d__6")]
private sealed virtual override IEnumerable`1<GetInsightSummariesResponse> Amazon.Runtime.IPaginator<Amazon.XRay.Model.GetInsightSummariesResponse>.Paginate();
}
public class Amazon.XRay.Model.GetInsightSummariesRequest : AmazonXRayRequest {
    private Nullable`1<DateTime> _endTime;
    private string _groupARN;
    private string _groupName;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private Nullable`1<DateTime> _startTime;
    private List`1<string> _states;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> EndTime { get; public set; }
    [AWSPropertyAttribute]
public string GroupARN { get; public set; }
    [AWSPropertyAttribute]
public string GroupName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> StartTime { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> States { get; public set; }
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public string get_GroupARN();
    public void set_GroupARN(string value);
    internal bool IsSetGroupARN();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public List`1<string> get_States();
    public void set_States(List`1<string> value);
    internal bool IsSetStates();
}
public class Amazon.XRay.Model.GetInsightSummariesResponse : AmazonWebServiceResponse {
    private List`1<InsightSummary> _insightSummaries;
    private string _nextToken;
    public List`1<InsightSummary> InsightSummaries { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<InsightSummary> get_InsightSummaries();
    public void set_InsightSummaries(List`1<InsightSummary> value);
    internal bool IsSetInsightSummaries();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.XRay.Model.GetSamplingRulesPaginator : object {
    private IAmazonXRay _client;
    private GetSamplingRulesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetSamplingRulesResponse> Responses { get; }
    public IPaginatedEnumerable`1<SamplingRuleRecord> SamplingRuleRecords { get; }
    internal GetSamplingRulesPaginator(IAmazonXRay client, GetSamplingRulesRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetSamplingRulesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<SamplingRuleRecord> get_SamplingRuleRecords();
    [IteratorStateMachineAttribute("Amazon.XRay.Model.GetSamplingRulesPaginator/<Amazon-Runtime-IPaginator<Amazon-XRay-Model-GetSamplingRulesResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<GetSamplingRulesResponse> Amazon.Runtime.IPaginator<Amazon.XRay.Model.GetSamplingRulesResponse>.Paginate();
}
public class Amazon.XRay.Model.GetSamplingRulesRequest : AmazonXRayRequest {
    private string _nextToken;
    public string NextToken { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.XRay.Model.GetSamplingRulesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<SamplingRuleRecord> _samplingRuleRecords;
    public string NextToken { get; public set; }
    public List`1<SamplingRuleRecord> SamplingRuleRecords { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<SamplingRuleRecord> get_SamplingRuleRecords();
    public void set_SamplingRuleRecords(List`1<SamplingRuleRecord> value);
    internal bool IsSetSamplingRuleRecords();
}
internal class Amazon.XRay.Model.GetSamplingStatisticSummariesPaginator : object {
    private IAmazonXRay _client;
    private GetSamplingStatisticSummariesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetSamplingStatisticSummariesResponse> Responses { get; }
    public IPaginatedEnumerable`1<SamplingStatisticSummary> SamplingStatisticSummaries { get; }
    internal GetSamplingStatisticSummariesPaginator(IAmazonXRay client, GetSamplingStatisticSummariesRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetSamplingStatisticSummariesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<SamplingStatisticSummary> get_SamplingStatisticSummaries();
    [IteratorStateMachineAttribute("Amazon.XRay.Model.GetSamplingStatisticSummariesPaginator/<Amazon-Runtime-IPaginator<Amazon-XRay-Model-GetSamplingStatisticSummariesResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<GetSamplingStatisticSummariesResponse> Amazon.Runtime.IPaginator<Amazon.XRay.Model.GetSamplingStatisticSummariesResponse>.Paginate();
}
public class Amazon.XRay.Model.GetSamplingStatisticSummariesRequest : AmazonXRayRequest {
    private string _nextToken;
    public string NextToken { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.XRay.Model.GetSamplingStatisticSummariesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<SamplingStatisticSummary> _samplingStatisticSummaries;
    public string NextToken { get; public set; }
    public List`1<SamplingStatisticSummary> SamplingStatisticSummaries { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<SamplingStatisticSummary> get_SamplingStatisticSummaries();
    public void set_SamplingStatisticSummaries(List`1<SamplingStatisticSummary> value);
    internal bool IsSetSamplingStatisticSummaries();
}
public class Amazon.XRay.Model.GetSamplingTargetsRequest : AmazonXRayRequest {
    private List`1<SamplingStatisticsDocument> _samplingStatisticsDocuments;
    [AWSPropertyAttribute]
public List`1<SamplingStatisticsDocument> SamplingStatisticsDocuments { get; public set; }
    public List`1<SamplingStatisticsDocument> get_SamplingStatisticsDocuments();
    public void set_SamplingStatisticsDocuments(List`1<SamplingStatisticsDocument> value);
    internal bool IsSetSamplingStatisticsDocuments();
}
public class Amazon.XRay.Model.GetSamplingTargetsResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _lastRuleModification;
    private List`1<SamplingTargetDocument> _samplingTargetDocuments;
    private List`1<UnprocessedStatistics> _unprocessedStatistics;
    public Nullable`1<DateTime> LastRuleModification { get; public set; }
    public List`1<SamplingTargetDocument> SamplingTargetDocuments { get; public set; }
    public List`1<UnprocessedStatistics> UnprocessedStatistics { get; public set; }
    public Nullable`1<DateTime> get_LastRuleModification();
    public void set_LastRuleModification(Nullable`1<DateTime> value);
    internal bool IsSetLastRuleModification();
    public List`1<SamplingTargetDocument> get_SamplingTargetDocuments();
    public void set_SamplingTargetDocuments(List`1<SamplingTargetDocument> value);
    internal bool IsSetSamplingTargetDocuments();
    public List`1<UnprocessedStatistics> get_UnprocessedStatistics();
    public void set_UnprocessedStatistics(List`1<UnprocessedStatistics> value);
    internal bool IsSetUnprocessedStatistics();
}
internal class Amazon.XRay.Model.GetServiceGraphPaginator : object {
    private IAmazonXRay _client;
    private GetServiceGraphRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetServiceGraphResponse> Responses { get; }
    public IPaginatedEnumerable`1<Service> Services { get; }
    internal GetServiceGraphPaginator(IAmazonXRay client, GetServiceGraphRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetServiceGraphResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Service> get_Services();
    [IteratorStateMachineAttribute("Amazon.XRay.Model.GetServiceGraphPaginator/<Amazon-Runtime-IPaginator<Amazon-XRay-Model-GetServiceGraphResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<GetServiceGraphResponse> Amazon.Runtime.IPaginator<Amazon.XRay.Model.GetServiceGraphResponse>.Paginate();
}
public class Amazon.XRay.Model.GetServiceGraphRequest : AmazonXRayRequest {
    private Nullable`1<DateTime> _endTime;
    private string _groupARN;
    private string _groupName;
    private string _nextToken;
    private Nullable`1<DateTime> _startTime;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> EndTime { get; public set; }
    [AWSPropertyAttribute]
public string GroupARN { get; public set; }
    [AWSPropertyAttribute]
public string GroupName { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> StartTime { get; public set; }
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public string get_GroupARN();
    public void set_GroupARN(string value);
    internal bool IsSetGroupARN();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
}
public class Amazon.XRay.Model.GetServiceGraphResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _containsOldGroupVersions;
    private Nullable`1<DateTime> _endTime;
    private string _nextToken;
    private List`1<Service> _services;
    private Nullable`1<DateTime> _startTime;
    public Nullable`1<bool> ContainsOldGroupVersions { get; public set; }
    public Nullable`1<DateTime> EndTime { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Service> Services { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public Nullable`1<bool> get_ContainsOldGroupVersions();
    public void set_ContainsOldGroupVersions(Nullable`1<bool> value);
    internal bool IsSetContainsOldGroupVersions();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Service> get_Services();
    public void set_Services(List`1<Service> value);
    internal bool IsSetServices();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
}
internal class Amazon.XRay.Model.GetTimeSeriesServiceStatisticsPaginator : object {
    private IAmazonXRay _client;
    private GetTimeSeriesServiceStatisticsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetTimeSeriesServiceStatisticsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TimeSeriesServiceStatistics> TimeSeriesServiceStatistics { get; }
    internal GetTimeSeriesServiceStatisticsPaginator(IAmazonXRay client, GetTimeSeriesServiceStatisticsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetTimeSeriesServiceStatisticsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TimeSeriesServiceStatistics> get_TimeSeriesServiceStatistics();
    [IteratorStateMachineAttribute("Amazon.XRay.Model.GetTimeSeriesServiceStatisticsPaginator/<Amazon-Runtime-IPaginator<Amazon-XRay-Model-GetTimeSeriesServiceStatisticsResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<GetTimeSeriesServiceStatisticsResponse> Amazon.Runtime.IPaginator<Amazon.XRay.Model.GetTimeSeriesServiceStatisticsResponse>.Paginate();
}
public class Amazon.XRay.Model.GetTimeSeriesServiceStatisticsRequest : AmazonXRayRequest {
    private Nullable`1<DateTime> _endTime;
    private string _entitySelectorExpression;
    private Nullable`1<bool> _forecastStatistics;
    private string _groupARN;
    private string _groupName;
    private string _nextToken;
    private Nullable`1<int> _period;
    private Nullable`1<DateTime> _startTime;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> EndTime { get; public set; }
    [AWSPropertyAttribute]
public string EntitySelectorExpression { get; public set; }
    public Nullable`1<bool> ForecastStatistics { get; public set; }
    [AWSPropertyAttribute]
public string GroupARN { get; public set; }
    [AWSPropertyAttribute]
public string GroupName { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> Period { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> StartTime { get; public set; }
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public string get_EntitySelectorExpression();
    public void set_EntitySelectorExpression(string value);
    internal bool IsSetEntitySelectorExpression();
    public Nullable`1<bool> get_ForecastStatistics();
    public void set_ForecastStatistics(Nullable`1<bool> value);
    internal bool IsSetForecastStatistics();
    public string get_GroupARN();
    public void set_GroupARN(string value);
    internal bool IsSetGroupARN();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<int> get_Period();
    public void set_Period(Nullable`1<int> value);
    internal bool IsSetPeriod();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
}
public class Amazon.XRay.Model.GetTimeSeriesServiceStatisticsResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _containsOldGroupVersions;
    private string _nextToken;
    private List`1<TimeSeriesServiceStatistics> _timeSeriesServiceStatistics;
    public Nullable`1<bool> ContainsOldGroupVersions { get; public set; }
    public string NextToken { get; public set; }
    public List`1<TimeSeriesServiceStatistics> TimeSeriesServiceStatistics { get; public set; }
    public Nullable`1<bool> get_ContainsOldGroupVersions();
    public void set_ContainsOldGroupVersions(Nullable`1<bool> value);
    internal bool IsSetContainsOldGroupVersions();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TimeSeriesServiceStatistics> get_TimeSeriesServiceStatistics();
    public void set_TimeSeriesServiceStatistics(List`1<TimeSeriesServiceStatistics> value);
    internal bool IsSetTimeSeriesServiceStatistics();
}
internal class Amazon.XRay.Model.GetTraceGraphPaginator : object {
    private IAmazonXRay _client;
    private GetTraceGraphRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetTraceGraphResponse> Responses { get; }
    public IPaginatedEnumerable`1<Service> Services { get; }
    internal GetTraceGraphPaginator(IAmazonXRay client, GetTraceGraphRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetTraceGraphResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Service> get_Services();
    [IteratorStateMachineAttribute("Amazon.XRay.Model.GetTraceGraphPaginator/<Amazon-Runtime-IPaginator<Amazon-XRay-Model-GetTraceGraphResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<GetTraceGraphResponse> Amazon.Runtime.IPaginator<Amazon.XRay.Model.GetTraceGraphResponse>.Paginate();
}
public class Amazon.XRay.Model.GetTraceGraphRequest : AmazonXRayRequest {
    private string _nextToken;
    private List`1<string> _traceIds;
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TraceIds { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_TraceIds();
    public void set_TraceIds(List`1<string> value);
    internal bool IsSetTraceIds();
}
public class Amazon.XRay.Model.GetTraceGraphResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Service> _services;
    public string NextToken { get; public set; }
    public List`1<Service> Services { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Service> get_Services();
    public void set_Services(List`1<Service> value);
    internal bool IsSetServices();
}
internal class Amazon.XRay.Model.GetTraceSummariesPaginator : object {
    private IAmazonXRay _client;
    private GetTraceSummariesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetTraceSummariesResponse> Responses { get; }
    public IPaginatedEnumerable`1<TraceSummary> TraceSummaries { get; }
    internal GetTraceSummariesPaginator(IAmazonXRay client, GetTraceSummariesRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetTraceSummariesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TraceSummary> get_TraceSummaries();
    [IteratorStateMachineAttribute("Amazon.XRay.Model.GetTraceSummariesPaginator/<Amazon-Runtime-IPaginator<Amazon-XRay-Model-GetTraceSummariesResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<GetTraceSummariesResponse> Amazon.Runtime.IPaginator<Amazon.XRay.Model.GetTraceSummariesResponse>.Paginate();
}
public class Amazon.XRay.Model.GetTraceSummariesRequest : AmazonXRayRequest {
    private Nullable`1<DateTime> _endTime;
    private string _filterExpression;
    private string _nextToken;
    private Nullable`1<bool> _sampling;
    private SamplingStrategy _samplingStrategy;
    private Nullable`1<DateTime> _startTime;
    private TimeRangeType _timeRangeType;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> EndTime { get; public set; }
    public string FilterExpression { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<bool> Sampling { get; public set; }
    public SamplingStrategy SamplingStrategy { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> StartTime { get; public set; }
    public TimeRangeType TimeRangeType { get; public set; }
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public string get_FilterExpression();
    public void set_FilterExpression(string value);
    internal bool IsSetFilterExpression();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<bool> get_Sampling();
    public void set_Sampling(Nullable`1<bool> value);
    internal bool IsSetSampling();
    public SamplingStrategy get_SamplingStrategy();
    public void set_SamplingStrategy(SamplingStrategy value);
    internal bool IsSetSamplingStrategy();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public TimeRangeType get_TimeRangeType();
    public void set_TimeRangeType(TimeRangeType value);
    internal bool IsSetTimeRangeType();
}
public class Amazon.XRay.Model.GetTraceSummariesResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _approximateTime;
    private string _nextToken;
    private Nullable`1<long> _tracesProcessedCount;
    private List`1<TraceSummary> _traceSummaries;
    public Nullable`1<DateTime> ApproximateTime { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<long> TracesProcessedCount { get; public set; }
    public List`1<TraceSummary> TraceSummaries { get; public set; }
    public Nullable`1<DateTime> get_ApproximateTime();
    public void set_ApproximateTime(Nullable`1<DateTime> value);
    internal bool IsSetApproximateTime();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<long> get_TracesProcessedCount();
    public void set_TracesProcessedCount(Nullable`1<long> value);
    internal bool IsSetTracesProcessedCount();
    public List`1<TraceSummary> get_TraceSummaries();
    public void set_TraceSummaries(List`1<TraceSummary> value);
    internal bool IsSetTraceSummaries();
}
public class Amazon.XRay.Model.Group : object {
    private string _filterExpression;
    private string _groupARN;
    private string _groupName;
    private InsightsConfiguration _insightsConfiguration;
    public string FilterExpression { get; public set; }
    public string GroupARN { get; public set; }
    public string GroupName { get; public set; }
    public InsightsConfiguration InsightsConfiguration { get; public set; }
    public string get_FilterExpression();
    public void set_FilterExpression(string value);
    internal bool IsSetFilterExpression();
    public string get_GroupARN();
    public void set_GroupARN(string value);
    internal bool IsSetGroupARN();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public InsightsConfiguration get_InsightsConfiguration();
    public void set_InsightsConfiguration(InsightsConfiguration value);
    internal bool IsSetInsightsConfiguration();
}
public class Amazon.XRay.Model.GroupSummary : object {
    private string _filterExpression;
    private string _groupARN;
    private string _groupName;
    private InsightsConfiguration _insightsConfiguration;
    public string FilterExpression { get; public set; }
    public string GroupARN { get; public set; }
    public string GroupName { get; public set; }
    public InsightsConfiguration InsightsConfiguration { get; public set; }
    public string get_FilterExpression();
    public void set_FilterExpression(string value);
    internal bool IsSetFilterExpression();
    public string get_GroupARN();
    public void set_GroupARN(string value);
    internal bool IsSetGroupARN();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public InsightsConfiguration get_InsightsConfiguration();
    public void set_InsightsConfiguration(InsightsConfiguration value);
    internal bool IsSetInsightsConfiguration();
}
public class Amazon.XRay.Model.HistogramEntry : object {
    private Nullable`1<int> _count;
    private Nullable`1<double> _value;
    public Nullable`1<int> Count { get; public set; }
    public Nullable`1<double> Value { get; public set; }
    public Nullable`1<int> get_Count();
    public void set_Count(Nullable`1<int> value);
    internal bool IsSetCount();
    public Nullable`1<double> get_Value();
    public void set_Value(Nullable`1<double> value);
    internal bool IsSetValue();
}
public class Amazon.XRay.Model.Http : object {
    private string _clientIp;
    private string _httpMethod;
    private Nullable`1<int> _httpStatus;
    private string _httpURL;
    private string _userAgent;
    public string ClientIp { get; public set; }
    public string HttpMethod { get; public set; }
    public Nullable`1<int> HttpStatus { get; public set; }
    public string HttpURL { get; public set; }
    public string UserAgent { get; public set; }
    public string get_ClientIp();
    public void set_ClientIp(string value);
    internal bool IsSetClientIp();
    public string get_HttpMethod();
    public void set_HttpMethod(string value);
    internal bool IsSetHttpMethod();
    public Nullable`1<int> get_HttpStatus();
    public void set_HttpStatus(Nullable`1<int> value);
    internal bool IsSetHttpStatus();
    public string get_HttpURL();
    public void set_HttpURL(string value);
    internal bool IsSetHttpURL();
    public string get_UserAgent();
    public void set_UserAgent(string value);
    internal bool IsSetUserAgent();
}
public interface Amazon.XRay.Model.IBatchGetTracesPaginator {
    public IPaginatedEnumerable`1<BatchGetTracesResponse> Responses { get; }
    public IPaginatedEnumerable`1<Trace> Traces { get; }
    public abstract virtual IPaginatedEnumerable`1<BatchGetTracesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Trace> get_Traces();
}
public interface Amazon.XRay.Model.IGetGroupsPaginator {
    public IPaginatedEnumerable`1<GetGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<GroupSummary> Groups { get; }
    public abstract virtual IPaginatedEnumerable`1<GetGroupsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<GroupSummary> get_Groups();
}
public interface Amazon.XRay.Model.IGetInsightEventsPaginator {
    public IPaginatedEnumerable`1<GetInsightEventsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<GetInsightEventsResponse> get_Responses();
}
public interface Amazon.XRay.Model.IGetInsightSummariesPaginator {
    public IPaginatedEnumerable`1<GetInsightSummariesResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<GetInsightSummariesResponse> get_Responses();
}
public interface Amazon.XRay.Model.IGetSamplingRulesPaginator {
    public IPaginatedEnumerable`1<GetSamplingRulesResponse> Responses { get; }
    public IPaginatedEnumerable`1<SamplingRuleRecord> SamplingRuleRecords { get; }
    public abstract virtual IPaginatedEnumerable`1<GetSamplingRulesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<SamplingRuleRecord> get_SamplingRuleRecords();
}
public interface Amazon.XRay.Model.IGetSamplingStatisticSummariesPaginator {
    public IPaginatedEnumerable`1<GetSamplingStatisticSummariesResponse> Responses { get; }
    public IPaginatedEnumerable`1<SamplingStatisticSummary> SamplingStatisticSummaries { get; }
    public abstract virtual IPaginatedEnumerable`1<GetSamplingStatisticSummariesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<SamplingStatisticSummary> get_SamplingStatisticSummaries();
}
public interface Amazon.XRay.Model.IGetServiceGraphPaginator {
    public IPaginatedEnumerable`1<GetServiceGraphResponse> Responses { get; }
    public IPaginatedEnumerable`1<Service> Services { get; }
    public abstract virtual IPaginatedEnumerable`1<GetServiceGraphResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Service> get_Services();
}
public interface Amazon.XRay.Model.IGetTimeSeriesServiceStatisticsPaginator {
    public IPaginatedEnumerable`1<GetTimeSeriesServiceStatisticsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TimeSeriesServiceStatistics> TimeSeriesServiceStatistics { get; }
    public abstract virtual IPaginatedEnumerable`1<GetTimeSeriesServiceStatisticsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TimeSeriesServiceStatistics> get_TimeSeriesServiceStatistics();
}
public interface Amazon.XRay.Model.IGetTraceGraphPaginator {
    public IPaginatedEnumerable`1<GetTraceGraphResponse> Responses { get; }
    public IPaginatedEnumerable`1<Service> Services { get; }
    public abstract virtual IPaginatedEnumerable`1<GetTraceGraphResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Service> get_Services();
}
public interface Amazon.XRay.Model.IGetTraceSummariesPaginator {
    public IPaginatedEnumerable`1<GetTraceSummariesResponse> Responses { get; }
    public IPaginatedEnumerable`1<TraceSummary> TraceSummaries { get; }
    public abstract virtual IPaginatedEnumerable`1<GetTraceSummariesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TraceSummary> get_TraceSummaries();
}
public interface Amazon.XRay.Model.IListResourcePoliciesPaginator {
    public IPaginatedEnumerable`1<ListResourcePoliciesResponse> Responses { get; }
    public IPaginatedEnumerable`1<ResourcePolicy> ResourcePolicies { get; }
    public abstract virtual IPaginatedEnumerable`1<ListResourcePoliciesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ResourcePolicy> get_ResourcePolicies();
}
public interface Amazon.XRay.Model.IListTagsForResourcePaginator {
    public IPaginatedEnumerable`1<ListTagsForResourceResponse> Responses { get; }
    public IPaginatedEnumerable`1<Tag> Tags { get; }
    public abstract virtual IPaginatedEnumerable`1<ListTagsForResourceResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Tag> get_Tags();
}
public class Amazon.XRay.Model.Insight : object {
    private List`1<string> _categories;
    private RequestImpactStatistics _clientRequestImpactStatistics;
    private Nullable`1<DateTime> _endTime;
    private string _groupARN;
    private string _groupName;
    private string _insightId;
    private ServiceId _rootCauseServiceId;
    private RequestImpactStatistics _rootCauseServiceRequestImpactStatistics;
    private Nullable`1<DateTime> _startTime;
    private InsightState _state;
    private string _summary;
    private List`1<AnomalousService> _topAnomalousServices;
    public List`1<string> Categories { get; public set; }
    public RequestImpactStatistics ClientRequestImpactStatistics { get; public set; }
    public Nullable`1<DateTime> EndTime { get; public set; }
    [AWSPropertyAttribute]
public string GroupARN { get; public set; }
    [AWSPropertyAttribute]
public string GroupName { get; public set; }
    public string InsightId { get; public set; }
    public ServiceId RootCauseServiceId { get; public set; }
    public RequestImpactStatistics RootCauseServiceRequestImpactStatistics { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public InsightState State { get; public set; }
    public string Summary { get; public set; }
    public List`1<AnomalousService> TopAnomalousServices { get; public set; }
    public List`1<string> get_Categories();
    public void set_Categories(List`1<string> value);
    internal bool IsSetCategories();
    public RequestImpactStatistics get_ClientRequestImpactStatistics();
    public void set_ClientRequestImpactStatistics(RequestImpactStatistics value);
    internal bool IsSetClientRequestImpactStatistics();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public string get_GroupARN();
    public void set_GroupARN(string value);
    internal bool IsSetGroupARN();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public string get_InsightId();
    public void set_InsightId(string value);
    internal bool IsSetInsightId();
    public ServiceId get_RootCauseServiceId();
    public void set_RootCauseServiceId(ServiceId value);
    internal bool IsSetRootCauseServiceId();
    public RequestImpactStatistics get_RootCauseServiceRequestImpactStatistics();
    public void set_RootCauseServiceRequestImpactStatistics(RequestImpactStatistics value);
    internal bool IsSetRootCauseServiceRequestImpactStatistics();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public InsightState get_State();
    public void set_State(InsightState value);
    internal bool IsSetState();
    public string get_Summary();
    public void set_Summary(string value);
    internal bool IsSetSummary();
    public List`1<AnomalousService> get_TopAnomalousServices();
    public void set_TopAnomalousServices(List`1<AnomalousService> value);
    internal bool IsSetTopAnomalousServices();
}
public class Amazon.XRay.Model.InsightEvent : object {
    private RequestImpactStatistics _clientRequestImpactStatistics;
    private Nullable`1<DateTime> _eventTime;
    private RequestImpactStatistics _rootCauseServiceRequestImpactStatistics;
    private string _summary;
    private List`1<AnomalousService> _topAnomalousServices;
    public RequestImpactStatistics ClientRequestImpactStatistics { get; public set; }
    public Nullable`1<DateTime> EventTime { get; public set; }
    public RequestImpactStatistics RootCauseServiceRequestImpactStatistics { get; public set; }
    public string Summary { get; public set; }
    public List`1<AnomalousService> TopAnomalousServices { get; public set; }
    public RequestImpactStatistics get_ClientRequestImpactStatistics();
    public void set_ClientRequestImpactStatistics(RequestImpactStatistics value);
    internal bool IsSetClientRequestImpactStatistics();
    public Nullable`1<DateTime> get_EventTime();
    public void set_EventTime(Nullable`1<DateTime> value);
    internal bool IsSetEventTime();
    public RequestImpactStatistics get_RootCauseServiceRequestImpactStatistics();
    public void set_RootCauseServiceRequestImpactStatistics(RequestImpactStatistics value);
    internal bool IsSetRootCauseServiceRequestImpactStatistics();
    public string get_Summary();
    public void set_Summary(string value);
    internal bool IsSetSummary();
    public List`1<AnomalousService> get_TopAnomalousServices();
    public void set_TopAnomalousServices(List`1<AnomalousService> value);
    internal bool IsSetTopAnomalousServices();
}
public class Amazon.XRay.Model.InsightImpactGraphEdge : object {
    private Nullable`1<int> _referenceId;
    public Nullable`1<int> ReferenceId { get; public set; }
    public Nullable`1<int> get_ReferenceId();
    public void set_ReferenceId(Nullable`1<int> value);
    internal bool IsSetReferenceId();
}
public class Amazon.XRay.Model.InsightImpactGraphService : object {
    private string _accountId;
    private List`1<InsightImpactGraphEdge> _edges;
    private string _name;
    private List`1<string> _names;
    private Nullable`1<int> _referenceId;
    private string _type;
    public string AccountId { get; public set; }
    public List`1<InsightImpactGraphEdge> Edges { get; public set; }
    public string Name { get; public set; }
    public List`1<string> Names { get; public set; }
    public Nullable`1<int> ReferenceId { get; public set; }
    public string Type { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public List`1<InsightImpactGraphEdge> get_Edges();
    public void set_Edges(List`1<InsightImpactGraphEdge> value);
    internal bool IsSetEdges();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_Names();
    public void set_Names(List`1<string> value);
    internal bool IsSetNames();
    public Nullable`1<int> get_ReferenceId();
    public void set_ReferenceId(Nullable`1<int> value);
    internal bool IsSetReferenceId();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.XRay.Model.InsightsConfiguration : object {
    private Nullable`1<bool> _insightsEnabled;
    private Nullable`1<bool> _notificationsEnabled;
    public Nullable`1<bool> InsightsEnabled { get; public set; }
    public Nullable`1<bool> NotificationsEnabled { get; public set; }
    public Nullable`1<bool> get_InsightsEnabled();
    public void set_InsightsEnabled(Nullable`1<bool> value);
    internal bool IsSetInsightsEnabled();
    public Nullable`1<bool> get_NotificationsEnabled();
    public void set_NotificationsEnabled(Nullable`1<bool> value);
    internal bool IsSetNotificationsEnabled();
}
public class Amazon.XRay.Model.InsightSummary : object {
    private List`1<string> _categories;
    private RequestImpactStatistics _clientRequestImpactStatistics;
    private Nullable`1<DateTime> _endTime;
    private string _groupARN;
    private string _groupName;
    private string _insightId;
    private Nullable`1<DateTime> _lastUpdateTime;
    private ServiceId _rootCauseServiceId;
    private RequestImpactStatistics _rootCauseServiceRequestImpactStatistics;
    private Nullable`1<DateTime> _startTime;
    private InsightState _state;
    private string _summary;
    private List`1<AnomalousService> _topAnomalousServices;
    public List`1<string> Categories { get; public set; }
    public RequestImpactStatistics ClientRequestImpactStatistics { get; public set; }
    public Nullable`1<DateTime> EndTime { get; public set; }
    [AWSPropertyAttribute]
public string GroupARN { get; public set; }
    [AWSPropertyAttribute]
public string GroupName { get; public set; }
    public string InsightId { get; public set; }
    public Nullable`1<DateTime> LastUpdateTime { get; public set; }
    public ServiceId RootCauseServiceId { get; public set; }
    public RequestImpactStatistics RootCauseServiceRequestImpactStatistics { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public InsightState State { get; public set; }
    public string Summary { get; public set; }
    public List`1<AnomalousService> TopAnomalousServices { get; public set; }
    public List`1<string> get_Categories();
    public void set_Categories(List`1<string> value);
    internal bool IsSetCategories();
    public RequestImpactStatistics get_ClientRequestImpactStatistics();
    public void set_ClientRequestImpactStatistics(RequestImpactStatistics value);
    internal bool IsSetClientRequestImpactStatistics();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public string get_GroupARN();
    public void set_GroupARN(string value);
    internal bool IsSetGroupARN();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public string get_InsightId();
    public void set_InsightId(string value);
    internal bool IsSetInsightId();
    public Nullable`1<DateTime> get_LastUpdateTime();
    public void set_LastUpdateTime(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdateTime();
    public ServiceId get_RootCauseServiceId();
    public void set_RootCauseServiceId(ServiceId value);
    internal bool IsSetRootCauseServiceId();
    public RequestImpactStatistics get_RootCauseServiceRequestImpactStatistics();
    public void set_RootCauseServiceRequestImpactStatistics(RequestImpactStatistics value);
    internal bool IsSetRootCauseServiceRequestImpactStatistics();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public InsightState get_State();
    public void set_State(InsightState value);
    internal bool IsSetState();
    public string get_Summary();
    public void set_Summary(string value);
    internal bool IsSetSummary();
    public List`1<AnomalousService> get_TopAnomalousServices();
    public void set_TopAnomalousServices(List`1<AnomalousService> value);
    internal bool IsSetTopAnomalousServices();
}
public class Amazon.XRay.Model.InstanceIdDetail : object {
    private string _id;
    public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.AliasUnmarshaller : object {
    private static AliasUnmarshaller _instance;
    public static AliasUnmarshaller Instance { get; }
    private static AliasUnmarshaller();
    private sealed virtual override Alias Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.Alias,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Alias Unmarshall(JsonUnmarshallerContext context);
    public static AliasUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.AnnotationValueUnmarshaller : object {
    private static AnnotationValueUnmarshaller _instance;
    public static AnnotationValueUnmarshaller Instance { get; }
    private static AnnotationValueUnmarshaller();
    private sealed virtual override AnnotationValue Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.AnnotationValue,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AnnotationValue Unmarshall(JsonUnmarshallerContext context);
    public static AnnotationValueUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.AnomalousServiceUnmarshaller : object {
    private static AnomalousServiceUnmarshaller _instance;
    public static AnomalousServiceUnmarshaller Instance { get; }
    private static AnomalousServiceUnmarshaller();
    private sealed virtual override AnomalousService Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.AnomalousService,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AnomalousService Unmarshall(JsonUnmarshallerContext context);
    public static AnomalousServiceUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.AvailabilityZoneDetailUnmarshaller : object {
    private static AvailabilityZoneDetailUnmarshaller _instance;
    public static AvailabilityZoneDetailUnmarshaller Instance { get; }
    private static AvailabilityZoneDetailUnmarshaller();
    private sealed virtual override AvailabilityZoneDetail Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.AvailabilityZoneDetail,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AvailabilityZoneDetail Unmarshall(JsonUnmarshallerContext context);
    public static AvailabilityZoneDetailUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.BackendConnectionErrorsMarshaller : object {
    public static BackendConnectionErrorsMarshaller Instance;
    private static BackendConnectionErrorsMarshaller();
    public sealed virtual void Marshall(BackendConnectionErrors requestObject, JsonMarshallerContext context);
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.BatchGetTracesRequestMarshaller : object {
    private static BatchGetTracesRequestMarshaller _instance;
    public static BatchGetTracesRequestMarshaller Instance { get; }
    private static BatchGetTracesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchGetTracesRequest publicRequest);
    internal static BatchGetTracesRequestMarshaller GetInstance();
    public static BatchGetTracesRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.BatchGetTracesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchGetTracesResponseUnmarshaller _instance;
    public static BatchGetTracesResponseUnmarshaller Instance { get; }
    private static BatchGetTracesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchGetTracesResponseUnmarshaller GetInstance();
    public static BatchGetTracesResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.CreateGroupRequestMarshaller : object {
    private static CreateGroupRequestMarshaller _instance;
    public static CreateGroupRequestMarshaller Instance { get; }
    private static CreateGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateGroupRequest publicRequest);
    internal static CreateGroupRequestMarshaller GetInstance();
    public static CreateGroupRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.CreateGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateGroupResponseUnmarshaller _instance;
    public static CreateGroupResponseUnmarshaller Instance { get; }
    private static CreateGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateGroupResponseUnmarshaller GetInstance();
    public static CreateGroupResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.CreateSamplingRuleRequestMarshaller : object {
    private static CreateSamplingRuleRequestMarshaller _instance;
    public static CreateSamplingRuleRequestMarshaller Instance { get; }
    private static CreateSamplingRuleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateSamplingRuleRequest publicRequest);
    internal static CreateSamplingRuleRequestMarshaller GetInstance();
    public static CreateSamplingRuleRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.CreateSamplingRuleResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateSamplingRuleResponseUnmarshaller _instance;
    public static CreateSamplingRuleResponseUnmarshaller Instance { get; }
    private static CreateSamplingRuleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateSamplingRuleResponseUnmarshaller GetInstance();
    public static CreateSamplingRuleResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.DeleteGroupRequestMarshaller : object {
    private static DeleteGroupRequestMarshaller _instance;
    public static DeleteGroupRequestMarshaller Instance { get; }
    private static DeleteGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteGroupRequest publicRequest);
    internal static DeleteGroupRequestMarshaller GetInstance();
    public static DeleteGroupRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.DeleteGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteGroupResponseUnmarshaller _instance;
    public static DeleteGroupResponseUnmarshaller Instance { get; }
    private static DeleteGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteGroupResponseUnmarshaller GetInstance();
    public static DeleteGroupResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller : object {
    private static DeleteResourcePolicyRequestMarshaller _instance;
    public static DeleteResourcePolicyRequestMarshaller Instance { get; }
    private static DeleteResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteResourcePolicyRequest publicRequest);
    internal static DeleteResourcePolicyRequestMarshaller GetInstance();
    public static DeleteResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteResourcePolicyResponseUnmarshaller _instance;
    public static DeleteResourcePolicyResponseUnmarshaller Instance { get; }
    private static DeleteResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteResourcePolicyResponseUnmarshaller GetInstance();
    public static DeleteResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.DeleteSamplingRuleRequestMarshaller : object {
    private static DeleteSamplingRuleRequestMarshaller _instance;
    public static DeleteSamplingRuleRequestMarshaller Instance { get; }
    private static DeleteSamplingRuleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteSamplingRuleRequest publicRequest);
    internal static DeleteSamplingRuleRequestMarshaller GetInstance();
    public static DeleteSamplingRuleRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.DeleteSamplingRuleResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteSamplingRuleResponseUnmarshaller _instance;
    public static DeleteSamplingRuleResponseUnmarshaller Instance { get; }
    private static DeleteSamplingRuleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteSamplingRuleResponseUnmarshaller GetInstance();
    public static DeleteSamplingRuleResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.EdgeStatisticsUnmarshaller : object {
    private static EdgeStatisticsUnmarshaller _instance;
    public static EdgeStatisticsUnmarshaller Instance { get; }
    private static EdgeStatisticsUnmarshaller();
    private sealed virtual override EdgeStatistics Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.EdgeStatistics,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EdgeStatistics Unmarshall(JsonUnmarshallerContext context);
    public static EdgeStatisticsUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.EdgeUnmarshaller : object {
    private static EdgeUnmarshaller _instance;
    public static EdgeUnmarshaller Instance { get; }
    private static EdgeUnmarshaller();
    private sealed virtual override Edge Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.Edge,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Edge Unmarshall(JsonUnmarshallerContext context);
    public static EdgeUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.EncryptionConfigUnmarshaller : object {
    private static EncryptionConfigUnmarshaller _instance;
    public static EncryptionConfigUnmarshaller Instance { get; }
    private static EncryptionConfigUnmarshaller();
    private sealed virtual override EncryptionConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.EncryptionConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EncryptionConfig Unmarshall(JsonUnmarshallerContext context);
    public static EncryptionConfigUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.ErrorRootCauseEntityUnmarshaller : object {
    private static ErrorRootCauseEntityUnmarshaller _instance;
    public static ErrorRootCauseEntityUnmarshaller Instance { get; }
    private static ErrorRootCauseEntityUnmarshaller();
    private sealed virtual override ErrorRootCauseEntity Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.ErrorRootCauseEntity,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ErrorRootCauseEntity Unmarshall(JsonUnmarshallerContext context);
    public static ErrorRootCauseEntityUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.ErrorRootCauseServiceUnmarshaller : object {
    private static ErrorRootCauseServiceUnmarshaller _instance;
    public static ErrorRootCauseServiceUnmarshaller Instance { get; }
    private static ErrorRootCauseServiceUnmarshaller();
    private sealed virtual override ErrorRootCauseService Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.ErrorRootCauseService,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ErrorRootCauseService Unmarshall(JsonUnmarshallerContext context);
    public static ErrorRootCauseServiceUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.ErrorRootCauseUnmarshaller : object {
    private static ErrorRootCauseUnmarshaller _instance;
    public static ErrorRootCauseUnmarshaller Instance { get; }
    private static ErrorRootCauseUnmarshaller();
    private sealed virtual override ErrorRootCause Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.ErrorRootCause,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ErrorRootCause Unmarshall(JsonUnmarshallerContext context);
    public static ErrorRootCauseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.ErrorStatisticsUnmarshaller : object {
    private static ErrorStatisticsUnmarshaller _instance;
    public static ErrorStatisticsUnmarshaller Instance { get; }
    private static ErrorStatisticsUnmarshaller();
    private sealed virtual override ErrorStatistics Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.ErrorStatistics,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ErrorStatistics Unmarshall(JsonUnmarshallerContext context);
    public static ErrorStatisticsUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.FaultRootCauseEntityUnmarshaller : object {
    private static FaultRootCauseEntityUnmarshaller _instance;
    public static FaultRootCauseEntityUnmarshaller Instance { get; }
    private static FaultRootCauseEntityUnmarshaller();
    private sealed virtual override FaultRootCauseEntity Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.FaultRootCauseEntity,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FaultRootCauseEntity Unmarshall(JsonUnmarshallerContext context);
    public static FaultRootCauseEntityUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.FaultRootCauseServiceUnmarshaller : object {
    private static FaultRootCauseServiceUnmarshaller _instance;
    public static FaultRootCauseServiceUnmarshaller Instance { get; }
    private static FaultRootCauseServiceUnmarshaller();
    private sealed virtual override FaultRootCauseService Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.FaultRootCauseService,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FaultRootCauseService Unmarshall(JsonUnmarshallerContext context);
    public static FaultRootCauseServiceUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.FaultRootCauseUnmarshaller : object {
    private static FaultRootCauseUnmarshaller _instance;
    public static FaultRootCauseUnmarshaller Instance { get; }
    private static FaultRootCauseUnmarshaller();
    private sealed virtual override FaultRootCause Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.FaultRootCause,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FaultRootCause Unmarshall(JsonUnmarshallerContext context);
    public static FaultRootCauseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.FaultStatisticsUnmarshaller : object {
    private static FaultStatisticsUnmarshaller _instance;
    public static FaultStatisticsUnmarshaller Instance { get; }
    private static FaultStatisticsUnmarshaller();
    private sealed virtual override FaultStatistics Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.FaultStatistics,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FaultStatistics Unmarshall(JsonUnmarshallerContext context);
    public static FaultStatisticsUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.ForecastStatisticsUnmarshaller : object {
    private static ForecastStatisticsUnmarshaller _instance;
    public static ForecastStatisticsUnmarshaller Instance { get; }
    private static ForecastStatisticsUnmarshaller();
    private sealed virtual override ForecastStatistics Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.ForecastStatistics,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ForecastStatistics Unmarshall(JsonUnmarshallerContext context);
    public static ForecastStatisticsUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetEncryptionConfigRequestMarshaller : object {
    private static GetEncryptionConfigRequestMarshaller _instance;
    public static GetEncryptionConfigRequestMarshaller Instance { get; }
    private static GetEncryptionConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetEncryptionConfigRequest publicRequest);
    internal static GetEncryptionConfigRequestMarshaller GetInstance();
    public static GetEncryptionConfigRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetEncryptionConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetEncryptionConfigResponseUnmarshaller _instance;
    public static GetEncryptionConfigResponseUnmarshaller Instance { get; }
    private static GetEncryptionConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetEncryptionConfigResponseUnmarshaller GetInstance();
    public static GetEncryptionConfigResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetGroupRequestMarshaller : object {
    private static GetGroupRequestMarshaller _instance;
    public static GetGroupRequestMarshaller Instance { get; }
    private static GetGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetGroupRequest publicRequest);
    internal static GetGroupRequestMarshaller GetInstance();
    public static GetGroupRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetGroupResponseUnmarshaller _instance;
    public static GetGroupResponseUnmarshaller Instance { get; }
    private static GetGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetGroupResponseUnmarshaller GetInstance();
    public static GetGroupResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetGroupsRequestMarshaller : object {
    private static GetGroupsRequestMarshaller _instance;
    public static GetGroupsRequestMarshaller Instance { get; }
    private static GetGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetGroupsRequest publicRequest);
    internal static GetGroupsRequestMarshaller GetInstance();
    public static GetGroupsRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetGroupsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetGroupsResponseUnmarshaller _instance;
    public static GetGroupsResponseUnmarshaller Instance { get; }
    private static GetGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetGroupsResponseUnmarshaller GetInstance();
    public static GetGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetInsightEventsRequestMarshaller : object {
    private static GetInsightEventsRequestMarshaller _instance;
    public static GetInsightEventsRequestMarshaller Instance { get; }
    private static GetInsightEventsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetInsightEventsRequest publicRequest);
    internal static GetInsightEventsRequestMarshaller GetInstance();
    public static GetInsightEventsRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetInsightEventsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetInsightEventsResponseUnmarshaller _instance;
    public static GetInsightEventsResponseUnmarshaller Instance { get; }
    private static GetInsightEventsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetInsightEventsResponseUnmarshaller GetInstance();
    public static GetInsightEventsResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetInsightImpactGraphRequestMarshaller : object {
    private static GetInsightImpactGraphRequestMarshaller _instance;
    public static GetInsightImpactGraphRequestMarshaller Instance { get; }
    private static GetInsightImpactGraphRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetInsightImpactGraphRequest publicRequest);
    internal static GetInsightImpactGraphRequestMarshaller GetInstance();
    public static GetInsightImpactGraphRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetInsightImpactGraphResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetInsightImpactGraphResponseUnmarshaller _instance;
    public static GetInsightImpactGraphResponseUnmarshaller Instance { get; }
    private static GetInsightImpactGraphResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetInsightImpactGraphResponseUnmarshaller GetInstance();
    public static GetInsightImpactGraphResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetInsightRequestMarshaller : object {
    private static GetInsightRequestMarshaller _instance;
    public static GetInsightRequestMarshaller Instance { get; }
    private static GetInsightRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetInsightRequest publicRequest);
    internal static GetInsightRequestMarshaller GetInstance();
    public static GetInsightRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetInsightResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetInsightResponseUnmarshaller _instance;
    public static GetInsightResponseUnmarshaller Instance { get; }
    private static GetInsightResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetInsightResponseUnmarshaller GetInstance();
    public static GetInsightResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetInsightSummariesRequestMarshaller : object {
    private static GetInsightSummariesRequestMarshaller _instance;
    public static GetInsightSummariesRequestMarshaller Instance { get; }
    private static GetInsightSummariesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetInsightSummariesRequest publicRequest);
    internal static GetInsightSummariesRequestMarshaller GetInstance();
    public static GetInsightSummariesRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetInsightSummariesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetInsightSummariesResponseUnmarshaller _instance;
    public static GetInsightSummariesResponseUnmarshaller Instance { get; }
    private static GetInsightSummariesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetInsightSummariesResponseUnmarshaller GetInstance();
    public static GetInsightSummariesResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetSamplingRulesRequestMarshaller : object {
    private static GetSamplingRulesRequestMarshaller _instance;
    public static GetSamplingRulesRequestMarshaller Instance { get; }
    private static GetSamplingRulesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetSamplingRulesRequest publicRequest);
    internal static GetSamplingRulesRequestMarshaller GetInstance();
    public static GetSamplingRulesRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetSamplingRulesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetSamplingRulesResponseUnmarshaller _instance;
    public static GetSamplingRulesResponseUnmarshaller Instance { get; }
    private static GetSamplingRulesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetSamplingRulesResponseUnmarshaller GetInstance();
    public static GetSamplingRulesResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetSamplingStatisticSummariesRequestMarshaller : object {
    private static GetSamplingStatisticSummariesRequestMarshaller _instance;
    public static GetSamplingStatisticSummariesRequestMarshaller Instance { get; }
    private static GetSamplingStatisticSummariesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetSamplingStatisticSummariesRequest publicRequest);
    internal static GetSamplingStatisticSummariesRequestMarshaller GetInstance();
    public static GetSamplingStatisticSummariesRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetSamplingStatisticSummariesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetSamplingStatisticSummariesResponseUnmarshaller _instance;
    public static GetSamplingStatisticSummariesResponseUnmarshaller Instance { get; }
    private static GetSamplingStatisticSummariesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetSamplingStatisticSummariesResponseUnmarshaller GetInstance();
    public static GetSamplingStatisticSummariesResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetSamplingTargetsRequestMarshaller : object {
    private static GetSamplingTargetsRequestMarshaller _instance;
    public static GetSamplingTargetsRequestMarshaller Instance { get; }
    private static GetSamplingTargetsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetSamplingTargetsRequest publicRequest);
    internal static GetSamplingTargetsRequestMarshaller GetInstance();
    public static GetSamplingTargetsRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetSamplingTargetsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetSamplingTargetsResponseUnmarshaller _instance;
    public static GetSamplingTargetsResponseUnmarshaller Instance { get; }
    private static GetSamplingTargetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetSamplingTargetsResponseUnmarshaller GetInstance();
    public static GetSamplingTargetsResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetServiceGraphRequestMarshaller : object {
    private static GetServiceGraphRequestMarshaller _instance;
    public static GetServiceGraphRequestMarshaller Instance { get; }
    private static GetServiceGraphRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetServiceGraphRequest publicRequest);
    internal static GetServiceGraphRequestMarshaller GetInstance();
    public static GetServiceGraphRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetServiceGraphResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetServiceGraphResponseUnmarshaller _instance;
    public static GetServiceGraphResponseUnmarshaller Instance { get; }
    private static GetServiceGraphResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetServiceGraphResponseUnmarshaller GetInstance();
    public static GetServiceGraphResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetTimeSeriesServiceStatisticsRequestMarshaller : object {
    private static GetTimeSeriesServiceStatisticsRequestMarshaller _instance;
    public static GetTimeSeriesServiceStatisticsRequestMarshaller Instance { get; }
    private static GetTimeSeriesServiceStatisticsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTimeSeriesServiceStatisticsRequest publicRequest);
    internal static GetTimeSeriesServiceStatisticsRequestMarshaller GetInstance();
    public static GetTimeSeriesServiceStatisticsRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetTimeSeriesServiceStatisticsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetTimeSeriesServiceStatisticsResponseUnmarshaller _instance;
    public static GetTimeSeriesServiceStatisticsResponseUnmarshaller Instance { get; }
    private static GetTimeSeriesServiceStatisticsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTimeSeriesServiceStatisticsResponseUnmarshaller GetInstance();
    public static GetTimeSeriesServiceStatisticsResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetTraceGraphRequestMarshaller : object {
    private static GetTraceGraphRequestMarshaller _instance;
    public static GetTraceGraphRequestMarshaller Instance { get; }
    private static GetTraceGraphRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTraceGraphRequest publicRequest);
    internal static GetTraceGraphRequestMarshaller GetInstance();
    public static GetTraceGraphRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetTraceGraphResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetTraceGraphResponseUnmarshaller _instance;
    public static GetTraceGraphResponseUnmarshaller Instance { get; }
    private static GetTraceGraphResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTraceGraphResponseUnmarshaller GetInstance();
    public static GetTraceGraphResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetTraceSummariesRequestMarshaller : object {
    private static GetTraceSummariesRequestMarshaller _instance;
    public static GetTraceSummariesRequestMarshaller Instance { get; }
    private static GetTraceSummariesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTraceSummariesRequest publicRequest);
    internal static GetTraceSummariesRequestMarshaller GetInstance();
    public static GetTraceSummariesRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GetTraceSummariesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetTraceSummariesResponseUnmarshaller _instance;
    public static GetTraceSummariesResponseUnmarshaller Instance { get; }
    private static GetTraceSummariesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTraceSummariesResponseUnmarshaller GetInstance();
    public static GetTraceSummariesResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GroupSummaryUnmarshaller : object {
    private static GroupSummaryUnmarshaller _instance;
    public static GroupSummaryUnmarshaller Instance { get; }
    private static GroupSummaryUnmarshaller();
    private sealed virtual override GroupSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.GroupSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GroupSummary Unmarshall(JsonUnmarshallerContext context);
    public static GroupSummaryUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.GroupUnmarshaller : object {
    private static GroupUnmarshaller _instance;
    public static GroupUnmarshaller Instance { get; }
    private static GroupUnmarshaller();
    private sealed virtual override Group Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.Group,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Group Unmarshall(JsonUnmarshallerContext context);
    public static GroupUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.HistogramEntryUnmarshaller : object {
    private static HistogramEntryUnmarshaller _instance;
    public static HistogramEntryUnmarshaller Instance { get; }
    private static HistogramEntryUnmarshaller();
    private sealed virtual override HistogramEntry Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.HistogramEntry,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HistogramEntry Unmarshall(JsonUnmarshallerContext context);
    public static HistogramEntryUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.HttpUnmarshaller : object {
    private static HttpUnmarshaller _instance;
    public static HttpUnmarshaller Instance { get; }
    private static HttpUnmarshaller();
    private sealed virtual override Http Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.Http,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Http Unmarshall(JsonUnmarshallerContext context);
    public static HttpUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.InsightEventUnmarshaller : object {
    private static InsightEventUnmarshaller _instance;
    public static InsightEventUnmarshaller Instance { get; }
    private static InsightEventUnmarshaller();
    private sealed virtual override InsightEvent Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.InsightEvent,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InsightEvent Unmarshall(JsonUnmarshallerContext context);
    public static InsightEventUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.InsightImpactGraphEdgeUnmarshaller : object {
    private static InsightImpactGraphEdgeUnmarshaller _instance;
    public static InsightImpactGraphEdgeUnmarshaller Instance { get; }
    private static InsightImpactGraphEdgeUnmarshaller();
    private sealed virtual override InsightImpactGraphEdge Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.InsightImpactGraphEdge,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InsightImpactGraphEdge Unmarshall(JsonUnmarshallerContext context);
    public static InsightImpactGraphEdgeUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.InsightImpactGraphServiceUnmarshaller : object {
    private static InsightImpactGraphServiceUnmarshaller _instance;
    public static InsightImpactGraphServiceUnmarshaller Instance { get; }
    private static InsightImpactGraphServiceUnmarshaller();
    private sealed virtual override InsightImpactGraphService Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.InsightImpactGraphService,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InsightImpactGraphService Unmarshall(JsonUnmarshallerContext context);
    public static InsightImpactGraphServiceUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.InsightsConfigurationMarshaller : object {
    public static InsightsConfigurationMarshaller Instance;
    private static InsightsConfigurationMarshaller();
    public sealed virtual void Marshall(InsightsConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.InsightsConfigurationUnmarshaller : object {
    private static InsightsConfigurationUnmarshaller _instance;
    public static InsightsConfigurationUnmarshaller Instance { get; }
    private static InsightsConfigurationUnmarshaller();
    private sealed virtual override InsightsConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.InsightsConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InsightsConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static InsightsConfigurationUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.InsightSummaryUnmarshaller : object {
    private static InsightSummaryUnmarshaller _instance;
    public static InsightSummaryUnmarshaller Instance { get; }
    private static InsightSummaryUnmarshaller();
    private sealed virtual override InsightSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.InsightSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InsightSummary Unmarshall(JsonUnmarshallerContext context);
    public static InsightSummaryUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.InsightUnmarshaller : object {
    private static InsightUnmarshaller _instance;
    public static InsightUnmarshaller Instance { get; }
    private static InsightUnmarshaller();
    private sealed virtual override Insight Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.Insight,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Insight Unmarshall(JsonUnmarshallerContext context);
    public static InsightUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.InstanceIdDetailUnmarshaller : object {
    private static InstanceIdDetailUnmarshaller _instance;
    public static InstanceIdDetailUnmarshaller Instance { get; }
    private static InstanceIdDetailUnmarshaller();
    private sealed virtual override InstanceIdDetail Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.InstanceIdDetail,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceIdDetail Unmarshall(JsonUnmarshallerContext context);
    public static InstanceIdDetailUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.InvalidPolicyRevisionIdExceptionUnmarshaller : object {
    private static InvalidPolicyRevisionIdExceptionUnmarshaller _instance;
    public static InvalidPolicyRevisionIdExceptionUnmarshaller Instance { get; }
    private static InvalidPolicyRevisionIdExceptionUnmarshaller();
    public sealed virtual InvalidPolicyRevisionIdException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidPolicyRevisionIdException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidPolicyRevisionIdExceptionUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.InvalidRequestExceptionUnmarshaller : object {
    private static InvalidRequestExceptionUnmarshaller _instance;
    public static InvalidRequestExceptionUnmarshaller Instance { get; }
    private static InvalidRequestExceptionUnmarshaller();
    public sealed virtual InvalidRequestException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidRequestException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidRequestExceptionUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.ListResourcePoliciesRequestMarshaller : object {
    private static ListResourcePoliciesRequestMarshaller _instance;
    public static ListResourcePoliciesRequestMarshaller Instance { get; }
    private static ListResourcePoliciesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListResourcePoliciesRequest publicRequest);
    internal static ListResourcePoliciesRequestMarshaller GetInstance();
    public static ListResourcePoliciesRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.ListResourcePoliciesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListResourcePoliciesResponseUnmarshaller _instance;
    public static ListResourcePoliciesResponseUnmarshaller Instance { get; }
    private static ListResourcePoliciesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListResourcePoliciesResponseUnmarshaller GetInstance();
    public static ListResourcePoliciesResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller : object {
    private static ListTagsForResourceRequestMarshaller _instance;
    public static ListTagsForResourceRequestMarshaller Instance { get; }
    private static ListTagsForResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsForResourceRequest publicRequest);
    internal static ListTagsForResourceRequestMarshaller GetInstance();
    public static ListTagsForResourceRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTagsForResourceResponseUnmarshaller _instance;
    public static ListTagsForResourceResponseUnmarshaller Instance { get; }
    private static ListTagsForResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsForResourceResponseUnmarshaller GetInstance();
    public static ListTagsForResourceResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.LockoutPreventionExceptionUnmarshaller : object {
    private static LockoutPreventionExceptionUnmarshaller _instance;
    public static LockoutPreventionExceptionUnmarshaller Instance { get; }
    private static LockoutPreventionExceptionUnmarshaller();
    public sealed virtual LockoutPreventionException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual LockoutPreventionException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static LockoutPreventionExceptionUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.MalformedPolicyDocumentExceptionUnmarshaller : object {
    private static MalformedPolicyDocumentExceptionUnmarshaller _instance;
    public static MalformedPolicyDocumentExceptionUnmarshaller Instance { get; }
    private static MalformedPolicyDocumentExceptionUnmarshaller();
    public sealed virtual MalformedPolicyDocumentException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual MalformedPolicyDocumentException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static MalformedPolicyDocumentExceptionUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.PolicyCountLimitExceededExceptionUnmarshaller : object {
    private static PolicyCountLimitExceededExceptionUnmarshaller _instance;
    public static PolicyCountLimitExceededExceptionUnmarshaller Instance { get; }
    private static PolicyCountLimitExceededExceptionUnmarshaller();
    public sealed virtual PolicyCountLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual PolicyCountLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static PolicyCountLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.PolicySizeLimitExceededExceptionUnmarshaller : object {
    private static PolicySizeLimitExceededExceptionUnmarshaller _instance;
    public static PolicySizeLimitExceededExceptionUnmarshaller Instance { get; }
    private static PolicySizeLimitExceededExceptionUnmarshaller();
    public sealed virtual PolicySizeLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual PolicySizeLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static PolicySizeLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.PutEncryptionConfigRequestMarshaller : object {
    private static PutEncryptionConfigRequestMarshaller _instance;
    public static PutEncryptionConfigRequestMarshaller Instance { get; }
    private static PutEncryptionConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutEncryptionConfigRequest publicRequest);
    internal static PutEncryptionConfigRequestMarshaller GetInstance();
    public static PutEncryptionConfigRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.PutEncryptionConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutEncryptionConfigResponseUnmarshaller _instance;
    public static PutEncryptionConfigResponseUnmarshaller Instance { get; }
    private static PutEncryptionConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutEncryptionConfigResponseUnmarshaller GetInstance();
    public static PutEncryptionConfigResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller : object {
    private static PutResourcePolicyRequestMarshaller _instance;
    public static PutResourcePolicyRequestMarshaller Instance { get; }
    private static PutResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutResourcePolicyRequest publicRequest);
    internal static PutResourcePolicyRequestMarshaller GetInstance();
    public static PutResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutResourcePolicyResponseUnmarshaller _instance;
    public static PutResourcePolicyResponseUnmarshaller Instance { get; }
    private static PutResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutResourcePolicyResponseUnmarshaller GetInstance();
    public static PutResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.PutTelemetryRecordsRequestMarshaller : object {
    private static PutTelemetryRecordsRequestMarshaller _instance;
    public static PutTelemetryRecordsRequestMarshaller Instance { get; }
    private static PutTelemetryRecordsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutTelemetryRecordsRequest publicRequest);
    internal static PutTelemetryRecordsRequestMarshaller GetInstance();
    public static PutTelemetryRecordsRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.PutTelemetryRecordsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutTelemetryRecordsResponseUnmarshaller _instance;
    public static PutTelemetryRecordsResponseUnmarshaller Instance { get; }
    private static PutTelemetryRecordsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutTelemetryRecordsResponseUnmarshaller GetInstance();
    public static PutTelemetryRecordsResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.PutTraceSegmentsRequestMarshaller : object {
    private static PutTraceSegmentsRequestMarshaller _instance;
    public static PutTraceSegmentsRequestMarshaller Instance { get; }
    private static PutTraceSegmentsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutTraceSegmentsRequest publicRequest);
    internal static PutTraceSegmentsRequestMarshaller GetInstance();
    public static PutTraceSegmentsRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.PutTraceSegmentsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutTraceSegmentsResponseUnmarshaller _instance;
    public static PutTraceSegmentsResponseUnmarshaller Instance { get; }
    private static PutTraceSegmentsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutTraceSegmentsResponseUnmarshaller GetInstance();
    public static PutTraceSegmentsResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.RequestImpactStatisticsUnmarshaller : object {
    private static RequestImpactStatisticsUnmarshaller _instance;
    public static RequestImpactStatisticsUnmarshaller Instance { get; }
    private static RequestImpactStatisticsUnmarshaller();
    private sealed virtual override RequestImpactStatistics Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.RequestImpactStatistics,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RequestImpactStatistics Unmarshall(JsonUnmarshallerContext context);
    public static RequestImpactStatisticsUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.ResourceARNDetailUnmarshaller : object {
    private static ResourceARNDetailUnmarshaller _instance;
    public static ResourceARNDetailUnmarshaller Instance { get; }
    private static ResourceARNDetailUnmarshaller();
    private sealed virtual override ResourceARNDetail Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.ResourceARNDetail,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourceARNDetail Unmarshall(JsonUnmarshallerContext context);
    public static ResourceARNDetailUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller : object {
    private static ResourceNotFoundExceptionUnmarshaller _instance;
    public static ResourceNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourceNotFoundExceptionUnmarshaller();
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.ResourcePolicyUnmarshaller : object {
    private static ResourcePolicyUnmarshaller _instance;
    public static ResourcePolicyUnmarshaller Instance { get; }
    private static ResourcePolicyUnmarshaller();
    private sealed virtual override ResourcePolicy Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.ResourcePolicy,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourcePolicy Unmarshall(JsonUnmarshallerContext context);
    public static ResourcePolicyUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.ResponseTimeRootCauseEntityUnmarshaller : object {
    private static ResponseTimeRootCauseEntityUnmarshaller _instance;
    public static ResponseTimeRootCauseEntityUnmarshaller Instance { get; }
    private static ResponseTimeRootCauseEntityUnmarshaller();
    private sealed virtual override ResponseTimeRootCauseEntity Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.ResponseTimeRootCauseEntity,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseTimeRootCauseEntity Unmarshall(JsonUnmarshallerContext context);
    public static ResponseTimeRootCauseEntityUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.ResponseTimeRootCauseServiceUnmarshaller : object {
    private static ResponseTimeRootCauseServiceUnmarshaller _instance;
    public static ResponseTimeRootCauseServiceUnmarshaller Instance { get; }
    private static ResponseTimeRootCauseServiceUnmarshaller();
    private sealed virtual override ResponseTimeRootCauseService Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.ResponseTimeRootCauseService,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseTimeRootCauseService Unmarshall(JsonUnmarshallerContext context);
    public static ResponseTimeRootCauseServiceUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.ResponseTimeRootCauseUnmarshaller : object {
    private static ResponseTimeRootCauseUnmarshaller _instance;
    public static ResponseTimeRootCauseUnmarshaller Instance { get; }
    private static ResponseTimeRootCauseUnmarshaller();
    private sealed virtual override ResponseTimeRootCause Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.ResponseTimeRootCause,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseTimeRootCause Unmarshall(JsonUnmarshallerContext context);
    public static ResponseTimeRootCauseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.RootCauseExceptionUnmarshaller : object {
    private static RootCauseExceptionUnmarshaller _instance;
    public static RootCauseExceptionUnmarshaller Instance { get; }
    private static RootCauseExceptionUnmarshaller();
    private sealed virtual override RootCauseException Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.RootCauseException,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RootCauseException Unmarshall(JsonUnmarshallerContext context);
    public static RootCauseExceptionUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.RuleLimitExceededExceptionUnmarshaller : object {
    private static RuleLimitExceededExceptionUnmarshaller _instance;
    public static RuleLimitExceededExceptionUnmarshaller Instance { get; }
    private static RuleLimitExceededExceptionUnmarshaller();
    public sealed virtual RuleLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual RuleLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static RuleLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.SamplingRuleMarshaller : object {
    public static SamplingRuleMarshaller Instance;
    private static SamplingRuleMarshaller();
    public sealed virtual void Marshall(SamplingRule requestObject, JsonMarshallerContext context);
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.SamplingRuleRecordUnmarshaller : object {
    private static SamplingRuleRecordUnmarshaller _instance;
    public static SamplingRuleRecordUnmarshaller Instance { get; }
    private static SamplingRuleRecordUnmarshaller();
    private sealed virtual override SamplingRuleRecord Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.SamplingRuleRecord,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SamplingRuleRecord Unmarshall(JsonUnmarshallerContext context);
    public static SamplingRuleRecordUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.SamplingRuleUnmarshaller : object {
    private static SamplingRuleUnmarshaller _instance;
    public static SamplingRuleUnmarshaller Instance { get; }
    private static SamplingRuleUnmarshaller();
    private sealed virtual override SamplingRule Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.SamplingRule,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SamplingRule Unmarshall(JsonUnmarshallerContext context);
    public static SamplingRuleUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.SamplingRuleUpdateMarshaller : object {
    public static SamplingRuleUpdateMarshaller Instance;
    private static SamplingRuleUpdateMarshaller();
    public sealed virtual void Marshall(SamplingRuleUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.SamplingStatisticsDocumentMarshaller : object {
    public static SamplingStatisticsDocumentMarshaller Instance;
    private static SamplingStatisticsDocumentMarshaller();
    public sealed virtual void Marshall(SamplingStatisticsDocument requestObject, JsonMarshallerContext context);
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.SamplingStatisticSummaryUnmarshaller : object {
    private static SamplingStatisticSummaryUnmarshaller _instance;
    public static SamplingStatisticSummaryUnmarshaller Instance { get; }
    private static SamplingStatisticSummaryUnmarshaller();
    private sealed virtual override SamplingStatisticSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.SamplingStatisticSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SamplingStatisticSummary Unmarshall(JsonUnmarshallerContext context);
    public static SamplingStatisticSummaryUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.SamplingStrategyMarshaller : object {
    public static SamplingStrategyMarshaller Instance;
    private static SamplingStrategyMarshaller();
    public sealed virtual void Marshall(SamplingStrategy requestObject, JsonMarshallerContext context);
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.SamplingTargetDocumentUnmarshaller : object {
    private static SamplingTargetDocumentUnmarshaller _instance;
    public static SamplingTargetDocumentUnmarshaller Instance { get; }
    private static SamplingTargetDocumentUnmarshaller();
    private sealed virtual override SamplingTargetDocument Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.SamplingTargetDocument,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SamplingTargetDocument Unmarshall(JsonUnmarshallerContext context);
    public static SamplingTargetDocumentUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.SegmentUnmarshaller : object {
    private static SegmentUnmarshaller _instance;
    public static SegmentUnmarshaller Instance { get; }
    private static SegmentUnmarshaller();
    private sealed virtual override Segment Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.Segment,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Segment Unmarshall(JsonUnmarshallerContext context);
    public static SegmentUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.ServiceIdUnmarshaller : object {
    private static ServiceIdUnmarshaller _instance;
    public static ServiceIdUnmarshaller Instance { get; }
    private static ServiceIdUnmarshaller();
    private sealed virtual override ServiceId Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.ServiceId,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ServiceId Unmarshall(JsonUnmarshallerContext context);
    public static ServiceIdUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.ServiceStatisticsUnmarshaller : object {
    private static ServiceStatisticsUnmarshaller _instance;
    public static ServiceStatisticsUnmarshaller Instance { get; }
    private static ServiceStatisticsUnmarshaller();
    private sealed virtual override ServiceStatistics Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.ServiceStatistics,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ServiceStatistics Unmarshall(JsonUnmarshallerContext context);
    public static ServiceStatisticsUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.ServiceUnmarshaller : object {
    private static ServiceUnmarshaller _instance;
    public static ServiceUnmarshaller Instance { get; }
    private static ServiceUnmarshaller();
    private sealed virtual override Service Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.Service,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Service Unmarshall(JsonUnmarshallerContext context);
    public static ServiceUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.TagMarshaller : object {
    public static TagMarshaller Instance;
    private static TagMarshaller();
    public sealed virtual void Marshall(Tag requestObject, JsonMarshallerContext context);
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller : object {
    private static TagResourceRequestMarshaller _instance;
    public static TagResourceRequestMarshaller Instance { get; }
    private static TagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TagResourceRequest publicRequest);
    internal static TagResourceRequestMarshaller GetInstance();
    public static TagResourceRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TagResourceResponseUnmarshaller _instance;
    public static TagResourceResponseUnmarshaller Instance { get; }
    private static TagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TagResourceResponseUnmarshaller GetInstance();
    public static TagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.TagUnmarshaller : object {
    private static TagUnmarshaller _instance;
    public static TagUnmarshaller Instance { get; }
    private static TagUnmarshaller();
    private sealed virtual override Tag Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.Tag,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tag Unmarshall(JsonUnmarshallerContext context);
    public static TagUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.TelemetryRecordMarshaller : object {
    public static TelemetryRecordMarshaller Instance;
    private static TelemetryRecordMarshaller();
    public sealed virtual void Marshall(TelemetryRecord requestObject, JsonMarshallerContext context);
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.ThrottledExceptionUnmarshaller : object {
    private static ThrottledExceptionUnmarshaller _instance;
    public static ThrottledExceptionUnmarshaller Instance { get; }
    private static ThrottledExceptionUnmarshaller();
    public sealed virtual ThrottledException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ThrottledException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ThrottledExceptionUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.TimeSeriesServiceStatisticsUnmarshaller : object {
    private static TimeSeriesServiceStatisticsUnmarshaller _instance;
    public static TimeSeriesServiceStatisticsUnmarshaller Instance { get; }
    private static TimeSeriesServiceStatisticsUnmarshaller();
    private sealed virtual override TimeSeriesServiceStatistics Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.TimeSeriesServiceStatistics,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TimeSeriesServiceStatistics Unmarshall(JsonUnmarshallerContext context);
    public static TimeSeriesServiceStatisticsUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller : object {
    private static TooManyTagsExceptionUnmarshaller _instance;
    public static TooManyTagsExceptionUnmarshaller Instance { get; }
    private static TooManyTagsExceptionUnmarshaller();
    public sealed virtual TooManyTagsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TooManyTagsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyTagsExceptionUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.TraceSummaryUnmarshaller : object {
    private static TraceSummaryUnmarshaller _instance;
    public static TraceSummaryUnmarshaller Instance { get; }
    private static TraceSummaryUnmarshaller();
    private sealed virtual override TraceSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.TraceSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TraceSummary Unmarshall(JsonUnmarshallerContext context);
    public static TraceSummaryUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.TraceUnmarshaller : object {
    private static TraceUnmarshaller _instance;
    public static TraceUnmarshaller Instance { get; }
    private static TraceUnmarshaller();
    private sealed virtual override Trace Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.Trace,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Trace Unmarshall(JsonUnmarshallerContext context);
    public static TraceUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.TraceUserUnmarshaller : object {
    private static TraceUserUnmarshaller _instance;
    public static TraceUserUnmarshaller Instance { get; }
    private static TraceUserUnmarshaller();
    private sealed virtual override TraceUser Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.TraceUser,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TraceUser Unmarshall(JsonUnmarshallerContext context);
    public static TraceUserUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.UnprocessedStatisticsUnmarshaller : object {
    private static UnprocessedStatisticsUnmarshaller _instance;
    public static UnprocessedStatisticsUnmarshaller Instance { get; }
    private static UnprocessedStatisticsUnmarshaller();
    private sealed virtual override UnprocessedStatistics Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.UnprocessedStatistics,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UnprocessedStatistics Unmarshall(JsonUnmarshallerContext context);
    public static UnprocessedStatisticsUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.UnprocessedTraceSegmentUnmarshaller : object {
    private static UnprocessedTraceSegmentUnmarshaller _instance;
    public static UnprocessedTraceSegmentUnmarshaller Instance { get; }
    private static UnprocessedTraceSegmentUnmarshaller();
    private sealed virtual override UnprocessedTraceSegment Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.UnprocessedTraceSegment,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UnprocessedTraceSegment Unmarshall(JsonUnmarshallerContext context);
    public static UnprocessedTraceSegmentUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller : object {
    private static UntagResourceRequestMarshaller _instance;
    public static UntagResourceRequestMarshaller Instance { get; }
    private static UntagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UntagResourceRequest publicRequest);
    internal static UntagResourceRequestMarshaller GetInstance();
    public static UntagResourceRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UntagResourceResponseUnmarshaller _instance;
    public static UntagResourceResponseUnmarshaller Instance { get; }
    private static UntagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UntagResourceResponseUnmarshaller GetInstance();
    public static UntagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.UpdateGroupRequestMarshaller : object {
    private static UpdateGroupRequestMarshaller _instance;
    public static UpdateGroupRequestMarshaller Instance { get; }
    private static UpdateGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateGroupRequest publicRequest);
    internal static UpdateGroupRequestMarshaller GetInstance();
    public static UpdateGroupRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.UpdateGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateGroupResponseUnmarshaller _instance;
    public static UpdateGroupResponseUnmarshaller Instance { get; }
    private static UpdateGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateGroupResponseUnmarshaller GetInstance();
    public static UpdateGroupResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.UpdateSamplingRuleRequestMarshaller : object {
    private static UpdateSamplingRuleRequestMarshaller _instance;
    public static UpdateSamplingRuleRequestMarshaller Instance { get; }
    private static UpdateSamplingRuleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateSamplingRuleRequest publicRequest);
    internal static UpdateSamplingRuleRequestMarshaller GetInstance();
    public static UpdateSamplingRuleRequestMarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.UpdateSamplingRuleResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateSamplingRuleResponseUnmarshaller _instance;
    public static UpdateSamplingRuleResponseUnmarshaller Instance { get; }
    private static UpdateSamplingRuleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateSamplingRuleResponseUnmarshaller GetInstance();
    public static UpdateSamplingRuleResponseUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.Internal.MarshallTransformations.ValueWithServiceIdsUnmarshaller : object {
    private static ValueWithServiceIdsUnmarshaller _instance;
    public static ValueWithServiceIdsUnmarshaller Instance { get; }
    private static ValueWithServiceIdsUnmarshaller();
    private sealed virtual override ValueWithServiceIds Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.XRay.Model.ValueWithServiceIds,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ValueWithServiceIds Unmarshall(JsonUnmarshallerContext context);
    public static ValueWithServiceIdsUnmarshaller get_Instance();
}
public class Amazon.XRay.Model.InvalidPolicyRevisionIdException : AmazonXRayException {
    public InvalidPolicyRevisionIdException(string message);
    public InvalidPolicyRevisionIdException(string message, Exception innerException);
    public InvalidPolicyRevisionIdException(Exception innerException);
    public InvalidPolicyRevisionIdException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidPolicyRevisionIdException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected InvalidPolicyRevisionIdException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.XRay.Model.InvalidRequestException : AmazonXRayException {
    public InvalidRequestException(string message);
    public InvalidRequestException(string message, Exception innerException);
    public InvalidRequestException(Exception innerException);
    public InvalidRequestException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidRequestException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected InvalidRequestException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public interface Amazon.XRay.Model.IXRayPaginatorFactory {
    public abstract virtual IBatchGetTracesPaginator BatchGetTraces(BatchGetTracesRequest request);
    public abstract virtual IGetGroupsPaginator GetGroups(GetGroupsRequest request);
    public abstract virtual IGetInsightEventsPaginator GetInsightEvents(GetInsightEventsRequest request);
    public abstract virtual IGetInsightSummariesPaginator GetInsightSummaries(GetInsightSummariesRequest request);
    public abstract virtual IGetSamplingRulesPaginator GetSamplingRules(GetSamplingRulesRequest request);
    public abstract virtual IGetSamplingStatisticSummariesPaginator GetSamplingStatisticSummaries(GetSamplingStatisticSummariesRequest request);
    public abstract virtual IGetServiceGraphPaginator GetServiceGraph(GetServiceGraphRequest request);
    public abstract virtual IGetTimeSeriesServiceStatisticsPaginator GetTimeSeriesServiceStatistics(GetTimeSeriesServiceStatisticsRequest request);
    public abstract virtual IGetTraceGraphPaginator GetTraceGraph(GetTraceGraphRequest request);
    public abstract virtual IGetTraceSummariesPaginator GetTraceSummaries(GetTraceSummariesRequest request);
    public abstract virtual IListResourcePoliciesPaginator ListResourcePolicies(ListResourcePoliciesRequest request);
    public abstract virtual IListTagsForResourcePaginator ListTagsForResource(ListTagsForResourceRequest request);
}
internal class Amazon.XRay.Model.ListResourcePoliciesPaginator : object {
    private IAmazonXRay _client;
    private ListResourcePoliciesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListResourcePoliciesResponse> Responses { get; }
    public IPaginatedEnumerable`1<ResourcePolicy> ResourcePolicies { get; }
    internal ListResourcePoliciesPaginator(IAmazonXRay client, ListResourcePoliciesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListResourcePoliciesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ResourcePolicy> get_ResourcePolicies();
    [IteratorStateMachineAttribute("Amazon.XRay.Model.ListResourcePoliciesPaginator/<Amazon-Runtime-IPaginator<Amazon-XRay-Model-ListResourcePoliciesResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<ListResourcePoliciesResponse> Amazon.Runtime.IPaginator<Amazon.XRay.Model.ListResourcePoliciesResponse>.Paginate();
}
public class Amazon.XRay.Model.ListResourcePoliciesRequest : AmazonXRayRequest {
    private string _nextToken;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.XRay.Model.ListResourcePoliciesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ResourcePolicy> _resourcePolicies;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<ResourcePolicy> ResourcePolicies { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ResourcePolicy> get_ResourcePolicies();
    public void set_ResourcePolicies(List`1<ResourcePolicy> value);
    internal bool IsSetResourcePolicies();
}
internal class Amazon.XRay.Model.ListTagsForResourcePaginator : object {
    private IAmazonXRay _client;
    private ListTagsForResourceRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListTagsForResourceResponse> Responses { get; }
    public IPaginatedEnumerable`1<Tag> Tags { get; }
    internal ListTagsForResourcePaginator(IAmazonXRay client, ListTagsForResourceRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListTagsForResourceResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Tag> get_Tags();
    [IteratorStateMachineAttribute("Amazon.XRay.Model.ListTagsForResourcePaginator/<Amazon-Runtime-IPaginator<Amazon-XRay-Model-ListTagsForResourceResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<ListTagsForResourceResponse> Amazon.Runtime.IPaginator<Amazon.XRay.Model.ListTagsForResourceResponse>.Paginate();
}
public class Amazon.XRay.Model.ListTagsForResourceRequest : AmazonXRayRequest {
    private string _nextToken;
    private string _resourceARN;
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string ResourceARN { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_ResourceARN();
    public void set_ResourceARN(string value);
    internal bool IsSetResourceARN();
}
public class Amazon.XRay.Model.ListTagsForResourceResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Tag> _tags;
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.XRay.Model.LockoutPreventionException : AmazonXRayException {
    public LockoutPreventionException(string message);
    public LockoutPreventionException(string message, Exception innerException);
    public LockoutPreventionException(Exception innerException);
    public LockoutPreventionException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public LockoutPreventionException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected LockoutPreventionException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.XRay.Model.MalformedPolicyDocumentException : AmazonXRayException {
    public MalformedPolicyDocumentException(string message);
    public MalformedPolicyDocumentException(string message, Exception innerException);
    public MalformedPolicyDocumentException(Exception innerException);
    public MalformedPolicyDocumentException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public MalformedPolicyDocumentException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected MalformedPolicyDocumentException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.XRay.Model.PolicyCountLimitExceededException : AmazonXRayException {
    public PolicyCountLimitExceededException(string message);
    public PolicyCountLimitExceededException(string message, Exception innerException);
    public PolicyCountLimitExceededException(Exception innerException);
    public PolicyCountLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PolicyCountLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected PolicyCountLimitExceededException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.XRay.Model.PolicySizeLimitExceededException : AmazonXRayException {
    public PolicySizeLimitExceededException(string message);
    public PolicySizeLimitExceededException(string message, Exception innerException);
    public PolicySizeLimitExceededException(Exception innerException);
    public PolicySizeLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PolicySizeLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected PolicySizeLimitExceededException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.XRay.Model.PutEncryptionConfigRequest : AmazonXRayRequest {
    private string _keyId;
    private EncryptionType _type;
    [AWSPropertyAttribute]
public string KeyId { get; public set; }
    [AWSPropertyAttribute]
public EncryptionType Type { get; public set; }
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
    public EncryptionType get_Type();
    public void set_Type(EncryptionType value);
    internal bool IsSetType();
}
public class Amazon.XRay.Model.PutEncryptionConfigResponse : AmazonWebServiceResponse {
    private EncryptionConfig _encryptionConfig;
    public EncryptionConfig EncryptionConfig { get; public set; }
    public EncryptionConfig get_EncryptionConfig();
    public void set_EncryptionConfig(EncryptionConfig value);
    internal bool IsSetEncryptionConfig();
}
public class Amazon.XRay.Model.PutResourcePolicyRequest : AmazonXRayRequest {
    private Nullable`1<bool> _bypassPolicyLockoutCheck;
    private string _policyDocument;
    private string _policyName;
    private string _policyRevisionId;
    public Nullable`1<bool> BypassPolicyLockoutCheck { get; public set; }
    [AWSPropertyAttribute]
public string PolicyDocument { get; public set; }
    [AWSPropertyAttribute]
public string PolicyName { get; public set; }
    public string PolicyRevisionId { get; public set; }
    public Nullable`1<bool> get_BypassPolicyLockoutCheck();
    public void set_BypassPolicyLockoutCheck(Nullable`1<bool> value);
    internal bool IsSetBypassPolicyLockoutCheck();
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
    public string get_PolicyRevisionId();
    public void set_PolicyRevisionId(string value);
    internal bool IsSetPolicyRevisionId();
}
public class Amazon.XRay.Model.PutResourcePolicyResponse : AmazonWebServiceResponse {
    private ResourcePolicy _resourcePolicy;
    public ResourcePolicy ResourcePolicy { get; public set; }
    public ResourcePolicy get_ResourcePolicy();
    public void set_ResourcePolicy(ResourcePolicy value);
    internal bool IsSetResourcePolicy();
}
public class Amazon.XRay.Model.PutTelemetryRecordsRequest : AmazonXRayRequest {
    private string _ec2InstanceId;
    private string _hostname;
    private string _resourceARN;
    private List`1<TelemetryRecord> _telemetryRecords;
    [AWSPropertyAttribute]
public string EC2InstanceId { get; public set; }
    [AWSPropertyAttribute]
public string Hostname { get; public set; }
    [AWSPropertyAttribute]
public string ResourceARN { get; public set; }
    [AWSPropertyAttribute]
public List`1<TelemetryRecord> TelemetryRecords { get; public set; }
    public string get_EC2InstanceId();
    public void set_EC2InstanceId(string value);
    internal bool IsSetEC2InstanceId();
    public string get_Hostname();
    public void set_Hostname(string value);
    internal bool IsSetHostname();
    public string get_ResourceARN();
    public void set_ResourceARN(string value);
    internal bool IsSetResourceARN();
    public List`1<TelemetryRecord> get_TelemetryRecords();
    public void set_TelemetryRecords(List`1<TelemetryRecord> value);
    internal bool IsSetTelemetryRecords();
}
public class Amazon.XRay.Model.PutTelemetryRecordsResponse : AmazonWebServiceResponse {
}
public class Amazon.XRay.Model.PutTraceSegmentsRequest : AmazonXRayRequest {
    private List`1<string> _traceSegmentDocuments;
    [AWSPropertyAttribute]
public List`1<string> TraceSegmentDocuments { get; public set; }
    public List`1<string> get_TraceSegmentDocuments();
    public void set_TraceSegmentDocuments(List`1<string> value);
    internal bool IsSetTraceSegmentDocuments();
}
public class Amazon.XRay.Model.PutTraceSegmentsResponse : AmazonWebServiceResponse {
    private List`1<UnprocessedTraceSegment> _unprocessedTraceSegments;
    public List`1<UnprocessedTraceSegment> UnprocessedTraceSegments { get; public set; }
    public List`1<UnprocessedTraceSegment> get_UnprocessedTraceSegments();
    public void set_UnprocessedTraceSegments(List`1<UnprocessedTraceSegment> value);
    internal bool IsSetUnprocessedTraceSegments();
}
public class Amazon.XRay.Model.RequestImpactStatistics : object {
    private Nullable`1<long> _faultCount;
    private Nullable`1<long> _okCount;
    private Nullable`1<long> _totalCount;
    public Nullable`1<long> FaultCount { get; public set; }
    public Nullable`1<long> OkCount { get; public set; }
    public Nullable`1<long> TotalCount { get; public set; }
    public Nullable`1<long> get_FaultCount();
    public void set_FaultCount(Nullable`1<long> value);
    internal bool IsSetFaultCount();
    public Nullable`1<long> get_OkCount();
    public void set_OkCount(Nullable`1<long> value);
    internal bool IsSetOkCount();
    public Nullable`1<long> get_TotalCount();
    public void set_TotalCount(Nullable`1<long> value);
    internal bool IsSetTotalCount();
}
public class Amazon.XRay.Model.ResourceARNDetail : object {
    private string _arn;
    public string ARN { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
}
public class Amazon.XRay.Model.ResourceNotFoundException : AmazonXRayException {
    private string _resourceName;
    [AWSPropertyAttribute]
public string ResourceName { get; public set; }
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected ResourceNotFoundException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public string get_ResourceName();
    public void set_ResourceName(string value);
    internal bool IsSetResourceName();
}
public class Amazon.XRay.Model.ResourcePolicy : object {
    private Nullable`1<DateTime> _lastUpdatedTime;
    private string _policyDocument;
    private string _policyName;
    private string _policyRevisionId;
    public Nullable`1<DateTime> LastUpdatedTime { get; public set; }
    public string PolicyDocument { get; public set; }
    [AWSPropertyAttribute]
public string PolicyName { get; public set; }
    public string PolicyRevisionId { get; public set; }
    public Nullable`1<DateTime> get_LastUpdatedTime();
    public void set_LastUpdatedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdatedTime();
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
    public string get_PolicyRevisionId();
    public void set_PolicyRevisionId(string value);
    internal bool IsSetPolicyRevisionId();
}
public class Amazon.XRay.Model.ResponseTimeRootCause : object {
    private Nullable`1<bool> _clientImpacting;
    private List`1<ResponseTimeRootCauseService> _services;
    public Nullable`1<bool> ClientImpacting { get; public set; }
    public List`1<ResponseTimeRootCauseService> Services { get; public set; }
    public Nullable`1<bool> get_ClientImpacting();
    public void set_ClientImpacting(Nullable`1<bool> value);
    internal bool IsSetClientImpacting();
    public List`1<ResponseTimeRootCauseService> get_Services();
    public void set_Services(List`1<ResponseTimeRootCauseService> value);
    internal bool IsSetServices();
}
public class Amazon.XRay.Model.ResponseTimeRootCauseEntity : object {
    private Nullable`1<double> _coverage;
    private string _name;
    private Nullable`1<bool> _remote;
    public Nullable`1<double> Coverage { get; public set; }
    public string Name { get; public set; }
    public Nullable`1<bool> Remote { get; public set; }
    public Nullable`1<double> get_Coverage();
    public void set_Coverage(Nullable`1<double> value);
    internal bool IsSetCoverage();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<bool> get_Remote();
    public void set_Remote(Nullable`1<bool> value);
    internal bool IsSetRemote();
}
public class Amazon.XRay.Model.ResponseTimeRootCauseService : object {
    private string _accountId;
    private List`1<ResponseTimeRootCauseEntity> _entityPath;
    private Nullable`1<bool> _inferred;
    private string _name;
    private List`1<string> _names;
    private string _type;
    public string AccountId { get; public set; }
    public List`1<ResponseTimeRootCauseEntity> EntityPath { get; public set; }
    public Nullable`1<bool> Inferred { get; public set; }
    public string Name { get; public set; }
    public List`1<string> Names { get; public set; }
    public string Type { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public List`1<ResponseTimeRootCauseEntity> get_EntityPath();
    public void set_EntityPath(List`1<ResponseTimeRootCauseEntity> value);
    internal bool IsSetEntityPath();
    public Nullable`1<bool> get_Inferred();
    public void set_Inferred(Nullable`1<bool> value);
    internal bool IsSetInferred();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_Names();
    public void set_Names(List`1<string> value);
    internal bool IsSetNames();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.XRay.Model.RootCauseException : object {
    private string _message;
    private string _name;
    public string Message { get; public set; }
    public string Name { get; public set; }
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.XRay.Model.RuleLimitExceededException : AmazonXRayException {
    public RuleLimitExceededException(string message);
    public RuleLimitExceededException(string message, Exception innerException);
    public RuleLimitExceededException(Exception innerException);
    public RuleLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public RuleLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected RuleLimitExceededException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.XRay.Model.SamplingRule : object {
    private Dictionary`2<string, string> _attributes;
    private Nullable`1<double> _fixedRate;
    private string _host;
    private string _httpMethod;
    private Nullable`1<int> _priority;
    private Nullable`1<int> _reservoirSize;
    private string _resourceARN;
    private string _ruleARN;
    private string _ruleName;
    private string _serviceName;
    private string _serviceType;
    private string _urlPath;
    private Nullable`1<int> _version;
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Attributes { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> FixedRate { get; public set; }
    [AWSPropertyAttribute]
public string Host { get; public set; }
    [AWSPropertyAttribute]
public string HTTPMethod { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ReservoirSize { get; public set; }
    [AWSPropertyAttribute]
public string ResourceARN { get; public set; }
    public string RuleARN { get; public set; }
    [AWSPropertyAttribute]
public string RuleName { get; public set; }
    [AWSPropertyAttribute]
public string ServiceName { get; public set; }
    [AWSPropertyAttribute]
public string ServiceType { get; public set; }
    [AWSPropertyAttribute]
public string URLPath { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Version { get; public set; }
    public Dictionary`2<string, string> get_Attributes();
    public void set_Attributes(Dictionary`2<string, string> value);
    internal bool IsSetAttributes();
    public Nullable`1<double> get_FixedRate();
    public void set_FixedRate(Nullable`1<double> value);
    internal bool IsSetFixedRate();
    public string get_Host();
    public void set_Host(string value);
    internal bool IsSetHost();
    public string get_HTTPMethod();
    public void set_HTTPMethod(string value);
    internal bool IsSetHTTPMethod();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
    public Nullable`1<int> get_ReservoirSize();
    public void set_ReservoirSize(Nullable`1<int> value);
    internal bool IsSetReservoirSize();
    public string get_ResourceARN();
    public void set_ResourceARN(string value);
    internal bool IsSetResourceARN();
    public string get_RuleARN();
    public void set_RuleARN(string value);
    internal bool IsSetRuleARN();
    public string get_RuleName();
    public void set_RuleName(string value);
    internal bool IsSetRuleName();
    public string get_ServiceName();
    public void set_ServiceName(string value);
    internal bool IsSetServiceName();
    public string get_ServiceType();
    public void set_ServiceType(string value);
    internal bool IsSetServiceType();
    public string get_URLPath();
    public void set_URLPath(string value);
    internal bool IsSetURLPath();
    public Nullable`1<int> get_Version();
    public void set_Version(Nullable`1<int> value);
    internal bool IsSetVersion();
}
public class Amazon.XRay.Model.SamplingRuleRecord : object {
    private Nullable`1<DateTime> _createdAt;
    private Nullable`1<DateTime> _modifiedAt;
    private SamplingRule _samplingRule;
    public Nullable`1<DateTime> CreatedAt { get; public set; }
    public Nullable`1<DateTime> ModifiedAt { get; public set; }
    public SamplingRule SamplingRule { get; public set; }
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public Nullable`1<DateTime> get_ModifiedAt();
    public void set_ModifiedAt(Nullable`1<DateTime> value);
    internal bool IsSetModifiedAt();
    public SamplingRule get_SamplingRule();
    public void set_SamplingRule(SamplingRule value);
    internal bool IsSetSamplingRule();
}
public class Amazon.XRay.Model.SamplingRuleUpdate : object {
    private Dictionary`2<string, string> _attributes;
    private Nullable`1<double> _fixedRate;
    private string _host;
    private string _httpMethod;
    private Nullable`1<int> _priority;
    private Nullable`1<int> _reservoirSize;
    private string _resourceARN;
    private string _ruleARN;
    private string _ruleName;
    private string _serviceName;
    private string _serviceType;
    private string _urlPath;
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Attributes { get; public set; }
    public Nullable`1<double> FixedRate { get; public set; }
    [AWSPropertyAttribute]
public string Host { get; public set; }
    [AWSPropertyAttribute]
public string HTTPMethod { get; public set; }
    public Nullable`1<int> Priority { get; public set; }
    public Nullable`1<int> ReservoirSize { get; public set; }
    [AWSPropertyAttribute]
public string ResourceARN { get; public set; }
    public string RuleARN { get; public set; }
    [AWSPropertyAttribute]
public string RuleName { get; public set; }
    [AWSPropertyAttribute]
public string ServiceName { get; public set; }
    [AWSPropertyAttribute]
public string ServiceType { get; public set; }
    [AWSPropertyAttribute]
public string URLPath { get; public set; }
    public Dictionary`2<string, string> get_Attributes();
    public void set_Attributes(Dictionary`2<string, string> value);
    internal bool IsSetAttributes();
    public Nullable`1<double> get_FixedRate();
    public void set_FixedRate(Nullable`1<double> value);
    internal bool IsSetFixedRate();
    public string get_Host();
    public void set_Host(string value);
    internal bool IsSetHost();
    public string get_HTTPMethod();
    public void set_HTTPMethod(string value);
    internal bool IsSetHTTPMethod();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
    public Nullable`1<int> get_ReservoirSize();
    public void set_ReservoirSize(Nullable`1<int> value);
    internal bool IsSetReservoirSize();
    public string get_ResourceARN();
    public void set_ResourceARN(string value);
    internal bool IsSetResourceARN();
    public string get_RuleARN();
    public void set_RuleARN(string value);
    internal bool IsSetRuleARN();
    public string get_RuleName();
    public void set_RuleName(string value);
    internal bool IsSetRuleName();
    public string get_ServiceName();
    public void set_ServiceName(string value);
    internal bool IsSetServiceName();
    public string get_ServiceType();
    public void set_ServiceType(string value);
    internal bool IsSetServiceType();
    public string get_URLPath();
    public void set_URLPath(string value);
    internal bool IsSetURLPath();
}
public class Amazon.XRay.Model.SamplingStatisticsDocument : object {
    private Nullable`1<int> _borrowCount;
    private string _clientID;
    private Nullable`1<int> _requestCount;
    private string _ruleName;
    private Nullable`1<int> _sampledCount;
    private Nullable`1<DateTime> _timestamp;
    [AWSPropertyAttribute]
public Nullable`1<int> BorrowCount { get; public set; }
    [AWSPropertyAttribute]
public string ClientID { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RequestCount { get; public set; }
    [AWSPropertyAttribute]
public string RuleName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> SampledCount { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> Timestamp { get; public set; }
    public Nullable`1<int> get_BorrowCount();
    public void set_BorrowCount(Nullable`1<int> value);
    internal bool IsSetBorrowCount();
    public string get_ClientID();
    public void set_ClientID(string value);
    internal bool IsSetClientID();
    public Nullable`1<int> get_RequestCount();
    public void set_RequestCount(Nullable`1<int> value);
    internal bool IsSetRequestCount();
    public string get_RuleName();
    public void set_RuleName(string value);
    internal bool IsSetRuleName();
    public Nullable`1<int> get_SampledCount();
    public void set_SampledCount(Nullable`1<int> value);
    internal bool IsSetSampledCount();
    public Nullable`1<DateTime> get_Timestamp();
    public void set_Timestamp(Nullable`1<DateTime> value);
    internal bool IsSetTimestamp();
}
public class Amazon.XRay.Model.SamplingStatisticSummary : object {
    private Nullable`1<int> _borrowCount;
    private Nullable`1<int> _requestCount;
    private string _ruleName;
    private Nullable`1<int> _sampledCount;
    private Nullable`1<DateTime> _timestamp;
    public Nullable`1<int> BorrowCount { get; public set; }
    public Nullable`1<int> RequestCount { get; public set; }
    public string RuleName { get; public set; }
    public Nullable`1<int> SampledCount { get; public set; }
    public Nullable`1<DateTime> Timestamp { get; public set; }
    public Nullable`1<int> get_BorrowCount();
    public void set_BorrowCount(Nullable`1<int> value);
    internal bool IsSetBorrowCount();
    public Nullable`1<int> get_RequestCount();
    public void set_RequestCount(Nullable`1<int> value);
    internal bool IsSetRequestCount();
    public string get_RuleName();
    public void set_RuleName(string value);
    internal bool IsSetRuleName();
    public Nullable`1<int> get_SampledCount();
    public void set_SampledCount(Nullable`1<int> value);
    internal bool IsSetSampledCount();
    public Nullable`1<DateTime> get_Timestamp();
    public void set_Timestamp(Nullable`1<DateTime> value);
    internal bool IsSetTimestamp();
}
public class Amazon.XRay.Model.SamplingStrategy : object {
    private SamplingStrategyName _name;
    private Nullable`1<double> _value;
    public SamplingStrategyName Name { get; public set; }
    public Nullable`1<double> Value { get; public set; }
    public SamplingStrategyName get_Name();
    public void set_Name(SamplingStrategyName value);
    internal bool IsSetName();
    public Nullable`1<double> get_Value();
    public void set_Value(Nullable`1<double> value);
    internal bool IsSetValue();
}
public class Amazon.XRay.Model.SamplingTargetDocument : object {
    private Nullable`1<double> _fixedRate;
    private Nullable`1<int> _interval;
    private Nullable`1<int> _reservoirQuota;
    private Nullable`1<DateTime> _reservoirQuotaTTL;
    private string _ruleName;
    public Nullable`1<double> FixedRate { get; public set; }
    public Nullable`1<int> Interval { get; public set; }
    public Nullable`1<int> ReservoirQuota { get; public set; }
    public Nullable`1<DateTime> ReservoirQuotaTTL { get; public set; }
    public string RuleName { get; public set; }
    public Nullable`1<double> get_FixedRate();
    public void set_FixedRate(Nullable`1<double> value);
    internal bool IsSetFixedRate();
    public Nullable`1<int> get_Interval();
    public void set_Interval(Nullable`1<int> value);
    internal bool IsSetInterval();
    public Nullable`1<int> get_ReservoirQuota();
    public void set_ReservoirQuota(Nullable`1<int> value);
    internal bool IsSetReservoirQuota();
    public Nullable`1<DateTime> get_ReservoirQuotaTTL();
    public void set_ReservoirQuotaTTL(Nullable`1<DateTime> value);
    internal bool IsSetReservoirQuotaTTL();
    public string get_RuleName();
    public void set_RuleName(string value);
    internal bool IsSetRuleName();
}
public class Amazon.XRay.Model.Segment : object {
    private string _document;
    private string _id;
    [AWSPropertyAttribute]
public string Document { get; public set; }
    public string Id { get; public set; }
    public string get_Document();
    public void set_Document(string value);
    internal bool IsSetDocument();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.XRay.Model.Service : object {
    private string _accountId;
    private List`1<HistogramEntry> _durationHistogram;
    private List`1<Edge> _edges;
    private Nullable`1<DateTime> _endTime;
    private string _name;
    private List`1<string> _names;
    private Nullable`1<int> _referenceId;
    private List`1<HistogramEntry> _responseTimeHistogram;
    private Nullable`1<bool> _root;
    private Nullable`1<DateTime> _startTime;
    private string _state;
    private ServiceStatistics _summaryStatistics;
    private string _type;
    public string AccountId { get; public set; }
    public List`1<HistogramEntry> DurationHistogram { get; public set; }
    public List`1<Edge> Edges { get; public set; }
    public Nullable`1<DateTime> EndTime { get; public set; }
    public string Name { get; public set; }
    public List`1<string> Names { get; public set; }
    public Nullable`1<int> ReferenceId { get; public set; }
    public List`1<HistogramEntry> ResponseTimeHistogram { get; public set; }
    public Nullable`1<bool> Root { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public string State { get; public set; }
    public ServiceStatistics SummaryStatistics { get; public set; }
    public string Type { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public List`1<HistogramEntry> get_DurationHistogram();
    public void set_DurationHistogram(List`1<HistogramEntry> value);
    internal bool IsSetDurationHistogram();
    public List`1<Edge> get_Edges();
    public void set_Edges(List`1<Edge> value);
    internal bool IsSetEdges();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_Names();
    public void set_Names(List`1<string> value);
    internal bool IsSetNames();
    public Nullable`1<int> get_ReferenceId();
    public void set_ReferenceId(Nullable`1<int> value);
    internal bool IsSetReferenceId();
    public List`1<HistogramEntry> get_ResponseTimeHistogram();
    public void set_ResponseTimeHistogram(List`1<HistogramEntry> value);
    internal bool IsSetResponseTimeHistogram();
    public Nullable`1<bool> get_Root();
    public void set_Root(Nullable`1<bool> value);
    internal bool IsSetRoot();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
    public ServiceStatistics get_SummaryStatistics();
    public void set_SummaryStatistics(ServiceStatistics value);
    internal bool IsSetSummaryStatistics();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.XRay.Model.ServiceId : object {
    private string _accountId;
    private string _name;
    private List`1<string> _names;
    private string _type;
    public string AccountId { get; public set; }
    public string Name { get; public set; }
    public List`1<string> Names { get; public set; }
    public string Type { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_Names();
    public void set_Names(List`1<string> value);
    internal bool IsSetNames();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.XRay.Model.ServiceStatistics : object {
    private ErrorStatistics _errorStatistics;
    private FaultStatistics _faultStatistics;
    private Nullable`1<long> _okCount;
    private Nullable`1<long> _totalCount;
    private Nullable`1<double> _totalResponseTime;
    public ErrorStatistics ErrorStatistics { get; public set; }
    public FaultStatistics FaultStatistics { get; public set; }
    public Nullable`1<long> OkCount { get; public set; }
    public Nullable`1<long> TotalCount { get; public set; }
    public Nullable`1<double> TotalResponseTime { get; public set; }
    public ErrorStatistics get_ErrorStatistics();
    public void set_ErrorStatistics(ErrorStatistics value);
    internal bool IsSetErrorStatistics();
    public FaultStatistics get_FaultStatistics();
    public void set_FaultStatistics(FaultStatistics value);
    internal bool IsSetFaultStatistics();
    public Nullable`1<long> get_OkCount();
    public void set_OkCount(Nullable`1<long> value);
    internal bool IsSetOkCount();
    public Nullable`1<long> get_TotalCount();
    public void set_TotalCount(Nullable`1<long> value);
    internal bool IsSetTotalCount();
    public Nullable`1<double> get_TotalResponseTime();
    public void set_TotalResponseTime(Nullable`1<double> value);
    internal bool IsSetTotalResponseTime();
}
public class Amazon.XRay.Model.Tag : object {
    private string _key;
    private string _value;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.XRay.Model.TagResourceRequest : AmazonXRayRequest {
    private string _resourceARN;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string ResourceARN { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_ResourceARN();
    public void set_ResourceARN(string value);
    internal bool IsSetResourceARN();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.XRay.Model.TagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.XRay.Model.TelemetryRecord : object {
    private BackendConnectionErrors _backendConnectionErrors;
    private Nullable`1<int> _segmentsReceivedCount;
    private Nullable`1<int> _segmentsRejectedCount;
    private Nullable`1<int> _segmentsSentCount;
    private Nullable`1<int> _segmentsSpilloverCount;
    private Nullable`1<DateTime> _timestamp;
    public BackendConnectionErrors BackendConnectionErrors { get; public set; }
    public Nullable`1<int> SegmentsReceivedCount { get; public set; }
    public Nullable`1<int> SegmentsRejectedCount { get; public set; }
    public Nullable`1<int> SegmentsSentCount { get; public set; }
    public Nullable`1<int> SegmentsSpilloverCount { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> Timestamp { get; public set; }
    public BackendConnectionErrors get_BackendConnectionErrors();
    public void set_BackendConnectionErrors(BackendConnectionErrors value);
    internal bool IsSetBackendConnectionErrors();
    public Nullable`1<int> get_SegmentsReceivedCount();
    public void set_SegmentsReceivedCount(Nullable`1<int> value);
    internal bool IsSetSegmentsReceivedCount();
    public Nullable`1<int> get_SegmentsRejectedCount();
    public void set_SegmentsRejectedCount(Nullable`1<int> value);
    internal bool IsSetSegmentsRejectedCount();
    public Nullable`1<int> get_SegmentsSentCount();
    public void set_SegmentsSentCount(Nullable`1<int> value);
    internal bool IsSetSegmentsSentCount();
    public Nullable`1<int> get_SegmentsSpilloverCount();
    public void set_SegmentsSpilloverCount(Nullable`1<int> value);
    internal bool IsSetSegmentsSpilloverCount();
    public Nullable`1<DateTime> get_Timestamp();
    public void set_Timestamp(Nullable`1<DateTime> value);
    internal bool IsSetTimestamp();
}
public class Amazon.XRay.Model.ThrottledException : AmazonXRayException {
    public ThrottledException(string message);
    public ThrottledException(string message, Exception innerException);
    public ThrottledException(Exception innerException);
    public ThrottledException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ThrottledException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected ThrottledException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.XRay.Model.TimeSeriesServiceStatistics : object {
    private EdgeStatistics _edgeSummaryStatistics;
    private List`1<HistogramEntry> _responseTimeHistogram;
    private ForecastStatistics _serviceForecastStatistics;
    private ServiceStatistics _serviceSummaryStatistics;
    private Nullable`1<DateTime> _timestamp;
    public EdgeStatistics EdgeSummaryStatistics { get; public set; }
    public List`1<HistogramEntry> ResponseTimeHistogram { get; public set; }
    public ForecastStatistics ServiceForecastStatistics { get; public set; }
    public ServiceStatistics ServiceSummaryStatistics { get; public set; }
    public Nullable`1<DateTime> Timestamp { get; public set; }
    public EdgeStatistics get_EdgeSummaryStatistics();
    public void set_EdgeSummaryStatistics(EdgeStatistics value);
    internal bool IsSetEdgeSummaryStatistics();
    public List`1<HistogramEntry> get_ResponseTimeHistogram();
    public void set_ResponseTimeHistogram(List`1<HistogramEntry> value);
    internal bool IsSetResponseTimeHistogram();
    public ForecastStatistics get_ServiceForecastStatistics();
    public void set_ServiceForecastStatistics(ForecastStatistics value);
    internal bool IsSetServiceForecastStatistics();
    public ServiceStatistics get_ServiceSummaryStatistics();
    public void set_ServiceSummaryStatistics(ServiceStatistics value);
    internal bool IsSetServiceSummaryStatistics();
    public Nullable`1<DateTime> get_Timestamp();
    public void set_Timestamp(Nullable`1<DateTime> value);
    internal bool IsSetTimestamp();
}
public class Amazon.XRay.Model.TooManyTagsException : AmazonXRayException {
    private string _resourceName;
    [AWSPropertyAttribute]
public string ResourceName { get; public set; }
    public TooManyTagsException(string message);
    public TooManyTagsException(string message, Exception innerException);
    public TooManyTagsException(Exception innerException);
    public TooManyTagsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyTagsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected TooManyTagsException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public string get_ResourceName();
    public void set_ResourceName(string value);
    internal bool IsSetResourceName();
}
public class Amazon.XRay.Model.Trace : object {
    private Nullable`1<double> _duration;
    private string _id;
    private Nullable`1<bool> _limitExceeded;
    private List`1<Segment> _segments;
    public Nullable`1<double> Duration { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public Nullable`1<bool> LimitExceeded { get; public set; }
    public List`1<Segment> Segments { get; public set; }
    public Nullable`1<double> get_Duration();
    public void set_Duration(Nullable`1<double> value);
    internal bool IsSetDuration();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<bool> get_LimitExceeded();
    public void set_LimitExceeded(Nullable`1<bool> value);
    internal bool IsSetLimitExceeded();
    public List`1<Segment> get_Segments();
    public void set_Segments(List`1<Segment> value);
    internal bool IsSetSegments();
}
public class Amazon.XRay.Model.TraceSummary : object {
    private Dictionary`2<string, List`1<ValueWithServiceIds>> _annotations;
    private List`1<AvailabilityZoneDetail> _availabilityZones;
    private Nullable`1<double> _duration;
    private ServiceId _entryPoint;
    private List`1<ErrorRootCause> _errorRootCauses;
    private List`1<FaultRootCause> _faultRootCauses;
    private Nullable`1<bool> _hasError;
    private Nullable`1<bool> _hasFault;
    private Nullable`1<bool> _hasThrottle;
    private Http _http;
    private string _id;
    private List`1<InstanceIdDetail> _instanceIds;
    private Nullable`1<bool> _isPartial;
    private Nullable`1<DateTime> _matchedEventTime;
    private List`1<ResourceARNDetail> _resourceARNs;
    private Nullable`1<double> _responseTime;
    private List`1<ResponseTimeRootCause> _responseTimeRootCauses;
    private Nullable`1<int> _revision;
    private List`1<ServiceId> _serviceIds;
    private Nullable`1<DateTime> _startTime;
    private List`1<TraceUser> _users;
    public Dictionary`2<string, List`1<ValueWithServiceIds>> Annotations { get; public set; }
    public List`1<AvailabilityZoneDetail> AvailabilityZones { get; public set; }
    public Nullable`1<double> Duration { get; public set; }
    public ServiceId EntryPoint { get; public set; }
    public List`1<ErrorRootCause> ErrorRootCauses { get; public set; }
    public List`1<FaultRootCause> FaultRootCauses { get; public set; }
    public Nullable`1<bool> HasError { get; public set; }
    public Nullable`1<bool> HasFault { get; public set; }
    public Nullable`1<bool> HasThrottle { get; public set; }
    public Http Http { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public List`1<InstanceIdDetail> InstanceIds { get; public set; }
    public Nullable`1<bool> IsPartial { get; public set; }
    public Nullable`1<DateTime> MatchedEventTime { get; public set; }
    public List`1<ResourceARNDetail> ResourceARNs { get; public set; }
    public Nullable`1<double> ResponseTime { get; public set; }
    public List`1<ResponseTimeRootCause> ResponseTimeRootCauses { get; public set; }
    public Nullable`1<int> Revision { get; public set; }
    public List`1<ServiceId> ServiceIds { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public List`1<TraceUser> Users { get; public set; }
    public Dictionary`2<string, List`1<ValueWithServiceIds>> get_Annotations();
    public void set_Annotations(Dictionary`2<string, List`1<ValueWithServiceIds>> value);
    internal bool IsSetAnnotations();
    public List`1<AvailabilityZoneDetail> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<AvailabilityZoneDetail> value);
    internal bool IsSetAvailabilityZones();
    public Nullable`1<double> get_Duration();
    public void set_Duration(Nullable`1<double> value);
    internal bool IsSetDuration();
    public ServiceId get_EntryPoint();
    public void set_EntryPoint(ServiceId value);
    internal bool IsSetEntryPoint();
    public List`1<ErrorRootCause> get_ErrorRootCauses();
    public void set_ErrorRootCauses(List`1<ErrorRootCause> value);
    internal bool IsSetErrorRootCauses();
    public List`1<FaultRootCause> get_FaultRootCauses();
    public void set_FaultRootCauses(List`1<FaultRootCause> value);
    internal bool IsSetFaultRootCauses();
    public Nullable`1<bool> get_HasError();
    public void set_HasError(Nullable`1<bool> value);
    internal bool IsSetHasError();
    public Nullable`1<bool> get_HasFault();
    public void set_HasFault(Nullable`1<bool> value);
    internal bool IsSetHasFault();
    public Nullable`1<bool> get_HasThrottle();
    public void set_HasThrottle(Nullable`1<bool> value);
    internal bool IsSetHasThrottle();
    public Http get_Http();
    public void set_Http(Http value);
    internal bool IsSetHttp();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public List`1<InstanceIdDetail> get_InstanceIds();
    public void set_InstanceIds(List`1<InstanceIdDetail> value);
    internal bool IsSetInstanceIds();
    public Nullable`1<bool> get_IsPartial();
    public void set_IsPartial(Nullable`1<bool> value);
    internal bool IsSetIsPartial();
    public Nullable`1<DateTime> get_MatchedEventTime();
    public void set_MatchedEventTime(Nullable`1<DateTime> value);
    internal bool IsSetMatchedEventTime();
    public List`1<ResourceARNDetail> get_ResourceARNs();
    public void set_ResourceARNs(List`1<ResourceARNDetail> value);
    internal bool IsSetResourceARNs();
    public Nullable`1<double> get_ResponseTime();
    public void set_ResponseTime(Nullable`1<double> value);
    internal bool IsSetResponseTime();
    public List`1<ResponseTimeRootCause> get_ResponseTimeRootCauses();
    public void set_ResponseTimeRootCauses(List`1<ResponseTimeRootCause> value);
    internal bool IsSetResponseTimeRootCauses();
    public Nullable`1<int> get_Revision();
    public void set_Revision(Nullable`1<int> value);
    internal bool IsSetRevision();
    public List`1<ServiceId> get_ServiceIds();
    public void set_ServiceIds(List`1<ServiceId> value);
    internal bool IsSetServiceIds();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public List`1<TraceUser> get_Users();
    public void set_Users(List`1<TraceUser> value);
    internal bool IsSetUsers();
}
public class Amazon.XRay.Model.TraceUser : object {
    private List`1<ServiceId> _serviceIds;
    private string _userName;
    public List`1<ServiceId> ServiceIds { get; public set; }
    public string UserName { get; public set; }
    public List`1<ServiceId> get_ServiceIds();
    public void set_ServiceIds(List`1<ServiceId> value);
    internal bool IsSetServiceIds();
    public string get_UserName();
    public void set_UserName(string value);
    internal bool IsSetUserName();
}
public class Amazon.XRay.Model.UnprocessedStatistics : object {
    private string _errorCode;
    private string _message;
    private string _ruleName;
    public string ErrorCode { get; public set; }
    public string Message { get; public set; }
    public string RuleName { get; public set; }
    public string get_ErrorCode();
    public void set_ErrorCode(string value);
    internal bool IsSetErrorCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public string get_RuleName();
    public void set_RuleName(string value);
    internal bool IsSetRuleName();
}
public class Amazon.XRay.Model.UnprocessedTraceSegment : object {
    private string _errorCode;
    private string _id;
    private string _message;
    public string ErrorCode { get; public set; }
    public string Id { get; public set; }
    public string Message { get; public set; }
    public string get_ErrorCode();
    public void set_ErrorCode(string value);
    internal bool IsSetErrorCode();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.XRay.Model.UntagResourceRequest : AmazonXRayRequest {
    private string _resourceARN;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string ResourceARN { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_ResourceARN();
    public void set_ResourceARN(string value);
    internal bool IsSetResourceARN();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.XRay.Model.UntagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.XRay.Model.UpdateGroupRequest : AmazonXRayRequest {
    private string _filterExpression;
    private string _groupARN;
    private string _groupName;
    private InsightsConfiguration _insightsConfiguration;
    public string FilterExpression { get; public set; }
    [AWSPropertyAttribute]
public string GroupARN { get; public set; }
    [AWSPropertyAttribute]
public string GroupName { get; public set; }
    public InsightsConfiguration InsightsConfiguration { get; public set; }
    public string get_FilterExpression();
    public void set_FilterExpression(string value);
    internal bool IsSetFilterExpression();
    public string get_GroupARN();
    public void set_GroupARN(string value);
    internal bool IsSetGroupARN();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public InsightsConfiguration get_InsightsConfiguration();
    public void set_InsightsConfiguration(InsightsConfiguration value);
    internal bool IsSetInsightsConfiguration();
}
public class Amazon.XRay.Model.UpdateGroupResponse : AmazonWebServiceResponse {
    private Group _group;
    public Group Group { get; public set; }
    public Group get_Group();
    public void set_Group(Group value);
    internal bool IsSetGroup();
}
public class Amazon.XRay.Model.UpdateSamplingRuleRequest : AmazonXRayRequest {
    private SamplingRuleUpdate _samplingRuleUpdate;
    [AWSPropertyAttribute]
public SamplingRuleUpdate SamplingRuleUpdate { get; public set; }
    public SamplingRuleUpdate get_SamplingRuleUpdate();
    public void set_SamplingRuleUpdate(SamplingRuleUpdate value);
    internal bool IsSetSamplingRuleUpdate();
}
public class Amazon.XRay.Model.UpdateSamplingRuleResponse : AmazonWebServiceResponse {
    private SamplingRuleRecord _samplingRuleRecord;
    public SamplingRuleRecord SamplingRuleRecord { get; public set; }
    public SamplingRuleRecord get_SamplingRuleRecord();
    public void set_SamplingRuleRecord(SamplingRuleRecord value);
    internal bool IsSetSamplingRuleRecord();
}
public class Amazon.XRay.Model.ValueWithServiceIds : object {
    private AnnotationValue _annotationValue;
    private List`1<ServiceId> _serviceIds;
    public AnnotationValue AnnotationValue { get; public set; }
    public List`1<ServiceId> ServiceIds { get; public set; }
    public AnnotationValue get_AnnotationValue();
    public void set_AnnotationValue(AnnotationValue value);
    internal bool IsSetAnnotationValue();
    public List`1<ServiceId> get_ServiceIds();
    public void set_ServiceIds(List`1<ServiceId> value);
    internal bool IsSetServiceIds();
}
public class Amazon.XRay.Model.XRayPaginatorFactory : object {
    private IAmazonXRay client;
    internal XRayPaginatorFactory(IAmazonXRay client);
    public sealed virtual IBatchGetTracesPaginator BatchGetTraces(BatchGetTracesRequest request);
    public sealed virtual IGetGroupsPaginator GetGroups(GetGroupsRequest request);
    public sealed virtual IGetInsightEventsPaginator GetInsightEvents(GetInsightEventsRequest request);
    public sealed virtual IGetInsightSummariesPaginator GetInsightSummaries(GetInsightSummariesRequest request);
    public sealed virtual IGetSamplingRulesPaginator GetSamplingRules(GetSamplingRulesRequest request);
    public sealed virtual IGetSamplingStatisticSummariesPaginator GetSamplingStatisticSummaries(GetSamplingStatisticSummariesRequest request);
    public sealed virtual IGetServiceGraphPaginator GetServiceGraph(GetServiceGraphRequest request);
    public sealed virtual IGetTimeSeriesServiceStatisticsPaginator GetTimeSeriesServiceStatistics(GetTimeSeriesServiceStatisticsRequest request);
    public sealed virtual IGetTraceGraphPaginator GetTraceGraph(GetTraceGraphRequest request);
    public sealed virtual IGetTraceSummariesPaginator GetTraceSummaries(GetTraceSummariesRequest request);
    public sealed virtual IListResourcePoliciesPaginator ListResourcePolicies(ListResourcePoliciesRequest request);
    public sealed virtual IListTagsForResourcePaginator ListTagsForResource(ListTagsForResourceRequest request);
}
public class Amazon.XRay.SamplingStrategyName : ConstantClass {
    public static SamplingStrategyName FixedRate;
    public static SamplingStrategyName PartialScan;
    public SamplingStrategyName(string value);
    private static SamplingStrategyName();
    public static SamplingStrategyName FindValue(string value);
    public static SamplingStrategyName op_Implicit(string value);
}
public class Amazon.XRay.TimeRangeType : ConstantClass {
    public static TimeRangeType Event;
    public static TimeRangeType Service;
    public static TimeRangeType TraceId;
    public TimeRangeType(string value);
    private static TimeRangeType();
    public static TimeRangeType FindValue(string value);
    public static TimeRangeType op_Implicit(string value);
}
