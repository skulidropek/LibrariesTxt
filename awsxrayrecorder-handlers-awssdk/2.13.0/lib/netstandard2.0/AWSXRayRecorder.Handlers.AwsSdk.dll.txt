public static class Amazon.XRay.Recorder.Handlers.AwsSdk.AWSSDKHandler : object {
    private static XRayPipelineCustomizer _customizer;
    public static void RegisterXRayForAllServices();
    public static void RegisterXRayForAllServices(string path);
    public static void RegisterXRay();
    public static void RegisterXRayManifest(string path);
    public static void RegisterXRayManifest(Stream stream);
    private static XRayPipelineCustomizer GetCustomizer();
}
public class Amazon.XRay.Recorder.Handlers.AwsSdk.Entities.AWSOperationHandler : object {
    [CompilerGeneratedAttribute]
private List`1<string> <RequestParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <ResponseParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, AWSOperationRequestDescriptor> <RequestDescriptors>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, AWSOperationResponseDescriptor> <ResponseDescriptors>k__BackingField;
    public List`1<string> RequestParameters { get; public set; }
    public List`1<string> ResponseParameters { get; public set; }
    public Dictionary`2<string, AWSOperationRequestDescriptor> RequestDescriptors { get; public set; }
    public Dictionary`2<string, AWSOperationResponseDescriptor> ResponseDescriptors { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<string> get_RequestParameters();
    [CompilerGeneratedAttribute]
public void set_RequestParameters(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_ResponseParameters();
    [CompilerGeneratedAttribute]
public void set_ResponseParameters(List`1<string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, AWSOperationRequestDescriptor> get_RequestDescriptors();
    [CompilerGeneratedAttribute]
public void set_RequestDescriptors(Dictionary`2<string, AWSOperationRequestDescriptor> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, AWSOperationResponseDescriptor> get_ResponseDescriptors();
    [CompilerGeneratedAttribute]
public void set_ResponseDescriptors(Dictionary`2<string, AWSOperationResponseDescriptor> value);
}
public class Amazon.XRay.Recorder.Handlers.AwsSdk.Entities.AWSOperationRequestDescriptor : object {
    [CompilerGeneratedAttribute]
private string <RenameTo>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Map>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <GetKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <List>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <GetCount>k__BackingField;
    public string RenameTo { get; public set; }
    public bool Map { get; public set; }
    public bool GetKeys { get; public set; }
    public bool List { get; public set; }
    public bool GetCount { get; public set; }
    [CompilerGeneratedAttribute]
public string get_RenameTo();
    [CompilerGeneratedAttribute]
public void set_RenameTo(string value);
    [CompilerGeneratedAttribute]
public bool get_Map();
    [CompilerGeneratedAttribute]
public void set_Map(bool value);
    [CompilerGeneratedAttribute]
public bool get_GetKeys();
    [CompilerGeneratedAttribute]
public void set_GetKeys(bool value);
    [CompilerGeneratedAttribute]
public bool get_List();
    [CompilerGeneratedAttribute]
public void set_List(bool value);
    [CompilerGeneratedAttribute]
public bool get_GetCount();
    [CompilerGeneratedAttribute]
public void set_GetCount(bool value);
}
public class Amazon.XRay.Recorder.Handlers.AwsSdk.Entities.AWSOperationResponseDescriptor : object {
    [CompilerGeneratedAttribute]
private string <RenameTo>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Map>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <GetKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <List>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <GetCount>k__BackingField;
    public string RenameTo { get; public set; }
    public bool Map { get; public set; }
    public bool GetKeys { get; public set; }
    public bool List { get; public set; }
    public bool GetCount { get; public set; }
    [CompilerGeneratedAttribute]
public string get_RenameTo();
    [CompilerGeneratedAttribute]
public void set_RenameTo(string value);
    [CompilerGeneratedAttribute]
public bool get_Map();
    [CompilerGeneratedAttribute]
public void set_Map(bool value);
    [CompilerGeneratedAttribute]
public bool get_GetKeys();
    [CompilerGeneratedAttribute]
public void set_GetKeys(bool value);
    [CompilerGeneratedAttribute]
public bool get_List();
    [CompilerGeneratedAttribute]
public void set_List(bool value);
    [CompilerGeneratedAttribute]
public bool get_GetCount();
    [CompilerGeneratedAttribute]
public void set_GetCount(bool value);
}
public class Amazon.XRay.Recorder.Handlers.AwsSdk.Entities.AWSServiceHandler : object {
    private Dictionary`2<string, AWSOperationHandler> _operations;
    public Dictionary`2<string, AWSOperationHandler> Operations { get; public set; }
    public Dictionary`2<string, AWSOperationHandler> get_Operations();
    public void set_Operations(Dictionary`2<string, AWSOperationHandler> value);
}
public class Amazon.XRay.Recorder.Handlers.AwsSdk.Entities.AWSServiceHandlerManifest : object {
    private Dictionary`2<string, AWSServiceHandler> _services;
    public Dictionary`2<string, AWSServiceHandler> Services { get; public set; }
    public Dictionary`2<string, AWSServiceHandler> get_Services();
    public void set_Services(Dictionary`2<string, AWSServiceHandler> value);
}
internal class Amazon.XRay.Recorder.Handlers.AwsSdk.Internal.AWSXRaySDKUtils : object {
    private static string XRayServiceName;
    private static ISet`1<string> WhitelistedOperations;
    private static Dictionary`2<string, string> FormattedServiceNames;
    private static AWSXRaySDKUtils();
    internal static bool IsBlacklistedOperation(string serviceName, string operation);
    internal static string FormatServiceName(string serviceName);
}
public class Amazon.XRay.Recorder.Handlers.AwsSdk.Internal.XRayPipelineCustomizer : object {
    private bool registerAll;
    private List`1<Type> types;
    private ReaderWriterLockSlim rwLock;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private XRayPipelineHandler <XRayPipelineHandler>k__BackingField;
    [CompilerGeneratedAttribute]
private AWSServiceHandlerManifest <AWSServiceHandlerManifest>k__BackingField;
    public string UniqueName { get; }
    public bool RegisterAll { get; public set; }
    public string Path { get; public set; }
    public XRayPipelineHandler XRayPipelineHandler { get; public set; }
    public AWSServiceHandlerManifest AWSServiceHandlerManifest { get; public set; }
    public sealed virtual string get_UniqueName();
    public bool get_RegisterAll();
    public void set_RegisterAll(bool value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public XRayPipelineHandler get_XRayPipelineHandler();
    [CompilerGeneratedAttribute]
public void set_XRayPipelineHandler(XRayPipelineHandler value);
    [CompilerGeneratedAttribute]
public AWSServiceHandlerManifest get_AWSServiceHandlerManifest();
    [CompilerGeneratedAttribute]
public void set_AWSServiceHandlerManifest(AWSServiceHandlerManifest value);
    public sealed virtual void Customize(Type serviceClientType, RuntimePipeline pipeline);
    private bool ProcessType(Type serviceClientType, bool addCustomization);
    public void AddType(Type type);
}
public class Amazon.XRay.Recorder.Handlers.AwsSdk.Internal.XRayPipelineHandler : PipelineHandler {
    private static string DefaultAwsWhitelistManifestResourceName;
    private static Logger _logger;
    private AWSXRayRecorder _recorder;
    [CompilerGeneratedAttribute]
private AWSServiceHandlerManifest <AWSServiceHandlerManifest>k__BackingField;
    public AWSServiceHandlerManifest AWSServiceHandlerManifest { get; private set; }
    public XRayPipelineHandler(string path);
    public XRayPipelineHandler(Stream stream);
    public XRayPipelineHandler(AWSServiceHandlerManifest awsServiceManifest);
    private static XRayPipelineHandler();
    [CompilerGeneratedAttribute]
public AWSServiceHandlerManifest get_AWSServiceHandlerManifest();
    [CompilerGeneratedAttribute]
private void set_AWSServiceHandlerManifest(AWSServiceHandlerManifest value);
    public static AWSServiceHandlerManifest GetAWSServiceManifest(string path);
    public static AWSServiceHandlerManifest GetAWSServiceManifest(Stream stream);
    private static bool TryReadPropertyValue(object obj, string propertyName, Object& value);
    private static string RemoveAmazonPrefixFromServiceName(string serviceName);
    private static string RemovePrefix(string originalString, string prefix);
    private static string RemoveSuffix(string originalString, string suffix);
    private static void AddMapKeyProperty(IDictionary`2<string, object> aws, object obj, string propertyName, string renameTo);
    private static void AddListLengthProperty(IDictionary`2<string, object> aws, object obj, string propertyName, string renameTo);
    private static AWSServiceHandlerManifest GetDefaultAWSWhitelist();
    private static AWSServiceHandlerManifest GetAWSServiceHandlerManifest(Stream stream);
    private void ProcessBeginRequest(IExecutionContext executionContext);
    private void ProcessEndRequest(IExecutionContext executionContext);
    private void AddHttpInformation(IWebResponseData httpResponse);
    private void ProcessException(AmazonServiceException ex, Entity subsegment);
    private void AddRequestSpecificInformation(string serviceName, string operation, AmazonWebServiceRequest request, IDictionary`2<string, object> aws);
    private void AddResponseSpecificInformation(string serviceName, string operation, AmazonWebServiceResponse response, IDictionary`2<string, object> aws);
    public virtual void InvokeSync(IExecutionContext executionContext);
    private void PopulateException(Exception e);
    private static bool ExcludeServiceOperation(IExecutionContext executionContext);
    private static bool IsTracingDisabled();
    [AsyncStateMachineAttribute("Amazon.XRay.Recorder.Handlers.AwsSdk.Internal.XRayPipelineHandler/<InvokeAsync>d__31`1")]
public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<T> <>n__0(IExecutionContext executionContext);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<T> <>n__1(IExecutionContext executionContext);
}
