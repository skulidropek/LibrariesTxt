public static class Amazon.XRay.Recorder.Handlers.EntityFramework.AWSXRayEntityFramework6 : object {
    public static void AddXRayInterceptor(Nullable`1<bool> collectSqlQueries);
}
public class Amazon.XRay.Recorder.Handlers.EntityFramework.EFInterceptor : object {
    private Nullable`1<bool> _collectSqlQueriesOverride;
    public EFInterceptor(Nullable`1<bool> collectSqlQueries);
    public sealed virtual void NonQueryExecuting(DbCommand command, DbCommandInterceptionContext`1<int> interceptionContext);
    public sealed virtual void NonQueryExecuted(DbCommand command, DbCommandInterceptionContext`1<int> interceptionContext);
    public sealed virtual void ReaderExecuting(DbCommand command, DbCommandInterceptionContext`1<DbDataReader> interceptionContext);
    public sealed virtual void ReaderExecuted(DbCommand command, DbCommandInterceptionContext`1<DbDataReader> interceptionContext);
    public sealed virtual void ScalarExecuting(DbCommand command, DbCommandInterceptionContext`1<object> interceptionContext);
    public sealed virtual void ScalarExecuted(DbCommand command, DbCommandInterceptionContext`1<object> interceptionContext);
    private void OnCommandStart(DbCommand command);
    private static void OnCommandStop(Exception exception);
}
internal static class Amazon.XRay.Recorder.Handlers.EntityFramework.EFUtil : object {
    private static string DefaultDbTypeEntityFramework;
    private static string SqlServerCompact35;
    private static string SqlServerCompact40;
    private static string MicrosoftSqlClient;
    private static string SystemSqlClient;
    private static string SqlServer;
    private static String[] UserIdFormatOptions;
    private static String[] DatabaseTypes;
    private static Regex _portNumberRegex;
    private static AWSXRayRecorder _recorder;
    private static Logger _logger;
    private static EFUtil();
    internal static void ProcessBeginCommand(DbCommand command, Nullable`1<bool> collectSqlQueriesOverride);
    internal static void ProcessEndCommand();
    internal static void ProcessCommandError(Exception exception);
    private static string BuildSubsegmentName(DbCommand command);
    private static void CollectSqlInformation(DbCommand command, Nullable`1<bool> collectSqlQueriesOverride);
    internal static string GetDataBaseType(DbCommand command);
    internal static string GetUserId(DbConnectionStringBuilder builder);
    private static string RemovePortNumberFromDataSource(string dataSource);
    private static bool ShouldCollectSqlText(Nullable`1<bool> collectSqlQueriesOverride);
}
