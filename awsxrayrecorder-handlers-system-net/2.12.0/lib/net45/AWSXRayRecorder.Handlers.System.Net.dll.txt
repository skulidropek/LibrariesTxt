public class Amazon.XRay.Recorder.Handlers.System.Net.HttpClientXRaySanitizedTracingHandler : DelegatingHandler {
    [CompilerGeneratedAttribute]
private bool <_sanitizeHttpRequestTracing>k__BackingField;
    private bool _sanitizeHttpRequestTracing { get; private set; }
    public HttpClientXRaySanitizedTracingHandler(HttpMessageHandler innerHandler);
    [CompilerGeneratedAttribute]
private bool get__sanitizeHttpRequestTracing();
    [CompilerGeneratedAttribute]
private void set__sanitizeHttpRequestTracing(bool value);
    [AsyncStateMachineAttribute("Amazon.XRay.Recorder.Handlers.System.Net.HttpClientXRaySanitizedTracingHandler/<SendAsync>d__6")]
protected virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<HttpResponseMessage> <>n__0(HttpRequestMessage request, CancellationToken cancellationToken);
}
public class Amazon.XRay.Recorder.Handlers.System.Net.HttpClientXRayTracingHandler : DelegatingHandler {
    public HttpClientXRayTracingHandler(HttpMessageHandler innerHandler);
    [AsyncStateMachineAttribute("Amazon.XRay.Recorder.Handlers.System.Net.HttpClientXRayTracingHandler/<SendAsync>d__2")]
protected virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<HttpResponseMessage> <>n__0(HttpRequestMessage request, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Amazon.XRay.Recorder.Handlers.System.Net.HttpWebRequestTracingExtension : object {
    [ExtensionAttribute]
public static WebResponse GetResponseTraced(WebRequest request, bool sanitizeHttpRequestTracing);
    [AsyncStateMachineAttribute("Amazon.XRay.Recorder.Handlers.System.Net.HttpWebRequestTracingExtension/<GetAsyncResponseTraced>d__1")]
[ExtensionAttribute]
public static Task`1<WebResponse> GetAsyncResponseTraced(WebRequest request, bool sanitizeHttpRequestTracing);
}
public static class Amazon.XRay.Recorder.Handlers.System.Net.Utils.RequestUtil : object {
    private static Logger _logger;
    private static RequestUtil();
    internal static void ProcessRequest(WebRequest request, bool sanitizeHttpRequestTracing);
    internal static void ProcessRequest(HttpRequestMessage request, bool sanitizeHttpRequestTracing);
    internal static void ProcessResponse(HttpWebResponse response);
    internal static void ProcessResponse(HttpResponseMessage response);
    private static void ProcessRequest(Uri uri, string method, Action`1<string> addHeaderAction, bool sanitizeHttpRequestTracing);
    private static void ProcessResponse(HttpStatusCode httpStatusCode, Nullable`1<long> contentLength);
}
