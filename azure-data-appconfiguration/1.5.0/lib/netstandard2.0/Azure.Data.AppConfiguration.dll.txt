[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Autorest.CSharp.Core.GeneratorPageableHelpers : object {
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Autorest.CSharp.Core.GeneratorPageableHelpers/<CreateAsyncPageable>d__8`1")]
public static ValueTask`1<Operation`1<AsyncPageable`1<T>>> CreateAsyncPageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Operation`1<Pageable`1<T>> CreatePageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreateEnumerable(Func`2<Nullable`1<int>, Page`1<T>> firstPageFunc, Func`3<string, Nullable`1<int>, Page`1<T>> nextPageFunc, Nullable`1<int> pageSize);
    public static AsyncPageable`1<T> CreateAsyncEnumerable(Func`2<Nullable`1<int>, Task`1<Page`1<T>>> firstPageFunc, Func`3<string, Nullable`1<int>, Task`1<Page`1<T>>> nextPageFunc, Nullable`1<int> pageSize);
}
internal static class Azure.Core.AppContextSwitchHelper : object {
    [NullableContextAttribute("1")]
public static bool GetConfigValue(string appContexSwitchName, string environmentVariableName);
}
internal class Azure.Core.ArrayBufferWriter`1 : object {
    private T[] _buffer;
    private static int DefaultInitialBufferSize;
    [CompilerGeneratedAttribute]
private int <WrittenCount>k__BackingField;
    public ReadOnlyMemory`1<T> WrittenMemory { get; }
    public ReadOnlySpan`1<T> WrittenSpan { get; }
    public int WrittenCount { get; private set; }
    public int Capacity { get; }
    public int FreeCapacity { get; }
    public ArrayBufferWriter`1(int initialCapacity);
    public ReadOnlyMemory`1<T> get_WrittenMemory();
    public ReadOnlySpan`1<T> get_WrittenSpan();
    [CompilerGeneratedAttribute]
public int get_WrittenCount();
    [CompilerGeneratedAttribute]
private void set_WrittenCount(int value);
    public int get_Capacity();
    public int get_FreeCapacity();
    public void Clear();
    public sealed virtual void Advance(int count);
    public sealed virtual Memory`1<T> GetMemory(int sizeHint);
    public sealed virtual Span`1<T> GetSpan(int sizeHint);
    private void CheckAndResizeBuffer(int sizeHint);
    private static void ThrowInvalidOperationException_AdvancedTooFar(int capacity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.AsyncLockWithValue`1 : object {
    private object _syncObj;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Queue`1<TaskCompletionSource`1<LockOrValue<T>>> _waiters;
    private bool _isLocked;
    private bool _hasValue;
    private long _index;
    [NullableAttribute("2")]
private T _value;
    public bool HasValue { get; }
    public AsyncLockWithValue`1(T value);
    public bool get_HasValue();
    [NullableContextAttribute("2")]
public bool TryGetValue(T& value);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Azure.Core.AsyncLockWithValue`1/<GetLockOrValueAsync>d__11")]
public ValueTask`1<LockOrValue<T>> GetLockOrValueAsync(bool async, CancellationToken cancellationToken);
    private void SetValue(T value, Int64& lockIndex);
    private void Reset(Int64& lockIndex);
    private void UnlockOrGetNextWaiter(Int64& lockIndex, TaskCompletionSource`1& nextWaiter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.AzureKeyCredentialPolicy : HttpPipelineSynchronousPolicy {
    private string _name;
    private AzureKeyCredential _credential;
    [NullableAttribute("2")]
private string _prefix;
    public AzureKeyCredentialPolicy(AzureKeyCredential credential, string name, string prefix);
    public virtual void OnSendingRequest(HttpMessage message);
}
[AttributeUsageAttribute("1")]
internal class Azure.Core.AzureResourceProviderNamespaceAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ResourceProviderNamespace>k__BackingField;
    public string ResourceProviderNamespace { get; }
    public AzureResourceProviderNamespaceAttribute(string resourceProviderNamespace);
    [CompilerGeneratedAttribute]
public string get_ResourceProviderNamespace();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
internal class Azure.Core.CodeGenClientAttribute : CodeGenTypeAttribute {
    [CompilerGeneratedAttribute]
private Type <ParentClient>k__BackingField;
    public Type ParentClient { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenClientAttribute(string originalName);
    [CompilerGeneratedAttribute]
public Type get_ParentClient();
    [CompilerGeneratedAttribute]
public void set_ParentClient(Type value);
}
[AttributeUsageAttribute("384")]
internal class Azure.Core.CodeGenMemberAttribute : CodeGenTypeAttribute {
    [NullableContextAttribute("1")]
public CodeGenMemberAttribute(string originalName);
}
[AttributeUsageAttribute("28")]
internal class Azure.Core.CodeGenModelAttribute : CodeGenTypeAttribute {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <Usage>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <Formats>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] Usage { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] Formats { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenModelAttribute(string originalName);
    [CompilerGeneratedAttribute]
public String[] get_Usage();
    [CompilerGeneratedAttribute]
public void set_Usage(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_Formats();
    [CompilerGeneratedAttribute]
public void set_Formats(String[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1")]
internal class Azure.Core.CodeGenOverrideServiceVersionsAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Versions>k__BackingField;
    public String[] Versions { get; }
    public CodeGenOverrideServiceVersionsAttribute(String[] versions);
    [CompilerGeneratedAttribute]
public String[] get_Versions();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("12")]
internal class Azure.Core.CodeGenSerializationAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <SerializationPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SerializationValueHook>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeserializationValueHook>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BicepSerializationValueHook>k__BackingField;
    public string PropertyName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] SerializationPath { get; }
    public string SerializationValueHook { get; public set; }
    public string DeserializationValueHook { get; public set; }
    public string BicepSerializationValueHook { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenSerializationAttribute(string propertyName);
    [NullableContextAttribute("1")]
public CodeGenSerializationAttribute(string propertyName, string serializationName);
    [NullableContextAttribute("1")]
public CodeGenSerializationAttribute(string propertyName, String[] serializationPath);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public void set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public String[] get_SerializationPath();
    [CompilerGeneratedAttribute]
public string get_SerializationValueHook();
    [CompilerGeneratedAttribute]
public void set_SerializationValueHook(string value);
    [CompilerGeneratedAttribute]
public string get_DeserializationValueHook();
    [CompilerGeneratedAttribute]
public void set_DeserializationValueHook(string value);
    [CompilerGeneratedAttribute]
public string get_BicepSerializationValueHook();
    [CompilerGeneratedAttribute]
public void set_BicepSerializationValueHook(string value);
}
[AttributeUsageAttribute("28")]
internal class Azure.Core.CodeGenSuppressAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Member>k__BackingField;
    [CompilerGeneratedAttribute]
private Type[] <Parameters>k__BackingField;
    public string Member { get; }
    public Type[] Parameters { get; }
    public CodeGenSuppressAttribute(string member, Type[] parameters);
    [CompilerGeneratedAttribute]
public string get_Member();
    [CompilerGeneratedAttribute]
public Type[] get_Parameters();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1")]
internal class Azure.Core.CodeGenSuppressTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Typename>k__BackingField;
    public string Typename { get; }
    public CodeGenSuppressTypeAttribute(string typename);
    [CompilerGeneratedAttribute]
public string get_Typename();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
internal class Azure.Core.CodeGenTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <OriginalName>k__BackingField;
    public string OriginalName { get; }
    public CodeGenTypeAttribute(string originalName);
    [CompilerGeneratedAttribute]
public string get_OriginalName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.ConnectionString : object {
    private Dictionary`2<string, string> _pairs;
    private string _pairSeparator;
    private string _keywordValueSeparator;
    private ConnectionString(Dictionary`2<string, string> pairs, string pairSeparator, string keywordValueSeparator);
    public static ConnectionString Parse(string connectionString, string segmentSeparator, string keywordValueSeparator, bool allowEmptyValues);
    public static ConnectionString Empty(string segmentSeparator, string keywordValueSeparator);
    public string GetRequired(string keyword);
    public string GetNonRequired(string keyword);
    public bool TryGetSegmentValue(string keyword, String& value);
    public string GetSegmentValueOrDefault(string keyword, string defaultValue);
    public bool ContainsSegmentKey(string keyword);
    public void Replace(string keyword, string value);
    public void Add(string keyword, string value);
    public virtual string ToString();
    private static Dictionary`2<string, string> ParseSegments(String& connectionString, String& separator, String& keywordValueSeparator);
    private static bool TryGetNextSegment(String& str, String& separator, Int32& start, Int32& end);
    private static void Validate(string connectionString, string segmentSeparator, string keywordValueSeparator, bool allowEmptyValues);
    [CompilerGeneratedAttribute]
internal static int <ParseSegments>g__GetStart|14_0(String& str, int start);
    [CompilerGeneratedAttribute]
internal static int <ParseSegments>g__GetLength|14_1(String& str, Int32& start, int end);
}
internal class Azure.Core.FixedDelayWithNoJitterStrategy : DelayStrategy {
    private static TimeSpan DefaultDelay;
    private TimeSpan _delay;
    public FixedDelayWithNoJitterStrategy(Nullable`1<TimeSpan> suggestedDelay);
    private static FixedDelayWithNoJitterStrategy();
    [NullableContextAttribute("2")]
protected virtual TimeSpan GetNextDelayCore(Response response, int retryNumber);
}
internal class Azure.Core.FormUrlEncodedContent : RequestContent {
    private List`1<KeyValuePair`2<string, string>> _values;
    private Encoding Latin1;
    private Byte[] _bytes;
    public void Add(string parameter, string value);
    private void BuildIfNeeded();
    [AsyncStateMachineAttribute("Azure.Core.FormUrlEncodedContent/<WriteToAsync>d__5")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
    private Byte[] GetContentByteArray(IEnumerable`1<KeyValuePair`2<string, string>> nameValueCollection);
    private static string Encode(string data);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.HashCodeBuilder : ValueType {
    private static UInt32 s_seed;
    private static UInt32 Prime1;
    private static UInt32 Prime2;
    private static UInt32 Prime3;
    private static UInt32 Prime4;
    private static UInt32 Prime5;
    private UInt32 _v1;
    private UInt32 _v2;
    private UInt32 _v3;
    private UInt32 _v4;
    private UInt32 _queue1;
    private UInt32 _queue2;
    private UInt32 _queue3;
    private UInt32 _length;
    private static HashCodeBuilder();
    private static UInt32 GenerateGlobalSeed();
    public static int Combine(T1 value1);
    public static int Combine(T1 value1, T2 value2);
    public static int Combine(T1 value1, T2 value2, T3 value3);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7, T8 value8);
    private static void Initialize(UInt32& v1, UInt32& v2, UInt32& v3, UInt32& v4);
    private static UInt32 Round(UInt32 hash, UInt32 input);
    private static UInt32 QueueRound(UInt32 hash, UInt32 queuedValue);
    private static UInt32 MixState(UInt32 v1, UInt32 v2, UInt32 v3, UInt32 v4);
    public static UInt32 RotateLeft(UInt32 value, int offset);
    private static UInt32 MixEmptyState();
    private static UInt32 MixFinal(UInt32 hash);
    public void Add(T value);
    public void Add(T value, IEqualityComparer`1<T> comparer);
    private void Add(int value);
    public int ToHashCode();
    [ObsoleteAttribute("HashCode is a mutable struct and should not be compared with other HashCodes. Use ToHashCode to retrieve the computed hash code.", "True")]
[EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("HashCode is a mutable struct and should not be compared with other HashCodes.", "True")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.HttpMessageSanitizer : object {
    private static string LogAllValue;
    private bool _logAllHeaders;
    private bool _logFullQueries;
    private String[] _allowedQueryParameters;
    private string _redactedPlaceholder;
    private HashSet`1<string> _allowedHeaders;
    [NullableAttribute("2")]
[ThreadStaticAttribute]
private static StringBuilder s_cachedStringBuilder;
    private static int MaxCachedStringBuilderCapacity;
    internal static HttpMessageSanitizer Default;
    public HttpMessageSanitizer(String[] allowedQueryParameters, String[] allowedHeaders, string redactedPlaceholder);
    private static HttpMessageSanitizer();
    public string SanitizeHeader(string name, string value);
    public string SanitizeUrl(string url);
    private static StringBuilder RentStringBuilder(int capacity);
    private static string ToStringAndReturnStringBuilder(StringBuilder builder);
    [CompilerGeneratedAttribute]
internal static StringBuilder <SanitizeUrl>g__AppendReadOnlySpan|11_0(StringBuilder builder, ReadOnlySpan`1<char> span);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.HttpPipelineExtensions : object {
    [AsyncStateMachineAttribute("Azure.Core.HttpPipelineExtensions/<ProcessMessageAsync>d__0")]
[ExtensionAttribute]
public static ValueTask`1<Response> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, RequestContext requestContext, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response ProcessMessage(HttpPipeline pipeline, HttpMessage message, RequestContext requestContext, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.HttpPipelineExtensions/<ProcessHeadAsBoolMessageAsync>d__2")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<bool>> ProcessHeadAsBoolMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, RequestContext requestContext);
    [ExtensionAttribute]
public static Response`1<bool> ProcessHeadAsBoolMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, RequestContext requestContext);
    [NullableContextAttribute("0")]
private static ValueTuple`2<CancellationToken, ErrorOptions> ApplyRequestContext(RequestContext requestContext);
}
internal interface Azure.Core.IOperation {
    public abstract virtual ValueTask`1<OperationState> UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("2")]
internal interface Azure.Core.IOperation`1 {
    public abstract virtual ValueTask`1<OperationState`1<T>> UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
internal interface Azure.Core.IOperationSource`1 {
    public abstract virtual T CreateResult(Response response, CancellationToken cancellationToken);
    public abstract virtual ValueTask`1<T> CreateResultAsync(Response response, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Azure.Core.IUtf8JsonSerializable {
    public abstract virtual void Write(Utf8JsonWriter writer);
}
[NullableContextAttribute("1")]
internal interface Azure.Core.IXmlSerializable {
    public abstract virtual void Write(XmlWriter writer, string nameHint);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.NextLinkOperationImplementation : object {
    internal static string NotSet;
    internal static string RehydrationTokenVersion;
    private static string ApiVersionParam;
    private static String[] FailureStates;
    private static String[] SuccessStates;
    private HeaderSource _headerSource;
    private Uri _startRequestUri;
    private OperationFinalStateVia _finalStateVia;
    private HttpPipeline _pipeline;
    [NullableAttribute("2")]
private string _apiVersion;
    [NullableAttribute("2")]
private string _lastKnownLocation;
    private string _nextRequestUri;
    [CompilerGeneratedAttribute]
private string <OperationId>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestMethod <RequestMethod>k__BackingField;
    public string OperationId { get; private set; }
    public RequestMethod RequestMethod { get; }
    private NextLinkOperationImplementation(HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, string nextRequestUri, HeaderSource headerSource, string lastKnownLocation, OperationFinalStateVia finalStateVia, string apiVersion, string operationId, bool isNextRequestPolling);
    private static NextLinkOperationImplementation();
    [CompilerGeneratedAttribute]
public string get_OperationId();
    [CompilerGeneratedAttribute]
private void set_OperationId(string value);
    [CompilerGeneratedAttribute]
public RequestMethod get_RequestMethod();
    public static IOperation Create(HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    public static IOperation`1<T> Create(IOperationSource`1<T> operationSource, HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    public static IOperation`1<T> Create(IOperationSource`1<T> operationSource, IOperation operation);
    public static IOperation Create(HttpPipeline pipeline, RehydrationToken rehydrationToken);
    private static string ParseOperationId(Uri startRequestUri, string nextRequestUri);
    public RehydrationToken GetRehydrationToken();
    public static RehydrationToken GetRehydrationToken(RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia);
    public static RehydrationToken GetRehydrationToken(RequestMethod requestMethod, Uri startRequestUri, string nextRequestUri, string headerSource, string lastKnownLocation, string finalStateVia, string operationId);
    [NullableContextAttribute("2")]
private static string ConstructStringValue(string value);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Azure.Core.NextLinkOperationImplementation/<UpdateStateAsync>d__29")]
public sealed virtual ValueTask`1<OperationState> UpdateStateAsync(bool async, CancellationToken cancellationToken);
    private static OperationState GetOperationStateFromFinalResponse(RequestMethod requestMethod, Response response);
    private void UpdateNextRequestUri(ResponseHeaders headers);
    internal static string AppendOrReplaceApiVersion(string uri, string apiVersion);
    [NullableContextAttribute("0")]
internal static bool TryGetApiVersion(Uri startRequestUri, ReadOnlySpan`1& apiVersion);
    [NullableContextAttribute("2")]
private string GetFinalUri(string resourceLocation);
    private Response GetResponse(string uri, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.NextLinkOperationImplementation/<GetResponseAsync>d__36")]
private ValueTask`1<Response> GetResponseAsync(string uri, CancellationToken cancellationToken);
    private HttpMessage CreateRequest(string uri);
    private static bool IsFinalState(Response response, HeaderSource headerSource, Nullable`1& failureState, String& resourceLocation);
    private static string GetRequiredString(JsonElement& element);
    private static bool ShouldIgnoreHeader(RequestMethod method, Response response);
    private static HeaderSource GetHeaderSource(RequestMethod requestMethod, Uri requestUri, Response response, string apiVersion, String& nextRequestUri, Boolean& isNextRequestPolling);
    private static void AssertNotNull(T value, string name);
}
internal enum Azure.Core.OperationFinalStateVia : Enum {
    public int value__;
    public static OperationFinalStateVia AzureAsyncOperation;
    public static OperationFinalStateVia Location;
    public static OperationFinalStateVia OriginalUri;
    public static OperationFinalStateVia OperationLocation;
    public static OperationFinalStateVia LocationOverride;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.OperationHelpers : object {
    public static T GetValue(T& value);
    [NullableContextAttribute("0")]
public static T GetValue(Nullable`1& value);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionAsync>d__2`1")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<TResult>> DefaultWaitForCompletionAsync(Operation`1<TResult> operation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionAsync>d__3`1")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<TResult>> DefaultWaitForCompletionAsync(Operation`1<TResult> operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response`1<TResult> DefaultWaitForCompletion(Operation`1<TResult> operation, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response`1<TResult> DefaultWaitForCompletion(Operation`1<TResult> operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionResponseAsync>d__6")]
[ExtensionAttribute]
public static ValueTask`1<Response> DefaultWaitForCompletionResponseAsync(Operation operation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionResponseAsync>d__7")]
[ExtensionAttribute]
public static ValueTask`1<Response> DefaultWaitForCompletionResponseAsync(Operation operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response DefaultWaitForCompletionResponse(Operation operation, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response DefaultWaitForCompletionResponse(Operation operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationInternal : OperationInternalBase {
    private OperationInternal`1<VoidValue> _internalOperation;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public OperationInternal(IOperation operation, ClientDiagnostics clientDiagnostics, Response rawResponse, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    internal OperationInternal(OperationState finalState);
    public static OperationInternal Succeeded(Response rawResponse);
    public static OperationInternal Failed(Response rawResponse, RequestFailedException operationFailedException);
    public virtual Response get_RawResponse();
    public virtual bool get_HasCompleted();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal/<UpdateStatusAsync>d__9")]
protected virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationInternal`1 : OperationInternalBase {
    private IOperation`1<T> _operation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AsyncLockWithValue`1<OperationState`1<T>> _stateLock;
    private Response _rawResponse;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasValue { get; }
    public T Value { get; }
    public OperationInternal`1(IOperation`1<T> operation, ClientDiagnostics clientDiagnostics, Response rawResponse, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    internal OperationInternal`1(OperationState`1<T> finalState);
    public static OperationInternal`1<T> Succeeded(Response rawResponse, T value);
    public static OperationInternal`1<T> Failed(Response rawResponse, RequestFailedException operationFailedException);
    public virtual Response get_RawResponse();
    public virtual bool get_HasCompleted();
    public bool get_HasValue();
    public T get_Value();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__15")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__16")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__19")]
private ValueTask`1<Response`1<T>> WaitForCompletionAsync(bool async, Nullable`1<TimeSpan> pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<UpdateStatusAsync>d__20")]
protected virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
    private static Response GetResponseFromState(OperationState`1<T> state);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Azure.Core.OperationInternalBase : object {
    private ClientDiagnostics _diagnostics;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IReadOnlyDictionary`2<string, string> _scopeAttributes;
    [NullableAttribute("2")]
private DelayStrategy _fallbackStrategy;
    private AsyncLockWithValue`1<Response> _responseLock;
    private string _waitForCompletionResponseScopeName;
    protected string _updateStatusScopeName;
    protected string _waitForCompletionScopeName;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    protected OperationInternalBase(Response rawResponse);
    protected OperationInternalBase(ClientDiagnostics clientDiagnostics, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    public abstract virtual Response get_RawResponse();
    public abstract virtual bool get_HasCompleted();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<UpdateStatusAsync>d__13")]
public ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public Response UpdateStatus(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__15")]
public ValueTask`1<Response> WaitForCompletionResponseAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__16")]
public ValueTask`1<Response> WaitForCompletionResponseAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__19")]
protected ValueTask`1<Response> WaitForCompletionResponseAsync(bool async, Nullable`1<TimeSpan> pollingInterval, string scopeName, CancellationToken cancellationToken);
    protected abstract virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
    protected DiagnosticScope CreateScope(string scopeName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationPoller : object {
    private DelayStrategy _delayStrategy;
    [NullableContextAttribute("2")]
public OperationPoller(DelayStrategy strategy);
    public ValueTask`1<Response> WaitForCompletionResponseAsync(Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public ValueTask`1<Response> WaitForCompletionResponseAsync(OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__6`1")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(Operation`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(Operation`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__8`1")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(OperationInternal`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(OperationInternal`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__10")]
private ValueTask`1<Response> WaitForCompletionAsync(bool async, Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__11")]
private ValueTask`1<Response> WaitForCompletionAsync(bool async, OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<Delay>d__12")]
private static ValueTask Delay(bool async, TimeSpan delay, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.OperationState : ValueType {
    [CompilerGeneratedAttribute]
private Response <RawResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasSucceeded>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private RequestFailedException <OperationFailedException>k__BackingField;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasSucceeded { get; }
    [NullableAttribute("2")]
public RequestFailedException OperationFailedException { get; }
    private OperationState(Response rawResponse, bool hasCompleted, bool hasSucceeded, RequestFailedException operationFailedException);
    [CompilerGeneratedAttribute]
public Response get_RawResponse();
    [CompilerGeneratedAttribute]
public bool get_HasCompleted();
    [CompilerGeneratedAttribute]
public bool get_HasSucceeded();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public RequestFailedException get_OperationFailedException();
    public static OperationState Success(Response rawResponse);
    public static OperationState Failure(Response rawResponse, RequestFailedException operationFailedException);
    public static OperationState Pending(Response rawResponse);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.OperationState`1 : ValueType {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Response <RawResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasSucceeded>k__BackingField;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestFailedException <OperationFailedException>k__BackingField;
    [NullableAttribute("1")]
public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasSucceeded { get; }
    public T Value { get; }
    public RequestFailedException OperationFailedException { get; }
    private OperationState`1(Response rawResponse, bool hasCompleted, bool hasSucceeded, T value, RequestFailedException operationFailedException);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Response get_RawResponse();
    [CompilerGeneratedAttribute]
public bool get_HasCompleted();
    [CompilerGeneratedAttribute]
public bool get_HasSucceeded();
    [CompilerGeneratedAttribute]
public T get_Value();
    [CompilerGeneratedAttribute]
public RequestFailedException get_OperationFailedException();
    [NullableContextAttribute("1")]
public static OperationState`1<T> Success(Response rawResponse, T value);
    [NullableContextAttribute("1")]
public static OperationState`1<T> Failure(Response rawResponse, RequestFailedException operationFailedException);
    [NullableContextAttribute("1")]
public static OperationState`1<T> Pending(Response rawResponse);
}
internal static class Azure.Core.Page : object {
    [NullableContextAttribute("1")]
public static Page`1<T> FromValues(IEnumerable`1<T> values, string continuationToken, Response response);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.PageableHelpers : object {
    private static Byte[] DefaultItemPropertyName;
    private static Byte[] DefaultNextLinkPropertyName;
    private static PageableHelpers();
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.PageableHelpers/<CreateAsyncPageable>d__10`1")]
public static ValueTask`1<Operation`1<AsyncPageable`1<T>>> CreateAsyncPageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Operation`1<Pageable`1<T>> CreatePageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreateEnumerable(Func`2<Nullable`1<int>, Page`1<T>> firstPageFunc, Func`3<string, Nullable`1<int>, Page`1<T>> nextPageFunc, Nullable`1<int> pageSize);
    public static AsyncPageable`1<T> CreateAsyncEnumerable(Func`2<Nullable`1<int>, Task`1<Page`1<T>>> firstPageFunc, Func`3<string, Nullable`1<int>, Task`1<Page`1<T>>> nextPageFunc, Nullable`1<int> pageSize);
    private static ValueTuple`2<List`1<T>, string> ParseResponseForBinaryData(Response response, Byte[] itemPropertyName, Byte[] nextLinkPropertyName);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static object <ParseResponseForBinaryData>g__ReadBinaryData|19_0(Utf8JsonReader& r, ReadOnlyMemory`1& content);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.PageResponseEnumerator : object {
    public static FuncPageable`1<T> CreateEnumerable(Func`2<string, Page`1<T>> pageFunc);
    public static FuncPageable`1<T> CreateEnumerable(Func`3<string, Nullable`1<int>, Page`1<T>> pageFunc);
    public static AsyncPageable`1<T> CreateAsyncEnumerable(Func`2<string, Task`1<Page`1<T>>> pageFunc);
    public static AsyncPageable`1<T> CreateAsyncEnumerable(Func`3<string, Nullable`1<int>, Task`1<Page`1<T>>> pageFunc);
}
internal static class Azure.Core.Pipeline.ActivityExtensions : object {
    [CompilerGeneratedAttribute]
private static bool <SupportsActivitySource>k__BackingField;
    public static bool SupportsActivitySource { get; private set; }
    private static ActivityExtensions();
    [CompilerGeneratedAttribute]
public static bool get_SupportsActivitySource();
    [CompilerGeneratedAttribute]
private static void set_SupportsActivitySource(bool value);
    public static void ResetFeatureSwitch();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.ClientDiagnostics : DiagnosticScopeFactory {
    public ClientDiagnostics(ClientOptions options, Nullable`1<bool> suppressNestedClientActivities);
    public ClientDiagnostics(string optionsNamespace, string providerNamespace, DiagnosticsOptions diagnosticsOptions, Nullable`1<bool> suppressNestedClientActivities);
    internal static HttpMessageSanitizer CreateMessageSanitizer(DiagnosticsOptions diagnostics);
    internal static string GetResourceProviderNamespace(Assembly assembly);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.Pipeline.DiagnosticScope : ValueType {
    private static string AzureSdkScopeLabel;
    internal static string OpenTelemetrySchemaAttribute;
    internal static string OpenTelemetrySchemaVersion;
    private static object AzureSdkScopeValue;
    [NullableAttribute("2")]
private ActivityAdapter _activityAdapter;
    private bool _suppressNestedClientActivities;
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    public bool IsEnabled { get; }
    [RequiresUnreferencedCodeAttribute("The diagnosticSourceArgs are used in a call to DiagnosticSource.Write, all necessary properties need to be preserved on the type being passed in using DynamicDependency attributes.")]
internal DiagnosticScope(string scopeName, DiagnosticListener source, object diagnosticSourceArgs, ActivitySource activitySource, ActivityKind kind, bool suppressNestedClientActivities);
    private static DiagnosticScope();
    [CompilerGeneratedAttribute]
public bool get_IsEnabled();
    public void AddAttribute(string name, string value);
    public void AddIntegerAttribute(string name, int value);
    public void AddLongAttribute(string name, long value);
    public void AddAttribute(string name, T value, Func`2<T, string> format);
    public void AddLink(string traceparent, string tracestate, IDictionary`2<string, object> attributes);
    public void Start();
    public void SetDisplayName(string displayName);
    public void SetStartTime(DateTime dateTime);
    public void SetTraceContext(string traceparent, string tracestate);
    public sealed virtual void Dispose();
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void Failed(Exception exception);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void Failed(string errorCode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.DiagnosticScopeFactory : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Dictionary`2<string, DiagnosticListener> _listeners;
    [NullableAttribute("2")]
private string _resourceProviderNamespace;
    [NullableAttribute("2")]
private DiagnosticListener _source;
    private bool _suppressNestedClientActivities;
    private bool _isStable;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ConcurrentDictionary`2<string, ActivitySource> ActivitySources;
    [CompilerGeneratedAttribute]
private bool <IsActivityEnabled>k__BackingField;
    public bool IsActivityEnabled { get; }
    public DiagnosticScopeFactory(string clientNamespace, string resourceProviderNamespace, bool isActivityEnabled, bool suppressNestedClientActivities, bool isStable);
    private static DiagnosticScopeFactory();
    [CompilerGeneratedAttribute]
public bool get_IsActivityEnabled();
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
public DiagnosticScope CreateScope(string name, ActivityKind kind);
    private ActivitySource GetActivitySource(string ns, string name);
}
[ExtensionAttribute]
internal static class Azure.Core.Pipeline.TaskExtensions : object {
    [ExtensionAttribute]
public static WithCancellationTaskAwaitable AwaitWithCancellation(Task task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static WithCancellationTaskAwaitable`1<T> AwaitWithCancellation(Task`1<T> task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static WithCancellationValueTaskAwaitable`1<T> AwaitWithCancellation(ValueTask`1<T> task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static T EnsureCompleted(Task`1<T> task);
    [ExtensionAttribute]
public static void EnsureCompleted(Task task);
    [ExtensionAttribute]
public static T EnsureCompleted(ValueTask`1<T> task);
    [ExtensionAttribute]
public static void EnsureCompleted(ValueTask task);
    [ExtensionAttribute]
public static Enumerable`1<T> EnsureSyncEnumerable(IAsyncEnumerable`1<T> asyncEnumerable);
    [ExtensionAttribute]
public static ConfiguredValueTaskAwaitable`1<T> EnsureCompleted(ConfiguredValueTaskAwaitable`1<T> awaitable, bool async);
    [ExtensionAttribute]
public static ConfiguredValueTaskAwaitable EnsureCompleted(ConfiguredValueTaskAwaitable awaitable, bool async);
    [ConditionalAttribute("DEBUG")]
private static void VerifyTaskCompleted(bool isCompleted);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Core.ProtocolOperation`1 : Operation`1<T> {
    private Func`2<Response, T> _resultSelector;
    private OperationInternal`1<T> _operation;
    private IOperation _nextLinkOperation;
    public string Id { get; }
    public T Value { get; }
    public bool HasCompleted { get; }
    public bool HasValue { get; }
    internal ProtocolOperation`1(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Request request, Response response, OperationFinalStateVia finalStateVia, string scopeName, Func`2<Response, T> resultSelector);
    public virtual string get_Id();
    public virtual T get_Value();
    public virtual bool get_HasCompleted();
    public virtual bool get_HasValue();
    public virtual Response GetRawResponse();
    public virtual Response UpdateStatus(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.ProtocolOperation`1/<Azure-Core-IOperation<T>-UpdateStateAsync>d__17")]
private sealed virtual override ValueTask`1<OperationState`1<T>> Azure.Core.IOperation<T>.UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.ProtocolOperationHelpers : object {
    public static Operation`1<TTo> Convert(Operation`1<TFrom> operation, Func`2<Response, TTo> convertFunc, ClientDiagnostics diagnostics, string scopeName);
    public static ValueTask`1<Operation`1<VoidValue>> ProcessMessageWithoutResponseValueAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static Operation`1<VoidValue> ProcessMessageWithoutResponseValue(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static ValueTask`1<Operation`1<BinaryData>> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static Operation`1<BinaryData> ProcessMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    [AsyncStateMachineAttribute("Azure.Core.ProtocolOperationHelpers/<ProcessMessageAsync>d__5`1")]
public static ValueTask`1<Operation`1<T>> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil, Func`2<Response, T> resultSelector);
    public static Operation`1<T> ProcessMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil, Func`2<Response, T> resultSelector);
}
internal class Azure.Core.RawRequestUriBuilder : RequestUriBuilder {
    [NullableAttribute("1")]
private static string SchemeSeparator;
    private static char HostSeparator;
    private static char PortSeparator;
    [NullableAttribute("1")]
private static Char[] HostOrPort;
    private static char QueryBeginSeparator;
    private static char QueryContinueSeparator;
    private static char QueryValueSeparator;
    private Nullable`1<RawWritingPosition> _position;
    private static RawRequestUriBuilder();
    private static void GetQueryParts(ReadOnlySpan`1<char> queryUnparsed, ReadOnlySpan`1& name, ReadOnlySpan`1& value);
    [NullableContextAttribute("1")]
public void AppendRaw(string value, bool escape);
    private void AppendRaw(ReadOnlySpan`1<char> value, bool escape);
    [NullableContextAttribute("1")]
public void AppendRawNextLink(string nextLink, bool escape);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.RequestHeaderExtensions : object {
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, bool value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, float value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, double value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, int value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, long value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, TimeSpan value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, Guid value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, Byte[] value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, BinaryData value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string prefix, IDictionary`2<string, string> headersToAdd);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, ETag value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, MatchConditions conditions);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, RequestConditions conditions, string format);
    [ExtensionAttribute]
public static void AddDelimited(RequestHeaders headers, string name, IEnumerable`1<T> value, string delimiter);
    [ExtensionAttribute]
public static void AddDelimited(RequestHeaders headers, string name, IEnumerable`1<T> value, string delimiter, string format);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.RequestUriBuilderExtensions : object {
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, bool value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, float value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, double value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, int value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, Byte[] value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, IEnumerable`1<string> value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, DateTimeOffset value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, TimeSpan value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, Guid value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, long value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, bool value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, float value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, DateTimeOffset value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, TimeSpan value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, double value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, decimal value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, int value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, long value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, TimeSpan value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, Byte[] value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, Guid value, bool escape);
    [ExtensionAttribute]
public static void AppendQueryDelimited(RequestUriBuilder builder, string name, IEnumerable`1<T> value, string delimiter, bool escape);
    [ExtensionAttribute]
public static void AppendQueryDelimited(RequestUriBuilder builder, string name, IEnumerable`1<T> value, string delimiter, string format, bool escape);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.ResponseHeadersExtensions : object {
    private static String[] KnownFormats;
    private static ResponseHeadersExtensions();
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Byte[]& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, T& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string prefix, IDictionary`2& value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.ResponseWithHeaders : object {
    public static ResponseWithHeaders`2<T, THeaders> FromValue(T value, THeaders headers, Response rawResponse);
    public static ResponseWithHeaders`1<THeaders> FromValue(THeaders headers, Response rawResponse);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.ResponseWithHeaders`1 : object {
    private Response _rawResponse;
    [CompilerGeneratedAttribute]
private THeaders <Headers>k__BackingField;
    public THeaders Headers { get; }
    public ResponseWithHeaders`1(THeaders headers, Response rawResponse);
    public Response GetRawResponse();
    [CompilerGeneratedAttribute]
public THeaders get_Headers();
    public static Response op_Implicit(ResponseWithHeaders`1<THeaders> self);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Core.ResponseWithHeaders`2 : Response`1<T> {
    private Response _rawResponse;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private THeaders <Headers>k__BackingField;
    public T Value { get; }
    public THeaders Headers { get; }
    public ResponseWithHeaders`2(T value, THeaders headers, Response rawResponse);
    public virtual Response GetRawResponse();
    [CompilerGeneratedAttribute]
public virtual T get_Value();
    [CompilerGeneratedAttribute]
public THeaders get_Headers();
    public static Response op_Implicit(ResponseWithHeaders`2<T, THeaders> self);
}
internal class Azure.Core.SequentialDelayStrategy : DelayStrategy {
    [NullableAttribute("1")]
private static TimeSpan[] _pollingSequence;
    private static TimeSpan _maxDelay;
    private static SequentialDelayStrategy();
    [NullableContextAttribute("2")]
protected virtual TimeSpan GetNextDelayCore(Response response, int retryNumber);
}
internal class Azure.Core.StringRequestContent : RequestContent {
    private Byte[] _bytes;
    public StringRequestContent(string value);
    [AsyncStateMachineAttribute("Azure.Core.StringRequestContent/<WriteToAsync>d__2")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.TypeFormatters : object {
    private static string RoundtripZFormat;
    [CompilerGeneratedAttribute]
private static string <DefaultNumberFormat>k__BackingField;
    public static string DefaultNumberFormat { get; }
    private static TypeFormatters();
    [CompilerGeneratedAttribute]
public static string get_DefaultNumberFormat();
    public static string ToString(bool value);
    public static string ToString(DateTime value, string format);
    public static string ToString(DateTimeOffset value, string format);
    public static string ToString(TimeSpan value, string format);
    public static string ToString(Byte[] value, string format);
    public static string ToBase64UrlString(Byte[] value);
    public static Byte[] FromBase64UrlString(string value);
    private static int GetNumBase64PaddingCharsToAddForDecode(int inputLength);
    public static DateTimeOffset ParseDateTimeOffset(string value, string format);
    public static TimeSpan ParseTimeSpan(string value, string format);
    [NullableContextAttribute("2")]
public static string ConvertToString(object value, string format);
}
[IsReadOnlyAttribute]
internal class Azure.Core.VoidValue : ValueType {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.XmlWriterContent : RequestContent {
    private MemoryStream _stream;
    private RequestContent _content;
    [CompilerGeneratedAttribute]
private XmlWriter <XmlWriter>k__BackingField;
    public XmlWriter XmlWriter { get; }
    [CompilerGeneratedAttribute]
public XmlWriter get_XmlWriter();
    [AsyncStateMachineAttribute("Azure.Core.XmlWriterContent/<WriteToAsync>d__6")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
internal class Azure.Data.AppConfiguration.ApiVersionPolicy : HttpPipelineSynchronousPolicy {
    private string _versionString;
    public ApiVersionPolicy(string versionString);
    public virtual void OnSendingRequest(HttpMessage message);
}
internal static class Azure.Data.AppConfiguration.Argument : object {
    public static void AssertNotNull(T value, string name);
    public static void AssertNotNull(Nullable`1<T> value, string name);
    public static void AssertNotNullOrEmpty(IEnumerable`1<T> value, string name);
    public static void AssertNotNullOrEmpty(string value, string name);
    public static void AssertNotNullOrWhiteSpace(string value, string name);
    public static void AssertNotDefault(T& value, string name);
    public static void AssertInRange(T value, T minimum, T maximum, string name);
    public static void AssertEnumDefined(Type enumType, object value, string name);
    public static T CheckNotNull(T value, string name);
    public static string CheckNotNullOrEmpty(string value, string name);
    public static void AssertNull(T value, string name, string message);
}
internal class Azure.Data.AppConfiguration.AsyncConditionalPageable : AsyncPageable`1<ConfigurationSetting> {
    private ConditionalPageableImplementation _implementation;
    public AsyncConditionalPageable(ConditionalPageableImplementation implementation);
    public virtual IAsyncEnumerator`1<ConfigurationSetting> GetAsyncEnumerator(CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<Page`1<ConfigurationSetting>> AsPages(string continuationToken, Nullable`1<int> pageSizeHint);
    public IAsyncEnumerable`1<Page`1<ConfigurationSetting>> AsPages(IEnumerable`1<MatchConditions> conditions, string continuationToken, Nullable`1<int> pageSizeHint);
}
internal class Azure.Data.AppConfiguration.AuthenticationPolicy : HttpPipelinePolicy {
    private string _credential;
    private Byte[] _secret;
    public AuthenticationPolicy(string credential, Byte[] secret);
    public virtual void Process(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.AuthenticationPolicy/<ProcessAsync>d__4")]
public virtual ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    private static string CreateContentHash(HttpMessage message);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.AuthenticationPolicy/<CreateContentHashAsync>d__6")]
private static ValueTask`1<string> CreateContentHashAsync(HttpMessage message);
    private void AddHeaders(HttpMessage message, string contentHash);
    private string GetAuthorizationHeader(Request request, string contentHash, string date);
    private string ComputeHash(string value);
}
[DefaultMemberAttribute("Item")]
internal class Azure.Data.AppConfiguration.ChangeTrackingDictionary`2 : object {
    private IDictionary`2<TKey, TValue> _innerDictionary;
    public bool IsUndefined { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public ICollection`1<TKey> Keys { get; }
    public ICollection`1<TValue> Values { get; }
    public TValue Item { get; public set; }
    private IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys { get; }
    private IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values { get; }
    public ChangeTrackingDictionary`2(IDictionary`2<TKey, TValue> dictionary);
    public ChangeTrackingDictionary`2(IReadOnlyDictionary`2<TKey, TValue> dictionary);
    public bool get_IsUndefined();
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual ICollection`1<TKey> get_Keys();
    public sealed virtual ICollection`1<TValue> get_Values();
    public sealed virtual TValue get_Item(TKey key);
    public sealed virtual void set_Item(TKey key, TValue value);
    private sealed virtual override IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys();
    private sealed virtual override IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values();
    public sealed virtual IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual void Add(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int index);
    public sealed virtual bool Remove(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void Add(TKey key, TValue value);
    public sealed virtual bool ContainsKey(TKey key);
    public sealed virtual bool Remove(TKey key);
    public sealed virtual bool TryGetValue(TKey key, TValue& value);
    public IDictionary`2<TKey, TValue> EnsureDictionary();
    [IteratorStateMachineAttribute("Azure.Data.AppConfiguration.ChangeTrackingDictionary`2/<<GetEnumerator>g__enumerateEmpty|21_0>d")]
[CompilerGeneratedAttribute]
internal static IEnumerator`1<KeyValuePair`2<TKey, TValue>> <GetEnumerator>g__enumerateEmpty|21_0();
}
[DefaultMemberAttribute("Item")]
internal class Azure.Data.AppConfiguration.ChangeTrackingList`1 : object {
    private IList`1<T> _innerList;
    public bool IsUndefined { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public T Item { get; public set; }
    public ChangeTrackingList`1(IList`1<T> innerList);
    public ChangeTrackingList`1(IReadOnlyList`1<T> innerList);
    public bool get_IsUndefined();
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual T get_Item(int index);
    public sealed virtual void set_Item(int index, T value);
    public void Reset();
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual void Add(T item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(T item);
    public sealed virtual void CopyTo(T[] array, int arrayIndex);
    public sealed virtual bool Remove(T item);
    public sealed virtual int IndexOf(T item);
    public sealed virtual void Insert(int index, T item);
    public sealed virtual void RemoveAt(int index);
    public IList`1<T> EnsureList();
    [IteratorStateMachineAttribute("Azure.Data.AppConfiguration.ChangeTrackingList`1/<<GetEnumerator>g__enumerateEmpty|14_0>d")]
[CompilerGeneratedAttribute]
internal static IEnumerator`1<T> <GetEnumerator>g__enumerateEmpty|14_0();
}
[ExtensionAttribute]
internal static class Azure.Data.AppConfiguration.ClientOptionsExtensions : object {
    [ExtensionAttribute]
public static void ConfigureLogging(ClientOptions clientOptions);
}
internal class Azure.Data.AppConfiguration.ConditionalPageable : Pageable`1<ConfigurationSetting> {
    private ConditionalPageableImplementation _implementation;
    public ConditionalPageable(ConditionalPageableImplementation implementation);
    public virtual IEnumerable`1<Page`1<ConfigurationSetting>> AsPages(string continuationToken, Nullable`1<int> pageSizeHint);
    public IEnumerable`1<Page`1<ConfigurationSetting>> AsPages(IEnumerable`1<MatchConditions> conditions, string continuationToken, Nullable`1<int> pageSizeHint);
}
internal class Azure.Data.AppConfiguration.ConditionalPageableImplementation : object {
    private Func`3<MatchConditions, Nullable`1<int>, HttpMessage> _createFirstPageRequest;
    private Func`4<MatchConditions, Nullable`1<int>, string, HttpMessage> _createNextPageRequest;
    private HttpPipeline _pipeline;
    private ClientDiagnostics _clientDiagnostics;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`2<Response, ValueTuple`2<List`1<ConfigurationSetting>, string>> _responseParser;
    private string _scopeName;
    private CancellationToken _cancellationToken;
    private ErrorOptions _errorOptions;
    public ConditionalPageableImplementation(Func`3<MatchConditions, Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`4<MatchConditions, Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<ConfigurationSetting>, string>> responseParser, HttpPipeline pipeline, ClientDiagnostics clientDiagnostics, string scopeName, RequestContext requestContext);
    [AsyncIteratorStateMachineAttribute("Azure.Data.AppConfiguration.ConditionalPageableImplementation/<GetAsyncEnumerator>d__9")]
public IAsyncEnumerator`1<ConfigurationSetting> GetAsyncEnumerator(CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("Azure.Data.AppConfiguration.ConditionalPageableImplementation/<AsPagesAsync>d__10")]
public IAsyncEnumerable`1<Page`1<ConfigurationSetting>> AsPagesAsync(IEnumerable`1<MatchConditions> conditionsEnumerable, string continuationToken, Nullable`1<int> pageSizeHint, CancellationToken cancellationToken);
    [IteratorStateMachineAttribute("Azure.Data.AppConfiguration.ConditionalPageableImplementation/<GetEnumerator>d__11")]
public IEnumerator`1<ConfigurationSetting> GetEnumerator();
    [IteratorStateMachineAttribute("Azure.Data.AppConfiguration.ConditionalPageableImplementation/<AsPages>d__12")]
public IEnumerable`1<Page`1<ConfigurationSetting>> AsPages(IEnumerable`1<MatchConditions> conditionsEnumerable, string continuationToken, Nullable`1<int> pageSizeHint);
    private Response GetNextResponse(MatchConditions conditions, Nullable`1<int> pageSizeHint, string nextLink);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConditionalPageableImplementation/<GetNextResponseAsync>d__14")]
private ValueTask`1<Response> GetNextResponseAsync(MatchConditions conditions, Nullable`1<int> pageSizeHint, string nextLink, CancellationToken cancellationToken);
    private HttpMessage CreateMessage(MatchConditions conditions, Nullable`1<int> pageSizeHint, string nextLink);
    private Response GetResponse(HttpMessage message);
    private bool TryGetItemsFromResponse(Response response, String& nextLink, List`1& items);
    private Page`1<ConfigurationSetting> CreatePage(Response response, String& nextLink);
}
[CodeGenSuppressAttribute("ConfigurationClient", "Mono.Cecil.CustomAttributeArgument[]")]
public class Azure.Data.AppConfiguration.ConfigurationClient : object {
    private static string OTelAttributeKey;
    private SyncTokenPolicy _syncTokenPolicy;
    private static string AcceptDateTimeFormat;
    private static string KeyQueryFilter;
    private static string LabelQueryFilter;
    private static string FieldsQueryFilter;
    private static string AuthorizationHeader;
    private AzureKeyCredential _keyCredential;
    private static String[] AuthorizationScopes;
    private TokenCredential _tokenCredential;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _syncToken;
    private string _apiVersion;
    [CompilerGeneratedAttribute]
private ClientDiagnostics <ClientDiagnostics>k__BackingField;
    private static ResponseClassifier _responseClassifier200;
    private static ResponseClassifier _responseClassifier200204;
    private static ResponseClassifier _responseClassifier201;
    internal ClientDiagnostics ClientDiagnostics { get; }
    public HttpPipeline Pipeline { get; }
    private static ResponseClassifier ResponseClassifier200 { get; }
    private static ResponseClassifier ResponseClassifier200204 { get; }
    private static ResponseClassifier ResponseClassifier201 { get; }
    public ConfigurationClient(string connectionString);
    public ConfigurationClient(string connectionString, ConfigurationClientOptions options);
    public ConfigurationClient(Uri endpoint, TokenCredential credential);
    public ConfigurationClient(Uri endpoint, TokenCredential credential, ConfigurationClientOptions options);
    internal ConfigurationClient(Uri endpoint, AzureKeyCredential credential);
    internal ConfigurationClient(Uri endpoint, AzureKeyCredential credential, string syncToken, ConfigurationClientOptions options);
    internal ConfigurationClient(Uri endpoint, TokenCredential credential, string syncToken, ConfigurationClientOptions options);
    private static ConfigurationClient();
    private static HttpPipeline CreatePipeline(ConfigurationClientOptions options, HttpPipelinePolicy authenticationPolicy, HttpPipelinePolicy syncTokenPolicy);
    private static string GetDefaultScope(Uri uri);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<AddConfigurationSettingAsync>d__12")]
public virtual Task`1<Response`1<ConfigurationSetting>> AddConfigurationSettingAsync(string key, string value, string label, CancellationToken cancellationToken);
    public virtual Response`1<ConfigurationSetting> AddConfigurationSetting(string key, string value, string label, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<AddConfigurationSettingAsync>d__14")]
public virtual Task`1<Response`1<ConfigurationSetting>> AddConfigurationSettingAsync(ConfigurationSetting setting, CancellationToken cancellationToken);
    public virtual Response`1<ConfigurationSetting> AddConfigurationSetting(ConfigurationSetting setting, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<SetConfigurationSettingAsync>d__16")]
public virtual Task`1<Response`1<ConfigurationSetting>> SetConfigurationSettingAsync(string key, string value, string label, CancellationToken cancellationToken);
    public virtual Response`1<ConfigurationSetting> SetConfigurationSetting(string key, string value, string label, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<SetConfigurationSettingAsync>d__18")]
public virtual Task`1<Response`1<ConfigurationSetting>> SetConfigurationSettingAsync(ConfigurationSetting setting, bool onlyIfUnchanged, CancellationToken cancellationToken);
    public virtual Response`1<ConfigurationSetting> SetConfigurationSetting(ConfigurationSetting setting, bool onlyIfUnchanged, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<DeleteConfigurationSettingAsync>d__20")]
public virtual Task`1<Response> DeleteConfigurationSettingAsync(string key, string label, CancellationToken cancellationToken);
    public virtual Response DeleteConfigurationSetting(string key, string label, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<DeleteConfigurationSettingAsync>d__22")]
public virtual Task`1<Response> DeleteConfigurationSettingAsync(ConfigurationSetting setting, bool onlyIfUnchanged, CancellationToken cancellationToken);
    public virtual Response DeleteConfigurationSetting(ConfigurationSetting setting, bool onlyIfUnchanged, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<DeleteConfigurationSettingAsync>d__24")]
private Task`1<Response> DeleteConfigurationSettingAsync(string key, string label, MatchConditions requestOptions, CancellationToken cancellationToken);
    private Response DeleteConfigurationSetting(string key, string label, MatchConditions requestOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<GetConfigurationSettingAsync>d__26")]
public virtual Task`1<Response`1<ConfigurationSetting>> GetConfigurationSettingAsync(string key, string label, CancellationToken cancellationToken);
    public virtual Response`1<ConfigurationSetting> GetConfigurationSetting(string key, string label, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<GetConfigurationSettingAsync>d__28")]
public virtual Task`1<Response`1<ConfigurationSetting>> GetConfigurationSettingAsync(ConfigurationSetting setting, bool onlyIfChanged, CancellationToken cancellationToken);
    public virtual Response`1<ConfigurationSetting> GetConfigurationSetting(ConfigurationSetting setting, bool onlyIfChanged, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<GetConfigurationSettingAsync>d__30")]
public virtual Task`1<Response`1<ConfigurationSetting>> GetConfigurationSettingAsync(ConfigurationSetting setting, DateTimeOffset acceptDateTime, CancellationToken cancellationToken);
    public virtual Response`1<ConfigurationSetting> GetConfigurationSetting(ConfigurationSetting setting, DateTimeOffset acceptDateTime, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<GetConfigurationSettingAsync>d__32")]
internal virtual Task`1<Response`1<ConfigurationSetting>> GetConfigurationSettingAsync(string key, string label, Nullable`1<DateTimeOffset> acceptDateTime, MatchConditions conditions, CancellationToken cancellationToken);
    internal virtual Response`1<ConfigurationSetting> GetConfigurationSetting(string key, string label, Nullable`1<DateTimeOffset> acceptDateTime, MatchConditions conditions, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<ConfigurationSetting> GetConfigurationSettingsAsync(SettingSelector selector, CancellationToken cancellationToken);
    public virtual Pageable`1<ConfigurationSetting> GetConfigurationSettings(SettingSelector selector, CancellationToken cancellationToken);
    private ConditionalPageableImplementation GetConfigurationSettingsPageableImplementation(SettingSelector selector, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<ConfigurationSetting> GetConfigurationSettingsForSnapshotAsync(string snapshotName, CancellationToken cancellationToken);
    public virtual Pageable`1<ConfigurationSetting> GetConfigurationSettingsForSnapshot(string snapshotName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<ConfigurationSetting> GetConfigurationSettingsForSnapshotAsync(string snapshotName, SettingFields fields, CancellationToken cancellationToken);
    public virtual Pageable`1<ConfigurationSetting> GetConfigurationSettingsForSnapshot(string snapshotName, SettingFields fields, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<GetSnapshotAsync>d__41")]
public virtual Task`1<Response`1<ConfigurationSnapshot>> GetSnapshotAsync(string snapshotName, IEnumerable`1<SnapshotFields> fields, CancellationToken cancellationToken);
    public virtual Response`1<ConfigurationSnapshot> GetSnapshot(string snapshotName, IEnumerable`1<SnapshotFields> fields, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<CreateSnapshotAsync>d__43")]
public virtual Task`1<CreateSnapshotOperation> CreateSnapshotAsync(WaitUntil wait, string snapshotName, ConfigurationSnapshot snapshot, CancellationToken cancellationToken);
    public virtual CreateSnapshotOperation CreateSnapshot(WaitUntil wait, string snapshotName, ConfigurationSnapshot snapshot, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<ArchiveSnapshotAsync>d__45")]
public virtual Task`1<Response`1<ConfigurationSnapshot>> ArchiveSnapshotAsync(string snapshotName, CancellationToken cancellationToken);
    public virtual Response`1<ConfigurationSnapshot> ArchiveSnapshot(string snapshotName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<ArchiveSnapshotAsync>d__47")]
public virtual Task`1<Response`1<ConfigurationSnapshot>> ArchiveSnapshotAsync(string snapshotName, MatchConditions matchConditions, CancellationToken cancellationToken);
    public virtual Response`1<ConfigurationSnapshot> ArchiveSnapshot(string snapshotName, MatchConditions matchConditions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<RecoverSnapshotAsync>d__49")]
public virtual Task`1<Response`1<ConfigurationSnapshot>> RecoverSnapshotAsync(string snapshotName, CancellationToken cancellationToken);
    public virtual Response`1<ConfigurationSnapshot> RecoverSnapshot(string snapshotName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<RecoverSnapshotAsync>d__51")]
public virtual Task`1<Response`1<ConfigurationSnapshot>> RecoverSnapshotAsync(string snapshotName, MatchConditions matchConditions, CancellationToken cancellationToken);
    public virtual Response`1<ConfigurationSnapshot> RecoverSnapshot(string snapshotName, MatchConditions matchConditions, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<ConfigurationSnapshot> GetSnapshotsAsync(SnapshotSelector selector, CancellationToken cancellationToken);
    public virtual Pageable`1<ConfigurationSnapshot> GetSnapshots(SnapshotSelector selector, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<ConfigurationSetting> GetRevisionsAsync(string keyFilter, string labelFilter, CancellationToken cancellationToken);
    public virtual Pageable`1<ConfigurationSetting> GetRevisions(string keyFilter, string labelFilter, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<ConfigurationSetting> GetRevisionsAsync(SettingSelector selector, CancellationToken cancellationToken);
    public virtual Pageable`1<ConfigurationSetting> GetRevisions(SettingSelector selector, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<SetReadOnlyAsync>d__59")]
public virtual Task`1<Response`1<ConfigurationSetting>> SetReadOnlyAsync(string key, bool isReadOnly, CancellationToken cancellationToken);
    public virtual Response`1<ConfigurationSetting> SetReadOnly(string key, bool isReadOnly, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<SetReadOnlyAsync>d__61")]
public virtual Task`1<Response`1<ConfigurationSetting>> SetReadOnlyAsync(string key, string label, bool isReadOnly, CancellationToken cancellationToken);
    public virtual Response`1<ConfigurationSetting> SetReadOnly(string key, string label, bool isReadOnly, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<SetReadOnlyAsync>d__63")]
public virtual Task`1<Response`1<ConfigurationSetting>> SetReadOnlyAsync(ConfigurationSetting setting, bool isReadOnly, bool onlyIfUnchanged, CancellationToken cancellationToken);
    public virtual Response`1<ConfigurationSetting> SetReadOnly(ConfigurationSetting setting, bool isReadOnly, bool onlyIfUnchanged, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<SettingLabel> GetLabelsAsync(SettingLabelSelector selector, CancellationToken cancellationToken);
    public virtual Pageable`1<SettingLabel> GetLabels(SettingLabelSelector selector, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<SetReadOnlyAsync>d__67")]
private ValueTask`1<Response`1<ConfigurationSetting>> SetReadOnlyAsync(string key, string label, MatchConditions requestOptions, bool isReadOnly, bool async, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<ToCreateAsyncResponse>d__68")]
private Task`1<Response> ToCreateAsyncResponse(string key, string label, MatchConditions requestOptions, bool isReadOnly, RequestContext context);
    private Response ToCreateResponse(string key, string label, MatchConditions requestOptions, bool isReadOnly, RequestContext context);
    public virtual void UpdateSyncToken(string token);
    private ValueTuple`2<List`1<ConfigurationSetting>, string> ParseGetConfigurationSettingsResponse(Response response);
    private static RequestContext CreateRequestContext(ErrorOptions errorOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<CreateResponseAsync>d__78")]
private static Task`1<Response`1<ConfigurationSetting>> CreateResponseAsync(Response response, CancellationToken cancellation);
    private static Response`1<ConfigurationSetting> CreateResponse(Response response);
    private static Response`1<ConfigurationSetting> CreateResourceModifiedResponse(Response response);
    private static void ParseConnectionString(string connectionString, Uri& uri, String& credential, Byte[]& secret);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    [EditorBrowsableAttribute("1")]
public virtual string ToString();
    [CompilerGeneratedAttribute]
internal ClientDiagnostics get_ClientDiagnostics();
    public virtual HttpPipeline get_Pipeline();
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<CheckKeysAsync>d__98")]
internal virtual Task`1<Response> CheckKeysAsync(string name, string after, string acceptDatetime, RequestContext context);
    internal virtual Response CheckKeys(string name, string after, string acceptDatetime, RequestContext context);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<CheckKeyValuesAsync>d__100")]
internal virtual Task`1<Response> CheckKeyValuesAsync(string key, string label, string after, string acceptDatetime, IEnumerable`1<string> select, string snapshot, IEnumerable`1<string> tags, MatchConditions matchConditions, RequestContext context);
    internal virtual Response CheckKeyValues(string key, string label, string after, string acceptDatetime, IEnumerable`1<string> select, string snapshot, IEnumerable`1<string> tags, MatchConditions matchConditions, RequestContext context);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<GetConfigurationSettingAsync>d__102")]
internal virtual Task`1<Response> GetConfigurationSettingAsync(string key, string label, string acceptDatetime, IEnumerable`1<string> select, MatchConditions matchConditions, RequestContext context);
    internal virtual Response GetConfigurationSetting(string key, string label, string acceptDatetime, IEnumerable`1<string> select, MatchConditions matchConditions, RequestContext context);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<SetConfigurationSettingAsync>d__104")]
internal virtual Task`1<Response> SetConfigurationSettingAsync(string key, RequestContent content, ContentType contentType, string label, MatchConditions matchConditions, RequestContext context);
    internal virtual Response SetConfigurationSetting(string key, RequestContent content, ContentType contentType, string label, MatchConditions matchConditions, RequestContext context);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<DeleteConfigurationSettingAsync>d__106")]
internal virtual Task`1<Response> DeleteConfigurationSettingAsync(string key, string label, Nullable`1<ETag> ifMatch, RequestContext context);
    internal virtual Response DeleteConfigurationSetting(string key, string label, Nullable`1<ETag> ifMatch, RequestContext context);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<CheckKeyValueAsync>d__108")]
internal virtual Task`1<Response> CheckKeyValueAsync(string key, string label, string acceptDatetime, IEnumerable`1<string> select, MatchConditions matchConditions, RequestContext context);
    internal virtual Response CheckKeyValue(string key, string label, string acceptDatetime, IEnumerable`1<string> select, MatchConditions matchConditions, RequestContext context);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<CheckSnapshotsAsync>d__110")]
internal virtual Task`1<Response> CheckSnapshotsAsync(string after, RequestContext context);
    internal virtual Response CheckSnapshots(string after, RequestContext context);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<GetSnapshotAsync>d__112")]
internal virtual Task`1<Response> GetSnapshotAsync(string name, IEnumerable`1<string> select, MatchConditions matchConditions, RequestContext context);
    internal virtual Response GetSnapshot(string name, IEnumerable`1<string> select, MatchConditions matchConditions, RequestContext context);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<UpdateSnapshotStatusAsync>d__114")]
internal virtual Task`1<Response> UpdateSnapshotStatusAsync(string name, RequestContent content, ContentType contentType, MatchConditions matchConditions, RequestContext context);
    internal virtual Response UpdateSnapshotStatus(string name, RequestContent content, ContentType contentType, MatchConditions matchConditions, RequestContext context);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<CheckSnapshotAsync>d__116")]
internal virtual Task`1<Response> CheckSnapshotAsync(string name, MatchConditions matchConditions, RequestContext context);
    internal virtual Response CheckSnapshot(string name, MatchConditions matchConditions, RequestContext context);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<CheckLabelsAsync>d__118")]
internal virtual Task`1<Response> CheckLabelsAsync(string name, string after, string acceptDatetime, IEnumerable`1<string> select, RequestContext context);
    internal virtual Response CheckLabels(string name, string after, string acceptDatetime, IEnumerable`1<string> select, RequestContext context);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<CreateReadOnlyLockAsync>d__120")]
internal virtual Task`1<Response> CreateReadOnlyLockAsync(string key, string label, MatchConditions matchConditions, RequestContext context);
    internal virtual Response CreateReadOnlyLock(string key, string label, MatchConditions matchConditions, RequestContext context);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<DeleteReadOnlyLockAsync>d__122")]
internal virtual Task`1<Response> DeleteReadOnlyLockAsync(string key, string label, MatchConditions matchConditions, RequestContext context);
    internal virtual Response DeleteReadOnlyLock(string key, string label, MatchConditions matchConditions, RequestContext context);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<CheckRevisionsAsync>d__124")]
internal virtual Task`1<Response> CheckRevisionsAsync(string key, string label, string after, string acceptDatetime, IEnumerable`1<string> select, IEnumerable`1<string> tags, RequestContext context);
    internal virtual Response CheckRevisions(string key, string label, string after, string acceptDatetime, IEnumerable`1<string> select, IEnumerable`1<string> tags, RequestContext context);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<GetOperationDetailsAsync>d__126")]
internal virtual Task`1<Response> GetOperationDetailsAsync(string snapshot, RequestContext context);
    internal virtual Response GetOperationDetails(string snapshot, RequestContext context);
    internal virtual AsyncPageable`1<BinaryData> GetKeysAsync(string name, string after, string acceptDatetime, RequestContext context);
    internal virtual Pageable`1<BinaryData> GetKeys(string name, string after, string acceptDatetime, RequestContext context);
    internal virtual AsyncPageable`1<BinaryData> GetConfigurationSettingsAsync(string key, string label, string after, string acceptDatetime, IEnumerable`1<string> select, string snapshot, IEnumerable`1<string> tags, MatchConditions matchConditions, RequestContext context);
    internal virtual Pageable`1<BinaryData> GetConfigurationSettings(string key, string label, string after, string acceptDatetime, IEnumerable`1<string> select, string snapshot, IEnumerable`1<string> tags, MatchConditions matchConditions, RequestContext context);
    internal virtual AsyncPageable`1<BinaryData> GetSnapshotsAsync(string name, string after, IEnumerable`1<string> select, IEnumerable`1<string> status, RequestContext context);
    internal virtual Pageable`1<BinaryData> GetSnapshots(string name, string after, IEnumerable`1<string> select, IEnumerable`1<string> status, RequestContext context);
    internal virtual AsyncPageable`1<BinaryData> GetLabelsAsync(string name, string after, string acceptDatetime, IEnumerable`1<string> select, RequestContext context);
    internal virtual Pageable`1<BinaryData> GetLabels(string name, string after, string acceptDatetime, IEnumerable`1<string> select, RequestContext context);
    internal virtual AsyncPageable`1<BinaryData> GetRevisionsAsync(string key, string label, string after, string acceptDatetime, IEnumerable`1<string> select, IEnumerable`1<string> tags, RequestContext context);
    internal virtual Pageable`1<BinaryData> GetRevisions(string key, string label, string after, string acceptDatetime, IEnumerable`1<string> select, IEnumerable`1<string> tags, RequestContext context);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationClient/<CreateSnapshotAsync>d__138")]
internal virtual Task`1<Operation`1<BinaryData>> CreateSnapshotAsync(WaitUntil waitUntil, string name, RequestContent content, ContentType contentType, RequestContext context);
    internal virtual Operation`1<BinaryData> CreateSnapshot(WaitUntil waitUntil, string name, RequestContent content, ContentType contentType, RequestContext context);
    internal HttpMessage CreateGetKeysRequest(string name, string after, string acceptDatetime, RequestContext context);
    internal HttpMessage CreateCheckKeysRequest(string name, string after, string acceptDatetime, RequestContext context);
    internal HttpMessage CreateGetConfigurationSettingsRequest(string key, string label, string after, string acceptDatetime, IEnumerable`1<string> select, string snapshot, IEnumerable`1<string> tags, MatchConditions matchConditions, RequestContext context);
    internal HttpMessage CreateCheckKeyValuesRequest(string key, string label, string after, string acceptDatetime, IEnumerable`1<string> select, string snapshot, IEnumerable`1<string> tags, MatchConditions matchConditions, RequestContext context);
    internal HttpMessage CreateGetConfigurationSettingRequest(string key, string label, string acceptDatetime, IEnumerable`1<string> select, MatchConditions matchConditions, RequestContext context);
    internal HttpMessage CreateSetConfigurationSettingRequest(string key, RequestContent content, ContentType contentType, string label, MatchConditions matchConditions, RequestContext context);
    internal HttpMessage CreateDeleteConfigurationSettingRequest(string key, string label, Nullable`1<ETag> ifMatch, RequestContext context);
    internal HttpMessage CreateCheckKeyValueRequest(string key, string label, string acceptDatetime, IEnumerable`1<string> select, MatchConditions matchConditions, RequestContext context);
    internal HttpMessage CreateGetSnapshotsRequest(string name, string after, IEnumerable`1<string> select, IEnumerable`1<string> status, RequestContext context);
    internal HttpMessage CreateCheckSnapshotsRequest(string after, RequestContext context);
    internal HttpMessage CreateGetSnapshotRequest(string name, IEnumerable`1<string> select, MatchConditions matchConditions, RequestContext context);
    internal HttpMessage CreateCreateSnapshotRequest(string name, RequestContent content, ContentType contentType, RequestContext context);
    internal HttpMessage CreateUpdateSnapshotStatusRequest(string name, RequestContent content, ContentType contentType, MatchConditions matchConditions, RequestContext context);
    internal HttpMessage CreateCheckSnapshotRequest(string name, MatchConditions matchConditions, RequestContext context);
    internal HttpMessage CreateGetLabelsRequest(string name, string after, string acceptDatetime, IEnumerable`1<string> select, RequestContext context);
    internal HttpMessage CreateCheckLabelsRequest(string name, string after, string acceptDatetime, IEnumerable`1<string> select, RequestContext context);
    internal HttpMessage CreateCreateReadOnlyLockRequest(string key, string label, MatchConditions matchConditions, RequestContext context);
    internal HttpMessage CreateDeleteReadOnlyLockRequest(string key, string label, MatchConditions matchConditions, RequestContext context);
    internal HttpMessage CreateGetRevisionsRequest(string key, string label, string after, string acceptDatetime, IEnumerable`1<string> select, IEnumerable`1<string> tags, RequestContext context);
    internal HttpMessage CreateCheckRevisionsRequest(string key, string label, string after, string acceptDatetime, IEnumerable`1<string> select, IEnumerable`1<string> tags, RequestContext context);
    internal HttpMessage CreateGetOperationDetailsRequest(string snapshot, RequestContext context);
    internal HttpMessage CreateGetKeysNextPageRequest(string nextLink, string name, string after, string acceptDatetime, RequestContext context);
    internal HttpMessage CreateGetConfigurationSettingsNextPageRequest(string nextLink, string key, string label, string after, string acceptDatetime, IEnumerable`1<string> select, string snapshot, IEnumerable`1<string> tags, MatchConditions matchConditions, RequestContext context);
    internal HttpMessage CreateGetSnapshotsNextPageRequest(string nextLink, string name, string after, IEnumerable`1<string> select, IEnumerable`1<string> status, RequestContext context);
    internal HttpMessage CreateGetLabelsNextPageRequest(string nextLink, string name, string after, string acceptDatetime, IEnumerable`1<string> select, RequestContext context);
    internal HttpMessage CreateGetRevisionsNextPageRequest(string nextLink, string key, string label, string after, string acceptDatetime, IEnumerable`1<string> select, IEnumerable`1<string> tags, RequestContext context);
    private static ResponseClassifier get_ResponseClassifier200();
    private static ResponseClassifier get_ResponseClassifier200204();
    private static ResponseClassifier get_ResponseClassifier201();
}
[ExtensionAttribute]
public static class Azure.Data.AppConfiguration.ConfigurationClientExtensions : object {
    [ExtensionAttribute]
public static IAsyncEnumerable`1<Page`1<ConfigurationSetting>> AsPages(AsyncPageable`1<ConfigurationSetting> pageable, IEnumerable`1<MatchConditions> conditions, string continuationToken, Nullable`1<int> pageSizeHint);
    [ExtensionAttribute]
public static IEnumerable`1<Page`1<ConfigurationSetting>> AsPages(Pageable`1<ConfigurationSetting> pageable, IEnumerable`1<MatchConditions> conditions, string continuationToken, Nullable`1<int> pageSizeHint);
}
public class Azure.Data.AppConfiguration.ConfigurationClientOptions : ClientOptions {
    private static ServiceVersion LatestVersion;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    internal string Version { get; }
    public ConfigurationClientOptions(ServiceVersion version);
    [CompilerGeneratedAttribute]
internal string get_Version();
}
public static class Azure.Data.AppConfiguration.ConfigurationModelFactory : object {
    public static ConfigurationSetting ConfigurationSetting(string key, string value, string label, string contentType, ETag eTag, Nullable`1<DateTimeOffset> lastModified, Nullable`1<bool> isReadOnly);
    public static FeatureFlagConfigurationSetting FeatureFlagConfigurationSetting(string featureId, bool isEnabled, string label, ETag eTag, Nullable`1<DateTimeOffset> lastModified, Nullable`1<bool> isReadOnly);
    public static SecretReferenceConfigurationSetting SecretReferenceConfigurationSetting(string key, Uri secretId, string label, ETag eTag, Nullable`1<DateTimeOffset> lastModified, Nullable`1<bool> isReadOnly);
}
internal static class Azure.Data.AppConfiguration.ConfigurationServiceSerializer : object {
    public static void WriteSetting(Utf8JsonWriter writer, ConfigurationSetting setting);
    public static ReadOnlyMemory`1<byte> SerializeRequestBody(ConfigurationSetting setting);
    private static void WriteRequestBody(Utf8JsonWriter writer, ConfigurationSetting setting);
    public static ConfigurationSetting ReadSetting(Utf8JsonReader& reader);
    public static ConfigurationSetting ReadSetting(JsonElement root);
    private static bool IsSecretReference(JsonElement settingElement);
    private static bool IsFeatureFlag(JsonElement settingElement);
    private static void ReadPropertyValue(ConfigurationSetting setting, JsonProperty property);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.ConfigurationServiceSerializer/<DeserializeSettingAsync>d__8")]
public static Task`1<ConfigurationSetting> DeserializeSettingAsync(BinaryData content, CancellationToken cancellation);
    public static ConfigurationSetting DeserializeSetting(BinaryData content);
}
[JsonConverterAttribute("Azure.Data.AppConfiguration.ConfigurationSettingJsonConverter")]
public class Azure.Data.AppConfiguration.ConfigurationSetting : object {
    private IDictionary`2<string, string> _tags;
    private string _value;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private ETag <ETag>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <LastModified>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsReadOnly>k__BackingField;
    public string Key { get; public set; }
    public string Label { get; public set; }
    public string Value { get; public set; }
    public string ContentType { get; public set; }
    public ETag ETag { get; internal set; }
    public Nullable`1<DateTimeOffset> LastModified { get; internal set; }
    public Nullable`1<bool> IsReadOnly { get; internal set; }
    public IDictionary`2<string, string> Tags { get; internal set; }
    public ConfigurationSetting(string key, string value, string label);
    public ConfigurationSetting(string key, string value, string label, ETag etag);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    public string get_Value();
    public void set_Value(string value);
    internal virtual string GetValue();
    internal virtual void SetValue(string value);
    internal static RequestContent ToRequestContent(ConfigurationSetting setting);
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(string value);
    [CompilerGeneratedAttribute]
public ETag get_ETag();
    [CompilerGeneratedAttribute]
internal void set_ETag(ETag value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_LastModified();
    [CompilerGeneratedAttribute]
internal void set_LastModified(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsReadOnly();
    [CompilerGeneratedAttribute]
internal void set_IsReadOnly(Nullable`1<bool> value);
    public IDictionary`2<string, string> get_Tags();
    internal void set_Tags(IDictionary`2<string, string> value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    [EditorBrowsableAttribute("1")]
public virtual string ToString();
}
internal class Azure.Data.AppConfiguration.ConfigurationSettingJsonConverter : JsonConverter`1<ConfigurationSetting> {
    public virtual ConfigurationSetting Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, ConfigurationSetting value, JsonSerializerOptions options);
}
public class Azure.Data.AppConfiguration.ConfigurationSettingsFilter : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Tags>k__BackingField;
    public string Key { get; public set; }
    public string Label { get; public set; }
    public IList`1<string> Tags { get; }
    public ConfigurationSettingsFilter(string key);
    internal ConfigurationSettingsFilter(string key, string label, IList`1<string> tags);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Tags();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ConfigurationSettingsFilter DeserializeKeyValueFilter(JsonElement element);
}
public class Azure.Data.AppConfiguration.ConfigurationSnapshot : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ConfigurationSnapshotStatus> <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ConfigurationSettingsFilter> <Filters>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SnapshotComposition> <SnapshotComposition>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <CreatedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <ExpiresOn>k__BackingField;
    private Nullable`1<long> _retentionPeriod;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <SizeInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ItemCount>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private ETag <ETag>k__BackingField;
    public string Name { get; }
    public Nullable`1<ConfigurationSnapshotStatus> Status { get; }
    public IList`1<ConfigurationSettingsFilter> Filters { get; }
    public Nullable`1<SnapshotComposition> SnapshotComposition { get; public set; }
    public Nullable`1<DateTimeOffset> CreatedOn { get; }
    public Nullable`1<DateTimeOffset> ExpiresOn { get; }
    public Nullable`1<TimeSpan> RetentionPeriod { get; public set; }
    public Nullable`1<long> SizeInBytes { get; }
    public Nullable`1<long> ItemCount { get; }
    public IDictionary`2<string, string> Tags { get; }
    public ETag ETag { get; }
    public ConfigurationSnapshot(IEnumerable`1<ConfigurationSettingsFilter> filters);
    internal ConfigurationSnapshot(string name, Nullable`1<ConfigurationSnapshotStatus> status, IList`1<ConfigurationSettingsFilter> filters, Nullable`1<SnapshotComposition> snapshotComposition, Nullable`1<DateTimeOffset> createdOn, Nullable`1<DateTimeOffset> expiresOn, Nullable`1<long> retentionPeriod, Nullable`1<long> sizeInBytes, Nullable`1<long> itemCount, IDictionary`2<string, string> tags, ETag eTag);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Nullable`1<ConfigurationSnapshotStatus> get_Status();
    [CompilerGeneratedAttribute]
public IList`1<ConfigurationSettingsFilter> get_Filters();
    [CompilerGeneratedAttribute]
public Nullable`1<SnapshotComposition> get_SnapshotComposition();
    [CompilerGeneratedAttribute]
public void set_SnapshotComposition(Nullable`1<SnapshotComposition> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_CreatedOn();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_ExpiresOn();
    public Nullable`1<TimeSpan> get_RetentionPeriod();
    public void set_RetentionPeriod(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_SizeInBytes();
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ItemCount();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Tags();
    [CompilerGeneratedAttribute]
public ETag get_ETag();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ConfigurationSnapshot DeserializeSnapshot(JsonElement element);
    internal static ConfigurationSnapshot FromResponse(Response response);
    internal static RequestContent ToRequestContent(ConfigurationSnapshot snapshot);
}
[IsReadOnlyAttribute]
public class Azure.Data.AppConfiguration.ConfigurationSnapshotStatus : ValueType {
    private string _value;
    private static string ProvisioningValue;
    private static string ReadyValue;
    private static string ArchivedValue;
    private static string FailedValue;
    [CompilerGeneratedAttribute]
private static ConfigurationSnapshotStatus <Provisioning>k__BackingField;
    [CompilerGeneratedAttribute]
private static ConfigurationSnapshotStatus <Ready>k__BackingField;
    [CompilerGeneratedAttribute]
private static ConfigurationSnapshotStatus <Archived>k__BackingField;
    [CompilerGeneratedAttribute]
private static ConfigurationSnapshotStatus <Failed>k__BackingField;
    public static ConfigurationSnapshotStatus Provisioning { get; }
    public static ConfigurationSnapshotStatus Ready { get; }
    public static ConfigurationSnapshotStatus Archived { get; }
    public static ConfigurationSnapshotStatus Failed { get; }
    public ConfigurationSnapshotStatus(string value);
    private static ConfigurationSnapshotStatus();
    [CompilerGeneratedAttribute]
public static ConfigurationSnapshotStatus get_Provisioning();
    [CompilerGeneratedAttribute]
public static ConfigurationSnapshotStatus get_Ready();
    [CompilerGeneratedAttribute]
public static ConfigurationSnapshotStatus get_Archived();
    [CompilerGeneratedAttribute]
public static ConfigurationSnapshotStatus get_Failed();
    public static bool op_Equality(ConfigurationSnapshotStatus left, ConfigurationSnapshotStatus right);
    public static bool op_Inequality(ConfigurationSnapshotStatus left, ConfigurationSnapshotStatus right);
    public static ConfigurationSnapshotStatus op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ConfigurationSnapshotStatus other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.Data.AppConfiguration.CreateSnapshotOperation : Operation`1<ConfigurationSnapshot> {
    private ClientDiagnostics _diagnostics;
    private Operation`1<BinaryData> _operation;
    private string _id;
    private static TimeSpan s_defaultPollingInterval;
    public ConfigurationSnapshot Value { get; }
    public bool HasValue { get; }
    public string Id { get; }
    public bool HasCompleted { get; }
    internal CreateSnapshotOperation(string snapshotName);
    internal CreateSnapshotOperation(string snapshotName, ClientDiagnostics diagnostics, Operation`1<BinaryData> operation);
    private static CreateSnapshotOperation();
    public virtual ConfigurationSnapshot get_Value();
    public virtual bool get_HasValue();
    public virtual string get_Id();
    public virtual bool get_HasCompleted();
    public virtual Response GetRawResponse();
    public virtual Response UpdateStatus(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.CreateSnapshotOperation/<UpdateStatusAsync>d__17")]
public virtual ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<ConfigurationSnapshot>> WaitForCompletionAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<ConfigurationSnapshot>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.CreateSnapshotOperation/<UpdateStatusAsync>d__20")]
private ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
}
internal class Azure.Data.AppConfiguration.CustomHeadersPolicy : HttpPipelineSynchronousPolicy {
    private static string ActivityId;
    private static Dictionary`2<string, bool> SupportedHeaders;
    private static CustomHeadersPolicy();
    public virtual void OnSendingRequest(HttpMessage message);
}
public class Azure.Data.AppConfiguration.FeatureFlagConfigurationSetting : ConfigurationSetting {
    internal static string FeatureFlagContentType;
    private static String[] s_jsonPropertyNames;
    private static String[] s_requiredJsonPropertyNames;
    [CompilerGeneratedAttribute]
private static string <KeyPrefix>k__BackingField;
    private string _originalValue;
    private bool _isValidValue;
    private string _featureId;
    private string _description;
    private string _displayName;
    private bool _isEnabled;
    private IList`1<FeatureFlagFilter> _clientFilters;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<ValueTuple`2<string, JsonElement>> _parsedProperties;
    public static string KeyPrefix { get; }
    public string FeatureId { get; public set; }
    public string Description { get; public set; }
    public string DisplayName { get; public set; }
    public bool IsEnabled { get; public set; }
    public IList`1<FeatureFlagFilter> ClientFilters { get; }
    public FeatureFlagConfigurationSetting(string featureId, bool isEnabled, string label);
    public FeatureFlagConfigurationSetting(string featureId, bool isEnabled, string label, ETag etag);
    private static FeatureFlagConfigurationSetting();
    [CompilerGeneratedAttribute]
public static string get_KeyPrefix();
    public string get_FeatureId();
    public void set_FeatureId(string value);
    public string get_Description();
    public void set_Description(string value);
    public string get_DisplayName();
    public void set_DisplayName(string value);
    public bool get_IsEnabled();
    public void set_IsEnabled(bool value);
    public IList`1<FeatureFlagFilter> get_ClientFilters();
    internal virtual void SetValue(string value);
    internal virtual string GetValue();
    private bool TryParseValue();
    private bool TryWriteKnownProperty(string propertyName, Utf8JsonWriter writer, JsonElement sourceElement, bool includeOptionalWhenNull);
    private static void WriteParameterValue(Utf8JsonWriter writer, object value);
    private static IList`1<FeatureFlagFilter> ParseFilters(JsonElement filters);
    private static object ReadParameterValue(JsonElement& element);
    private void CheckValid();
}
public class Azure.Data.AppConfiguration.FeatureFlagFilter : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Parameters>k__BackingField;
    public string Name { get; }
    public IDictionary`2<string, object> Parameters { get; }
    public FeatureFlagFilter(string name);
    public FeatureFlagFilter(string name, IDictionary`2<string, object> parameters);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Parameters();
}
[ExtensionAttribute]
internal static class Azure.Data.AppConfiguration.ModelSerializationExtensions : object {
    internal static ModelReaderWriterOptions WireOptions;
    private static ModelSerializationExtensions();
    [ExtensionAttribute]
public static object GetObject(JsonElement element);
    [ExtensionAttribute]
public static Byte[] GetBytesFromBase64(JsonElement element, string format);
    [ExtensionAttribute]
public static DateTimeOffset GetDateTimeOffset(JsonElement element, string format);
    [ExtensionAttribute]
public static TimeSpan GetTimeSpan(JsonElement element, string format);
    [ExtensionAttribute]
public static char GetChar(JsonElement element);
    [ExtensionAttribute]
[ConditionalAttribute("DEBUG")]
public static void ThrowNonNullablePropertyIsNull(JsonProperty property);
    [ExtensionAttribute]
public static string GetRequiredString(JsonElement element);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, DateTime value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, TimeSpan value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, char value);
    [ExtensionAttribute]
public static void WriteBase64StringValue(Utf8JsonWriter writer, Byte[] value, string format);
    [ExtensionAttribute]
public static void WriteNumberValue(Utf8JsonWriter writer, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void WriteObjectValue(Utf8JsonWriter writer, T value);
    [ExtensionAttribute]
public static void WriteObjectValue(Utf8JsonWriter writer, object value);
}
internal static class Azure.Data.AppConfiguration.Optional : object {
    public static bool IsCollectionDefined(IEnumerable`1<T> collection);
    public static bool IsCollectionDefined(IDictionary`2<TKey, TValue> collection);
    public static bool IsCollectionDefined(IReadOnlyDictionary`2<TKey, TValue> collection);
    public static bool IsDefined(Nullable`1<T> value);
    public static bool IsDefined(object value);
    public static bool IsDefined(JsonElement value);
    public static bool IsDefined(string value);
}
public class Azure.Data.AppConfiguration.SecretReferenceConfigurationSetting : ConfigurationSetting {
    internal static string SecretReferenceContentType;
    private string _originalValue;
    private bool _isValidValue;
    private Uri _secretId;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<ValueTuple`2<string, JsonElement>> _parsedProperties;
    public Uri SecretId { get; public set; }
    public SecretReferenceConfigurationSetting(string key, Uri secretId, string label);
    public SecretReferenceConfigurationSetting(string key, Uri secretId, string label, ETag etag);
    public Uri get_SecretId();
    public void set_SecretId(Uri value);
    internal virtual void SetValue(string value);
    internal virtual string GetValue();
    private bool TryParseValue();
    private void CheckValid();
}
internal class Azure.Data.AppConfiguration.SettingBatch : object {
    [CompilerGeneratedAttribute]
private string <NextBatchLink>k__BackingField;
    [CompilerGeneratedAttribute]
private ConfigurationSetting[] <Settings>k__BackingField;
    public string NextBatchLink { get; }
    public ConfigurationSetting[] Settings { get; }
    internal SettingBatch(ConfigurationSetting[] settings, string link);
    [CompilerGeneratedAttribute]
public string get_NextBatchLink();
    [CompilerGeneratedAttribute]
public ConfigurationSetting[] get_Settings();
}
[FlagsAttribute]
public enum Azure.Data.AppConfiguration.SettingFields : Enum {
    public UInt32 value__;
    public static SettingFields Key;
    public static SettingFields Label;
    public static SettingFields Value;
    public static SettingFields ContentType;
    public static SettingFields ETag;
    public static SettingFields LastModified;
    public static SettingFields IsReadOnly;
    public static SettingFields Tags;
    public static SettingFields All;
}
[ExtensionAttribute]
internal static class Azure.Data.AppConfiguration.SettingFieldsExtensions : object {
    private static IReadOnlyDictionary`2<SettingFields, string> s_serviceNameMap;
    private static SettingFieldsExtensions();
    [ExtensionAttribute]
public static IEnumerable`1<string> Split(SettingFields fields);
}
public class Azure.Data.AppConfiguration.SettingLabel : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; }
    internal SettingLabel(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static SettingLabel DeserializeLabel(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.Data.AppConfiguration.SettingLabelFields : ValueType {
    private string _value;
    private static string NameValue;
    [CompilerGeneratedAttribute]
private static SettingLabelFields <Name>k__BackingField;
    public static SettingLabelFields Name { get; }
    public SettingLabelFields(string value);
    private static SettingLabelFields();
    [CompilerGeneratedAttribute]
public static SettingLabelFields get_Name();
    public static bool op_Equality(SettingLabelFields left, SettingLabelFields right);
    public static bool op_Inequality(SettingLabelFields left, SettingLabelFields right);
    public static SettingLabelFields op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(SettingLabelFields other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.Data.AppConfiguration.SettingLabelSelector : object {
    [CompilerGeneratedAttribute]
private string <NameFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<SettingLabelFields> <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <AcceptDateTime>k__BackingField;
    public string NameFilter { get; public set; }
    public IList`1<SettingLabelFields> Fields { get; }
    public Nullable`1<DateTimeOffset> AcceptDateTime { get; public set; }
    [CompilerGeneratedAttribute]
public string get_NameFilter();
    [CompilerGeneratedAttribute]
public void set_NameFilter(string value);
    [CompilerGeneratedAttribute]
public IList`1<SettingLabelFields> get_Fields();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_AcceptDateTime();
    [CompilerGeneratedAttribute]
public void set_AcceptDateTime(Nullable`1<DateTimeOffset> value);
}
public class Azure.Data.AppConfiguration.SettingSelector : object {
    public static string Any;
    [CompilerGeneratedAttribute]
private string <KeyFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LabelFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <TagsFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private SettingFields <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <AcceptDateTime>k__BackingField;
    public string KeyFilter { get; public set; }
    public string LabelFilter { get; public set; }
    public IList`1<string> TagsFilter { get; }
    public SettingFields Fields { get; public set; }
    public Nullable`1<DateTimeOffset> AcceptDateTime { get; public set; }
    private static SettingSelector();
    [CompilerGeneratedAttribute]
public string get_KeyFilter();
    [CompilerGeneratedAttribute]
public void set_KeyFilter(string value);
    [CompilerGeneratedAttribute]
public string get_LabelFilter();
    [CompilerGeneratedAttribute]
public void set_LabelFilter(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_TagsFilter();
    [CompilerGeneratedAttribute]
public SettingFields get_Fields();
    [CompilerGeneratedAttribute]
public void set_Fields(SettingFields value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_AcceptDateTime();
    [CompilerGeneratedAttribute]
public void set_AcceptDateTime(Nullable`1<DateTimeOffset> value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    [EditorBrowsableAttribute("1")]
public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.Data.AppConfiguration.SnapshotComposition : ValueType {
    private string _value;
    private static string KeyValue;
    private static string KeyLabelValue;
    [CompilerGeneratedAttribute]
private static SnapshotComposition <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private static SnapshotComposition <KeyLabel>k__BackingField;
    public static SnapshotComposition Key { get; }
    public static SnapshotComposition KeyLabel { get; }
    public SnapshotComposition(string value);
    private static SnapshotComposition();
    [CompilerGeneratedAttribute]
public static SnapshotComposition get_Key();
    [CompilerGeneratedAttribute]
public static SnapshotComposition get_KeyLabel();
    public static bool op_Equality(SnapshotComposition left, SnapshotComposition right);
    public static bool op_Inequality(SnapshotComposition left, SnapshotComposition right);
    public static SnapshotComposition op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(SnapshotComposition other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.Data.AppConfiguration.SnapshotFields : ValueType {
    private string _value;
    private static string NameValue;
    private static string StatusValue;
    private static string FiltersValue;
    private static string SnapshotCompositionValue;
    private static string CreatedOnValue;
    private static string ExpiresOnValue;
    private static string RetentionPeriodValue;
    private static string SizeInBytesValue;
    private static string ItemCountValue;
    private static string TagsValue;
    private static string ETagValue;
    [CompilerGeneratedAttribute]
private static SnapshotFields <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private static SnapshotFields <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private static SnapshotFields <Filters>k__BackingField;
    [CompilerGeneratedAttribute]
private static SnapshotFields <SnapshotComposition>k__BackingField;
    [CompilerGeneratedAttribute]
private static SnapshotFields <CreatedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static SnapshotFields <ExpiresOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static SnapshotFields <RetentionPeriod>k__BackingField;
    [CompilerGeneratedAttribute]
private static SnapshotFields <SizeInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private static SnapshotFields <ItemCount>k__BackingField;
    [CompilerGeneratedAttribute]
private static SnapshotFields <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private static SnapshotFields <ETag>k__BackingField;
    public static SnapshotFields Name { get; }
    public static SnapshotFields Status { get; }
    public static SnapshotFields Filters { get; }
    public static SnapshotFields SnapshotComposition { get; }
    public static SnapshotFields CreatedOn { get; }
    public static SnapshotFields ExpiresOn { get; }
    public static SnapshotFields RetentionPeriod { get; }
    public static SnapshotFields SizeInBytes { get; }
    public static SnapshotFields ItemCount { get; }
    public static SnapshotFields Tags { get; }
    public static SnapshotFields ETag { get; }
    public SnapshotFields(string value);
    private static SnapshotFields();
    [CompilerGeneratedAttribute]
public static SnapshotFields get_Name();
    [CompilerGeneratedAttribute]
public static SnapshotFields get_Status();
    [CompilerGeneratedAttribute]
public static SnapshotFields get_Filters();
    [CompilerGeneratedAttribute]
public static SnapshotFields get_SnapshotComposition();
    [CompilerGeneratedAttribute]
public static SnapshotFields get_CreatedOn();
    [CompilerGeneratedAttribute]
public static SnapshotFields get_ExpiresOn();
    [CompilerGeneratedAttribute]
public static SnapshotFields get_RetentionPeriod();
    [CompilerGeneratedAttribute]
public static SnapshotFields get_SizeInBytes();
    [CompilerGeneratedAttribute]
public static SnapshotFields get_ItemCount();
    [CompilerGeneratedAttribute]
public static SnapshotFields get_Tags();
    [CompilerGeneratedAttribute]
public static SnapshotFields get_ETag();
    public static bool op_Equality(SnapshotFields left, SnapshotFields right);
    public static bool op_Inequality(SnapshotFields left, SnapshotFields right);
    public static SnapshotFields op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(SnapshotFields other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.Data.AppConfiguration.SnapshotSelector : object {
    [CompilerGeneratedAttribute]
private string <NameFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<SnapshotFields> <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ConfigurationSnapshotStatus> <Status>k__BackingField;
    public string NameFilter { get; public set; }
    public IList`1<SnapshotFields> Fields { get; }
    public IList`1<ConfigurationSnapshotStatus> Status { get; }
    [CompilerGeneratedAttribute]
public string get_NameFilter();
    [CompilerGeneratedAttribute]
public void set_NameFilter(string value);
    [CompilerGeneratedAttribute]
public IList`1<SnapshotFields> get_Fields();
    [CompilerGeneratedAttribute]
public IList`1<ConfigurationSnapshotStatus> get_Status();
}
internal class Azure.Data.AppConfiguration.SnapshotUpdateParameters : object {
    [CompilerGeneratedAttribute]
private Nullable`1<ConfigurationSnapshotStatus> <Status>k__BackingField;
    public Nullable`1<ConfigurationSnapshotStatus> Status { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<ConfigurationSnapshotStatus> get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(Nullable`1<ConfigurationSnapshotStatus> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static RequestContent ToRequestContent(SnapshotUpdateParameters snapshotUpdateParameters);
}
[IsReadOnlyAttribute]
internal class Azure.Data.AppConfiguration.SyncToken : ValueType {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private long <SequenceNumber>k__BackingField;
    public string Id { get; }
    public string Value { get; }
    public long SequenceNumber { get; }
    public SyncToken(string id, string value, long sequenceNumber);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public long get_SequenceNumber();
    public virtual string ToString();
}
internal class Azure.Data.AppConfiguration.SyncTokenPolicy : HttpPipelineSynchronousPolicy {
    private static string SyncTokenHeader;
    private ConcurrentDictionary`2<string, SyncToken> _syncTokens;
    public virtual void OnSendingRequest(HttpMessage message);
    public virtual void OnReceivedResponse(HttpMessage message);
    public void AddToken(string fullRawToken);
}
internal class Azure.Data.AppConfiguration.SyncTokenUtils : object {
    internal static bool TryParse(string value, SyncToken& result);
}
internal class Azure.Data.AppConfiguration.Utf8JsonRequestContent : RequestContent {
    private MemoryStream _stream;
    private RequestContent _content;
    [CompilerGeneratedAttribute]
private Utf8JsonWriter <JsonWriter>k__BackingField;
    public Utf8JsonWriter JsonWriter { get; }
    [CompilerGeneratedAttribute]
public Utf8JsonWriter get_JsonWriter();
    [AsyncStateMachineAttribute("Azure.Data.AppConfiguration.Utf8JsonRequestContent/<WriteToAsync>d__6")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellationToken);
    public virtual void WriteTo(Stream stream, CancellationToken cancellationToken);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
internal class Azure.NoBodyResponse`1 : Response`1<T> {
    private Response _response;
    public bool HasValue { get; }
    public T Value { get; }
    public NoBodyResponse`1(Response response);
    public virtual bool get_HasValue();
    public virtual T get_Value();
    public virtual Response GetRawResponse();
    public virtual string ToString();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[ExtensionAttribute]
public static class Microsoft.Extensions.Azure.ConfigurationClientBuilderExtensions : object {
    [ExtensionAttribute]
public static IAzureClientBuilder`2<ConfigurationClient, ConfigurationClientOptions> AddConfigurationClient(TBuilder builder, string connectionString);
    [ExtensionAttribute]
public static IAzureClientBuilder`2<ConfigurationClient, ConfigurationClientOptions> AddConfigurationClient(TBuilder builder, Uri configurationUri);
    [ExtensionAttribute]
public static IAzureClientBuilder`2<ConfigurationClient, ConfigurationClientOptions> AddConfigurationClient(TBuilder builder, TConfiguration configuration);
}
[AttributeUsageAttribute("28108")]
internal class System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute : Attribute {
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public DynamicallyAccessedMembersAttribute(DynamicallyAccessedMemberTypes memberTypes);
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
}
[FlagsAttribute]
internal enum System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes : Enum {
    public int value__;
    public static DynamicallyAccessedMemberTypes None;
    public static DynamicallyAccessedMemberTypes PublicParameterlessConstructor;
    public static DynamicallyAccessedMemberTypes PublicConstructors;
    public static DynamicallyAccessedMemberTypes NonPublicConstructors;
    public static DynamicallyAccessedMemberTypes PublicMethods;
    public static DynamicallyAccessedMemberTypes NonPublicMethods;
    public static DynamicallyAccessedMemberTypes PublicFields;
    public static DynamicallyAccessedMemberTypes NonPublicFields;
    public static DynamicallyAccessedMemberTypes PublicNestedTypes;
    public static DynamicallyAccessedMemberTypes NonPublicNestedTypes;
    public static DynamicallyAccessedMemberTypes PublicProperties;
    public static DynamicallyAccessedMemberTypes NonPublicProperties;
    public static DynamicallyAccessedMemberTypes PublicEvents;
    public static DynamicallyAccessedMemberTypes NonPublicEvents;
    public static DynamicallyAccessedMemberTypes Interfaces;
    public static DynamicallyAccessedMemberTypes All;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("352")]
internal class System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <MemberSignature>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssemblyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Condition>k__BackingField;
    public string MemberSignature { get; }
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public Type Type { get; }
    public string TypeName { get; }
    public string AssemblyName { get; }
    public string Condition { get; public set; }
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature, Type type);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature, string typeName, string assemblyName);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(DynamicallyAccessedMemberTypes memberTypes, Type type);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(DynamicallyAccessedMemberTypes memberTypes, string typeName, string assemblyName);
    [CompilerGeneratedAttribute]
public string get_MemberSignature();
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public string get_AssemblyName();
    [CompilerGeneratedAttribute]
public string get_Condition();
    [CompilerGeneratedAttribute]
public void set_Condition(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("100")]
internal class System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    [NullableAttribute("2")]
public string Url { get; public set; }
    public RequiresDynamicCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Url(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("100")]
internal class System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    [NullableAttribute("2")]
public string Url { get; public set; }
    public RequiresUnreferencedCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Url(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
internal class System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute : Attribute {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <CheckId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Justification>k__BackingField;
    [NullableAttribute("1")]
public string Category { get; }
    [NullableAttribute("1")]
public string CheckId { get; }
    public string Scope { get; public set; }
    public string Target { get; public set; }
    public string MessageId { get; public set; }
    public string Justification { get; public set; }
    [NullableContextAttribute("1")]
public UnconditionalSuppressMessageAttribute(string category, string checkId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Category();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_CheckId();
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public string get_MessageId();
    [CompilerGeneratedAttribute]
public void set_MessageId(string value);
    [CompilerGeneratedAttribute]
public string get_Justification();
    [CompilerGeneratedAttribute]
public void set_Justification(string value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
