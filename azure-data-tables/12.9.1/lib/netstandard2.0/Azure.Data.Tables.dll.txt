[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Autorest.CSharp.Core.GeneratorPageableHelpers : object {
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Autorest.CSharp.Core.GeneratorPageableHelpers/<CreateAsyncPageable>d__8`1")]
public static ValueTask`1<Operation`1<AsyncPageable`1<T>>> CreateAsyncPageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Operation`1<Pageable`1<T>> CreatePageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreateEnumerable(Func`2<Nullable`1<int>, Page`1<T>> firstPageFunc, Func`3<string, Nullable`1<int>, Page`1<T>> nextPageFunc, Nullable`1<int> pageSize);
    public static AsyncPageable`1<T> CreateAsyncEnumerable(Func`2<Nullable`1<int>, Task`1<Page`1<T>>> firstPageFunc, Func`3<string, Nullable`1<int>, Task`1<Page`1<T>>> nextPageFunc, Nullable`1<int> pageSize);
}
internal static class Azure.Core.AppContextSwitchHelper : object {
    [NullableContextAttribute("1")]
public static bool GetConfigValue(string appContexSwitchName, string environmentVariableName);
}
internal class Azure.Core.ArrayBufferWriter`1 : object {
    private T[] _buffer;
    private static int DefaultInitialBufferSize;
    [CompilerGeneratedAttribute]
private int <WrittenCount>k__BackingField;
    public ReadOnlyMemory`1<T> WrittenMemory { get; }
    public ReadOnlySpan`1<T> WrittenSpan { get; }
    public int WrittenCount { get; private set; }
    public int Capacity { get; }
    public int FreeCapacity { get; }
    public ArrayBufferWriter`1(int initialCapacity);
    public ReadOnlyMemory`1<T> get_WrittenMemory();
    public ReadOnlySpan`1<T> get_WrittenSpan();
    [CompilerGeneratedAttribute]
public int get_WrittenCount();
    [CompilerGeneratedAttribute]
private void set_WrittenCount(int value);
    public int get_Capacity();
    public int get_FreeCapacity();
    public void Clear();
    public sealed virtual void Advance(int count);
    public sealed virtual Memory`1<T> GetMemory(int sizeHint);
    public sealed virtual Span`1<T> GetSpan(int sizeHint);
    private void CheckAndResizeBuffer(int sizeHint);
    private static void ThrowInvalidOperationException_AdvancedTooFar(int capacity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.AsyncLockWithValue`1 : object {
    private object _syncObj;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Queue`1<TaskCompletionSource`1<LockOrValue<T>>> _waiters;
    private bool _isLocked;
    private bool _hasValue;
    private long _index;
    [NullableAttribute("2")]
private T _value;
    public bool HasValue { get; }
    public AsyncLockWithValue`1(T value);
    public bool get_HasValue();
    [NullableContextAttribute("2")]
public bool TryGetValue(T& value);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Azure.Core.AsyncLockWithValue`1/<GetLockOrValueAsync>d__11")]
public ValueTask`1<LockOrValue<T>> GetLockOrValueAsync(bool async, CancellationToken cancellationToken);
    private void SetValue(T value, Int64& lockIndex);
    private void Reset(Int64& lockIndex);
    private void UnlockOrGetNextWaiter(Int64& lockIndex, TaskCompletionSource`1& nextWaiter);
}
internal static class Azure.Core.AuthorizationChallengeParser : object {
    [NullableContextAttribute("1")]
public static string GetChallengeParameterFromResponse(Response response, string challengeScheme, string challengeParameter);
    internal static bool TryGetNextChallenge(ReadOnlySpan`1& headerValue, ReadOnlySpan`1& challengeKey);
    internal static bool TryGetNextParameter(ReadOnlySpan`1& headerValue, ReadOnlySpan`1& paramKey, ReadOnlySpan`1& paramValue, char separator);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.AzureKeyCredentialPolicy : HttpPipelineSynchronousPolicy {
    private string _name;
    private AzureKeyCredential _credential;
    [NullableAttribute("2")]
private string _prefix;
    public AzureKeyCredentialPolicy(AzureKeyCredential credential, string name, string prefix);
    public virtual void OnSendingRequest(HttpMessage message);
}
[AttributeUsageAttribute("1")]
internal class Azure.Core.AzureResourceProviderNamespaceAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ResourceProviderNamespace>k__BackingField;
    public string ResourceProviderNamespace { get; }
    public AzureResourceProviderNamespaceAttribute(string resourceProviderNamespace);
    [CompilerGeneratedAttribute]
public string get_ResourceProviderNamespace();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("68")]
internal class Azure.Core.CallerShouldAuditAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    public string Reason { get; public set; }
    public CallerShouldAuditAttribute(string reason);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
internal class Azure.Core.CodeGenClientAttribute : CodeGenTypeAttribute {
    [CompilerGeneratedAttribute]
private Type <ParentClient>k__BackingField;
    public Type ParentClient { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenClientAttribute(string originalName);
    [CompilerGeneratedAttribute]
public Type get_ParentClient();
    [CompilerGeneratedAttribute]
public void set_ParentClient(Type value);
}
[AttributeUsageAttribute("384")]
internal class Azure.Core.CodeGenMemberAttribute : CodeGenTypeAttribute {
    [NullableContextAttribute("1")]
public CodeGenMemberAttribute(string originalName);
}
[AttributeUsageAttribute("28")]
internal class Azure.Core.CodeGenModelAttribute : CodeGenTypeAttribute {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <Usage>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <Formats>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] Usage { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] Formats { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenModelAttribute(string originalName);
    [CompilerGeneratedAttribute]
public String[] get_Usage();
    [CompilerGeneratedAttribute]
public void set_Usage(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_Formats();
    [CompilerGeneratedAttribute]
public void set_Formats(String[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1")]
internal class Azure.Core.CodeGenOverrideServiceVersionsAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Versions>k__BackingField;
    public String[] Versions { get; }
    public CodeGenOverrideServiceVersionsAttribute(String[] versions);
    [CompilerGeneratedAttribute]
public String[] get_Versions();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("12")]
internal class Azure.Core.CodeGenSerializationAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <SerializationPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SerializationValueHook>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeserializationValueHook>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BicepSerializationValueHook>k__BackingField;
    public string PropertyName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] SerializationPath { get; }
    public string SerializationValueHook { get; public set; }
    public string DeserializationValueHook { get; public set; }
    public string BicepSerializationValueHook { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenSerializationAttribute(string propertyName);
    [NullableContextAttribute("1")]
public CodeGenSerializationAttribute(string propertyName, string serializationName);
    [NullableContextAttribute("1")]
public CodeGenSerializationAttribute(string propertyName, String[] serializationPath);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public void set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public String[] get_SerializationPath();
    [CompilerGeneratedAttribute]
public string get_SerializationValueHook();
    [CompilerGeneratedAttribute]
public void set_SerializationValueHook(string value);
    [CompilerGeneratedAttribute]
public string get_DeserializationValueHook();
    [CompilerGeneratedAttribute]
public void set_DeserializationValueHook(string value);
    [CompilerGeneratedAttribute]
public string get_BicepSerializationValueHook();
    [CompilerGeneratedAttribute]
public void set_BicepSerializationValueHook(string value);
}
[AttributeUsageAttribute("28")]
internal class Azure.Core.CodeGenSuppressAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Member>k__BackingField;
    [CompilerGeneratedAttribute]
private Type[] <Parameters>k__BackingField;
    public string Member { get; }
    public Type[] Parameters { get; }
    public CodeGenSuppressAttribute(string member, Type[] parameters);
    [CompilerGeneratedAttribute]
public string get_Member();
    [CompilerGeneratedAttribute]
public Type[] get_Parameters();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1")]
internal class Azure.Core.CodeGenSuppressTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Typename>k__BackingField;
    public string Typename { get; }
    public CodeGenSuppressTypeAttribute(string typename);
    [CompilerGeneratedAttribute]
public string get_Typename();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
internal class Azure.Core.CodeGenTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <OriginalName>k__BackingField;
    public string OriginalName { get; }
    public CodeGenTypeAttribute(string originalName);
    [CompilerGeneratedAttribute]
public string get_OriginalName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.ConnectionString : object {
    private Dictionary`2<string, string> _pairs;
    private string _pairSeparator;
    private string _keywordValueSeparator;
    private ConnectionString(Dictionary`2<string, string> pairs, string pairSeparator, string keywordValueSeparator);
    public static ConnectionString Parse(string connectionString, string segmentSeparator, string keywordValueSeparator, bool allowEmptyValues);
    public static ConnectionString Empty(string segmentSeparator, string keywordValueSeparator);
    public string GetRequired(string keyword);
    public string GetNonRequired(string keyword);
    public bool TryGetSegmentValue(string keyword, String& value);
    public string GetSegmentValueOrDefault(string keyword, string defaultValue);
    public bool ContainsSegmentKey(string keyword);
    public void Replace(string keyword, string value);
    public void Add(string keyword, string value);
    public virtual string ToString();
    private static Dictionary`2<string, string> ParseSegments(String& connectionString, String& separator, String& keywordValueSeparator);
    private static bool TryGetNextSegment(String& str, String& separator, Int32& start, Int32& end);
    private static void Validate(string connectionString, string segmentSeparator, string keywordValueSeparator, bool allowEmptyValues);
    [CompilerGeneratedAttribute]
internal static int <ParseSegments>g__GetStart|14_0(String& str, int start);
    [CompilerGeneratedAttribute]
internal static int <ParseSegments>g__GetLength|14_1(String& str, Int32& start, int end);
}
internal class Azure.Core.DictionaryHeaders : object {
    private Dictionary`2<string, object> _headers;
    public void AddHeader(string name, string value);
    public bool TryGetHeader(string name, String& value);
    public bool TryGetHeaderValues(string name, IEnumerable`1& values);
    public bool ContainsHeader(string name);
    public void SetHeader(string name, string value);
    public bool RemoveHeader(string name);
    public IEnumerable`1<HttpHeader> EnumerateHeaders();
    private static string JoinHeaderValue(IEnumerable`1<string> values);
}
internal class Azure.Core.FixedDelayWithNoJitterStrategy : DelayStrategy {
    private static TimeSpan DefaultDelay;
    private TimeSpan _delay;
    public FixedDelayWithNoJitterStrategy(Nullable`1<TimeSpan> suggestedDelay);
    private static FixedDelayWithNoJitterStrategy();
    [NullableContextAttribute("2")]
protected virtual TimeSpan GetNextDelayCore(Response response, int retryNumber);
}
internal class Azure.Core.FormUrlEncodedContent : RequestContent {
    private List`1<KeyValuePair`2<string, string>> _values;
    private Encoding Latin1;
    private Byte[] _bytes;
    public void Add(string parameter, string value);
    private void BuildIfNeeded();
    [AsyncStateMachineAttribute("Azure.Core.FormUrlEncodedContent/<WriteToAsync>d__5")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
    private Byte[] GetContentByteArray(IEnumerable`1<KeyValuePair`2<string, string>> nameValueCollection);
    private static string Encode(string data);
}
[AttributeUsageAttribute("64")]
internal class Azure.Core.ForwardsClientCallsAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <SkipChecks>k__BackingField;
    public bool SkipChecks { get; }
    public ForwardsClientCallsAttribute(bool skipChecks);
    [CompilerGeneratedAttribute]
public bool get_SkipChecks();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.HashCodeBuilder : ValueType {
    private static UInt32 s_seed;
    private static UInt32 Prime1;
    private static UInt32 Prime2;
    private static UInt32 Prime3;
    private static UInt32 Prime4;
    private static UInt32 Prime5;
    private UInt32 _v1;
    private UInt32 _v2;
    private UInt32 _v3;
    private UInt32 _v4;
    private UInt32 _queue1;
    private UInt32 _queue2;
    private UInt32 _queue3;
    private UInt32 _length;
    private static HashCodeBuilder();
    private static UInt32 GenerateGlobalSeed();
    public static int Combine(T1 value1);
    public static int Combine(T1 value1, T2 value2);
    public static int Combine(T1 value1, T2 value2, T3 value3);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7, T8 value8);
    private static void Initialize(UInt32& v1, UInt32& v2, UInt32& v3, UInt32& v4);
    private static UInt32 Round(UInt32 hash, UInt32 input);
    private static UInt32 QueueRound(UInt32 hash, UInt32 queuedValue);
    private static UInt32 MixState(UInt32 v1, UInt32 v2, UInt32 v3, UInt32 v4);
    public static UInt32 RotateLeft(UInt32 value, int offset);
    private static UInt32 MixEmptyState();
    private static UInt32 MixFinal(UInt32 hash);
    public void Add(T value);
    public void Add(T value, IEqualityComparer`1<T> comparer);
    private void Add(int value);
    public int ToHashCode();
    [ObsoleteAttribute("HashCode is a mutable struct and should not be compared with other HashCodes. Use ToHashCode to retrieve the computed hash code.", "True")]
[EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("HashCode is a mutable struct and should not be compared with other HashCodes.", "True")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.HttpMessageSanitizer : object {
    private static string LogAllValue;
    private bool _logAllHeaders;
    private bool _logFullQueries;
    private String[] _allowedQueryParameters;
    private string _redactedPlaceholder;
    private HashSet`1<string> _allowedHeaders;
    [NullableAttribute("2")]
[ThreadStaticAttribute]
private static StringBuilder s_cachedStringBuilder;
    private static int MaxCachedStringBuilderCapacity;
    internal static HttpMessageSanitizer Default;
    public HttpMessageSanitizer(String[] allowedQueryParameters, String[] allowedHeaders, string redactedPlaceholder);
    private static HttpMessageSanitizer();
    public string SanitizeHeader(string name, string value);
    public string SanitizeUrl(string url);
    private static StringBuilder RentStringBuilder(int capacity);
    private static string ToStringAndReturnStringBuilder(StringBuilder builder);
    [CompilerGeneratedAttribute]
internal static StringBuilder <SanitizeUrl>g__AppendReadOnlySpan|11_0(StringBuilder builder, ReadOnlySpan`1<char> span);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.HttpPipelineExtensions : object {
    [AsyncStateMachineAttribute("Azure.Core.HttpPipelineExtensions/<ProcessMessageAsync>d__0")]
[ExtensionAttribute]
public static ValueTask`1<Response> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, RequestContext requestContext, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response ProcessMessage(HttpPipeline pipeline, HttpMessage message, RequestContext requestContext, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.HttpPipelineExtensions/<ProcessHeadAsBoolMessageAsync>d__2")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<bool>> ProcessHeadAsBoolMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, RequestContext requestContext);
    [ExtensionAttribute]
public static Response`1<bool> ProcessHeadAsBoolMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, RequestContext requestContext);
    [NullableContextAttribute("0")]
private static ValueTuple`2<CancellationToken, ErrorOptions> ApplyRequestContext(RequestContext requestContext);
}
internal interface Azure.Core.IOperation {
    public abstract virtual ValueTask`1<OperationState> UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("2")]
internal interface Azure.Core.IOperation`1 {
    public abstract virtual ValueTask`1<OperationState`1<T>> UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
internal interface Azure.Core.IOperationSource`1 {
    public abstract virtual T CreateResult(Response response, CancellationToken cancellationToken);
    public abstract virtual ValueTask`1<T> CreateResultAsync(Response response, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Azure.Core.IUtf8JsonSerializable {
    public abstract virtual void Write(Utf8JsonWriter writer);
}
[NullableContextAttribute("1")]
internal interface Azure.Core.IXmlSerializable {
    public abstract virtual void Write(XmlWriter writer, string nameHint);
}
internal class Azure.Core.MemoryRequest : Request {
    private DictionaryHeaders _headers;
    [CompilerGeneratedAttribute]
private string <ClientRequestId>k__BackingField;
    public RequestContent Content { get; public set; }
    public string ClientRequestId { get; public set; }
    public virtual RequestContent get_Content();
    public virtual void set_Content(RequestContent value);
    protected virtual void SetHeader(string name, string value);
    protected virtual void AddHeader(string name, string value);
    protected virtual bool TryGetHeader(string name, String& value);
    protected virtual bool TryGetHeaderValues(string name, IEnumerable`1& values);
    protected virtual bool ContainsHeader(string name);
    protected virtual bool RemoveHeader(string name);
    protected virtual IEnumerable`1<HttpHeader> EnumerateHeaders();
    [CompilerGeneratedAttribute]
public virtual string get_ClientRequestId();
    [CompilerGeneratedAttribute]
public virtual void set_ClientRequestId(string value);
    public virtual string ToString();
    public virtual void Dispose();
}
internal class Azure.Core.MemoryResponse : Response {
    private static int NoStatusCode;
    private static string XmsClientRequestIdName;
    private int _status;
    private string _reasonPhrase;
    private IDictionary`2<string, List`1<string>> _headers;
    [CompilerGeneratedAttribute]
private Stream <ContentStream>k__BackingField;
    public int Status { get; }
    public string ReasonPhrase { get; }
    public Stream ContentStream { get; public set; }
    public string ClientRequestId { get; public set; }
    public virtual int get_Status();
    public virtual string get_ReasonPhrase();
    [CompilerGeneratedAttribute]
public virtual Stream get_ContentStream();
    [CompilerGeneratedAttribute]
public virtual void set_ContentStream(Stream value);
    public virtual string get_ClientRequestId();
    public virtual void set_ClientRequestId(string value);
    public void SetStatus(int status);
    public void SetReasonPhrase(string reasonPhrase);
    public void SetContent(Byte[] content);
    public void SetContent(string content);
    public virtual void Dispose();
    public void SetHeader(string name, string value);
    public void SetHeader(string name, IEnumerable`1<string> values);
    public void AddHeader(string name, string value);
    protected virtual bool ContainsHeader(string name);
    protected virtual IEnumerable`1<HttpHeader> EnumerateHeaders();
    protected virtual bool TryGetHeader(string name, String& value);
    protected virtual bool TryGetHeaderValues(string name, IEnumerable`1& values);
    private static string JoinHeaderValues(IEnumerable`1<string> values);
}
internal class Azure.Core.MemoryTransport : HttpPipelineTransport {
    public virtual Request CreateRequest();
    public virtual void Process(HttpMessage message);
    [AsyncStateMachineAttribute("Azure.Core.MemoryTransport/<ProcessAsync>d__2")]
public virtual ValueTask ProcessAsync(HttpMessage message);
    private static void SetResponse(HttpMessage message);
}
internal class Azure.Core.MultipartContent : RequestContent {
    private static string CrLf;
    private static string ColonSP;
    private static int s_crlfLength;
    private static int s_dashDashLength;
    private static int s_colonSpaceLength;
    private List`1<MultipartRequestContent> _nestedContent;
    private string _subtype;
    private string _boundary;
    internal Dictionary`2<string, string> _headers;
    public MultipartContent(string subtype);
    public MultipartContent(string subtype, string boundary);
    private static MultipartContent();
    private static void ValidateBoundary(string boundary);
    private static string GetDefaultBoundary();
    public void ApplyToRequest(Request request);
    public virtual void Add(RequestContent content);
    public virtual void Add(RequestContent content, Dictionary`2<string, string> headers);
    private void AddInternal(RequestContent content, Dictionary`2<string, string> headers);
    public virtual void Dispose();
    public virtual void WriteTo(Stream stream, CancellationToken cancellationToken);
    public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    [AsyncStateMachineAttribute("Azure.Core.MultipartContent/<SerializeToStreamAsync>d__21")]
private Task SerializeToStreamAsync(Stream stream, CancellationToken cancellationToken);
    private string SerializeHeadersToString(StringBuilder scratch, int contentIndex, Dictionary`2<string, string> headers);
    private static void EncodeStringToStream(Stream stream, string input);
    private static Task EncodeStringToStreamAsync(Stream stream, string input, CancellationToken cancellationToken);
    public virtual bool TryComputeLength(Int64& length);
    private static int GetEncodedLength(string input);
}
internal class Azure.Core.MultipartFormDataContent : MultipartContent {
    private static string FormData;
    public MultipartFormDataContent(string boundary);
    public virtual void Add(RequestContent content);
    public virtual void Add(RequestContent content, Dictionary`2<string, string> headers);
    public void Add(RequestContent content, string name, Dictionary`2<string, string> headers);
    public void Add(RequestContent content, string name, string fileName, Dictionary`2<string, string> headers);
    private void AddInternal(RequestContent content, Dictionary`2<string, string> headers, string name, string fileName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.NextLinkOperationImplementation : object {
    internal static string NotSet;
    internal static string RehydrationTokenVersion;
    private static string ApiVersionParam;
    private static String[] FailureStates;
    private static String[] SuccessStates;
    private HeaderSource _headerSource;
    private Uri _startRequestUri;
    private OperationFinalStateVia _finalStateVia;
    private HttpPipeline _pipeline;
    [NullableAttribute("2")]
private string _apiVersion;
    [NullableAttribute("2")]
private string _lastKnownLocation;
    private string _nextRequestUri;
    [CompilerGeneratedAttribute]
private string <OperationId>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestMethod <RequestMethod>k__BackingField;
    public string OperationId { get; private set; }
    public RequestMethod RequestMethod { get; }
    private NextLinkOperationImplementation(HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, string nextRequestUri, HeaderSource headerSource, string lastKnownLocation, OperationFinalStateVia finalStateVia, string apiVersion, string operationId, bool isNextRequestPolling);
    private static NextLinkOperationImplementation();
    [CompilerGeneratedAttribute]
public string get_OperationId();
    [CompilerGeneratedAttribute]
private void set_OperationId(string value);
    [CompilerGeneratedAttribute]
public RequestMethod get_RequestMethod();
    public static IOperation Create(HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    public static IOperation`1<T> Create(IOperationSource`1<T> operationSource, HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    public static IOperation`1<T> Create(IOperationSource`1<T> operationSource, IOperation operation);
    public static IOperation Create(HttpPipeline pipeline, RehydrationToken rehydrationToken);
    private static string ParseOperationId(Uri startRequestUri, string nextRequestUri);
    public RehydrationToken GetRehydrationToken();
    public static RehydrationToken GetRehydrationToken(RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia);
    public static RehydrationToken GetRehydrationToken(RequestMethod requestMethod, Uri startRequestUri, string nextRequestUri, string headerSource, string lastKnownLocation, string finalStateVia, string operationId);
    [NullableContextAttribute("2")]
private static string ConstructStringValue(string value);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Azure.Core.NextLinkOperationImplementation/<UpdateStateAsync>d__29")]
public sealed virtual ValueTask`1<OperationState> UpdateStateAsync(bool async, CancellationToken cancellationToken);
    private static OperationState GetOperationStateFromFinalResponse(RequestMethod requestMethod, Response response);
    private void UpdateNextRequestUri(ResponseHeaders headers);
    internal static string AppendOrReplaceApiVersion(string uri, string apiVersion);
    [NullableContextAttribute("0")]
internal static bool TryGetApiVersion(Uri startRequestUri, ReadOnlySpan`1& apiVersion);
    [NullableContextAttribute("2")]
private string GetFinalUri(string resourceLocation);
    private Response GetResponse(string uri, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.NextLinkOperationImplementation/<GetResponseAsync>d__36")]
private ValueTask`1<Response> GetResponseAsync(string uri, CancellationToken cancellationToken);
    private HttpMessage CreateRequest(string uri);
    private static bool IsFinalState(Response response, HeaderSource headerSource, Nullable`1& failureState, String& resourceLocation);
    private static string GetRequiredString(JsonElement& element);
    private static bool ShouldIgnoreHeader(RequestMethod method, Response response);
    private static HeaderSource GetHeaderSource(RequestMethod requestMethod, Uri requestUri, Response response, string apiVersion, String& nextRequestUri, Boolean& isNextRequestPolling);
    private static void AssertNotNull(T value, string name);
}
internal enum Azure.Core.OperationFinalStateVia : Enum {
    public int value__;
    public static OperationFinalStateVia AzureAsyncOperation;
    public static OperationFinalStateVia Location;
    public static OperationFinalStateVia OriginalUri;
    public static OperationFinalStateVia OperationLocation;
    public static OperationFinalStateVia LocationOverride;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.OperationHelpers : object {
    public static T GetValue(T& value);
    [NullableContextAttribute("0")]
public static T GetValue(Nullable`1& value);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionAsync>d__2`1")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<TResult>> DefaultWaitForCompletionAsync(Operation`1<TResult> operation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionAsync>d__3`1")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<TResult>> DefaultWaitForCompletionAsync(Operation`1<TResult> operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response`1<TResult> DefaultWaitForCompletion(Operation`1<TResult> operation, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response`1<TResult> DefaultWaitForCompletion(Operation`1<TResult> operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionResponseAsync>d__6")]
[ExtensionAttribute]
public static ValueTask`1<Response> DefaultWaitForCompletionResponseAsync(Operation operation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionResponseAsync>d__7")]
[ExtensionAttribute]
public static ValueTask`1<Response> DefaultWaitForCompletionResponseAsync(Operation operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response DefaultWaitForCompletionResponse(Operation operation, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response DefaultWaitForCompletionResponse(Operation operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationInternal : OperationInternalBase {
    private OperationInternal`1<VoidValue> _internalOperation;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public OperationInternal(IOperation operation, ClientDiagnostics clientDiagnostics, Response rawResponse, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    internal OperationInternal(OperationState finalState);
    public static OperationInternal Succeeded(Response rawResponse);
    public static OperationInternal Failed(Response rawResponse, RequestFailedException operationFailedException);
    public virtual Response get_RawResponse();
    public virtual bool get_HasCompleted();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal/<UpdateStatusAsync>d__9")]
protected virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationInternal`1 : OperationInternalBase {
    private IOperation`1<T> _operation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AsyncLockWithValue`1<OperationState`1<T>> _stateLock;
    private Response _rawResponse;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasValue { get; }
    public T Value { get; }
    public OperationInternal`1(IOperation`1<T> operation, ClientDiagnostics clientDiagnostics, Response rawResponse, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    internal OperationInternal`1(OperationState`1<T> finalState);
    public static OperationInternal`1<T> Succeeded(Response rawResponse, T value);
    public static OperationInternal`1<T> Failed(Response rawResponse, RequestFailedException operationFailedException);
    public virtual Response get_RawResponse();
    public virtual bool get_HasCompleted();
    public bool get_HasValue();
    public T get_Value();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__15")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__16")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__19")]
private ValueTask`1<Response`1<T>> WaitForCompletionAsync(bool async, Nullable`1<TimeSpan> pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<UpdateStatusAsync>d__20")]
protected virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
    private static Response GetResponseFromState(OperationState`1<T> state);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Azure.Core.OperationInternalBase : object {
    private ClientDiagnostics _diagnostics;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IReadOnlyDictionary`2<string, string> _scopeAttributes;
    [NullableAttribute("2")]
private DelayStrategy _fallbackStrategy;
    private AsyncLockWithValue`1<Response> _responseLock;
    private string _waitForCompletionResponseScopeName;
    protected string _updateStatusScopeName;
    protected string _waitForCompletionScopeName;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    protected OperationInternalBase(Response rawResponse);
    protected OperationInternalBase(ClientDiagnostics clientDiagnostics, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    public abstract virtual Response get_RawResponse();
    public abstract virtual bool get_HasCompleted();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<UpdateStatusAsync>d__13")]
public ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public Response UpdateStatus(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__15")]
public ValueTask`1<Response> WaitForCompletionResponseAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__16")]
public ValueTask`1<Response> WaitForCompletionResponseAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__19")]
protected ValueTask`1<Response> WaitForCompletionResponseAsync(bool async, Nullable`1<TimeSpan> pollingInterval, string scopeName, CancellationToken cancellationToken);
    protected abstract virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
    protected DiagnosticScope CreateScope(string scopeName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationPoller : object {
    private DelayStrategy _delayStrategy;
    [NullableContextAttribute("2")]
public OperationPoller(DelayStrategy strategy);
    public ValueTask`1<Response> WaitForCompletionResponseAsync(Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public ValueTask`1<Response> WaitForCompletionResponseAsync(OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__6`1")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(Operation`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(Operation`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__8`1")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(OperationInternal`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(OperationInternal`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__10")]
private ValueTask`1<Response> WaitForCompletionAsync(bool async, Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__11")]
private ValueTask`1<Response> WaitForCompletionAsync(bool async, OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<Delay>d__12")]
private static ValueTask Delay(bool async, TimeSpan delay, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.OperationState : ValueType {
    [CompilerGeneratedAttribute]
private Response <RawResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasSucceeded>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private RequestFailedException <OperationFailedException>k__BackingField;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasSucceeded { get; }
    [NullableAttribute("2")]
public RequestFailedException OperationFailedException { get; }
    private OperationState(Response rawResponse, bool hasCompleted, bool hasSucceeded, RequestFailedException operationFailedException);
    [CompilerGeneratedAttribute]
public Response get_RawResponse();
    [CompilerGeneratedAttribute]
public bool get_HasCompleted();
    [CompilerGeneratedAttribute]
public bool get_HasSucceeded();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public RequestFailedException get_OperationFailedException();
    public static OperationState Success(Response rawResponse);
    public static OperationState Failure(Response rawResponse, RequestFailedException operationFailedException);
    public static OperationState Pending(Response rawResponse);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.OperationState`1 : ValueType {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Response <RawResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasSucceeded>k__BackingField;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestFailedException <OperationFailedException>k__BackingField;
    [NullableAttribute("1")]
public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasSucceeded { get; }
    public T Value { get; }
    public RequestFailedException OperationFailedException { get; }
    private OperationState`1(Response rawResponse, bool hasCompleted, bool hasSucceeded, T value, RequestFailedException operationFailedException);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Response get_RawResponse();
    [CompilerGeneratedAttribute]
public bool get_HasCompleted();
    [CompilerGeneratedAttribute]
public bool get_HasSucceeded();
    [CompilerGeneratedAttribute]
public T get_Value();
    [CompilerGeneratedAttribute]
public RequestFailedException get_OperationFailedException();
    [NullableContextAttribute("1")]
public static OperationState`1<T> Success(Response rawResponse, T value);
    [NullableContextAttribute("1")]
public static OperationState`1<T> Failure(Response rawResponse, RequestFailedException operationFailedException);
    [NullableContextAttribute("1")]
public static OperationState`1<T> Pending(Response rawResponse);
}
internal static class Azure.Core.Page : object {
    [NullableContextAttribute("1")]
public static Page`1<T> FromValues(IEnumerable`1<T> values, string continuationToken, Response response);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.PageableHelpers : object {
    private static Byte[] DefaultItemPropertyName;
    private static Byte[] DefaultNextLinkPropertyName;
    private static PageableHelpers();
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.PageableHelpers/<CreateAsyncPageable>d__10`1")]
public static ValueTask`1<Operation`1<AsyncPageable`1<T>>> CreateAsyncPageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Operation`1<Pageable`1<T>> CreatePageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreateEnumerable(Func`2<Nullable`1<int>, Page`1<T>> firstPageFunc, Func`3<string, Nullable`1<int>, Page`1<T>> nextPageFunc, Nullable`1<int> pageSize);
    public static AsyncPageable`1<T> CreateAsyncEnumerable(Func`2<Nullable`1<int>, Task`1<Page`1<T>>> firstPageFunc, Func`3<string, Nullable`1<int>, Task`1<Page`1<T>>> nextPageFunc, Nullable`1<int> pageSize);
    private static ValueTuple`2<List`1<T>, string> ParseResponseForBinaryData(Response response, Byte[] itemPropertyName, Byte[] nextLinkPropertyName);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static object <ParseResponseForBinaryData>g__ReadBinaryData|19_0(Utf8JsonReader& r, ReadOnlyMemory`1& content);
}
internal static class Azure.Core.Pipeline.ActivityExtensions : object {
    [CompilerGeneratedAttribute]
private static bool <SupportsActivitySource>k__BackingField;
    public static bool SupportsActivitySource { get; private set; }
    private static ActivityExtensions();
    [CompilerGeneratedAttribute]
public static bool get_SupportsActivitySource();
    [CompilerGeneratedAttribute]
private static void set_SupportsActivitySource(bool value);
    public static void ResetFeatureSwitch();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.ClientDiagnostics : DiagnosticScopeFactory {
    public ClientDiagnostics(ClientOptions options, Nullable`1<bool> suppressNestedClientActivities);
    public ClientDiagnostics(string optionsNamespace, string providerNamespace, DiagnosticsOptions diagnosticsOptions, Nullable`1<bool> suppressNestedClientActivities);
    internal static HttpMessageSanitizer CreateMessageSanitizer(DiagnosticsOptions diagnostics);
    internal static string GetResourceProviderNamespace(Assembly assembly);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.Pipeline.DiagnosticScope : ValueType {
    private static string AzureSdkScopeLabel;
    internal static string OpenTelemetrySchemaAttribute;
    internal static string OpenTelemetrySchemaVersion;
    private static object AzureSdkScopeValue;
    [NullableAttribute("2")]
private ActivityAdapter _activityAdapter;
    private bool _suppressNestedClientActivities;
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    public bool IsEnabled { get; }
    [RequiresUnreferencedCodeAttribute("The diagnosticSourceArgs are used in a call to DiagnosticSource.Write, all necessary properties need to be preserved on the type being passed in using DynamicDependency attributes.")]
internal DiagnosticScope(string scopeName, DiagnosticListener source, object diagnosticSourceArgs, ActivitySource activitySource, ActivityKind kind, bool suppressNestedClientActivities);
    private static DiagnosticScope();
    [CompilerGeneratedAttribute]
public bool get_IsEnabled();
    public void AddAttribute(string name, string value);
    public void AddIntegerAttribute(string name, int value);
    public void AddLongAttribute(string name, long value);
    public void AddAttribute(string name, T value, Func`2<T, string> format);
    public void AddLink(string traceparent, string tracestate, IDictionary`2<string, object> attributes);
    public void Start();
    public void SetDisplayName(string displayName);
    public void SetStartTime(DateTime dateTime);
    public void SetTraceContext(string traceparent, string tracestate);
    public sealed virtual void Dispose();
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void Failed(Exception exception);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void Failed(string errorCode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.DiagnosticScopeFactory : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Dictionary`2<string, DiagnosticListener> _listeners;
    [NullableAttribute("2")]
private string _resourceProviderNamespace;
    [NullableAttribute("2")]
private DiagnosticListener _source;
    private bool _suppressNestedClientActivities;
    private bool _isStable;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ConcurrentDictionary`2<string, ActivitySource> ActivitySources;
    [CompilerGeneratedAttribute]
private bool <IsActivityEnabled>k__BackingField;
    public bool IsActivityEnabled { get; }
    public DiagnosticScopeFactory(string clientNamespace, string resourceProviderNamespace, bool isActivityEnabled, bool suppressNestedClientActivities, bool isStable);
    private static DiagnosticScopeFactory();
    [CompilerGeneratedAttribute]
public bool get_IsActivityEnabled();
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
public DiagnosticScope CreateScope(string name, ActivityKind kind);
    private ActivitySource GetActivitySource(string ns, string name);
}
[ExtensionAttribute]
internal static class Azure.Core.Pipeline.TaskExtensions : object {
    [ExtensionAttribute]
public static WithCancellationTaskAwaitable AwaitWithCancellation(Task task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static WithCancellationTaskAwaitable`1<T> AwaitWithCancellation(Task`1<T> task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static WithCancellationValueTaskAwaitable`1<T> AwaitWithCancellation(ValueTask`1<T> task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static T EnsureCompleted(Task`1<T> task);
    [ExtensionAttribute]
public static void EnsureCompleted(Task task);
    [ExtensionAttribute]
public static T EnsureCompleted(ValueTask`1<T> task);
    [ExtensionAttribute]
public static void EnsureCompleted(ValueTask task);
    [ExtensionAttribute]
public static Enumerable`1<T> EnsureSyncEnumerable(IAsyncEnumerable`1<T> asyncEnumerable);
    [ExtensionAttribute]
public static ConfiguredValueTaskAwaitable`1<T> EnsureCompleted(ConfiguredValueTaskAwaitable`1<T> awaitable, bool async);
    [ExtensionAttribute]
public static ConfiguredValueTaskAwaitable EnsureCompleted(ConfiguredValueTaskAwaitable awaitable, bool async);
    [ConditionalAttribute("DEBUG")]
private static void VerifyTaskCompleted(bool isCompleted);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Core.ProtocolOperation`1 : Operation`1<T> {
    private Func`2<Response, T> _resultSelector;
    private OperationInternal`1<T> _operation;
    private IOperation _nextLinkOperation;
    public string Id { get; }
    public T Value { get; }
    public bool HasCompleted { get; }
    public bool HasValue { get; }
    internal ProtocolOperation`1(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Request request, Response response, OperationFinalStateVia finalStateVia, string scopeName, Func`2<Response, T> resultSelector);
    public virtual string get_Id();
    public virtual T get_Value();
    public virtual bool get_HasCompleted();
    public virtual bool get_HasValue();
    public virtual Response GetRawResponse();
    public virtual Response UpdateStatus(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.ProtocolOperation`1/<Azure-Core-IOperation<T>-UpdateStateAsync>d__17")]
private sealed virtual override ValueTask`1<OperationState`1<T>> Azure.Core.IOperation<T>.UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.ProtocolOperationHelpers : object {
    public static Operation`1<TTo> Convert(Operation`1<TFrom> operation, Func`2<Response, TTo> convertFunc, ClientDiagnostics diagnostics, string scopeName);
    public static ValueTask`1<Operation`1<VoidValue>> ProcessMessageWithoutResponseValueAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static Operation`1<VoidValue> ProcessMessageWithoutResponseValue(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static ValueTask`1<Operation`1<BinaryData>> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static Operation`1<BinaryData> ProcessMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    [AsyncStateMachineAttribute("Azure.Core.ProtocolOperationHelpers/<ProcessMessageAsync>d__5`1")]
public static ValueTask`1<Operation`1<T>> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil, Func`2<Response, T> resultSelector);
    public static Operation`1<T> ProcessMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil, Func`2<Response, T> resultSelector);
}
internal class Azure.Core.RawRequestUriBuilder : RequestUriBuilder {
    [NullableAttribute("1")]
private static string SchemeSeparator;
    private static char HostSeparator;
    private static char PortSeparator;
    [NullableAttribute("1")]
private static Char[] HostOrPort;
    private static char QueryBeginSeparator;
    private static char QueryContinueSeparator;
    private static char QueryValueSeparator;
    private Nullable`1<RawWritingPosition> _position;
    private static RawRequestUriBuilder();
    private static void GetQueryParts(ReadOnlySpan`1<char> queryUnparsed, ReadOnlySpan`1& name, ReadOnlySpan`1& value);
    [NullableContextAttribute("1")]
public void AppendRaw(string value, bool escape);
    private void AppendRaw(ReadOnlySpan`1<char> value, bool escape);
    [NullableContextAttribute("1")]
public void AppendRawNextLink(string nextLink, bool escape);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.RequestHeaderExtensions : object {
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, bool value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, float value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, double value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, int value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, long value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, TimeSpan value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, Guid value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, Byte[] value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, BinaryData value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string prefix, IDictionary`2<string, string> headersToAdd);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, ETag value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, MatchConditions conditions);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, RequestConditions conditions, string format);
    [ExtensionAttribute]
public static void AddDelimited(RequestHeaders headers, string name, IEnumerable`1<T> value, string delimiter);
    [ExtensionAttribute]
public static void AddDelimited(RequestHeaders headers, string name, IEnumerable`1<T> value, string delimiter, string format);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.RequestUriBuilderExtensions : object {
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, bool value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, float value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, double value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, int value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, Byte[] value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, IEnumerable`1<string> value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, DateTimeOffset value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, TimeSpan value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, Guid value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, long value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, bool value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, float value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, DateTimeOffset value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, TimeSpan value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, double value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, decimal value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, int value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, long value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, TimeSpan value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, Byte[] value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, Guid value, bool escape);
    [ExtensionAttribute]
public static void AppendQueryDelimited(RequestUriBuilder builder, string name, IEnumerable`1<T> value, string delimiter, bool escape);
    [ExtensionAttribute]
public static void AppendQueryDelimited(RequestUriBuilder builder, string name, IEnumerable`1<T> value, string delimiter, string format, bool escape);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.ResponseHeadersExtensions : object {
    private static String[] KnownFormats;
    private static ResponseHeadersExtensions();
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Byte[]& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, T& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string prefix, IDictionary`2& value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.ResponseWithHeaders : object {
    public static ResponseWithHeaders`2<T, THeaders> FromValue(T value, THeaders headers, Response rawResponse);
    public static ResponseWithHeaders`1<THeaders> FromValue(THeaders headers, Response rawResponse);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.ResponseWithHeaders`1 : object {
    private Response _rawResponse;
    [CompilerGeneratedAttribute]
private THeaders <Headers>k__BackingField;
    public THeaders Headers { get; }
    public ResponseWithHeaders`1(THeaders headers, Response rawResponse);
    public Response GetRawResponse();
    [CompilerGeneratedAttribute]
public THeaders get_Headers();
    public static Response op_Implicit(ResponseWithHeaders`1<THeaders> self);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Core.ResponseWithHeaders`2 : Response`1<T> {
    private Response _rawResponse;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private THeaders <Headers>k__BackingField;
    public T Value { get; }
    public THeaders Headers { get; }
    public ResponseWithHeaders`2(T value, THeaders headers, Response rawResponse);
    public virtual Response GetRawResponse();
    [CompilerGeneratedAttribute]
public virtual T get_Value();
    [CompilerGeneratedAttribute]
public THeaders get_Headers();
    public static Response op_Implicit(ResponseWithHeaders`2<T, THeaders> self);
}
internal class Azure.Core.SequentialDelayStrategy : DelayStrategy {
    [NullableAttribute("1")]
private static TimeSpan[] _pollingSequence;
    private static TimeSpan _maxDelay;
    private static SequentialDelayStrategy();
    [NullableContextAttribute("2")]
protected virtual TimeSpan GetNextDelayCore(Response response, int retryNumber);
}
internal class Azure.Core.StringRequestContent : RequestContent {
    private Byte[] _bytes;
    public StringRequestContent(string value);
    [AsyncStateMachineAttribute("Azure.Core.StringRequestContent/<WriteToAsync>d__2")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
internal abstract class Azure.Core.TypeBinder`1 : object {
    private ConcurrentDictionary`2<Type, BoundTypeInfo<TExchange>> _cache;
    private Func`2<Type, BoundTypeInfo<TExchange>> _valueFactory;
    public T Deserialize(TExchange source);
    public void Serialize(T value, TExchange destination);
    public void Serialize(object value, Type type, TExchange destination);
    public BoundTypeInfo<TExchange> GetBinderInfo(Type type);
    public BoundTypeInfo<TExchange> GetBinderInfo(Type type, Type interfaceType);
    protected abstract virtual void Set(TExchange destination, T value, BoundMemberInfo<TExchange> memberInfo);
    protected abstract virtual bool TryGet(BoundMemberInfo<TExchange> memberInfo, TExchange source, T& value);
    [CompilerGeneratedAttribute]
private BoundTypeInfo<TExchange> <.ctor>b__2_0(Type t);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.TypeFormatters : object {
    private static string RoundtripZFormat;
    [CompilerGeneratedAttribute]
private static string <DefaultNumberFormat>k__BackingField;
    public static string DefaultNumberFormat { get; }
    private static TypeFormatters();
    [CompilerGeneratedAttribute]
public static string get_DefaultNumberFormat();
    public static string ToString(bool value);
    public static string ToString(DateTime value, string format);
    public static string ToString(DateTimeOffset value, string format);
    public static string ToString(TimeSpan value, string format);
    public static string ToString(Byte[] value, string format);
    public static string ToBase64UrlString(Byte[] value);
    public static Byte[] FromBase64UrlString(string value);
    private static int GetNumBase64PaddingCharsToAddForDecode(int inputLength);
    public static DateTimeOffset ParseDateTimeOffset(string value, string format);
    public static TimeSpan ParseTimeSpan(string value, string format);
    [NullableContextAttribute("2")]
public static string ConvertToString(object value, string format);
}
[IsReadOnlyAttribute]
internal class Azure.Core.VoidValue : ValueType {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.XElementExtensions : object {
    [ExtensionAttribute]
public static Byte[] GetBytesFromBase64Value(XElement element, string format);
    [ExtensionAttribute]
public static DateTimeOffset GetDateTimeOffsetValue(XElement element, string format);
    [ExtensionAttribute]
public static TimeSpan GetTimeSpanValue(XElement element, string format);
    [ExtensionAttribute]
public static object GetObjectValue(XElement element, string format);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.XmlWriterContent : RequestContent {
    private MemoryStream _stream;
    private RequestContent _content;
    [CompilerGeneratedAttribute]
private XmlWriter <XmlWriter>k__BackingField;
    public XmlWriter XmlWriter { get; }
    [CompilerGeneratedAttribute]
public XmlWriter get_XmlWriter();
    [AsyncStateMachineAttribute("Azure.Core.XmlWriterContent/<WriteToAsync>d__6")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.XmlWriterExtensions : object {
    [ExtensionAttribute]
public static void WriteObjectValue(XmlWriter writer, object value, string nameHint);
    [ExtensionAttribute]
public static void WriteValue(XmlWriter writer, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void WriteValue(XmlWriter writer, TimeSpan value, string format);
    [ExtensionAttribute]
public static void WriteValue(XmlWriter writer, Byte[] value, string format);
}
internal static class Azure.Data.Tables.Argument : object {
    public static void AssertNotNull(T value, string name);
    public static void AssertNotNull(Nullable`1<T> value, string name);
    public static void AssertNotNullOrEmpty(IEnumerable`1<T> value, string name);
    public static void AssertNotNullOrEmpty(string value, string name);
    public static void AssertNotNullOrWhiteSpace(string value, string name);
    public static void AssertNotDefault(T& value, string name);
    public static void AssertInRange(T value, T minimum, T maximum, string name);
    public static void AssertEnumDefined(Type enumType, object value, string name);
    public static T CheckNotNull(T value, string name);
    public static string CheckNotNullOrEmpty(string value, string name);
    public static void AssertNull(T value, string name, string message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Data.Tables.AzureSasCredentialSynchronousPolicy : HttpPipelineSynchronousPolicy {
    private AzureSasCredential _credential;
    public AzureSasCredentialSynchronousPolicy(AzureSasCredential credential);
    public virtual void OnSendingRequest(HttpMessage message);
}
[DefaultMemberAttribute("Item")]
internal class Azure.Data.Tables.ChangeTrackingDictionary`2 : object {
    private IDictionary`2<TKey, TValue> _innerDictionary;
    public bool IsUndefined { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public ICollection`1<TKey> Keys { get; }
    public ICollection`1<TValue> Values { get; }
    public TValue Item { get; public set; }
    private IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys { get; }
    private IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values { get; }
    public ChangeTrackingDictionary`2(IDictionary`2<TKey, TValue> dictionary);
    public ChangeTrackingDictionary`2(IReadOnlyDictionary`2<TKey, TValue> dictionary);
    public bool get_IsUndefined();
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual ICollection`1<TKey> get_Keys();
    public sealed virtual ICollection`1<TValue> get_Values();
    public sealed virtual TValue get_Item(TKey key);
    public sealed virtual void set_Item(TKey key, TValue value);
    private sealed virtual override IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys();
    private sealed virtual override IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values();
    public sealed virtual IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual void Add(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int index);
    public sealed virtual bool Remove(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void Add(TKey key, TValue value);
    public sealed virtual bool ContainsKey(TKey key);
    public sealed virtual bool Remove(TKey key);
    public sealed virtual bool TryGetValue(TKey key, TValue& value);
    public IDictionary`2<TKey, TValue> EnsureDictionary();
    [IteratorStateMachineAttribute("Azure.Data.Tables.ChangeTrackingDictionary`2/<<GetEnumerator>g__enumerateEmpty|21_0>d")]
[CompilerGeneratedAttribute]
internal static IEnumerator`1<KeyValuePair`2<TKey, TValue>> <GetEnumerator>g__enumerateEmpty|21_0();
}
[DefaultMemberAttribute("Item")]
internal class Azure.Data.Tables.ChangeTrackingList`1 : object {
    private IList`1<T> _innerList;
    public bool IsUndefined { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public T Item { get; public set; }
    public ChangeTrackingList`1(IList`1<T> innerList);
    public ChangeTrackingList`1(IReadOnlyList`1<T> innerList);
    public bool get_IsUndefined();
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual T get_Item(int index);
    public sealed virtual void set_Item(int index, T value);
    public void Reset();
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual void Add(T item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(T item);
    public sealed virtual void CopyTo(T[] array, int arrayIndex);
    public sealed virtual bool Remove(T item);
    public sealed virtual int IndexOf(T item);
    public sealed virtual void Insert(int index, T item);
    public sealed virtual void RemoveAt(int index);
    public IList`1<T> EnsureList();
    [IteratorStateMachineAttribute("Azure.Data.Tables.ChangeTrackingList`1/<<GetEnumerator>g__enumerateEmpty|14_0>d")]
[CompilerGeneratedAttribute]
internal static IEnumerator`1<T> <GetEnumerator>g__enumerateEmpty|14_0();
}
internal class Azure.Data.Tables.CosmosPatchTransformPolicy : HttpPipelineSynchronousPolicy {
    public virtual void OnSendingRequest(HttpMessage message);
    public static void TransformPatchToCosmosPost(HttpMessage message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Data.Tables.DictionaryTableExtensions : object {
    [ExtensionAttribute]
internal static Dictionary`2<string, object> ToOdataAnnotatedDictionary(IDictionary`2<string, object> tableEntityProperties);
    [ExtensionAttribute]
internal static void CastAndRemoveAnnotations(IDictionary`2<string, object> entity, Dictionary`2<string, ValueTuple`2<string, string>> typeAnnotationsWithKeys);
    [ExtensionAttribute]
internal static List`1<T> ToTableEntityList(IReadOnlyList`1<IDictionary`2<string, object>> entityList);
    [ExtensionAttribute]
internal static T ToTableEntity(IDictionary`2<string, object> entity, BoundTypeInfo<IDictionary`2<string, object>> typeInfo);
}
internal static class Azure.Data.Tables.EntityUtilities : object {
    private static ConcurrentDictionary`2<Type, Func`2<Object[], object>> compiledActivators;
    private static EntityUtilities();
    internal static object InstantiateEntityFromType(Type type);
    private static Func`2<Object[], object> GenerateActivator(Type type);
    private static Func`2<Object[], object> GenerateActivator(Type type, Type[] ctorParamTypes);
}
internal class Azure.Data.Tables.Errors : object {
    public static ArgumentNullException ArgumentNull(string paramName);
    public static ArgumentOutOfRangeException InvalidSasProtocol(string protocol, string sasProtocol);
    public static ArgumentException InvalidResourceType(char s);
    public static InvalidOperationException SasMissingData(string paramName);
}
public interface Azure.Data.Tables.ITableEntity {
    public string PartitionKey { get; public set; }
    public string RowKey { get; public set; }
    public Nullable`1<DateTimeOffset> Timestamp { get; public set; }
    public ETag ETag { get; public set; }
    public abstract virtual string get_PartitionKey();
    public abstract virtual void set_PartitionKey(string value);
    public abstract virtual string get_RowKey();
    public abstract virtual void set_RowKey(string value);
    public abstract virtual Nullable`1<DateTimeOffset> get_Timestamp();
    public abstract virtual void set_Timestamp(Nullable`1<DateTimeOffset> value);
    public abstract virtual ETag get_ETag();
    public abstract virtual void set_ETag(ETag value);
}
[IsReadOnlyAttribute]
internal class Azure.Data.Tables.Models.OdataMetadataFormat : ValueType {
    private string _value;
    private static string ApplicationJsonOdataNometadataValue;
    private static string ApplicationJsonOdataMinimalmetadataValue;
    private static string ApplicationJsonOdataFullmetadataValue;
    [CompilerGeneratedAttribute]
private static OdataMetadataFormat <ApplicationJsonOdataNometadata>k__BackingField;
    [CompilerGeneratedAttribute]
private static OdataMetadataFormat <ApplicationJsonOdataMinimalmetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private static OdataMetadataFormat <ApplicationJsonOdataFullmetadata>k__BackingField;
    public static OdataMetadataFormat ApplicationJsonOdataNometadata { get; }
    public static OdataMetadataFormat ApplicationJsonOdataMinimalmetadata { get; }
    public static OdataMetadataFormat ApplicationJsonOdataFullmetadata { get; }
    public OdataMetadataFormat(string value);
    private static OdataMetadataFormat();
    [CompilerGeneratedAttribute]
public static OdataMetadataFormat get_ApplicationJsonOdataNometadata();
    [CompilerGeneratedAttribute]
public static OdataMetadataFormat get_ApplicationJsonOdataMinimalmetadata();
    [CompilerGeneratedAttribute]
public static OdataMetadataFormat get_ApplicationJsonOdataFullmetadata();
    public static bool op_Equality(OdataMetadataFormat left, OdataMetadataFormat right);
    public static bool op_Inequality(OdataMetadataFormat left, OdataMetadataFormat right);
    public static OdataMetadataFormat op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(OdataMetadataFormat other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
internal class Azure.Data.Tables.Models.QueryOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<OdataMetadataFormat> <Format>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Top>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Select>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Filter>k__BackingField;
    public Nullable`1<OdataMetadataFormat> Format { get; public set; }
    public Nullable`1<int> Top { get; public set; }
    public string Select { get; public set; }
    public string Filter { get; public set; }
    internal QueryOptions(Nullable`1<OdataMetadataFormat> format, Nullable`1<int> top, string select, string filter);
    [CompilerGeneratedAttribute]
public Nullable`1<OdataMetadataFormat> get_Format();
    [CompilerGeneratedAttribute]
public void set_Format(Nullable`1<OdataMetadataFormat> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Top();
    [CompilerGeneratedAttribute]
public void set_Top(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Select();
    [CompilerGeneratedAttribute]
public void set_Select(string value);
    [CompilerGeneratedAttribute]
public string get_Filter();
    [CompilerGeneratedAttribute]
public void set_Filter(string value);
}
[IsReadOnlyAttribute]
internal class Azure.Data.Tables.Models.ResponseFormat : ValueType {
    private string _value;
    private static string ReturnNoContentValue;
    private static string ReturnContentValue;
    [CompilerGeneratedAttribute]
private static ResponseFormat <ReturnNoContent>k__BackingField;
    [CompilerGeneratedAttribute]
private static ResponseFormat <ReturnContent>k__BackingField;
    public static ResponseFormat ReturnNoContent { get; }
    public static ResponseFormat ReturnContent { get; }
    public ResponseFormat(string value);
    private static ResponseFormat();
    [CompilerGeneratedAttribute]
public static ResponseFormat get_ReturnNoContent();
    [CompilerGeneratedAttribute]
public static ResponseFormat get_ReturnContent();
    public static bool op_Equality(ResponseFormat left, ResponseFormat right);
    public static bool op_Inequality(ResponseFormat left, ResponseFormat right);
    public static ResponseFormat op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ResponseFormat other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[CodeGenModelAttribute("AccessPolicy")]
public class Azure.Data.Tables.Models.TableAccessPolicy : object {
    [CompilerGeneratedAttribute]
private string <Permission>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <StartsOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <ExpiresOn>k__BackingField;
    public string Permission { get; public set; }
    [CodeGenMemberAttribute("Start")]
public Nullable`1<DateTimeOffset> StartsOn { get; public set; }
    [CodeGenMemberAttribute("Expiry")]
public Nullable`1<DateTimeOffset> ExpiresOn { get; public set; }
    public TableAccessPolicy(Nullable`1<DateTimeOffset> startsOn, Nullable`1<DateTimeOffset> expiresOn, string permission);
    [CompilerGeneratedAttribute]
public string get_Permission();
    [CompilerGeneratedAttribute]
public void set_Permission(string value);
    private sealed virtual override void Azure.Core.IXmlSerializable.Write(XmlWriter writer, string nameHint);
    internal static TableAccessPolicy DeserializeTableAccessPolicy(XElement element);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_StartsOn();
    [CompilerGeneratedAttribute]
public void set_StartsOn(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_ExpiresOn();
    [CompilerGeneratedAttribute]
public void set_ExpiresOn(Nullable`1<DateTimeOffset> value);
}
[CodeGenModelAttribute("Logging")]
public class Azure.Data.Tables.Models.TableAnalyticsLoggingSettings : object {
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Delete>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Read>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Write>k__BackingField;
    [CompilerGeneratedAttribute]
private TableRetentionPolicy <RetentionPolicy>k__BackingField;
    public string Version { get; public set; }
    public bool Delete { get; public set; }
    public bool Read { get; public set; }
    public bool Write { get; public set; }
    public TableRetentionPolicy RetentionPolicy { get; public set; }
    public TableAnalyticsLoggingSettings(string version, bool delete, bool read, bool write, TableRetentionPolicy retentionPolicy);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public bool get_Delete();
    [CompilerGeneratedAttribute]
public void set_Delete(bool value);
    [CompilerGeneratedAttribute]
public bool get_Read();
    [CompilerGeneratedAttribute]
public void set_Read(bool value);
    [CompilerGeneratedAttribute]
public bool get_Write();
    [CompilerGeneratedAttribute]
public void set_Write(bool value);
    [CompilerGeneratedAttribute]
public TableRetentionPolicy get_RetentionPolicy();
    [CompilerGeneratedAttribute]
public void set_RetentionPolicy(TableRetentionPolicy value);
    private sealed virtual override void Azure.Core.IXmlSerializable.Write(XmlWriter writer, string nameHint);
    internal static TableAnalyticsLoggingSettings DeserializeTableAnalyticsLoggingSettings(XElement element);
}
[CodeGenModelAttribute("CorsRule")]
public class Azure.Data.Tables.Models.TableCorsRule : object {
    [CompilerGeneratedAttribute]
private string <AllowedOrigins>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AllowedMethods>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AllowedHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExposedHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxAgeInSeconds>k__BackingField;
    public string AllowedOrigins { get; public set; }
    public string AllowedMethods { get; public set; }
    public string AllowedHeaders { get; public set; }
    public string ExposedHeaders { get; public set; }
    public int MaxAgeInSeconds { get; public set; }
    public TableCorsRule(string allowedOrigins, string allowedMethods, string allowedHeaders, string exposedHeaders, int maxAgeInSeconds);
    [CompilerGeneratedAttribute]
public string get_AllowedOrigins();
    [CompilerGeneratedAttribute]
public void set_AllowedOrigins(string value);
    [CompilerGeneratedAttribute]
public string get_AllowedMethods();
    [CompilerGeneratedAttribute]
public void set_AllowedMethods(string value);
    [CompilerGeneratedAttribute]
public string get_AllowedHeaders();
    [CompilerGeneratedAttribute]
public void set_AllowedHeaders(string value);
    [CompilerGeneratedAttribute]
public string get_ExposedHeaders();
    [CompilerGeneratedAttribute]
public void set_ExposedHeaders(string value);
    [CompilerGeneratedAttribute]
public int get_MaxAgeInSeconds();
    [CompilerGeneratedAttribute]
public void set_MaxAgeInSeconds(int value);
    private sealed virtual override void Azure.Core.IXmlSerializable.Write(XmlWriter writer, string nameHint);
    internal static TableCorsRule DeserializeTableCorsRule(XElement element);
}
internal class Azure.Data.Tables.Models.TableEntityQueryResponse : object {
    [CompilerGeneratedAttribute]
private string <OdataMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<IDictionary`2<string, object>> <Value>k__BackingField;
    public string OdataMetadata { get; }
    public IReadOnlyList`1<IDictionary`2<string, object>> Value { get; }
    internal TableEntityQueryResponse(string odataMetadata, IReadOnlyList`1<IDictionary`2<string, object>> value);
    [CompilerGeneratedAttribute]
public string get_OdataMetadata();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<IDictionary`2<string, object>> get_Value();
    internal static TableEntityQueryResponse DeserializeTableEntityQueryResponse(JsonElement element);
    internal static TableEntityQueryResponse FromResponse(Response response);
}
[IsReadOnlyAttribute]
public class Azure.Data.Tables.Models.TableErrorCode : ValueType {
    private string _value;
    private static string AuthorizationResourceTypeMismatchValue;
    private static string AuthorizationPermissionMismatchValue;
    private static string XMethodNotUsingPostValue;
    private static string XMethodIncorrectValueValue;
    private static string XMethodIncorrectCountValue;
    private static string TableHasNoPropertiesValue;
    private static string DuplicatePropertiesSpecifiedValue;
    private static string TableHasNoSuchPropertyValue;
    private static string DuplicateKeyPropertySpecifiedValue;
    private static string TableAlreadyExistsValue;
    private static string TableNotFoundValue;
    private static string ResourceNotFoundValue;
    private static string EntityNotFoundValue;
    private static string EntityAlreadyExistsValue;
    private static string PartitionKeyNotSpecifiedValue;
    private static string OperatorInvalidValue;
    private static string UpdateConditionNotSatisfiedValue;
    private static string PropertiesNeedValueValue;
    private static string PartitionKeyPropertyCannotBeUpdatedValue;
    private static string TooManyPropertiesValue;
    private static string EntityTooLargeValue;
    private static string PropertyValueTooLargeValue;
    private static string KeyValueTooLargeValue;
    private static string InvalidValueTypeValue;
    private static string TableBeingDeletedValue;
    private static string PrimaryKeyPropertyIsInvalidTypeValue;
    private static string PropertyNameTooLongValue;
    private static string PropertyNameInvalidValue;
    private static string InvalidDuplicateRowValue;
    private static string CommandsInBatchActOnDifferentPartitionsValue;
    private static string JsonFormatNotSupportedValue;
    private static string AtomFormatNotSupportedValue;
    private static string JsonVerboseFormatNotSupportedValue;
    private static string MediaTypeNotSupportedValue;
    private static string MethodNotAllowedValue;
    private static string ContentLengthExceededValue;
    private static string AccountIopsLimitExceededValue;
    private static string CannotCreateTableWithIopsGreaterThanMaxAllowedPerTableValue;
    private static string PerTableIopsIncrementLimitReachedValue;
    private static string PerTableIopsDecrementLimitReachedValue;
    private static string SettingIopsForATableInProvisioningNotAllowedValue;
    private static string PartitionKeyEqualityComparisonExpectedValue;
    private static string PartitionKeySpecifiedMoreThanOnceValue;
    private static string InvalidInputValue;
    private static string NotImplementedValue;
    private static string OperationTimedOutValue;
    private static string OutOfRangeInputValue;
    private static string ForbiddenValue;
    [CompilerGeneratedAttribute]
private static TableErrorCode <AuthorizationResourceTypeMismatch>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <XMethodNotUsingPost>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <XMethodIncorrectValue>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <XMethodIncorrectCount>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <TableHasNoProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <DuplicatePropertiesSpecified>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <TableHasNoSuchProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <DuplicateKeyPropertySpecified>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <TableAlreadyExists>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <TableNotFound>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <ResourceNotFound>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <EntityNotFound>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <EntityAlreadyExists>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <PartitionKeyNotSpecified>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <OperatorInvalid>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <UpdateConditionNotSatisfied>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <PropertiesNeedValue>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <PartitionKeyPropertyCannotBeUpdated>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <TooManyProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <EntityTooLarge>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <PropertyValueTooLarge>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <KeyValueTooLarge>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <InvalidValueType>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <TableBeingDeleted>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <PrimaryKeyPropertyIsInvalidType>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <PropertyNameTooLong>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <PropertyNameInvalid>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <InvalidDuplicateRow>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <CommandsInBatchActOnDifferentPartitions>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <JsonFormatNotSupported>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <AtomFormatNotSupported>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <JsonVerboseFormatNotSupported>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <MediaTypeNotSupported>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <MethodNotAllowed>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <ContentLengthExceeded>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <AccountIOPSLimitExceeded>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <CannotCreateTableWithIOPSGreaterThanMaxAllowedPerTable>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <PerTableIOPSIncrementLimitReached>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <PerTableIOPSDecrementLimitReached>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <SettingIOPSForATableInProvisioningNotAllowed>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <PartitionKeyEqualityComparisonExpected>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <PartitionKeySpecifiedMoreThanOnce>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <InvalidInput>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <NotImplemented>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <OperationTimedOut>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <OutOfRangeInput>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <Forbidden>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableErrorCode <AuthorizationPermissionMismatch>k__BackingField;
    public static TableErrorCode AuthorizationResourceTypeMismatch { get; }
    public static TableErrorCode XMethodNotUsingPost { get; }
    public static TableErrorCode XMethodIncorrectValue { get; }
    public static TableErrorCode XMethodIncorrectCount { get; }
    public static TableErrorCode TableHasNoProperties { get; }
    public static TableErrorCode DuplicatePropertiesSpecified { get; }
    public static TableErrorCode TableHasNoSuchProperty { get; }
    public static TableErrorCode DuplicateKeyPropertySpecified { get; }
    public static TableErrorCode TableAlreadyExists { get; }
    public static TableErrorCode TableNotFound { get; }
    public static TableErrorCode ResourceNotFound { get; }
    public static TableErrorCode EntityNotFound { get; }
    public static TableErrorCode EntityAlreadyExists { get; }
    public static TableErrorCode PartitionKeyNotSpecified { get; }
    public static TableErrorCode OperatorInvalid { get; }
    public static TableErrorCode UpdateConditionNotSatisfied { get; }
    public static TableErrorCode PropertiesNeedValue { get; }
    public static TableErrorCode PartitionKeyPropertyCannotBeUpdated { get; }
    public static TableErrorCode TooManyProperties { get; }
    public static TableErrorCode EntityTooLarge { get; }
    public static TableErrorCode PropertyValueTooLarge { get; }
    public static TableErrorCode KeyValueTooLarge { get; }
    public static TableErrorCode InvalidValueType { get; }
    public static TableErrorCode TableBeingDeleted { get; }
    public static TableErrorCode PrimaryKeyPropertyIsInvalidType { get; }
    public static TableErrorCode PropertyNameTooLong { get; }
    public static TableErrorCode PropertyNameInvalid { get; }
    public static TableErrorCode InvalidDuplicateRow { get; }
    public static TableErrorCode CommandsInBatchActOnDifferentPartitions { get; }
    public static TableErrorCode JsonFormatNotSupported { get; }
    public static TableErrorCode AtomFormatNotSupported { get; }
    public static TableErrorCode JsonVerboseFormatNotSupported { get; }
    public static TableErrorCode MediaTypeNotSupported { get; }
    public static TableErrorCode MethodNotAllowed { get; }
    public static TableErrorCode ContentLengthExceeded { get; }
    public static TableErrorCode AccountIOPSLimitExceeded { get; }
    public static TableErrorCode CannotCreateTableWithIOPSGreaterThanMaxAllowedPerTable { get; }
    public static TableErrorCode PerTableIOPSIncrementLimitReached { get; }
    public static TableErrorCode PerTableIOPSDecrementLimitReached { get; }
    public static TableErrorCode SettingIOPSForATableInProvisioningNotAllowed { get; }
    public static TableErrorCode PartitionKeyEqualityComparisonExpected { get; }
    public static TableErrorCode PartitionKeySpecifiedMoreThanOnce { get; }
    public static TableErrorCode InvalidInput { get; }
    public static TableErrorCode NotImplemented { get; }
    public static TableErrorCode OperationTimedOut { get; }
    public static TableErrorCode OutOfRangeInput { get; }
    public static TableErrorCode Forbidden { get; }
    public static TableErrorCode AuthorizationPermissionMismatch { get; }
    public TableErrorCode(string value);
    private static TableErrorCode();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_AuthorizationResourceTypeMismatch();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_XMethodNotUsingPost();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_XMethodIncorrectValue();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_XMethodIncorrectCount();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_TableHasNoProperties();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_DuplicatePropertiesSpecified();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_TableHasNoSuchProperty();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_DuplicateKeyPropertySpecified();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_TableAlreadyExists();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_TableNotFound();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_ResourceNotFound();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_EntityNotFound();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_EntityAlreadyExists();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_PartitionKeyNotSpecified();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_OperatorInvalid();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_UpdateConditionNotSatisfied();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_PropertiesNeedValue();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_PartitionKeyPropertyCannotBeUpdated();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_TooManyProperties();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_EntityTooLarge();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_PropertyValueTooLarge();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_KeyValueTooLarge();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_InvalidValueType();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_TableBeingDeleted();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_PrimaryKeyPropertyIsInvalidType();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_PropertyNameTooLong();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_PropertyNameInvalid();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_InvalidDuplicateRow();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_CommandsInBatchActOnDifferentPartitions();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_JsonFormatNotSupported();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_AtomFormatNotSupported();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_JsonVerboseFormatNotSupported();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_MediaTypeNotSupported();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_MethodNotAllowed();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_ContentLengthExceeded();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_AccountIOPSLimitExceeded();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_CannotCreateTableWithIOPSGreaterThanMaxAllowedPerTable();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_PerTableIOPSIncrementLimitReached();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_PerTableIOPSDecrementLimitReached();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_SettingIOPSForATableInProvisioningNotAllowed();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_PartitionKeyEqualityComparisonExpected();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_PartitionKeySpecifiedMoreThanOnce();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_InvalidInput();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_NotImplemented();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_OperationTimedOut();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_OutOfRangeInput();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_Forbidden();
    [CompilerGeneratedAttribute]
public static TableErrorCode get_AuthorizationPermissionMismatch();
    public static bool op_Equality(TableErrorCode left, TableErrorCode right);
    public static bool op_Inequality(TableErrorCode left, TableErrorCode right);
    public static TableErrorCode op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(TableErrorCode other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[CodeGenModelAttribute("GeoReplication")]
public class Azure.Data.Tables.Models.TableGeoReplicationInfo : object {
    [CompilerGeneratedAttribute]
private TableGeoReplicationStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <LastSyncedOn>k__BackingField;
    public TableGeoReplicationStatus Status { get; }
    [CodeGenMemberAttribute("LastSyncTime")]
public DateTimeOffset LastSyncedOn { get; }
    internal TableGeoReplicationInfo(TableGeoReplicationStatus status, DateTimeOffset lastSyncedOn);
    [CompilerGeneratedAttribute]
public TableGeoReplicationStatus get_Status();
    [CompilerGeneratedAttribute]
public DateTimeOffset get_LastSyncedOn();
    internal static TableGeoReplicationInfo DeserializeTableGeoReplicationInfo(XElement element);
}
[IsReadOnlyAttribute]
[CodeGenModelAttribute("GeoReplicationStatusType")]
public class Azure.Data.Tables.Models.TableGeoReplicationStatus : ValueType {
    private string _value;
    private static string LiveValue;
    private static string BootstrapValue;
    private static string UnavailableValue;
    [CompilerGeneratedAttribute]
private static TableGeoReplicationStatus <Live>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableGeoReplicationStatus <Bootstrap>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableGeoReplicationStatus <Unavailable>k__BackingField;
    public static TableGeoReplicationStatus Live { get; }
    public static TableGeoReplicationStatus Bootstrap { get; }
    public static TableGeoReplicationStatus Unavailable { get; }
    public TableGeoReplicationStatus(string value);
    private static TableGeoReplicationStatus();
    [CompilerGeneratedAttribute]
public static TableGeoReplicationStatus get_Live();
    [CompilerGeneratedAttribute]
public static TableGeoReplicationStatus get_Bootstrap();
    [CompilerGeneratedAttribute]
public static TableGeoReplicationStatus get_Unavailable();
    public static bool op_Equality(TableGeoReplicationStatus left, TableGeoReplicationStatus right);
    public static bool op_Inequality(TableGeoReplicationStatus left, TableGeoReplicationStatus right);
    public static TableGeoReplicationStatus op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(TableGeoReplicationStatus other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[CodeGenModelAttribute("TableResponseProperties")]
public class Azure.Data.Tables.Models.TableItem : object {
    [CompilerGeneratedAttribute]
private string <OdataType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OdataId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OdataEditLink>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    internal string OdataType { get; }
    internal string OdataId { get; }
    internal string OdataEditLink { get; }
    [CodeGenMemberAttribute("TableName")]
public string Name { get; }
    internal TableItem(string name, string odataType, string odataId, string odataEditLink);
    public TableItem(string name);
    internal static TableItem DeserializeTableItem(JsonElement element);
    internal static TableItem FromResponse(Response response);
    [CompilerGeneratedAttribute]
internal string get_OdataType();
    [CompilerGeneratedAttribute]
internal string get_OdataId();
    [CompilerGeneratedAttribute]
internal string get_OdataEditLink();
    [CompilerGeneratedAttribute]
public string get_Name();
}
[CodeGenModelAttribute("Metrics")]
public class Azure.Data.Tables.Models.TableMetrics : object {
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private TableRetentionPolicy <RetentionPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeApis>k__BackingField;
    public string Version { get; public set; }
    public bool Enabled { get; public set; }
    public TableRetentionPolicy RetentionPolicy { get; public set; }
    [CodeGenMemberAttribute("IncludeAPIs")]
public Nullable`1<bool> IncludeApis { get; public set; }
    public TableMetrics(bool enabled);
    internal TableMetrics(string version, bool enabled, Nullable`1<bool> includeApis, TableRetentionPolicy retentionPolicy);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public TableRetentionPolicy get_RetentionPolicy();
    [CompilerGeneratedAttribute]
public void set_RetentionPolicy(TableRetentionPolicy value);
    private sealed virtual override void Azure.Core.IXmlSerializable.Write(XmlWriter writer, string nameHint);
    internal static TableMetrics DeserializeTableMetrics(XElement element);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IncludeApis();
    [CompilerGeneratedAttribute]
public void set_IncludeApis(Nullable`1<bool> value);
}
[CodeGenModelAttribute("DataTablesModelFactory")]
public static class Azure.Data.Tables.Models.TableModelFactory : object {
    public static TableServiceStatistics TableServiceStatistics(TableGeoReplicationInfo geoReplication);
    public static TableGeoReplicationInfo TableGeoReplicationInfo(TableGeoReplicationStatus status, DateTimeOffset lastSyncedOn);
    public static TableItem TableItem(string name, string odataType, string odataId, string odataEditLink);
}
internal class Azure.Data.Tables.Models.TableProperties : object {
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    public string TableName { get; public set; }
    internal TableProperties(string tableName);
    [CompilerGeneratedAttribute]
public string get_TableName();
    [CompilerGeneratedAttribute]
public void set_TableName(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal virtual RequestContent ToRequestContent();
}
internal class Azure.Data.Tables.Models.TableQueryResponse : object {
    [CompilerGeneratedAttribute]
private string <OdataMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<TableItem> <Value>k__BackingField;
    public string OdataMetadata { get; }
    public IReadOnlyList`1<TableItem> Value { get; }
    internal TableQueryResponse(string odataMetadata, IReadOnlyList`1<TableItem> value);
    [CompilerGeneratedAttribute]
public string get_OdataMetadata();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<TableItem> get_Value();
    internal static TableQueryResponse DeserializeTableQueryResponse(JsonElement element);
    internal static TableQueryResponse FromResponse(Response response);
}
internal class Azure.Data.Tables.Models.TableResponse : TableItem {
    [CompilerGeneratedAttribute]
private string <OdataMetadata>k__BackingField;
    public string OdataMetadata { get; }
    internal TableResponse(string name, string odataType, string odataId, string odataEditLink, string odataMetadata);
    [CompilerGeneratedAttribute]
public string get_OdataMetadata();
    internal static TableResponse DeserializeTableResponse(JsonElement element);
    internal static TableResponse FromResponse(Response response);
}
internal class Azure.Data.Tables.Models.TableServiceError : object {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public string Message { get; }
    internal TableServiceError(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    internal static TableServiceError DeserializeTableServiceError(XElement element);
    internal static TableServiceError DeserializeTableServiceError(JsonElement element);
    internal static TableServiceError FromResponse(Response response);
}
public class Azure.Data.Tables.Models.TableServiceProperties : object {
    [CompilerGeneratedAttribute]
private TableAnalyticsLoggingSettings <Logging>k__BackingField;
    [CompilerGeneratedAttribute]
private TableMetrics <HourMetrics>k__BackingField;
    [CompilerGeneratedAttribute]
private TableMetrics <MinuteMetrics>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<TableCorsRule> <Cors>k__BackingField;
    public TableAnalyticsLoggingSettings Logging { get; public set; }
    public TableMetrics HourMetrics { get; public set; }
    public TableMetrics MinuteMetrics { get; public set; }
    public IList`1<TableCorsRule> Cors { get; }
    internal TableServiceProperties(TableAnalyticsLoggingSettings logging, TableMetrics hourMetrics, TableMetrics minuteMetrics, IList`1<TableCorsRule> cors);
    [CompilerGeneratedAttribute]
public TableAnalyticsLoggingSettings get_Logging();
    [CompilerGeneratedAttribute]
public void set_Logging(TableAnalyticsLoggingSettings value);
    [CompilerGeneratedAttribute]
public TableMetrics get_HourMetrics();
    [CompilerGeneratedAttribute]
public void set_HourMetrics(TableMetrics value);
    [CompilerGeneratedAttribute]
public TableMetrics get_MinuteMetrics();
    [CompilerGeneratedAttribute]
public void set_MinuteMetrics(TableMetrics value);
    [CompilerGeneratedAttribute]
public IList`1<TableCorsRule> get_Cors();
    private sealed virtual override void Azure.Core.IXmlSerializable.Write(XmlWriter writer, string nameHint);
    internal static TableServiceProperties DeserializeTableServiceProperties(XElement element);
}
[CodeGenModelAttribute("TableServiceStats")]
public class Azure.Data.Tables.Models.TableServiceStatistics : object {
    [CompilerGeneratedAttribute]
private TableGeoReplicationInfo <GeoReplication>k__BackingField;
    public TableGeoReplicationInfo GeoReplication { get; }
    internal TableServiceStatistics(TableGeoReplicationInfo geoReplication);
    [CompilerGeneratedAttribute]
public TableGeoReplicationInfo get_GeoReplication();
    internal static TableServiceStatistics DeserializeTableServiceStatistics(XElement element);
}
[CodeGenModelAttribute("SignedIdentifier")]
public class Azure.Data.Tables.Models.TableSignedIdentifier : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private TableAccessPolicy <AccessPolicy>k__BackingField;
    public string Id { get; public set; }
    public TableAccessPolicy AccessPolicy { get; public set; }
    public TableSignedIdentifier(string id, TableAccessPolicy accessPolicy);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public TableAccessPolicy get_AccessPolicy();
    [CompilerGeneratedAttribute]
public void set_AccessPolicy(TableAccessPolicy value);
    private sealed virtual override void Azure.Core.IXmlSerializable.Write(XmlWriter writer, string nameHint);
    internal static TableSignedIdentifier DeserializeTableSignedIdentifier(XElement element);
}
public class Azure.Data.Tables.Models.TableTransactionResult : object {
    private IDictionary`2<string, HttpMessage> _requestLookup;
    public int ResponseCount { get; }
    internal TableTransactionResult(Dictionary`2<string, HttpMessage> requestLookup);
    public int get_ResponseCount();
    public Response GetResponseForEntity(string rowKey);
}
[ExtensionAttribute]
internal static class Azure.Data.Tables.ModelSerializationExtensions : object {
    internal static ModelReaderWriterOptions WireOptions;
    private static ModelSerializationExtensions();
    [ExtensionAttribute]
public static object GetObject(JsonElement element);
    [ExtensionAttribute]
public static Byte[] GetBytesFromBase64(JsonElement element, string format);
    [ExtensionAttribute]
public static DateTimeOffset GetDateTimeOffset(JsonElement element, string format);
    [ExtensionAttribute]
public static TimeSpan GetTimeSpan(JsonElement element, string format);
    [ExtensionAttribute]
public static char GetChar(JsonElement element);
    [ExtensionAttribute]
[ConditionalAttribute("DEBUG")]
public static void ThrowNonNullablePropertyIsNull(JsonProperty property);
    [ExtensionAttribute]
public static string GetRequiredString(JsonElement element);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, DateTime value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, TimeSpan value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, char value);
    [ExtensionAttribute]
public static void WriteBase64StringValue(Utf8JsonWriter writer, Byte[] value, string format);
    [ExtensionAttribute]
public static void WriteNumberValue(Utf8JsonWriter writer, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void WriteObjectValue(Utf8JsonWriter writer, T value);
    [ExtensionAttribute]
public static void WriteObjectValue(Utf8JsonWriter writer, object value);
}
[ExtensionAttribute]
internal static class Azure.Data.Tables.MultipartContentExtensions : object {
    private static string CteHeaderName;
    private static string Binary;
    private static string ApplicationHttp;
    [ExtensionAttribute]
internal static MultipartContent AddChangeset(MultipartContent batch, Guid changesetGuid);
    [ExtensionAttribute]
internal static void AddContent(MultipartContent changeset, RequestRequestContent content);
}
internal class Azure.Data.Tables.MultipartFormDataRequestContent : RequestContent {
    private MultipartFormDataContent _multipartContent;
    private static Random _random;
    private static Char[] _boundaryValues;
    public string ContentType { get; }
    internal HttpContent HttpContent { get; }
    private static MultipartFormDataRequestContent();
    public string get_ContentType();
    internal HttpContent get_HttpContent();
    private static string CreateBoundary();
    public void Add(string content, string name, string filename, string contentType);
    public void Add(int content, string name, string filename, string contentType);
    public void Add(long content, string name, string filename, string contentType);
    public void Add(float content, string name, string filename, string contentType);
    public void Add(double content, string name, string filename, string contentType);
    public void Add(decimal content, string name, string filename, string contentType);
    public void Add(bool content, string name, string filename, string contentType);
    public void Add(Stream content, string name, string filename, string contentType);
    public void Add(Byte[] content, string name, string filename, string contentType);
    public void Add(BinaryData content, string name, string filename, string contentType);
    private void Add(HttpContent content, string name, string filename, string contentType);
    public static void AddFilenameHeader(HttpContent content, string name, string filename);
    public static void AddContentTypeHeader(HttpContent content, string contentType);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void WriteTo(Stream stream, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.Tables.MultipartFormDataRequestContent/<WriteToAsync>d__24")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellationToken);
    public virtual void Dispose();
}
internal static class Azure.Data.Tables.Optional : object {
    public static bool IsCollectionDefined(IEnumerable`1<T> collection);
    public static bool IsCollectionDefined(IDictionary`2<TKey, TValue> collection);
    public static bool IsCollectionDefined(IReadOnlyDictionary`2<TKey, TValue> collection);
    public static bool IsDefined(Nullable`1<T> value);
    public static bool IsDefined(object value);
    public static bool IsDefined(JsonElement value);
    public static bool IsDefined(string value);
}
internal static class Azure.Data.Tables.Queryable.ClientConvert : object {
    private static Type[] s_knownTypes;
    private static ClientConvert();
    internal static bool IsBinaryValue(object value);
    internal static bool TryKeyBinaryToString(object binaryValue, String& result);
    internal static bool TryKeyPrimitiveToString(object value, String& result);
    private static Type[] CreateKnownPrimitives();
    private static int IndexOfStorage(Type type);
    internal static int IndexOfReference(T[] array, T value);
}
internal static class Azure.Data.Tables.Queryable.Evaluator : object {
    internal static Expression PartialEval(Expression expression, Func`2<Expression, bool> canBeEvaluated);
    internal static Expression PartialEval(Expression expression);
    private static bool CanBeEvaluatedLocally(Expression expression);
}
internal class Azure.Data.Tables.Queryable.ExpressionNormalizer : ExpressionVisitor {
    private static bool LiftToNull;
    private Dictionary`2<Expression, Pattern> _patterns;
    private bool _underEqualityOperation;
    [CompilerGeneratedAttribute]
private Dictionary`2<Expression, Expression> <NormalizerRewrites>k__BackingField;
    private static MethodInfo StaticRelationalOperatorPlaceholderMethod;
    internal Dictionary`2<Expression, Expression> NormalizerRewrites { get; }
    private ExpressionNormalizer(Dictionary`2<Expression, Expression> normalizerRewrites);
    private static ExpressionNormalizer();
    [CompilerGeneratedAttribute]
internal Dictionary`2<Expression, Expression> get_NormalizerRewrites();
    internal static Expression Normalize(Expression expression, Dictionary`2<Expression, Expression> rewrites);
    protected virtual Expression VisitBinary(BinaryExpression b);
    protected virtual Expression VisitMember(MemberExpression m);
    protected virtual Expression VisitUnary(UnaryExpression u);
    private bool IsImplicitBooleanComparison(Expression expression);
    private static BinaryExpression CreateExplicitBooleanComparison(Expression expression);
    private static Expression UnwrapObjectConvert(Expression input);
    private static bool IsConstantZero(Expression expression);
    protected virtual Expression VisitMethodCall(MethodCallExpression call);
    internal Expression VisitMethodCallNoRewrite(MethodCallExpression call);
    private static bool RelationalOperatorPlaceholder(TLeft left, TRight right);
    private static BinaryExpression CreateRelationalOperator(ExpressionType op, Expression left, Expression right);
    private static bool TryCreateRelationalOperator(ExpressionType op, Expression left, Expression right, BinaryExpression& result);
    private Expression CreateCompareExpression(Expression left, Expression right);
    private void RecordRewrite(Expression source, Expression rewritten);
}
internal class Azure.Data.Tables.Queryable.ExpressionParser : ExpressionVisitor {
    [CompilerGeneratedAttribute]
private string <FilterString>k__BackingField;
    public string FilterString { get; public set; }
    [CompilerGeneratedAttribute]
public string get_FilterString();
    [CompilerGeneratedAttribute]
public void set_FilterString(string value);
    internal void Translate(Expression e);
    protected virtual Expression VisitLambda(Expression`1<T> node);
}
internal class Azure.Data.Tables.Queryable.ExpressionWriter : ExpressionVisitor {
    internal StringBuilder _builder;
    private Stack`1<Expression> _expressionStack;
    private bool _cantTranslateExpression;
    internal static string ExpressionToString(Expression e);
    internal string ConvertExpressionToString(Expression e);
    public virtual Expression Visit(Expression exp);
    protected virtual Expression VisitMethodCall(MethodCallExpression m);
    protected virtual Expression VisitMember(MemberExpression m);
    protected virtual Expression VisitConstant(ConstantExpression c);
    protected virtual Expression VisitUnary(UnaryExpression u);
    protected virtual Expression VisitBinary(BinaryExpression b);
    protected virtual Expression VisitParameter(ParameterExpression p);
    private static bool IsInputReference(Expression exp);
    private void VisitOperand(Expression e);
    private string Translate(Expression e);
    protected virtual string TranslateMemberName(MemberInfo memberInfo);
    protected virtual string TranslateOperator(ExpressionType type);
}
internal class Azure.Data.Tables.Queryable.ReferenceEqualityComparer : object {
    private sealed virtual override bool System.Collections.IEqualityComparer.Equals(object x, object y);
    private sealed virtual override int System.Collections.IEqualityComparer.GetHashCode(object obj);
}
internal class Azure.Data.Tables.Queryable.ReferenceEqualityComparer`1 : ReferenceEqualityComparer {
    private static ReferenceEqualityComparer`1<T> s_instance;
    internal static ReferenceEqualityComparer`1<T> Instance { get; }
    internal static ReferenceEqualityComparer`1<T> get_Instance();
    public sealed virtual bool Equals(T x, T y);
    public sealed virtual int GetHashCode(T obj);
}
internal static class Azure.Data.Tables.Queryable.ReflectionUtil : object {
    [CompilerGeneratedAttribute]
private static MethodInfo <DictionaryGetItemMethodInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private static MethodInfo <DynamicDictionaryGetItemMethodInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private static MethodInfo <DynamicDictionaryGetBinaryMethodInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private static MethodInfo <DynamicDictionaryGetBinaryDataMethodInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private static MethodInfo <DynamicDictionaryGetBooleanMethodInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private static MethodInfo <DynamicDictionaryGetDateTimeMethodInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private static MethodInfo <DynamicDictionaryGetDoubleMethodInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private static MethodInfo <DynamicDictionaryGetGuidMethodInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private static MethodInfo <DynamicDictionaryGetInt32MethodInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private static MethodInfo <DynamicDictionaryGetInt64MethodInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private static MethodInfo <DynamicDictionaryGetString64MethodInfo>k__BackingField;
    internal static HashSet`1<MethodInfo> s_dictionaryMethodInfosHash;
    private static MethodInfo DictionaryGetItemMethodInfo { get; }
    private static MethodInfo DynamicDictionaryGetItemMethodInfo { get; }
    private static MethodInfo DynamicDictionaryGetBinaryMethodInfo { get; }
    private static MethodInfo DynamicDictionaryGetBinaryDataMethodInfo { get; }
    private static MethodInfo DynamicDictionaryGetBooleanMethodInfo { get; }
    private static MethodInfo DynamicDictionaryGetDateTimeMethodInfo { get; }
    private static MethodInfo DynamicDictionaryGetDoubleMethodInfo { get; }
    private static MethodInfo DynamicDictionaryGetGuidMethodInfo { get; }
    private static MethodInfo DynamicDictionaryGetInt32MethodInfo { get; }
    private static MethodInfo DynamicDictionaryGetInt64MethodInfo { get; }
    private static MethodInfo DynamicDictionaryGetString64MethodInfo { get; }
    private static ReflectionUtil();
    [CompilerGeneratedAttribute]
private static MethodInfo get_DictionaryGetItemMethodInfo();
    [CompilerGeneratedAttribute]
private static MethodInfo get_DynamicDictionaryGetItemMethodInfo();
    [CompilerGeneratedAttribute]
private static MethodInfo get_DynamicDictionaryGetBinaryMethodInfo();
    [CompilerGeneratedAttribute]
private static MethodInfo get_DynamicDictionaryGetBinaryDataMethodInfo();
    [CompilerGeneratedAttribute]
private static MethodInfo get_DynamicDictionaryGetBooleanMethodInfo();
    [CompilerGeneratedAttribute]
private static MethodInfo get_DynamicDictionaryGetDateTimeMethodInfo();
    [CompilerGeneratedAttribute]
private static MethodInfo get_DynamicDictionaryGetDoubleMethodInfo();
    [CompilerGeneratedAttribute]
private static MethodInfo get_DynamicDictionaryGetGuidMethodInfo();
    [CompilerGeneratedAttribute]
private static MethodInfo get_DynamicDictionaryGetInt32MethodInfo();
    [CompilerGeneratedAttribute]
private static MethodInfo get_DynamicDictionaryGetInt64MethodInfo();
    [CompilerGeneratedAttribute]
private static MethodInfo get_DynamicDictionaryGetString64MethodInfo();
}
internal enum Azure.Data.Tables.Queryable.ResourceExpressionType : Enum {
    public int value__;
    public static ResourceExpressionType RootResourceSet;
}
internal class Azure.Data.Tables.Queryable.SR : object {
    public static string TableQueryTypeMustHaveDefaultParameterlessCtor;
    public static string ALinqCouldNotConvert;
    public static string ALinqCantCastToUnsupportedPrimitive;
    public static string ALinqCantTranslateExpression;
    public static string ALinqCantReferToPublicField;
    public static string IQueryableExtensionObjectMustBeTableQuery;
}
internal static class Azure.Data.Tables.Queryable.UriHelper : object {
    internal static char FORWARDSLASH;
    internal static char LEFTPAREN;
    internal static char RIGHTPAREN;
    internal static char SPACE;
    internal static string AND;
    internal static string OR;
    internal static string EQ;
    internal static string NE;
    internal static string LT;
    internal static string LE;
    internal static string GT;
    internal static string GE;
    internal static string ADD;
    internal static string SUB;
    internal static string MUL;
    internal static string DIV;
    internal static string MOD;
    internal static string NEGATE;
    internal static string NOT;
    internal static string NULL;
}
internal static class Azure.Data.Tables.Queryable.WebConvert : object {
    private static string HexValues;
    internal static string ConvertByteArrayToKeyString(Byte[] byteArray);
    internal static bool IsKeyTypeQuoted(Type type);
    internal static bool TryKeyPrimitiveToString(object value, String& result);
    internal static bool TryXmlPrimitiveToString(object value, String& result);
    private static string AppendDecimalMarkerToDouble(string input);
}
internal static class Azure.Data.Tables.Queryable.XmlConstants : object {
    internal static string MimeApplicationXml;
    internal static string DataServiceVersion3Dot0;
    internal static string DataServiceVersionCurrent;
    internal static string LiteralPrefixDateTime;
    internal static string LiteralPrefixGuid;
    internal static char XmlBinaryPrefix;
    internal static string XmlDecimalLiteralSuffix;
    internal static string XmlInt64LiteralSuffix;
    internal static string XmlSingleLiteralSuffix;
    internal static string TableItemServicePropertyName;
    internal static string TableItemClientPropertyName;
}
internal static class Azure.Data.Tables.RequestContentHelper : object {
    public static RequestContent FromEnumerable(IEnumerable`1<T> enumerable);
    public static RequestContent FromEnumerable(IEnumerable`1<BinaryData> enumerable);
    public static RequestContent FromEnumerable(ReadOnlySpan`1<T> span);
    public static RequestContent FromDictionary(IDictionary`2<string, TValue> dictionary);
    public static RequestContent FromDictionary(IDictionary`2<string, BinaryData> dictionary);
    public static RequestContent FromObject(object value);
    public static RequestContent FromObject(BinaryData value);
}
internal class Azure.Data.Tables.RequestRequestContent : RequestContent {
    private static string SP;
    private static string ColonSP;
    private static string CRLF;
    private static int DefaultHeaderAllocation;
    private Request _request;
    public RequestRequestContent(Request request);
    public virtual void Dispose();
    [AsyncStateMachineAttribute("Azure.Data.Tables.RequestRequestContent/<WriteToAsync>d__7")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellationToken);
    public virtual void WriteTo(Stream stream, CancellationToken cancellationToken);
    public virtual bool TryComputeLength(Int64& length);
    private Byte[] SerializeHeader();
    private static void SerializeRequestLine(StringBuilder message, Request request);
    private static void SerializeHeaderFields(StringBuilder message, RequestHeaders headers);
}
public class Azure.Data.Tables.Sas.TableAccountSasBuilder : object {
    [CompilerGeneratedAttribute]
private TableSasProtocol <Protocol>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <StartsOn>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <ExpiresOn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Permissions>k__BackingField;
    [CompilerGeneratedAttribute]
private TableSasIPRange <IPRange>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Identifier>k__BackingField;
    [CompilerGeneratedAttribute]
private TableAccountSasResourceTypes <ResourceTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    public TableSasProtocol Protocol { get; public set; }
    public DateTimeOffset StartsOn { get; public set; }
    public DateTimeOffset ExpiresOn { get; public set; }
    public string Permissions { get; private set; }
    public TableSasIPRange IPRange { get; public set; }
    public string Identifier { get; public set; }
    public TableAccountSasResourceTypes ResourceTypes { get; public set; }
    internal string Version { get; internal set; }
    public TableAccountSasBuilder(TableAccountSasPermissions permissions, TableAccountSasResourceTypes resourceTypes, DateTimeOffset expiresOn);
    public TableAccountSasBuilder(string rawPermissions, TableAccountSasResourceTypes resourceTypes, DateTimeOffset expiresOn);
    public TableAccountSasBuilder(Uri sasUri);
    [CompilerGeneratedAttribute]
public TableSasProtocol get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(TableSasProtocol value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_StartsOn();
    [CompilerGeneratedAttribute]
public void set_StartsOn(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_ExpiresOn();
    [CompilerGeneratedAttribute]
public void set_ExpiresOn(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public string get_Permissions();
    [CompilerGeneratedAttribute]
private void set_Permissions(string value);
    [CompilerGeneratedAttribute]
public TableSasIPRange get_IPRange();
    [CompilerGeneratedAttribute]
public void set_IPRange(TableSasIPRange value);
    [CompilerGeneratedAttribute]
public string get_Identifier();
    [CompilerGeneratedAttribute]
public void set_Identifier(string value);
    [CompilerGeneratedAttribute]
public TableAccountSasResourceTypes get_ResourceTypes();
    [CompilerGeneratedAttribute]
public void set_ResourceTypes(TableAccountSasResourceTypes value);
    [CompilerGeneratedAttribute]
internal string get_Version();
    [CompilerGeneratedAttribute]
internal void set_Version(string value);
    public void SetPermissions(TableAccountSasPermissions permissions);
    public void SetPermissions(string rawPermissions);
    [CallerShouldAuditAttribute("https://aka.ms/azsdk/callershouldaudit/data-tables")]
public TableAccountSasQueryParameters ToSasQueryParameters(TableSharedKeyCredential sharedKeyCredential);
    [CallerShouldAuditAttribute("https://aka.ms/azsdk/callershouldaudit/data-tables")]
public string Sign(TableSharedKeyCredential sharedKeyCredential);
    [EditorBrowsableAttribute("1")]
public virtual string ToString();
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    private void EnsureState();
}
[FlagsAttribute]
public enum Azure.Data.Tables.Sas.TableAccountSasPermissions : Enum {
    public int value__;
    public static TableAccountSasPermissions Read;
    public static TableAccountSasPermissions Write;
    public static TableAccountSasPermissions Delete;
    public static TableAccountSasPermissions List;
    public static TableAccountSasPermissions Add;
    public static TableAccountSasPermissions Update;
    public static TableAccountSasPermissions All;
}
public class Azure.Data.Tables.Sas.TableAccountSasQueryParameters : object {
    private string _version;
    private Nullable`1<TableAccountSasResourceTypes> _resourceTypes;
    private TableSasProtocol _protocol;
    private DateTimeOffset _startTime;
    private string _startTimeString;
    private DateTimeOffset _expiryTime;
    private string _expiryTimeString;
    private TableSasIPRange _ipRange;
    private string _identifier;
    private string _resource;
    private string _permissions;
    private string _signature;
    internal static string DefaultSasVersion;
    private static String[] s_sasTimeFormats;
    public string Version { get; }
    public Nullable`1<TableAccountSasResourceTypes> ResourceTypes { get; }
    public TableSasProtocol Protocol { get; }
    public DateTimeOffset StartsOn { get; }
    internal string StartsOnString { get; }
    public DateTimeOffset ExpiresOn { get; }
    internal string ExpiresOnString { get; }
    public TableSasIPRange IPRange { get; }
    public string Identifier { get; }
    public string Resource { get; }
    public string Permissions { get; }
    public string Signature { get; }
    internal TableAccountSasQueryParameters(string version, Nullable`1<TableAccountSasResourceTypes> resourceTypes, TableSasProtocol protocol, DateTimeOffset startsOn, DateTimeOffset expiresOn, TableSasIPRange ipRange, string identifier, string resource, string permissions, string signature);
    internal TableAccountSasQueryParameters(IDictionary`2<string, string> values);
    private static TableAccountSasQueryParameters();
    public string get_Version();
    public Nullable`1<TableAccountSasResourceTypes> get_ResourceTypes();
    public TableSasProtocol get_Protocol();
    public DateTimeOffset get_StartsOn();
    internal string get_StartsOnString();
    public DateTimeOffset get_ExpiresOn();
    internal string get_ExpiresOnString();
    public TableSasIPRange get_IPRange();
    public string get_Identifier();
    public string get_Resource();
    public string get_Permissions();
    public string get_Signature();
    public virtual string ToString();
    private static DateTimeOffset ParseSasTime(string dateTimeString);
}
[FlagsAttribute]
public enum Azure.Data.Tables.Sas.TableAccountSasResourceTypes : Enum {
    public int value__;
    public static TableAccountSasResourceTypes Service;
    public static TableAccountSasResourceTypes Container;
    public static TableAccountSasResourceTypes Object;
    public static TableAccountSasResourceTypes All;
}
public class Azure.Data.Tables.Sas.TableSasBuilder : object {
    [CompilerGeneratedAttribute]
private TableSasProtocol <Protocol>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <StartsOn>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <ExpiresOn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Permissions>k__BackingField;
    [CompilerGeneratedAttribute]
private TableSasIPRange <IPRange>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Identifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PartitionKeyStart>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RowKeyStart>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PartitionKeyEnd>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RowKeyEnd>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    public TableSasProtocol Protocol { get; public set; }
    public DateTimeOffset StartsOn { get; public set; }
    public DateTimeOffset ExpiresOn { get; public set; }
    public string Permissions { get; private set; }
    public TableSasIPRange IPRange { get; public set; }
    public string Identifier { get; public set; }
    public string TableName { get; public set; }
    public string PartitionKeyStart { get; public set; }
    public string RowKeyStart { get; public set; }
    public string PartitionKeyEnd { get; public set; }
    public string RowKeyEnd { get; public set; }
    internal string Version { get; internal set; }
    public TableSasBuilder(string tableName, TableSasPermissions permissions, DateTimeOffset expiresOn);
    public TableSasBuilder(string tableName, string rawPermissions, DateTimeOffset expiresOn);
    public TableSasBuilder(Uri sasUri);
    [CompilerGeneratedAttribute]
public TableSasProtocol get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(TableSasProtocol value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_StartsOn();
    [CompilerGeneratedAttribute]
public void set_StartsOn(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_ExpiresOn();
    [CompilerGeneratedAttribute]
public void set_ExpiresOn(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public string get_Permissions();
    [CompilerGeneratedAttribute]
private void set_Permissions(string value);
    [CompilerGeneratedAttribute]
public TableSasIPRange get_IPRange();
    [CompilerGeneratedAttribute]
public void set_IPRange(TableSasIPRange value);
    [CompilerGeneratedAttribute]
public string get_Identifier();
    [CompilerGeneratedAttribute]
public void set_Identifier(string value);
    [CompilerGeneratedAttribute]
public string get_TableName();
    [CompilerGeneratedAttribute]
public void set_TableName(string value);
    [CompilerGeneratedAttribute]
public string get_PartitionKeyStart();
    [CompilerGeneratedAttribute]
public void set_PartitionKeyStart(string value);
    [CompilerGeneratedAttribute]
public string get_RowKeyStart();
    [CompilerGeneratedAttribute]
public void set_RowKeyStart(string value);
    [CompilerGeneratedAttribute]
public string get_PartitionKeyEnd();
    [CompilerGeneratedAttribute]
public void set_PartitionKeyEnd(string value);
    [CompilerGeneratedAttribute]
public string get_RowKeyEnd();
    [CompilerGeneratedAttribute]
public void set_RowKeyEnd(string value);
    [CompilerGeneratedAttribute]
internal string get_Version();
    [CompilerGeneratedAttribute]
internal void set_Version(string value);
    public void SetPermissions(TableSasPermissions permissions);
    public void SetPermissions(string rawPermissions);
    [CallerShouldAuditAttribute("https://aka.ms/azsdk/callershouldaudit/data-tables")]
public TableSasQueryParameters ToSasQueryParameters(TableSharedKeyCredential sharedKeyCredential);
    [CallerShouldAuditAttribute("https://aka.ms/azsdk/callershouldaudit/data-tables")]
public string Sign(TableSharedKeyCredential sharedKeyCredential);
    private static string GetCanonicalName(string account, string tableName);
    [EditorBrowsableAttribute("1")]
public virtual string ToString();
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    private void EnsureState();
}
[ExtensionAttribute]
internal static class Azure.Data.Tables.Sas.TableSasExtensions : object {
    private static string NoneName;
    private static string HttpsName;
    private static string HttpsAndHttpName;
    [ExtensionAttribute]
internal static string ToProtocolString(TableSasProtocol protocol);
    public static TableSasProtocol ParseProtocol(string s);
    internal static TableAccountSasResourceTypes ParseResourceTypes(string s);
    internal static string FormatTimesForSasSigning(DateTimeOffset time);
    internal static void AddToBuilder(StringBuilder sb, string key, string value);
    [ExtensionAttribute]
internal static void AppendProperties(TableAccountSasQueryParameters parameters, StringBuilder stringBuilder);
    [ExtensionAttribute]
internal static void AppendQueryParameter(StringBuilder sb, string key, string value);
}
[IsReadOnlyAttribute]
public class Azure.Data.Tables.Sas.TableSasIPRange : ValueType {
    [CompilerGeneratedAttribute]
private IPAddress <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private IPAddress <End>k__BackingField;
    public IPAddress Start { get; }
    public IPAddress End { get; }
    public TableSasIPRange(IPAddress start, IPAddress end);
    [CompilerGeneratedAttribute]
public IPAddress get_Start();
    [CompilerGeneratedAttribute]
public IPAddress get_End();
    private static bool IsEmpty(IPAddress address);
    public virtual string ToString();
    public static TableSasIPRange Parse(string s);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public static bool op_Equality(TableSasIPRange left, TableSasIPRange right);
    public static bool op_Inequality(TableSasIPRange left, TableSasIPRange right);
    public sealed virtual bool Equals(TableSasIPRange other);
}
[FlagsAttribute]
public enum Azure.Data.Tables.Sas.TableSasPermissions : Enum {
    public int value__;
    public static TableSasPermissions Read;
    public static TableSasPermissions Add;
    public static TableSasPermissions Update;
    public static TableSasPermissions Delete;
    public static TableSasPermissions All;
}
public enum Azure.Data.Tables.Sas.TableSasProtocol : Enum {
    public int value__;
    public static TableSasProtocol None;
    public static TableSasProtocol HttpsAndHttp;
    public static TableSasProtocol Https;
}
public class Azure.Data.Tables.Sas.TableSasQueryParameters : TableAccountSasQueryParameters {
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StartPartitionKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StartRowKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EndPartitionKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EndRowKey>k__BackingField;
    internal string TableName { get; internal set; }
    public string StartPartitionKey { get; public set; }
    public string StartRowKey { get; public set; }
    public string EndPartitionKey { get; public set; }
    public string EndRowKey { get; public set; }
    public static TableSasQueryParameters Empty { get; }
    internal TableSasQueryParameters(string version, Nullable`1<TableAccountSasResourceTypes> resourceTypes, string tableName, string partitionKeyStart, string rowKeyStart, string partitionKeyEnd, string rowKeyEnd, TableSasProtocol protocol, DateTimeOffset startsOn, DateTimeOffset expiresOn, TableSasIPRange ipRange, string identifier, string resource, string permissions, string signature);
    internal TableSasQueryParameters(IDictionary`2<string, string> values);
    [CompilerGeneratedAttribute]
internal string get_TableName();
    [CompilerGeneratedAttribute]
internal void set_TableName(string value);
    [CompilerGeneratedAttribute]
public string get_StartPartitionKey();
    [CompilerGeneratedAttribute]
public void set_StartPartitionKey(string value);
    [CompilerGeneratedAttribute]
public string get_StartRowKey();
    [CompilerGeneratedAttribute]
public void set_StartRowKey(string value);
    [CompilerGeneratedAttribute]
public string get_EndPartitionKey();
    [CompilerGeneratedAttribute]
public void set_EndPartitionKey(string value);
    [CompilerGeneratedAttribute]
public string get_EndRowKey();
    [CompilerGeneratedAttribute]
public void set_EndRowKey(string value);
    public static TableSasQueryParameters get_Empty();
    public virtual string ToString();
}
internal static class Azure.Data.Tables.SerializationHelpers : object {
    internal static Dictionary`2<string, object> ResponseToDictionary(Response response);
}
internal class Azure.Data.Tables.ServiceClient : object {
}
internal class Azure.Data.Tables.ServiceGetPropertiesHeaders : object {
    private Response _response;
    public string Version { get; }
    public ServiceGetPropertiesHeaders(Response response);
    public string get_Version();
}
internal class Azure.Data.Tables.ServiceGetStatisticsHeaders : object {
    private Response _response;
    public string Version { get; }
    public ServiceGetStatisticsHeaders(Response response);
    public string get_Version();
}
internal class Azure.Data.Tables.ServiceRestClient : object {
    private HttpPipeline _pipeline;
    private string _url;
    private string _version;
    [CompilerGeneratedAttribute]
private ClientDiagnostics <ClientDiagnostics>k__BackingField;
    internal ClientDiagnostics ClientDiagnostics { get; }
    public ServiceRestClient(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string url, string version);
    [CompilerGeneratedAttribute]
internal ClientDiagnostics get_ClientDiagnostics();
    internal HttpMessage CreateSetPropertiesRequest(TableServiceProperties tableServiceProperties, Nullable`1<int> timeout);
    [AsyncStateMachineAttribute("Azure.Data.Tables.ServiceRestClient/<SetPropertiesAsync>d__8")]
public Task`1<ResponseWithHeaders`1<ServiceSetPropertiesHeaders>> SetPropertiesAsync(TableServiceProperties tableServiceProperties, Nullable`1<int> timeout, CancellationToken cancellationToken);
    public ResponseWithHeaders`1<ServiceSetPropertiesHeaders> SetProperties(TableServiceProperties tableServiceProperties, Nullable`1<int> timeout, CancellationToken cancellationToken);
    internal HttpMessage CreateGetPropertiesRequest(Nullable`1<int> timeout);
    [AsyncStateMachineAttribute("Azure.Data.Tables.ServiceRestClient/<GetPropertiesAsync>d__11")]
public Task`1<ResponseWithHeaders`2<TableServiceProperties, ServiceGetPropertiesHeaders>> GetPropertiesAsync(Nullable`1<int> timeout, CancellationToken cancellationToken);
    public ResponseWithHeaders`2<TableServiceProperties, ServiceGetPropertiesHeaders> GetProperties(Nullable`1<int> timeout, CancellationToken cancellationToken);
    internal HttpMessage CreateGetStatisticsRequest(Nullable`1<int> timeout);
    [AsyncStateMachineAttribute("Azure.Data.Tables.ServiceRestClient/<GetStatisticsAsync>d__14")]
public Task`1<ResponseWithHeaders`2<TableServiceStatistics, ServiceGetStatisticsHeaders>> GetStatisticsAsync(Nullable`1<int> timeout, CancellationToken cancellationToken);
    public ResponseWithHeaders`2<TableServiceStatistics, ServiceGetStatisticsHeaders> GetStatistics(Nullable`1<int> timeout, CancellationToken cancellationToken);
}
internal class Azure.Data.Tables.ServiceSetPropertiesHeaders : object {
    private Response _response;
    public string Version { get; }
    public ServiceSetPropertiesHeaders(Response response);
    public string get_Version();
}
[ExtensionAttribute]
internal static class Azure.Data.Tables.StringTableExtensions : object {
    [ExtensionAttribute]
internal static string ToOdataTypeString(string name);
}
internal class Azure.Data.Tables.TableBearerTokenChallengeAuthorizationPolicy : BearerTokenAuthenticationPolicy {
    private String[] modreq(System.Runtime.CompilerServices.IsVolatile) _scopes;
    private String modreq(System.Runtime.CompilerServices.IsVolatile) _tenantId;
    private bool _enableTenantDiscovery;
    public TableBearerTokenChallengeAuthorizationPolicy(TokenCredential credential, string scope, bool enableTenantDiscovery);
    protected virtual void AuthorizeRequest(HttpMessage message);
    protected virtual ValueTask AuthorizeRequestAsync(HttpMessage message);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableBearerTokenChallengeAuthorizationPolicy/<AuthorizeRequestInternal>d__6")]
private ValueTask AuthorizeRequestInternal(HttpMessage message, bool async);
    protected virtual bool AuthorizeRequestOnChallenge(HttpMessage message);
    protected virtual ValueTask`1<bool> AuthorizeRequestOnChallengeAsync(HttpMessage message);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableBearerTokenChallengeAuthorizationPolicy/<AuthorizeRequestOnChallengeInternalAsync>d__9")]
private ValueTask`1<bool> AuthorizeRequestOnChallengeInternalAsync(HttpMessage message, bool async);
}
public class Azure.Data.Tables.TableClient : object {
    private static Char[] ContinuationTokenSplit;
    private ClientDiagnostics _diagnostics;
    private TableRestClient _tableOperations;
    private TableRestClient _batchOperations;
    private string _version;
    private bool _isCosmosEndpoint;
    private ResponseFormat _returnNoContent;
    private QueryOptions _defaultQueryOptions;
    private string _accountName;
    private Uri _endpoint;
    private Nullable`1<Guid> _batchGuid;
    private Nullable`1<Guid> _changesetGuid;
    private HttpPipeline _pipeline;
    private TableSharedKeyCredential _tableSharedKeyCredential;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    internal TableSharedKeyCredential SharedKeyCredential { get; }
    public string Name { get; }
    public string AccountName { get; }
    public Uri Uri { get; }
    public TableClient(Uri endpoint, TableClientOptions options);
    public TableClient(Uri endpoint, AzureSasCredential credential, TableClientOptions options);
    public TableClient(Uri endpoint, string tableName, TableSharedKeyCredential credential);
    public TableClient(Uri endpoint, string tableName, TableSharedKeyCredential credential, TableClientOptions options);
    public TableClient(string connectionString, string tableName);
    public TableClient(string connectionString, string tableName, TableClientOptions options);
    public TableClient(Uri endpoint, string tableName, TokenCredential tokenCredential, TableClientOptions options);
    internal TableClient(Uri endpoint, string tableName, TableSharedKeyPipelinePolicy policy, AzureSasCredential sasCredential, TableClientOptions options);
    internal TableClient(string table, string accountName, TableRestClient tableOperations, string version, ClientDiagnostics diagnostics, bool isPremiumEndpoint, Uri endpoint, HttpPipeline pipeline, TableSharedKeyCredential credential);
    private static TableClient();
    internal virtual TableSharedKeyCredential get_SharedKeyCredential();
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    public virtual string get_AccountName();
    [CompilerGeneratedAttribute]
public virtual Uri get_Uri();
    public virtual TableSasBuilder GetSasBuilder(TableSasPermissions permissions, DateTimeOffset expiresOn);
    public virtual TableSasBuilder GetSasBuilder(string rawPermissions, DateTimeOffset expiresOn);
    public virtual Response`1<TableItem> Create(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableClient/<CreateAsync>d__37")]
public virtual Task`1<Response`1<TableItem>> CreateAsync(CancellationToken cancellationToken);
    public virtual Response`1<TableItem> CreateIfNotExists(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableClient/<CreateIfNotExistsAsync>d__39")]
public virtual Task`1<Response`1<TableItem>> CreateIfNotExistsAsync(CancellationToken cancellationToken);
    public virtual Response Delete(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableClient/<DeleteAsync>d__41")]
public virtual Task`1<Response> DeleteAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableClient/<AddEntityAsync>d__42`1")]
public virtual Task`1<Response> AddEntityAsync(T entity, CancellationToken cancellationToken);
    public virtual Response AddEntity(T entity, CancellationToken cancellationToken);
    public virtual Response`1<T> GetEntity(string partitionKey, string rowKey, IEnumerable`1<string> select, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableClient/<GetEntityAsync>d__45`1")]
public virtual Task`1<Response`1<T>> GetEntityAsync(string partitionKey, string rowKey, IEnumerable`1<string> select, CancellationToken cancellationToken);
    public virtual NullableResponse`1<T> GetEntityIfExists(string partitionKey, string rowKey, IEnumerable`1<string> select, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableClient/<GetEntityIfExistsAsync>d__47`1")]
public virtual Task`1<NullableResponse`1<T>> GetEntityIfExistsAsync(string partitionKey, string rowKey, IEnumerable`1<string> select, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableClient/<GetEntityInternalAsync>d__48`1")]
internal virtual Task`1<NullableResponse`1<T>> GetEntityInternalAsync(bool async, string partitionKey, string rowKey, bool noThrow, IEnumerable`1<string> select, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableClient/<UpsertEntityAsync>d__49`1")]
public virtual Task`1<Response> UpsertEntityAsync(T entity, TableUpdateMode mode, CancellationToken cancellationToken);
    public virtual Response UpsertEntity(T entity, TableUpdateMode mode, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableClient/<UpdateEntityAsync>d__51`1")]
public virtual Task`1<Response> UpdateEntityAsync(T entity, ETag ifMatch, TableUpdateMode mode, CancellationToken cancellationToken);
    public virtual Response UpdateEntity(T entity, ETag ifMatch, TableUpdateMode mode, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<T> QueryAsync(Expression`1<Func`2<T, bool>> filter, Nullable`1<int> maxPerPage, IEnumerable`1<string> select, CancellationToken cancellationToken);
    public virtual Pageable`1<T> Query(Expression`1<Func`2<T, bool>> filter, Nullable`1<int> maxPerPage, IEnumerable`1<string> select, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<T> QueryAsync(string filter, Nullable`1<int> maxPerPage, IEnumerable`1<string> select, CancellationToken cancellationToken);
    public virtual Pageable`1<T> Query(string filter, Nullable`1<int> maxPerPage, IEnumerable`1<string> select, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableClient/<DeleteEntityAsync>d__57")]
public virtual Task`1<Response> DeleteEntityAsync(string partitionKey, string rowKey, ETag ifMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableClient/<DeleteEntityAsync>d__58")]
public virtual Task`1<Response> DeleteEntityAsync(ITableEntity entity, ETag ifMatch, CancellationToken cancellationToken);
    public virtual Response DeleteEntity(string partitionKey, string rowKey, ETag ifMatch, CancellationToken cancellationToken);
    public virtual Response DeleteEntity(ITableEntity entity, ETag ifMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableClient/<DeleteEntityInternal>d__61")]
internal Task`1<Response> DeleteEntityInternal(bool async, string partitionKey, string rowKey, ETag ifMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableClient/<GetAccessPoliciesAsync>d__62")]
public virtual Task`1<Response`1<IReadOnlyList`1<TableSignedIdentifier>>> GetAccessPoliciesAsync(CancellationToken cancellationToken);
    public virtual Response`1<IReadOnlyList`1<TableSignedIdentifier>> GetAccessPolicies(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableClient/<SetAccessPolicyAsync>d__64")]
[CallerShouldAuditAttribute("https://aka.ms/azsdk/callershouldaudit/data-tables")]
public virtual Task`1<Response> SetAccessPolicyAsync(IEnumerable`1<TableSignedIdentifier> tableAcl, CancellationToken cancellationToken);
    [CallerShouldAuditAttribute("https://aka.ms/azsdk/callershouldaudit/data-tables")]
public virtual Response SetAccessPolicy(IEnumerable`1<TableSignedIdentifier> tableAcl, CancellationToken cancellationToken);
    public static string CreateQueryFilter(Expression`1<Func`2<T, bool>> filter);
    public static string CreateQueryFilter(FormattableString filter);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableClient/<SubmitTransactionAsync>d__68")]
public virtual Task`1<Response`1<IReadOnlyList`1<Response>>> SubmitTransactionAsync(IEnumerable`1<TableTransactionAction> transactionActions, CancellationToken cancellationToken);
    public virtual Response`1<IReadOnlyList`1<Response>> SubmitTransaction(IEnumerable`1<TableTransactionAction> transactionActions, CancellationToken cancellationToken);
    [CallerShouldAuditAttribute("https://aka.ms/azsdk/callershouldaudit/data-tables")]
public virtual Uri GenerateSasUri(TableSasPermissions permissions, DateTimeOffset expiresOn);
    [CallerShouldAuditAttribute("https://aka.ms/azsdk/callershouldaudit/data-tables")]
public virtual Uri GenerateSasUri(TableSasBuilder builder);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableClient/<SubmitTransactionInternalAsync>d__72")]
internal virtual Task`1<Response`1<IReadOnlyList`1<Response>>> SubmitTransactionInternalAsync(IEnumerable`1<TableTransactionAction> transactionalBatch, Guid batchId, Guid changesetId, bool async, CancellationToken cancellationToken);
    private MultipartContent BuildChangeSet(TableRestClient batchOperations, IEnumerator`1<TableTransactionAction> batchEnumerator, Dictionary`2<string, HttpMessage> requestLookup, Guid batchId, Guid changesetId);
    private HttpMessage CreateUpdateOrMergeRequest(TableRestClient batchOperations, ITableEntity entity, TableUpdateMode mode, ETag ifMatch);
    private static HttpPipeline CreateBatchPipeline();
    internal static string Bind(Expression expression);
    internal static string CreateContinuationTokenFromHeaders(TableQueryEntitiesHeaders headers);
    internal static ValueTuple`2<string, string> ParseContinuationToken(string continuationToken);
    internal virtual void SetBatchGuids(Guid batchGuid, Guid changesetGuid);
}
public class Azure.Data.Tables.TableClientOptions : ClientOptions {
    private static ServiceVersion Latest;
    [CompilerGeneratedAttribute]
private bool <EnableTenantDiscovery>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VersionString>k__BackingField;
    public bool EnableTenantDiscovery { get; public set; }
    internal string VersionString { get; }
    internal static TableClientOptions DefaultOptions { get; }
    public TableClientOptions(ServiceVersion serviceVersion);
    [CompilerGeneratedAttribute]
public bool get_EnableTenantDiscovery();
    [CompilerGeneratedAttribute]
public void set_EnableTenantDiscovery(bool value);
    [CompilerGeneratedAttribute]
internal string get_VersionString();
    internal static TableClientOptions get_DefaultOptions();
}
internal class Azure.Data.Tables.TableConnectionString : object {
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ValueTuple`2<Uri, Uri> <TableStorageUri>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Credentials>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DefaultEndpoints>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EndpointSuffix>k__BackingField;
    [CompilerGeneratedAttribute]
private ConnectionString <Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDevStoreAccount>k__BackingField;
    internal string _accountName;
    private static TableConnectionString s_devStoreAccount;
    private static string TableNameGroup;
    private static Regex s_tableUriTableNameRegex;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ValueTuple`2<Uri, Uri> TableStorageUri { get; public set; }
    public object Credentials { get; public set; }
    internal bool DefaultEndpoints { get; internal set; }
    internal string EndpointSuffix { get; internal set; }
    internal ConnectionString Settings { get; internal set; }
    internal bool IsDevStoreAccount { get; internal set; }
    public static TableConnectionString DevelopmentStorageAccount { get; }
    public TableConnectionString(object storageCredentials, ValueTuple`2<Uri, Uri> tableStorageUri);
    private static TableConnectionString();
    [CompilerGeneratedAttribute]
public ValueTuple`2<Uri, Uri> get_TableStorageUri();
    [CompilerGeneratedAttribute]
public void set_TableStorageUri(ValueTuple`2<Uri, Uri> value);
    [CompilerGeneratedAttribute]
public object get_Credentials();
    [CompilerGeneratedAttribute]
public void set_Credentials(object value);
    [CompilerGeneratedAttribute]
internal bool get_DefaultEndpoints();
    [CompilerGeneratedAttribute]
internal void set_DefaultEndpoints(bool value);
    [CompilerGeneratedAttribute]
internal string get_EndpointSuffix();
    [CompilerGeneratedAttribute]
internal void set_EndpointSuffix(string value);
    [CompilerGeneratedAttribute]
internal ConnectionString get_Settings();
    [CompilerGeneratedAttribute]
internal void set_Settings(ConnectionString value);
    [CompilerGeneratedAttribute]
internal bool get_IsDevStoreAccount();
    [CompilerGeneratedAttribute]
internal void set_IsDevStoreAccount(bool value);
    public static TableConnectionString get_DevelopmentStorageAccount();
    public static TableConnectionString Parse(string connectionString);
    public static bool TryParse(string connectionString, TableConnectionString& account);
    internal static bool ParseInternal(string connectionString, TableConnectionString& accountInformation, String& error);
    internal static string GetTableNameFromUri(Uri uri);
    internal static string GetAccountNameFromUri(Uri uri);
    internal static Uri GetSecondaryUriFromPrimary(Uri primaryUri, string accountName);
    private static TableConnectionString GetDevelopmentStorageAccount(Uri proxyUri);
    private static object GetCredentials(ConnectionString settings);
    private static ValueTuple`2<Uri, Uri> ConstructUris(string scheme, string accountName, string hostNamePrefix, string endpointSuffix, string sasToken);
    internal static ValueTuple`2<Uri, Uri> ConstructTableEndpoint(string scheme, string accountName, string endpointSuffix, string sasToken);
    private static ValueTuple`2<Uri, Uri> ConstructTableEndpoint(ConnectionString settings);
    [CompilerGeneratedAttribute]
internal static string <ParseInternal>g__settingOrDefault|31_0(string key, <>c__DisplayClass31_0& );
    [CompilerGeneratedAttribute]
internal static bool <ParseInternal>g__IsValidEndpointPair|31_1(string primary, string secondary);
    [CompilerGeneratedAttribute]
internal static ValueTuple`2<Uri, Uri> <ParseInternal>g__createStorageUri|31_2(string primary, string secondary, string sasToken, Func`2<ConnectionString, ValueTuple`2<Uri, Uri>> factory, <>c__DisplayClass31_0& );
    [CompilerGeneratedAttribute]
internal static Uri <ParseInternal>g__CreateUri|31_3(string endpoint, string sasToken);
}
internal static class Azure.Data.Tables.TableConstants : object {
    internal static string LegacyCosmosTableDomain;
    internal static string CosmosTableDomain;
    internal static string StorageScope;
    internal static string CosmosScope;
    internal static string ReturnNoContent;
}
internal class Azure.Data.Tables.TableCreateHeaders : object {
    private Response _response;
    public string Version { get; }
    public string PreferenceApplied { get; }
    public TableCreateHeaders(Response response);
    public string get_Version();
    public string get_PreferenceApplied();
}
internal class Azure.Data.Tables.TableDeleteEntityHeaders : object {
    private Response _response;
    public string Version { get; }
    public TableDeleteEntityHeaders(Response response);
    public string get_Version();
}
internal class Azure.Data.Tables.TableDeleteHeaders : object {
    private Response _response;
    public string Version { get; }
    public TableDeleteHeaders(Response response);
    public string get_Version();
}
[DefaultMemberAttribute("Item")]
public class Azure.Data.Tables.TableEntity : object {
    private IDictionary`2<string, object> _properties;
    public string PartitionKey { get; public set; }
    public string RowKey { get; public set; }
    public Nullable`1<DateTimeOffset> Timestamp { get; public set; }
    public ETag ETag { get; public set; }
    public object Item { get; public set; }
    public ICollection`1<string> Keys { get; }
    private ICollection`1<object> System.Collections.Generic.IDictionary<System.String,System.Object>.Values { get; }
    public int Count { get; }
    private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.IsReadOnly { get; }
    public TableEntity(string partitionKey, string rowKey);
    public TableEntity(IDictionary`2<string, object> values);
    public sealed virtual string get_PartitionKey();
    public sealed virtual void set_PartitionKey(string value);
    public sealed virtual string get_RowKey();
    public sealed virtual void set_RowKey(string value);
    public sealed virtual Nullable`1<DateTimeOffset> get_Timestamp();
    public sealed virtual void set_Timestamp(Nullable`1<DateTimeOffset> value);
    public sealed virtual ETag get_ETag();
    public sealed virtual void set_ETag(ETag value);
    public string GetString(string key);
    public BinaryData GetBinaryData(string key);
    public Byte[] GetBinary(string key);
    public Nullable`1<bool> GetBoolean(string key);
    public Nullable`1<DateTime> GetDateTime(string key);
    public Nullable`1<DateTimeOffset> GetDateTimeOffset(string key);
    public Nullable`1<double> GetDouble(string key);
    public Nullable`1<Guid> GetGuid(string key);
    public Nullable`1<int> GetInt32(string key);
    public Nullable`1<long> GetInt64(string key);
    private void SetValue(string key, object value);
    private T GetValue(string key);
    private object GetValue(string key, Type type);
    private static void EnforceType(Type requestedType, Type givenType);
    private static object CoerceType(object existingValue, object newValue);
    public sealed virtual object get_Item(string key);
    public sealed virtual void set_Item(string key, object value);
    public sealed virtual ICollection`1<string> get_Keys();
    private sealed virtual override ICollection`1<object> System.Collections.Generic.IDictionary<System.String,System.Object>.get_Values();
    public sealed virtual int get_Count();
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.get_IsReadOnly();
    public sealed virtual void Add(string key, object value);
    public sealed virtual bool ContainsKey(string key);
    public sealed virtual bool Remove(string key);
    public sealed virtual bool TryGetValue(string key, Object& value);
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add(KeyValuePair`2<string, object> item);
    public sealed virtual void Clear();
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains(KeyValuePair`2<string, object> item);
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo(KeyValuePair`2[] array, int arrayIndex);
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove(KeyValuePair`2<string, object> item);
    private sealed virtual override IEnumerator`1<KeyValuePair`2<string, object>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[ExtensionAttribute]
internal static class Azure.Data.Tables.TableEntityExtensions : object {
    [ExtensionAttribute]
internal static IDictionary`2<string, object> ToOdataAnnotatedDictionary(T entity);
}
[ExtensionAttribute]
internal static class Azure.Data.Tables.TableExtensions : object {
    [ExtensionAttribute]
internal static string ToPermissionsString(TableAccountSasPermissions permissions);
    [ExtensionAttribute]
internal static string ToPermissionsString(TableAccountSasResourceTypes resourceTypes);
    [ExtensionAttribute]
internal static string ToPermissionsString(TableSasPermissions permissions);
}
internal class Azure.Data.Tables.TableGetAccessPolicyHeaders : object {
    private Response _response;
    public string Version { get; }
    public TableGetAccessPolicyHeaders(Response response);
    public string get_Version();
}
internal class Azure.Data.Tables.TableInsertEntityHeaders : object {
    private Response _response;
    public string Version { get; }
    public string PreferenceApplied { get; }
    public string ContentType { get; }
    public TableInsertEntityHeaders(Response response);
    public string get_Version();
    public string get_PreferenceApplied();
    public string get_ContentType();
}
internal class Azure.Data.Tables.TableMergeEntityHeaders : object {
    private Response _response;
    public string Version { get; }
    public TableMergeEntityHeaders(Response response);
    public string get_Version();
}
internal static class Azure.Data.Tables.TableOdataFilter : object {
    public static string Create(FormattableString filter);
    internal static string EscapeStringValue(string s);
    internal static StringBuilder EscapeStringValue(StringBuilder s);
    internal static string EscapeStringValue(char s);
}
internal class Azure.Data.Tables.TableQueryEntitiesHeaders : object {
    private Response _response;
    public string Version { get; }
    public string XMsContinuationNextPartitionKey { get; }
    public string XMsContinuationNextRowKey { get; }
    public TableQueryEntitiesHeaders(Response response);
    public string get_Version();
    public string get_XMsContinuationNextPartitionKey();
    public string get_XMsContinuationNextRowKey();
}
internal class Azure.Data.Tables.TableQueryEntityWithPartitionAndRowKeyHeaders : object {
    private Response _response;
    public string Version { get; }
    public string XMsContinuationNextPartitionKey { get; }
    public string XMsContinuationNextRowKey { get; }
    public TableQueryEntityWithPartitionAndRowKeyHeaders(Response response);
    public string get_Version();
    public string get_XMsContinuationNextPartitionKey();
    public string get_XMsContinuationNextRowKey();
}
internal class Azure.Data.Tables.TableQueryHeaders : object {
    private Response _response;
    public string Version { get; }
    public string XMsContinuationNextTableName { get; }
    public TableQueryHeaders(Response response);
    public string get_Version();
    public string get_XMsContinuationNextTableName();
}
internal class Azure.Data.Tables.TableRestClient : object {
    private HttpPipeline _pipeline;
    private string _url;
    private string _version;
    [CompilerGeneratedAttribute]
private ClientDiagnostics <ClientDiagnostics>k__BackingField;
    private static ResponseClassifier _responseClassifier201204;
    private static ResponseClassifier _responseClassifier204;
    private static ResponseClassifier _responseClassifier200;
    internal ClientDiagnostics ClientDiagnostics { get; }
    private static ResponseClassifier ResponseClassifier201204 { get; }
    private static ResponseClassifier ResponseClassifier204 { get; }
    private static ResponseClassifier ResponseClassifier200 { get; }
    internal string endpoint { get; }
    internal string clientVersion { get; }
    public TableRestClient(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string url, string version);
    [CompilerGeneratedAttribute]
internal ClientDiagnostics get_ClientDiagnostics();
    internal HttpMessage CreateQueryRequest(string nextTableName, QueryOptions queryOptions);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableRestClient/<QueryAsync>d__8")]
public Task`1<ResponseWithHeaders`2<TableQueryResponse, TableQueryHeaders>> QueryAsync(string nextTableName, QueryOptions queryOptions, CancellationToken cancellationToken);
    public ResponseWithHeaders`2<TableQueryResponse, TableQueryHeaders> Query(string nextTableName, QueryOptions queryOptions, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateRequest(TableProperties tableProperties, Nullable`1<ResponseFormat> responsePreference, QueryOptions queryOptions);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableRestClient/<CreateAsync>d__11")]
public Task`1<ResponseWithHeaders`2<TableResponse, TableCreateHeaders>> CreateAsync(TableProperties tableProperties, Nullable`1<ResponseFormat> responsePreference, QueryOptions queryOptions, CancellationToken cancellationToken);
    public ResponseWithHeaders`2<TableResponse, TableCreateHeaders> Create(TableProperties tableProperties, Nullable`1<ResponseFormat> responsePreference, QueryOptions queryOptions, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateRequest(RequestContent content, string format, string responsePreference, RequestContext context);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableRestClient/<CreateAsync>d__14")]
public virtual Task`1<Response> CreateAsync(RequestContent content, string format, string responsePreference, RequestContext context);
    public virtual Response Create(RequestContent content, string format, string responsePreference, RequestContext context);
    internal HttpMessage CreateDeleteRequest(string table);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableRestClient/<DeleteAsync>d__17")]
public Task`1<ResponseWithHeaders`1<TableDeleteHeaders>> DeleteAsync(string table, CancellationToken cancellationToken);
    public ResponseWithHeaders`1<TableDeleteHeaders> Delete(string table, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string table, RequestContext context);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableRestClient/<DeleteAsync>d__20")]
public virtual Task`1<Response> DeleteAsync(string table, RequestContext context);
    public virtual Response Delete(string table, RequestContext context);
    internal HttpMessage CreateQueryEntitiesRequest(string table, Nullable`1<int> timeout, string nextPartitionKey, string nextRowKey, QueryOptions queryOptions);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableRestClient/<QueryEntitiesAsync>d__23")]
public Task`1<ResponseWithHeaders`2<TableEntityQueryResponse, TableQueryEntitiesHeaders>> QueryEntitiesAsync(string table, Nullable`1<int> timeout, string nextPartitionKey, string nextRowKey, QueryOptions queryOptions, CancellationToken cancellationToken);
    public ResponseWithHeaders`2<TableEntityQueryResponse, TableQueryEntitiesHeaders> QueryEntities(string table, Nullable`1<int> timeout, string nextPartitionKey, string nextRowKey, QueryOptions queryOptions, CancellationToken cancellationToken);
    internal HttpMessage CreateQueryEntityWithPartitionAndRowKeyRequest(string table, string partitionKey, string rowKey, Nullable`1<int> timeout, QueryOptions queryOptions);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableRestClient/<QueryEntityWithPartitionAndRowKeyAsync>d__26")]
public Task`1<ResponseWithHeaders`2<IReadOnlyDictionary`2<string, object>, TableQueryEntityWithPartitionAndRowKeyHeaders>> QueryEntityWithPartitionAndRowKeyAsync(string table, string partitionKey, string rowKey, Nullable`1<int> timeout, QueryOptions queryOptions, CancellationToken cancellationToken);
    public ResponseWithHeaders`2<IReadOnlyDictionary`2<string, object>, TableQueryEntityWithPartitionAndRowKeyHeaders> QueryEntityWithPartitionAndRowKey(string table, string partitionKey, string rowKey, Nullable`1<int> timeout, QueryOptions queryOptions, CancellationToken cancellationToken);
    internal HttpMessage CreateQueryEntityWithPartitionAndRowKeyRequest(string table, string partitionKey, string rowKey, Nullable`1<int> timeout, string format, string select, string filter, RequestContext context);
    internal HttpMessage CreateUpdateEntityRequest(string table, string partitionKey, string rowKey, Nullable`1<int> timeout, string ifMatch, IDictionary`2<string, object> tableEntityProperties, QueryOptions queryOptions);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableRestClient/<UpdateEntityAsync>d__30")]
public Task`1<ResponseWithHeaders`1<TableUpdateEntityHeaders>> UpdateEntityAsync(string table, string partitionKey, string rowKey, Nullable`1<int> timeout, string ifMatch, IDictionary`2<string, object> tableEntityProperties, QueryOptions queryOptions, CancellationToken cancellationToken);
    public ResponseWithHeaders`1<TableUpdateEntityHeaders> UpdateEntity(string table, string partitionKey, string rowKey, Nullable`1<int> timeout, string ifMatch, IDictionary`2<string, object> tableEntityProperties, QueryOptions queryOptions, CancellationToken cancellationToken);
    internal HttpMessage CreateMergeEntityRequest(string table, string partitionKey, string rowKey, Nullable`1<int> timeout, string ifMatch, IDictionary`2<string, object> tableEntityProperties, QueryOptions queryOptions);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableRestClient/<MergeEntityAsync>d__33")]
public Task`1<ResponseWithHeaders`1<TableMergeEntityHeaders>> MergeEntityAsync(string table, string partitionKey, string rowKey, Nullable`1<int> timeout, string ifMatch, IDictionary`2<string, object> tableEntityProperties, QueryOptions queryOptions, CancellationToken cancellationToken);
    public ResponseWithHeaders`1<TableMergeEntityHeaders> MergeEntity(string table, string partitionKey, string rowKey, Nullable`1<int> timeout, string ifMatch, IDictionary`2<string, object> tableEntityProperties, QueryOptions queryOptions, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteEntityRequest(string table, string partitionKey, string rowKey, string ifMatch, Nullable`1<int> timeout, QueryOptions queryOptions);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableRestClient/<DeleteEntityAsync>d__36")]
public Task`1<ResponseWithHeaders`1<TableDeleteEntityHeaders>> DeleteEntityAsync(string table, string partitionKey, string rowKey, string ifMatch, Nullable`1<int> timeout, QueryOptions queryOptions, CancellationToken cancellationToken);
    public ResponseWithHeaders`1<TableDeleteEntityHeaders> DeleteEntity(string table, string partitionKey, string rowKey, string ifMatch, Nullable`1<int> timeout, QueryOptions queryOptions, CancellationToken cancellationToken);
    internal HttpMessage CreateInsertEntityRequest(string table, Nullable`1<int> timeout, Nullable`1<ResponseFormat> responsePreference, IDictionary`2<string, object> tableEntityProperties, QueryOptions queryOptions);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableRestClient/<InsertEntityAsync>d__39")]
public Task`1<ResponseWithHeaders`2<IReadOnlyDictionary`2<string, object>, TableInsertEntityHeaders>> InsertEntityAsync(string table, Nullable`1<int> timeout, Nullable`1<ResponseFormat> responsePreference, IDictionary`2<string, object> tableEntityProperties, QueryOptions queryOptions, CancellationToken cancellationToken);
    public ResponseWithHeaders`2<IReadOnlyDictionary`2<string, object>, TableInsertEntityHeaders> InsertEntity(string table, Nullable`1<int> timeout, Nullable`1<ResponseFormat> responsePreference, IDictionary`2<string, object> tableEntityProperties, QueryOptions queryOptions, CancellationToken cancellationToken);
    internal HttpMessage CreateGetAccessPolicyRequest(string table, Nullable`1<int> timeout);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableRestClient/<GetAccessPolicyAsync>d__42")]
public Task`1<ResponseWithHeaders`2<IReadOnlyList`1<TableSignedIdentifier>, TableGetAccessPolicyHeaders>> GetAccessPolicyAsync(string table, Nullable`1<int> timeout, CancellationToken cancellationToken);
    public ResponseWithHeaders`2<IReadOnlyList`1<TableSignedIdentifier>, TableGetAccessPolicyHeaders> GetAccessPolicy(string table, Nullable`1<int> timeout, CancellationToken cancellationToken);
    internal HttpMessage CreateSetAccessPolicyRequest(string table, Nullable`1<int> timeout, IEnumerable`1<TableSignedIdentifier> tableAcl);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableRestClient/<SetAccessPolicyAsync>d__45")]
public Task`1<ResponseWithHeaders`1<TableSetAccessPolicyHeaders>> SetAccessPolicyAsync(string table, Nullable`1<int> timeout, IEnumerable`1<TableSignedIdentifier> tableAcl, CancellationToken cancellationToken);
    public ResponseWithHeaders`1<TableSetAccessPolicyHeaders> SetAccessPolicy(string table, Nullable`1<int> timeout, IEnumerable`1<TableSignedIdentifier> tableAcl, CancellationToken cancellationToken);
    private static ResponseClassifier get_ResponseClassifier201204();
    private static ResponseClassifier get_ResponseClassifier204();
    private static ResponseClassifier get_ResponseClassifier200();
    internal string get_endpoint();
    internal string get_clientVersion();
    internal HttpMessage CreateBatchRequest(MultipartContent content, string requestId, Nullable`1<ResponseFormat> responsePreference);
    internal static MultipartContent CreateBatchContent(Guid batchGuid);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableRestClient/<SendBatchRequestAsync>d__62")]
public Task`1<Response`1<IReadOnlyList`1<Response>>> SendBatchRequestAsync(HttpMessage message, CancellationToken cancellationToken);
    public Response`1<IReadOnlyList`1<Response>> SendBatchRequest(HttpMessage message, CancellationToken cancellationToken);
    public virtual Response QueryEntityWithPartitionAndRowKey(string table, string partitionKey, string rowKey, Nullable`1<int> timeout, string format, string select, string filter, RequestContext context);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableRestClient/<QueryEntityWithPartitionAndRowKeyAsync>d__65")]
public virtual Task`1<Response> QueryEntityWithPartitionAndRowKeyAsync(string table, string partitionKey, string rowKey, Nullable`1<int> timeout, string format, string select, string filter, RequestContext context);
}
[CodeGenModelAttribute("RetentionPolicy")]
public class Azure.Data.Tables.TableRetentionPolicy : object {
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Days>k__BackingField;
    public bool Enabled { get; public set; }
    public Nullable`1<int> Days { get; public set; }
    public TableRetentionPolicy(bool enabled);
    internal TableRetentionPolicy(bool enabled, Nullable`1<int> days);
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Days();
    [CompilerGeneratedAttribute]
public void set_Days(Nullable`1<int> value);
    private sealed virtual override void Azure.Core.IXmlSerializable.Write(XmlWriter writer, string nameHint);
    internal static TableRetentionPolicy DeserializeTableRetentionPolicy(XElement element);
}
internal class Azure.Data.Tables.TablesCompatSwitches : object {
    public static bool DisableEscapeSingleQuotesOnGetEntity { get; }
    public static bool DisableEscapeSingleQuotesOnDeleteEntity { get; }
    public static bool get_DisableEscapeSingleQuotesOnGetEntity();
    public static bool get_DisableEscapeSingleQuotesOnDeleteEntity();
}
public class Azure.Data.Tables.TableServiceClient : object {
    private ClientDiagnostics _diagnostics;
    private TableRestClient _tableOperations;
    private ServiceRestClient _serviceOperations;
    private ServiceRestClient _secondaryServiceOperations;
    private OdataMetadataFormat _format;
    private string _version;
    internal bool _isCosmosEndpoint;
    private QueryOptions _defaultQueryOptions;
    private string _accountName;
    private Uri _endpoint;
    private HttpPipeline _pipeline;
    private TableUriBuilder _tableUriBuilder;
    private TableSharedKeyCredential _tableSharedKeyCredential;
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    internal TableSharedKeyCredential SharedKeyCredential { get; }
    public string AccountName { get; }
    public Uri Uri { get; }
    public TableServiceClient(Uri endpoint, AzureSasCredential credential);
    public TableServiceClient(string connectionString);
    public TableServiceClient(Uri endpoint, TableClientOptions options);
    public TableServiceClient(Uri endpoint, AzureSasCredential credential, TableClientOptions options);
    public TableServiceClient(Uri endpoint, TableSharedKeyCredential credential);
    public TableServiceClient(Uri endpoint, TableSharedKeyCredential credential, TableClientOptions options);
    public TableServiceClient(string connectionString, TableClientOptions options);
    public TableServiceClient(Uri endpoint, TokenCredential tokenCredential, TableClientOptions options);
    internal TableServiceClient(Uri endpoint, TableSharedKeyPipelinePolicy policy, AzureSasCredential sasCredential, TableClientOptions options);
    internal TableServiceClient(TableRestClient internalClient);
    internal virtual TableSharedKeyCredential get_SharedKeyCredential();
    public virtual string get_AccountName();
    [CompilerGeneratedAttribute]
public virtual Uri get_Uri();
    public virtual TableAccountSasBuilder GetSasBuilder(TableAccountSasPermissions permissions, TableAccountSasResourceTypes resourceTypes, DateTimeOffset expiresOn);
    public virtual TableAccountSasBuilder GetSasBuilder(string rawPermissions, TableAccountSasResourceTypes resourceTypes, DateTimeOffset expiresOn);
    public virtual TableClient GetTableClient(string tableName);
    public virtual AsyncPageable`1<TableItem> QueryAsync(string filter, Nullable`1<int> maxPerPage, CancellationToken cancellationToken);
    public virtual Pageable`1<TableItem> Query(string filter, Nullable`1<int> maxPerPage, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<TableItem> QueryAsync(FormattableString filter, Nullable`1<int> maxPerPage, CancellationToken cancellationToken);
    public virtual Pageable`1<TableItem> Query(FormattableString filter, Nullable`1<int> maxPerPage, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<TableItem> QueryAsync(Expression`1<Func`2<TableItem, bool>> filter, Nullable`1<int> maxPerPage, CancellationToken cancellationToken);
    public virtual Pageable`1<TableItem> Query(Expression`1<Func`2<TableItem, bool>> filter, Nullable`1<int> maxPerPage, CancellationToken cancellationToken);
    public virtual Response`1<TableItem> CreateTable(string tableName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableServiceClient/<CreateTableAsync>d__41")]
public virtual Task`1<Response`1<TableItem>> CreateTableAsync(string tableName, CancellationToken cancellationToken);
    public virtual Response`1<TableItem> CreateTableIfNotExists(string tableName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableServiceClient/<CreateTableIfNotExistsAsync>d__43")]
public virtual Task`1<Response`1<TableItem>> CreateTableIfNotExistsAsync(string tableName, CancellationToken cancellationToken);
    public virtual Response DeleteTable(string tableName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableServiceClient/<DeleteTableAsync>d__45")]
public virtual Task`1<Response> DeleteTableAsync(string tableName, CancellationToken cancellationToken);
    [CallerShouldAuditAttribute("https://aka.ms/azsdk/callershouldaudit/data-tables")]
public virtual Response SetProperties(TableServiceProperties properties, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableServiceClient/<SetPropertiesAsync>d__47")]
[CallerShouldAuditAttribute("https://aka.ms/azsdk/callershouldaudit/data-tables")]
public virtual Task`1<Response> SetPropertiesAsync(TableServiceProperties properties, CancellationToken cancellationToken);
    public virtual Response`1<TableServiceProperties> GetProperties(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableServiceClient/<GetPropertiesAsync>d__49")]
public virtual Task`1<Response`1<TableServiceProperties>> GetPropertiesAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Data.Tables.TableServiceClient/<GetStatisticsAsync>d__50")]
public virtual Task`1<Response`1<TableServiceStatistics>> GetStatisticsAsync(CancellationToken cancellationToken);
    public virtual Response`1<TableServiceStatistics> GetStatistics(CancellationToken cancellationToken);
    [CallerShouldAuditAttribute("https://aka.ms/azsdk/callershouldaudit/data-tables")]
public virtual Uri GenerateSasUri(TableAccountSasPermissions permissions, TableAccountSasResourceTypes resourceTypes, DateTimeOffset expiresOn);
    [CallerShouldAuditAttribute("https://aka.ms/azsdk/callershouldaudit/data-tables")]
public virtual Uri GenerateSasUri(TableAccountSasBuilder builder);
    internal static bool IsPremiumEndpoint(Uri endpoint);
    public static string CreateQueryFilter(Expression`1<Func`2<TableItem, bool>> filter);
    public static string CreateQueryFilter(FormattableString filter);
    internal static RequestContext CreateContextForDelete(CancellationToken cancellationToken);
    private void ValidateServiceUriDoesNotContainTableName(Exception ex, string tableName);
}
internal class Azure.Data.Tables.TableSetAccessPolicyHeaders : object {
    private Response _response;
    public string Version { get; }
    public TableSetAccessPolicyHeaders(Response response);
    public string get_Version();
}
public class Azure.Data.Tables.TableSharedKeyCredential : object {
    [CompilerGeneratedAttribute]
private string <AccountName>k__BackingField;
    private Byte[] _accountKeyValue;
    public string AccountName { get; }
    private Byte[] AccountKeyValue { get; private set; }
    public TableSharedKeyCredential(string accountName, string accountKey);
    [CompilerGeneratedAttribute]
public string get_AccountName();
    private Byte[] get_AccountKeyValue();
    private void set_AccountKeyValue(Byte[] value);
    public void SetAccountKey(string accountKey);
    internal string ComputeHMACSHA256(string message);
    internal static string ComputeSasSignature(TableSharedKeyCredential credential, string message);
}
internal class Azure.Data.Tables.TableSharedKeyPipelinePolicy : HttpPipelineSynchronousPolicy {
    private static string compQueryParam;
    private TableSharedKeyCredential _credentials;
    public TableSharedKeyPipelinePolicy(TableSharedKeyCredential credentials);
    public virtual void OnSendingRequest(HttpMessage message);
    private string BuildStringToSign(HttpMessage message);
    internal string BuildCanonicalizedResource(Uri resource);
    public static bool TryGetCompQueryParameterValue(Uri uri, String& value);
}
internal class Azure.Data.Tables.TablesRequestContext : RequestContext {
    public static Int32[] NotFound;
    public static Int32[] Conflict;
    public static TablesRequestContext Default;
    public static TablesRequestContext CreateIfNotExists;
    public static TablesRequestContext AddEntity;
    public TablesRequestContext(Int32[] noErrorStatusCodes);
    private static TablesRequestContext();
}
internal class Azure.Data.Tables.TablesRequestFailedDetailsParser : RequestFailedDetailsParser {
    public virtual bool TryParse(Response response, ResponseError& error, IDictionary`2& data);
    private static bool TryParseBatchIndex(string message, Int32& index);
}
internal class Azure.Data.Tables.TablesTypeBinder : TypeBinder`1<IDictionary`2<string, object>> {
    [CompilerGeneratedAttribute]
private static TablesTypeBinder <Shared>k__BackingField;
    public static TablesTypeBinder Shared { get; }
    private static TablesTypeBinder();
    [CompilerGeneratedAttribute]
public static TablesTypeBinder get_Shared();
    protected virtual void Set(IDictionary`2<string, object> destination, T value, BoundMemberInfo<IDictionary`2<string, object>> memberInfo);
    protected virtual bool TryGet(BoundMemberInfo<IDictionary`2<string, object>> memberInfo, IDictionary`2<string, object> source, T& value);
}
public class Azure.Data.Tables.TableTransactionAction : object {
    [CompilerGeneratedAttribute]
private TableTransactionActionType <ActionType>k__BackingField;
    [CompilerGeneratedAttribute]
private ITableEntity <Entity>k__BackingField;
    [CompilerGeneratedAttribute]
private ETag <ETag>k__BackingField;
    public TableTransactionActionType ActionType { get; }
    public ITableEntity Entity { get; }
    public ETag ETag { get; }
    public TableTransactionAction(TableTransactionActionType actionType, ITableEntity entity);
    public TableTransactionAction(TableTransactionActionType actionType, ITableEntity entity, ETag etag);
    [CompilerGeneratedAttribute]
public TableTransactionActionType get_ActionType();
    [CompilerGeneratedAttribute]
public ITableEntity get_Entity();
    [CompilerGeneratedAttribute]
public ETag get_ETag();
}
public enum Azure.Data.Tables.TableTransactionActionType : Enum {
    public int value__;
    public static TableTransactionActionType Add;
    public static TableTransactionActionType UpdateMerge;
    public static TableTransactionActionType UpdateReplace;
    public static TableTransactionActionType Delete;
    public static TableTransactionActionType UpsertMerge;
    public static TableTransactionActionType UpsertReplace;
}
public class Azure.Data.Tables.TableTransactionFailedException : RequestFailedException {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <FailedTransactionActionIndex>k__BackingField;
    public Nullable`1<int> FailedTransactionActionIndex { get; internal set; }
    public TableTransactionFailedException(RequestFailedException requestFailedException);
    protected TableTransactionFailedException(SerializationInfo info, StreamingContext context);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_FailedTransactionActionIndex();
    [CompilerGeneratedAttribute]
internal void set_FailedTransactionActionIndex(Nullable`1<int> value);
}
internal class Azure.Data.Tables.TableUpdateEntityHeaders : object {
    private Response _response;
    public string Version { get; }
    public TableUpdateEntityHeaders(Response response);
    public string get_Version();
}
public enum Azure.Data.Tables.TableUpdateMode : Enum {
    public int value__;
    public static TableUpdateMode Merge;
    public static TableUpdateMode Replace;
}
public class Azure.Data.Tables.TableUriBuilder : object {
    private Uri _uri;
    private bool _isPathStyleUri;
    private string _scheme;
    private string _host;
    private int _port;
    private string _accountName;
    private string _tablename;
    private TableSasQueryParameters _sas;
    private string _query;
    public string Scheme { get; public set; }
    public string Host { get; public set; }
    public int Port { get; public set; }
    public string AccountName { get; public set; }
    public string Tablename { get; public set; }
    public TableSasQueryParameters Sas { get; public set; }
    public string Query { get; public set; }
    public TableUriBuilder(Uri uri);
    public string get_Scheme();
    public void set_Scheme(string value);
    public string get_Host();
    public void set_Host(string value);
    public int get_Port();
    public void set_Port(int value);
    public string get_AccountName();
    public void set_AccountName(string value);
    public string get_Tablename();
    public void set_Tablename(string value);
    public TableSasQueryParameters get_Sas();
    public void set_Sas(TableSasQueryParameters value);
    public string get_Query();
    public void set_Query(string value);
    public Uri ToUri();
    public virtual string ToString();
    private void ResetUri();
    private RequestUriBuilder BuildUri();
    internal static Uri GetEndpointWithoutTableName(Uri endpoint, string tableName);
}
internal class Azure.Data.Tables.UriQueryParamsCollection : Dictionary`2<string, string> {
    public UriQueryParamsCollection(string encodedQueryParamString);
    public virtual string ToString();
}
internal class Azure.Data.Tables.Utf8JsonRequestContent : RequestContent {
    private MemoryStream _stream;
    private RequestContent _content;
    [CompilerGeneratedAttribute]
private Utf8JsonWriter <JsonWriter>k__BackingField;
    public Utf8JsonWriter JsonWriter { get; }
    [CompilerGeneratedAttribute]
public Utf8JsonWriter get_JsonWriter();
    [AsyncStateMachineAttribute("Azure.Data.Tables.Utf8JsonRequestContent/<WriteToAsync>d__6")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellationToken);
    public virtual void WriteTo(Stream stream, CancellationToken cancellationToken);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
internal class Azure.NoValueResponse`1 : NullableResponse`1<T> {
    private Response _response;
    public bool HasValue { get; }
    public T Value { get; }
    public NoValueResponse`1(Response response);
    public virtual bool get_HasValue();
    public virtual T get_Value();
    public virtual Response GetRawResponse();
    public virtual string ToString();
    internal string GetStatusMessage();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[ExtensionAttribute]
public static class Microsoft.Extensions.Azure.TableClientBuilderExtensions : object {
    [ExtensionAttribute]
public static IAzureClientBuilder`2<TableServiceClient, TableClientOptions> AddTableServiceClient(TBuilder builder, string connectionString);
    [ExtensionAttribute]
public static IAzureClientBuilder`2<TableServiceClient, TableClientOptions> AddTableServiceClient(TBuilder builder, Uri serviceUri);
    [ExtensionAttribute]
public static IAzureClientBuilder`2<TableServiceClient, TableClientOptions> AddTableServiceClient(TBuilder builder, Uri serviceUri, TableSharedKeyCredential sharedKeyCredential);
    [ExtensionAttribute]
public static IAzureClientBuilder`2<TableServiceClient, TableClientOptions> AddTableServiceClient(TBuilder builder, TConfiguration configuration);
}
[AttributeUsageAttribute("28108")]
internal class System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute : Attribute {
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public DynamicallyAccessedMembersAttribute(DynamicallyAccessedMemberTypes memberTypes);
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
}
[FlagsAttribute]
internal enum System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes : Enum {
    public int value__;
    public static DynamicallyAccessedMemberTypes None;
    public static DynamicallyAccessedMemberTypes PublicParameterlessConstructor;
    public static DynamicallyAccessedMemberTypes PublicConstructors;
    public static DynamicallyAccessedMemberTypes NonPublicConstructors;
    public static DynamicallyAccessedMemberTypes PublicMethods;
    public static DynamicallyAccessedMemberTypes NonPublicMethods;
    public static DynamicallyAccessedMemberTypes PublicFields;
    public static DynamicallyAccessedMemberTypes NonPublicFields;
    public static DynamicallyAccessedMemberTypes PublicNestedTypes;
    public static DynamicallyAccessedMemberTypes NonPublicNestedTypes;
    public static DynamicallyAccessedMemberTypes PublicProperties;
    public static DynamicallyAccessedMemberTypes NonPublicProperties;
    public static DynamicallyAccessedMemberTypes PublicEvents;
    public static DynamicallyAccessedMemberTypes NonPublicEvents;
    public static DynamicallyAccessedMemberTypes Interfaces;
    public static DynamicallyAccessedMemberTypes All;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("352")]
internal class System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <MemberSignature>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssemblyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Condition>k__BackingField;
    public string MemberSignature { get; }
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public Type Type { get; }
    public string TypeName { get; }
    public string AssemblyName { get; }
    public string Condition { get; public set; }
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature, Type type);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature, string typeName, string assemblyName);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(DynamicallyAccessedMemberTypes memberTypes, Type type);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(DynamicallyAccessedMemberTypes memberTypes, string typeName, string assemblyName);
    [CompilerGeneratedAttribute]
public string get_MemberSignature();
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public string get_AssemblyName();
    [CompilerGeneratedAttribute]
public string get_Condition();
    [CompilerGeneratedAttribute]
public void set_Condition(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("100")]
internal class System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    [NullableAttribute("2")]
public string Url { get; public set; }
    public RequiresDynamicCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Url(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("100")]
internal class System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    [NullableAttribute("2")]
public string Url { get; public set; }
    public RequiresUnreferencedCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Url(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
internal class System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute : Attribute {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <CheckId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Justification>k__BackingField;
    [NullableAttribute("1")]
public string Category { get; }
    [NullableAttribute("1")]
public string CheckId { get; }
    public string Scope { get; public set; }
    public string Target { get; public set; }
    public string MessageId { get; public set; }
    public string Justification { get; public set; }
    [NullableContextAttribute("1")]
public UnconditionalSuppressMessageAttribute(string category, string checkId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Category();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_CheckId();
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public string get_MessageId();
    [CompilerGeneratedAttribute]
public void set_MessageId(string value);
    [CompilerGeneratedAttribute]
public string get_Justification();
    [CompilerGeneratedAttribute]
public void set_Justification(string value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
