[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Autorest.CSharp.Core.GeneratorPageableHelpers : object {
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Autorest.CSharp.Core.GeneratorPageableHelpers/<CreateAsyncPageable>d__8`1")]
public static ValueTask`1<Operation`1<AsyncPageable`1<T>>> CreateAsyncPageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Operation`1<Pageable`1<T>> CreatePageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreateEnumerable(Func`2<Nullable`1<int>, Page`1<T>> firstPageFunc, Func`3<string, Nullable`1<int>, Page`1<T>> nextPageFunc, Nullable`1<int> pageSize);
    public static AsyncPageable`1<T> CreateAsyncEnumerable(Func`2<Nullable`1<int>, Task`1<Page`1<T>>> firstPageFunc, Func`3<string, Nullable`1<int>, Task`1<Page`1<T>>> nextPageFunc, Nullable`1<int> pageSize);
}
internal static class Azure.Core.AppContextSwitchHelper : object {
    [NullableContextAttribute("1")]
public static bool GetConfigValue(string appContexSwitchName, string environmentVariableName);
}
internal class Azure.Core.ArrayBufferWriter`1 : object {
    [NullableAttribute("1")]
private T[] _buffer;
    private static int DefaultInitialBufferSize;
    [CompilerGeneratedAttribute]
private int <WrittenCount>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ReadOnlyMemory`1<T> WrittenMemory { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ReadOnlySpan`1<T> WrittenSpan { get; }
    public int WrittenCount { get; private set; }
    public int Capacity { get; }
    public int FreeCapacity { get; }
    public ArrayBufferWriter`1(int initialCapacity);
    public ReadOnlyMemory`1<T> get_WrittenMemory();
    public ReadOnlySpan`1<T> get_WrittenSpan();
    [CompilerGeneratedAttribute]
public int get_WrittenCount();
    [CompilerGeneratedAttribute]
private void set_WrittenCount(int value);
    public int get_Capacity();
    public int get_FreeCapacity();
    public void Clear();
    public sealed virtual void Advance(int count);
    public sealed virtual Memory`1<T> GetMemory(int sizeHint);
    public sealed virtual Span`1<T> GetSpan(int sizeHint);
    private void CheckAndResizeBuffer(int sizeHint);
    private static void ThrowInvalidOperationException_AdvancedTooFar(int capacity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.AsyncLockWithValue`1 : object {
    private object _syncObj;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Queue`1<TaskCompletionSource`1<LockOrValue<T>>> _waiters;
    private bool _isLocked;
    private bool _hasValue;
    private long _index;
    [NullableAttribute("2")]
private T _value;
    public bool HasValue { get; }
    public AsyncLockWithValue`1(T value);
    public bool get_HasValue();
    [NullableContextAttribute("2")]
public bool TryGetValue(T& value);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Azure.Core.AsyncLockWithValue`1/<GetLockOrValueAsync>d__11")]
public ValueTask`1<LockOrValue<T>> GetLockOrValueAsync(bool async, CancellationToken cancellationToken);
    private void SetValue(T value, Int64& lockIndex);
    private void Reset(Int64& lockIndex);
    private void UnlockOrGetNextWaiter(Int64& lockIndex, TaskCompletionSource`1& nextWaiter);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
internal class Azure.Core.CodeGenClientAttribute : CodeGenTypeAttribute {
    [CompilerGeneratedAttribute]
private Type <ParentClient>k__BackingField;
    public Type ParentClient { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenClientAttribute(string originalName);
    [CompilerGeneratedAttribute]
public Type get_ParentClient();
    [CompilerGeneratedAttribute]
public void set_ParentClient(Type value);
}
[AttributeUsageAttribute("384")]
internal class Azure.Core.CodeGenMemberAttribute : CodeGenTypeAttribute {
    [NullableContextAttribute("1")]
public CodeGenMemberAttribute(string originalName);
}
[AttributeUsageAttribute("28")]
internal class Azure.Core.CodeGenModelAttribute : CodeGenTypeAttribute {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <Usage>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <Formats>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] Usage { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] Formats { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenModelAttribute(string originalName);
    [CompilerGeneratedAttribute]
public String[] get_Usage();
    [CompilerGeneratedAttribute]
public void set_Usage(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_Formats();
    [CompilerGeneratedAttribute]
public void set_Formats(String[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1")]
internal class Azure.Core.CodeGenOverrideServiceVersionsAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Versions>k__BackingField;
    public String[] Versions { get; }
    public CodeGenOverrideServiceVersionsAttribute(String[] versions);
    [CompilerGeneratedAttribute]
public String[] get_Versions();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("12")]
internal class Azure.Core.CodeGenSerializationAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <SerializationPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SerializationValueHook>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeserializationValueHook>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BicepSerializationValueHook>k__BackingField;
    public string PropertyName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] SerializationPath { get; }
    public string SerializationValueHook { get; public set; }
    public string DeserializationValueHook { get; public set; }
    public string BicepSerializationValueHook { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenSerializationAttribute(string propertyName);
    [NullableContextAttribute("1")]
public CodeGenSerializationAttribute(string propertyName, string serializationName);
    [NullableContextAttribute("1")]
public CodeGenSerializationAttribute(string propertyName, String[] serializationPath);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public void set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public String[] get_SerializationPath();
    [CompilerGeneratedAttribute]
public string get_SerializationValueHook();
    [CompilerGeneratedAttribute]
public void set_SerializationValueHook(string value);
    [CompilerGeneratedAttribute]
public string get_DeserializationValueHook();
    [CompilerGeneratedAttribute]
public void set_DeserializationValueHook(string value);
    [CompilerGeneratedAttribute]
public string get_BicepSerializationValueHook();
    [CompilerGeneratedAttribute]
public void set_BicepSerializationValueHook(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("28")]
internal class Azure.Core.CodeGenSuppressAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Member>k__BackingField;
    [CompilerGeneratedAttribute]
private Type[] <Parameters>k__BackingField;
    public string Member { get; }
    public Type[] Parameters { get; }
    public CodeGenSuppressAttribute(string member, Type[] parameters);
    [CompilerGeneratedAttribute]
public string get_Member();
    [CompilerGeneratedAttribute]
public Type[] get_Parameters();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1")]
internal class Azure.Core.CodeGenSuppressTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Typename>k__BackingField;
    public string Typename { get; }
    public CodeGenSuppressTypeAttribute(string typename);
    [CompilerGeneratedAttribute]
public string get_Typename();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
internal class Azure.Core.CodeGenTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <OriginalName>k__BackingField;
    public string OriginalName { get; }
    public CodeGenTypeAttribute(string originalName);
    [CompilerGeneratedAttribute]
public string get_OriginalName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.ConnectionString : object {
    private Dictionary`2<string, string> _pairs;
    private string _pairSeparator;
    private string _keywordValueSeparator;
    private ConnectionString(Dictionary`2<string, string> pairs, string pairSeparator, string keywordValueSeparator);
    public static ConnectionString Parse(string connectionString, string segmentSeparator, string keywordValueSeparator, bool allowEmptyValues);
    public static ConnectionString Empty(string segmentSeparator, string keywordValueSeparator);
    public string GetRequired(string keyword);
    public string GetNonRequired(string keyword);
    public bool TryGetSegmentValue(string keyword, String& value);
    public string GetSegmentValueOrDefault(string keyword, string defaultValue);
    public bool ContainsSegmentKey(string keyword);
    public void Replace(string keyword, string value);
    public void Add(string keyword, string value);
    public virtual string ToString();
    private static Dictionary`2<string, string> ParseSegments(String& connectionString, String& separator, String& keywordValueSeparator);
    private static bool TryGetNextSegment(String& str, String& separator, Int32& start, Int32& end);
    private static void Validate(string connectionString, string segmentSeparator, string keywordValueSeparator, bool allowEmptyValues);
    [CompilerGeneratedAttribute]
internal static int <ParseSegments>g__GetStart|14_0(String& str, int start);
    [CompilerGeneratedAttribute]
internal static int <ParseSegments>g__GetLength|14_1(String& str, Int32& start, int end);
}
internal class Azure.Core.FixedDelayWithNoJitterStrategy : DelayStrategy {
    private static TimeSpan DefaultDelay;
    private TimeSpan _delay;
    public FixedDelayWithNoJitterStrategy(Nullable`1<TimeSpan> suggestedDelay);
    private static FixedDelayWithNoJitterStrategy();
    [NullableContextAttribute("2")]
protected virtual TimeSpan GetNextDelayCore(Response response, int retryNumber);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.FormUrlEncodedContent : RequestContent {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<KeyValuePair`2<string, string>> _values;
    private Encoding Latin1;
    private Byte[] _bytes;
    public void Add(string parameter, string value);
    private void BuildIfNeeded();
    [AsyncStateMachineAttribute("Azure.Core.FormUrlEncodedContent/<WriteToAsync>d__5")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
    private Byte[] GetContentByteArray(IEnumerable`1<KeyValuePair`2<string, string>> nameValueCollection);
    private static string Encode(string data);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.HttpMessageSanitizer : object {
    private static string LogAllValue;
    private bool _logAllHeaders;
    private bool _logFullQueries;
    private String[] _allowedQueryParameters;
    private string _redactedPlaceholder;
    private HashSet`1<string> _allowedHeaders;
    [NullableAttribute("2")]
[ThreadStaticAttribute]
private static StringBuilder s_cachedStringBuilder;
    private static int MaxCachedStringBuilderCapacity;
    internal static HttpMessageSanitizer Default;
    public HttpMessageSanitizer(String[] allowedQueryParameters, String[] allowedHeaders, string redactedPlaceholder);
    private static HttpMessageSanitizer();
    public string SanitizeHeader(string name, string value);
    public string SanitizeUrl(string url);
    private static StringBuilder RentStringBuilder(int capacity);
    private static string ToStringAndReturnStringBuilder(StringBuilder builder);
    [CompilerGeneratedAttribute]
internal static StringBuilder <SanitizeUrl>g__AppendReadOnlySpan|11_0(StringBuilder builder, ReadOnlySpan`1<char> span);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.HttpPipelineExtensions : object {
    [AsyncStateMachineAttribute("Azure.Core.HttpPipelineExtensions/<ProcessMessageAsync>d__0")]
[ExtensionAttribute]
public static ValueTask`1<Response> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, RequestContext requestContext, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response ProcessMessage(HttpPipeline pipeline, HttpMessage message, RequestContext requestContext, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.HttpPipelineExtensions/<ProcessHeadAsBoolMessageAsync>d__2")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<bool>> ProcessHeadAsBoolMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, RequestContext requestContext);
    [ExtensionAttribute]
public static Response`1<bool> ProcessHeadAsBoolMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, RequestContext requestContext);
    [NullableContextAttribute("0")]
private static ValueTuple`2<CancellationToken, ErrorOptions> ApplyRequestContext(RequestContext requestContext);
}
internal interface Azure.Core.IOperation {
    public abstract virtual ValueTask`1<OperationState> UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("2")]
internal interface Azure.Core.IOperation`1 {
    public abstract virtual ValueTask`1<OperationState`1<T>> UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Azure.Core.IOperationSource`1 {
    public abstract virtual T CreateResult(Response response, CancellationToken cancellationToken);
    public abstract virtual ValueTask`1<T> CreateResultAsync(Response response, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Azure.Core.IUtf8JsonSerializable {
    public abstract virtual void Write(Utf8JsonWriter writer);
}
[NullableContextAttribute("1")]
internal interface Azure.Core.IXmlSerializable {
    public abstract virtual void Write(XmlWriter writer, string nameHint);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.NextLinkOperationImplementation : object {
    internal static string NotSet;
    internal static string RehydrationTokenVersion;
    private static string ApiVersionParam;
    private static String[] FailureStates;
    private static String[] SuccessStates;
    private HeaderSource _headerSource;
    private Uri _startRequestUri;
    private OperationFinalStateVia _finalStateVia;
    private HttpPipeline _pipeline;
    [NullableAttribute("2")]
private string _apiVersion;
    [NullableAttribute("2")]
private string _lastKnownLocation;
    private string _nextRequestUri;
    [CompilerGeneratedAttribute]
private string <OperationId>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestMethod <RequestMethod>k__BackingField;
    public string OperationId { get; private set; }
    public RequestMethod RequestMethod { get; }
    private NextLinkOperationImplementation(HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, string nextRequestUri, HeaderSource headerSource, string lastKnownLocation, OperationFinalStateVia finalStateVia, string apiVersion, string operationId, bool isNextRequestPolling);
    private static NextLinkOperationImplementation();
    [CompilerGeneratedAttribute]
public string get_OperationId();
    [CompilerGeneratedAttribute]
private void set_OperationId(string value);
    [CompilerGeneratedAttribute]
public RequestMethod get_RequestMethod();
    public static IOperation Create(HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    public static IOperation`1<T> Create(IOperationSource`1<T> operationSource, HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    public static IOperation`1<T> Create(IOperationSource`1<T> operationSource, IOperation operation);
    public static IOperation Create(HttpPipeline pipeline, RehydrationToken rehydrationToken);
    private static string ParseOperationId(Uri startRequestUri, string nextRequestUri);
    public RehydrationToken GetRehydrationToken();
    public static RehydrationToken GetRehydrationToken(RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia);
    public static RehydrationToken GetRehydrationToken(RequestMethod requestMethod, Uri startRequestUri, string nextRequestUri, string headerSource, string lastKnownLocation, string finalStateVia, string operationId);
    [NullableContextAttribute("2")]
private static string ConstructStringValue(string value);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Azure.Core.NextLinkOperationImplementation/<UpdateStateAsync>d__29")]
public sealed virtual ValueTask`1<OperationState> UpdateStateAsync(bool async, CancellationToken cancellationToken);
    private static OperationState GetOperationStateFromFinalResponse(RequestMethod requestMethod, Response response);
    private void UpdateNextRequestUri(ResponseHeaders headers);
    internal static string AppendOrReplaceApiVersion(string uri, string apiVersion);
    [NullableContextAttribute("0")]
internal static bool TryGetApiVersion(Uri startRequestUri, ReadOnlySpan`1& apiVersion);
    [NullableContextAttribute("2")]
private string GetFinalUri(string resourceLocation);
    private Response GetResponse(string uri, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.NextLinkOperationImplementation/<GetResponseAsync>d__36")]
private ValueTask`1<Response> GetResponseAsync(string uri, CancellationToken cancellationToken);
    private HttpMessage CreateRequest(string uri);
    private static bool IsFinalState(Response response, HeaderSource headerSource, Nullable`1& failureState, String& resourceLocation);
    private static string GetRequiredString(JsonElement& element);
    private static bool ShouldIgnoreHeader(RequestMethod method, Response response);
    private static HeaderSource GetHeaderSource(RequestMethod requestMethod, Uri requestUri, Response response, string apiVersion, String& nextRequestUri, Boolean& isNextRequestPolling);
    private static void AssertNotNull(T value, string name);
}
internal enum Azure.Core.OperationFinalStateVia : Enum {
    public int value__;
    public static OperationFinalStateVia AzureAsyncOperation;
    public static OperationFinalStateVia Location;
    public static OperationFinalStateVia OriginalUri;
    public static OperationFinalStateVia OperationLocation;
    public static OperationFinalStateVia LocationOverride;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.OperationHelpers : object {
    public static T GetValue(T& value);
    [NullableContextAttribute("0")]
public static T GetValue(Nullable`1& value);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionAsync>d__2`1")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<TResult>> DefaultWaitForCompletionAsync(Operation`1<TResult> operation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionAsync>d__3`1")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<TResult>> DefaultWaitForCompletionAsync(Operation`1<TResult> operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response`1<TResult> DefaultWaitForCompletion(Operation`1<TResult> operation, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response`1<TResult> DefaultWaitForCompletion(Operation`1<TResult> operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionResponseAsync>d__6")]
[ExtensionAttribute]
public static ValueTask`1<Response> DefaultWaitForCompletionResponseAsync(Operation operation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionResponseAsync>d__7")]
[ExtensionAttribute]
public static ValueTask`1<Response> DefaultWaitForCompletionResponseAsync(Operation operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response DefaultWaitForCompletionResponse(Operation operation, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response DefaultWaitForCompletionResponse(Operation operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationInternal : OperationInternalBase {
    private OperationInternal`1<VoidValue> _internalOperation;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public OperationInternal(IOperation operation, ClientDiagnostics clientDiagnostics, Response rawResponse, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    internal OperationInternal(OperationState finalState);
    public static OperationInternal Succeeded(Response rawResponse);
    public static OperationInternal Failed(Response rawResponse, RequestFailedException operationFailedException);
    public virtual Response get_RawResponse();
    public virtual bool get_HasCompleted();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal/<UpdateStatusAsync>d__9")]
protected virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationInternal`1 : OperationInternalBase {
    private IOperation`1<T> _operation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AsyncLockWithValue`1<OperationState`1<T>> _stateLock;
    private Response _rawResponse;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasValue { get; }
    public T Value { get; }
    public OperationInternal`1(IOperation`1<T> operation, ClientDiagnostics clientDiagnostics, Response rawResponse, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    internal OperationInternal`1(OperationState`1<T> finalState);
    public static OperationInternal`1<T> Succeeded(Response rawResponse, T value);
    public static OperationInternal`1<T> Failed(Response rawResponse, RequestFailedException operationFailedException);
    public virtual Response get_RawResponse();
    public virtual bool get_HasCompleted();
    public bool get_HasValue();
    public T get_Value();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__15")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__16")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__19")]
private ValueTask`1<Response`1<T>> WaitForCompletionAsync(bool async, Nullable`1<TimeSpan> pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<UpdateStatusAsync>d__20")]
protected virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
    private static Response GetResponseFromState(OperationState`1<T> state);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Azure.Core.OperationInternalBase : object {
    private ClientDiagnostics _diagnostics;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IReadOnlyDictionary`2<string, string> _scopeAttributes;
    [NullableAttribute("2")]
private DelayStrategy _fallbackStrategy;
    private AsyncLockWithValue`1<Response> _responseLock;
    private string _waitForCompletionResponseScopeName;
    protected string _updateStatusScopeName;
    protected string _waitForCompletionScopeName;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    protected OperationInternalBase(Response rawResponse);
    protected OperationInternalBase(ClientDiagnostics clientDiagnostics, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    public abstract virtual Response get_RawResponse();
    public abstract virtual bool get_HasCompleted();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<UpdateStatusAsync>d__13")]
public ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public Response UpdateStatus(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__15")]
public ValueTask`1<Response> WaitForCompletionResponseAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__16")]
public ValueTask`1<Response> WaitForCompletionResponseAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__19")]
protected ValueTask`1<Response> WaitForCompletionResponseAsync(bool async, Nullable`1<TimeSpan> pollingInterval, string scopeName, CancellationToken cancellationToken);
    protected abstract virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
    protected DiagnosticScope CreateScope(string scopeName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationPoller : object {
    private DelayStrategy _delayStrategy;
    [NullableContextAttribute("2")]
public OperationPoller(DelayStrategy strategy);
    public ValueTask`1<Response> WaitForCompletionResponseAsync(Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public ValueTask`1<Response> WaitForCompletionResponseAsync(OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__6`1")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(Operation`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(Operation`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__8`1")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(OperationInternal`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(OperationInternal`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__10")]
private ValueTask`1<Response> WaitForCompletionAsync(bool async, Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__11")]
private ValueTask`1<Response> WaitForCompletionAsync(bool async, OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<Delay>d__12")]
private static ValueTask Delay(bool async, TimeSpan delay, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.OperationState : ValueType {
    [CompilerGeneratedAttribute]
private Response <RawResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasSucceeded>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private RequestFailedException <OperationFailedException>k__BackingField;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasSucceeded { get; }
    [NullableAttribute("2")]
public RequestFailedException OperationFailedException { get; }
    private OperationState(Response rawResponse, bool hasCompleted, bool hasSucceeded, RequestFailedException operationFailedException);
    [CompilerGeneratedAttribute]
public Response get_RawResponse();
    [CompilerGeneratedAttribute]
public bool get_HasCompleted();
    [CompilerGeneratedAttribute]
public bool get_HasSucceeded();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public RequestFailedException get_OperationFailedException();
    public static OperationState Success(Response rawResponse);
    public static OperationState Failure(Response rawResponse, RequestFailedException operationFailedException);
    public static OperationState Pending(Response rawResponse);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.OperationState`1 : ValueType {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Response <RawResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasSucceeded>k__BackingField;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestFailedException <OperationFailedException>k__BackingField;
    [NullableAttribute("1")]
public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasSucceeded { get; }
    public T Value { get; }
    public RequestFailedException OperationFailedException { get; }
    private OperationState`1(Response rawResponse, bool hasCompleted, bool hasSucceeded, T value, RequestFailedException operationFailedException);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Response get_RawResponse();
    [CompilerGeneratedAttribute]
public bool get_HasCompleted();
    [CompilerGeneratedAttribute]
public bool get_HasSucceeded();
    [CompilerGeneratedAttribute]
public T get_Value();
    [CompilerGeneratedAttribute]
public RequestFailedException get_OperationFailedException();
    [NullableContextAttribute("1")]
public static OperationState`1<T> Success(Response rawResponse, T value);
    [NullableContextAttribute("1")]
public static OperationState`1<T> Failure(Response rawResponse, RequestFailedException operationFailedException);
    [NullableContextAttribute("1")]
public static OperationState`1<T> Pending(Response rawResponse);
}
internal static class Azure.Core.Page : object {
    [NullableContextAttribute("1")]
public static Page`1<T> FromValues(IEnumerable`1<T> values, string continuationToken, Response response);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.PageableHelpers : object {
    private static Byte[] DefaultItemPropertyName;
    private static Byte[] DefaultNextLinkPropertyName;
    private static PageableHelpers();
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.PageableHelpers/<CreateAsyncPageable>d__10`1")]
public static ValueTask`1<Operation`1<AsyncPageable`1<T>>> CreateAsyncPageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Operation`1<Pageable`1<T>> CreatePageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreateEnumerable(Func`2<Nullable`1<int>, Page`1<T>> firstPageFunc, Func`3<string, Nullable`1<int>, Page`1<T>> nextPageFunc, Nullable`1<int> pageSize);
    public static AsyncPageable`1<T> CreateAsyncEnumerable(Func`2<Nullable`1<int>, Task`1<Page`1<T>>> firstPageFunc, Func`3<string, Nullable`1<int>, Task`1<Page`1<T>>> nextPageFunc, Nullable`1<int> pageSize);
    private static ValueTuple`2<List`1<T>, string> ParseResponseForBinaryData(Response response, Byte[] itemPropertyName, Byte[] nextLinkPropertyName);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static object <ParseResponseForBinaryData>g__ReadBinaryData|19_0(Utf8JsonReader& r, ReadOnlyMemory`1& content);
}
internal static class Azure.Core.Pipeline.ActivityExtensions : object {
    [CompilerGeneratedAttribute]
private static bool <SupportsActivitySource>k__BackingField;
    public static bool SupportsActivitySource { get; private set; }
    private static ActivityExtensions();
    [CompilerGeneratedAttribute]
public static bool get_SupportsActivitySource();
    [CompilerGeneratedAttribute]
private static void set_SupportsActivitySource(bool value);
    public static void ResetFeatureSwitch();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.ClientDiagnostics : DiagnosticScopeFactory {
    public ClientDiagnostics(ClientOptions options, Nullable`1<bool> suppressNestedClientActivities);
    public ClientDiagnostics(string optionsNamespace, string providerNamespace, DiagnosticsOptions diagnosticsOptions, Nullable`1<bool> suppressNestedClientActivities);
    internal static HttpMessageSanitizer CreateMessageSanitizer(DiagnosticsOptions diagnostics);
    internal static string GetResourceProviderNamespace(Assembly assembly);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.Pipeline.DiagnosticScope : ValueType {
    private static string AzureSdkScopeLabel;
    internal static string OpenTelemetrySchemaAttribute;
    internal static string OpenTelemetrySchemaVersion;
    private static object AzureSdkScopeValue;
    [NullableAttribute("2")]
private ActivityAdapter _activityAdapter;
    private bool _suppressNestedClientActivities;
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    public bool IsEnabled { get; }
    [RequiresUnreferencedCodeAttribute("The diagnosticSourceArgs are used in a call to DiagnosticSource.Write, all necessary properties need to be preserved on the type being passed in using DynamicDependency attributes.")]
internal DiagnosticScope(string scopeName, DiagnosticListener source, object diagnosticSourceArgs, ActivitySource activitySource, ActivityKind kind, bool suppressNestedClientActivities);
    private static DiagnosticScope();
    [CompilerGeneratedAttribute]
public bool get_IsEnabled();
    public void AddAttribute(string name, string value);
    public void AddIntegerAttribute(string name, int value);
    public void AddLongAttribute(string name, long value);
    public void AddAttribute(string name, T value, Func`2<T, string> format);
    public void AddLink(string traceparent, string tracestate, IDictionary`2<string, object> attributes);
    public void Start();
    public void SetDisplayName(string displayName);
    public void SetStartTime(DateTime dateTime);
    public void SetTraceContext(string traceparent, string tracestate);
    public sealed virtual void Dispose();
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void Failed(Exception exception);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void Failed(string errorCode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.DiagnosticScopeFactory : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Dictionary`2<string, DiagnosticListener> _listeners;
    [NullableAttribute("2")]
private string _resourceProviderNamespace;
    [NullableAttribute("2")]
private DiagnosticListener _source;
    private bool _suppressNestedClientActivities;
    private bool _isStable;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ConcurrentDictionary`2<string, ActivitySource> ActivitySources;
    [CompilerGeneratedAttribute]
private bool <IsActivityEnabled>k__BackingField;
    public bool IsActivityEnabled { get; }
    public DiagnosticScopeFactory(string clientNamespace, string resourceProviderNamespace, bool isActivityEnabled, bool suppressNestedClientActivities, bool isStable);
    private static DiagnosticScopeFactory();
    [CompilerGeneratedAttribute]
public bool get_IsActivityEnabled();
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
public DiagnosticScope CreateScope(string name, ActivityKind kind);
    private ActivitySource GetActivitySource(string ns, string name);
}
[ExtensionAttribute]
internal static class Azure.Core.Pipeline.TaskExtensions : object {
    [ExtensionAttribute]
public static WithCancellationTaskAwaitable AwaitWithCancellation(Task task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static WithCancellationTaskAwaitable`1<T> AwaitWithCancellation(Task`1<T> task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static WithCancellationValueTaskAwaitable`1<T> AwaitWithCancellation(ValueTask`1<T> task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static T EnsureCompleted(Task`1<T> task);
    [ExtensionAttribute]
public static void EnsureCompleted(Task task);
    [ExtensionAttribute]
public static T EnsureCompleted(ValueTask`1<T> task);
    [ExtensionAttribute]
public static void EnsureCompleted(ValueTask task);
    [ExtensionAttribute]
public static Enumerable`1<T> EnsureSyncEnumerable(IAsyncEnumerable`1<T> asyncEnumerable);
    [ExtensionAttribute]
public static ConfiguredValueTaskAwaitable`1<T> EnsureCompleted(ConfiguredValueTaskAwaitable`1<T> awaitable, bool async);
    [ExtensionAttribute]
public static ConfiguredValueTaskAwaitable EnsureCompleted(ConfiguredValueTaskAwaitable awaitable, bool async);
    [ConditionalAttribute("DEBUG")]
private static void VerifyTaskCompleted(bool isCompleted);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Core.ProtocolOperation`1 : Operation`1<T> {
    private Func`2<Response, T> _resultSelector;
    private OperationInternal`1<T> _operation;
    private IOperation _nextLinkOperation;
    public string Id { get; }
    public T Value { get; }
    public bool HasCompleted { get; }
    public bool HasValue { get; }
    internal ProtocolOperation`1(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Request request, Response response, OperationFinalStateVia finalStateVia, string scopeName, Func`2<Response, T> resultSelector);
    public virtual string get_Id();
    public virtual T get_Value();
    public virtual bool get_HasCompleted();
    public virtual bool get_HasValue();
    public virtual Response GetRawResponse();
    public virtual Response UpdateStatus(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.ProtocolOperation`1/<Azure-Core-IOperation<T>-UpdateStateAsync>d__17")]
private sealed virtual override ValueTask`1<OperationState`1<T>> Azure.Core.IOperation<T>.UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.ProtocolOperationHelpers : object {
    public static Operation`1<TTo> Convert(Operation`1<TFrom> operation, Func`2<Response, TTo> convertFunc, ClientDiagnostics diagnostics, string scopeName);
    public static ValueTask`1<Operation`1<VoidValue>> ProcessMessageWithoutResponseValueAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static Operation`1<VoidValue> ProcessMessageWithoutResponseValue(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static ValueTask`1<Operation`1<BinaryData>> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static Operation`1<BinaryData> ProcessMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    [AsyncStateMachineAttribute("Azure.Core.ProtocolOperationHelpers/<ProcessMessageAsync>d__5`1")]
public static ValueTask`1<Operation`1<T>> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil, Func`2<Response, T> resultSelector);
    public static Operation`1<T> ProcessMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil, Func`2<Response, T> resultSelector);
}
internal class Azure.Core.RawRequestUriBuilder : RequestUriBuilder {
    [NullableAttribute("1")]
private static string SchemeSeparator;
    private static char HostSeparator;
    private static char PortSeparator;
    [NullableAttribute("1")]
private static Char[] HostOrPort;
    private static char QueryBeginSeparator;
    private static char QueryContinueSeparator;
    private static char QueryValueSeparator;
    private Nullable`1<RawWritingPosition> _position;
    private static RawRequestUriBuilder();
    private static void GetQueryParts(ReadOnlySpan`1<char> queryUnparsed, ReadOnlySpan`1& name, ReadOnlySpan`1& value);
    [NullableContextAttribute("1")]
public void AppendRaw(string value, bool escape);
    private void AppendRaw(ReadOnlySpan`1<char> value, bool escape);
    [NullableContextAttribute("1")]
public void AppendRawNextLink(string nextLink, bool escape);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.RequestHeaderExtensions : object {
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, bool value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, float value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, double value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, int value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, long value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, TimeSpan value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, Guid value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, Byte[] value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, BinaryData value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string prefix, IDictionary`2<string, string> headersToAdd);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, ETag value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, MatchConditions conditions);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, RequestConditions conditions, string format);
    [ExtensionAttribute]
public static void AddDelimited(RequestHeaders headers, string name, IEnumerable`1<T> value, string delimiter);
    [ExtensionAttribute]
public static void AddDelimited(RequestHeaders headers, string name, IEnumerable`1<T> value, string delimiter, string format);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.RequestUriBuilderExtensions : object {
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, bool value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, float value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, double value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, int value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, Byte[] value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, IEnumerable`1<string> value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, DateTimeOffset value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, TimeSpan value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, Guid value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, long value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, bool value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, float value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, DateTimeOffset value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, TimeSpan value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, double value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, decimal value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, int value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, long value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, TimeSpan value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, Byte[] value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, Guid value, bool escape);
    [ExtensionAttribute]
public static void AppendQueryDelimited(RequestUriBuilder builder, string name, IEnumerable`1<T> value, string delimiter, bool escape);
    [ExtensionAttribute]
public static void AppendQueryDelimited(RequestUriBuilder builder, string name, IEnumerable`1<T> value, string delimiter, string format, bool escape);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.ResponseHeadersExtensions : object {
    private static String[] KnownFormats;
    private static ResponseHeadersExtensions();
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Byte[]& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, T& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string prefix, IDictionary`2& value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.ResponseWithHeaders : object {
    public static ResponseWithHeaders`2<T, THeaders> FromValue(T value, THeaders headers, Response rawResponse);
    public static ResponseWithHeaders`1<THeaders> FromValue(THeaders headers, Response rawResponse);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.ResponseWithHeaders`1 : object {
    private Response _rawResponse;
    [CompilerGeneratedAttribute]
private THeaders <Headers>k__BackingField;
    public THeaders Headers { get; }
    public ResponseWithHeaders`1(THeaders headers, Response rawResponse);
    public Response GetRawResponse();
    [CompilerGeneratedAttribute]
public THeaders get_Headers();
    public static Response op_Implicit(ResponseWithHeaders`1<THeaders> self);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Core.ResponseWithHeaders`2 : Response`1<T> {
    private Response _rawResponse;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private THeaders <Headers>k__BackingField;
    public T Value { get; }
    public THeaders Headers { get; }
    public ResponseWithHeaders`2(T value, THeaders headers, Response rawResponse);
    public virtual Response GetRawResponse();
    [CompilerGeneratedAttribute]
public virtual T get_Value();
    [CompilerGeneratedAttribute]
public THeaders get_Headers();
    public static Response op_Implicit(ResponseWithHeaders`2<T, THeaders> self);
}
internal class Azure.Core.SequentialDelayStrategy : DelayStrategy {
    [NullableAttribute("1")]
private static TimeSpan[] _pollingSequence;
    private static TimeSpan _maxDelay;
    private static SequentialDelayStrategy();
    [NullableContextAttribute("2")]
protected virtual TimeSpan GetNextDelayCore(Response response, int retryNumber);
}
internal static class Azure.Core.Shared.EventSourceEventFormatting : object {
    [NullableContextAttribute("1")]
public static string Format(EventWrittenEventArgs eventData);
    private static void ProcessPayloadArray(Object[] payloadArray);
    [NullableContextAttribute("2")]
private static object FormatValue(object o);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.StringRequestContent : RequestContent {
    private Byte[] _bytes;
    public StringRequestContent(string value);
    [AsyncStateMachineAttribute("Azure.Core.StringRequestContent/<WriteToAsync>d__2")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.TypeFormatters : object {
    private static string RoundtripZFormat;
    [CompilerGeneratedAttribute]
private static string <DefaultNumberFormat>k__BackingField;
    public static string DefaultNumberFormat { get; }
    private static TypeFormatters();
    [CompilerGeneratedAttribute]
public static string get_DefaultNumberFormat();
    public static string ToString(bool value);
    public static string ToString(DateTime value, string format);
    public static string ToString(DateTimeOffset value, string format);
    public static string ToString(TimeSpan value, string format);
    public static string ToString(Byte[] value, string format);
    public static string ToBase64UrlString(Byte[] value);
    public static Byte[] FromBase64UrlString(string value);
    private static int GetNumBase64PaddingCharsToAddForDecode(int inputLength);
    public static DateTimeOffset ParseDateTimeOffset(string value, string format);
    public static TimeSpan ParseTimeSpan(string value, string format);
    [NullableContextAttribute("2")]
public static string ConvertToString(object value, string format);
}
[IsReadOnlyAttribute]
internal class Azure.Core.VoidValue : ValueType {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.XmlWriterContent : RequestContent {
    private MemoryStream _stream;
    private RequestContent _content;
    [CompilerGeneratedAttribute]
private XmlWriter <XmlWriter>k__BackingField;
    public XmlWriter XmlWriter { get; }
    [CompilerGeneratedAttribute]
public XmlWriter get_XmlWriter();
    [AsyncStateMachineAttribute("Azure.Core.XmlWriterContent/<WriteToAsync>d__6")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
internal class Azure.Monitor.OpenTelemetry.Exporter.ApplicationInsightsRestClient : object {
    [NullableAttribute("1")]
private RawRequestUriBuilder _rawRequestUriBuilder;
    private HttpPipeline _pipeline;
    private string _host;
    [CompilerGeneratedAttribute]
private ClientDiagnostics <ClientDiagnostics>k__BackingField;
    internal ClientDiagnostics ClientDiagnostics { get; }
    public ApplicationInsightsRestClient(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string host);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Azure.Monitor.OpenTelemetry.Exporter.ApplicationInsightsRestClient/<InternalTrackAsync>d__1")]
internal Task`1<HttpMessage> InternalTrackAsync(IEnumerable`1<TelemetryItem> body, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Monitor.OpenTelemetry.Exporter.ApplicationInsightsRestClient/<InternalTrackAsync>d__2")]
internal Task`1<HttpMessage> InternalTrackAsync(ReadOnlyMemory`1<byte> body, CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
internal HttpMessage CreateTrackRequest(IEnumerable`1<TelemetryItem> body);
    internal HttpMessage CreateTrackRequest(ReadOnlyMemory`1<byte> body);
    [NullableContextAttribute("1")]
private HttpMessage CreateRequest(RequestContent requestContent);
    [CompilerGeneratedAttribute]
internal ClientDiagnostics get_ClientDiagnostics();
    [AsyncStateMachineAttribute("Azure.Monitor.OpenTelemetry.Exporter.ApplicationInsightsRestClient/<TrackAsync>d__12")]
public Task`1<Response`1<TrackResponse>> TrackAsync(IEnumerable`1<TelemetryItem> body, CancellationToken cancellationToken);
    public Response`1<TrackResponse> Track(IEnumerable`1<TelemetryItem> body, CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private RawRequestUriBuilder <CreateRequest>b__5_0();
}
internal static class Azure.Monitor.OpenTelemetry.Exporter.Argument : object {
    public static void AssertNotNull(T value, string name);
    public static void AssertNotNull(Nullable`1<T> value, string name);
    public static void AssertNotNullOrEmpty(IEnumerable`1<T> value, string name);
    public static void AssertNotNullOrEmpty(string value, string name);
    public static void AssertNotNullOrWhiteSpace(string value, string name);
    public static void AssertNotDefault(T& value, string name);
    public static void AssertInRange(T value, T minimum, T maximum, string name);
    public static void AssertEnumDefined(Type enumType, object value, string name);
    public static T CheckNotNull(T value, string name);
    public static string CheckNotNullOrEmpty(string value, string name);
    public static void AssertNull(T value, string name, string message);
}
[ExtensionAttribute]
public static class Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterExtensions : object {
    [ExtensionAttribute]
public static TracerProviderBuilder AddAzureMonitorTraceExporter(TracerProviderBuilder builder, Action`1<AzureMonitorExporterOptions> configure, TokenCredential credential, string name);
    [ExtensionAttribute]
public static MeterProviderBuilder AddAzureMonitorMetricExporter(MeterProviderBuilder builder, Action`1<AzureMonitorExporterOptions> configure, TokenCredential credential, string name);
    [ExtensionAttribute]
public static OpenTelemetryLoggerOptions AddAzureMonitorLogExporter(OpenTelemetryLoggerOptions loggerOptions, Action`1<AzureMonitorExporterOptions> configure, TokenCredential credential);
}
public class Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterOptions : ClientOptions {
    internal static ServiceVersion LatestVersion;
    [CompilerGeneratedAttribute]
private string <ConnectionString>k__BackingField;
    [CompilerGeneratedAttribute]
private TokenCredential <Credential>k__BackingField;
    [CompilerGeneratedAttribute]
private float <SamplingRatio>k__BackingField;
    [CompilerGeneratedAttribute]
private ServiceVersion <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StorageDirectory>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableOfflineStorage>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableStatsbeat>k__BackingField;
    public string ConnectionString { get; public set; }
    public TokenCredential Credential { get; public set; }
    public float SamplingRatio { get; public set; }
    public ServiceVersion Version { get; public set; }
    public string StorageDirectory { get; public set; }
    public bool DisableOfflineStorage { get; public set; }
    internal bool EnableStatsbeat { get; internal set; }
    public AzureMonitorExporterOptions(ServiceVersion version);
    [CompilerGeneratedAttribute]
public string get_ConnectionString();
    [CompilerGeneratedAttribute]
public void set_ConnectionString(string value);
    [CompilerGeneratedAttribute]
public TokenCredential get_Credential();
    [CompilerGeneratedAttribute]
public void set_Credential(TokenCredential value);
    [CompilerGeneratedAttribute]
public float get_SamplingRatio();
    [CompilerGeneratedAttribute]
public void set_SamplingRatio(float value);
    [CompilerGeneratedAttribute]
public ServiceVersion get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(ServiceVersion value);
    [CompilerGeneratedAttribute]
public string get_StorageDirectory();
    [CompilerGeneratedAttribute]
public void set_StorageDirectory(string value);
    [CompilerGeneratedAttribute]
public bool get_DisableOfflineStorage();
    [CompilerGeneratedAttribute]
public void set_DisableOfflineStorage(bool value);
    [CompilerGeneratedAttribute]
internal bool get_EnableStatsbeat();
    [CompilerGeneratedAttribute]
internal void set_EnableStatsbeat(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorLogExporter : BaseExporter`1<LogRecord> {
    private ITransmitter _transmitter;
    private string _instrumentationKey;
    [NullableAttribute("2")]
private AzureMonitorResource _resource;
    private bool _disposed;
    [NullableAttribute("2")]
internal AzureMonitorResource LogResource { get; }
    public AzureMonitorLogExporter(AzureMonitorExporterOptions options);
    internal AzureMonitorLogExporter(ITransmitter transmitter);
    [NullableContextAttribute("2")]
internal AzureMonitorResource get_LogResource();
    public virtual ExportResult Export(Batch`1& modreq(System.Runtime.InteropServices.InAttribute) batch);
    protected virtual void Dispose(bool disposing);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorMetricExporter : BaseExporter`1<Metric> {
    private ITransmitter _transmitter;
    private string _instrumentationKey;
    [NullableAttribute("2")]
private AzureMonitorResource _resource;
    private bool _disposed;
    [NullableAttribute("2")]
internal AzureMonitorResource MetricResource { get; }
    public AzureMonitorMetricExporter(AzureMonitorExporterOptions options);
    internal AzureMonitorMetricExporter(ITransmitter transmitter);
    [NullableContextAttribute("2")]
internal AzureMonitorResource get_MetricResource();
    public virtual ExportResult Export(Batch`1& modreq(System.Runtime.InteropServices.InAttribute) batch);
    protected virtual void Dispose(bool disposing);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorTraceExporter : BaseExporter`1<Activity> {
    private ITransmitter _transmitter;
    private string _instrumentationKey;
    private float _sampleRate;
    [NullableAttribute("2")]
private AzureMonitorResource _resource;
    private bool _disposed;
    [NullableAttribute("2")]
internal AzureMonitorResource TraceResource { get; }
    public AzureMonitorTraceExporter(AzureMonitorExporterOptions options);
    internal AzureMonitorTraceExporter(AzureMonitorExporterOptions options, ITransmitter transmitter);
    [NullableContextAttribute("2")]
internal AzureMonitorResource get_TraceResource();
    public virtual ExportResult Export(Batch`1& modreq(System.Runtime.InteropServices.InAttribute) batch);
    protected virtual void Dispose(bool disposing);
}
[DefaultMemberAttribute("Item")]
internal class Azure.Monitor.OpenTelemetry.Exporter.ChangeTrackingDictionary`2 : object {
    private IDictionary`2<TKey, TValue> _innerDictionary;
    public bool IsUndefined { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public ICollection`1<TKey> Keys { get; }
    public ICollection`1<TValue> Values { get; }
    public TValue Item { get; public set; }
    private IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys { get; }
    private IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values { get; }
    public ChangeTrackingDictionary`2(IDictionary`2<TKey, TValue> dictionary);
    public ChangeTrackingDictionary`2(IReadOnlyDictionary`2<TKey, TValue> dictionary);
    public bool get_IsUndefined();
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual ICollection`1<TKey> get_Keys();
    public sealed virtual ICollection`1<TValue> get_Values();
    public sealed virtual TValue get_Item(TKey key);
    public sealed virtual void set_Item(TKey key, TValue value);
    private sealed virtual override IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys();
    private sealed virtual override IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values();
    public sealed virtual IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual void Add(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int index);
    public sealed virtual bool Remove(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void Add(TKey key, TValue value);
    public sealed virtual bool ContainsKey(TKey key);
    public sealed virtual bool Remove(TKey key);
    public sealed virtual bool TryGetValue(TKey key, TValue& value);
    public IDictionary`2<TKey, TValue> EnsureDictionary();
    [IteratorStateMachineAttribute("Azure.Monitor.OpenTelemetry.Exporter.ChangeTrackingDictionary`2/<<GetEnumerator>g__enumerateEmpty|21_0>d")]
[CompilerGeneratedAttribute]
internal static IEnumerator`1<KeyValuePair`2<TKey, TValue>> <GetEnumerator>g__enumerateEmpty|21_0();
}
[DefaultMemberAttribute("Item")]
internal class Azure.Monitor.OpenTelemetry.Exporter.ChangeTrackingList`1 : object {
    private IList`1<T> _innerList;
    public bool IsUndefined { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public T Item { get; public set; }
    public ChangeTrackingList`1(IList`1<T> innerList);
    public ChangeTrackingList`1(IReadOnlyList`1<T> innerList);
    public bool get_IsUndefined();
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual T get_Item(int index);
    public sealed virtual void set_Item(int index, T value);
    public void Reset();
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual void Add(T item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(T item);
    public sealed virtual void CopyTo(T[] array, int arrayIndex);
    public sealed virtual bool Remove(T item);
    public sealed virtual int IndexOf(T item);
    public sealed virtual void Insert(int index, T item);
    public sealed virtual void RemoveAt(int index);
    public IList`1<T> EnsureList();
    [IteratorStateMachineAttribute("Azure.Monitor.OpenTelemetry.Exporter.ChangeTrackingList`1/<<GetEnumerator>g__enumerateEmpty|14_0>d")]
[CompilerGeneratedAttribute]
internal static IEnumerator`1<T> <GetEnumerator>g__enumerateEmpty|14_0();
}
[ExtensionAttribute]
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.ActivityExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
internal static TelemetryType GetTelemetryType(Activity activity);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Azure.Monitor.OpenTelemetry.Exporter.Internals.ActivityTagsProcessor : ValueType {
    [NullableAttribute("1")]
private static String[] s_semantics;
    [NullableAttribute("1")]
internal static HashSet`1<string> s_semanticsSet;
    public AzMonList MappedTags;
    public AzMonList UnMappedTags;
    [CompilerGeneratedAttribute]
private OperationType <activityType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AzureNamespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EndUserId>k__BackingField;
    public OperationType activityType { get; public set; }
    public string AzureNamespace { get; private set; }
    public string EndUserId { get; private set; }
    private static ActivityTagsProcessor();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public OperationType get_activityType();
    [CompilerGeneratedAttribute]
public void set_activityType(OperationType value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_AzureNamespace();
    [CompilerGeneratedAttribute]
private void set_AzureNamespace(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_EndUserId();
    [CompilerGeneratedAttribute]
private void set_EndUserId(string value);
    [NullableContextAttribute("1")]
public void CategorizeTags(Activity activity);
    public void Return();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Azure.Monitor.OpenTelemetry.Exporter.Internals.AksResourceProcessor : object {
    [NullableAttribute("1")]
private static Dictionary`2<string, Action`2<AksResourceProcessor, string>> s_propertySetters;
    [CompilerGeneratedAttribute]
private string <K8sCronjobName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <K8sDaemonSetName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <K8sDeploymentName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <K8sJobName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <K8sPodName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <K8sReplicaSetName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <K8sStatefulSetName>k__BackingField;
    public string K8sCronjobName { get; public set; }
    public string K8sDaemonSetName { get; public set; }
    public string K8sDeploymentName { get; public set; }
    public string K8sJobName { get; public set; }
    public string K8sPodName { get; public set; }
    public string K8sReplicaSetName { get; public set; }
    public string K8sStatefulSetName { get; public set; }
    private static AksResourceProcessor();
    [CompilerGeneratedAttribute]
public string get_K8sCronjobName();
    [CompilerGeneratedAttribute]
public void set_K8sCronjobName(string value);
    [CompilerGeneratedAttribute]
public string get_K8sDaemonSetName();
    [CompilerGeneratedAttribute]
public void set_K8sDaemonSetName(string value);
    [CompilerGeneratedAttribute]
public string get_K8sDeploymentName();
    [CompilerGeneratedAttribute]
public void set_K8sDeploymentName(string value);
    [CompilerGeneratedAttribute]
public string get_K8sJobName();
    [CompilerGeneratedAttribute]
public void set_K8sJobName(string value);
    [CompilerGeneratedAttribute]
public string get_K8sPodName();
    [CompilerGeneratedAttribute]
public void set_K8sPodName(string value);
    [CompilerGeneratedAttribute]
public string get_K8sReplicaSetName();
    [CompilerGeneratedAttribute]
public void set_K8sReplicaSetName(string value);
    [CompilerGeneratedAttribute]
public string get_K8sStatefulSetName();
    [CompilerGeneratedAttribute]
public void set_K8sStatefulSetName(string value);
    public string GetRoleName();
    public string GetRoleInstance();
    public void MapAttributeToProperty(KeyValuePair`2<string, object> aksAttribute);
}
internal class Azure.Monitor.OpenTelemetry.Exporter.Internals.ApplicationInsightsSampler : Sampler {
    private static SamplingResult RecordOnlySamplingResult;
    private static SamplingResult RecordAndSampleSamplingResult;
    private float samplingRatio;
    public ApplicationInsightsSampler(float samplingRatio);
    private static ApplicationInsightsSampler();
    public virtual SamplingResult ShouldSample(SamplingParameters& modreq(System.Runtime.InteropServices.InAttribute) samplingParameters);
    [NullableContextAttribute("1")]
private static double DJB2SampleScore(string traceIdHex);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.ArrayExtensions : object {
    [ExtensionAttribute]
public static string ToCommaDelimitedString(Array input);
    [ExtensionAttribute]
internal static string ToCommaDelimitedString(Array input, CultureInfo cultureInfo);
}
[IsReadOnlyAttribute]
[DefaultMemberAttribute("Item")]
internal class Azure.Monitor.OpenTelemetry.Exporter.Internals.AzMonList : ValueType {
    private static int s_allocationSize;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private KeyValuePair`2[] data;
    [CompilerGeneratedAttribute]
private int <Length>k__BackingField;
    public int Length { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public KeyValuePair`2& Item { get; }
    private AzMonList(KeyValuePair`2[] data, int length);
    private static AzMonList();
    [CompilerGeneratedAttribute]
public int get_Length();
    public KeyValuePair`2& get_Item(int index);
    public static AzMonList Initialize();
    public static void Add(AzMonList& list, KeyValuePair`2<string, object> keyValuePair);
    public static void Clear(AzMonList& list);
    [NullableContextAttribute("1")]
public static object GetTagValue(AzMonList& list, string tagName);
    [NullableContextAttribute("1")]
internal static Object[] GetTagValues(AzMonList& list, String[] tagNames);
    public void Return();
    [NullableContextAttribute("1")]
private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.AzMonListExtensions : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal static HashSet`1<string> s_dbSystems;
    private static AzMonListExtensions();
    [ExtensionAttribute]
internal static string GetRequestUrl(AzMonList tagObjects);
    [ExtensionAttribute]
internal static string GetDependencyUrl(AzMonList tagObjects);
    [NullableContextAttribute("1")]
internal static string GetDefaultHttpPort(string httpScheme);
    [NullableContextAttribute("1")]
internal static string GetDefaultDbPort(string dbSystem);
    [ExtensionAttribute]
internal static string GetUrlUsingHttpUrl(AzMonList tagObjects);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
internal static string GetUrlUsingHttpHost(AzMonList tagObjects, string httpScheme, string defaultPort, string httpTarget);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
internal static string GetUrlUsingHostAndPort(AzMonList tagObjects, string httpScheme, string host, string port, string defaultPort, string httpTarget);
    [ExtensionAttribute]
internal static string GetHostUsingNetPeerAttributes(AzMonList tagObjects);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
internal static string GetTargetUsingNetPeerAttributes(AzMonList tagObjects, string defaultPort);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
internal static string GetTargetUsingServerAttributes(AzMonList tagObjects, string defaultPort);
    [ExtensionAttribute]
internal static string GetHttpDependencyTarget(AzMonList tagObjects);
    [ExtensionAttribute]
internal static ValueTuple`2<string, string> GetDbDependencyTargetAndName(AzMonList tagObjects);
    [ExtensionAttribute]
internal static string GetDependencyTarget(AzMonList tagObjects, OperationType type);
    [ExtensionAttribute]
internal static string GetHttpDependencyName(AzMonList tagObjects, string httpUrl);
    [ExtensionAttribute]
internal static string GetDependencyType(AzMonList tagObjects, OperationType operationType);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.AzMonNewListExtensions : object {
    [ExtensionAttribute]
internal static string GetNewSchemaRequestUrl(AzMonList tagObjects);
    [ExtensionAttribute]
internal static ValueTuple`2<string, string> GetMessagingUrlAndSourceOrTarget(AzMonList tagObjects, ActivityKind activityKind);
    [ExtensionAttribute]
internal static string GetNewSchemaHttpDependencyTarget(AzMonList tagObjects);
    [ExtensionAttribute]
internal static string GetNewSchemaHttpDependencyName(AzMonList tagObjects, string httpUrl);
    [ExtensionAttribute]
internal static string GetNewSchemaDependencyTarget(AzMonList tagObjects, OperationType type);
    private static bool IsDefaultPort(int port);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Azure.Monitor.OpenTelemetry.Exporter.Internals.AzureMonitorResource : object {
    [CompilerGeneratedAttribute]
private string <RoleName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RoleName_Truncated>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RoleInstance>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RoleInstance_Truncated>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceVersion_Truncated>k__BackingField;
    [CompilerGeneratedAttribute]
private MonitorBase <MonitorBaseData>k__BackingField;
    internal string RoleName { get; }
    internal string RoleName_Truncated { get; }
    internal string RoleInstance { get; }
    internal string RoleInstance_Truncated { get; }
    internal string ServiceVersion_Truncated { get; }
    internal MonitorBase MonitorBaseData { get; }
    public AzureMonitorResource(string roleName, string roleInstance, string serviceVersion, MonitorBase monitorBaseData);
    [CompilerGeneratedAttribute]
internal string get_RoleName();
    [CompilerGeneratedAttribute]
internal string get_RoleName_Truncated();
    [CompilerGeneratedAttribute]
internal string get_RoleInstance();
    [CompilerGeneratedAttribute]
internal string get_RoleInstance_Truncated();
    [CompilerGeneratedAttribute]
internal string get_ServiceVersion_Truncated();
    [CompilerGeneratedAttribute]
internal MonitorBase get_MonitorBaseData();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Monitor.OpenTelemetry.Exporter.Internals.AzureMonitorTransmitter : object {
    internal ApplicationInsightsRestClient _applicationInsightsRestClient;
    [NullableAttribute("2")]
internal PersistentBlobProvider _fileBlobProvider;
    [NullableAttribute("2")]
private AzureMonitorStatsbeat _statsbeat;
    private ConnectionVars _connectionVars;
    internal TransmissionStateManager _transmissionStateManager;
    [NullableAttribute("2")]
internal TransmitFromStorageHandler _transmitFromStorageHandler;
    private bool _isAadEnabled;
    private bool _disposed;
    public string InstrumentationKey { get; }
    public AzureMonitorTransmitter(AzureMonitorExporterOptions options, IPlatform platform);
    internal static ConnectionVars InitializeConnectionVars(AzureMonitorExporterOptions options, IPlatform platform);
    private static ApplicationInsightsRestClient InitializeRestClient(AzureMonitorExporterOptions options, ConnectionVars connectionVars, Boolean& isAadEnabled);
    private static PersistentBlobProvider InitializeOfflineStorage(IPlatform platform, ConnectionVars connectionVars, bool disableOfflineStorage, string configuredStorageDirectory);
    private static AzureMonitorStatsbeat InitializeStatsbeat(AzureMonitorExporterOptions options, ConnectionVars connectionVars, IPlatform platform);
    public sealed virtual string get_InstrumentationKey();
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Azure.Monitor.OpenTelemetry.Exporter.Internals.AzureMonitorTransmitter/<TrackAsync>d__15")]
public sealed virtual ValueTask`1<ExportResult> TrackAsync(IEnumerable`1<TelemetryItem> telemetryItems, TelemetryItemOrigin origin, bool async, CancellationToken cancellationToken);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.ConnectionString.AadHelper : object {
    public static string DefaultAadScope;
    public static string GetScope(string audience);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.ConnectionString.ConnectionStringParser : object {
    public static ConnectionVars GetValues(string connectionString);
    [ExtensionAttribute]
internal static string GetAADAudience(ConnectionString connectionString);
    [ExtensionAttribute]
internal static string GetInstrumentationKey(ConnectionString connectionString);
    [ExtensionAttribute]
internal static string GetIngestionEndpoint(ConnectionString connectionString);
    [ExtensionAttribute]
internal static string GetLiveEndpoint(ConnectionString connectionString);
    [ExtensionAttribute]
internal static string GetEndpoint(ConnectionString connectionString, string endpointKeyName, string prefix, string defaultValue);
    internal static bool TryBuildUri(string prefix, string suffix, Uri& uri, string location);
    [ExtensionAttribute]
internal static bool TryGetNonRequiredValue(ConnectionString connectionString, string key, String& value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Monitor.OpenTelemetry.Exporter.Internals.ConnectionString.ConnectionVars : object {
    [CompilerGeneratedAttribute]
private string <InstrumentationKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IngestionEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LiveEndpoint>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <AadAudience>k__BackingField;
    public string InstrumentationKey { get; }
    public string IngestionEndpoint { get; }
    public string LiveEndpoint { get; }
    [NullableAttribute("2")]
public string AadAudience { get; }
    public ConnectionVars(string instrumentationKey, string ingestionEndpoint, string liveEndpoint, string aadAudience);
    [CompilerGeneratedAttribute]
public string get_InstrumentationKey();
    [CompilerGeneratedAttribute]
public string get_IngestionEndpoint();
    [CompilerGeneratedAttribute]
public string get_LiveEndpoint();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_AadAudience();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.ConnectionString.Constants : object {
    internal static string DefaultIngestionEndpoint;
    internal static string DefaultLiveEndpoint;
    internal static string IngestionPrefix;
    internal static string LivePrefix;
    internal static string IngestionExplicitEndpointKey;
    internal static string LiveExplicitEndpointKey;
    internal static string InstrumentationKeyKey;
    internal static string EndpointSuffixKey;
    internal static string LocationKey;
    internal static string AADAudienceKey;
    internal static int ConnectionStringMaxLength;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Monitor.OpenTelemetry.Exporter.Internals.Diagnostics.AzureMonitorExporterEventListener : EventListener {
    private List`1<EventSource> eventSources;
    public virtual void Dispose();
    protected virtual void OnEventSourceCreated(EventSource eventSource);
    protected virtual void OnEventWritten(EventWrittenEventArgs eventData);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[EventSourceAttribute]
internal class Azure.Monitor.OpenTelemetry.Exporter.Internals.Diagnostics.AzureMonitorExporterEventSource : EventSource {
    internal static string EventSourceName;
    internal static AzureMonitorExporterEventSource Log;
    private static AzureMonitorExporterEventSource();
    [NonEventAttribute]
private bool IsEnabled(EventLevel eventLevel);
    [NonEventAttribute]
public void FailedToExport(string exporterName, string instrumentationKey, Exception ex);
    [EventAttribute("6")]
public void FailedToExport(string exporterName, string instrumentationKey, string exceptionMessage);
    [NonEventAttribute]
public void FailedToTransmit(Exception ex);
    [EventAttribute("7")]
public void FailedToTransmit(string exceptionMessage);
    [NullableContextAttribute("2")]
[NonEventAttribute]
public void TransmissionFailed(int statusCode, TelemetryItemOrigin origin, bool isAadEnabled, bool willRetry, ConnectionVars connectionVars, string requestEndpoint, Response response);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
[EventAttribute("8")]
public void TransmissionFailed(int statusCode, string errorMessage, string action, string origin, bool isAadEnabled, string instrumentationKey, string configuredEndpoint, string actualEndpoint);
    [EventAttribute("9")]
public void DisposedObject(string name);
    [NonEventAttribute]
public void VmMetadataFailed(Exception ex);
    [EventAttribute("10")]
public void VmMetadataFailed(string exceptionMessage);
    [NonEventAttribute]
public void StatsbeatFailed(Exception ex);
    [EventAttribute("11")]
public void StatsbeatFailed(string exceptionMessage);
    [NonEventAttribute]
public void FailedToParseConnectionString(Exception ex);
    [EventAttribute("12")]
public void FailedToParseConnectionString(string exceptionMessage);
    [EventAttribute("13")]
public void UnsupportedMetricType(string metricTypeName);
    [NonEventAttribute]
public void FailedToConvertLogRecord(string instrumentationKey, Exception ex);
    [EventAttribute("14")]
public void FailedToConvertLogRecord(string instrumentationKey, string exceptionMessage);
    [NonEventAttribute]
public void FailedToConvertMetricPoint(string meterName, string instrumentName, Exception ex);
    [EventAttribute("15")]
public void FailedToConvertMetricPoint(string meterName, string instrumentName, string exceptionMessage);
    [NonEventAttribute]
public void FailedToConvertActivity(string activitySourceName, string activityDisplayName, Exception ex);
    [EventAttribute("16")]
public void FailedToConvertActivity(string activitySourceName, string activityDisplayName, string exceptionMessage);
    [NonEventAttribute]
public void FailedToExtractActivityEvent(string activitySourceName, string activityDisplayName, Exception ex);
    [EventAttribute("17")]
public void FailedToExtractActivityEvent(string activitySourceName, string activityDisplayName, string exceptionMessage);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
[EventAttribute("18")]
public void ActivityLinksIgnored(int maxLinksAllowed, string activitySourceName, string activityDisplayName);
    [EventAttribute("19")]
public void RedirectHeaderParseFailed();
    [EventAttribute("20")]
public void ParseRedirectCacheFailed();
    [NonEventAttribute]
public void ErrorCreatingStorageFolder(string path, Exception ex);
    [EventAttribute("21")]
public void ErrorCreatingStorageFolder(string path, string exceptionMessage);
    [NonEventAttribute]
public void ErrorInitializingRoleInstanceToHostName(Exception ex);
    [EventAttribute("22")]
public void ErrorInitializingRoleInstanceToHostName(string exceptionMessage);
    [NonEventAttribute]
public void ErrorInitializingPartOfSdkVersion(string typeName, Exception ex);
    [EventAttribute("23")]
public void ErrorInitializingPartOfSdkVersion(string typeName, string exceptionMessage);
    [NonEventAttribute]
public void SdkVersionCreateFailed(Exception ex);
    [EventAttribute("24")]
public void SdkVersionCreateFailed(string exceptionMessage);
    [NonEventAttribute]
public void FailedToTransmitFromStorage(bool isAadEnabled, string instrumentationKey, Exception ex);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
[EventAttribute("25")]
public void FailedToTransmitFromStorage(bool isAadEnabled, string instrumentationKey, string exceptionMessage);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
[EventAttribute("26")]
public void TransmitFromStorageSuccess(bool isAadEnabled, string instrumentationKey);
    [EventAttribute("27")]
public void SetAADCredentialsToPipeline(string credentialTypeName, string scope);
    [EventAttribute("28")]
public void InitializedPersistentStorage(string instrumentationKey, string storageDirectory);
    [NonEventAttribute]
public void FailedToInitializePersistentStorage(string instrumentationKey, Exception ex);
    [EventAttribute("29")]
public void FailedToInitializePersistentStorage(string instrumentationKey, string exceptionMessage);
    [EventAttribute("30")]
public void StatsbeatDisabled();
    [NonEventAttribute]
public void ErrorInitializingStatsbeat(ConnectionVars connectionVars, Exception ex);
    [EventAttribute("31")]
public void ErrorInitializingStatsbeat(string instrumentationKey, string configuredEndpoint, string exceptionMessage);
    [NonEventAttribute]
public void TransmissionSuccess(TelemetryItemOrigin origin, bool isAadEnabled, string instrumentationKey);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
[EventAttribute("32")]
public void TransmissionSuccess(string origin, bool isAadEnabled, string instrumentationKey);
    [NonEventAttribute]
public void TransmitterFailed(TelemetryItemOrigin origin, bool isAadEnabled, string instrumentationKey, Exception ex);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
[EventAttribute("33")]
public void TransmitterFailed(string origin, bool isAadEnabled, string instrumentationKey, string exceptionMessage);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
[EventAttribute("34")]
public void BackoffEnabled(double milliseconds);
    [NonEventAttribute]
public void FailedToDeserializeIngestionResponse(Exception ex);
    [EventAttribute("35")]
public void FailedToDeserializeIngestionResponse(string exceptionMessage);
    [EventAttribute("36")]
public void VersionStringUnexpectedLength(string typeName, string value);
    [EventAttribute("37")]
public void DeletedFailed();
    [NonEventAttribute]
public void PartialContentResponseInvalid(int totalTelemetryItems, TelemetryErrorDetails error);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
[EventAttribute("38")]
public void PartialContentResponseInvalid(int totalTelemetryItems, string errorIndex, string errorStatusCode, string errorMessage);
    [NonEventAttribute]
public void PartialContentResponseUnhandled(TelemetryErrorDetails error);
    [EventAttribute("39")]
public void PartialContentResponseUnhandled(string errorStatusCode, string errorMessage);
    [NonEventAttribute]
public void FailedToAddScopeItem(string key, Exception ex);
    [EventAttribute("40")]
public void FailedToAddScopeItem(string key, string exceptionMessage);
    [NonEventAttribute]
public void FailedToAddLogAttribute(string key, Exception ex);
    [EventAttribute("41")]
public void FailedToAddLogAttribute(string key, string exceptionMessage);
    [NonEventAttribute]
public void FailedToReadEnvironmentVariables(Exception ex);
    [EventAttribute("42")]
public void FailedToReadEnvironmentVariables(string errorMessage);
    [NonEventAttribute]
public void ErrorAddingActivityTagsAsCustomProperties(Exception ex);
    [EventAttribute("43")]
public void ErrorAddingActivityTagsAsCustomProperties(string errorMessage);
}
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.Diagnostics.TelemetryDebugWriter : object {
    [NullableContextAttribute("1")]
public static void WriteMessage(string message);
    [NullableContextAttribute("1")]
public static void WriteTelemetry(NDJsonWriter content);
    public static void WriteTelemetryFromStorage(ReadOnlyMemory`1<byte> content);
}
internal enum Azure.Monitor.OpenTelemetry.Exporter.Internals.Diagnostics.TelemetryItemOrigin : Enum {
    public int value__;
    public static TelemetryItemOrigin AzureMonitorTraceExporter;
    public static TelemetryItemOrigin AzureMonitorMetricExporter;
    public static TelemetryItemOrigin AzureMonitorLogExporter;
    public static TelemetryItemOrigin Storage;
    public static TelemetryItemOrigin UnitTest;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.ExceptionExtensions : object {
    [ExtensionAttribute]
internal static string ToInvariantString(Exception exception);
    [ExtensionAttribute]
internal static Exception FlattenException(Exception exception);
}
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.HashHelper : object {
    [NullableContextAttribute("1")]
internal static string GetSHA256Hash(string input);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.HttpPipelineHelper : object {
    private static string RetryAfterHeaderName;
    internal static int MinimumRetryInterval;
    private static HttpPipelineHelper();
    internal static int GetItemsAccepted(HttpMessage message);
    internal static bool TryGetTrackResponse(HttpMessage message, TrackResponse& trackResponse);
    internal static int GetRetryInterval(Response httpResponse);
    [NullableContextAttribute("2")]
internal static bool TryGetRetryIntervalTimespan(Response httpResponse, TimeSpan& retryAfter);
    internal static Byte[] GetSerializedContent(IEnumerable`1<TelemetryItem> body);
    [NullableContextAttribute("2")]
internal static bool TryGetRequestContent(RequestContent content, Byte[]& requestContent);
    [NullableContextAttribute("2")]
internal static Byte[] GetPartialContentForRetry(TrackResponse trackResponse, RequestContent content);
    internal static ExportResult IsSuccess(HttpMessage httpMessage);
    internal static ExportResult HandleFailures(HttpMessage httpMessage, PersistentBlobProvider blobProvider, ConnectionVars connectionVars, TelemetryItemOrigin origin, bool isAadEnabled);
    internal static void HandleFailures(HttpMessage httpMessage, PersistentBlob blob, PersistentBlobProvider blobProvider, ConnectionVars connectionVars, bool isAadEnabled);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Monitor.OpenTelemetry.Exporter.Internals.IngestionRedirectPolicy : HttpPipelinePolicy {
    internal static int MaxRedirect;
    internal TimeSpan _defaultCacheExpirationDuration;
    private Cache`1<Uri> _cache;
    [AsyncStateMachineAttribute("Azure.Monitor.OpenTelemetry.Exporter.Internals.IngestionRedirectPolicy/<ProcessAsync>d__3")]
internal ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline, bool async);
    private static bool TryGetRedirectUri(Response response, Uri& redirectUri);
    private static bool TryGetRedirectCacheTimeSpan(Response response, TimeSpan& cacheExpirationDuration);
    private static bool IsRedirection(int status);
    public virtual void Process(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    public virtual ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
}
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.IngestionResponseHelper : object {
    [NullableContextAttribute("2")]
public static String[] GetErrorsFromResponse(Response response);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Monitor.OpenTelemetry.Exporter.Internals.InnerExceptionCountExceededException : Exception {
    public InnerExceptionCountExceededException(string message);
    public InnerExceptionCountExceededException(string message, Exception innerException);
    protected InnerExceptionCountExceededException(SerializationInfo info, StreamingContext context);
}
internal interface Azure.Monitor.OpenTelemetry.Exporter.Internals.ITransmitter {
    [NullableAttribute("1")]
public string InstrumentationKey { get; }
    public abstract virtual ValueTask`1<ExportResult> TrackAsync(IEnumerable`1<TelemetryItem> telemetryItems, TelemetryItemOrigin origin, bool async, CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
public abstract virtual string get_InstrumentationKey();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.LogsHelper : object {
    private static int Version;
    private static Action`2<LogRecordScope, IDictionary`2<string, string>> s_processScope;
    private static LogsHelper();
    internal static List`1<TelemetryItem> OtelToAzureMonitorLogs(Batch`1<LogRecord> batchLogRecord, AzureMonitorResource resource, string instrumentationKey);
    internal static string GetMessageAndSetProperties(LogRecord logRecord, IDictionary`2<string, string> properties);
    internal static string GetProblemId(Exception exception);
    internal static SeverityLevel GetSeverityLevel(LogLevel logLevel);
}
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.MetricHelper : object {
    private static int Version;
    [NullableContextAttribute("1")]
internal static List`1<TelemetryItem> OtelToAzureMonitorMetrics(Batch`1<Metric> batch, AzureMonitorResource resource, string instrumentationKey);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Monitor.OpenTelemetry.Exporter.Internals.NDJsonWriter : object {
    private static Byte[] s_separator;
    [CompilerGeneratedAttribute]
private MemoryStream <Stream>k__BackingField;
    [CompilerGeneratedAttribute]
private Utf8JsonWriter <JsonWriter>k__BackingField;
    private MemoryStream Stream { get; }
    public Utf8JsonWriter JsonWriter { get; }
    private static NDJsonWriter();
    [CompilerGeneratedAttribute]
private MemoryStream get_Stream();
    [CompilerGeneratedAttribute]
public Utf8JsonWriter get_JsonWriter();
    public void WriteNewLine();
    [NullableContextAttribute("0")]
public Memory`1<byte> ToBytes();
    public virtual string ToString();
    public sealed virtual void Dispose();
}
[FlagsAttribute]
internal enum Azure.Monitor.OpenTelemetry.Exporter.Internals.OperationType : Enum {
    public int value__;
    public static OperationType Unknown;
    public static OperationType Azure;
    public static OperationType Common;
    public static OperationType Db;
    public static OperationType FaaS;
    public static OperationType Http;
    public static OperationType Messaging;
    public static OperationType Rpc;
    public static OperationType V2;
}
[ExtensionAttribute]
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.PersistentStorage.PersistentStorageExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
internal static ExportResult SaveTelemetry(PersistentBlobProvider storage, Byte[] content);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.PersistentStorage.StorageHelper : object {
    internal static string GetStorageDirectory(IPlatform platform, string configuredStorageDirectory, string instrumentationKey);
    internal static string GetDefaultStorageDirectory(IPlatform platform);
    [NullableContextAttribute("2")]
private static bool TryCreateTelemetryDirectory(IPlatform platform, string path, String& createdDirectoryPath);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Monitor.OpenTelemetry.Exporter.Internals.Platform.DefaultPlatform : object {
    private IDictionary _environmentVariables;
    public sealed virtual string GetEnvironmentVariable(string name);
    public sealed virtual string GetOSPlatformName();
    public sealed virtual bool IsOSPlatform(OSPlatform osPlatform);
    public sealed virtual void CreateDirectory(string path);
    public sealed virtual string GetEnvironmentUserName();
    public sealed virtual string GetCurrentProcessName();
    public sealed virtual string GetApplicationBaseDirectory();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.Platform.EnvironmentVariableConstants : object {
    public static string APPLICATIONINSIGHTS_CONNECTION_STRING;
    public static string APPLICATIONINSIGHTS_STATSBEAT_DISABLED;
    public static string FUNCTIONS_WORKER_RUNTIME;
    public static string LOCALAPPDATA;
    public static string TEMP;
    public static string TMPDIR;
    public static string WEBSITE_HOME_STAMPNAME;
    public static string WEBSITE_HOSTNAME;
    public static string WEBSITE_SITE_NAME;
    public static string AKS_ARM_NAMESPACE_ID;
    public static string EXPORT_RESOURCE_METRIC;
    public static string ASPNETCORE_DISABLE_URL_QUERY_REDACTION;
    public static string HTTPCLIENT_DISABLE_URL_QUERY_REDACTION;
}
[NullableContextAttribute("1")]
internal interface Azure.Monitor.OpenTelemetry.Exporter.Internals.Platform.IPlatform {
    public abstract virtual string GetEnvironmentVariable(string name);
    public abstract virtual bool IsOSPlatform(OSPlatform osPlatform);
    public abstract virtual string GetOSPlatformName();
    public abstract virtual void CreateDirectory(string path);
    public abstract virtual string GetEnvironmentUserName();
    public abstract virtual string GetCurrentProcessName();
    public abstract virtual string GetApplicationBaseDirectory();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.ResourceExtensions : object {
    private static string AiSdkPrefixKey;
    private static string TelemetryDistroNameKey;
    private static string DefaultServiceName;
    private static int Version;
    [NullableContextAttribute("2")]
[ExtensionAttribute]
internal static AzureMonitorResource CreateAzureMonitorResource(Resource resource, string instrumentationKey);
}
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.ResponseStatusCodes : object {
    public static int Success;
    public static int PartialSuccess;
    public static int Unauthorized;
    public static int Forbidden;
    public static int RequestTimeout;
    public static int ResponseCodeTooManyRequests;
    public static int ResponseCodeTooManyRequestsAndRefreshCache;
    public static int InternalServerError;
    public static int BadGateway;
    public static int ServiceUnavailable;
    public static int GatewayTimeout;
}
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.SchemaConstants : object {
    public static int KVP_MaxKeyLength;
    public static int KVP_MaxValueLength;
    [NullableAttribute("1")]
public static string Duration_MaxValue;
    public static int AvailabilityData_Id_MaxLength;
    public static int AvailabilityData_Name_MaxLength;
    public static int AvailabilityData_RunLocation_MaxLength;
    public static int AvailabilityData_Message_MaxLength;
    public static int AvailabilityData_Properties_MaxKeyLength;
    public static int AvailabilityData_Properties_MaxValueLength;
    public static int AvailabilityData_Measurements_MaxKeyLength;
    public static int AvailabilityData_Duration_LessThanDays;
    public static int DataPoint_Ns_MaxLength;
    public static int DataPoint_Name_MaxLength;
    public static int EventData_Name_MaxLength;
    public static int EventData_Properties_MaxKeyLength;
    public static int EventData_Properties_MaxValueLength;
    public static int EventData_Measurements_MaxKeyLength;
    public static int ExceptionData_ProblemId_MaxLength;
    public static int ExceptionData_Properties_MaxKeyLength;
    public static int ExceptionData_Properties_MaxValueLength;
    public static int ExceptionData_Measurements_MaxKeyLength;
    public static int ExceptionDetails_TypeName_MaxLength;
    public static int ExceptionDetails_Message_MaxLength;
    public static int ExceptionDetails_Stack_MaxLength;
    public static int ExceptionDetails_Stack_MaxFrames;
    public static int MessageData_Message_MaxLength;
    public static int MessageData_Properties_MaxKeyLength;
    public static int MessageData_Properties_MaxValueLength;
    public static int MessageData_Measurements_MaxKeyLength;
    public static int MetricsData_Properties_MaxKeyLength;
    public static int MetricsData_Properties_MaxValueLength;
    public static int PageViewData_Id_MaxLength;
    public static int PageViewData_Name_MaxLength;
    public static int PageViewData_Url_MaxLength;
    public static int PageViewData_ReferredUri_MaxLength;
    public static int PageViewData_Properties_MaxKeyLength;
    public static int PageViewData_Properties_MaxValueLength;
    public static int PageViewData_Measurements_MaxKeyLength;
    public static int PageViewData_Duration_LessThanDays;
    public static int PageViewPerfData_Id_MaxLength;
    public static int PageViewPerfData_Name_MaxLength;
    public static int PageViewPerfData_Url_MaxLength;
    public static int PageViewPerfData_Properties_MaxKeyLength;
    public static int PageViewPerfData_Properties_MaxValueLength;
    public static int PageViewPerfData_Measurements_MaxKeyLength;
    public static int PageViewPerfData_Duration_LessThanDays;
    public static int RemoteDependencyData_Id_MaxLength;
    public static int RemoteDependencyData_Name_MaxLength;
    public static int RemoteDependencyData_ResultCode_MaxLength;
    public static int RemoteDependencyData_Data_MaxLength;
    public static int RemoteDependencyData_Type_MaxLength;
    public static int RemoteDependencyData_Target_MaxLength;
    public static int RemoteDependencyData_Properties_MaxKeyLength;
    public static int RemoteDependencyData_Properties_MaxValueLength;
    public static int RemoteDependencyData_Measurements_MaxKeyLength;
    public static TimeSpan RemoteDependencyData_Duration_LessThanDays;
    public static int RequestData_Id_MaxLength;
    public static int RequestData_Name_MaxLength;
    public static int RequestData_ResponseCode_MaxLength;
    public static int RequestData_Source_MaxLength;
    public static int RequestData_Url_MaxLength;
    public static int RequestData_Properties_MaxKeyLength;
    public static int RequestData_Properties_MaxValueLength;
    public static int RequestData_Measurements_MaxKeyLength;
    public static TimeSpan RequestData_Duration_LessThanDays;
    public static int StackFrame_Method_MaxLength;
    public static int StackFrame_Assembly_MaxLength;
    public static int StackFrame_FileName_MaxLength;
    public static int TelemetryEnvelope_Seq_MaxLength;
    public static int TelemetryEnvelope_Name_MaxLength;
    public static int TelemetryEnvelope_Time_MaxLength;
    public static int TelemetryEnvelope_InstrumentationKey_MaxLength;
    public static int Tags_AiOperationId_MaxLength;
    public static int Tags_AiOperationName_MaxLength;
    public static int Tags_AiOperationParentId_MaxLength;
    public static int Tags_AiUserAuthUserId_MaxLength;
    public static int Tags_AiApplicationVer_MaxLength;
    public static int Tags_AiCloudRole_MaxLength;
    public static int Tags_AiCloudRoleInstance_MaxLength;
    public static int Tags_AiInternalSdkVersion_MaxLength;
    private static SchemaConstants();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.SdkVersionUtils : object {
    private static string s_prefix;
    internal static string s_sdkVersion;
    internal static bool s_isDistro;
    internal static string SdkVersionPrefix { get; internal set; }
    internal static bool IsDistro { get; internal set; }
    private static SdkVersionUtils();
    internal static string get_SdkVersionPrefix();
    internal static void set_SdkVersionPrefix(string value);
    internal static bool get_IsDistro();
    internal static void set_IsDistro(bool value);
    [NullableContextAttribute("1")]
internal static string GetVersion(Type type);
    private static string GetSdkVersion();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.SemanticConventions : object {
    public static string AttributeServiceName;
    public static string AttributeServiceNamespace;
    public static string AttributeServiceInstance;
    public static string AttributeServiceVersion;
    public static string AttributeTelemetrySdkName;
    public static string AttributeTelemetrySdkLanguage;
    public static string AttributeTelemetrySdkVersion;
    public static string AttributeContainerName;
    public static string AttributeContainerImage;
    public static string AttributeContainerTag;
    public static string AttributeFaasName;
    public static string AttributeFaasId;
    public static string AttributeFaasVersion;
    public static string AttributeFaasInstance;
    public static string AttributeK8sCluster;
    public static string AttributeK8sCronJob;
    public static string AttributeK8sDaemonSet;
    public static string AttributeK8sDeployment;
    public static string AttributeK8sJob;
    public static string AttributeK8sNamespace;
    public static string AttributeK8sPod;
    public static string AttributeK8sReplicaSet;
    public static string AttributeK8sStatefulSet;
    public static string AttributeHostHostname;
    public static string AttributeHostId;
    public static string AttributeHostName;
    public static string AttributeHostType;
    public static string AttributeHostImageName;
    public static string AttributeHostImageId;
    public static string AttributeHostImageVersion;
    public static string AttributeProcessId;
    public static string AttributeProcessExecutableName;
    public static string AttributeProcessExecutablePath;
    public static string AttributeProcessCommand;
    public static string AttributeProcessCommandLine;
    public static string AttributeProcessUsername;
    public static string AttributeCloudProvider;
    public static string AttributeCloudAccount;
    public static string AttributeCloudRegion;
    public static string AttributeCloudZone;
    public static string AttributeComponent;
    public static string AttributeNetTransport;
    public static string AttributeNetPeerIp;
    public static string AttributeNetPeerPort;
    public static string AttributeNetPeerName;
    public static string AttributeNetHostIp;
    public static string AttributeNetHostPort;
    public static string AttributeNetHostName;
    public static string AttributeEnduserId;
    public static string AttributeEnduserRole;
    public static string AttributeEnduserScope;
    public static string AttributePeerService;
    public static string AttributeHttpMethod;
    public static string AttributeHttpUrl;
    public static string AttributeHttpTarget;
    public static string AttributeHttpHost;
    public static string AttributeHttpScheme;
    public static string AttributeHttpStatusCode;
    public static string AttributeHttpStatusText;
    public static string AttributeHttpFlavor;
    public static string AttributeHttpServerName;
    public static string AttributeHttpHostName;
    public static string AttributeHttpHostPort;
    public static string AttributeHttpRoute;
    public static string AttributeHttpUserAgent;
    public static string AttributeHttpRequestContentLength;
    public static string AttributeHttpRequestContentLengthUncompressed;
    public static string AttributeHttpResponseContentLength;
    public static string AttributeHttpResponseContentLengthUncompressed;
    public static string AttributeDbSystem;
    public static string AttributeDbConnectionString;
    public static string AttributeDbUser;
    public static string AttributeDbMsSqlInstanceName;
    public static string AttributeDbJdbcDriverClassName;
    public static string AttributeDbName;
    public static string AttributeDbStatement;
    public static string AttributeDbOperation;
    public static string AttributeDbInstance;
    public static string AttributeDbUrl;
    public static string AttributeDbCassandraKeyspace;
    public static string AttributeDbHBaseNamespace;
    public static string AttributeDbRedisDatabaseIndex;
    public static string AttributeDbMongoDbCollection;
    public static string AttributeRpcMethod;
    public static string AttributeRpcStatus;
    public static string AttributeRpcService;
    public static string AttributeRpcSystem;
    public static string AttributeMessageType;
    public static string AttributeMessageId;
    public static string AttributeMessageCompressedSize;
    public static string AttributeMessageUncompressedSize;
    public static string AttributeFaasTrigger;
    public static string AttributeFaasExecution;
    public static string AttributeFaasColdStart;
    public static string AttributeFaasDocumentCollection;
    public static string AttributeFaasDocumentOperation;
    public static string AttributeFaasDocumentTime;
    public static string AttributeFaasDocumentName;
    public static string AttributeFaasTime;
    public static string AttributeFaasCron;
    public static string AttributeMessagingSystem;
    public static string AttributeMessagingDestination;
    public static string AttributeMessagingDestinationKind;
    public static string AttributeMessagingTempDestination;
    public static string AttributeMessagingProtocol;
    public static string AttributeMessagingProtocolVersion;
    public static string AttributeMessagingUrl;
    public static string AttributeMessagingMessageId;
    public static string AttributeMessagingConversationId;
    public static string AttributeMessagingPayloadSize;
    public static string AttributeMessagingPayloadCompressedSize;
    public static string AttributeMessagingOperation;
    public static string AttributeEndpointAddress;
    public static string AttributeMessageBusDestination;
    public static string AttributeAzureNameSpace;
    public static string AttributeExceptionEventName;
    public static string AttributeExceptionType;
    public static string AttributeExceptionMessage;
    public static string AttributeExceptionStacktrace;
    public static string AttributeClientAddress;
    public static string AttributeHttpRequestMethod;
    public static string AttributeHttpResponseStatusCode;
    public static string AttributeNetworkProtocolVersion;
    public static string AttributeServerAddress;
    public static string AttributeServerPort;
    public static string AttributeUrlFull;
    public static string AttributeUrlPath;
    public static string AttributeUrlScheme;
    public static string AttributeUrlQuery;
    public static string AttributeUserAgentOriginal;
    public static string AttributeServerSocketAddress;
    public static string AttributeMessagingDestinationName;
    public static string AttributeNetworkProtocolName;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonSerializableAttribute("Azure.Monitor.OpenTelemetry.Exporter.Internals.Statsbeat.VmMetadataResponse")]
[JsonSerializableAttribute("System.String")]
[JsonSerializableAttribute("Azure.Monitor.OpenTelemetry.Exporter.Internals.IngestionResponseHelper/ResponseObject")]
[JsonSerializableAttribute("Azure.Monitor.OpenTelemetry.Exporter.Internals.IngestionResponseHelper/ErrorObject")]
[JsonSerializableAttribute("System.Int32")]
[GeneratedCodeAttribute("System.Text.Json.SourceGeneration", "6.0.9.1912")]
internal class Azure.Monitor.OpenTelemetry.Exporter.Internals.SourceGenerationContext : JsonSerializerContext {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<string> _String;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<VmMetadataResponse> _VmMetadataResponse;
    [NullableAttribute("2")]
private JsonTypeInfo`1<int> _Int32;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<ErrorObject> _ErrorObject;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<ErrorObject>> _ListErrorObject;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<ResponseObject> _ResponseObject;
    [CompilerGeneratedAttribute]
private static JsonSerializerOptions <s_defaultOptions>k__BackingField;
    [NullableAttribute("2")]
private static SourceGenerationContext s_defaultContext;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JsonSerializerOptions <GeneratedSerializerOptions>k__BackingField;
    private static JsonEncodedText PropName_osType;
    private static JsonEncodedText PropName_subscriptionId;
    private static JsonEncodedText PropName_vmId;
    private static JsonEncodedText PropName_itemsReceived;
    private static JsonEncodedText PropName_itemsAccepted;
    private static JsonEncodedText PropName_errors;
    private static JsonEncodedText PropName_index;
    private static JsonEncodedText PropName_statusCode;
    private static JsonEncodedText PropName_message;
    public JsonTypeInfo`1<string> String { get; }
    public JsonTypeInfo`1<VmMetadataResponse> VmMetadataResponse { get; }
    public JsonTypeInfo`1<int> Int32 { get; }
    public JsonTypeInfo`1<ErrorObject> ErrorObject { get; }
    public JsonTypeInfo`1<List`1<ErrorObject>> ListErrorObject { get; }
    public JsonTypeInfo`1<ResponseObject> ResponseObject { get; }
    private static JsonSerializerOptions s_defaultOptions { get; }
    public static SourceGenerationContext Default { get; }
    [NullableAttribute("2")]
protected JsonSerializerOptions GeneratedSerializerOptions { get; }
    public SourceGenerationContext(JsonSerializerOptions options);
    private static SourceGenerationContext();
    public JsonTypeInfo`1<string> get_String();
    public JsonTypeInfo`1<VmMetadataResponse> get_VmMetadataResponse();
    private static JsonPropertyInfo[] VmMetadataResponsePropInit(JsonSerializerContext context);
    private static void VmMetadataResponseSerializeHandler(Utf8JsonWriter writer, VmMetadataResponse value);
    public JsonTypeInfo`1<int> get_Int32();
    public JsonTypeInfo`1<ErrorObject> get_ErrorObject();
    private static JsonPropertyInfo[] ErrorObjectPropInit(JsonSerializerContext context);
    private static void ErrorObjectSerializeHandler(Utf8JsonWriter writer, ErrorObject value);
    public JsonTypeInfo`1<List`1<ErrorObject>> get_ListErrorObject();
    private static void ListErrorObjectSerializeHandler(Utf8JsonWriter writer, List`1<ErrorObject> value);
    public JsonTypeInfo`1<ResponseObject> get_ResponseObject();
    private static JsonPropertyInfo[] ResponseObjectPropInit(JsonSerializerContext context);
    private static void ResponseObjectSerializeHandler(Utf8JsonWriter writer, ResponseObject value);
    [CompilerGeneratedAttribute]
private static JsonSerializerOptions get_s_defaultOptions();
    public static SourceGenerationContext get_Default();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual JsonSerializerOptions get_GeneratedSerializerOptions();
    private JsonConverter GetRuntimeProvidedCustomConverter(Type type);
    public virtual JsonTypeInfo GetTypeInfo(Type type);
}
[ExtensionAttribute]
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.StackFrameExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
public static MethodBase GetMethodWithoutWarning(StackFrame stackFrame);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.StandardMetricConstants : object {
    internal static string StandardMetricMeterName;
    internal static string RequestDurationInstrumentName;
    internal static string DependencyDurationInstrumentName;
    internal static string RequestDurationMetricIdValue;
    internal static string RequestSuccessKey;
    internal static string RequestResultCodeKey;
    internal static string DependencyDurationMetricIdValue;
    internal static string DependencySuccessKey;
    internal static string DependencyResultCodeKey;
    internal static string DependencyTypeKey;
    internal static string DependencyTargetKey;
    internal static string IsSyntheticKey;
    internal static string IsAutoCollectedKey;
    internal static string CloudRoleNameKey;
    internal static string CloudRoleInstanceKey;
    internal static string MetricIdKey;
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Monitor.OpenTelemetry.Exporter.Internals.StandardMetricsExtractionProcessor : BaseProcessor`1<Activity> {
    private bool _disposed;
    [NullableAttribute("2")]
private AzureMonitorResource _resource;
    [NullableAttribute("2")]
internal MeterProvider _meterProvider;
    private Meter _meter;
    private Histogram`1<double> _requestDuration;
    private Histogram`1<double> _dependencyDuration;
    internal static IReadOnlyDictionary`2<string, string> s_standardMetricNameMapping;
    [NullableAttribute("2")]
internal AzureMonitorResource StandardMetricResource { get; }
    internal StandardMetricsExtractionProcessor(AzureMonitorMetricExporter metricExporter);
    private static StandardMetricsExtractionProcessor();
    [NullableContextAttribute("2")]
internal AzureMonitorResource get_StandardMetricResource();
    public virtual void OnEnd(Activity activity);
    private void ReportRequestDurationMetric(Activity activity);
    private void ReportDependencyDurationMetric(Activity activity);
    protected virtual void Dispose(bool disposing);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Azure.Monitor.OpenTelemetry.Exporter.Internals.Statsbeat.AzureMonitorStatsbeat : object {
    [NullableAttribute("1")]
private static Meter s_myMeter;
    internal string _statsbeat_ConnectionString;
    private string _resourceProviderId;
    private string _resourceProvider;
    private static string s_operatingSystem;
    private string _customer_Ikey;
    [NullableAttribute("1")]
private IPlatform _platform;
    internal MeterProvider _attachStatsbeatMeterProvider;
    private static string s_runtimeVersion { get; }
    private static string s_sdkVersion { get; }
    private static bool s_hasSdkPrefix { get; }
    [NullableAttribute("1")]
internal static Regex s_endpoint_pattern { get; }
    [NullableContextAttribute("1")]
internal AzureMonitorStatsbeat(ConnectionVars connectionStringVars, IPlatform platform);
    private static AzureMonitorStatsbeat();
    private static string get_s_runtimeVersion();
    private static string get_s_sdkVersion();
    private static bool get_s_hasSdkPrefix();
    [NullableContextAttribute("1")]
internal static Regex get_s_endpoint_pattern();
    [NullableContextAttribute("1")]
internal static string GetStatsbeatConnectionString(string ingestionEndpoint);
    [NullableContextAttribute("0")]
private Measurement`1<int> GetAttachStatsbeat();
    private static VmMetadataResponse GetVmMetadataResponse();
    [NullableContextAttribute("1")]
private void SetResourceProviderDetails(IPlatform platform);
    public sealed virtual void Dispose();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private Measurement`1<int> <.ctor>b__16_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.Statsbeat.StatsbeatConstants : object {
    internal static string Statsbeat_ConnectionString_NonEU;
    internal static string Statsbeat_ConnectionString_EU;
    internal static HashSet`1<string> s_EU_Endpoints;
    internal static HashSet`1<string> s_non_EU_Endpoints;
    internal static string AMS_Url;
    internal static int AttachStatsbeatInterval;
    internal static string AttachStatsbeatMeterName;
    internal static string AttachStatsbeatMetricName;
    private static StatsbeatConstants();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Azure.Monitor.OpenTelemetry.Exporter.Internals.Statsbeat.VmMetadataResponse : object {
    [CompilerGeneratedAttribute]
private string <osType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <subscriptionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <vmId>k__BackingField;
    public string osType { get; public set; }
    public string subscriptionId { get; public set; }
    public string vmId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_osType();
    [CompilerGeneratedAttribute]
public void set_osType(string value);
    [CompilerGeneratedAttribute]
public string get_subscriptionId();
    [CompilerGeneratedAttribute]
public void set_subscriptionId(string value);
    [CompilerGeneratedAttribute]
public string get_vmId();
    [CompilerGeneratedAttribute]
public void set_vmId(string value);
}
[ExtensionAttribute]
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.StringExtensions : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static string Truncate(string input, int maxLength);
}
internal enum Azure.Monitor.OpenTelemetry.Exporter.Internals.TelemetryType : Enum {
    public int value__;
    public static TelemetryType Request;
    public static TelemetryType Dependency;
    public static TelemetryType Message;
    public static TelemetryType Event;
    public static TelemetryType Metric;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Monitor.OpenTelemetry.Exporter.Internals.TraceHelper : object {
    private static int Version;
    private static int MaxlinksAllowed;
    internal static List`1<TelemetryItem> OtelToAzureMonitorTrace(Batch`1<Activity> batchActivity, AzureMonitorResource azureMonitorResource, string instrumentationKey, float sampleRate);
    internal static void AddPropertiesToTelemetry(IDictionary`2<string, string> destination, AzMonList& UnMappedTags);
    internal static void AddKvpToDictionary(IDictionary`2<string, string> destination, KeyValuePair`2<string, object> keyValuePair);
    internal static void AddKvpToDictionary(IDictionary`2<string, string> destination, string key, string value);
    internal static void AddActivityLinksToProperties(Activity activity, AzMonList& UnMappedTags);
    internal static ActivityTagsProcessor EnumerateActivityTags(Activity activity);
    internal static string GetOperationName(Activity activity, AzMonList& MappedTags);
    internal static string GetOperationNameV2(Activity activity, AzMonList& MappedTags);
    private static void AddTelemetryFromActivityEvents(Activity activity, TelemetryItem telemetryItem, List`1<TelemetryItem> telemetryItems);
    [NullableContextAttribute("2")]
private static MonitorBase GetTraceTelemetryData(ActivityEvent activityEvent);
    [NullableContextAttribute("2")]
private static MonitorBase GetExceptionDataDetailsOnTelemetryItem(ActivityEvent activityEvent);
    internal static void AddEnqueuedTimeToMeasurementsAndLinksToProperties(Activity activity, IDictionary`2<string, double> measurements, AzMonList& UnMappedTags);
    private static bool TryGetAverageQueueTimeWithLinks(Activity activity, AzMonList& UnMappedTags, Int64& avgTimeInQueue);
    private static bool TryGetEnqueuedTime(ActivityLink link, Int64& enqueuedTime);
    private static void AddContextToMSLinks(StringBuilder linksJson, ActivityLink link);
    internal static string GetAzureSDKDependencyType(ActivityKind kind, string azureNamespace);
}
internal enum Azure.Monitor.OpenTelemetry.Exporter.Internals.TransmissionState : Enum {
    public int value__;
    public static TransmissionState Open;
    public static TransmissionState Closed;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Monitor.OpenTelemetry.Exporter.Internals.TransmissionStateManager : object {
    private static int MaxDelayInSeconds;
    private static int MinDelayInSeconds;
    private Random _random;
    private TimeSpan _minIntervalToUpdateConsecutiveErrors;
    private DateTimeOffset _nextMinTimeToUpdateConsecutiveErrors;
    private Timer _backOffIntervalTimer;
    private double _syncBackOffIntervalCalculation;
    private int _consecutiveErrors;
    private bool _disposed;
    [CompilerGeneratedAttribute]
private TransmissionState <State>k__BackingField;
    internal TransmissionState State { get; private set; }
    internal TransmissionStateManager(Random random, TimeSpan minIntervalToUpdateConsecutiveErrors, DateTimeOffset nextMinTimeToUpdateConsecutiveErrors, Timer backOffIntervalTimer, TransmissionState state);
    [CompilerGeneratedAttribute]
internal TransmissionState get_State();
    [CompilerGeneratedAttribute]
private void set_State(TransmissionState value);
    internal void OpenTransmission();
    internal void CloseTransmission();
    internal void ResetConsecutiveErrors();
    internal void ResetTransmission(object source, ElapsedEventArgs e);
    [NullableContextAttribute("2")]
internal void EnableBackOff(Response response);
    internal TimeSpan GetBackOffTimeInterval();
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Monitor.OpenTelemetry.Exporter.Internals.TransmitFromStorageHandler : object {
    private ApplicationInsightsRestClient _applicationInsightsRestClient;
    private ConnectionVars _connectionVars;
    internal PersistentBlobProvider _blobProvider;
    private TransmissionStateManager _transmissionStateManager;
    private Timer _transmitFromStorageTimer;
    private bool _isAadEnabled;
    private bool _disposed;
    internal TransmitFromStorageHandler(ApplicationInsightsRestClient applicationInsightsRestClient, PersistentBlobProvider blobProvider, TransmissionStateManager transmissionStateManager, ConnectionVars connectionVars, bool isAadEnabled);
    [NullableContextAttribute("2")]
internal void TransmitFromStorage(object sender, ElapsedEventArgs e);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Monitor.OpenTelemetry.Exporter.Internals.TransmitterFactory : object {
    public static TransmitterFactory Instance;
    internal Dictionary`2<string, AzureMonitorTransmitter> _transmitters;
    private object _lockObj;
    private static TransmitterFactory();
    public AzureMonitorTransmitter Get(AzureMonitorExporterOptions azureMonitorExporterOptions);
}
internal class Azure.Monitor.OpenTelemetry.Exporter.Models.AvailabilityData : MonitorDomain {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Duration>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Success>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, double> <Measurements>k__BackingField;
    public string Id { get; }
    public string Name { get; }
    public string Duration { get; }
    public bool Success { get; }
    public string RunLocation { get; public set; }
    public string Message { get; public set; }
    public IDictionary`2<string, string> Properties { get; }
    public IDictionary`2<string, double> Measurements { get; }
    public AvailabilityData(int version, string id, string name, string duration, bool success);
    internal AvailabilityData(int version, IDictionary`2<string, object> additionalProperties, string id, string name, string duration, bool success, string runLocation, string message, IDictionary`2<string, string> properties, IDictionary`2<string, double> measurements);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_Duration();
    [CompilerGeneratedAttribute]
public bool get_Success();
    [CompilerGeneratedAttribute]
public string get_RunLocation();
    [CompilerGeneratedAttribute]
public void set_RunLocation(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Properties();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, double> get_Measurements();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal virtual RequestContent ToRequestContent();
}
[IsReadOnlyAttribute]
internal class Azure.Monitor.OpenTelemetry.Exporter.Models.ContextTagKeys : ValueType {
    private string _value;
    private static string AiApplicationVerValue;
    private static string AiDeviceIdValue;
    private static string AiDeviceLocaleValue;
    private static string AiDeviceModelValue;
    private static string AiDeviceOemNameValue;
    private static string AiDeviceOsVersionValue;
    private static string AiDeviceTypeValue;
    private static string AiLocationIpValue;
    private static string AiLocationCountryValue;
    private static string AiLocationProvinceValue;
    private static string AiLocationCityValue;
    private static string AiOperationIdValue;
    private static string AiOperationNameValue;
    private static string AiOperationParentIdValue;
    private static string AiOperationSyntheticSourceValue;
    private static string AiOperationCorrelationVectorValue;
    private static string AiSessionIdValue;
    private static string AiSessionIsFirstValue;
    private static string AiUserAccountIdValue;
    private static string AiUserIdValue;
    private static string AiUserAuthUserIdValue;
    private static string AiCloudRoleValue;
    private static string AiCloudRoleVerValue;
    private static string AiCloudRoleInstanceValue;
    private static string AiCloudLocationValue;
    private static string AiInternalSdkVersionValue;
    private static string AiInternalAgentVersionValue;
    private static string AiInternalNodeNameValue;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiApplicationVer>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiDeviceId>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiDeviceLocale>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiDeviceModel>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiDeviceOemName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiDeviceOsVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiDeviceType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiLocationIp>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiLocationCountry>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiLocationProvince>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiLocationCity>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiOperationId>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiOperationName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiOperationParentId>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiOperationSyntheticSource>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiOperationCorrelationVector>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiSessionId>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiSessionIsFirst>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiUserAccountId>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiUserId>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiUserAuthUserId>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiCloudRole>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiCloudRoleVer>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiCloudRoleInstance>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiCloudLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiInternalSdkVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiInternalAgentVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContextTagKeys <AiInternalNodeName>k__BackingField;
    public static ContextTagKeys AiApplicationVer { get; }
    public static ContextTagKeys AiDeviceId { get; }
    public static ContextTagKeys AiDeviceLocale { get; }
    public static ContextTagKeys AiDeviceModel { get; }
    public static ContextTagKeys AiDeviceOemName { get; }
    public static ContextTagKeys AiDeviceOsVersion { get; }
    public static ContextTagKeys AiDeviceType { get; }
    public static ContextTagKeys AiLocationIp { get; }
    public static ContextTagKeys AiLocationCountry { get; }
    public static ContextTagKeys AiLocationProvince { get; }
    public static ContextTagKeys AiLocationCity { get; }
    public static ContextTagKeys AiOperationId { get; }
    public static ContextTagKeys AiOperationName { get; }
    public static ContextTagKeys AiOperationParentId { get; }
    public static ContextTagKeys AiOperationSyntheticSource { get; }
    public static ContextTagKeys AiOperationCorrelationVector { get; }
    public static ContextTagKeys AiSessionId { get; }
    public static ContextTagKeys AiSessionIsFirst { get; }
    public static ContextTagKeys AiUserAccountId { get; }
    public static ContextTagKeys AiUserId { get; }
    public static ContextTagKeys AiUserAuthUserId { get; }
    public static ContextTagKeys AiCloudRole { get; }
    public static ContextTagKeys AiCloudRoleVer { get; }
    public static ContextTagKeys AiCloudRoleInstance { get; }
    public static ContextTagKeys AiCloudLocation { get; }
    public static ContextTagKeys AiInternalSdkVersion { get; }
    public static ContextTagKeys AiInternalAgentVersion { get; }
    public static ContextTagKeys AiInternalNodeName { get; }
    public ContextTagKeys(string value);
    private static ContextTagKeys();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiApplicationVer();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiDeviceId();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiDeviceLocale();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiDeviceModel();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiDeviceOemName();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiDeviceOsVersion();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiDeviceType();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiLocationIp();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiLocationCountry();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiLocationProvince();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiLocationCity();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiOperationId();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiOperationName();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiOperationParentId();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiOperationSyntheticSource();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiOperationCorrelationVector();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiSessionId();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiSessionIsFirst();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiUserAccountId();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiUserId();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiUserAuthUserId();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiCloudRole();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiCloudRoleVer();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiCloudRoleInstance();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiCloudLocation();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiInternalSdkVersion();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiInternalAgentVersion();
    [CompilerGeneratedAttribute]
public static ContextTagKeys get_AiInternalNodeName();
    public static bool op_Equality(ContextTagKeys left, ContextTagKeys right);
    public static bool op_Inequality(ContextTagKeys left, ContextTagKeys right);
    public static ContextTagKeys op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ContextTagKeys other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
internal class Azure.Monitor.OpenTelemetry.Exporter.Models.DataPointType : ValueType {
    private string _value;
    private static string MeasurementValue;
    private static string AggregationValue;
    [CompilerGeneratedAttribute]
private static DataPointType <Measurement>k__BackingField;
    [CompilerGeneratedAttribute]
private static DataPointType <Aggregation>k__BackingField;
    public static DataPointType Measurement { get; }
    public static DataPointType Aggregation { get; }
    public DataPointType(string value);
    private static DataPointType();
    [CompilerGeneratedAttribute]
public static DataPointType get_Measurement();
    [CompilerGeneratedAttribute]
public static DataPointType get_Aggregation();
    public static bool op_Equality(DataPointType left, DataPointType right);
    public static bool op_Inequality(DataPointType left, DataPointType right);
    public static DataPointType op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(DataPointType other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
internal class Azure.Monitor.OpenTelemetry.Exporter.Models.MessageData : MonitorDomain {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SeverityLevel> <SeverityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, double> <Measurements>k__BackingField;
    public string Message { get; }
    public Nullable`1<SeverityLevel> SeverityLevel { get; public set; }
    public IDictionary`2<string, string> Properties { get; }
    public IDictionary`2<string, double> Measurements { get; }
    [NullableContextAttribute("1")]
public MessageData(int version, LogRecord logRecord);
    public MessageData(int version, string message);
    internal MessageData(int version, IDictionary`2<string, object> additionalProperties, string message, Nullable`1<SeverityLevel> severityLevel, IDictionary`2<string, string> properties, IDictionary`2<string, double> measurements);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public Nullable`1<SeverityLevel> get_SeverityLevel();
    [CompilerGeneratedAttribute]
public void set_SeverityLevel(Nullable`1<SeverityLevel> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Properties();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, double> get_Measurements();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal virtual RequestContent ToRequestContent();
}
internal class Azure.Monitor.OpenTelemetry.Exporter.Models.MetricDataPoint : object {
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DataPointType> <DataPointType>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Min>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Max>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <StdDev>k__BackingField;
    public string Namespace { get; public set; }
    public string Name { get; }
    public Nullable`1<DataPointType> DataPointType { get; public set; }
    public double Value { get; }
    public Nullable`1<int> Count { get; public set; }
    public Nullable`1<double> Min { get; public set; }
    public Nullable`1<double> Max { get; public set; }
    public Nullable`1<double> StdDev { get; public set; }
    [NullableContextAttribute("1")]
public MetricDataPoint(Metric metric, MetricPoint metricPoint);
    public MetricDataPoint(string name, double value);
    internal MetricDataPoint(string namespace, string name, Nullable`1<DataPointType> dataPointType, double value, Nullable`1<int> count, Nullable`1<double> min, Nullable`1<double> max, Nullable`1<double> stdDev);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Nullable`1<DataPointType> get_DataPointType();
    [CompilerGeneratedAttribute]
public void set_DataPointType(Nullable`1<DataPointType> value);
    [CompilerGeneratedAttribute]
public double get_Value();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Min();
    [CompilerGeneratedAttribute]
public void set_Min(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Max();
    [CompilerGeneratedAttribute]
public void set_Max(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_StdDev();
    [CompilerGeneratedAttribute]
public void set_StdDev(Nullable`1<double> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal virtual RequestContent ToRequestContent();
}
internal class Azure.Monitor.OpenTelemetry.Exporter.Models.MetricsData : MonitorDomain {
    [NullableAttribute("1")]
private static string azureMonitorResourceKey;
    [CompilerGeneratedAttribute]
private IList`1<MetricDataPoint> <Metrics>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Properties>k__BackingField;
    public IList`1<MetricDataPoint> Metrics { get; }
    public IDictionary`2<string, string> Properties { get; }
    [NullableContextAttribute("1")]
public MetricsData(int version, Metric metric, MetricPoint metricPoint);
    public MetricsData(int version);
    public MetricsData(int version, IEnumerable`1<MetricDataPoint> metrics);
    internal MetricsData(int version, IDictionary`2<string, object> additionalProperties, IList`1<MetricDataPoint> metrics, IDictionary`2<string, string> properties);
    [CompilerGeneratedAttribute]
public IList`1<MetricDataPoint> get_Metrics();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Properties();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal virtual RequestContent ToRequestContent();
}
internal class Azure.Monitor.OpenTelemetry.Exporter.Models.MonitorBase : object {
    [CompilerGeneratedAttribute]
private string <BaseType>k__BackingField;
    [CompilerGeneratedAttribute]
private MonitorDomain <BaseData>k__BackingField;
    public string BaseType { get; public set; }
    public MonitorDomain BaseData { get; public set; }
    internal MonitorBase(string baseType, MonitorDomain baseData);
    [CompilerGeneratedAttribute]
public string get_BaseType();
    [CompilerGeneratedAttribute]
public void set_BaseType(string value);
    [CompilerGeneratedAttribute]
public MonitorDomain get_BaseData();
    [CompilerGeneratedAttribute]
public void set_BaseData(MonitorDomain value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal virtual RequestContent ToRequestContent();
}
internal class Azure.Monitor.OpenTelemetry.Exporter.Models.MonitorDomain : object {
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    public int Version { get; }
    public IDictionary`2<string, object> AdditionalProperties { get; }
    public MonitorDomain(int version);
    internal MonitorDomain(int version, IDictionary`2<string, object> additionalProperties);
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_AdditionalProperties();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal virtual RequestContent ToRequestContent();
}
internal class Azure.Monitor.OpenTelemetry.Exporter.Models.PageViewData : MonitorDomain {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Duration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReferredUri>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, double> <Measurements>k__BackingField;
    public string Id { get; }
    public string Name { get; }
    public string Url { get; public set; }
    public string Duration { get; public set; }
    public string ReferredUri { get; public set; }
    public IDictionary`2<string, string> Properties { get; }
    public IDictionary`2<string, double> Measurements { get; }
    public PageViewData(int version, string id, string name);
    internal PageViewData(int version, IDictionary`2<string, object> additionalProperties, string id, string name, string url, string duration, string referredUri, IDictionary`2<string, string> properties, IDictionary`2<string, double> measurements);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_Duration();
    [CompilerGeneratedAttribute]
public void set_Duration(string value);
    [CompilerGeneratedAttribute]
public string get_ReferredUri();
    [CompilerGeneratedAttribute]
public void set_ReferredUri(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Properties();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, double> get_Measurements();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal virtual RequestContent ToRequestContent();
}
internal class Azure.Monitor.OpenTelemetry.Exporter.Models.PageViewPerfData : MonitorDomain {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Duration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PerfTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NetworkConnect>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SentRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReceivedResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DomProcessing>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, double> <Measurements>k__BackingField;
    public string Id { get; }
    public string Name { get; }
    public string Url { get; public set; }
    public string Duration { get; public set; }
    public string PerfTotal { get; public set; }
    public string NetworkConnect { get; public set; }
    public string SentRequest { get; public set; }
    public string ReceivedResponse { get; public set; }
    public string DomProcessing { get; public set; }
    public IDictionary`2<string, string> Properties { get; }
    public IDictionary`2<string, double> Measurements { get; }
    public PageViewPerfData(int version, string id, string name);
    internal PageViewPerfData(int version, IDictionary`2<string, object> additionalProperties, string id, string name, string url, string duration, string perfTotal, string networkConnect, string sentRequest, string receivedResponse, string domProcessing, IDictionary`2<string, string> properties, IDictionary`2<string, double> measurements);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_Duration();
    [CompilerGeneratedAttribute]
public void set_Duration(string value);
    [CompilerGeneratedAttribute]
public string get_PerfTotal();
    [CompilerGeneratedAttribute]
public void set_PerfTotal(string value);
    [CompilerGeneratedAttribute]
public string get_NetworkConnect();
    [CompilerGeneratedAttribute]
public void set_NetworkConnect(string value);
    [CompilerGeneratedAttribute]
public string get_SentRequest();
    [CompilerGeneratedAttribute]
public void set_SentRequest(string value);
    [CompilerGeneratedAttribute]
public string get_ReceivedResponse();
    [CompilerGeneratedAttribute]
public void set_ReceivedResponse(string value);
    [CompilerGeneratedAttribute]
public string get_DomProcessing();
    [CompilerGeneratedAttribute]
public void set_DomProcessing(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Properties();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, double> get_Measurements();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal virtual RequestContent ToRequestContent();
}
internal class Azure.Monitor.OpenTelemetry.Exporter.Models.RemoteDependencyData : MonitorDomain {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResultCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Duration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Success>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, double> <Measurements>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; }
    public string ResultCode { get; public set; }
    public string Data { get; public set; }
    public string Type { get; public set; }
    public string Target { get; public set; }
    public string Duration { get; }
    public Nullable`1<bool> Success { get; public set; }
    public IDictionary`2<string, string> Properties { get; }
    public IDictionary`2<string, double> Measurements { get; }
    [NullableContextAttribute("1")]
public RemoteDependencyData(int version, Activity activity, ActivityTagsProcessor& activityTagsProcessor);
    public RemoteDependencyData(int version, string name, string duration);
    internal RemoteDependencyData(int version, IDictionary`2<string, object> additionalProperties, string id, string name, string resultCode, string data, string type, string target, string duration, Nullable`1<bool> success, IDictionary`2<string, string> properties, IDictionary`2<string, double> measurements);
    [NullableContextAttribute("1")]
private void SetHttpDependencyPropertiesAndDependencyName(Activity activity, AzMonList& httpTagObjects, bool isNewSchemaVersion, String& dependencyName);
    private void SetDbDependencyProperties(AzMonList& dbTagObjects);
    private void SetRpcDependencyProperties(AzMonList& rpcTagObjects);
    [NullableContextAttribute("1")]
private void SetMessagingDependencyProperties(Activity activity, AzMonList& messagingTagObjects);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_ResultCode();
    [CompilerGeneratedAttribute]
public void set_ResultCode(string value);
    [CompilerGeneratedAttribute]
public string get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public string get_Duration();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Success();
    [CompilerGeneratedAttribute]
public void set_Success(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Properties();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, double> get_Measurements();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal virtual RequestContent ToRequestContent();
}
internal class Azure.Monitor.OpenTelemetry.Exporter.Models.RequestData : MonitorDomain {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Duration>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Success>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResponseCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, double> <Measurements>k__BackingField;
    public string Id { get; }
    public string Name { get; public set; }
    public string Duration { get; }
    public bool Success { get; }
    public string ResponseCode { get; }
    public string Source { get; public set; }
    public string Url { get; public set; }
    public IDictionary`2<string, string> Properties { get; }
    public IDictionary`2<string, double> Measurements { get; }
    [NullableContextAttribute("1")]
public RequestData(int version, Activity activity, ActivityTagsProcessor& activityTagsProcessor);
    public RequestData(int version, string id, string duration, bool success, string responseCode);
    internal RequestData(int version, IDictionary`2<string, object> additionalProperties, string id, string name, string duration, bool success, string responseCode, string source, string url, IDictionary`2<string, string> properties, IDictionary`2<string, double> measurements);
    [NullableContextAttribute("1")]
internal static bool IsSuccess(Activity activity, string responseCode, OperationType operationType);
    [NullableContextAttribute("1")]
private void SetHttpRequestPropertiesAndResponseCode(Activity activity, AzMonList& httpTagObjects, String& responseCode);
    [NullableContextAttribute("1")]
private void SetHttpV2RequestPropertiesAndResponseCode(Activity activity, AzMonList& httpTagObjects, String& responseCode);
    [NullableContextAttribute("1")]
private void SetMessagingRequestProperties(Activity activity, AzMonList& messagingTagObjects);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Duration();
    [CompilerGeneratedAttribute]
public bool get_Success();
    [CompilerGeneratedAttribute]
public string get_ResponseCode();
    [CompilerGeneratedAttribute]
public string get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(string value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Properties();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, double> get_Measurements();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal virtual RequestContent ToRequestContent();
}
[IsReadOnlyAttribute]
internal class Azure.Monitor.OpenTelemetry.Exporter.Models.SeverityLevel : ValueType {
    private string _value;
    private static string VerboseValue;
    private static string InformationValue;
    private static string WarningValue;
    private static string ErrorValue;
    private static string CriticalValue;
    [CompilerGeneratedAttribute]
private static SeverityLevel <Verbose>k__BackingField;
    [CompilerGeneratedAttribute]
private static SeverityLevel <Information>k__BackingField;
    [CompilerGeneratedAttribute]
private static SeverityLevel <Warning>k__BackingField;
    [CompilerGeneratedAttribute]
private static SeverityLevel <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private static SeverityLevel <Critical>k__BackingField;
    public static SeverityLevel Verbose { get; }
    public static SeverityLevel Information { get; }
    public static SeverityLevel Warning { get; }
    public static SeverityLevel Error { get; }
    public static SeverityLevel Critical { get; }
    public SeverityLevel(string value);
    private static SeverityLevel();
    [CompilerGeneratedAttribute]
public static SeverityLevel get_Verbose();
    [CompilerGeneratedAttribute]
public static SeverityLevel get_Information();
    [CompilerGeneratedAttribute]
public static SeverityLevel get_Warning();
    [CompilerGeneratedAttribute]
public static SeverityLevel get_Error();
    [CompilerGeneratedAttribute]
public static SeverityLevel get_Critical();
    public static bool op_Equality(SeverityLevel left, SeverityLevel right);
    public static bool op_Inequality(SeverityLevel left, SeverityLevel right);
    public static SeverityLevel op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(SeverityLevel other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
internal class Azure.Monitor.OpenTelemetry.Exporter.Models.StackFrame : object {
    [CompilerGeneratedAttribute]
private int <Level>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Assembly>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Line>k__BackingField;
    public int Level { get; }
    public string Method { get; }
    public string Assembly { get; public set; }
    public string FileName { get; public set; }
    public Nullable`1<int> Line { get; public set; }
    [NullableContextAttribute("1")]
public StackFrame(StackFrame stackFrame, int frameId);
    public StackFrame(int level, string method);
    internal StackFrame(int level, string method, string assembly, string fileName, Nullable`1<int> line);
    internal int GetStackFrameLength();
    [CompilerGeneratedAttribute]
public int get_Level();
    [CompilerGeneratedAttribute]
public string get_Method();
    [CompilerGeneratedAttribute]
public string get_Assembly();
    [CompilerGeneratedAttribute]
public void set_Assembly(string value);
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public void set_FileName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Line();
    [CompilerGeneratedAttribute]
public void set_Line(Nullable`1<int> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal virtual RequestContent ToRequestContent();
}
internal class Azure.Monitor.OpenTelemetry.Exporter.Models.TelemetryErrorDetails : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public Nullable`1<int> Index { get; }
    public Nullable`1<int> StatusCode { get; }
    public string Message { get; }
    internal TelemetryErrorDetails(Nullable`1<int> index, Nullable`1<int> statusCode, string message);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Index();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_StatusCode();
    [CompilerGeneratedAttribute]
public string get_Message();
    internal static TelemetryErrorDetails DeserializeTelemetryErrorDetails(JsonElement element);
    internal static TelemetryErrorDetails FromResponse(Response response);
}
internal class Azure.Monitor.OpenTelemetry.Exporter.Models.TelemetryEventData : MonitorDomain {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, double> <Measurements>k__BackingField;
    public string Name { get; }
    public IDictionary`2<string, string> Properties { get; }
    public IDictionary`2<string, double> Measurements { get; }
    public TelemetryEventData(int version, string name);
    internal TelemetryEventData(int version, IDictionary`2<string, object> additionalProperties, string name, IDictionary`2<string, string> properties, IDictionary`2<string, double> measurements);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Properties();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, double> get_Measurements();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal virtual RequestContent ToRequestContent();
}
internal class Azure.Monitor.OpenTelemetry.Exporter.Models.TelemetryExceptionData : MonitorDomain {
    internal static int MaxExceptionCountToSave;
    [CompilerGeneratedAttribute]
private IList`1<TelemetryExceptionDetails> <Exceptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SeverityLevel> <SeverityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProblemId>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, double> <Measurements>k__BackingField;
    public IList`1<TelemetryExceptionDetails> Exceptions { get; }
    public Nullable`1<SeverityLevel> SeverityLevel { get; public set; }
    public string ProblemId { get; public set; }
    public IDictionary`2<string, string> Properties { get; }
    public IDictionary`2<string, double> Measurements { get; }
    [NullableContextAttribute("1")]
public TelemetryExceptionData(int version, LogRecord logRecord);
    [NullableContextAttribute("1")]
internal TelemetryExceptionData(int version, IEnumerable`1<TelemetryExceptionDetails> exceptions, IDictionary`2<string, string> properties);
    public TelemetryExceptionData(int version, IEnumerable`1<TelemetryExceptionDetails> exceptions);
    internal TelemetryExceptionData(int version, IDictionary`2<string, object> additionalProperties, IList`1<TelemetryExceptionDetails> exceptions, Nullable`1<SeverityLevel> severityLevel, string problemId, IDictionary`2<string, string> properties, IDictionary`2<string, double> measurements);
    [NullableContextAttribute("1")]
private void ConvertExceptionTree(Exception exception, string message, TelemetryExceptionDetails parentExceptionDetails, List`1<TelemetryExceptionDetails> exceptions);
    [CompilerGeneratedAttribute]
public IList`1<TelemetryExceptionDetails> get_Exceptions();
    [CompilerGeneratedAttribute]
public Nullable`1<SeverityLevel> get_SeverityLevel();
    [CompilerGeneratedAttribute]
public void set_SeverityLevel(Nullable`1<SeverityLevel> value);
    [CompilerGeneratedAttribute]
public string get_ProblemId();
    [CompilerGeneratedAttribute]
public void set_ProblemId(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Properties();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, double> get_Measurements();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal virtual RequestContent ToRequestContent();
}
internal class Azure.Monitor.OpenTelemetry.Exporter.Models.TelemetryExceptionDetails : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OuterId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <HasFullStack>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Stack>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<StackFrame> <ParsedStack>k__BackingField;
    public Nullable`1<int> Id { get; public set; }
    public Nullable`1<int> OuterId { get; public set; }
    public string TypeName { get; public set; }
    public string Message { get; }
    public Nullable`1<bool> HasFullStack { get; public set; }
    public string Stack { get; public set; }
    public IList`1<StackFrame> ParsedStack { get; }
    [NullableContextAttribute("2")]
internal TelemetryExceptionDetails(Exception exception, string message, TelemetryExceptionDetails parentExceptionDetails);
    public TelemetryExceptionDetails(string message);
    internal TelemetryExceptionDetails(Nullable`1<int> id, Nullable`1<int> outerId, string typeName, string message, Nullable`1<bool> hasFullStack, string stack, IList`1<StackFrame> parsedStack);
    [NullableContextAttribute("1")]
internal static List`1<StackFrame> GetSanitizedStackFrame(Exception exception, Boolean& hasFullStack);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_OuterId();
    [CompilerGeneratedAttribute]
public void set_OuterId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public void set_TypeName(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_HasFullStack();
    [CompilerGeneratedAttribute]
public void set_HasFullStack(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Stack();
    [CompilerGeneratedAttribute]
public void set_Stack(string value);
    [CompilerGeneratedAttribute]
public IList`1<StackFrame> get_ParsedStack();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal virtual RequestContent ToRequestContent();
}
internal class Azure.Monitor.OpenTelemetry.Exporter.Models.TelemetryItem : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Time>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <SampleRate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Sequence>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InstrumentationKey>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private MonitorBase <Data>k__BackingField;
    public Nullable`1<int> Version { get; public set; }
    public string Name { get; }
    public DateTimeOffset Time { get; }
    public Nullable`1<float> SampleRate { get; public set; }
    public string Sequence { get; public set; }
    public string InstrumentationKey { get; public set; }
    public IDictionary`2<string, string> Tags { get; }
    public MonitorBase Data { get; public set; }
    [NullableContextAttribute("1")]
public TelemetryItem(Activity activity, ActivityTagsProcessor& activityTagsProcessor, AzureMonitorResource resource, string instrumentationKey, float sampleRate);
    [NullableContextAttribute("1")]
public TelemetryItem(string name, TelemetryItem telemetryItem, ActivitySpanId activitySpanId, ActivityKind kind, DateTimeOffset activityEventTimeStamp);
    [NullableContextAttribute("1")]
public TelemetryItem(LogRecord logRecord, AzureMonitorResource resource, string instrumentationKey);
    [NullableContextAttribute("1")]
public TelemetryItem(DateTime time, AzureMonitorResource resource, string instrumentationKey);
    [NullableContextAttribute("1")]
public TelemetryItem(DateTime time, AzureMonitorResource resource, string instrumentationKey, MonitorBase monitorBaseData);
    public TelemetryItem(string name, DateTimeOffset time);
    internal TelemetryItem(Nullable`1<int> version, string name, DateTimeOffset time, Nullable`1<float> sampleRate, string sequence, string instrumentationKey, IDictionary`2<string, string> tags, MonitorBase data);
    [NullableContextAttribute("1")]
private void SetResourceSdkVersionAndIkey(AzureMonitorResource resource, string instrumentationKey);
    internal static DateTimeOffset FormatUtcTimestamp(DateTime utcTimestamp);
    private void SetAuthenticatedUserId(ActivityTagsProcessor& activityTagsProcessor);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Time();
    [CompilerGeneratedAttribute]
public Nullable`1<float> get_SampleRate();
    [CompilerGeneratedAttribute]
public void set_SampleRate(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public string get_Sequence();
    [CompilerGeneratedAttribute]
public void set_Sequence(string value);
    [CompilerGeneratedAttribute]
public string get_InstrumentationKey();
    [CompilerGeneratedAttribute]
public void set_InstrumentationKey(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Tags();
    [CompilerGeneratedAttribute]
public MonitorBase get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(MonitorBase value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal virtual RequestContent ToRequestContent();
}
internal class Azure.Monitor.OpenTelemetry.Exporter.Models.TrackResponse : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ItemsReceived>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ItemsAccepted>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<TelemetryErrorDetails> <Errors>k__BackingField;
    public Nullable`1<int> ItemsReceived { get; }
    public Nullable`1<int> ItemsAccepted { get; }
    public IReadOnlyList`1<TelemetryErrorDetails> Errors { get; }
    internal TrackResponse(Nullable`1<int> itemsReceived, Nullable`1<int> itemsAccepted, IReadOnlyList`1<TelemetryErrorDetails> errors);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ItemsReceived();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ItemsAccepted();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<TelemetryErrorDetails> get_Errors();
    internal static TrackResponse DeserializeTrackResponse(JsonElement element);
    internal static TrackResponse FromResponse(Response response);
}
[ExtensionAttribute]
internal static class Azure.Monitor.OpenTelemetry.Exporter.ModelSerializationExtensions : object {
    internal static ModelReaderWriterOptions WireOptions;
    private static ModelSerializationExtensions();
    [ExtensionAttribute]
public static object GetObject(JsonElement element);
    [ExtensionAttribute]
public static Byte[] GetBytesFromBase64(JsonElement element, string format);
    [ExtensionAttribute]
public static DateTimeOffset GetDateTimeOffset(JsonElement element, string format);
    [ExtensionAttribute]
public static TimeSpan GetTimeSpan(JsonElement element, string format);
    [ExtensionAttribute]
public static char GetChar(JsonElement element);
    [ExtensionAttribute]
[ConditionalAttribute("DEBUG")]
public static void ThrowNonNullablePropertyIsNull(JsonProperty property);
    [ExtensionAttribute]
public static string GetRequiredString(JsonElement element);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, DateTime value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, TimeSpan value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, char value);
    [ExtensionAttribute]
public static void WriteBase64StringValue(Utf8JsonWriter writer, Byte[] value, string format);
    [ExtensionAttribute]
public static void WriteNumberValue(Utf8JsonWriter writer, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void WriteObjectValue(Utf8JsonWriter writer, T value);
    [ExtensionAttribute]
public static void WriteObjectValue(Utf8JsonWriter writer, object value);
}
internal class Azure.Monitor.OpenTelemetry.Exporter.MultipartFormDataRequestContent : RequestContent {
    private MultipartFormDataContent _multipartContent;
    private static Random _random;
    private static Char[] _boundaryValues;
    public string ContentType { get; }
    internal HttpContent HttpContent { get; }
    private static MultipartFormDataRequestContent();
    public string get_ContentType();
    internal HttpContent get_HttpContent();
    private static string CreateBoundary();
    public void Add(string content, string name, string filename, string contentType);
    public void Add(int content, string name, string filename, string contentType);
    public void Add(long content, string name, string filename, string contentType);
    public void Add(float content, string name, string filename, string contentType);
    public void Add(double content, string name, string filename, string contentType);
    public void Add(decimal content, string name, string filename, string contentType);
    public void Add(bool content, string name, string filename, string contentType);
    public void Add(Stream content, string name, string filename, string contentType);
    public void Add(Byte[] content, string name, string filename, string contentType);
    public void Add(BinaryData content, string name, string filename, string contentType);
    private void Add(HttpContent content, string name, string filename, string contentType);
    public static void AddFilenameHeader(HttpContent content, string name, string filename);
    public static void AddContentTypeHeader(HttpContent content, string contentType);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void WriteTo(Stream stream, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Monitor.OpenTelemetry.Exporter.MultipartFormDataRequestContent/<WriteToAsync>d__24")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellationToken);
    public virtual void Dispose();
}
internal static class Azure.Monitor.OpenTelemetry.Exporter.Optional : object {
    public static bool IsCollectionDefined(IEnumerable`1<T> collection);
    public static bool IsCollectionDefined(IDictionary`2<TKey, TValue> collection);
    public static bool IsCollectionDefined(IReadOnlyDictionary`2<TKey, TValue> collection);
    public static bool IsDefined(Nullable`1<T> value);
    public static bool IsDefined(object value);
    public static bool IsDefined(JsonElement value);
    public static bool IsDefined(string value);
}
internal static class Azure.Monitor.OpenTelemetry.Exporter.RequestContentHelper : object {
    public static RequestContent FromEnumerable(IEnumerable`1<T> enumerable);
    public static RequestContent FromEnumerable(IEnumerable`1<BinaryData> enumerable);
    public static RequestContent FromDictionary(IDictionary`2<string, TValue> dictionary);
    public static RequestContent FromDictionary(IDictionary`2<string, BinaryData> dictionary);
    public static RequestContent FromObject(object value);
    public static RequestContent FromObject(BinaryData value);
}
internal class Azure.Monitor.OpenTelemetry.Exporter.Utf8JsonRequestContent : RequestContent {
    private MemoryStream _stream;
    private RequestContent _content;
    [CompilerGeneratedAttribute]
private Utf8JsonWriter <JsonWriter>k__BackingField;
    public Utf8JsonWriter JsonWriter { get; }
    [CompilerGeneratedAttribute]
public Utf8JsonWriter get_JsonWriter();
    [AsyncStateMachineAttribute("Azure.Monitor.OpenTelemetry.Exporter.Utf8JsonRequestContent/<WriteToAsync>d__6")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellationToken);
    public virtual void WriteTo(Stream stream, CancellationToken cancellationToken);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("100")]
internal class System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    [NullableAttribute("2")]
public string Url { get; public set; }
    public RequiresDynamicCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Url(string value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
