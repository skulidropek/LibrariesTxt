[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Autorest.CSharp.Core.GeneratorPageableHelpers : object {
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Autorest.CSharp.Core.GeneratorPageableHelpers/<CreateAsyncPageable>d__8`1")]
public static ValueTask`1<Operation`1<AsyncPageable`1<T>>> CreateAsyncPageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Operation`1<Pageable`1<T>> CreatePageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreateEnumerable(Func`2<Nullable`1<int>, Page`1<T>> firstPageFunc, Func`3<string, Nullable`1<int>, Page`1<T>> nextPageFunc, Nullable`1<int> pageSize);
    public static AsyncPageable`1<T> CreateAsyncEnumerable(Func`2<Nullable`1<int>, Task`1<Page`1<T>>> firstPageFunc, Func`3<string, Nullable`1<int>, Task`1<Page`1<T>>> nextPageFunc, Nullable`1<int> pageSize);
}
internal static class Azure.Core.AppContextSwitchHelper : object {
    [NullableContextAttribute("1")]
public static bool GetConfigValue(string appContexSwitchName, string environmentVariableName);
}
internal class Azure.Core.ArrayBufferWriter`1 : object {
    private T[] _buffer;
    private static int DefaultInitialBufferSize;
    [CompilerGeneratedAttribute]
private int <WrittenCount>k__BackingField;
    public ReadOnlyMemory`1<T> WrittenMemory { get; }
    public ReadOnlySpan`1<T> WrittenSpan { get; }
    public int WrittenCount { get; private set; }
    public int Capacity { get; }
    public int FreeCapacity { get; }
    public ArrayBufferWriter`1(int initialCapacity);
    public ReadOnlyMemory`1<T> get_WrittenMemory();
    public ReadOnlySpan`1<T> get_WrittenSpan();
    [CompilerGeneratedAttribute]
public int get_WrittenCount();
    [CompilerGeneratedAttribute]
private void set_WrittenCount(int value);
    public int get_Capacity();
    public int get_FreeCapacity();
    public void Clear();
    public sealed virtual void Advance(int count);
    public sealed virtual Memory`1<T> GetMemory(int sizeHint);
    public sealed virtual Span`1<T> GetSpan(int sizeHint);
    private void CheckAndResizeBuffer(int sizeHint);
    private static void ThrowInvalidOperationException_AdvancedTooFar(int capacity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.AsyncLockWithValue`1 : object {
    private object _syncObj;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Queue`1<TaskCompletionSource`1<LockOrValue<T>>> _waiters;
    private bool _isLocked;
    private bool _hasValue;
    private long _index;
    [NullableAttribute("2")]
private T _value;
    public bool HasValue { get; }
    public AsyncLockWithValue`1(T value);
    public bool get_HasValue();
    [NullableContextAttribute("2")]
public bool TryGetValue(T& value);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Azure.Core.AsyncLockWithValue`1/<GetLockOrValueAsync>d__11")]
public ValueTask`1<LockOrValue<T>> GetLockOrValueAsync(bool async, CancellationToken cancellationToken);
    private void SetValue(T value, Int64& lockIndex);
    private void Reset(Int64& lockIndex);
    private void UnlockOrGetNextWaiter(Int64& lockIndex, TaskCompletionSource`1& nextWaiter);
}
[AttributeUsageAttribute("1")]
internal class Azure.Core.AzureResourceProviderNamespaceAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ResourceProviderNamespace>k__BackingField;
    public string ResourceProviderNamespace { get; }
    public AzureResourceProviderNamespaceAttribute(string resourceProviderNamespace);
    [CompilerGeneratedAttribute]
public string get_ResourceProviderNamespace();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
internal class Azure.Core.CodeGenClientAttribute : CodeGenTypeAttribute {
    [CompilerGeneratedAttribute]
private Type <ParentClient>k__BackingField;
    public Type ParentClient { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenClientAttribute(string originalName);
    [CompilerGeneratedAttribute]
public Type get_ParentClient();
    [CompilerGeneratedAttribute]
public void set_ParentClient(Type value);
}
[AttributeUsageAttribute("384")]
internal class Azure.Core.CodeGenMemberAttribute : CodeGenTypeAttribute {
    [NullableContextAttribute("1")]
public CodeGenMemberAttribute(string originalName);
}
[AttributeUsageAttribute("28")]
internal class Azure.Core.CodeGenModelAttribute : CodeGenTypeAttribute {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <Usage>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <Formats>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] Usage { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] Formats { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenModelAttribute(string originalName);
    [CompilerGeneratedAttribute]
public String[] get_Usage();
    [CompilerGeneratedAttribute]
public void set_Usage(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_Formats();
    [CompilerGeneratedAttribute]
public void set_Formats(String[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1")]
internal class Azure.Core.CodeGenOverrideServiceVersionsAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Versions>k__BackingField;
    public String[] Versions { get; }
    public CodeGenOverrideServiceVersionsAttribute(String[] versions);
    [CompilerGeneratedAttribute]
public String[] get_Versions();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("12")]
internal class Azure.Core.CodeGenSerializationAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <SerializationPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SerializationValueHook>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeserializationValueHook>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BicepSerializationValueHook>k__BackingField;
    public string PropertyName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] SerializationPath { get; }
    public string SerializationValueHook { get; public set; }
    public string DeserializationValueHook { get; public set; }
    public string BicepSerializationValueHook { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenSerializationAttribute(string propertyName);
    [NullableContextAttribute("1")]
public CodeGenSerializationAttribute(string propertyName, string serializationName);
    [NullableContextAttribute("1")]
public CodeGenSerializationAttribute(string propertyName, String[] serializationPath);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public void set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public String[] get_SerializationPath();
    [CompilerGeneratedAttribute]
public string get_SerializationValueHook();
    [CompilerGeneratedAttribute]
public void set_SerializationValueHook(string value);
    [CompilerGeneratedAttribute]
public string get_DeserializationValueHook();
    [CompilerGeneratedAttribute]
public void set_DeserializationValueHook(string value);
    [CompilerGeneratedAttribute]
public string get_BicepSerializationValueHook();
    [CompilerGeneratedAttribute]
public void set_BicepSerializationValueHook(string value);
}
[AttributeUsageAttribute("28")]
internal class Azure.Core.CodeGenSuppressAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Member>k__BackingField;
    [CompilerGeneratedAttribute]
private Type[] <Parameters>k__BackingField;
    public string Member { get; }
    public Type[] Parameters { get; }
    public CodeGenSuppressAttribute(string member, Type[] parameters);
    [CompilerGeneratedAttribute]
public string get_Member();
    [CompilerGeneratedAttribute]
public Type[] get_Parameters();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1")]
internal class Azure.Core.CodeGenSuppressTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Typename>k__BackingField;
    public string Typename { get; }
    public CodeGenSuppressTypeAttribute(string typename);
    [CompilerGeneratedAttribute]
public string get_Typename();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
internal class Azure.Core.CodeGenTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <OriginalName>k__BackingField;
    public string OriginalName { get; }
    public CodeGenTypeAttribute(string originalName);
    [CompilerGeneratedAttribute]
public string get_OriginalName();
}
internal class Azure.Core.FixedDelayWithNoJitterStrategy : DelayStrategy {
    private static TimeSpan DefaultDelay;
    private TimeSpan _delay;
    public FixedDelayWithNoJitterStrategy(Nullable`1<TimeSpan> suggestedDelay);
    private static FixedDelayWithNoJitterStrategy();
    [NullableContextAttribute("2")]
protected virtual TimeSpan GetNextDelayCore(Response response, int retryNumber);
}
internal class Azure.Core.FormUrlEncodedContent : RequestContent {
    private List`1<KeyValuePair`2<string, string>> _values;
    private Encoding Latin1;
    private Byte[] _bytes;
    public void Add(string parameter, string value);
    private void BuildIfNeeded();
    [AsyncStateMachineAttribute("Azure.Core.FormUrlEncodedContent/<WriteToAsync>d__5")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
    private Byte[] GetContentByteArray(IEnumerable`1<KeyValuePair`2<string, string>> nameValueCollection);
    private static string Encode(string data);
}
[AttributeUsageAttribute("64")]
internal class Azure.Core.ForwardsClientCallsAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <SkipChecks>k__BackingField;
    public bool SkipChecks { get; }
    public ForwardsClientCallsAttribute(bool skipChecks);
    [CompilerGeneratedAttribute]
public bool get_SkipChecks();
}
internal class Azure.Core.HttpMessageSanitizer : object {
    private static string LogAllValue;
    private bool _logAllHeaders;
    private bool _logFullQueries;
    private String[] _allowedQueryParameters;
    private string _redactedPlaceholder;
    private HashSet`1<string> _allowedHeaders;
    internal static HttpMessageSanitizer Default;
    public HttpMessageSanitizer(String[] allowedQueryParameters, String[] allowedHeaders, string redactedPlaceholder);
    private static HttpMessageSanitizer();
    public string SanitizeHeader(string name, string value);
    public string SanitizeUrl(string url);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.HttpPipelineExtensions : object {
    [AsyncStateMachineAttribute("Azure.Core.HttpPipelineExtensions/<ProcessMessageAsync>d__0")]
[ExtensionAttribute]
public static ValueTask`1<Response> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, RequestContext requestContext, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response ProcessMessage(HttpPipeline pipeline, HttpMessage message, RequestContext requestContext, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.HttpPipelineExtensions/<ProcessHeadAsBoolMessageAsync>d__2")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<bool>> ProcessHeadAsBoolMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, RequestContext requestContext);
    [ExtensionAttribute]
public static Response`1<bool> ProcessHeadAsBoolMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, RequestContext requestContext);
    [NullableContextAttribute("0")]
private static ValueTuple`2<CancellationToken, ErrorOptions> ApplyRequestContext(RequestContext requestContext);
}
internal interface Azure.Core.IOperation {
    public abstract virtual ValueTask`1<OperationState> UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("2")]
internal interface Azure.Core.IOperation`1 {
    public abstract virtual ValueTask`1<OperationState`1<T>> UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
internal interface Azure.Core.IOperationSource`1 {
    public abstract virtual T CreateResult(Response response, CancellationToken cancellationToken);
    public abstract virtual ValueTask`1<T> CreateResultAsync(Response response, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Azure.Core.IUtf8JsonSerializable {
    public abstract virtual void Write(Utf8JsonWriter writer);
}
[NullableContextAttribute("1")]
internal interface Azure.Core.IXmlSerializable {
    public abstract virtual void Write(XmlWriter writer, string nameHint);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.NextLinkOperationImplementation : object {
    internal static string NotSet;
    internal static string RehydrationTokenVersion;
    private static string ApiVersionParam;
    private static String[] FailureStates;
    private static String[] SuccessStates;
    private HeaderSource _headerSource;
    private Uri _startRequestUri;
    private OperationFinalStateVia _finalStateVia;
    private HttpPipeline _pipeline;
    [NullableAttribute("2")]
private string _apiVersion;
    [NullableAttribute("2")]
private string _lastKnownLocation;
    private string _nextRequestUri;
    [CompilerGeneratedAttribute]
private string <OperationId>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestMethod <RequestMethod>k__BackingField;
    public string OperationId { get; private set; }
    public RequestMethod RequestMethod { get; }
    private NextLinkOperationImplementation(HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, string nextRequestUri, HeaderSource headerSource, string lastKnownLocation, OperationFinalStateVia finalStateVia, string apiVersion, string operationId);
    private static NextLinkOperationImplementation();
    [CompilerGeneratedAttribute]
public string get_OperationId();
    [CompilerGeneratedAttribute]
private void set_OperationId(string value);
    [CompilerGeneratedAttribute]
public RequestMethod get_RequestMethod();
    public static IOperation Create(HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    public static IOperation`1<T> Create(IOperationSource`1<T> operationSource, HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    public static IOperation`1<T> Create(IOperationSource`1<T> operationSource, IOperation operation);
    public static IOperation Create(HttpPipeline pipeline, RehydrationToken rehydrationToken);
    private static string GetContentFromRehydrationToken(Dictionary`2<string, string> lroDetails, string key);
    private string ParseOperationId(Uri startRequestUri, string nextRequestUri);
    public RehydrationToken GetRehydrationToken();
    public static RehydrationToken GetRehydrationToken(RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia);
    public static RehydrationToken GetRehydrationToken(RequestMethod requestMethod, Uri startRequestUri, string nextRequestUri, string headerSource, string lastKnownLocation, string finalStateVia, string operationId);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Azure.Core.NextLinkOperationImplementation/<UpdateStateAsync>d__29")]
public sealed virtual ValueTask`1<OperationState> UpdateStateAsync(bool async, CancellationToken cancellationToken);
    private static OperationState GetOperationStateFromFinalResponse(RequestMethod requestMethod, Response response);
    private void UpdateNextRequestUri(ResponseHeaders headers);
    internal static string AppendOrReplaceApiVersion(string uri, string apiVersion);
    [NullableContextAttribute("0")]
internal static bool TryGetApiVersion(Uri startRequestUri, ReadOnlySpan`1& apiVersion);
    [NullableContextAttribute("2")]
private string GetFinalUri(string resourceLocation);
    private Response GetResponse(string uri, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.NextLinkOperationImplementation/<GetResponseAsync>d__36")]
private ValueTask`1<Response> GetResponseAsync(string uri, CancellationToken cancellationToken);
    private HttpMessage CreateRequest(string uri);
    private static bool IsFinalState(Response response, HeaderSource headerSource, Nullable`1& failureState, String& resourceLocation);
    private static string GetRequiredString(JsonElement& element);
    private static bool ShouldIgnoreHeader(RequestMethod method, Response response);
    private static HeaderSource GetHeaderSource(RequestMethod requestMethod, Uri requestUri, Response response, string apiVersion, String& nextRequestUri);
    private static void AssertNotNull(T value, string name);
}
internal enum Azure.Core.OperationFinalStateVia : Enum {
    public int value__;
    public static OperationFinalStateVia AzureAsyncOperation;
    public static OperationFinalStateVia Location;
    public static OperationFinalStateVia OriginalUri;
    public static OperationFinalStateVia OperationLocation;
    public static OperationFinalStateVia LocationOverride;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.OperationHelpers : object {
    public static T GetValue(T& value);
    [NullableContextAttribute("0")]
public static T GetValue(Nullable`1& value);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionAsync>d__2`1")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<TResult>> DefaultWaitForCompletionAsync(Operation`1<TResult> operation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionAsync>d__3`1")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<TResult>> DefaultWaitForCompletionAsync(Operation`1<TResult> operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response`1<TResult> DefaultWaitForCompletion(Operation`1<TResult> operation, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response`1<TResult> DefaultWaitForCompletion(Operation`1<TResult> operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionResponseAsync>d__6")]
[ExtensionAttribute]
public static ValueTask`1<Response> DefaultWaitForCompletionResponseAsync(Operation operation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionResponseAsync>d__7")]
[ExtensionAttribute]
public static ValueTask`1<Response> DefaultWaitForCompletionResponseAsync(Operation operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response DefaultWaitForCompletionResponse(Operation operation, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response DefaultWaitForCompletionResponse(Operation operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationInternal : OperationInternalBase {
    private OperationInternal`1<VoidValue> _internalOperation;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public OperationInternal(IOperation operation, ClientDiagnostics clientDiagnostics, Response rawResponse, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    internal OperationInternal(OperationState finalState);
    public static OperationInternal Succeeded(Response rawResponse);
    public static OperationInternal Failed(Response rawResponse, RequestFailedException operationFailedException);
    public virtual Response get_RawResponse();
    public virtual bool get_HasCompleted();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal/<UpdateStatusAsync>d__9")]
protected virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationInternal`1 : OperationInternalBase {
    private IOperation`1<T> _operation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AsyncLockWithValue`1<OperationState`1<T>> _stateLock;
    private Response _rawResponse;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasValue { get; }
    public T Value { get; }
    public OperationInternal`1(IOperation`1<T> operation, ClientDiagnostics clientDiagnostics, Response rawResponse, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    internal OperationInternal`1(OperationState`1<T> finalState);
    public static OperationInternal`1<T> Succeeded(Response rawResponse, T value);
    public static OperationInternal`1<T> Failed(Response rawResponse, RequestFailedException operationFailedException);
    public virtual Response get_RawResponse();
    public virtual bool get_HasCompleted();
    public bool get_HasValue();
    public T get_Value();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__15")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__16")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__19")]
private ValueTask`1<Response`1<T>> WaitForCompletionAsync(bool async, Nullable`1<TimeSpan> pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<UpdateStatusAsync>d__20")]
protected virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
    private static Response GetResponseFromState(OperationState`1<T> state);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Azure.Core.OperationInternalBase : object {
    private ClientDiagnostics _diagnostics;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IReadOnlyDictionary`2<string, string> _scopeAttributes;
    [NullableAttribute("2")]
private DelayStrategy _fallbackStrategy;
    private AsyncLockWithValue`1<Response> _responseLock;
    private string _waitForCompletionResponseScopeName;
    protected string _updateStatusScopeName;
    protected string _waitForCompletionScopeName;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    protected OperationInternalBase(Response rawResponse);
    protected OperationInternalBase(ClientDiagnostics clientDiagnostics, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    public abstract virtual Response get_RawResponse();
    public abstract virtual bool get_HasCompleted();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<UpdateStatusAsync>d__13")]
public ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public Response UpdateStatus(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__15")]
public ValueTask`1<Response> WaitForCompletionResponseAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__16")]
public ValueTask`1<Response> WaitForCompletionResponseAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__19")]
protected ValueTask`1<Response> WaitForCompletionResponseAsync(bool async, Nullable`1<TimeSpan> pollingInterval, string scopeName, CancellationToken cancellationToken);
    protected abstract virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
    protected DiagnosticScope CreateScope(string scopeName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationPoller : object {
    private DelayStrategy _delayStrategy;
    [NullableContextAttribute("2")]
public OperationPoller(DelayStrategy strategy);
    public ValueTask`1<Response> WaitForCompletionResponseAsync(Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public ValueTask`1<Response> WaitForCompletionResponseAsync(OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__6`1")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(Operation`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(Operation`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__8`1")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(OperationInternal`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(OperationInternal`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__10")]
private ValueTask`1<Response> WaitForCompletionAsync(bool async, Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__11")]
private ValueTask`1<Response> WaitForCompletionAsync(bool async, OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<Delay>d__12")]
private static ValueTask Delay(bool async, TimeSpan delay, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.OperationState : ValueType {
    [CompilerGeneratedAttribute]
private Response <RawResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasSucceeded>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private RequestFailedException <OperationFailedException>k__BackingField;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasSucceeded { get; }
    [NullableAttribute("2")]
public RequestFailedException OperationFailedException { get; }
    private OperationState(Response rawResponse, bool hasCompleted, bool hasSucceeded, RequestFailedException operationFailedException);
    [CompilerGeneratedAttribute]
public Response get_RawResponse();
    [CompilerGeneratedAttribute]
public bool get_HasCompleted();
    [CompilerGeneratedAttribute]
public bool get_HasSucceeded();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public RequestFailedException get_OperationFailedException();
    public static OperationState Success(Response rawResponse);
    public static OperationState Failure(Response rawResponse, RequestFailedException operationFailedException);
    public static OperationState Pending(Response rawResponse);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.OperationState`1 : ValueType {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Response <RawResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasSucceeded>k__BackingField;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestFailedException <OperationFailedException>k__BackingField;
    [NullableAttribute("1")]
public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasSucceeded { get; }
    public T Value { get; }
    public RequestFailedException OperationFailedException { get; }
    private OperationState`1(Response rawResponse, bool hasCompleted, bool hasSucceeded, T value, RequestFailedException operationFailedException);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Response get_RawResponse();
    [CompilerGeneratedAttribute]
public bool get_HasCompleted();
    [CompilerGeneratedAttribute]
public bool get_HasSucceeded();
    [CompilerGeneratedAttribute]
public T get_Value();
    [CompilerGeneratedAttribute]
public RequestFailedException get_OperationFailedException();
    [NullableContextAttribute("1")]
public static OperationState`1<T> Success(Response rawResponse, T value);
    [NullableContextAttribute("1")]
public static OperationState`1<T> Failure(Response rawResponse, RequestFailedException operationFailedException);
    [NullableContextAttribute("1")]
public static OperationState`1<T> Pending(Response rawResponse);
}
internal static class Azure.Core.Page : object {
    [NullableContextAttribute("1")]
public static Page`1<T> FromValues(IEnumerable`1<T> values, string continuationToken, Response response);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.PageableHelpers : object {
    private static Byte[] DefaultItemPropertyName;
    private static Byte[] DefaultNextLinkPropertyName;
    private static PageableHelpers();
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.PageableHelpers/<CreateAsyncPageable>d__10`1")]
public static ValueTask`1<Operation`1<AsyncPageable`1<T>>> CreateAsyncPageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Operation`1<Pageable`1<T>> CreatePageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreateEnumerable(Func`2<Nullable`1<int>, Page`1<T>> firstPageFunc, Func`3<string, Nullable`1<int>, Page`1<T>> nextPageFunc, Nullable`1<int> pageSize);
    public static AsyncPageable`1<T> CreateAsyncEnumerable(Func`2<Nullable`1<int>, Task`1<Page`1<T>>> firstPageFunc, Func`3<string, Nullable`1<int>, Task`1<Page`1<T>>> nextPageFunc, Nullable`1<int> pageSize);
    private static ValueTuple`2<List`1<T>, string> ParseResponseForBinaryData(Response response, Byte[] itemPropertyName, Byte[] nextLinkPropertyName);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static object <ParseResponseForBinaryData>g__ReadBinaryData|19_0(Utf8JsonReader& r, ReadOnlyMemory`1& content);
}
internal static class Azure.Core.Pipeline.ActivityExtensions : object {
    [CompilerGeneratedAttribute]
private static bool <SupportsActivitySource>k__BackingField;
    public static bool SupportsActivitySource { get; private set; }
    private static ActivityExtensions();
    [CompilerGeneratedAttribute]
public static bool get_SupportsActivitySource();
    [CompilerGeneratedAttribute]
private static void set_SupportsActivitySource(bool value);
    public static void ResetFeatureSwitch();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.ClientDiagnostics : DiagnosticScopeFactory {
    public ClientDiagnostics(ClientOptions options, Nullable`1<bool> suppressNestedClientActivities);
    public ClientDiagnostics(string optionsNamespace, string providerNamespace, DiagnosticsOptions diagnosticsOptions, Nullable`1<bool> suppressNestedClientActivities);
    internal static HttpMessageSanitizer CreateMessageSanitizer(DiagnosticsOptions diagnostics);
    internal static string GetResourceProviderNamespace(Assembly assembly);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.Pipeline.DiagnosticScope : ValueType {
    private static string AzureSdkScopeLabel;
    internal static string OpenTelemetrySchemaAttribute;
    internal static string OpenTelemetrySchemaVersion;
    private static object AzureSdkScopeValue;
    [NullableAttribute("2")]
private ActivityAdapter _activityAdapter;
    private bool _suppressNestedClientActivities;
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    public bool IsEnabled { get; }
    [RequiresUnreferencedCodeAttribute("The diagnosticSourceArgs are used in a call to DiagnosticSource.Write, all necessary properties need to be preserved on the type being passed in using DynamicDependency attributes.")]
internal DiagnosticScope(string scopeName, DiagnosticListener source, object diagnosticSourceArgs, ActivitySource activitySource, ActivityKind kind, bool suppressNestedClientActivities);
    private static DiagnosticScope();
    [CompilerGeneratedAttribute]
public bool get_IsEnabled();
    public void AddAttribute(string name, string value);
    public void AddIntegerAttribute(string name, int value);
    public void AddLongAttribute(string name, long value);
    public void AddAttribute(string name, T value, Func`2<T, string> format);
    public void AddLink(string traceparent, string tracestate, IDictionary`2<string, object> attributes);
    public void Start();
    public void SetDisplayName(string displayName);
    public void SetStartTime(DateTime dateTime);
    public void SetTraceContext(string traceparent, string tracestate);
    public sealed virtual void Dispose();
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void Failed(Exception exception);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void Failed(string errorCode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.DiagnosticScopeFactory : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Dictionary`2<string, DiagnosticListener> _listeners;
    [NullableAttribute("2")]
private string _resourceProviderNamespace;
    [NullableAttribute("2")]
private DiagnosticListener _source;
    private bool _suppressNestedClientActivities;
    private bool _isStable;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ConcurrentDictionary`2<string, ActivitySource> ActivitySources;
    [CompilerGeneratedAttribute]
private bool <IsActivityEnabled>k__BackingField;
    public bool IsActivityEnabled { get; }
    public DiagnosticScopeFactory(string clientNamespace, string resourceProviderNamespace, bool isActivityEnabled, bool suppressNestedClientActivities, bool isStable);
    private static DiagnosticScopeFactory();
    [CompilerGeneratedAttribute]
public bool get_IsActivityEnabled();
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
public DiagnosticScope CreateScope(string name, ActivityKind kind);
    private ActivitySource GetActivitySource(string ns, string name);
}
[ExtensionAttribute]
internal static class Azure.Core.Pipeline.TaskExtensions : object {
    [ExtensionAttribute]
public static WithCancellationTaskAwaitable AwaitWithCancellation(Task task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static WithCancellationTaskAwaitable`1<T> AwaitWithCancellation(Task`1<T> task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static WithCancellationValueTaskAwaitable`1<T> AwaitWithCancellation(ValueTask`1<T> task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static T EnsureCompleted(Task`1<T> task);
    [ExtensionAttribute]
public static void EnsureCompleted(Task task);
    [ExtensionAttribute]
public static T EnsureCompleted(ValueTask`1<T> task);
    [ExtensionAttribute]
public static void EnsureCompleted(ValueTask task);
    [ExtensionAttribute]
public static Enumerable`1<T> EnsureSyncEnumerable(IAsyncEnumerable`1<T> asyncEnumerable);
    [ExtensionAttribute]
public static ConfiguredValueTaskAwaitable`1<T> EnsureCompleted(ConfiguredValueTaskAwaitable`1<T> awaitable, bool async);
    [ExtensionAttribute]
public static ConfiguredValueTaskAwaitable EnsureCompleted(ConfiguredValueTaskAwaitable awaitable, bool async);
    [ConditionalAttribute("DEBUG")]
private static void VerifyTaskCompleted(bool isCompleted);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Core.ProtocolOperation`1 : Operation`1<T> {
    private Func`2<Response, T> _resultSelector;
    private OperationInternal`1<T> _operation;
    private IOperation _nextLinkOperation;
    public string Id { get; }
    public T Value { get; }
    public bool HasCompleted { get; }
    public bool HasValue { get; }
    internal ProtocolOperation`1(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Request request, Response response, OperationFinalStateVia finalStateVia, string scopeName, Func`2<Response, T> resultSelector);
    public virtual string get_Id();
    public virtual T get_Value();
    public virtual bool get_HasCompleted();
    public virtual bool get_HasValue();
    public virtual Response GetRawResponse();
    public virtual Response UpdateStatus(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.ProtocolOperation`1/<Azure-Core-IOperation<T>-UpdateStateAsync>d__17")]
private sealed virtual override ValueTask`1<OperationState`1<T>> Azure.Core.IOperation<T>.UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.ProtocolOperationHelpers : object {
    public static Operation`1<TTo> Convert(Operation`1<TFrom> operation, Func`2<Response, TTo> convertFunc, ClientDiagnostics diagnostics, string scopeName);
    public static ValueTask`1<Operation`1<VoidValue>> ProcessMessageWithoutResponseValueAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static Operation`1<VoidValue> ProcessMessageWithoutResponseValue(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static ValueTask`1<Operation`1<BinaryData>> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static Operation`1<BinaryData> ProcessMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    [AsyncStateMachineAttribute("Azure.Core.ProtocolOperationHelpers/<ProcessMessageAsync>d__5`1")]
public static ValueTask`1<Operation`1<T>> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil, Func`2<Response, T> resultSelector);
    public static Operation`1<T> ProcessMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil, Func`2<Response, T> resultSelector);
}
internal class Azure.Core.RawRequestUriBuilder : RequestUriBuilder {
    [NullableAttribute("1")]
private static string SchemeSeparator;
    private static char HostSeparator;
    private static char PortSeparator;
    [NullableAttribute("1")]
private static Char[] HostOrPort;
    private static char QueryBeginSeparator;
    private static char QueryContinueSeparator;
    private static char QueryValueSeparator;
    private Nullable`1<RawWritingPosition> _position;
    private static RawRequestUriBuilder();
    private static void GetQueryParts(ReadOnlySpan`1<char> queryUnparsed, ReadOnlySpan`1& name, ReadOnlySpan`1& value);
    [NullableContextAttribute("1")]
public void AppendRaw(string value, bool escape);
    private void AppendRaw(ReadOnlySpan`1<char> value, bool escape);
    [NullableContextAttribute("1")]
public void AppendRawNextLink(string nextLink, bool escape);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.RequestHeaderExtensions : object {
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, bool value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, float value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, double value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, int value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, long value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, TimeSpan value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, Guid value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, Byte[] value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, BinaryData value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string prefix, IDictionary`2<string, string> headersToAdd);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, ETag value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, MatchConditions conditions);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, RequestConditions conditions, string format);
    [ExtensionAttribute]
public static void AddDelimited(RequestHeaders headers, string name, IEnumerable`1<T> value, string delimiter);
    [ExtensionAttribute]
public static void AddDelimited(RequestHeaders headers, string name, IEnumerable`1<T> value, string delimiter, string format);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.RequestUriBuilderExtensions : object {
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, bool value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, float value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, double value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, int value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, Byte[] value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, IEnumerable`1<string> value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, DateTimeOffset value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, TimeSpan value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, Guid value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, long value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, bool value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, float value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, DateTimeOffset value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, TimeSpan value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, double value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, decimal value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, int value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, long value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, TimeSpan value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, Byte[] value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, Guid value, bool escape);
    [ExtensionAttribute]
public static void AppendQueryDelimited(RequestUriBuilder builder, string name, IEnumerable`1<T> value, string delimiter, bool escape);
    [ExtensionAttribute]
public static void AppendQueryDelimited(RequestUriBuilder builder, string name, IEnumerable`1<T> value, string delimiter, string format, bool escape);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.ResponseHeadersExtensions : object {
    private static String[] KnownFormats;
    private static ResponseHeadersExtensions();
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Byte[]& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, T& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string prefix, IDictionary`2& value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.ResponseWithHeaders : object {
    public static ResponseWithHeaders`2<T, THeaders> FromValue(T value, THeaders headers, Response rawResponse);
    public static ResponseWithHeaders`1<THeaders> FromValue(THeaders headers, Response rawResponse);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.ResponseWithHeaders`1 : object {
    private Response _rawResponse;
    [CompilerGeneratedAttribute]
private THeaders <Headers>k__BackingField;
    public THeaders Headers { get; }
    public ResponseWithHeaders`1(THeaders headers, Response rawResponse);
    public Response GetRawResponse();
    [CompilerGeneratedAttribute]
public THeaders get_Headers();
    public static Response op_Implicit(ResponseWithHeaders`1<THeaders> self);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Core.ResponseWithHeaders`2 : Response`1<T> {
    private Response _rawResponse;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private THeaders <Headers>k__BackingField;
    public T Value { get; }
    public THeaders Headers { get; }
    public ResponseWithHeaders`2(T value, THeaders headers, Response rawResponse);
    public virtual Response GetRawResponse();
    [CompilerGeneratedAttribute]
public virtual T get_Value();
    [CompilerGeneratedAttribute]
public THeaders get_Headers();
    public static Response op_Implicit(ResponseWithHeaders`2<T, THeaders> self);
}
internal class Azure.Core.SequentialDelayStrategy : DelayStrategy {
    [NullableAttribute("1")]
private static TimeSpan[] _pollingSequence;
    private static TimeSpan _maxDelay;
    private static SequentialDelayStrategy();
    [NullableContextAttribute("2")]
protected virtual TimeSpan GetNextDelayCore(Response response, int retryNumber);
}
internal class Azure.Core.StringRequestContent : RequestContent {
    private Byte[] _bytes;
    public StringRequestContent(string value);
    [AsyncStateMachineAttribute("Azure.Core.StringRequestContent/<WriteToAsync>d__2")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.TypeFormatters : object {
    private static string RoundtripZFormat;
    [CompilerGeneratedAttribute]
private static string <DefaultNumberFormat>k__BackingField;
    public static string DefaultNumberFormat { get; }
    private static TypeFormatters();
    [CompilerGeneratedAttribute]
public static string get_DefaultNumberFormat();
    public static string ToString(bool value);
    public static string ToString(DateTime value, string format);
    public static string ToString(DateTimeOffset value, string format);
    public static string ToString(TimeSpan value, string format);
    public static string ToString(Byte[] value, string format);
    public static string ToBase64UrlString(Byte[] value);
    public static Byte[] FromBase64UrlString(string value);
    private static int GetNumBase64PaddingCharsToAddForDecode(int inputLength);
    public static DateTimeOffset ParseDateTimeOffset(string value, string format);
    public static TimeSpan ParseTimeSpan(string value, string format);
    [NullableContextAttribute("2")]
public static string ConvertToString(object value, string format);
}
[IsReadOnlyAttribute]
internal class Azure.Core.VoidValue : ValueType {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.XmlWriterContent : RequestContent {
    private MemoryStream _stream;
    private RequestContent _content;
    [CompilerGeneratedAttribute]
private XmlWriter <XmlWriter>k__BackingField;
    public XmlWriter XmlWriter { get; }
    [CompilerGeneratedAttribute]
public XmlWriter get_XmlWriter();
    [AsyncStateMachineAttribute("Azure.Core.XmlWriterContent/<WriteToAsync>d__6")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
internal class Azure.NoValueResponse`1 : NullableResponse`1<T> {
    private Response _response;
    public bool HasValue { get; }
    public T Value { get; }
    public NoValueResponse`1(Response response);
    public virtual bool get_HasValue();
    public virtual T get_Value();
    public virtual Response GetRawResponse();
    public virtual string ToString();
    internal string GetStatusMessage();
}
internal static class Azure.ResourceManager.Dns.Argument : object {
    public static void AssertNotNull(T value, string name);
    public static void AssertNotNull(Nullable`1<T> value, string name);
    public static void AssertNotNullOrEmpty(IEnumerable`1<T> value, string name);
    public static void AssertNotNullOrEmpty(string value, string name);
    public static void AssertNotNullOrWhiteSpace(string value, string name);
    public static void AssertNotDefault(T& value, string name);
    public static void AssertInRange(T value, T minimum, T maximum, string name);
    public static void AssertEnumDefined(Type enumType, object value, string name);
    public static T CheckNotNull(T value, string name);
    public static string CheckNotNullOrEmpty(string value, string name);
    public static void AssertNull(T value, string name, string message);
}
[DefaultMemberAttribute("Item")]
internal class Azure.ResourceManager.Dns.ChangeTrackingDictionary`2 : object {
    private IDictionary`2<TKey, TValue> _innerDictionary;
    public bool IsUndefined { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public ICollection`1<TKey> Keys { get; }
    public ICollection`1<TValue> Values { get; }
    public TValue Item { get; public set; }
    private IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys { get; }
    private IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values { get; }
    public ChangeTrackingDictionary`2(IDictionary`2<TKey, TValue> dictionary);
    public ChangeTrackingDictionary`2(IReadOnlyDictionary`2<TKey, TValue> dictionary);
    public bool get_IsUndefined();
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual ICollection`1<TKey> get_Keys();
    public sealed virtual ICollection`1<TValue> get_Values();
    public sealed virtual TValue get_Item(TKey key);
    public sealed virtual void set_Item(TKey key, TValue value);
    private sealed virtual override IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys();
    private sealed virtual override IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values();
    public sealed virtual IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual void Add(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int index);
    public sealed virtual bool Remove(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void Add(TKey key, TValue value);
    public sealed virtual bool ContainsKey(TKey key);
    public sealed virtual bool Remove(TKey key);
    public sealed virtual bool TryGetValue(TKey key, TValue& value);
    public IDictionary`2<TKey, TValue> EnsureDictionary();
    [IteratorStateMachineAttribute("Azure.ResourceManager.Dns.ChangeTrackingDictionary`2/<<GetEnumerator>g__enumerateEmpty|21_0>d")]
[CompilerGeneratedAttribute]
internal static IEnumerator`1<KeyValuePair`2<TKey, TValue>> <GetEnumerator>g__enumerateEmpty|21_0();
}
[DefaultMemberAttribute("Item")]
internal class Azure.ResourceManager.Dns.ChangeTrackingList`1 : object {
    private IList`1<T> _innerList;
    public bool IsUndefined { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public T Item { get; public set; }
    public ChangeTrackingList`1(IList`1<T> innerList);
    public ChangeTrackingList`1(IReadOnlyList`1<T> innerList);
    public bool get_IsUndefined();
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual T get_Item(int index);
    public sealed virtual void set_Item(int index, T value);
    public void Reset();
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual void Add(T item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(T item);
    public sealed virtual void CopyTo(T[] array, int arrayIndex);
    public sealed virtual bool Remove(T item);
    public sealed virtual int IndexOf(T item);
    public sealed virtual void Insert(int index, T item);
    public sealed virtual void RemoveAt(int index);
    public IList`1<T> EnsureList();
    [IteratorStateMachineAttribute("Azure.ResourceManager.Dns.ChangeTrackingList`1/<<GetEnumerator>g__enumerateEmpty|14_0>d")]
[CompilerGeneratedAttribute]
internal static IEnumerator`1<T> <GetEnumerator>g__enumerateEmpty|14_0();
}
public class Azure.ResourceManager.Dns.DnsAaaaRecordCollection : ArmCollection {
    private ClientDiagnostics _aaaaRecordInfoRecordSetsClientDiagnostics;
    private DnsAaaaRecordRestOperations _aaaaRecordInfoRecordSetsRestClient;
    internal DnsAaaaRecordCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsAaaaRecordCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<DnsAaaaRecordResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string aaaaRecordName, DnsAaaaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public virtual ArmOperation`1<DnsAaaaRecordResource> CreateOrUpdate(WaitUntil waitUntil, string aaaaRecordName, DnsAaaaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsAaaaRecordCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<DnsAaaaRecordResource>> GetAsync(string aaaaRecordName, CancellationToken cancellationToken);
    public virtual Response`1<DnsAaaaRecordResource> Get(string aaaaRecordName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<DnsAaaaRecordResource> GetAllAsync(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public virtual Pageable`1<DnsAaaaRecordResource> GetAll(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsAaaaRecordCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string aaaaRecordName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string aaaaRecordName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<DnsAaaaRecordResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Dns.DnsAaaaRecordResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<DnsAaaaRecordResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Dns.DnsAaaaRecordResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Dns.DnsAaaaRecordData : DnsBaseRecordData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IList`1<DnsAaaaRecordInfo> <DnsAaaaRecords>k__BackingField;
    public IList`1<DnsAaaaRecordInfo> DnsAaaaRecords { get; }
    internal DnsAaaaRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, string provisioningState, WritableSubResource targetResource, IList`1<DnsAaaaRecordInfo> aaaaRecords, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IList`1<DnsAaaaRecordInfo> get_DnsAaaaRecords();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsAaaaRecordData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsAaaaRecordData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsAaaaRecordData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsAaaaRecordData DeserializeDnsAaaaRecordData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsAaaaRecordData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsAaaaRecordData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsAaaaRecordData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsAaaaRecordData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.Dns.DnsAaaaRecordResource : ArmResource {
    private ClientDiagnostics _aaaaRecordInfoRecordSetsClientDiagnostics;
    private DnsAaaaRecordRestOperations _aaaaRecordInfoRecordSetsRestClient;
    private DnsAaaaRecordData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public DnsAaaaRecordData Data { get; }
    internal DnsAaaaRecordResource(ArmClient client, DnsAaaaRecordData data);
    internal DnsAaaaRecordResource(ArmClient client, ResourceIdentifier id);
    private static DnsAaaaRecordResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string zoneName, string aaaaRecordName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual DnsAaaaRecordData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsAaaaRecordResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<DnsAaaaRecordResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<DnsAaaaRecordResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsAaaaRecordResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsAaaaRecordResource/<UpdateAsync>d__18")]
public virtual Task`1<Response`1<DnsAaaaRecordResource>> UpdateAsync(DnsAaaaRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual Response`1<DnsAaaaRecordResource> Update(DnsAaaaRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Dns.DnsAaaaRecordRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public DnsAaaaRecordRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsAaaaRecordData data, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsAaaaRecordRestOperations/<UpdateAsync>d__6")]
public Task`1<Response`1<DnsAaaaRecordData>> UpdateAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsAaaaRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response`1<DnsAaaaRecordData> Update(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsAaaaRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsAaaaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsAaaaRecordRestOperations/<CreateOrUpdateAsync>d__9")]
public Task`1<Response`1<DnsAaaaRecordData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsAaaaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public Response`1<DnsAaaaRecordData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsAaaaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsAaaaRecordRestOperations/<DeleteAsync>d__12")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsAaaaRecordRestOperations/<GetAsync>d__15")]
public Task`1<Response`1<DnsAaaaRecordData>> GetAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, CancellationToken cancellationToken);
    public Response`1<DnsAaaaRecordData> Get(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsAaaaRecordRestOperations/<ListByTypeAsync>d__18")]
public Task`1<Response`1<DnsAaaaRecordListResult>> ListByTypeAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsAaaaRecordListResult> ListByType(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByDnsZoneRequest(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsAaaaRecordRestOperations/<ListByDnsZoneAsync>d__21")]
public Task`1<Response`1<DnsAaaaRecordListResult>> ListByDnsZoneAsync(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsAaaaRecordListResult> ListByDnsZone(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsAaaaRecordRestOperations/<ListByTypeNextPageAsync>d__24")]
public Task`1<Response`1<DnsAaaaRecordListResult>> ListByTypeNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsAaaaRecordListResult> ListByTypeNextPage(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByDnsZoneNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsAaaaRecordRestOperations/<ListByDnsZoneNextPageAsync>d__27")]
public Task`1<Response`1<DnsAaaaRecordListResult>> ListByDnsZoneNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsAaaaRecordListResult> ListByDnsZoneNextPage(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Dns.DnsARecordCollection : ArmCollection {
    private ClientDiagnostics _aRecordInfoRecordSetsClientDiagnostics;
    private DnsARecordRestOperations _aRecordInfoRecordSetsRestClient;
    internal DnsARecordCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsARecordCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<DnsARecordResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string aRecordName, DnsARecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public virtual ArmOperation`1<DnsARecordResource> CreateOrUpdate(WaitUntil waitUntil, string aRecordName, DnsARecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsARecordCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<DnsARecordResource>> GetAsync(string aRecordName, CancellationToken cancellationToken);
    public virtual Response`1<DnsARecordResource> Get(string aRecordName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<DnsARecordResource> GetAllAsync(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public virtual Pageable`1<DnsARecordResource> GetAll(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsARecordCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string aRecordName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string aRecordName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<DnsARecordResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Dns.DnsARecordResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<DnsARecordResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Dns.DnsARecordResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Dns.DnsARecordData : DnsBaseRecordData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IList`1<DnsARecordInfo> <DnsARecords>k__BackingField;
    public IList`1<DnsARecordInfo> DnsARecords { get; }
    internal DnsARecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, string provisioningState, WritableSubResource targetResource, IList`1<DnsARecordInfo> aRecords, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IList`1<DnsARecordInfo> get_DnsARecords();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsARecordData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsARecordData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsARecordData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsARecordData DeserializeDnsARecordData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsARecordData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsARecordData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsARecordData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsARecordData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.Dns.DnsARecordResource : ArmResource {
    private ClientDiagnostics _aRecordInfoRecordSetsClientDiagnostics;
    private DnsARecordRestOperations _aRecordInfoRecordSetsRestClient;
    private DnsARecordData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public DnsARecordData Data { get; }
    internal DnsARecordResource(ArmClient client, DnsARecordData data);
    internal DnsARecordResource(ArmClient client, ResourceIdentifier id);
    private static DnsARecordResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string zoneName, string aRecordName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual DnsARecordData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsARecordResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<DnsARecordResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<DnsARecordResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsARecordResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsARecordResource/<UpdateAsync>d__18")]
public virtual Task`1<Response`1<DnsARecordResource>> UpdateAsync(DnsARecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual Response`1<DnsARecordResource> Update(DnsARecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Dns.DnsARecordRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public DnsARecordRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsARecordData data, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsARecordRestOperations/<UpdateAsync>d__6")]
public Task`1<Response`1<DnsARecordData>> UpdateAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsARecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response`1<DnsARecordData> Update(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsARecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsARecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsARecordRestOperations/<CreateOrUpdateAsync>d__9")]
public Task`1<Response`1<DnsARecordData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsARecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public Response`1<DnsARecordData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsARecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsARecordRestOperations/<DeleteAsync>d__12")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsARecordRestOperations/<GetAsync>d__15")]
public Task`1<Response`1<DnsARecordData>> GetAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, CancellationToken cancellationToken);
    public Response`1<DnsARecordData> Get(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsARecordRestOperations/<ListByTypeAsync>d__18")]
public Task`1<Response`1<DnsARecordListResult>> ListByTypeAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsARecordListResult> ListByType(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByDnsZoneRequest(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsARecordRestOperations/<ListByDnsZoneAsync>d__21")]
public Task`1<Response`1<DnsARecordListResult>> ListByDnsZoneAsync(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsARecordListResult> ListByDnsZone(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsARecordRestOperations/<ListByTypeNextPageAsync>d__24")]
public Task`1<Response`1<DnsARecordListResult>> ListByTypeNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsARecordListResult> ListByTypeNextPage(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByDnsZoneNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsARecordRestOperations/<ListByDnsZoneNextPageAsync>d__27")]
public Task`1<Response`1<DnsARecordListResult>> ListByDnsZoneNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsARecordListResult> ListByDnsZoneNextPage(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Dns.DnsArmOperation : ArmOperation {
    private OperationInternal _operation;
    private Nullable`1<RehydrationToken> _completeRehydrationToken;
    private NextLinkOperationImplementation _nextLinkOperation;
    private string _operationId;
    public string Id { get; }
    public bool HasCompleted { get; }
    internal DnsArmOperation(Response response, Nullable`1<RehydrationToken> rehydrationToken);
    internal DnsArmOperation(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Request request, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    private string GetOperationId(Nullable`1<RehydrationToken> rehydrationToken);
    public virtual string get_Id();
    public virtual Nullable`1<RehydrationToken> GetRehydrationToken();
    public virtual bool get_HasCompleted();
    public virtual Response GetRawResponse();
    public virtual Response UpdateStatus(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public virtual Response WaitForCompletionResponse(CancellationToken cancellationToken);
    public virtual Response WaitForCompletionResponse(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> WaitForCompletionResponseAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> WaitForCompletionResponseAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Dns.DnsArmOperation`1 : ArmOperation`1<T> {
    private OperationInternal`1<T> _operation;
    private Nullable`1<RehydrationToken> _completeRehydrationToken;
    private NextLinkOperationImplementation _nextLinkOperation;
    private string _operationId;
    public string Id { get; }
    public T Value { get; }
    public bool HasValue { get; }
    public bool HasCompleted { get; }
    internal DnsArmOperation`1(Response`1<T> response, Nullable`1<RehydrationToken> rehydrationToken);
    internal DnsArmOperation`1(IOperationSource`1<T> source, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Request request, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    private string GetOperationId(Nullable`1<RehydrationToken> rehydrationToken);
    public virtual string get_Id();
    public virtual Nullable`1<RehydrationToken> GetRehydrationToken();
    public virtual T get_Value();
    public virtual bool get_HasValue();
    public virtual bool get_HasCompleted();
    public virtual Response GetRawResponse();
    public virtual Response UpdateStatus(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public virtual Response`1<T> WaitForCompletion(CancellationToken cancellationToken);
    public virtual Response`1<T> WaitForCompletion(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Dns.DnsBaseRecordData : ResourceData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private Nullable`1<ETag> <ETag>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <TtlInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Fqdn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProvisioningState>k__BackingField;
    [CompilerGeneratedAttribute]
private WritableSubResource <TargetResource>k__BackingField;
    public Nullable`1<ETag> ETag { get; public set; }
    public IDictionary`2<string, string> Metadata { get; }
    public Nullable`1<long> TtlInSeconds { get; public set; }
    public string Fqdn { get; }
    public string ProvisioningState { get; }
    internal WritableSubResource TargetResource { get; internal set; }
    public ResourceIdentifier TargetResourceId { get; public set; }
    internal DnsBaseRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, string provisioningState, WritableSubResource targetResource, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public Nullable`1<ETag> get_ETag();
    [CompilerGeneratedAttribute]
public void set_ETag(Nullable`1<ETag> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Metadata();
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_TtlInSeconds();
    [CompilerGeneratedAttribute]
public void set_TtlInSeconds(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_Fqdn();
    [CompilerGeneratedAttribute]
public string get_ProvisioningState();
    [CompilerGeneratedAttribute]
internal WritableSubResource get_TargetResource();
    [CompilerGeneratedAttribute]
internal void set_TargetResource(WritableSubResource value);
    public ResourceIdentifier get_TargetResourceId();
    public void set_TargetResourceId(ResourceIdentifier value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsBaseRecordData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsBaseRecordData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsBaseRecordData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsBaseRecordData DeserializeBaseRecordData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsBaseRecordData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsBaseRecordData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsBaseRecordData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsBaseRecordData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.Dns.DnsCaaRecordCollection : ArmCollection {
    private ClientDiagnostics _caaRecordInfoRecordSetsClientDiagnostics;
    private DnsCaaRecordRestOperations _caaRecordInfoRecordSetsRestClient;
    internal DnsCaaRecordCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCaaRecordCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<DnsCaaRecordResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string caaRecordName, DnsCaaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public virtual ArmOperation`1<DnsCaaRecordResource> CreateOrUpdate(WaitUntil waitUntil, string caaRecordName, DnsCaaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCaaRecordCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<DnsCaaRecordResource>> GetAsync(string caaRecordName, CancellationToken cancellationToken);
    public virtual Response`1<DnsCaaRecordResource> Get(string caaRecordName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<DnsCaaRecordResource> GetAllAsync(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public virtual Pageable`1<DnsCaaRecordResource> GetAll(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCaaRecordCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string caaRecordName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string caaRecordName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<DnsCaaRecordResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Dns.DnsCaaRecordResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<DnsCaaRecordResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Dns.DnsCaaRecordResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Dns.DnsCaaRecordData : DnsBaseRecordData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IList`1<DnsCaaRecordInfo> <DnsCaaRecords>k__BackingField;
    public IList`1<DnsCaaRecordInfo> DnsCaaRecords { get; }
    internal DnsCaaRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, string provisioningState, WritableSubResource targetResource, IList`1<DnsCaaRecordInfo> caaRecords, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IList`1<DnsCaaRecordInfo> get_DnsCaaRecords();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsCaaRecordData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsCaaRecordData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsCaaRecordData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsCaaRecordData DeserializeDnsCaaRecordData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsCaaRecordData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsCaaRecordData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsCaaRecordData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsCaaRecordData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.Dns.DnsCaaRecordResource : ArmResource {
    private ClientDiagnostics _caaRecordInfoRecordSetsClientDiagnostics;
    private DnsCaaRecordRestOperations _caaRecordInfoRecordSetsRestClient;
    private DnsCaaRecordData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public DnsCaaRecordData Data { get; }
    internal DnsCaaRecordResource(ArmClient client, DnsCaaRecordData data);
    internal DnsCaaRecordResource(ArmClient client, ResourceIdentifier id);
    private static DnsCaaRecordResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string zoneName, string caaRecordName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual DnsCaaRecordData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCaaRecordResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<DnsCaaRecordResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<DnsCaaRecordResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCaaRecordResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCaaRecordResource/<UpdateAsync>d__18")]
public virtual Task`1<Response`1<DnsCaaRecordResource>> UpdateAsync(DnsCaaRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual Response`1<DnsCaaRecordResource> Update(DnsCaaRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Dns.DnsCaaRecordRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public DnsCaaRecordRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsCaaRecordData data, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCaaRecordRestOperations/<UpdateAsync>d__6")]
public Task`1<Response`1<DnsCaaRecordData>> UpdateAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsCaaRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response`1<DnsCaaRecordData> Update(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsCaaRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsCaaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCaaRecordRestOperations/<CreateOrUpdateAsync>d__9")]
public Task`1<Response`1<DnsCaaRecordData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsCaaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public Response`1<DnsCaaRecordData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsCaaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCaaRecordRestOperations/<DeleteAsync>d__12")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCaaRecordRestOperations/<GetAsync>d__15")]
public Task`1<Response`1<DnsCaaRecordData>> GetAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, CancellationToken cancellationToken);
    public Response`1<DnsCaaRecordData> Get(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCaaRecordRestOperations/<ListByTypeAsync>d__18")]
public Task`1<Response`1<DnsCaaRecordListResult>> ListByTypeAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsCaaRecordListResult> ListByType(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByDnsZoneRequest(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCaaRecordRestOperations/<ListByDnsZoneAsync>d__21")]
public Task`1<Response`1<DnsCaaRecordListResult>> ListByDnsZoneAsync(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsCaaRecordListResult> ListByDnsZone(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCaaRecordRestOperations/<ListByTypeNextPageAsync>d__24")]
public Task`1<Response`1<DnsCaaRecordListResult>> ListByTypeNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsCaaRecordListResult> ListByTypeNextPage(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByDnsZoneNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCaaRecordRestOperations/<ListByDnsZoneNextPageAsync>d__27")]
public Task`1<Response`1<DnsCaaRecordListResult>> ListByDnsZoneNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsCaaRecordListResult> ListByDnsZoneNextPage(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Dns.DnsCnameRecordCollection : ArmCollection {
    private ClientDiagnostics _cnameRecordInfoRecordSetsClientDiagnostics;
    private DnsCnameRecordRestOperations _cnameRecordInfoRecordSetsRestClient;
    internal DnsCnameRecordCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCnameRecordCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<DnsCnameRecordResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string cnameRecordName, DnsCnameRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public virtual ArmOperation`1<DnsCnameRecordResource> CreateOrUpdate(WaitUntil waitUntil, string cnameRecordName, DnsCnameRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCnameRecordCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<DnsCnameRecordResource>> GetAsync(string cnameRecordName, CancellationToken cancellationToken);
    public virtual Response`1<DnsCnameRecordResource> Get(string cnameRecordName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<DnsCnameRecordResource> GetAllAsync(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public virtual Pageable`1<DnsCnameRecordResource> GetAll(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCnameRecordCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string cnameRecordName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string cnameRecordName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<DnsCnameRecordResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Dns.DnsCnameRecordResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<DnsCnameRecordResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Dns.DnsCnameRecordResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Dns.DnsCnameRecordData : DnsBaseRecordData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private DnsCnameRecordInfo <DnsCnameRecord>k__BackingField;
    internal DnsCnameRecordInfo DnsCnameRecord { get; internal set; }
    public string Cname { get; public set; }
    internal DnsCnameRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, string provisioningState, WritableSubResource targetResource, DnsCnameRecordInfo cnameRecord, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
internal DnsCnameRecordInfo get_DnsCnameRecord();
    [CompilerGeneratedAttribute]
internal void set_DnsCnameRecord(DnsCnameRecordInfo value);
    public string get_Cname();
    public void set_Cname(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsCnameRecordData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsCnameRecordData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsCnameRecordData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsCnameRecordData DeserializeDnsCnameRecordData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsCnameRecordData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsCnameRecordData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsCnameRecordData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsCnameRecordData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.Dns.DnsCnameRecordResource : ArmResource {
    private ClientDiagnostics _cnameRecordInfoRecordSetsClientDiagnostics;
    private DnsCnameRecordRestOperations _cnameRecordInfoRecordSetsRestClient;
    private DnsCnameRecordData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public DnsCnameRecordData Data { get; }
    internal DnsCnameRecordResource(ArmClient client, DnsCnameRecordData data);
    internal DnsCnameRecordResource(ArmClient client, ResourceIdentifier id);
    private static DnsCnameRecordResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string zoneName, string cnameRecordName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual DnsCnameRecordData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCnameRecordResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<DnsCnameRecordResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<DnsCnameRecordResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCnameRecordResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCnameRecordResource/<UpdateAsync>d__18")]
public virtual Task`1<Response`1<DnsCnameRecordResource>> UpdateAsync(DnsCnameRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual Response`1<DnsCnameRecordResource> Update(DnsCnameRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Dns.DnsCnameRecordRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public DnsCnameRecordRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsCnameRecordData data, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCnameRecordRestOperations/<UpdateAsync>d__6")]
public Task`1<Response`1<DnsCnameRecordData>> UpdateAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsCnameRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response`1<DnsCnameRecordData> Update(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsCnameRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsCnameRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCnameRecordRestOperations/<CreateOrUpdateAsync>d__9")]
public Task`1<Response`1<DnsCnameRecordData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsCnameRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public Response`1<DnsCnameRecordData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsCnameRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCnameRecordRestOperations/<DeleteAsync>d__12")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCnameRecordRestOperations/<GetAsync>d__15")]
public Task`1<Response`1<DnsCnameRecordData>> GetAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, CancellationToken cancellationToken);
    public Response`1<DnsCnameRecordData> Get(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCnameRecordRestOperations/<ListByTypeAsync>d__18")]
public Task`1<Response`1<DnsCnameRecordListResult>> ListByTypeAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsCnameRecordListResult> ListByType(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByDnsZoneRequest(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCnameRecordRestOperations/<ListByDnsZoneAsync>d__21")]
public Task`1<Response`1<DnsCnameRecordListResult>> ListByDnsZoneAsync(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsCnameRecordListResult> ListByDnsZone(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCnameRecordRestOperations/<ListByTypeNextPageAsync>d__24")]
public Task`1<Response`1<DnsCnameRecordListResult>> ListByTypeNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsCnameRecordListResult> ListByTypeNextPage(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByDnsZoneNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsCnameRecordRestOperations/<ListByDnsZoneNextPageAsync>d__27")]
public Task`1<Response`1<DnsCnameRecordListResult>> ListByDnsZoneNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsCnameRecordListResult> ListByDnsZoneNextPage(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Azure.ResourceManager.Dns.DnsExtensions : object {
    private static MockableDnsArmClient GetMockableDnsArmClient(ArmClient client);
    private static MockableDnsResourceGroupResource GetMockableDnsResourceGroupResource(ArmResource resource);
    private static MockableDnsSubscriptionResource GetMockableDnsSubscriptionResource(ArmResource resource);
    [ExtensionAttribute]
public static DnsARecordResource GetDnsARecordResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static DnsAaaaRecordResource GetDnsAaaaRecordResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static DnsCaaRecordResource GetDnsCaaRecordResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static DnsCnameRecordResource GetDnsCnameRecordResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static DnsMXRecordResource GetDnsMXRecordResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static DnsNSRecordResource GetDnsNSRecordResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static DnsPtrRecordResource GetDnsPtrRecordResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static DnsSoaRecordResource GetDnsSoaRecordResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static DnsSrvRecordResource GetDnsSrvRecordResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static DnsTxtRecordResource GetDnsTxtRecordResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static DnsZoneResource GetDnsZoneResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static DnsZoneCollection GetDnsZones(ResourceGroupResource resourceGroupResource);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsExtensions/<GetDnsZoneAsync>d__15")]
[ExtensionAttribute]
[ForwardsClientCallsAttribute]
public static Task`1<Response`1<DnsZoneResource>> GetDnsZoneAsync(ResourceGroupResource resourceGroupResource, string zoneName, CancellationToken cancellationToken);
    [ExtensionAttribute]
[ForwardsClientCallsAttribute]
public static Response`1<DnsZoneResource> GetDnsZone(ResourceGroupResource resourceGroupResource, string zoneName, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static AsyncPageable`1<DnsZoneResource> GetDnsZonesAsync(SubscriptionResource subscriptionResource, Nullable`1<int> top, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Pageable`1<DnsZoneResource> GetDnsZones(SubscriptionResource subscriptionResource, Nullable`1<int> top, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsExtensions/<GetDnsResourceReferencesByTargetResourcesAsync>d__19")]
[ExtensionAttribute]
public static Task`1<Response`1<DnsResourceReferenceResult>> GetDnsResourceReferencesByTargetResourcesAsync(SubscriptionResource subscriptionResource, DnsResourceReferenceContent content, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response`1<DnsResourceReferenceResult> GetDnsResourceReferencesByTargetResources(SubscriptionResource subscriptionResource, DnsResourceReferenceContent content, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Dns.DnsMXRecordCollection : ArmCollection {
    private ClientDiagnostics _mxRecordRecordSetsClientDiagnostics;
    private DnsMXRecordRestOperations _mxRecordRecordSetsRestClient;
    internal DnsMXRecordCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsMXRecordCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<DnsMXRecordResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string mxRecordName, DnsMXRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public virtual ArmOperation`1<DnsMXRecordResource> CreateOrUpdate(WaitUntil waitUntil, string mxRecordName, DnsMXRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsMXRecordCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<DnsMXRecordResource>> GetAsync(string mxRecordName, CancellationToken cancellationToken);
    public virtual Response`1<DnsMXRecordResource> Get(string mxRecordName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<DnsMXRecordResource> GetAllAsync(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public virtual Pageable`1<DnsMXRecordResource> GetAll(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsMXRecordCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string mxRecordName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string mxRecordName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<DnsMXRecordResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Dns.DnsMXRecordResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<DnsMXRecordResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Dns.DnsMXRecordResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Dns.DnsMXRecordData : DnsBaseRecordData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IList`1<DnsMXRecordInfo> <DnsMXRecords>k__BackingField;
    public IList`1<DnsMXRecordInfo> DnsMXRecords { get; }
    internal DnsMXRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, string provisioningState, WritableSubResource targetResource, IList`1<DnsMXRecordInfo> mxRecords, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IList`1<DnsMXRecordInfo> get_DnsMXRecords();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsMXRecordData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsMXRecordData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsMXRecordData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsMXRecordData DeserializeDnsMXRecordData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsMXRecordData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsMXRecordData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsMXRecordData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsMXRecordData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.Dns.DnsMXRecordResource : ArmResource {
    private ClientDiagnostics _mxRecordRecordSetsClientDiagnostics;
    private DnsMXRecordRestOperations _mxRecordRecordSetsRestClient;
    private DnsMXRecordData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public DnsMXRecordData Data { get; }
    internal DnsMXRecordResource(ArmClient client, DnsMXRecordData data);
    internal DnsMXRecordResource(ArmClient client, ResourceIdentifier id);
    private static DnsMXRecordResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string zoneName, string mxRecordName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual DnsMXRecordData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsMXRecordResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<DnsMXRecordResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<DnsMXRecordResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsMXRecordResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsMXRecordResource/<UpdateAsync>d__18")]
public virtual Task`1<Response`1<DnsMXRecordResource>> UpdateAsync(DnsMXRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual Response`1<DnsMXRecordResource> Update(DnsMXRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Dns.DnsMXRecordRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public DnsMXRecordRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsMXRecordData data, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsMXRecordRestOperations/<UpdateAsync>d__6")]
public Task`1<Response`1<DnsMXRecordData>> UpdateAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsMXRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response`1<DnsMXRecordData> Update(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsMXRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsMXRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsMXRecordRestOperations/<CreateOrUpdateAsync>d__9")]
public Task`1<Response`1<DnsMXRecordData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsMXRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public Response`1<DnsMXRecordData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsMXRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsMXRecordRestOperations/<DeleteAsync>d__12")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsMXRecordRestOperations/<GetAsync>d__15")]
public Task`1<Response`1<DnsMXRecordData>> GetAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, CancellationToken cancellationToken);
    public Response`1<DnsMXRecordData> Get(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsMXRecordRestOperations/<ListByTypeAsync>d__18")]
public Task`1<Response`1<DnsMXRecordListResult>> ListByTypeAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsMXRecordListResult> ListByType(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByDnsZoneRequest(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsMXRecordRestOperations/<ListByDnsZoneAsync>d__21")]
public Task`1<Response`1<DnsMXRecordListResult>> ListByDnsZoneAsync(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsMXRecordListResult> ListByDnsZone(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsMXRecordRestOperations/<ListByTypeNextPageAsync>d__24")]
public Task`1<Response`1<DnsMXRecordListResult>> ListByTypeNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsMXRecordListResult> ListByTypeNextPage(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByDnsZoneNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsMXRecordRestOperations/<ListByDnsZoneNextPageAsync>d__27")]
public Task`1<Response`1<DnsMXRecordListResult>> ListByDnsZoneNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsMXRecordListResult> ListByDnsZoneNextPage(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Dns.DnsNSRecordCollection : ArmCollection {
    private ClientDiagnostics _nsRecordRecordSetsClientDiagnostics;
    private DnsNSRecordRestOperations _nsRecordRecordSetsRestClient;
    internal DnsNSRecordCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsNSRecordCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<DnsNSRecordResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string nsRecordName, DnsNSRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public virtual ArmOperation`1<DnsNSRecordResource> CreateOrUpdate(WaitUntil waitUntil, string nsRecordName, DnsNSRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsNSRecordCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<DnsNSRecordResource>> GetAsync(string nsRecordName, CancellationToken cancellationToken);
    public virtual Response`1<DnsNSRecordResource> Get(string nsRecordName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<DnsNSRecordResource> GetAllAsync(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public virtual Pageable`1<DnsNSRecordResource> GetAll(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsNSRecordCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string nsRecordName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string nsRecordName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<DnsNSRecordResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Dns.DnsNSRecordResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<DnsNSRecordResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Dns.DnsNSRecordResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Dns.DnsNSRecordData : DnsBaseRecordData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IList`1<DnsNSRecordInfo> <DnsNSRecords>k__BackingField;
    public IList`1<DnsNSRecordInfo> DnsNSRecords { get; }
    internal DnsNSRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, string provisioningState, WritableSubResource targetResource, IList`1<DnsNSRecordInfo> nsRecords, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IList`1<DnsNSRecordInfo> get_DnsNSRecords();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsNSRecordData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsNSRecordData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsNSRecordData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsNSRecordData DeserializeDnsNSRecordData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsNSRecordData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsNSRecordData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsNSRecordData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsNSRecordData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.Dns.DnsNSRecordResource : ArmResource {
    private ClientDiagnostics _nsRecordRecordSetsClientDiagnostics;
    private DnsNSRecordRestOperations _nsRecordRecordSetsRestClient;
    private DnsNSRecordData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public DnsNSRecordData Data { get; }
    internal DnsNSRecordResource(ArmClient client, DnsNSRecordData data);
    internal DnsNSRecordResource(ArmClient client, ResourceIdentifier id);
    private static DnsNSRecordResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string zoneName, string nsRecordName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual DnsNSRecordData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsNSRecordResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<DnsNSRecordResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<DnsNSRecordResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsNSRecordResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsNSRecordResource/<UpdateAsync>d__18")]
public virtual Task`1<Response`1<DnsNSRecordResource>> UpdateAsync(DnsNSRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual Response`1<DnsNSRecordResource> Update(DnsNSRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Dns.DnsNSRecordRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public DnsNSRecordRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsNSRecordData data, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsNSRecordRestOperations/<UpdateAsync>d__6")]
public Task`1<Response`1<DnsNSRecordData>> UpdateAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsNSRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response`1<DnsNSRecordData> Update(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsNSRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsNSRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsNSRecordRestOperations/<CreateOrUpdateAsync>d__9")]
public Task`1<Response`1<DnsNSRecordData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsNSRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public Response`1<DnsNSRecordData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsNSRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsNSRecordRestOperations/<DeleteAsync>d__12")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsNSRecordRestOperations/<GetAsync>d__15")]
public Task`1<Response`1<DnsNSRecordData>> GetAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, CancellationToken cancellationToken);
    public Response`1<DnsNSRecordData> Get(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsNSRecordRestOperations/<ListByTypeAsync>d__18")]
public Task`1<Response`1<DnsNSRecordListResult>> ListByTypeAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsNSRecordListResult> ListByType(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByDnsZoneRequest(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsNSRecordRestOperations/<ListByDnsZoneAsync>d__21")]
public Task`1<Response`1<DnsNSRecordListResult>> ListByDnsZoneAsync(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsNSRecordListResult> ListByDnsZone(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsNSRecordRestOperations/<ListByTypeNextPageAsync>d__24")]
public Task`1<Response`1<DnsNSRecordListResult>> ListByTypeNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsNSRecordListResult> ListByTypeNextPage(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByDnsZoneNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsNSRecordRestOperations/<ListByDnsZoneNextPageAsync>d__27")]
public Task`1<Response`1<DnsNSRecordListResult>> ListByDnsZoneNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsNSRecordListResult> ListByDnsZoneNextPage(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Dns.DnsPtrRecordCollection : ArmCollection {
    private ClientDiagnostics _ptrRecordInfoRecordSetsClientDiagnostics;
    private DnsPtrRecordRestOperations _ptrRecordInfoRecordSetsRestClient;
    internal DnsPtrRecordCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsPtrRecordCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<DnsPtrRecordResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string ptrRecordName, DnsPtrRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public virtual ArmOperation`1<DnsPtrRecordResource> CreateOrUpdate(WaitUntil waitUntil, string ptrRecordName, DnsPtrRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsPtrRecordCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<DnsPtrRecordResource>> GetAsync(string ptrRecordName, CancellationToken cancellationToken);
    public virtual Response`1<DnsPtrRecordResource> Get(string ptrRecordName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<DnsPtrRecordResource> GetAllAsync(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public virtual Pageable`1<DnsPtrRecordResource> GetAll(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsPtrRecordCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string ptrRecordName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string ptrRecordName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<DnsPtrRecordResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Dns.DnsPtrRecordResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<DnsPtrRecordResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Dns.DnsPtrRecordResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Dns.DnsPtrRecordData : DnsBaseRecordData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IList`1<DnsPtrRecordInfo> <DnsPtrRecords>k__BackingField;
    public IList`1<DnsPtrRecordInfo> DnsPtrRecords { get; }
    internal DnsPtrRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, string provisioningState, WritableSubResource targetResource, IList`1<DnsPtrRecordInfo> ptrRecords, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IList`1<DnsPtrRecordInfo> get_DnsPtrRecords();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsPtrRecordData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsPtrRecordData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsPtrRecordData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsPtrRecordData DeserializeDnsPtrRecordData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsPtrRecordData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsPtrRecordData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsPtrRecordData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsPtrRecordData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.Dns.DnsPtrRecordResource : ArmResource {
    private ClientDiagnostics _ptrRecordInfoRecordSetsClientDiagnostics;
    private DnsPtrRecordRestOperations _ptrRecordInfoRecordSetsRestClient;
    private DnsPtrRecordData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public DnsPtrRecordData Data { get; }
    internal DnsPtrRecordResource(ArmClient client, DnsPtrRecordData data);
    internal DnsPtrRecordResource(ArmClient client, ResourceIdentifier id);
    private static DnsPtrRecordResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string zoneName, string ptrRecordName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual DnsPtrRecordData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsPtrRecordResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<DnsPtrRecordResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<DnsPtrRecordResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsPtrRecordResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsPtrRecordResource/<UpdateAsync>d__18")]
public virtual Task`1<Response`1<DnsPtrRecordResource>> UpdateAsync(DnsPtrRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual Response`1<DnsPtrRecordResource> Update(DnsPtrRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Dns.DnsPtrRecordRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public DnsPtrRecordRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsPtrRecordData data, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsPtrRecordRestOperations/<UpdateAsync>d__6")]
public Task`1<Response`1<DnsPtrRecordData>> UpdateAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsPtrRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response`1<DnsPtrRecordData> Update(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsPtrRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsPtrRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsPtrRecordRestOperations/<CreateOrUpdateAsync>d__9")]
public Task`1<Response`1<DnsPtrRecordData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsPtrRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public Response`1<DnsPtrRecordData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsPtrRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsPtrRecordRestOperations/<DeleteAsync>d__12")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsPtrRecordRestOperations/<GetAsync>d__15")]
public Task`1<Response`1<DnsPtrRecordData>> GetAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, CancellationToken cancellationToken);
    public Response`1<DnsPtrRecordData> Get(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsPtrRecordRestOperations/<ListByTypeAsync>d__18")]
public Task`1<Response`1<DnsPtrRecordListResult>> ListByTypeAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsPtrRecordListResult> ListByType(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByDnsZoneRequest(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsPtrRecordRestOperations/<ListByDnsZoneAsync>d__21")]
public Task`1<Response`1<DnsPtrRecordListResult>> ListByDnsZoneAsync(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsPtrRecordListResult> ListByDnsZone(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsPtrRecordRestOperations/<ListByTypeNextPageAsync>d__24")]
public Task`1<Response`1<DnsPtrRecordListResult>> ListByTypeNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsPtrRecordListResult> ListByTypeNextPage(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByDnsZoneNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsPtrRecordRestOperations/<ListByDnsZoneNextPageAsync>d__27")]
public Task`1<Response`1<DnsPtrRecordListResult>> ListByDnsZoneNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsPtrRecordListResult> ListByDnsZoneNextPage(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Dns.DnsRecordData : DnsBaseRecordData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IList`1<DnsARecordInfo> <DnsARecords>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<DnsAaaaRecordInfo> <DnsAaaaRecords>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<DnsMXRecordInfo> <DnsMXRecords>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<DnsNSRecordInfo> <DnsNSRecords>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<DnsPtrRecordInfo> <DnsPtrRecords>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<DnsSrvRecordInfo> <DnsSrvRecords>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<DnsTxtRecordInfo> <DnsTxtRecords>k__BackingField;
    [CompilerGeneratedAttribute]
private DnsCnameRecordInfo <DnsCnameRecordInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private DnsSoaRecordInfo <DnsSoaRecordInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<DnsCaaRecordInfo> <DnsCaaRecords>k__BackingField;
    public IList`1<DnsARecordInfo> DnsARecords { get; }
    public IList`1<DnsAaaaRecordInfo> DnsAaaaRecords { get; }
    public IList`1<DnsMXRecordInfo> DnsMXRecords { get; }
    public IList`1<DnsNSRecordInfo> DnsNSRecords { get; }
    public IList`1<DnsPtrRecordInfo> DnsPtrRecords { get; }
    public IList`1<DnsSrvRecordInfo> DnsSrvRecords { get; }
    public IList`1<DnsTxtRecordInfo> DnsTxtRecords { get; }
    internal DnsCnameRecordInfo DnsCnameRecordInfo { get; internal set; }
    public string Cname { get; public set; }
    public DnsSoaRecordInfo DnsSoaRecordInfo { get; public set; }
    public IList`1<DnsCaaRecordInfo> DnsCaaRecords { get; }
    internal DnsRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, string provisioningState, WritableSubResource targetResource, IList`1<DnsARecordInfo> aRecords, IList`1<DnsAaaaRecordInfo> aaaaRecords, IList`1<DnsMXRecordInfo> mxRecords, IList`1<DnsNSRecordInfo> nsRecords, IList`1<DnsPtrRecordInfo> ptrRecords, IList`1<DnsSrvRecordInfo> srvRecords, IList`1<DnsTxtRecordInfo> txtRecords, DnsCnameRecordInfo cnameRecordInfo, DnsSoaRecordInfo soaRecordInfo, IList`1<DnsCaaRecordInfo> caaRecords, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IList`1<DnsARecordInfo> get_DnsARecords();
    [CompilerGeneratedAttribute]
public IList`1<DnsAaaaRecordInfo> get_DnsAaaaRecords();
    [CompilerGeneratedAttribute]
public IList`1<DnsMXRecordInfo> get_DnsMXRecords();
    [CompilerGeneratedAttribute]
public IList`1<DnsNSRecordInfo> get_DnsNSRecords();
    [CompilerGeneratedAttribute]
public IList`1<DnsPtrRecordInfo> get_DnsPtrRecords();
    [CompilerGeneratedAttribute]
public IList`1<DnsSrvRecordInfo> get_DnsSrvRecords();
    [CompilerGeneratedAttribute]
public IList`1<DnsTxtRecordInfo> get_DnsTxtRecords();
    [CompilerGeneratedAttribute]
internal DnsCnameRecordInfo get_DnsCnameRecordInfo();
    [CompilerGeneratedAttribute]
internal void set_DnsCnameRecordInfo(DnsCnameRecordInfo value);
    public string get_Cname();
    public void set_Cname(string value);
    [CompilerGeneratedAttribute]
public DnsSoaRecordInfo get_DnsSoaRecordInfo();
    [CompilerGeneratedAttribute]
public void set_DnsSoaRecordInfo(DnsSoaRecordInfo value);
    [CompilerGeneratedAttribute]
public IList`1<DnsCaaRecordInfo> get_DnsCaaRecords();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsRecordData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsRecordData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsRecordData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsRecordData DeserializeDnsRecordData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsRecordData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsRecordData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsRecordData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsRecordData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.Dns.DnsResourceReferenceRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public DnsResourceReferenceRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal RequestUriBuilder CreateGetByTargetResourcesRequestUri(string subscriptionId, DnsResourceReferenceContent content);
    internal HttpMessage CreateGetByTargetResourcesRequest(string subscriptionId, DnsResourceReferenceContent content);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsResourceReferenceRestOperations/<GetByTargetResourcesAsync>d__7")]
public Task`1<Response`1<DnsResourceReferenceResult>> GetByTargetResourcesAsync(string subscriptionId, DnsResourceReferenceContent content, CancellationToken cancellationToken);
    public Response`1<DnsResourceReferenceResult> GetByTargetResources(string subscriptionId, DnsResourceReferenceContent content, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Dns.DnsSoaRecordCollection : ArmCollection {
    private ClientDiagnostics _soaRecordInfoRecordSetsClientDiagnostics;
    private DnsSoaRecordRestOperations _soaRecordInfoRecordSetsRestClient;
    internal DnsSoaRecordCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSoaRecordCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<DnsSoaRecordResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string soaRecordName, DnsSoaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public virtual ArmOperation`1<DnsSoaRecordResource> CreateOrUpdate(WaitUntil waitUntil, string soaRecordName, DnsSoaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSoaRecordCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<DnsSoaRecordResource>> GetAsync(string soaRecordName, CancellationToken cancellationToken);
    public virtual Response`1<DnsSoaRecordResource> Get(string soaRecordName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<DnsSoaRecordResource> GetAllAsync(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public virtual Pageable`1<DnsSoaRecordResource> GetAll(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSoaRecordCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string soaRecordName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string soaRecordName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<DnsSoaRecordResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Dns.DnsSoaRecordResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<DnsSoaRecordResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Dns.DnsSoaRecordResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Dns.DnsSoaRecordData : DnsBaseRecordData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private DnsSoaRecordInfo <DnsSoaRecord>k__BackingField;
    public DnsSoaRecordInfo DnsSoaRecord { get; public set; }
    internal DnsSoaRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, string provisioningState, WritableSubResource targetResource, DnsSoaRecordInfo soaRecord, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public DnsSoaRecordInfo get_DnsSoaRecord();
    [CompilerGeneratedAttribute]
public void set_DnsSoaRecord(DnsSoaRecordInfo value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsSoaRecordData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsSoaRecordData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsSoaRecordData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsSoaRecordData DeserializeDnsSoaRecordData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsSoaRecordData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsSoaRecordData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsSoaRecordData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsSoaRecordData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.Dns.DnsSoaRecordResource : ArmResource {
    private ClientDiagnostics _soaRecordInfoRecordSetsClientDiagnostics;
    private DnsSoaRecordRestOperations _soaRecordInfoRecordSetsRestClient;
    private DnsSoaRecordData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public DnsSoaRecordData Data { get; }
    internal DnsSoaRecordResource(ArmClient client, DnsSoaRecordData data);
    internal DnsSoaRecordResource(ArmClient client, ResourceIdentifier id);
    private static DnsSoaRecordResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string zoneName, string soaRecordName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual DnsSoaRecordData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSoaRecordResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<DnsSoaRecordResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<DnsSoaRecordResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSoaRecordResource/<UpdateAsync>d__16")]
public virtual Task`1<Response`1<DnsSoaRecordResource>> UpdateAsync(DnsSoaRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual Response`1<DnsSoaRecordResource> Update(DnsSoaRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Dns.DnsSoaRecordRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public DnsSoaRecordRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsSoaRecordData data, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSoaRecordRestOperations/<UpdateAsync>d__6")]
public Task`1<Response`1<DnsSoaRecordData>> UpdateAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsSoaRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response`1<DnsSoaRecordData> Update(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsSoaRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsSoaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSoaRecordRestOperations/<CreateOrUpdateAsync>d__9")]
public Task`1<Response`1<DnsSoaRecordData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsSoaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public Response`1<DnsSoaRecordData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsSoaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSoaRecordRestOperations/<GetAsync>d__12")]
public Task`1<Response`1<DnsSoaRecordData>> GetAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, CancellationToken cancellationToken);
    public Response`1<DnsSoaRecordData> Get(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSoaRecordRestOperations/<ListByTypeAsync>d__15")]
public Task`1<Response`1<DnsSoaRecordListResult>> ListByTypeAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsSoaRecordListResult> ListByType(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByDnsZoneRequest(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSoaRecordRestOperations/<ListByDnsZoneAsync>d__18")]
public Task`1<Response`1<DnsSoaRecordListResult>> ListByDnsZoneAsync(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsSoaRecordListResult> ListByDnsZone(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSoaRecordRestOperations/<ListByTypeNextPageAsync>d__21")]
public Task`1<Response`1<DnsSoaRecordListResult>> ListByTypeNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsSoaRecordListResult> ListByTypeNextPage(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByDnsZoneNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSoaRecordRestOperations/<ListByDnsZoneNextPageAsync>d__24")]
public Task`1<Response`1<DnsSoaRecordListResult>> ListByDnsZoneNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsSoaRecordListResult> ListByDnsZoneNextPage(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Dns.DnsSrvRecordCollection : ArmCollection {
    private ClientDiagnostics _srvRecordInfoRecordSetsClientDiagnostics;
    private DnsSrvRecordRestOperations _srvRecordInfoRecordSetsRestClient;
    internal DnsSrvRecordCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSrvRecordCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<DnsSrvRecordResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string srvRecordName, DnsSrvRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public virtual ArmOperation`1<DnsSrvRecordResource> CreateOrUpdate(WaitUntil waitUntil, string srvRecordName, DnsSrvRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSrvRecordCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<DnsSrvRecordResource>> GetAsync(string srvRecordName, CancellationToken cancellationToken);
    public virtual Response`1<DnsSrvRecordResource> Get(string srvRecordName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<DnsSrvRecordResource> GetAllAsync(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public virtual Pageable`1<DnsSrvRecordResource> GetAll(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSrvRecordCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string srvRecordName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string srvRecordName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<DnsSrvRecordResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Dns.DnsSrvRecordResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<DnsSrvRecordResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Dns.DnsSrvRecordResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Dns.DnsSrvRecordData : DnsBaseRecordData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IList`1<DnsSrvRecordInfo> <DnsSrvRecords>k__BackingField;
    public IList`1<DnsSrvRecordInfo> DnsSrvRecords { get; }
    internal DnsSrvRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, string provisioningState, WritableSubResource targetResource, IList`1<DnsSrvRecordInfo> srvRecords, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IList`1<DnsSrvRecordInfo> get_DnsSrvRecords();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsSrvRecordData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsSrvRecordData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsSrvRecordData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsSrvRecordData DeserializeDnsSrvRecordData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsSrvRecordData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsSrvRecordData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsSrvRecordData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsSrvRecordData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.Dns.DnsSrvRecordResource : ArmResource {
    private ClientDiagnostics _srvRecordInfoRecordSetsClientDiagnostics;
    private DnsSrvRecordRestOperations _srvRecordInfoRecordSetsRestClient;
    private DnsSrvRecordData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public DnsSrvRecordData Data { get; }
    internal DnsSrvRecordResource(ArmClient client, DnsSrvRecordData data);
    internal DnsSrvRecordResource(ArmClient client, ResourceIdentifier id);
    private static DnsSrvRecordResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string zoneName, string srvRecordName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual DnsSrvRecordData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSrvRecordResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<DnsSrvRecordResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<DnsSrvRecordResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSrvRecordResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSrvRecordResource/<UpdateAsync>d__18")]
public virtual Task`1<Response`1<DnsSrvRecordResource>> UpdateAsync(DnsSrvRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual Response`1<DnsSrvRecordResource> Update(DnsSrvRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Dns.DnsSrvRecordRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public DnsSrvRecordRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsSrvRecordData data, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSrvRecordRestOperations/<UpdateAsync>d__6")]
public Task`1<Response`1<DnsSrvRecordData>> UpdateAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsSrvRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response`1<DnsSrvRecordData> Update(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsSrvRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsSrvRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSrvRecordRestOperations/<CreateOrUpdateAsync>d__9")]
public Task`1<Response`1<DnsSrvRecordData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsSrvRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public Response`1<DnsSrvRecordData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsSrvRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSrvRecordRestOperations/<DeleteAsync>d__12")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSrvRecordRestOperations/<GetAsync>d__15")]
public Task`1<Response`1<DnsSrvRecordData>> GetAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, CancellationToken cancellationToken);
    public Response`1<DnsSrvRecordData> Get(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSrvRecordRestOperations/<ListByTypeAsync>d__18")]
public Task`1<Response`1<DnsSrvRecordListResult>> ListByTypeAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsSrvRecordListResult> ListByType(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByDnsZoneRequest(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSrvRecordRestOperations/<ListByDnsZoneAsync>d__21")]
public Task`1<Response`1<DnsSrvRecordListResult>> ListByDnsZoneAsync(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsSrvRecordListResult> ListByDnsZone(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSrvRecordRestOperations/<ListByTypeNextPageAsync>d__24")]
public Task`1<Response`1<DnsSrvRecordListResult>> ListByTypeNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsSrvRecordListResult> ListByTypeNextPage(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByDnsZoneNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsSrvRecordRestOperations/<ListByDnsZoneNextPageAsync>d__27")]
public Task`1<Response`1<DnsSrvRecordListResult>> ListByDnsZoneNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsSrvRecordListResult> ListByDnsZoneNextPage(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Dns.DnsTxtRecordCollection : ArmCollection {
    private ClientDiagnostics _txtRecordInfoRecordSetsClientDiagnostics;
    private DnsTxtRecordRestOperations _txtRecordInfoRecordSetsRestClient;
    internal DnsTxtRecordCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsTxtRecordCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<DnsTxtRecordResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string txtRecordName, DnsTxtRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public virtual ArmOperation`1<DnsTxtRecordResource> CreateOrUpdate(WaitUntil waitUntil, string txtRecordName, DnsTxtRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsTxtRecordCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<DnsTxtRecordResource>> GetAsync(string txtRecordName, CancellationToken cancellationToken);
    public virtual Response`1<DnsTxtRecordResource> Get(string txtRecordName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<DnsTxtRecordResource> GetAllAsync(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public virtual Pageable`1<DnsTxtRecordResource> GetAll(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsTxtRecordCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string txtRecordName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string txtRecordName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<DnsTxtRecordResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Dns.DnsTxtRecordResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<DnsTxtRecordResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Dns.DnsTxtRecordResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Dns.DnsTxtRecordData : DnsBaseRecordData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IList`1<DnsTxtRecordInfo> <DnsTxtRecords>k__BackingField;
    public IList`1<DnsTxtRecordInfo> DnsTxtRecords { get; }
    internal DnsTxtRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, string provisioningState, WritableSubResource targetResource, IList`1<DnsTxtRecordInfo> txtRecords, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IList`1<DnsTxtRecordInfo> get_DnsTxtRecords();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsTxtRecordData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsTxtRecordData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsTxtRecordData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsTxtRecordData DeserializeDnsTxtRecordData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsTxtRecordData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsTxtRecordData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsTxtRecordData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsTxtRecordData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.Dns.DnsTxtRecordResource : ArmResource {
    private ClientDiagnostics _txtRecordInfoRecordSetsClientDiagnostics;
    private DnsTxtRecordRestOperations _txtRecordInfoRecordSetsRestClient;
    private DnsTxtRecordData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public DnsTxtRecordData Data { get; }
    internal DnsTxtRecordResource(ArmClient client, DnsTxtRecordData data);
    internal DnsTxtRecordResource(ArmClient client, ResourceIdentifier id);
    private static DnsTxtRecordResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string zoneName, string txtRecordName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual DnsTxtRecordData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsTxtRecordResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<DnsTxtRecordResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<DnsTxtRecordResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsTxtRecordResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsTxtRecordResource/<UpdateAsync>d__18")]
public virtual Task`1<Response`1<DnsTxtRecordResource>> UpdateAsync(DnsTxtRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual Response`1<DnsTxtRecordResource> Update(DnsTxtRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Dns.DnsTxtRecordRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public DnsTxtRecordRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsTxtRecordData data, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsTxtRecordRestOperations/<UpdateAsync>d__6")]
public Task`1<Response`1<DnsTxtRecordData>> UpdateAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsTxtRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response`1<DnsTxtRecordData> Update(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsTxtRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsTxtRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsTxtRecordRestOperations/<CreateOrUpdateAsync>d__9")]
public Task`1<Response`1<DnsTxtRecordData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsTxtRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public Response`1<DnsTxtRecordData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsTxtRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsTxtRecordRestOperations/<DeleteAsync>d__12")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsTxtRecordRestOperations/<GetAsync>d__15")]
public Task`1<Response`1<DnsTxtRecordData>> GetAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, CancellationToken cancellationToken);
    public Response`1<DnsTxtRecordData> Get(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsTxtRecordRestOperations/<ListByTypeAsync>d__18")]
public Task`1<Response`1<DnsTxtRecordListResult>> ListByTypeAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsTxtRecordListResult> ListByType(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByDnsZoneRequest(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsTxtRecordRestOperations/<ListByDnsZoneAsync>d__21")]
public Task`1<Response`1<DnsTxtRecordListResult>> ListByDnsZoneAsync(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsTxtRecordListResult> ListByDnsZone(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsTxtRecordRestOperations/<ListByTypeNextPageAsync>d__24")]
public Task`1<Response`1<DnsTxtRecordListResult>> ListByTypeNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsTxtRecordListResult> ListByTypeNextPage(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByDnsZoneNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsTxtRecordRestOperations/<ListByDnsZoneNextPageAsync>d__27")]
public Task`1<Response`1<DnsTxtRecordListResult>> ListByDnsZoneNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsTxtRecordListResult> ListByDnsZoneNextPage(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Dns.DnsZoneCollection : ArmCollection {
    private ClientDiagnostics _dnsZoneZonesClientDiagnostics;
    private ZonesRestOperations _dnsZoneZonesRestClient;
    internal DnsZoneCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsZoneCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<DnsZoneResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string zoneName, DnsZoneData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public virtual ArmOperation`1<DnsZoneResource> CreateOrUpdate(WaitUntil waitUntil, string zoneName, DnsZoneData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsZoneCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<DnsZoneResource>> GetAsync(string zoneName, CancellationToken cancellationToken);
    public virtual Response`1<DnsZoneResource> Get(string zoneName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<DnsZoneResource> GetAllAsync(Nullable`1<int> top, CancellationToken cancellationToken);
    public virtual Pageable`1<DnsZoneResource> GetAll(Nullable`1<int> top, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsZoneCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string zoneName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string zoneName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsZoneCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<DnsZoneResource>> GetIfExistsAsync(string zoneName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<DnsZoneResource> GetIfExists(string zoneName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<DnsZoneResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Dns.DnsZoneResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<DnsZoneResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Dns.DnsZoneResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Dns.DnsZoneData : TrackedResourceData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private Nullable`1<ETag> <ETag>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MaxNumberOfRecords>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MaxNumberOfRecordsPerRecord>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <NumberOfRecords>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <NameServers>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DnsZoneType> <ZoneType>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<WritableSubResource> <RegistrationVirtualNetworks>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<WritableSubResource> <ResolutionVirtualNetworks>k__BackingField;
    public Nullable`1<ETag> ETag { get; public set; }
    public Nullable`1<long> MaxNumberOfRecords { get; }
    public Nullable`1<long> MaxNumberOfRecordsPerRecord { get; }
    public Nullable`1<long> NumberOfRecords { get; }
    public IReadOnlyList`1<string> NameServers { get; }
    public Nullable`1<DnsZoneType> ZoneType { get; public set; }
    public IList`1<WritableSubResource> RegistrationVirtualNetworks { get; }
    public IList`1<WritableSubResource> ResolutionVirtualNetworks { get; }
    public DnsZoneData(AzureLocation location);
    internal DnsZoneData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary`2<string, string> tags, AzureLocation location, Nullable`1<ETag> etag, Nullable`1<long> maxNumberOfRecords, Nullable`1<long> maxNumberOfRecordsPerRecord, Nullable`1<long> numberOfRecords, IReadOnlyList`1<string> nameServers, Nullable`1<DnsZoneType> zoneType, IList`1<WritableSubResource> registrationVirtualNetworks, IList`1<WritableSubResource> resolutionVirtualNetworks, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public Nullable`1<ETag> get_ETag();
    [CompilerGeneratedAttribute]
public void set_ETag(Nullable`1<ETag> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_MaxNumberOfRecords();
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_MaxNumberOfRecordsPerRecord();
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_NumberOfRecords();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_NameServers();
    [CompilerGeneratedAttribute]
public Nullable`1<DnsZoneType> get_ZoneType();
    [CompilerGeneratedAttribute]
public void set_ZoneType(Nullable`1<DnsZoneType> value);
    [CompilerGeneratedAttribute]
public IList`1<WritableSubResource> get_RegistrationVirtualNetworks();
    [CompilerGeneratedAttribute]
public IList`1<WritableSubResource> get_ResolutionVirtualNetworks();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsZoneData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsZoneData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.DnsZoneData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsZoneData DeserializeDnsZoneData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsZoneData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsZoneData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsZoneData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.DnsZoneData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.Dns.DnsZoneResource : ArmResource {
    private ClientDiagnostics _dnsZoneZonesClientDiagnostics;
    private ZonesRestOperations _dnsZoneZonesRestClient;
    private ClientDiagnostics _recordSetsClientDiagnostics;
    private RecordSetsRestOperations _recordSetsRestClient;
    private DnsZoneData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public DnsZoneData Data { get; }
    internal DnsZoneResource(ArmClient client, DnsZoneData data);
    internal DnsZoneResource(ArmClient client, ResourceIdentifier id);
    private static DnsZoneResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string zoneName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual DnsZoneData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    public virtual DnsARecordCollection GetDnsARecords();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsZoneResource/<GetDnsARecordAsync>d__17")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<DnsARecordResource>> GetDnsARecordAsync(string aRecordName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<DnsARecordResource> GetDnsARecord(string aRecordName, CancellationToken cancellationToken);
    public virtual DnsAaaaRecordCollection GetDnsAaaaRecords();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsZoneResource/<GetDnsAaaaRecordAsync>d__20")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<DnsAaaaRecordResource>> GetDnsAaaaRecordAsync(string aaaaRecordName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<DnsAaaaRecordResource> GetDnsAaaaRecord(string aaaaRecordName, CancellationToken cancellationToken);
    public virtual DnsCaaRecordCollection GetDnsCaaRecords();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsZoneResource/<GetDnsCaaRecordAsync>d__23")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<DnsCaaRecordResource>> GetDnsCaaRecordAsync(string caaRecordName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<DnsCaaRecordResource> GetDnsCaaRecord(string caaRecordName, CancellationToken cancellationToken);
    public virtual DnsCnameRecordCollection GetDnsCnameRecords();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsZoneResource/<GetDnsCnameRecordAsync>d__26")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<DnsCnameRecordResource>> GetDnsCnameRecordAsync(string cnameRecordName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<DnsCnameRecordResource> GetDnsCnameRecord(string cnameRecordName, CancellationToken cancellationToken);
    public virtual DnsMXRecordCollection GetDnsMXRecords();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsZoneResource/<GetDnsMXRecordAsync>d__29")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<DnsMXRecordResource>> GetDnsMXRecordAsync(string mxRecordName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<DnsMXRecordResource> GetDnsMXRecord(string mxRecordName, CancellationToken cancellationToken);
    public virtual DnsNSRecordCollection GetDnsNSRecords();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsZoneResource/<GetDnsNSRecordAsync>d__32")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<DnsNSRecordResource>> GetDnsNSRecordAsync(string nsRecordName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<DnsNSRecordResource> GetDnsNSRecord(string nsRecordName, CancellationToken cancellationToken);
    public virtual DnsPtrRecordCollection GetDnsPtrRecords();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsZoneResource/<GetDnsPtrRecordAsync>d__35")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<DnsPtrRecordResource>> GetDnsPtrRecordAsync(string ptrRecordName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<DnsPtrRecordResource> GetDnsPtrRecord(string ptrRecordName, CancellationToken cancellationToken);
    public virtual DnsSoaRecordCollection GetDnsSoaRecords();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsZoneResource/<GetDnsSoaRecordAsync>d__38")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<DnsSoaRecordResource>> GetDnsSoaRecordAsync(string soaRecordName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<DnsSoaRecordResource> GetDnsSoaRecord(string soaRecordName, CancellationToken cancellationToken);
    public virtual DnsSrvRecordCollection GetDnsSrvRecords();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsZoneResource/<GetDnsSrvRecordAsync>d__41")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<DnsSrvRecordResource>> GetDnsSrvRecordAsync(string srvRecordName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<DnsSrvRecordResource> GetDnsSrvRecord(string srvRecordName, CancellationToken cancellationToken);
    public virtual DnsTxtRecordCollection GetDnsTxtRecords();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsZoneResource/<GetDnsTxtRecordAsync>d__44")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<DnsTxtRecordResource>> GetDnsTxtRecordAsync(string txtRecordName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<DnsTxtRecordResource> GetDnsTxtRecord(string txtRecordName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsZoneResource/<GetAsync>d__46")]
public virtual Task`1<Response`1<DnsZoneResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<DnsZoneResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsZoneResource/<DeleteAsync>d__48")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsZoneResource/<UpdateAsync>d__50")]
public virtual Task`1<Response`1<DnsZoneResource>> UpdateAsync(DnsZonePatch patch, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual Response`1<DnsZoneResource> Update(DnsZonePatch patch, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<DnsRecordData> GetAllRecordDataAsync(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public virtual Pageable`1<DnsRecordData> GetAllRecordData(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsZoneResource/<AddTagAsync>d__54")]
public virtual Task`1<Response`1<DnsZoneResource>> AddTagAsync(string key, string value, CancellationToken cancellationToken);
    public virtual Response`1<DnsZoneResource> AddTag(string key, string value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsZoneResource/<SetTagsAsync>d__56")]
public virtual Task`1<Response`1<DnsZoneResource>> SetTagsAsync(IDictionary`2<string, string> tags, CancellationToken cancellationToken);
    public virtual Response`1<DnsZoneResource> SetTags(IDictionary`2<string, string> tags, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.DnsZoneResource/<RemoveTagAsync>d__58")]
public virtual Task`1<Response`1<DnsZoneResource>> RemoveTagAsync(string key, CancellationToken cancellationToken);
    public virtual Response`1<DnsZoneResource> RemoveTag(string key, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private DnsARecordCollection <GetDnsARecords>b__16_0(ArmClient Client);
    [CompilerGeneratedAttribute]
private DnsAaaaRecordCollection <GetDnsAaaaRecords>b__19_0(ArmClient Client);
    [CompilerGeneratedAttribute]
private DnsCaaRecordCollection <GetDnsCaaRecords>b__22_0(ArmClient Client);
    [CompilerGeneratedAttribute]
private DnsCnameRecordCollection <GetDnsCnameRecords>b__25_0(ArmClient Client);
    [CompilerGeneratedAttribute]
private DnsMXRecordCollection <GetDnsMXRecords>b__28_0(ArmClient Client);
    [CompilerGeneratedAttribute]
private DnsNSRecordCollection <GetDnsNSRecords>b__31_0(ArmClient Client);
    [CompilerGeneratedAttribute]
private DnsPtrRecordCollection <GetDnsPtrRecords>b__34_0(ArmClient Client);
    [CompilerGeneratedAttribute]
private DnsSoaRecordCollection <GetDnsSoaRecords>b__37_0(ArmClient Client);
    [CompilerGeneratedAttribute]
private DnsSrvRecordCollection <GetDnsSrvRecords>b__40_0(ArmClient Client);
    [CompilerGeneratedAttribute]
private DnsTxtRecordCollection <GetDnsTxtRecords>b__43_0(ArmClient Client);
}
public class Azure.ResourceManager.Dns.Mocking.MockableDnsArmClient : ArmResource {
    internal MockableDnsArmClient(ArmClient client, ResourceIdentifier id);
    internal MockableDnsArmClient(ArmClient client);
    private string GetApiVersionOrNull(ResourceType resourceType);
    public virtual DnsARecordResource GetDnsARecordResource(ResourceIdentifier id);
    public virtual DnsAaaaRecordResource GetDnsAaaaRecordResource(ResourceIdentifier id);
    public virtual DnsCaaRecordResource GetDnsCaaRecordResource(ResourceIdentifier id);
    public virtual DnsCnameRecordResource GetDnsCnameRecordResource(ResourceIdentifier id);
    public virtual DnsMXRecordResource GetDnsMXRecordResource(ResourceIdentifier id);
    public virtual DnsNSRecordResource GetDnsNSRecordResource(ResourceIdentifier id);
    public virtual DnsPtrRecordResource GetDnsPtrRecordResource(ResourceIdentifier id);
    public virtual DnsSoaRecordResource GetDnsSoaRecordResource(ResourceIdentifier id);
    public virtual DnsSrvRecordResource GetDnsSrvRecordResource(ResourceIdentifier id);
    public virtual DnsTxtRecordResource GetDnsTxtRecordResource(ResourceIdentifier id);
    public virtual DnsZoneResource GetDnsZoneResource(ResourceIdentifier id);
}
public class Azure.ResourceManager.Dns.Mocking.MockableDnsResourceGroupResource : ArmResource {
    internal MockableDnsResourceGroupResource(ArmClient client, ResourceIdentifier id);
    private string GetApiVersionOrNull(ResourceType resourceType);
    public virtual DnsZoneCollection GetDnsZones();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.Mocking.MockableDnsResourceGroupResource/<GetDnsZoneAsync>d__4")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<DnsZoneResource>> GetDnsZoneAsync(string zoneName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<DnsZoneResource> GetDnsZone(string zoneName, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private DnsZoneCollection <GetDnsZones>b__3_0(ArmClient client);
}
public class Azure.ResourceManager.Dns.Mocking.MockableDnsSubscriptionResource : ArmResource {
    private ClientDiagnostics _dnsZoneZonesClientDiagnostics;
    private ZonesRestOperations _dnsZoneZonesRestClient;
    private ClientDiagnostics _dnsResourceReferenceClientDiagnostics;
    private DnsResourceReferenceRestOperations _dnsResourceReferenceRestClient;
    private ClientDiagnostics DnsZoneZonesClientDiagnostics { get; }
    private ZonesRestOperations DnsZoneZonesRestClient { get; }
    private ClientDiagnostics DnsResourceReferenceClientDiagnostics { get; }
    private DnsResourceReferenceRestOperations DnsResourceReferenceRestClient { get; }
    internal MockableDnsSubscriptionResource(ArmClient client, ResourceIdentifier id);
    private ClientDiagnostics get_DnsZoneZonesClientDiagnostics();
    private ZonesRestOperations get_DnsZoneZonesRestClient();
    private ClientDiagnostics get_DnsResourceReferenceClientDiagnostics();
    private DnsResourceReferenceRestOperations get_DnsResourceReferenceRestClient();
    private string GetApiVersionOrNull(ResourceType resourceType);
    public virtual AsyncPageable`1<DnsZoneResource> GetDnsZonesAsync(Nullable`1<int> top, CancellationToken cancellationToken);
    public virtual Pageable`1<DnsZoneResource> GetDnsZones(Nullable`1<int> top, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.Mocking.MockableDnsSubscriptionResource/<GetDnsResourceReferencesByTargetResourcesAsync>d__17")]
public virtual Task`1<Response`1<DnsResourceReferenceResult>> GetDnsResourceReferencesByTargetResourcesAsync(DnsResourceReferenceContent content, CancellationToken cancellationToken);
    public virtual Response`1<DnsResourceReferenceResult> GetDnsResourceReferencesByTargetResources(DnsResourceReferenceContent content, CancellationToken cancellationToken);
}
public static class Azure.ResourceManager.Dns.Models.ArmDnsModelFactory : object {
    public static DnsAaaaRecordData DnsAaaaRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, string provisioningState, WritableSubResource targetResource, IList`1<DnsAaaaRecordInfo> aaaaRecords);
    public static DnsARecordData DnsARecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, string provisioningState, WritableSubResource targetResource, IList`1<DnsARecordInfo> aRecords);
    public static DnsCaaRecordData DnsCaaRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, string provisioningState, WritableSubResource targetResource, IList`1<DnsCaaRecordInfo> caaRecords);
    public static DnsCnameRecordData DnsCnameRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, string provisioningState, WritableSubResource targetResource, string CnameRecordName);
    public static DnsMXRecordData DnsMXRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, string provisioningState, WritableSubResource targetResource, IList`1<DnsMXRecordInfo> mxRecords);
    public static DnsNSRecordData DnsNSRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, string provisioningState, WritableSubResource targetResource, IList`1<DnsNSRecordInfo> nsRecords);
    public static DnsPtrRecordData DnsPtrRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, string provisioningState, WritableSubResource targetResource, IList`1<DnsPtrRecordInfo> ptrRecords);
    public static DnsSoaRecordData DnsSoaRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, string provisioningState, WritableSubResource targetResource, DnsSoaRecordInfo soaRecords);
    public static DnsSrvRecordData DnsSrvRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, string provisioningState, WritableSubResource targetResource, IList`1<DnsSrvRecordInfo> srvRecords);
    public static DnsTxtRecordData DnsTxtRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, string provisioningState, WritableSubResource targetResource, IList`1<DnsTxtRecordInfo> txtRecords);
    public static DnsZoneData DnsZoneData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary`2<string, string> tags, AzureLocation location, Nullable`1<ETag> etag, Nullable`1<long> maxNumberOfRecords, Nullable`1<long> maxNumberOfRecordsPerRecord, Nullable`1<long> numberOfRecords, IEnumerable`1<string> nameServers, Nullable`1<DnsZoneType> zoneType, IEnumerable`1<WritableSubResource> registrationVirtualNetworks, IEnumerable`1<WritableSubResource> resolutionVirtualNetworks);
    public static DnsResourceReferenceResult DnsResourceReferenceResult(IEnumerable`1<DnsResourceReference> dnsResourceReferences);
    public static DnsResourceReference DnsResourceReference(IEnumerable`1<WritableSubResource> dnsResources, ResourceIdentifier targetResourceId);
}
public class Azure.ResourceManager.Dns.Models.DnsAaaaRecordInfo : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IPAddress <IPv6Address>k__BackingField;
    public IPAddress IPv6Address { get; public set; }
    internal DnsAaaaRecordInfo(IPAddress ipv6Address, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IPAddress get_IPv6Address();
    [CompilerGeneratedAttribute]
public void set_IPv6Address(IPAddress value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsAaaaRecordInfo>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsAaaaRecordInfo System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsAaaaRecordInfo>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsAaaaRecordInfo DeserializeDnsAaaaRecordInfo(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsAaaaRecordInfo>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsAaaaRecordInfo System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsAaaaRecordInfo>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsAaaaRecordInfo>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.Dns.Models.DnsAaaaRecordListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<DnsAaaaRecordData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<DnsAaaaRecordData> Value { get; }
    public string NextLink { get; }
    internal DnsAaaaRecordListResult(IReadOnlyList`1<DnsAaaaRecordData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<DnsAaaaRecordData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsAaaaRecordListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsAaaaRecordListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsAaaaRecordListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsAaaaRecordListResult DeserializeDnsAaaaRecordListResult(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsAaaaRecordListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsAaaaRecordListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsAaaaRecordListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsAaaaRecordListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.Dns.Models.DnsARecordInfo : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IPAddress <IPv4Address>k__BackingField;
    public IPAddress IPv4Address { get; public set; }
    internal DnsARecordInfo(IPAddress ipv4Address, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IPAddress get_IPv4Address();
    [CompilerGeneratedAttribute]
public void set_IPv4Address(IPAddress value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsARecordInfo>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsARecordInfo System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsARecordInfo>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsARecordInfo DeserializeDnsARecordInfo(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsARecordInfo>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsARecordInfo System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsARecordInfo>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsARecordInfo>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.Dns.Models.DnsARecordListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<DnsARecordData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<DnsARecordData> Value { get; }
    public string NextLink { get; }
    internal DnsARecordListResult(IReadOnlyList`1<DnsARecordData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<DnsARecordData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsARecordListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsARecordListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsARecordListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsARecordListResult DeserializeDnsARecordListResult(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsARecordListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsARecordListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsARecordListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsARecordListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.Dns.Models.DnsCaaRecordInfo : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Flags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tag>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public Nullable`1<int> Flags { get; public set; }
    public string Tag { get; public set; }
    public string Value { get; public set; }
    internal DnsCaaRecordInfo(Nullable`1<int> flags, string tag, string value, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Flags();
    [CompilerGeneratedAttribute]
public void set_Flags(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Tag();
    [CompilerGeneratedAttribute]
public void set_Tag(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsCaaRecordInfo>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsCaaRecordInfo System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsCaaRecordInfo>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsCaaRecordInfo DeserializeDnsCaaRecordInfo(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsCaaRecordInfo>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsCaaRecordInfo System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsCaaRecordInfo>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsCaaRecordInfo>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.Dns.Models.DnsCaaRecordListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<DnsCaaRecordData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<DnsCaaRecordData> Value { get; }
    public string NextLink { get; }
    internal DnsCaaRecordListResult(IReadOnlyList`1<DnsCaaRecordData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<DnsCaaRecordData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsCaaRecordListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsCaaRecordListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsCaaRecordListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsCaaRecordListResult DeserializeDnsCaaRecordListResult(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsCaaRecordListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsCaaRecordListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsCaaRecordListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsCaaRecordListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.Dns.Models.DnsCnameRecordInfo : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <Cname>k__BackingField;
    public string Cname { get; public set; }
    internal DnsCnameRecordInfo(string cname, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_Cname();
    [CompilerGeneratedAttribute]
public void set_Cname(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsCnameRecordInfo>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsCnameRecordInfo System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsCnameRecordInfo>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsCnameRecordInfo DeserializeDnsCnameRecordInfo(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsCnameRecordInfo>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsCnameRecordInfo System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsCnameRecordInfo>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsCnameRecordInfo>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.Dns.Models.DnsCnameRecordListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<DnsCnameRecordData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<DnsCnameRecordData> Value { get; }
    public string NextLink { get; }
    internal DnsCnameRecordListResult(IReadOnlyList`1<DnsCnameRecordData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<DnsCnameRecordData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsCnameRecordListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsCnameRecordListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsCnameRecordListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsCnameRecordListResult DeserializeDnsCnameRecordListResult(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsCnameRecordListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsCnameRecordListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsCnameRecordListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsCnameRecordListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.Dns.Models.DnsMXRecordInfo : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Preference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Exchange>k__BackingField;
    public Nullable`1<int> Preference { get; public set; }
    public string Exchange { get; public set; }
    internal DnsMXRecordInfo(Nullable`1<int> preference, string exchange, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Preference();
    [CompilerGeneratedAttribute]
public void set_Preference(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Exchange();
    [CompilerGeneratedAttribute]
public void set_Exchange(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsMXRecordInfo>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsMXRecordInfo System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsMXRecordInfo>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsMXRecordInfo DeserializeDnsMXRecordInfo(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsMXRecordInfo>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsMXRecordInfo System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsMXRecordInfo>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsMXRecordInfo>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.Dns.Models.DnsMXRecordListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<DnsMXRecordData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<DnsMXRecordData> Value { get; }
    public string NextLink { get; }
    internal DnsMXRecordListResult(IReadOnlyList`1<DnsMXRecordData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<DnsMXRecordData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsMXRecordListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsMXRecordListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsMXRecordListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsMXRecordListResult DeserializeDnsMXRecordListResult(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsMXRecordListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsMXRecordListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsMXRecordListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsMXRecordListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.Dns.Models.DnsNSRecordInfo : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <DnsNSDomainName>k__BackingField;
    public string DnsNSDomainName { get; public set; }
    internal DnsNSRecordInfo(string dnsNSDomainName, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_DnsNSDomainName();
    [CompilerGeneratedAttribute]
public void set_DnsNSDomainName(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsNSRecordInfo>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsNSRecordInfo System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsNSRecordInfo>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsNSRecordInfo DeserializeDnsNSRecordInfo(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsNSRecordInfo>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsNSRecordInfo System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsNSRecordInfo>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsNSRecordInfo>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.Dns.Models.DnsNSRecordListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<DnsNSRecordData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<DnsNSRecordData> Value { get; }
    public string NextLink { get; }
    internal DnsNSRecordListResult(IReadOnlyList`1<DnsNSRecordData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<DnsNSRecordData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsNSRecordListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsNSRecordListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsNSRecordListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsNSRecordListResult DeserializeDnsNSRecordListResult(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsNSRecordListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsNSRecordListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsNSRecordListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsNSRecordListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.Dns.Models.DnsPtrRecordInfo : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <DnsPtrDomainName>k__BackingField;
    public string DnsPtrDomainName { get; public set; }
    internal DnsPtrRecordInfo(string dnsPtrDomainName, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_DnsPtrDomainName();
    [CompilerGeneratedAttribute]
public void set_DnsPtrDomainName(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsPtrRecordInfo>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsPtrRecordInfo System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsPtrRecordInfo>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsPtrRecordInfo DeserializeDnsPtrRecordInfo(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsPtrRecordInfo>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsPtrRecordInfo System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsPtrRecordInfo>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsPtrRecordInfo>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.Dns.Models.DnsPtrRecordListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<DnsPtrRecordData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<DnsPtrRecordData> Value { get; }
    public string NextLink { get; }
    internal DnsPtrRecordListResult(IReadOnlyList`1<DnsPtrRecordData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<DnsPtrRecordData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsPtrRecordListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsPtrRecordListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsPtrRecordListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsPtrRecordListResult DeserializeDnsPtrRecordListResult(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsPtrRecordListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsPtrRecordListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsPtrRecordListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsPtrRecordListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.Dns.Models.DnsRecordListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<DnsRecordData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<DnsRecordData> Value { get; }
    public string NextLink { get; }
    internal DnsRecordListResult(IReadOnlyList`1<DnsRecordData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<DnsRecordData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsRecordListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsRecordListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsRecordListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsRecordListResult DeserializeDnsRecordListResult(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsRecordListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsRecordListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsRecordListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsRecordListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal enum Azure.ResourceManager.Dns.Models.DnsRecordType : Enum {
    public int value__;
    public static DnsRecordType A;
    public static DnsRecordType Aaaa;
    public static DnsRecordType CAA;
    public static DnsRecordType Cname;
    public static DnsRecordType MX;
    public static DnsRecordType NS;
    public static DnsRecordType PTR;
    public static DnsRecordType SOA;
    public static DnsRecordType SRV;
    public static DnsRecordType TXT;
}
[ExtensionAttribute]
internal static class Azure.ResourceManager.Dns.Models.DnsRecordTypeExtensions : object {
    [ExtensionAttribute]
public static string ToSerialString(DnsRecordType value);
    [ExtensionAttribute]
public static DnsRecordType ToDnsRecordType(string value);
}
public class Azure.ResourceManager.Dns.Models.DnsResourceReference : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<WritableSubResource> <DnsResources>k__BackingField;
    [CompilerGeneratedAttribute]
private WritableSubResource <TargetResource>k__BackingField;
    public IReadOnlyList`1<WritableSubResource> DnsResources { get; }
    internal WritableSubResource TargetResource { get; }
    public ResourceIdentifier TargetResourceId { get; }
    internal DnsResourceReference(IReadOnlyList`1<WritableSubResource> dnsResources, WritableSubResource targetResource, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<WritableSubResource> get_DnsResources();
    [CompilerGeneratedAttribute]
internal WritableSubResource get_TargetResource();
    public ResourceIdentifier get_TargetResourceId();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsResourceReference>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsResourceReference System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsResourceReference>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsResourceReference DeserializeDnsResourceReference(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsResourceReference>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsResourceReference System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsResourceReference>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsResourceReference>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.Dns.Models.DnsResourceReferenceContent : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IList`1<WritableSubResource> <TargetResources>k__BackingField;
    public IList`1<WritableSubResource> TargetResources { get; }
    internal DnsResourceReferenceContent(IList`1<WritableSubResource> targetResources, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IList`1<WritableSubResource> get_TargetResources();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsResourceReferenceContent>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsResourceReferenceContent System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsResourceReferenceContent>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsResourceReferenceContent DeserializeDnsResourceReferenceContent(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsResourceReferenceContent>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsResourceReferenceContent System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsResourceReferenceContent>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsResourceReferenceContent>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.Dns.Models.DnsResourceReferenceResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<DnsResourceReference> <DnsResourceReferences>k__BackingField;
    public IReadOnlyList`1<DnsResourceReference> DnsResourceReferences { get; }
    internal DnsResourceReferenceResult(IReadOnlyList`1<DnsResourceReference> dnsResourceReferences, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<DnsResourceReference> get_DnsResourceReferences();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsResourceReferenceResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsResourceReferenceResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsResourceReferenceResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsResourceReferenceResult DeserializeDnsResourceReferenceResult(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsResourceReferenceResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsResourceReferenceResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsResourceReferenceResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsResourceReferenceResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.Dns.Models.DnsSoaRecordInfo : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <SerialNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <RefreshTimeInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <RetryTimeInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ExpireTimeInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MinimumTtlInSeconds>k__BackingField;
    public string Host { get; public set; }
    public string Email { get; public set; }
    public Nullable`1<long> SerialNumber { get; public set; }
    public Nullable`1<long> RefreshTimeInSeconds { get; public set; }
    public Nullable`1<long> RetryTimeInSeconds { get; public set; }
    public Nullable`1<long> ExpireTimeInSeconds { get; public set; }
    public Nullable`1<long> MinimumTtlInSeconds { get; public set; }
    internal DnsSoaRecordInfo(string host, string email, Nullable`1<long> serialNumber, Nullable`1<long> refreshTimeInSeconds, Nullable`1<long> retryTimeInSeconds, Nullable`1<long> expireTimeInSeconds, Nullable`1<long> minimumTtlInSeconds, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public string get_Email();
    [CompilerGeneratedAttribute]
public void set_Email(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_SerialNumber();
    [CompilerGeneratedAttribute]
public void set_SerialNumber(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_RefreshTimeInSeconds();
    [CompilerGeneratedAttribute]
public void set_RefreshTimeInSeconds(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_RetryTimeInSeconds();
    [CompilerGeneratedAttribute]
public void set_RetryTimeInSeconds(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ExpireTimeInSeconds();
    [CompilerGeneratedAttribute]
public void set_ExpireTimeInSeconds(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_MinimumTtlInSeconds();
    [CompilerGeneratedAttribute]
public void set_MinimumTtlInSeconds(Nullable`1<long> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsSoaRecordInfo>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsSoaRecordInfo System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsSoaRecordInfo>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsSoaRecordInfo DeserializeDnsSoaRecordInfo(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsSoaRecordInfo>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsSoaRecordInfo System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsSoaRecordInfo>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsSoaRecordInfo>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.Dns.Models.DnsSoaRecordListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<DnsSoaRecordData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<DnsSoaRecordData> Value { get; }
    public string NextLink { get; }
    internal DnsSoaRecordListResult(IReadOnlyList`1<DnsSoaRecordData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<DnsSoaRecordData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsSoaRecordListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsSoaRecordListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsSoaRecordListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsSoaRecordListResult DeserializeDnsSoaRecordListResult(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsSoaRecordListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsSoaRecordListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsSoaRecordListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsSoaRecordListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.Dns.Models.DnsSrvRecordInfo : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Weight>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    public Nullable`1<int> Priority { get; public set; }
    public Nullable`1<int> Weight { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string Target { get; public set; }
    internal DnsSrvRecordInfo(Nullable`1<int> priority, Nullable`1<int> weight, Nullable`1<int> port, string target, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Priority();
    [CompilerGeneratedAttribute]
public void set_Priority(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Weight();
    [CompilerGeneratedAttribute]
public void set_Weight(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsSrvRecordInfo>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsSrvRecordInfo System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsSrvRecordInfo>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsSrvRecordInfo DeserializeDnsSrvRecordInfo(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsSrvRecordInfo>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsSrvRecordInfo System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsSrvRecordInfo>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsSrvRecordInfo>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.Dns.Models.DnsSrvRecordListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<DnsSrvRecordData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<DnsSrvRecordData> Value { get; }
    public string NextLink { get; }
    internal DnsSrvRecordListResult(IReadOnlyList`1<DnsSrvRecordData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<DnsSrvRecordData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsSrvRecordListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsSrvRecordListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsSrvRecordListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsSrvRecordListResult DeserializeDnsSrvRecordListResult(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsSrvRecordListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsSrvRecordListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsSrvRecordListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsSrvRecordListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.Dns.Models.DnsTxtRecordInfo : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IList`1<string> <Values>k__BackingField;
    public IList`1<string> Values { get; }
    internal DnsTxtRecordInfo(IList`1<string> values, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Values();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsTxtRecordInfo>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsTxtRecordInfo System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsTxtRecordInfo>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsTxtRecordInfo DeserializeDnsTxtRecordInfo(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsTxtRecordInfo>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsTxtRecordInfo System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsTxtRecordInfo>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsTxtRecordInfo>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.Dns.Models.DnsTxtRecordListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<DnsTxtRecordData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<DnsTxtRecordData> Value { get; }
    public string NextLink { get; }
    internal DnsTxtRecordListResult(IReadOnlyList`1<DnsTxtRecordData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<DnsTxtRecordData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsTxtRecordListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsTxtRecordListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsTxtRecordListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsTxtRecordListResult DeserializeDnsTxtRecordListResult(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsTxtRecordListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsTxtRecordListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsTxtRecordListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsTxtRecordListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.Dns.Models.DnsZoneListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<DnsZoneData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<DnsZoneData> Value { get; }
    public string NextLink { get; }
    internal DnsZoneListResult(IReadOnlyList`1<DnsZoneData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<DnsZoneData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsZoneListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsZoneListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsZoneListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsZoneListResult DeserializeDnsZoneListResult(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsZoneListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsZoneListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsZoneListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsZoneListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.Dns.Models.DnsZonePatch : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Tags>k__BackingField;
    public IDictionary`2<string, string> Tags { get; }
    internal DnsZonePatch(IDictionary`2<string, string> tags, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Tags();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsZonePatch>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override DnsZonePatch System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.Dns.Models.DnsZonePatch>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static DnsZonePatch DeserializeDnsZonePatch(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsZonePatch>.Write(ModelReaderWriterOptions options);
    private sealed virtual override DnsZonePatch System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsZonePatch>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.Dns.Models.DnsZonePatch>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public enum Azure.ResourceManager.Dns.Models.DnsZoneType : Enum {
    public int value__;
    public static DnsZoneType Public;
    public static DnsZoneType Private;
}
[ExtensionAttribute]
internal static class Azure.ResourceManager.Dns.Models.DnsZoneTypeExtensions : object {
    [ExtensionAttribute]
public static string ToSerialString(DnsZoneType value);
    [ExtensionAttribute]
public static DnsZoneType ToDnsZoneType(string value);
}
[ExtensionAttribute]
internal static class Azure.ResourceManager.Dns.ModelSerializationExtensions : object {
    internal static ModelReaderWriterOptions WireOptions;
    private static ModelSerializationExtensions();
    [ExtensionAttribute]
public static object GetObject(JsonElement element);
    [ExtensionAttribute]
public static Byte[] GetBytesFromBase64(JsonElement element, string format);
    [ExtensionAttribute]
public static DateTimeOffset GetDateTimeOffset(JsonElement element, string format);
    [ExtensionAttribute]
public static TimeSpan GetTimeSpan(JsonElement element, string format);
    [ExtensionAttribute]
public static char GetChar(JsonElement element);
    [ExtensionAttribute]
[ConditionalAttribute("DEBUG")]
public static void ThrowNonNullablePropertyIsNull(JsonProperty property);
    [ExtensionAttribute]
public static string GetRequiredString(JsonElement element);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, DateTime value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, TimeSpan value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, char value);
    [ExtensionAttribute]
public static void WriteBase64StringValue(Utf8JsonWriter writer, Byte[] value, string format);
    [ExtensionAttribute]
public static void WriteNumberValue(Utf8JsonWriter writer, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void WriteObjectValue(Utf8JsonWriter writer, T value, ModelReaderWriterOptions options);
    [ExtensionAttribute]
public static void WriteObjectValue(Utf8JsonWriter writer, object value, ModelReaderWriterOptions options);
}
internal static class Azure.ResourceManager.Dns.Optional : object {
    public static bool IsCollectionDefined(IEnumerable`1<T> collection);
    public static bool IsCollectionDefined(IDictionary`2<TKey, TValue> collection);
    public static bool IsCollectionDefined(IReadOnlyDictionary`2<TKey, TValue> collection);
    public static bool IsDefined(Nullable`1<T> value);
    public static bool IsDefined(object value);
    public static bool IsDefined(JsonElement value);
    public static bool IsDefined(string value);
}
internal static class Azure.ResourceManager.Dns.ProviderConstants : object {
    [CompilerGeneratedAttribute]
private static string <DefaultProviderNamespace>k__BackingField;
    public static string DefaultProviderNamespace { get; }
    private static ProviderConstants();
    [CompilerGeneratedAttribute]
public static string get_DefaultProviderNamespace();
}
internal class Azure.ResourceManager.Dns.RecordSetsRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public RecordSetsRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal RequestUriBuilder CreateUpdateRequestUri(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsRecordData data, Nullable`1<ETag> ifMatch);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsRecordData data, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.RecordSetsRestOperations/<UpdateAsync>d__7")]
public Task`1<Response`1<DnsRecordData>> UpdateAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response`1<DnsRecordData> Update(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateCreateOrUpdateRequestUri(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.RecordSetsRestOperations/<CreateOrUpdateAsync>d__11")]
public Task`1<Response`1<DnsRecordData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public Response`1<DnsRecordData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, DnsRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateDeleteRequestUri(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.RecordSetsRestOperations/<DeleteAsync>d__15")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateGetRequestUri(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.RecordSetsRestOperations/<GetAsync>d__19")]
public Task`1<Response`1<DnsRecordData>> GetAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, CancellationToken cancellationToken);
    public Response`1<DnsRecordData> Get(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, string relativeRecordSetName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListByTypeRequestUri(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix);
    internal HttpMessage CreateListByTypeRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.RecordSetsRestOperations/<ListByTypeAsync>d__23")]
public Task`1<Response`1<DnsRecordListResult>> ListByTypeAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsRecordListResult> ListByType(string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListByDnsZoneRequestUri(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix);
    internal HttpMessage CreateListByDnsZoneRequest(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.RecordSetsRestOperations/<ListByDnsZoneAsync>d__27")]
public Task`1<Response`1<DnsRecordListResult>> ListByDnsZoneAsync(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsRecordListResult> ListByDnsZone(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListByTypeNextPageRequestUri(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix);
    internal HttpMessage CreateListByTypeNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.RecordSetsRestOperations/<ListByTypeNextPageAsync>d__31")]
public Task`1<Response`1<DnsRecordListResult>> ListByTypeNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsRecordListResult> ListByTypeNextPage(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, DnsRecordType dnsRecordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListByDnsZoneNextPageRequestUri(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix);
    internal HttpMessage CreateListByDnsZoneNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.RecordSetsRestOperations/<ListByDnsZoneNextPageAsync>d__35")]
public Task`1<Response`1<DnsRecordListResult>> ListByDnsZoneNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<DnsRecordListResult> ListByDnsZoneNextPage(string nextLink, string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Dns.Utf8JsonRequestContent : RequestContent {
    private MemoryStream _stream;
    private RequestContent _content;
    [CompilerGeneratedAttribute]
private Utf8JsonWriter <JsonWriter>k__BackingField;
    public Utf8JsonWriter JsonWriter { get; }
    [CompilerGeneratedAttribute]
public Utf8JsonWriter get_JsonWriter();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.Utf8JsonRequestContent/<WriteToAsync>d__6")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellationToken);
    public virtual void WriteTo(Stream stream, CancellationToken cancellationToken);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
internal class Azure.ResourceManager.Dns.ZonesRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public ZonesRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal RequestUriBuilder CreateCreateOrUpdateRequestUri(string subscriptionId, string resourceGroupName, string zoneName, DnsZoneData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsZoneData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.ZonesRestOperations/<CreateOrUpdateAsync>d__7")]
public Task`1<Response`1<DnsZoneData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsZoneData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public Response`1<DnsZoneData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string zoneName, DnsZoneData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateDeleteRequestUri(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<ETag> ifMatch);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.ZonesRestOperations/<DeleteAsync>d__11")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string zoneName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateGetRequestUri(string subscriptionId, string resourceGroupName, string zoneName);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string zoneName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.ZonesRestOperations/<GetAsync>d__15")]
public Task`1<Response`1<DnsZoneData>> GetAsync(string subscriptionId, string resourceGroupName, string zoneName, CancellationToken cancellationToken);
    public Response`1<DnsZoneData> Get(string subscriptionId, string resourceGroupName, string zoneName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateUpdateRequestUri(string subscriptionId, string resourceGroupName, string zoneName, DnsZonePatch patch, Nullable`1<ETag> ifMatch);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string zoneName, DnsZonePatch patch, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.ZonesRestOperations/<UpdateAsync>d__19")]
public Task`1<Response`1<DnsZoneData>> UpdateAsync(string subscriptionId, string resourceGroupName, string zoneName, DnsZonePatch patch, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response`1<DnsZoneData> Update(string subscriptionId, string resourceGroupName, string zoneName, DnsZonePatch patch, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListByResourceGroupRequestUri(string subscriptionId, string resourceGroupName, Nullable`1<int> top);
    internal HttpMessage CreateListByResourceGroupRequest(string subscriptionId, string resourceGroupName, Nullable`1<int> top);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.ZonesRestOperations/<ListByResourceGroupAsync>d__23")]
public Task`1<Response`1<DnsZoneListResult>> ListByResourceGroupAsync(string subscriptionId, string resourceGroupName, Nullable`1<int> top, CancellationToken cancellationToken);
    public Response`1<DnsZoneListResult> ListByResourceGroup(string subscriptionId, string resourceGroupName, Nullable`1<int> top, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListRequestUri(string subscriptionId, Nullable`1<int> top);
    internal HttpMessage CreateListRequest(string subscriptionId, Nullable`1<int> top);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.ZonesRestOperations/<ListAsync>d__27")]
public Task`1<Response`1<DnsZoneListResult>> ListAsync(string subscriptionId, Nullable`1<int> top, CancellationToken cancellationToken);
    public Response`1<DnsZoneListResult> List(string subscriptionId, Nullable`1<int> top, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListByResourceGroupNextPageRequestUri(string nextLink, string subscriptionId, string resourceGroupName, Nullable`1<int> top);
    internal HttpMessage CreateListByResourceGroupNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, Nullable`1<int> top);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.ZonesRestOperations/<ListByResourceGroupNextPageAsync>d__31")]
public Task`1<Response`1<DnsZoneListResult>> ListByResourceGroupNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, Nullable`1<int> top, CancellationToken cancellationToken);
    public Response`1<DnsZoneListResult> ListByResourceGroupNextPage(string nextLink, string subscriptionId, string resourceGroupName, Nullable`1<int> top, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListNextPageRequestUri(string nextLink, string subscriptionId, Nullable`1<int> top);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, Nullable`1<int> top);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Dns.ZonesRestOperations/<ListNextPageAsync>d__35")]
public Task`1<Response`1<DnsZoneListResult>> ListNextPageAsync(string nextLink, string subscriptionId, Nullable`1<int> top, CancellationToken cancellationToken);
    public Response`1<DnsZoneListResult> ListNextPage(string nextLink, string subscriptionId, Nullable`1<int> top, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Models.ManagedServiceIdentityTypeV3Converter : JsonConverter`1<ManagedServiceIdentityType> {
    internal static string SystemAssignedUserAssignedV3Value;
    public virtual void Write(Utf8JsonWriter writer, ManagedServiceIdentityType model, JsonSerializerOptions options);
    public virtual ManagedServiceIdentityType Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.ResourceManager.SharedExtensions : object {
    [ExtensionAttribute]
public static string SubstringAfterProviderNamespace(ResourceIdentifier resourceId);
    [ExtensionAttribute]
public static IDictionary`2<string, string> ReplaceWith(IDictionary`2<string, string> dest, IDictionary`2<string, string> src);
    [AsyncStateMachineAttribute("Azure.ResourceManager.SharedExtensions/<FirstOrDefaultAsync>d__2`1")]
[ExtensionAttribute]
public static Task`1<TSource> FirstOrDefaultAsync(AsyncPageable`1<TSource> source, Func`2<TSource, bool> predicate, CancellationToken token);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("28108")]
internal class System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute : Attribute {
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public DynamicallyAccessedMembersAttribute(DynamicallyAccessedMemberTypes memberTypes);
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
}
[FlagsAttribute]
internal enum System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes : Enum {
    public int value__;
    public static DynamicallyAccessedMemberTypes None;
    public static DynamicallyAccessedMemberTypes PublicParameterlessConstructor;
    public static DynamicallyAccessedMemberTypes PublicConstructors;
    public static DynamicallyAccessedMemberTypes NonPublicConstructors;
    public static DynamicallyAccessedMemberTypes PublicMethods;
    public static DynamicallyAccessedMemberTypes NonPublicMethods;
    public static DynamicallyAccessedMemberTypes PublicFields;
    public static DynamicallyAccessedMemberTypes NonPublicFields;
    public static DynamicallyAccessedMemberTypes PublicNestedTypes;
    public static DynamicallyAccessedMemberTypes NonPublicNestedTypes;
    public static DynamicallyAccessedMemberTypes PublicProperties;
    public static DynamicallyAccessedMemberTypes NonPublicProperties;
    public static DynamicallyAccessedMemberTypes PublicEvents;
    public static DynamicallyAccessedMemberTypes NonPublicEvents;
    public static DynamicallyAccessedMemberTypes Interfaces;
    public static DynamicallyAccessedMemberTypes All;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("352")]
internal class System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <MemberSignature>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssemblyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Condition>k__BackingField;
    public string MemberSignature { get; }
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public Type Type { get; }
    public string TypeName { get; }
    public string AssemblyName { get; }
    public string Condition { get; public set; }
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature, Type type);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature, string typeName, string assemblyName);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(DynamicallyAccessedMemberTypes memberTypes, Type type);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(DynamicallyAccessedMemberTypes memberTypes, string typeName, string assemblyName);
    [CompilerGeneratedAttribute]
public string get_MemberSignature();
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public string get_AssemblyName();
    [CompilerGeneratedAttribute]
public string get_Condition();
    [CompilerGeneratedAttribute]
public void set_Condition(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("100")]
internal class System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    [NullableAttribute("2")]
public string Url { get; public set; }
    public RequiresDynamicCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Url(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("100")]
internal class System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    [NullableAttribute("2")]
public string Url { get; public set; }
    public RequiresUnreferencedCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Url(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
internal class System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute : Attribute {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <CheckId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Justification>k__BackingField;
    [NullableAttribute("1")]
public string Category { get; }
    [NullableAttribute("1")]
public string CheckId { get; }
    public string Scope { get; public set; }
    public string Target { get; public set; }
    public string MessageId { get; public set; }
    public string Justification { get; public set; }
    [NullableContextAttribute("1")]
public UnconditionalSuppressMessageAttribute(string category, string checkId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Category();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_CheckId();
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public string get_MessageId();
    [CompilerGeneratedAttribute]
public void set_MessageId(string value);
    [CompilerGeneratedAttribute]
public string get_Justification();
    [CompilerGeneratedAttribute]
public void set_Justification(string value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
