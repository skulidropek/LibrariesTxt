[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Autorest.CSharp.Core.GeneratorPageableHelpers : object {
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Autorest.CSharp.Core.GeneratorPageableHelpers/<CreateAsyncPageable>d__8`1")]
public static ValueTask`1<Operation`1<AsyncPageable`1<T>>> CreateAsyncPageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Operation`1<Pageable`1<T>> CreatePageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreateEnumerable(Func`2<Nullable`1<int>, Page`1<T>> firstPageFunc, Func`3<string, Nullable`1<int>, Page`1<T>> nextPageFunc, Nullable`1<int> pageSize);
    public static AsyncPageable`1<T> CreateAsyncEnumerable(Func`2<Nullable`1<int>, Task`1<Page`1<T>>> firstPageFunc, Func`3<string, Nullable`1<int>, Task`1<Page`1<T>>> nextPageFunc, Nullable`1<int> pageSize);
}
internal static class Azure.Core.AppContextSwitchHelper : object {
    [NullableContextAttribute("1")]
public static bool GetConfigValue(string appContexSwitchName, string environmentVariableName);
}
internal class Azure.Core.ArrayBufferWriter`1 : object {
    private T[] _buffer;
    private static int DefaultInitialBufferSize;
    [CompilerGeneratedAttribute]
private int <WrittenCount>k__BackingField;
    public ReadOnlyMemory`1<T> WrittenMemory { get; }
    public ReadOnlySpan`1<T> WrittenSpan { get; }
    public int WrittenCount { get; private set; }
    public int Capacity { get; }
    public int FreeCapacity { get; }
    public ArrayBufferWriter`1(int initialCapacity);
    public ReadOnlyMemory`1<T> get_WrittenMemory();
    public ReadOnlySpan`1<T> get_WrittenSpan();
    [CompilerGeneratedAttribute]
public int get_WrittenCount();
    [CompilerGeneratedAttribute]
private void set_WrittenCount(int value);
    public int get_Capacity();
    public int get_FreeCapacity();
    public void Clear();
    public sealed virtual void Advance(int count);
    public sealed virtual Memory`1<T> GetMemory(int sizeHint);
    public sealed virtual Span`1<T> GetSpan(int sizeHint);
    private void CheckAndResizeBuffer(int sizeHint);
    private static void ThrowInvalidOperationException_AdvancedTooFar(int capacity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.AsyncLockWithValue`1 : object {
    private object _syncObj;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Queue`1<TaskCompletionSource`1<LockOrValue<T>>> _waiters;
    private bool _isLocked;
    private bool _hasValue;
    private long _index;
    [NullableAttribute("2")]
private T _value;
    public bool HasValue { get; }
    public AsyncLockWithValue`1(T value);
    public bool get_HasValue();
    [NullableContextAttribute("2")]
public bool TryGetValue(T& value);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Azure.Core.AsyncLockWithValue`1/<GetLockOrValueAsync>d__11")]
public ValueTask`1<LockOrValue<T>> GetLockOrValueAsync(bool async, CancellationToken cancellationToken);
    private void SetValue(T value, Int64& lockIndex);
    private void Reset(Int64& lockIndex);
    private void UnlockOrGetNextWaiter(Int64& lockIndex, TaskCompletionSource`1& nextWaiter);
}
[AttributeUsageAttribute("1")]
internal class Azure.Core.AzureResourceProviderNamespaceAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ResourceProviderNamespace>k__BackingField;
    public string ResourceProviderNamespace { get; }
    public AzureResourceProviderNamespaceAttribute(string resourceProviderNamespace);
    [CompilerGeneratedAttribute]
public string get_ResourceProviderNamespace();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
internal class Azure.Core.CodeGenClientAttribute : CodeGenTypeAttribute {
    [CompilerGeneratedAttribute]
private Type <ParentClient>k__BackingField;
    public Type ParentClient { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenClientAttribute(string originalName);
    [CompilerGeneratedAttribute]
public Type get_ParentClient();
    [CompilerGeneratedAttribute]
public void set_ParentClient(Type value);
}
[AttributeUsageAttribute("384")]
internal class Azure.Core.CodeGenMemberAttribute : CodeGenTypeAttribute {
    [NullableContextAttribute("1")]
public CodeGenMemberAttribute(string originalName);
}
[AttributeUsageAttribute("28")]
internal class Azure.Core.CodeGenModelAttribute : CodeGenTypeAttribute {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <Usage>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <Formats>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] Usage { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] Formats { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenModelAttribute(string originalName);
    [CompilerGeneratedAttribute]
public String[] get_Usage();
    [CompilerGeneratedAttribute]
public void set_Usage(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_Formats();
    [CompilerGeneratedAttribute]
public void set_Formats(String[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1")]
internal class Azure.Core.CodeGenOverrideServiceVersionsAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Versions>k__BackingField;
    public String[] Versions { get; }
    public CodeGenOverrideServiceVersionsAttribute(String[] versions);
    [CompilerGeneratedAttribute]
public String[] get_Versions();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("12")]
internal class Azure.Core.CodeGenSerializationAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <SerializationPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SerializationValueHook>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeserializationValueHook>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BicepSerializationValueHook>k__BackingField;
    public string PropertyName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] SerializationPath { get; }
    public string SerializationValueHook { get; public set; }
    public string DeserializationValueHook { get; public set; }
    public string BicepSerializationValueHook { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenSerializationAttribute(string propertyName);
    [NullableContextAttribute("1")]
public CodeGenSerializationAttribute(string propertyName, string serializationName);
    [NullableContextAttribute("1")]
public CodeGenSerializationAttribute(string propertyName, String[] serializationPath);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public void set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public String[] get_SerializationPath();
    [CompilerGeneratedAttribute]
public string get_SerializationValueHook();
    [CompilerGeneratedAttribute]
public void set_SerializationValueHook(string value);
    [CompilerGeneratedAttribute]
public string get_DeserializationValueHook();
    [CompilerGeneratedAttribute]
public void set_DeserializationValueHook(string value);
    [CompilerGeneratedAttribute]
public string get_BicepSerializationValueHook();
    [CompilerGeneratedAttribute]
public void set_BicepSerializationValueHook(string value);
}
[AttributeUsageAttribute("28")]
internal class Azure.Core.CodeGenSuppressAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Member>k__BackingField;
    [CompilerGeneratedAttribute]
private Type[] <Parameters>k__BackingField;
    public string Member { get; }
    public Type[] Parameters { get; }
    public CodeGenSuppressAttribute(string member, Type[] parameters);
    [CompilerGeneratedAttribute]
public string get_Member();
    [CompilerGeneratedAttribute]
public Type[] get_Parameters();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1")]
internal class Azure.Core.CodeGenSuppressTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Typename>k__BackingField;
    public string Typename { get; }
    public CodeGenSuppressTypeAttribute(string typename);
    [CompilerGeneratedAttribute]
public string get_Typename();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
internal class Azure.Core.CodeGenTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <OriginalName>k__BackingField;
    public string OriginalName { get; }
    public CodeGenTypeAttribute(string originalName);
    [CompilerGeneratedAttribute]
public string get_OriginalName();
}
internal class Azure.Core.FixedDelayWithNoJitterStrategy : DelayStrategy {
    private static TimeSpan DefaultDelay;
    private TimeSpan _delay;
    public FixedDelayWithNoJitterStrategy(Nullable`1<TimeSpan> suggestedDelay);
    private static FixedDelayWithNoJitterStrategy();
    [NullableContextAttribute("2")]
protected virtual TimeSpan GetNextDelayCore(Response response, int retryNumber);
}
internal class Azure.Core.FormUrlEncodedContent : RequestContent {
    private List`1<KeyValuePair`2<string, string>> _values;
    private Encoding Latin1;
    private Byte[] _bytes;
    public void Add(string parameter, string value);
    private void BuildIfNeeded();
    [AsyncStateMachineAttribute("Azure.Core.FormUrlEncodedContent/<WriteToAsync>d__5")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
    private Byte[] GetContentByteArray(IEnumerable`1<KeyValuePair`2<string, string>> nameValueCollection);
    private static string Encode(string data);
}
[AttributeUsageAttribute("64")]
internal class Azure.Core.ForwardsClientCallsAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <SkipChecks>k__BackingField;
    public bool SkipChecks { get; }
    public ForwardsClientCallsAttribute(bool skipChecks);
    [CompilerGeneratedAttribute]
public bool get_SkipChecks();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.HttpMessageSanitizer : object {
    private static string LogAllValue;
    private bool _logAllHeaders;
    private bool _logFullQueries;
    private String[] _allowedQueryParameters;
    private string _redactedPlaceholder;
    private HashSet`1<string> _allowedHeaders;
    [NullableAttribute("2")]
[ThreadStaticAttribute]
private static StringBuilder s_cachedStringBuilder;
    private static int MaxCachedStringBuilderCapacity;
    internal static HttpMessageSanitizer Default;
    public HttpMessageSanitizer(String[] allowedQueryParameters, String[] allowedHeaders, string redactedPlaceholder);
    private static HttpMessageSanitizer();
    public string SanitizeHeader(string name, string value);
    public string SanitizeUrl(string url);
    private static StringBuilder RentStringBuilder(int capacity);
    private static string ToStringAndReturnStringBuilder(StringBuilder builder);
    [CompilerGeneratedAttribute]
internal static StringBuilder <SanitizeUrl>g__AppendReadOnlySpan|11_0(StringBuilder builder, ReadOnlySpan`1<char> span);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.HttpPipelineExtensions : object {
    [AsyncStateMachineAttribute("Azure.Core.HttpPipelineExtensions/<ProcessMessageAsync>d__0")]
[ExtensionAttribute]
public static ValueTask`1<Response> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, RequestContext requestContext, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response ProcessMessage(HttpPipeline pipeline, HttpMessage message, RequestContext requestContext, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.HttpPipelineExtensions/<ProcessHeadAsBoolMessageAsync>d__2")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<bool>> ProcessHeadAsBoolMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, RequestContext requestContext);
    [ExtensionAttribute]
public static Response`1<bool> ProcessHeadAsBoolMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, RequestContext requestContext);
    [NullableContextAttribute("0")]
private static ValueTuple`2<CancellationToken, ErrorOptions> ApplyRequestContext(RequestContext requestContext);
}
internal interface Azure.Core.IOperation {
    public abstract virtual ValueTask`1<OperationState> UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("2")]
internal interface Azure.Core.IOperation`1 {
    public abstract virtual ValueTask`1<OperationState`1<T>> UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
internal interface Azure.Core.IOperationSource`1 {
    public abstract virtual T CreateResult(Response response, CancellationToken cancellationToken);
    public abstract virtual ValueTask`1<T> CreateResultAsync(Response response, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Azure.Core.IUtf8JsonSerializable {
    public abstract virtual void Write(Utf8JsonWriter writer);
}
[NullableContextAttribute("1")]
internal interface Azure.Core.IXmlSerializable {
    public abstract virtual void Write(XmlWriter writer, string nameHint);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.NextLinkOperationImplementation : object {
    internal static string NotSet;
    internal static string RehydrationTokenVersion;
    private static string ApiVersionParam;
    private static String[] FailureStates;
    private static String[] SuccessStates;
    private HeaderSource _headerSource;
    private Uri _startRequestUri;
    private OperationFinalStateVia _finalStateVia;
    private HttpPipeline _pipeline;
    [NullableAttribute("2")]
private string _apiVersion;
    [NullableAttribute("2")]
private string _lastKnownLocation;
    private string _nextRequestUri;
    [CompilerGeneratedAttribute]
private string <OperationId>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestMethod <RequestMethod>k__BackingField;
    public string OperationId { get; private set; }
    public RequestMethod RequestMethod { get; }
    private NextLinkOperationImplementation(HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, string nextRequestUri, HeaderSource headerSource, string lastKnownLocation, OperationFinalStateVia finalStateVia, string apiVersion, string operationId, bool isNextRequestPolling);
    private static NextLinkOperationImplementation();
    [CompilerGeneratedAttribute]
public string get_OperationId();
    [CompilerGeneratedAttribute]
private void set_OperationId(string value);
    [CompilerGeneratedAttribute]
public RequestMethod get_RequestMethod();
    public static IOperation Create(HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    public static IOperation`1<T> Create(IOperationSource`1<T> operationSource, HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    public static IOperation`1<T> Create(IOperationSource`1<T> operationSource, IOperation operation);
    public static IOperation Create(HttpPipeline pipeline, RehydrationToken rehydrationToken);
    private static string ParseOperationId(Uri startRequestUri, string nextRequestUri);
    public RehydrationToken GetRehydrationToken();
    public static RehydrationToken GetRehydrationToken(RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia);
    public static RehydrationToken GetRehydrationToken(RequestMethod requestMethod, Uri startRequestUri, string nextRequestUri, string headerSource, string lastKnownLocation, string finalStateVia, string operationId);
    [NullableContextAttribute("2")]
private static string ConstructStringValue(string value);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Azure.Core.NextLinkOperationImplementation/<UpdateStateAsync>d__29")]
public sealed virtual ValueTask`1<OperationState> UpdateStateAsync(bool async, CancellationToken cancellationToken);
    private static OperationState GetOperationStateFromFinalResponse(RequestMethod requestMethod, Response response);
    private void UpdateNextRequestUri(ResponseHeaders headers);
    internal static string AppendOrReplaceApiVersion(string uri, string apiVersion);
    [NullableContextAttribute("0")]
internal static bool TryGetApiVersion(Uri startRequestUri, ReadOnlySpan`1& apiVersion);
    [NullableContextAttribute("2")]
private string GetFinalUri(string resourceLocation);
    private Response GetResponse(string uri, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.NextLinkOperationImplementation/<GetResponseAsync>d__36")]
private ValueTask`1<Response> GetResponseAsync(string uri, CancellationToken cancellationToken);
    private HttpMessage CreateRequest(string uri);
    private static bool IsFinalState(Response response, HeaderSource headerSource, Nullable`1& failureState, String& resourceLocation);
    private static string GetRequiredString(JsonElement& element);
    private static bool ShouldIgnoreHeader(RequestMethod method, Response response);
    private static HeaderSource GetHeaderSource(RequestMethod requestMethod, Uri requestUri, Response response, string apiVersion, String& nextRequestUri, Boolean& isNextRequestPolling);
    private static void AssertNotNull(T value, string name);
}
internal enum Azure.Core.OperationFinalStateVia : Enum {
    public int value__;
    public static OperationFinalStateVia AzureAsyncOperation;
    public static OperationFinalStateVia Location;
    public static OperationFinalStateVia OriginalUri;
    public static OperationFinalStateVia OperationLocation;
    public static OperationFinalStateVia LocationOverride;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.OperationHelpers : object {
    public static T GetValue(T& value);
    [NullableContextAttribute("0")]
public static T GetValue(Nullable`1& value);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionAsync>d__2`1")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<TResult>> DefaultWaitForCompletionAsync(Operation`1<TResult> operation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionAsync>d__3`1")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<TResult>> DefaultWaitForCompletionAsync(Operation`1<TResult> operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response`1<TResult> DefaultWaitForCompletion(Operation`1<TResult> operation, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response`1<TResult> DefaultWaitForCompletion(Operation`1<TResult> operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionResponseAsync>d__6")]
[ExtensionAttribute]
public static ValueTask`1<Response> DefaultWaitForCompletionResponseAsync(Operation operation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionResponseAsync>d__7")]
[ExtensionAttribute]
public static ValueTask`1<Response> DefaultWaitForCompletionResponseAsync(Operation operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response DefaultWaitForCompletionResponse(Operation operation, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response DefaultWaitForCompletionResponse(Operation operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationInternal : OperationInternalBase {
    private OperationInternal`1<VoidValue> _internalOperation;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public OperationInternal(IOperation operation, ClientDiagnostics clientDiagnostics, Response rawResponse, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    internal OperationInternal(OperationState finalState);
    public static OperationInternal Succeeded(Response rawResponse);
    public static OperationInternal Failed(Response rawResponse, RequestFailedException operationFailedException);
    public virtual Response get_RawResponse();
    public virtual bool get_HasCompleted();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal/<UpdateStatusAsync>d__9")]
protected virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationInternal`1 : OperationInternalBase {
    private IOperation`1<T> _operation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AsyncLockWithValue`1<OperationState`1<T>> _stateLock;
    private Response _rawResponse;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasValue { get; }
    public T Value { get; }
    public OperationInternal`1(IOperation`1<T> operation, ClientDiagnostics clientDiagnostics, Response rawResponse, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    internal OperationInternal`1(OperationState`1<T> finalState);
    public static OperationInternal`1<T> Succeeded(Response rawResponse, T value);
    public static OperationInternal`1<T> Failed(Response rawResponse, RequestFailedException operationFailedException);
    public virtual Response get_RawResponse();
    public virtual bool get_HasCompleted();
    public bool get_HasValue();
    public T get_Value();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__15")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__16")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__19")]
private ValueTask`1<Response`1<T>> WaitForCompletionAsync(bool async, Nullable`1<TimeSpan> pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<UpdateStatusAsync>d__20")]
protected virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
    private static Response GetResponseFromState(OperationState`1<T> state);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Azure.Core.OperationInternalBase : object {
    private ClientDiagnostics _diagnostics;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IReadOnlyDictionary`2<string, string> _scopeAttributes;
    [NullableAttribute("2")]
private DelayStrategy _fallbackStrategy;
    private AsyncLockWithValue`1<Response> _responseLock;
    private string _waitForCompletionResponseScopeName;
    protected string _updateStatusScopeName;
    protected string _waitForCompletionScopeName;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    protected OperationInternalBase(Response rawResponse);
    protected OperationInternalBase(ClientDiagnostics clientDiagnostics, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    public abstract virtual Response get_RawResponse();
    public abstract virtual bool get_HasCompleted();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<UpdateStatusAsync>d__13")]
public ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public Response UpdateStatus(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__15")]
public ValueTask`1<Response> WaitForCompletionResponseAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__16")]
public ValueTask`1<Response> WaitForCompletionResponseAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__19")]
protected ValueTask`1<Response> WaitForCompletionResponseAsync(bool async, Nullable`1<TimeSpan> pollingInterval, string scopeName, CancellationToken cancellationToken);
    protected abstract virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
    protected DiagnosticScope CreateScope(string scopeName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationPoller : object {
    private DelayStrategy _delayStrategy;
    [NullableContextAttribute("2")]
public OperationPoller(DelayStrategy strategy);
    public ValueTask`1<Response> WaitForCompletionResponseAsync(Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public ValueTask`1<Response> WaitForCompletionResponseAsync(OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__6`1")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(Operation`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(Operation`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__8`1")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(OperationInternal`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(OperationInternal`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__10")]
private ValueTask`1<Response> WaitForCompletionAsync(bool async, Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__11")]
private ValueTask`1<Response> WaitForCompletionAsync(bool async, OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<Delay>d__12")]
private static ValueTask Delay(bool async, TimeSpan delay, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.OperationState : ValueType {
    [CompilerGeneratedAttribute]
private Response <RawResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasSucceeded>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private RequestFailedException <OperationFailedException>k__BackingField;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasSucceeded { get; }
    [NullableAttribute("2")]
public RequestFailedException OperationFailedException { get; }
    private OperationState(Response rawResponse, bool hasCompleted, bool hasSucceeded, RequestFailedException operationFailedException);
    [CompilerGeneratedAttribute]
public Response get_RawResponse();
    [CompilerGeneratedAttribute]
public bool get_HasCompleted();
    [CompilerGeneratedAttribute]
public bool get_HasSucceeded();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public RequestFailedException get_OperationFailedException();
    public static OperationState Success(Response rawResponse);
    public static OperationState Failure(Response rawResponse, RequestFailedException operationFailedException);
    public static OperationState Pending(Response rawResponse);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.OperationState`1 : ValueType {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Response <RawResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasSucceeded>k__BackingField;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestFailedException <OperationFailedException>k__BackingField;
    [NullableAttribute("1")]
public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasSucceeded { get; }
    public T Value { get; }
    public RequestFailedException OperationFailedException { get; }
    private OperationState`1(Response rawResponse, bool hasCompleted, bool hasSucceeded, T value, RequestFailedException operationFailedException);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Response get_RawResponse();
    [CompilerGeneratedAttribute]
public bool get_HasCompleted();
    [CompilerGeneratedAttribute]
public bool get_HasSucceeded();
    [CompilerGeneratedAttribute]
public T get_Value();
    [CompilerGeneratedAttribute]
public RequestFailedException get_OperationFailedException();
    [NullableContextAttribute("1")]
public static OperationState`1<T> Success(Response rawResponse, T value);
    [NullableContextAttribute("1")]
public static OperationState`1<T> Failure(Response rawResponse, RequestFailedException operationFailedException);
    [NullableContextAttribute("1")]
public static OperationState`1<T> Pending(Response rawResponse);
}
internal static class Azure.Core.Page : object {
    [NullableContextAttribute("1")]
public static Page`1<T> FromValues(IEnumerable`1<T> values, string continuationToken, Response response);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.PageableHelpers : object {
    private static Byte[] DefaultItemPropertyName;
    private static Byte[] DefaultNextLinkPropertyName;
    private static PageableHelpers();
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.PageableHelpers/<CreateAsyncPageable>d__10`1")]
public static ValueTask`1<Operation`1<AsyncPageable`1<T>>> CreateAsyncPageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Operation`1<Pageable`1<T>> CreatePageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreateEnumerable(Func`2<Nullable`1<int>, Page`1<T>> firstPageFunc, Func`3<string, Nullable`1<int>, Page`1<T>> nextPageFunc, Nullable`1<int> pageSize);
    public static AsyncPageable`1<T> CreateAsyncEnumerable(Func`2<Nullable`1<int>, Task`1<Page`1<T>>> firstPageFunc, Func`3<string, Nullable`1<int>, Task`1<Page`1<T>>> nextPageFunc, Nullable`1<int> pageSize);
    private static ValueTuple`2<List`1<T>, string> ParseResponseForBinaryData(Response response, Byte[] itemPropertyName, Byte[] nextLinkPropertyName);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static object <ParseResponseForBinaryData>g__ReadBinaryData|19_0(Utf8JsonReader& r, ReadOnlyMemory`1& content);
}
internal static class Azure.Core.Pipeline.ActivityExtensions : object {
    [CompilerGeneratedAttribute]
private static bool <SupportsActivitySource>k__BackingField;
    public static bool SupportsActivitySource { get; private set; }
    private static ActivityExtensions();
    [CompilerGeneratedAttribute]
public static bool get_SupportsActivitySource();
    [CompilerGeneratedAttribute]
private static void set_SupportsActivitySource(bool value);
    public static void ResetFeatureSwitch();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.ClientDiagnostics : DiagnosticScopeFactory {
    public ClientDiagnostics(ClientOptions options, Nullable`1<bool> suppressNestedClientActivities);
    public ClientDiagnostics(string optionsNamespace, string providerNamespace, DiagnosticsOptions diagnosticsOptions, Nullable`1<bool> suppressNestedClientActivities);
    internal static HttpMessageSanitizer CreateMessageSanitizer(DiagnosticsOptions diagnostics);
    internal static string GetResourceProviderNamespace(Assembly assembly);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.Pipeline.DiagnosticScope : ValueType {
    private static string AzureSdkScopeLabel;
    internal static string OpenTelemetrySchemaAttribute;
    internal static string OpenTelemetrySchemaVersion;
    private static object AzureSdkScopeValue;
    [NullableAttribute("2")]
private ActivityAdapter _activityAdapter;
    private bool _suppressNestedClientActivities;
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    public bool IsEnabled { get; }
    [RequiresUnreferencedCodeAttribute("The diagnosticSourceArgs are used in a call to DiagnosticSource.Write, all necessary properties need to be preserved on the type being passed in using DynamicDependency attributes.")]
internal DiagnosticScope(string scopeName, DiagnosticListener source, object diagnosticSourceArgs, ActivitySource activitySource, ActivityKind kind, bool suppressNestedClientActivities);
    private static DiagnosticScope();
    [CompilerGeneratedAttribute]
public bool get_IsEnabled();
    public void AddAttribute(string name, string value);
    public void AddIntegerAttribute(string name, int value);
    public void AddLongAttribute(string name, long value);
    public void AddAttribute(string name, T value, Func`2<T, string> format);
    public void AddLink(string traceparent, string tracestate, IDictionary`2<string, object> attributes);
    public void Start();
    public void SetDisplayName(string displayName);
    public void SetStartTime(DateTime dateTime);
    public void SetTraceContext(string traceparent, string tracestate);
    public sealed virtual void Dispose();
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void Failed(Exception exception);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void Failed(string errorCode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.DiagnosticScopeFactory : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Dictionary`2<string, DiagnosticListener> _listeners;
    [NullableAttribute("2")]
private string _resourceProviderNamespace;
    [NullableAttribute("2")]
private DiagnosticListener _source;
    private bool _suppressNestedClientActivities;
    private bool _isStable;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ConcurrentDictionary`2<string, ActivitySource> ActivitySources;
    [CompilerGeneratedAttribute]
private bool <IsActivityEnabled>k__BackingField;
    public bool IsActivityEnabled { get; }
    public DiagnosticScopeFactory(string clientNamespace, string resourceProviderNamespace, bool isActivityEnabled, bool suppressNestedClientActivities, bool isStable);
    private static DiagnosticScopeFactory();
    [CompilerGeneratedAttribute]
public bool get_IsActivityEnabled();
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
public DiagnosticScope CreateScope(string name, ActivityKind kind);
    private ActivitySource GetActivitySource(string ns, string name);
}
[ExtensionAttribute]
internal static class Azure.Core.Pipeline.TaskExtensions : object {
    [ExtensionAttribute]
public static WithCancellationTaskAwaitable AwaitWithCancellation(Task task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static WithCancellationTaskAwaitable`1<T> AwaitWithCancellation(Task`1<T> task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static WithCancellationValueTaskAwaitable`1<T> AwaitWithCancellation(ValueTask`1<T> task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static T EnsureCompleted(Task`1<T> task);
    [ExtensionAttribute]
public static void EnsureCompleted(Task task);
    [ExtensionAttribute]
public static T EnsureCompleted(ValueTask`1<T> task);
    [ExtensionAttribute]
public static void EnsureCompleted(ValueTask task);
    [ExtensionAttribute]
public static Enumerable`1<T> EnsureSyncEnumerable(IAsyncEnumerable`1<T> asyncEnumerable);
    [ExtensionAttribute]
public static ConfiguredValueTaskAwaitable`1<T> EnsureCompleted(ConfiguredValueTaskAwaitable`1<T> awaitable, bool async);
    [ExtensionAttribute]
public static ConfiguredValueTaskAwaitable EnsureCompleted(ConfiguredValueTaskAwaitable awaitable, bool async);
    [ConditionalAttribute("DEBUG")]
private static void VerifyTaskCompleted(bool isCompleted);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Core.ProtocolOperation`1 : Operation`1<T> {
    private Func`2<Response, T> _resultSelector;
    private OperationInternal`1<T> _operation;
    private IOperation _nextLinkOperation;
    public string Id { get; }
    public T Value { get; }
    public bool HasCompleted { get; }
    public bool HasValue { get; }
    internal ProtocolOperation`1(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Request request, Response response, OperationFinalStateVia finalStateVia, string scopeName, Func`2<Response, T> resultSelector);
    public virtual string get_Id();
    public virtual T get_Value();
    public virtual bool get_HasCompleted();
    public virtual bool get_HasValue();
    public virtual Response GetRawResponse();
    public virtual Response UpdateStatus(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.ProtocolOperation`1/<Azure-Core-IOperation<T>-UpdateStateAsync>d__17")]
private sealed virtual override ValueTask`1<OperationState`1<T>> Azure.Core.IOperation<T>.UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.ProtocolOperationHelpers : object {
    public static Operation`1<TTo> Convert(Operation`1<TFrom> operation, Func`2<Response, TTo> convertFunc, ClientDiagnostics diagnostics, string scopeName);
    public static ValueTask`1<Operation`1<VoidValue>> ProcessMessageWithoutResponseValueAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static Operation`1<VoidValue> ProcessMessageWithoutResponseValue(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static ValueTask`1<Operation`1<BinaryData>> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static Operation`1<BinaryData> ProcessMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    [AsyncStateMachineAttribute("Azure.Core.ProtocolOperationHelpers/<ProcessMessageAsync>d__5`1")]
public static ValueTask`1<Operation`1<T>> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil, Func`2<Response, T> resultSelector);
    public static Operation`1<T> ProcessMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil, Func`2<Response, T> resultSelector);
}
internal class Azure.Core.RawRequestUriBuilder : RequestUriBuilder {
    [NullableAttribute("1")]
private static string SchemeSeparator;
    private static char HostSeparator;
    private static char PortSeparator;
    [NullableAttribute("1")]
private static Char[] HostOrPort;
    private static char QueryBeginSeparator;
    private static char QueryContinueSeparator;
    private static char QueryValueSeparator;
    private Nullable`1<RawWritingPosition> _position;
    private static RawRequestUriBuilder();
    private static void GetQueryParts(ReadOnlySpan`1<char> queryUnparsed, ReadOnlySpan`1& name, ReadOnlySpan`1& value);
    [NullableContextAttribute("1")]
public void AppendRaw(string value, bool escape);
    private void AppendRaw(ReadOnlySpan`1<char> value, bool escape);
    [NullableContextAttribute("1")]
public void AppendRawNextLink(string nextLink, bool escape);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.RequestHeaderExtensions : object {
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, bool value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, float value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, double value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, int value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, long value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, TimeSpan value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, Guid value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, Byte[] value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, BinaryData value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string prefix, IDictionary`2<string, string> headersToAdd);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, ETag value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, MatchConditions conditions);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, RequestConditions conditions, string format);
    [ExtensionAttribute]
public static void AddDelimited(RequestHeaders headers, string name, IEnumerable`1<T> value, string delimiter);
    [ExtensionAttribute]
public static void AddDelimited(RequestHeaders headers, string name, IEnumerable`1<T> value, string delimiter, string format);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.RequestUriBuilderExtensions : object {
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, bool value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, float value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, double value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, int value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, Byte[] value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, IEnumerable`1<string> value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, DateTimeOffset value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, TimeSpan value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, Guid value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, long value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, bool value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, float value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, DateTimeOffset value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, TimeSpan value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, double value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, decimal value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, int value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, long value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, TimeSpan value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, Byte[] value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, Guid value, bool escape);
    [ExtensionAttribute]
public static void AppendQueryDelimited(RequestUriBuilder builder, string name, IEnumerable`1<T> value, string delimiter, bool escape);
    [ExtensionAttribute]
public static void AppendQueryDelimited(RequestUriBuilder builder, string name, IEnumerable`1<T> value, string delimiter, string format, bool escape);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.ResponseHeadersExtensions : object {
    private static String[] KnownFormats;
    private static ResponseHeadersExtensions();
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Byte[]& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, T& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string prefix, IDictionary`2& value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.ResponseWithHeaders : object {
    public static ResponseWithHeaders`2<T, THeaders> FromValue(T value, THeaders headers, Response rawResponse);
    public static ResponseWithHeaders`1<THeaders> FromValue(THeaders headers, Response rawResponse);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.ResponseWithHeaders`1 : object {
    private Response _rawResponse;
    [CompilerGeneratedAttribute]
private THeaders <Headers>k__BackingField;
    public THeaders Headers { get; }
    public ResponseWithHeaders`1(THeaders headers, Response rawResponse);
    public Response GetRawResponse();
    [CompilerGeneratedAttribute]
public THeaders get_Headers();
    public static Response op_Implicit(ResponseWithHeaders`1<THeaders> self);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Core.ResponseWithHeaders`2 : Response`1<T> {
    private Response _rawResponse;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private THeaders <Headers>k__BackingField;
    public T Value { get; }
    public THeaders Headers { get; }
    public ResponseWithHeaders`2(T value, THeaders headers, Response rawResponse);
    public virtual Response GetRawResponse();
    [CompilerGeneratedAttribute]
public virtual T get_Value();
    [CompilerGeneratedAttribute]
public THeaders get_Headers();
    public static Response op_Implicit(ResponseWithHeaders`2<T, THeaders> self);
}
internal class Azure.Core.SequentialDelayStrategy : DelayStrategy {
    [NullableAttribute("1")]
private static TimeSpan[] _pollingSequence;
    private static TimeSpan _maxDelay;
    private static SequentialDelayStrategy();
    [NullableContextAttribute("2")]
protected virtual TimeSpan GetNextDelayCore(Response response, int retryNumber);
}
internal class Azure.Core.StringRequestContent : RequestContent {
    private Byte[] _bytes;
    public StringRequestContent(string value);
    [AsyncStateMachineAttribute("Azure.Core.StringRequestContent/<WriteToAsync>d__2")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.TypeFormatters : object {
    private static string RoundtripZFormat;
    [CompilerGeneratedAttribute]
private static string <DefaultNumberFormat>k__BackingField;
    public static string DefaultNumberFormat { get; }
    private static TypeFormatters();
    [CompilerGeneratedAttribute]
public static string get_DefaultNumberFormat();
    public static string ToString(bool value);
    public static string ToString(DateTime value, string format);
    public static string ToString(DateTimeOffset value, string format);
    public static string ToString(TimeSpan value, string format);
    public static string ToString(Byte[] value, string format);
    public static string ToBase64UrlString(Byte[] value);
    public static Byte[] FromBase64UrlString(string value);
    private static int GetNumBase64PaddingCharsToAddForDecode(int inputLength);
    public static DateTimeOffset ParseDateTimeOffset(string value, string format);
    public static TimeSpan ParseTimeSpan(string value, string format);
    [NullableContextAttribute("2")]
public static string ConvertToString(object value, string format);
}
[IsReadOnlyAttribute]
internal class Azure.Core.VoidValue : ValueType {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.XmlWriterContent : RequestContent {
    private MemoryStream _stream;
    private RequestContent _content;
    [CompilerGeneratedAttribute]
private XmlWriter <XmlWriter>k__BackingField;
    public XmlWriter XmlWriter { get; }
    [CompilerGeneratedAttribute]
public XmlWriter get_XmlWriter();
    [AsyncStateMachineAttribute("Azure.Core.XmlWriterContent/<WriteToAsync>d__6")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
internal class Azure.NoValueResponse`1 : NullableResponse`1<T> {
    private Response _response;
    public bool HasValue { get; }
    public T Value { get; }
    public NoValueResponse`1(Response response);
    public virtual bool get_HasValue();
    public virtual T get_Value();
    public virtual Response GetRawResponse();
    public virtual string ToString();
    internal string GetStatusMessage();
}
internal class Azure.ResourceManager.EventHubs.ApplicationGroupRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public ApplicationGroupRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal RequestUriBuilder CreateListByNamespaceRequestUri(string subscriptionId, string resourceGroupName, string namespaceName);
    internal HttpMessage CreateListByNamespaceRequest(string subscriptionId, string resourceGroupName, string namespaceName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.ApplicationGroupRestOperations/<ListByNamespaceAsync>d__7")]
public Task`1<Response`1<EventHubsApplicationGroupListResult>> ListByNamespaceAsync(string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
    public Response`1<EventHubsApplicationGroupListResult> ListByNamespace(string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateCreateOrUpdateApplicationGroupRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string applicationGroupName, EventHubsApplicationGroupData data);
    internal HttpMessage CreateCreateOrUpdateApplicationGroupRequest(string subscriptionId, string resourceGroupName, string namespaceName, string applicationGroupName, EventHubsApplicationGroupData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.ApplicationGroupRestOperations/<CreateOrUpdateApplicationGroupAsync>d__11")]
public Task`1<Response`1<EventHubsApplicationGroupData>> CreateOrUpdateApplicationGroupAsync(string subscriptionId, string resourceGroupName, string namespaceName, string applicationGroupName, EventHubsApplicationGroupData data, CancellationToken cancellationToken);
    public Response`1<EventHubsApplicationGroupData> CreateOrUpdateApplicationGroup(string subscriptionId, string resourceGroupName, string namespaceName, string applicationGroupName, EventHubsApplicationGroupData data, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateDeleteRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string applicationGroupName);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string namespaceName, string applicationGroupName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.ApplicationGroupRestOperations/<DeleteAsync>d__15")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string namespaceName, string applicationGroupName, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string namespaceName, string applicationGroupName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateGetRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string applicationGroupName);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string namespaceName, string applicationGroupName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.ApplicationGroupRestOperations/<GetAsync>d__19")]
public Task`1<Response`1<EventHubsApplicationGroupData>> GetAsync(string subscriptionId, string resourceGroupName, string namespaceName, string applicationGroupName, CancellationToken cancellationToken);
    public Response`1<EventHubsApplicationGroupData> Get(string subscriptionId, string resourceGroupName, string namespaceName, string applicationGroupName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListByNamespaceNextPageRequestUri(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName);
    internal HttpMessage CreateListByNamespaceNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.ApplicationGroupRestOperations/<ListByNamespaceNextPageAsync>d__23")]
public Task`1<Response`1<EventHubsApplicationGroupListResult>> ListByNamespaceNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
    public Response`1<EventHubsApplicationGroupListResult> ListByNamespaceNextPage(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
}
internal static class Azure.ResourceManager.EventHubs.Argument : object {
    public static void AssertNotNull(T value, string name);
    public static void AssertNotNull(Nullable`1<T> value, string name);
    public static void AssertNotNullOrEmpty(IEnumerable`1<T> value, string name);
    public static void AssertNotNullOrEmpty(string value, string name);
    public static void AssertNotNullOrWhiteSpace(string value, string name);
    public static void AssertNotDefault(T& value, string name);
    public static void AssertInRange(T value, T minimum, T maximum, string name);
    public static void AssertEnumDefined(Type enumType, object value, string name);
    public static T CheckNotNull(T value, string name);
    public static string CheckNotNullOrEmpty(string value, string name);
    public static void AssertNull(T value, string name, string message);
}
internal static class Azure.ResourceManager.EventHubs.BicepSerializationHelpers : object {
    public static void AppendChildObject(StringBuilder stringBuilder, object childObject, ModelReaderWriterOptions options, int spaces, bool indentFirstLine, string formattedPropertyName);
}
[DefaultMemberAttribute("Item")]
internal class Azure.ResourceManager.EventHubs.ChangeTrackingDictionary`2 : object {
    private IDictionary`2<TKey, TValue> _innerDictionary;
    public bool IsUndefined { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public ICollection`1<TKey> Keys { get; }
    public ICollection`1<TValue> Values { get; }
    public TValue Item { get; public set; }
    private IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys { get; }
    private IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values { get; }
    public ChangeTrackingDictionary`2(IDictionary`2<TKey, TValue> dictionary);
    public ChangeTrackingDictionary`2(IReadOnlyDictionary`2<TKey, TValue> dictionary);
    public bool get_IsUndefined();
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual ICollection`1<TKey> get_Keys();
    public sealed virtual ICollection`1<TValue> get_Values();
    public sealed virtual TValue get_Item(TKey key);
    public sealed virtual void set_Item(TKey key, TValue value);
    private sealed virtual override IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys();
    private sealed virtual override IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values();
    public sealed virtual IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual void Add(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int index);
    public sealed virtual bool Remove(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void Add(TKey key, TValue value);
    public sealed virtual bool ContainsKey(TKey key);
    public sealed virtual bool Remove(TKey key);
    public sealed virtual bool TryGetValue(TKey key, TValue& value);
    public IDictionary`2<TKey, TValue> EnsureDictionary();
    [IteratorStateMachineAttribute("Azure.ResourceManager.EventHubs.ChangeTrackingDictionary`2/<<GetEnumerator>g__enumerateEmpty|21_0>d")]
[CompilerGeneratedAttribute]
internal static IEnumerator`1<KeyValuePair`2<TKey, TValue>> <GetEnumerator>g__enumerateEmpty|21_0();
}
[DefaultMemberAttribute("Item")]
internal class Azure.ResourceManager.EventHubs.ChangeTrackingList`1 : object {
    private IList`1<T> _innerList;
    public bool IsUndefined { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public T Item { get; public set; }
    public ChangeTrackingList`1(IList`1<T> innerList);
    public ChangeTrackingList`1(IReadOnlyList`1<T> innerList);
    public bool get_IsUndefined();
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual T get_Item(int index);
    public sealed virtual void set_Item(int index, T value);
    public void Reset();
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual void Add(T item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(T item);
    public sealed virtual void CopyTo(T[] array, int arrayIndex);
    public sealed virtual bool Remove(T item);
    public sealed virtual int IndexOf(T item);
    public sealed virtual void Insert(int index, T item);
    public sealed virtual void RemoveAt(int index);
    public IList`1<T> EnsureList();
    [IteratorStateMachineAttribute("Azure.ResourceManager.EventHubs.ChangeTrackingList`1/<<GetEnumerator>g__enumerateEmpty|14_0>d")]
[CompilerGeneratedAttribute]
internal static IEnumerator`1<T> <GetEnumerator>g__enumerateEmpty|14_0();
}
internal class Azure.ResourceManager.EventHubs.ClustersRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public ClustersRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal RequestUriBuilder CreateListAvailableClusterRegionRequestUri(string subscriptionId);
    internal HttpMessage CreateListAvailableClusterRegionRequest(string subscriptionId);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.ClustersRestOperations/<ListAvailableClusterRegionAsync>d__7")]
public Task`1<Response`1<AvailableClustersList>> ListAvailableClusterRegionAsync(string subscriptionId, CancellationToken cancellationToken);
    public Response`1<AvailableClustersList> ListAvailableClusterRegion(string subscriptionId, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListBySubscriptionRequestUri(string subscriptionId);
    internal HttpMessage CreateListBySubscriptionRequest(string subscriptionId);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.ClustersRestOperations/<ListBySubscriptionAsync>d__11")]
public Task`1<Response`1<ClusterListResult>> ListBySubscriptionAsync(string subscriptionId, CancellationToken cancellationToken);
    public Response`1<ClusterListResult> ListBySubscription(string subscriptionId, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListByResourceGroupRequestUri(string subscriptionId, string resourceGroupName);
    internal HttpMessage CreateListByResourceGroupRequest(string subscriptionId, string resourceGroupName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.ClustersRestOperations/<ListByResourceGroupAsync>d__15")]
public Task`1<Response`1<ClusterListResult>> ListByResourceGroupAsync(string subscriptionId, string resourceGroupName, CancellationToken cancellationToken);
    public Response`1<ClusterListResult> ListByResourceGroup(string subscriptionId, string resourceGroupName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateGetRequestUri(string subscriptionId, string resourceGroupName, string clusterName);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string clusterName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.ClustersRestOperations/<GetAsync>d__19")]
public Task`1<Response`1<EventHubsClusterData>> GetAsync(string subscriptionId, string resourceGroupName, string clusterName, CancellationToken cancellationToken);
    public Response`1<EventHubsClusterData> Get(string subscriptionId, string resourceGroupName, string clusterName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateCreateOrUpdateRequestUri(string subscriptionId, string resourceGroupName, string clusterName, EventHubsClusterData data);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string clusterName, EventHubsClusterData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.ClustersRestOperations/<CreateOrUpdateAsync>d__23")]
public Task`1<Response> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string clusterName, EventHubsClusterData data, CancellationToken cancellationToken);
    public Response CreateOrUpdate(string subscriptionId, string resourceGroupName, string clusterName, EventHubsClusterData data, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateUpdateRequestUri(string subscriptionId, string resourceGroupName, string clusterName, EventHubsClusterData data);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string clusterName, EventHubsClusterData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.ClustersRestOperations/<UpdateAsync>d__27")]
public Task`1<Response> UpdateAsync(string subscriptionId, string resourceGroupName, string clusterName, EventHubsClusterData data, CancellationToken cancellationToken);
    public Response Update(string subscriptionId, string resourceGroupName, string clusterName, EventHubsClusterData data, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateDeleteRequestUri(string subscriptionId, string resourceGroupName, string clusterName);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string clusterName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.ClustersRestOperations/<DeleteAsync>d__31")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string clusterName, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string clusterName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListNamespacesRequestUri(string subscriptionId, string resourceGroupName, string clusterName);
    internal HttpMessage CreateListNamespacesRequest(string subscriptionId, string resourceGroupName, string clusterName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.ClustersRestOperations/<ListNamespacesAsync>d__35")]
public Task`1<Response`1<EHNamespaceIdListResult>> ListNamespacesAsync(string subscriptionId, string resourceGroupName, string clusterName, CancellationToken cancellationToken);
    public Response`1<EHNamespaceIdListResult> ListNamespaces(string subscriptionId, string resourceGroupName, string clusterName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListBySubscriptionNextPageRequestUri(string nextLink, string subscriptionId);
    internal HttpMessage CreateListBySubscriptionNextPageRequest(string nextLink, string subscriptionId);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.ClustersRestOperations/<ListBySubscriptionNextPageAsync>d__39")]
public Task`1<Response`1<ClusterListResult>> ListBySubscriptionNextPageAsync(string nextLink, string subscriptionId, CancellationToken cancellationToken);
    public Response`1<ClusterListResult> ListBySubscriptionNextPage(string nextLink, string subscriptionId, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListByResourceGroupNextPageRequestUri(string nextLink, string subscriptionId, string resourceGroupName);
    internal HttpMessage CreateListByResourceGroupNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.ClustersRestOperations/<ListByResourceGroupNextPageAsync>d__43")]
public Task`1<Response`1<ClusterListResult>> ListByResourceGroupNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, CancellationToken cancellationToken);
    public Response`1<ClusterListResult> ListByResourceGroupNextPage(string nextLink, string subscriptionId, string resourceGroupName, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.EventHubs.ConfigurationRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public ConfigurationRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal RequestUriBuilder CreatePatchRequestUri(string subscriptionId, string resourceGroupName, string clusterName, ClusterQuotaConfigurationProperties clusterQuotaConfigurationProperties);
    internal HttpMessage CreatePatchRequest(string subscriptionId, string resourceGroupName, string clusterName, ClusterQuotaConfigurationProperties clusterQuotaConfigurationProperties);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.ConfigurationRestOperations/<PatchAsync>d__7")]
public Task`1<Response`1<ClusterQuotaConfigurationProperties>> PatchAsync(string subscriptionId, string resourceGroupName, string clusterName, ClusterQuotaConfigurationProperties clusterQuotaConfigurationProperties, CancellationToken cancellationToken);
    public Response`1<ClusterQuotaConfigurationProperties> Patch(string subscriptionId, string resourceGroupName, string clusterName, ClusterQuotaConfigurationProperties clusterQuotaConfigurationProperties, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateGetRequestUri(string subscriptionId, string resourceGroupName, string clusterName);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string clusterName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.ConfigurationRestOperations/<GetAsync>d__11")]
public Task`1<Response`1<ClusterQuotaConfigurationProperties>> GetAsync(string subscriptionId, string resourceGroupName, string clusterName, CancellationToken cancellationToken);
    public Response`1<ClusterQuotaConfigurationProperties> Get(string subscriptionId, string resourceGroupName, string clusterName, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.EventHubs.ConsumerGroupsRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public ConsumerGroupsRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal RequestUriBuilder CreateCreateOrUpdateRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName, EventHubsConsumerGroupData data);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName, EventHubsConsumerGroupData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.ConsumerGroupsRestOperations/<CreateOrUpdateAsync>d__7")]
public Task`1<Response`1<EventHubsConsumerGroupData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName, EventHubsConsumerGroupData data, CancellationToken cancellationToken);
    public Response`1<EventHubsConsumerGroupData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName, EventHubsConsumerGroupData data, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateDeleteRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.ConsumerGroupsRestOperations/<DeleteAsync>d__11")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateGetRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.ConsumerGroupsRestOperations/<GetAsync>d__15")]
public Task`1<Response`1<EventHubsConsumerGroupData>> GetAsync(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName, CancellationToken cancellationToken);
    public Response`1<EventHubsConsumerGroupData> Get(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListByEventHubRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, Nullable`1<int> skip, Nullable`1<int> top);
    internal HttpMessage CreateListByEventHubRequest(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, Nullable`1<int> skip, Nullable`1<int> top);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.ConsumerGroupsRestOperations/<ListByEventHubAsync>d__19")]
public Task`1<Response`1<ConsumerGroupListResult>> ListByEventHubAsync(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, Nullable`1<int> skip, Nullable`1<int> top, CancellationToken cancellationToken);
    public Response`1<ConsumerGroupListResult> ListByEventHub(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, Nullable`1<int> skip, Nullable`1<int> top, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListByEventHubNextPageRequestUri(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, Nullable`1<int> skip, Nullable`1<int> top);
    internal HttpMessage CreateListByEventHubNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, Nullable`1<int> skip, Nullable`1<int> top);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.ConsumerGroupsRestOperations/<ListByEventHubNextPageAsync>d__23")]
public Task`1<Response`1<ConsumerGroupListResult>> ListByEventHubNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, Nullable`1<int> skip, Nullable`1<int> top, CancellationToken cancellationToken);
    public Response`1<ConsumerGroupListResult> ListByEventHubNextPage(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, Nullable`1<int> skip, Nullable`1<int> top, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.EventHubs.DisasterRecoveryConfigsRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public DisasterRecoveryConfigsRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal RequestUriBuilder CreateListAuthorizationRulesRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string alias);
    internal HttpMessage CreateListAuthorizationRulesRequest(string subscriptionId, string resourceGroupName, string namespaceName, string alias);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.DisasterRecoveryConfigsRestOperations/<ListAuthorizationRulesAsync>d__7")]
public Task`1<Response`1<AuthorizationRuleListResult>> ListAuthorizationRulesAsync(string subscriptionId, string resourceGroupName, string namespaceName, string alias, CancellationToken cancellationToken);
    public Response`1<AuthorizationRuleListResult> ListAuthorizationRules(string subscriptionId, string resourceGroupName, string namespaceName, string alias, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateGetAuthorizationRuleRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string alias, string authorizationRuleName);
    internal HttpMessage CreateGetAuthorizationRuleRequest(string subscriptionId, string resourceGroupName, string namespaceName, string alias, string authorizationRuleName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.DisasterRecoveryConfigsRestOperations/<GetAuthorizationRuleAsync>d__11")]
public Task`1<Response`1<EventHubsAuthorizationRuleData>> GetAuthorizationRuleAsync(string subscriptionId, string resourceGroupName, string namespaceName, string alias, string authorizationRuleName, CancellationToken cancellationToken);
    public Response`1<EventHubsAuthorizationRuleData> GetAuthorizationRule(string subscriptionId, string resourceGroupName, string namespaceName, string alias, string authorizationRuleName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListKeysRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string alias, string authorizationRuleName);
    internal HttpMessage CreateListKeysRequest(string subscriptionId, string resourceGroupName, string namespaceName, string alias, string authorizationRuleName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.DisasterRecoveryConfigsRestOperations/<ListKeysAsync>d__15")]
public Task`1<Response`1<EventHubsAccessKeys>> ListKeysAsync(string subscriptionId, string resourceGroupName, string namespaceName, string alias, string authorizationRuleName, CancellationToken cancellationToken);
    public Response`1<EventHubsAccessKeys> ListKeys(string subscriptionId, string resourceGroupName, string namespaceName, string alias, string authorizationRuleName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateCheckNameAvailabilityRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, EventHubsNameAvailabilityContent content);
    internal HttpMessage CreateCheckNameAvailabilityRequest(string subscriptionId, string resourceGroupName, string namespaceName, EventHubsNameAvailabilityContent content);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.DisasterRecoveryConfigsRestOperations/<CheckNameAvailabilityAsync>d__19")]
public Task`1<Response`1<EventHubsNameAvailabilityResult>> CheckNameAvailabilityAsync(string subscriptionId, string resourceGroupName, string namespaceName, EventHubsNameAvailabilityContent content, CancellationToken cancellationToken);
    public Response`1<EventHubsNameAvailabilityResult> CheckNameAvailability(string subscriptionId, string resourceGroupName, string namespaceName, EventHubsNameAvailabilityContent content, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListRequestUri(string subscriptionId, string resourceGroupName, string namespaceName);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string namespaceName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.DisasterRecoveryConfigsRestOperations/<ListAsync>d__23")]
public Task`1<Response`1<ArmDisasterRecoveryListResult>> ListAsync(string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
    public Response`1<ArmDisasterRecoveryListResult> List(string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateCreateOrUpdateRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string alias, EventHubsDisasterRecoveryData data);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string namespaceName, string alias, EventHubsDisasterRecoveryData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.DisasterRecoveryConfigsRestOperations/<CreateOrUpdateAsync>d__27")]
public Task`1<Response`1<EventHubsDisasterRecoveryData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string namespaceName, string alias, EventHubsDisasterRecoveryData data, CancellationToken cancellationToken);
    public Response`1<EventHubsDisasterRecoveryData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string namespaceName, string alias, EventHubsDisasterRecoveryData data, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateDeleteRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string alias);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string namespaceName, string alias);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.DisasterRecoveryConfigsRestOperations/<DeleteAsync>d__31")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string namespaceName, string alias, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string namespaceName, string alias, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateGetRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string alias);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string namespaceName, string alias);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.DisasterRecoveryConfigsRestOperations/<GetAsync>d__35")]
public Task`1<Response`1<EventHubsDisasterRecoveryData>> GetAsync(string subscriptionId, string resourceGroupName, string namespaceName, string alias, CancellationToken cancellationToken);
    public Response`1<EventHubsDisasterRecoveryData> Get(string subscriptionId, string resourceGroupName, string namespaceName, string alias, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateBreakPairingRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string alias);
    internal HttpMessage CreateBreakPairingRequest(string subscriptionId, string resourceGroupName, string namespaceName, string alias);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.DisasterRecoveryConfigsRestOperations/<BreakPairingAsync>d__39")]
public Task`1<Response> BreakPairingAsync(string subscriptionId, string resourceGroupName, string namespaceName, string alias, CancellationToken cancellationToken);
    public Response BreakPairing(string subscriptionId, string resourceGroupName, string namespaceName, string alias, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateFailOverRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string alias);
    internal HttpMessage CreateFailOverRequest(string subscriptionId, string resourceGroupName, string namespaceName, string alias);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.DisasterRecoveryConfigsRestOperations/<FailOverAsync>d__43")]
public Task`1<Response> FailOverAsync(string subscriptionId, string resourceGroupName, string namespaceName, string alias, CancellationToken cancellationToken);
    public Response FailOver(string subscriptionId, string resourceGroupName, string namespaceName, string alias, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListAuthorizationRulesNextPageRequestUri(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, string alias);
    internal HttpMessage CreateListAuthorizationRulesNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, string alias);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.DisasterRecoveryConfigsRestOperations/<ListAuthorizationRulesNextPageAsync>d__47")]
public Task`1<Response`1<AuthorizationRuleListResult>> ListAuthorizationRulesNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, string alias, CancellationToken cancellationToken);
    public Response`1<AuthorizationRuleListResult> ListAuthorizationRulesNextPage(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, string alias, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListNextPageRequestUri(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.DisasterRecoveryConfigsRestOperations/<ListNextPageAsync>d__51")]
public Task`1<Response`1<ArmDisasterRecoveryListResult>> ListNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
    public Response`1<ArmDisasterRecoveryListResult> ListNextPage(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.EventHubs.EventHubAuthorizationRuleCollection : ArmCollection {
    private ClientDiagnostics _eventHubAuthorizationRuleEventHubsClientDiagnostics;
    private EventHubsRestOperations _eventHubAuthorizationRuleEventHubsRestClient;
    internal EventHubAuthorizationRuleCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubAuthorizationRuleCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<EventHubAuthorizationRuleResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string authorizationRuleName, EventHubsAuthorizationRuleData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<EventHubAuthorizationRuleResource> CreateOrUpdate(WaitUntil waitUntil, string authorizationRuleName, EventHubsAuthorizationRuleData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubAuthorizationRuleCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<EventHubAuthorizationRuleResource>> GetAsync(string authorizationRuleName, CancellationToken cancellationToken);
    public virtual Response`1<EventHubAuthorizationRuleResource> Get(string authorizationRuleName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<EventHubAuthorizationRuleResource> GetAllAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<EventHubAuthorizationRuleResource> GetAll(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubAuthorizationRuleCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string authorizationRuleName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string authorizationRuleName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubAuthorizationRuleCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<EventHubAuthorizationRuleResource>> GetIfExistsAsync(string authorizationRuleName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<EventHubAuthorizationRuleResource> GetIfExists(string authorizationRuleName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<EventHubAuthorizationRuleResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.EventHubs.EventHubAuthorizationRuleResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<EventHubAuthorizationRuleResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.EventHubs.EventHubAuthorizationRuleResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__FirstPageRequest|9_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__NextPageRequest|9_1(Nullable`1<int> pageSizeHint, string nextLink);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private EventHubAuthorizationRuleResource <GetAllAsync>b__9_2(JsonElement e);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__FirstPageRequest|10_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__NextPageRequest|10_1(Nullable`1<int> pageSizeHint, string nextLink);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private EventHubAuthorizationRuleResource <GetAll>b__10_2(JsonElement e);
}
public class Azure.ResourceManager.EventHubs.EventHubAuthorizationRuleResource : ArmResource {
    private ClientDiagnostics _eventHubAuthorizationRuleEventHubsClientDiagnostics;
    private EventHubsRestOperations _eventHubAuthorizationRuleEventHubsRestClient;
    private EventHubsAuthorizationRuleData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public EventHubsAuthorizationRuleData Data { get; }
    internal EventHubAuthorizationRuleResource(ArmClient client, EventHubsAuthorizationRuleData data);
    internal EventHubAuthorizationRuleResource(ArmClient client, ResourceIdentifier id);
    private static EventHubAuthorizationRuleResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual EventHubsAuthorizationRuleData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubAuthorizationRuleResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<EventHubAuthorizationRuleResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<EventHubAuthorizationRuleResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubAuthorizationRuleResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubAuthorizationRuleResource/<UpdateAsync>d__18")]
public virtual Task`1<ArmOperation`1<EventHubAuthorizationRuleResource>> UpdateAsync(WaitUntil waitUntil, EventHubsAuthorizationRuleData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<EventHubAuthorizationRuleResource> Update(WaitUntil waitUntil, EventHubsAuthorizationRuleData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubAuthorizationRuleResource/<GetKeysAsync>d__20")]
public virtual Task`1<Response`1<EventHubsAccessKeys>> GetKeysAsync(CancellationToken cancellationToken);
    public virtual Response`1<EventHubsAccessKeys> GetKeys(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubAuthorizationRuleResource/<RegenerateKeysAsync>d__22")]
public virtual Task`1<Response`1<EventHubsAccessKeys>> RegenerateKeysAsync(EventHubsRegenerateAccessKeyContent content, CancellationToken cancellationToken);
    public virtual Response`1<EventHubsAccessKeys> RegenerateKeys(EventHubsRegenerateAccessKeyContent content, CancellationToken cancellationToken);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsAuthorizationRuleData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsAuthorizationRuleData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsAuthorizationRuleData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsAuthorizationRuleData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsAuthorizationRuleData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsAuthorizationRuleData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsAuthorizationRuleData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.EventHubCollection : ArmCollection {
    private ClientDiagnostics _eventHubClientDiagnostics;
    private EventHubsRestOperations _eventHubRestClient;
    internal EventHubCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<EventHubResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string eventHubName, EventHubData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<EventHubResource> CreateOrUpdate(WaitUntil waitUntil, string eventHubName, EventHubData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<EventHubResource>> GetAsync(string eventHubName, CancellationToken cancellationToken);
    public virtual Response`1<EventHubResource> Get(string eventHubName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<EventHubResource> GetAllAsync(Nullable`1<int> skip, Nullable`1<int> top, CancellationToken cancellationToken);
    public virtual Pageable`1<EventHubResource> GetAll(Nullable`1<int> skip, Nullable`1<int> top, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string eventHubName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string eventHubName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<EventHubResource>> GetIfExistsAsync(string eventHubName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<EventHubResource> GetIfExists(string eventHubName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<EventHubResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.EventHubs.EventHubResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<EventHubResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.EventHubs.EventHubResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.EventHubs.EventHubData : ResourceData {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MessageRetentionInDays>k__BackingField;
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <PartitionIds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <CreatedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <UpdatedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <PartitionCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<EventHubEntityStatus> <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private CaptureDescription <CaptureDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionDescription <RetentionDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<AzureLocation> <Location>k__BackingField;
    [ObsoleteAttribute("This property is obsolete and will be removed in a future release", "False")]
[EditorBrowsableAttribute("1")]
public Nullable`1<long> MessageRetentionInDays { get; public set; }
    [WirePathAttribute("properties.partitionIds")]
public IReadOnlyList`1<string> PartitionIds { get; }
    [WirePathAttribute("properties.createdAt")]
public Nullable`1<DateTimeOffset> CreatedOn { get; }
    [WirePathAttribute("properties.updatedAt")]
public Nullable`1<DateTimeOffset> UpdatedOn { get; }
    [WirePathAttribute("properties.partitionCount")]
public Nullable`1<long> PartitionCount { get; public set; }
    [WirePathAttribute("properties.status")]
public Nullable`1<EventHubEntityStatus> Status { get; public set; }
    [WirePathAttribute("properties.userMetadata")]
public string UserMetadata { get; public set; }
    [WirePathAttribute("properties.captureDescription")]
public CaptureDescription CaptureDescription { get; public set; }
    [WirePathAttribute("properties.retentionDescription")]
public RetentionDescription RetentionDescription { get; public set; }
    [WirePathAttribute("location")]
public Nullable`1<AzureLocation> Location { get; }
    internal EventHubData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IReadOnlyList`1<string> partitionIds, Nullable`1<DateTimeOffset> createdOn, Nullable`1<DateTimeOffset> updatedOn, Nullable`1<long> partitionCount, Nullable`1<EventHubEntityStatus> status, string userMetadata, CaptureDescription captureDescription, RetentionDescription retentionDescription, Nullable`1<AzureLocation> location, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_MessageRetentionInDays();
    [CompilerGeneratedAttribute]
public void set_MessageRetentionInDays(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_PartitionIds();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_CreatedOn();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_UpdatedOn();
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_PartitionCount();
    [CompilerGeneratedAttribute]
public void set_PartitionCount(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<EventHubEntityStatus> get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(Nullable`1<EventHubEntityStatus> value);
    [CompilerGeneratedAttribute]
public string get_UserMetadata();
    [CompilerGeneratedAttribute]
public void set_UserMetadata(string value);
    [CompilerGeneratedAttribute]
public CaptureDescription get_CaptureDescription();
    [CompilerGeneratedAttribute]
public void set_CaptureDescription(CaptureDescription value);
    [CompilerGeneratedAttribute]
public RetentionDescription get_RetentionDescription();
    [CompilerGeneratedAttribute]
public void set_RetentionDescription(RetentionDescription value);
    [CompilerGeneratedAttribute]
public Nullable`1<AzureLocation> get_Location();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubData DeserializeEventHubData(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.EventHubResource : ArmResource {
    private ClientDiagnostics _eventHubClientDiagnostics;
    private EventHubsRestOperations _eventHubRestClient;
    private EventHubData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public EventHubData Data { get; }
    internal EventHubResource(ArmClient client, EventHubData data);
    internal EventHubResource(ArmClient client, ResourceIdentifier id);
    private static EventHubResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual EventHubData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    public virtual EventHubAuthorizationRuleCollection GetEventHubAuthorizationRules();
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubResource/<GetEventHubAuthorizationRuleAsync>d__15")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<EventHubAuthorizationRuleResource>> GetEventHubAuthorizationRuleAsync(string authorizationRuleName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<EventHubAuthorizationRuleResource> GetEventHubAuthorizationRule(string authorizationRuleName, CancellationToken cancellationToken);
    public virtual EventHubsConsumerGroupCollection GetEventHubsConsumerGroups();
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubResource/<GetEventHubsConsumerGroupAsync>d__18")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<EventHubsConsumerGroupResource>> GetEventHubsConsumerGroupAsync(string consumerGroupName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<EventHubsConsumerGroupResource> GetEventHubsConsumerGroup(string consumerGroupName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubResource/<GetAsync>d__20")]
public virtual Task`1<Response`1<EventHubResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<EventHubResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubResource/<DeleteAsync>d__22")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubResource/<UpdateAsync>d__24")]
public virtual Task`1<ArmOperation`1<EventHubResource>> UpdateAsync(WaitUntil waitUntil, EventHubData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<EventHubResource> Update(WaitUntil waitUntil, EventHubData data, CancellationToken cancellationToken);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubData>.GetFormatFromOptions(ModelReaderWriterOptions options);
    [CompilerGeneratedAttribute]
private EventHubAuthorizationRuleCollection <GetEventHubAuthorizationRules>b__14_0(ArmClient client);
    [CompilerGeneratedAttribute]
private EventHubsConsumerGroupCollection <GetEventHubsConsumerGroups>b__17_0(ArmClient client);
}
public class Azure.ResourceManager.EventHubs.EventHubsApplicationGroupCollection : ArmCollection {
    private ClientDiagnostics _eventHubsApplicationGroupApplicationGroupClientDiagnostics;
    private ApplicationGroupRestOperations _eventHubsApplicationGroupApplicationGroupRestClient;
    internal EventHubsApplicationGroupCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsApplicationGroupCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<EventHubsApplicationGroupResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string applicationGroupName, EventHubsApplicationGroupData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<EventHubsApplicationGroupResource> CreateOrUpdate(WaitUntil waitUntil, string applicationGroupName, EventHubsApplicationGroupData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsApplicationGroupCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<EventHubsApplicationGroupResource>> GetAsync(string applicationGroupName, CancellationToken cancellationToken);
    public virtual Response`1<EventHubsApplicationGroupResource> Get(string applicationGroupName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<EventHubsApplicationGroupResource> GetAllAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<EventHubsApplicationGroupResource> GetAll(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsApplicationGroupCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string applicationGroupName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string applicationGroupName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsApplicationGroupCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<EventHubsApplicationGroupResource>> GetIfExistsAsync(string applicationGroupName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<EventHubsApplicationGroupResource> GetIfExists(string applicationGroupName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<EventHubsApplicationGroupResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.EventHubs.EventHubsApplicationGroupResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<EventHubsApplicationGroupResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.EventHubs.EventHubsApplicationGroupResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__FirstPageRequest|9_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__NextPageRequest|9_1(Nullable`1<int> pageSizeHint, string nextLink);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private EventHubsApplicationGroupResource <GetAllAsync>b__9_2(JsonElement e);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__FirstPageRequest|10_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__NextPageRequest|10_1(Nullable`1<int> pageSizeHint, string nextLink);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private EventHubsApplicationGroupResource <GetAll>b__10_2(JsonElement e);
}
public class Azure.ResourceManager.EventHubs.EventHubsApplicationGroupData : ResourceData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientAppGroupIdentifier>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<EventHubsApplicationGroupPolicy> <Policies>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<AzureLocation> <Location>k__BackingField;
    [WirePathAttribute("properties.isEnabled")]
public Nullable`1<bool> IsEnabled { get; public set; }
    [WirePathAttribute("properties.clientAppGroupIdentifier")]
public string ClientAppGroupIdentifier { get; public set; }
    [WirePathAttribute("properties.policies")]
public IList`1<EventHubsApplicationGroupPolicy> Policies { get; }
    [WirePathAttribute("location")]
public Nullable`1<AzureLocation> Location { get; }
    internal EventHubsApplicationGroupData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<bool> isEnabled, string clientAppGroupIdentifier, IList`1<EventHubsApplicationGroupPolicy> policies, Nullable`1<AzureLocation> location, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsEnabled();
    [CompilerGeneratedAttribute]
public void set_IsEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_ClientAppGroupIdentifier();
    [CompilerGeneratedAttribute]
public void set_ClientAppGroupIdentifier(string value);
    [CompilerGeneratedAttribute]
public IList`1<EventHubsApplicationGroupPolicy> get_Policies();
    [CompilerGeneratedAttribute]
public Nullable`1<AzureLocation> get_Location();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsApplicationGroupData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsApplicationGroupData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsApplicationGroupData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsApplicationGroupData DeserializeEventHubsApplicationGroupData(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsApplicationGroupData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsApplicationGroupData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsApplicationGroupData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsApplicationGroupData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.EventHubsApplicationGroupResource : ArmResource {
    private ClientDiagnostics _eventHubsApplicationGroupApplicationGroupClientDiagnostics;
    private ApplicationGroupRestOperations _eventHubsApplicationGroupApplicationGroupRestClient;
    private EventHubsApplicationGroupData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public EventHubsApplicationGroupData Data { get; }
    internal EventHubsApplicationGroupResource(ArmClient client, EventHubsApplicationGroupData data);
    internal EventHubsApplicationGroupResource(ArmClient client, ResourceIdentifier id);
    private static EventHubsApplicationGroupResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string namespaceName, string applicationGroupName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual EventHubsApplicationGroupData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsApplicationGroupResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<EventHubsApplicationGroupResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<EventHubsApplicationGroupResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsApplicationGroupResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsApplicationGroupResource/<UpdateAsync>d__18")]
public virtual Task`1<ArmOperation`1<EventHubsApplicationGroupResource>> UpdateAsync(WaitUntil waitUntil, EventHubsApplicationGroupData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<EventHubsApplicationGroupResource> Update(WaitUntil waitUntil, EventHubsApplicationGroupData data, CancellationToken cancellationToken);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsApplicationGroupData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsApplicationGroupData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsApplicationGroupData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsApplicationGroupData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsApplicationGroupData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsApplicationGroupData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsApplicationGroupData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.EventHubs.EventHubsArmOperation : ArmOperation {
    private OperationInternal _operation;
    private Nullable`1<RehydrationToken> _completeRehydrationToken;
    private NextLinkOperationImplementation _nextLinkOperation;
    private string _operationId;
    public string Id { get; }
    public bool HasCompleted { get; }
    internal EventHubsArmOperation(Response response, Nullable`1<RehydrationToken> rehydrationToken);
    internal EventHubsArmOperation(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Request request, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    private string GetOperationId(Nullable`1<RehydrationToken> rehydrationToken);
    public virtual string get_Id();
    public virtual Nullable`1<RehydrationToken> GetRehydrationToken();
    public virtual bool get_HasCompleted();
    public virtual Response GetRawResponse();
    public virtual Response UpdateStatus(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public virtual Response WaitForCompletionResponse(CancellationToken cancellationToken);
    public virtual Response WaitForCompletionResponse(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> WaitForCompletionResponseAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> WaitForCompletionResponseAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.EventHubs.EventHubsArmOperation`1 : ArmOperation`1<T> {
    private OperationInternal`1<T> _operation;
    private Nullable`1<RehydrationToken> _completeRehydrationToken;
    private NextLinkOperationImplementation _nextLinkOperation;
    private string _operationId;
    public string Id { get; }
    public T Value { get; }
    public bool HasValue { get; }
    public bool HasCompleted { get; }
    internal EventHubsArmOperation`1(Response`1<T> response, Nullable`1<RehydrationToken> rehydrationToken);
    internal EventHubsArmOperation`1(IOperationSource`1<T> source, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Request request, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    private string GetOperationId(Nullable`1<RehydrationToken> rehydrationToken);
    public virtual string get_Id();
    public virtual Nullable`1<RehydrationToken> GetRehydrationToken();
    public virtual T get_Value();
    public virtual bool get_HasValue();
    public virtual bool get_HasCompleted();
    public virtual Response GetRawResponse();
    public virtual Response UpdateStatus(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public virtual Response`1<T> WaitForCompletion(CancellationToken cancellationToken);
    public virtual Response`1<T> WaitForCompletion(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.EventHubs.EventHubsAuthorizationRuleData : ResourceData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IList`1<EventHubsAccessRight> <Rights>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<AzureLocation> <Location>k__BackingField;
    [WirePathAttribute("properties.rights")]
public IList`1<EventHubsAccessRight> Rights { get; }
    [WirePathAttribute("location")]
public Nullable`1<AzureLocation> Location { get; }
    internal EventHubsAuthorizationRuleData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IList`1<EventHubsAccessRight> rights, Nullable`1<AzureLocation> location, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IList`1<EventHubsAccessRight> get_Rights();
    [CompilerGeneratedAttribute]
public Nullable`1<AzureLocation> get_Location();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsAuthorizationRuleData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsAuthorizationRuleData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsAuthorizationRuleData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsAuthorizationRuleData DeserializeEventHubsAuthorizationRuleData(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsAuthorizationRuleData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsAuthorizationRuleData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsAuthorizationRuleData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsAuthorizationRuleData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.EventHubsClusterCollection : ArmCollection {
    private ClientDiagnostics _eventHubsClusterClustersClientDiagnostics;
    private ClustersRestOperations _eventHubsClusterClustersRestClient;
    internal EventHubsClusterCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsClusterCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<EventHubsClusterResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string clusterName, EventHubsClusterData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<EventHubsClusterResource> CreateOrUpdate(WaitUntil waitUntil, string clusterName, EventHubsClusterData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsClusterCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<EventHubsClusterResource>> GetAsync(string clusterName, CancellationToken cancellationToken);
    public virtual Response`1<EventHubsClusterResource> Get(string clusterName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<EventHubsClusterResource> GetAllAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<EventHubsClusterResource> GetAll(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsClusterCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string clusterName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string clusterName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsClusterCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<EventHubsClusterResource>> GetIfExistsAsync(string clusterName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<EventHubsClusterResource> GetIfExists(string clusterName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<EventHubsClusterResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.EventHubs.EventHubsClusterResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<EventHubsClusterResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.EventHubs.EventHubsClusterResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__FirstPageRequest|9_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__NextPageRequest|9_1(Nullable`1<int> pageSizeHint, string nextLink);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private EventHubsClusterResource <GetAllAsync>b__9_2(JsonElement e);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__FirstPageRequest|10_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__NextPageRequest|10_1(Nullable`1<int> pageSizeHint, string nextLink);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private EventHubsClusterResource <GetAll>b__10_2(JsonElement e);
}
public class Azure.ResourceManager.EventHubs.EventHubsClusterData : TrackedResourceData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private EventHubsClusterSku <Sku>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <CreatedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<EventHubsClusterProvisioningState> <ProvisioningState>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <UpdatedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MetricId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SupportsScaling>k__BackingField;
    [WirePathAttribute("sku")]
public EventHubsClusterSku Sku { get; public set; }
    [WirePathAttribute("properties.createdAt")]
public Nullable`1<DateTimeOffset> CreatedOn { get; }
    [WirePathAttribute("properties.provisioningState")]
public Nullable`1<EventHubsClusterProvisioningState> ProvisioningState { get; }
    [WirePathAttribute("properties.updatedAt")]
public Nullable`1<DateTimeOffset> UpdatedOn { get; }
    [WirePathAttribute("properties.metricId")]
public string MetricId { get; }
    [WirePathAttribute("properties.status")]
public string Status { get; }
    [WirePathAttribute("properties.supportsScaling")]
public Nullable`1<bool> SupportsScaling { get; public set; }
    public EventHubsClusterData(AzureLocation location);
    internal EventHubsClusterData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary`2<string, string> tags, AzureLocation location, EventHubsClusterSku sku, Nullable`1<DateTimeOffset> createdOn, Nullable`1<EventHubsClusterProvisioningState> provisioningState, Nullable`1<DateTimeOffset> updatedOn, string metricId, string status, Nullable`1<bool> supportsScaling, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public EventHubsClusterSku get_Sku();
    [CompilerGeneratedAttribute]
public void set_Sku(EventHubsClusterSku value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_CreatedOn();
    [CompilerGeneratedAttribute]
public Nullable`1<EventHubsClusterProvisioningState> get_ProvisioningState();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_UpdatedOn();
    [CompilerGeneratedAttribute]
public string get_MetricId();
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_SupportsScaling();
    [CompilerGeneratedAttribute]
public void set_SupportsScaling(Nullable`1<bool> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsClusterData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsClusterData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsClusterData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsClusterData DeserializeEventHubsClusterData(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsClusterData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsClusterData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsClusterData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsClusterData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.EventHubs.EventHubsClusterOperationSource : object {
    private ArmClient _client;
    internal EventHubsClusterOperationSource(ArmClient client);
    private sealed virtual override EventHubsClusterResource Azure.Core.IOperationSource<Azure.ResourceManager.EventHubs.EventHubsClusterResource>.CreateResult(Response response, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsClusterOperationSource/<Azure-Core-IOperationSource<Azure-ResourceManager-EventHubs-EventHubsClusterResource>-CreateResultAsync>d__3")]
private sealed virtual override ValueTask`1<EventHubsClusterResource> Azure.Core.IOperationSource<Azure.ResourceManager.EventHubs.EventHubsClusterResource>.CreateResultAsync(Response response, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.EventHubs.EventHubsClusterResource : ArmResource {
    private ClientDiagnostics _eventHubsClusterClustersClientDiagnostics;
    private ClustersRestOperations _eventHubsClusterClustersRestClient;
    private ClientDiagnostics _configurationClientDiagnostics;
    private ConfigurationRestOperations _configurationRestClient;
    private EventHubsClusterData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public EventHubsClusterData Data { get; }
    internal EventHubsClusterResource(ArmClient client, EventHubsClusterData data);
    internal EventHubsClusterResource(ArmClient client, ResourceIdentifier id);
    private static EventHubsClusterResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string clusterName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual EventHubsClusterData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsClusterResource/<GetAsync>d__16")]
public virtual Task`1<Response`1<EventHubsClusterResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<EventHubsClusterResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsClusterResource/<DeleteAsync>d__18")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsClusterResource/<UpdateAsync>d__20")]
public virtual Task`1<ArmOperation`1<EventHubsClusterResource>> UpdateAsync(WaitUntil waitUntil, EventHubsClusterData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<EventHubsClusterResource> Update(WaitUntil waitUntil, EventHubsClusterData data, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<SubResource> GetNamespacesAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<SubResource> GetNamespaces(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsClusterResource/<PatchConfigurationAsync>d__24")]
public virtual Task`1<Response`1<ClusterQuotaConfigurationProperties>> PatchConfigurationAsync(ClusterQuotaConfigurationProperties clusterQuotaConfigurationProperties, CancellationToken cancellationToken);
    public virtual Response`1<ClusterQuotaConfigurationProperties> PatchConfiguration(ClusterQuotaConfigurationProperties clusterQuotaConfigurationProperties, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsClusterResource/<GetConfigurationAsync>d__26")]
public virtual Task`1<Response`1<ClusterQuotaConfigurationProperties>> GetConfigurationAsync(CancellationToken cancellationToken);
    public virtual Response`1<ClusterQuotaConfigurationProperties> GetConfiguration(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsClusterResource/<AddTagAsync>d__28")]
public virtual Task`1<Response`1<EventHubsClusterResource>> AddTagAsync(string key, string value, CancellationToken cancellationToken);
    public virtual Response`1<EventHubsClusterResource> AddTag(string key, string value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsClusterResource/<SetTagsAsync>d__30")]
public virtual Task`1<Response`1<EventHubsClusterResource>> SetTagsAsync(IDictionary`2<string, string> tags, CancellationToken cancellationToken);
    public virtual Response`1<EventHubsClusterResource> SetTags(IDictionary`2<string, string> tags, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsClusterResource/<RemoveTagAsync>d__32")]
public virtual Task`1<Response`1<EventHubsClusterResource>> RemoveTagAsync(string key, CancellationToken cancellationToken);
    public virtual Response`1<EventHubsClusterResource> RemoveTag(string key, CancellationToken cancellationToken);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsClusterData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsClusterData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsClusterData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsClusterData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsClusterData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsClusterData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsClusterData>.GetFormatFromOptions(ModelReaderWriterOptions options);
    [CompilerGeneratedAttribute]
private HttpMessage <GetNamespacesAsync>g__FirstPageRequest|22_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetNamespaces>g__FirstPageRequest|23_0(Nullable`1<int> pageSizeHint);
}
public class Azure.ResourceManager.EventHubs.EventHubsConsumerGroupCollection : ArmCollection {
    private ClientDiagnostics _eventHubsConsumerGroupConsumerGroupsClientDiagnostics;
    private ConsumerGroupsRestOperations _eventHubsConsumerGroupConsumerGroupsRestClient;
    internal EventHubsConsumerGroupCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsConsumerGroupCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<EventHubsConsumerGroupResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string consumerGroupName, EventHubsConsumerGroupData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<EventHubsConsumerGroupResource> CreateOrUpdate(WaitUntil waitUntil, string consumerGroupName, EventHubsConsumerGroupData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsConsumerGroupCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<EventHubsConsumerGroupResource>> GetAsync(string consumerGroupName, CancellationToken cancellationToken);
    public virtual Response`1<EventHubsConsumerGroupResource> Get(string consumerGroupName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<EventHubsConsumerGroupResource> GetAllAsync(Nullable`1<int> skip, Nullable`1<int> top, CancellationToken cancellationToken);
    public virtual Pageable`1<EventHubsConsumerGroupResource> GetAll(Nullable`1<int> skip, Nullable`1<int> top, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsConsumerGroupCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string consumerGroupName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string consumerGroupName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsConsumerGroupCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<EventHubsConsumerGroupResource>> GetIfExistsAsync(string consumerGroupName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<EventHubsConsumerGroupResource> GetIfExists(string consumerGroupName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<EventHubsConsumerGroupResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.EventHubs.EventHubsConsumerGroupResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<EventHubsConsumerGroupResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.EventHubs.EventHubsConsumerGroupResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.EventHubs.EventHubsConsumerGroupData : ResourceData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <CreatedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <UpdatedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<AzureLocation> <Location>k__BackingField;
    [WirePathAttribute("properties.createdAt")]
public Nullable`1<DateTimeOffset> CreatedOn { get; }
    [WirePathAttribute("properties.updatedAt")]
public Nullable`1<DateTimeOffset> UpdatedOn { get; }
    [WirePathAttribute("properties.userMetadata")]
public string UserMetadata { get; public set; }
    [WirePathAttribute("location")]
public Nullable`1<AzureLocation> Location { get; }
    internal EventHubsConsumerGroupData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<DateTimeOffset> createdOn, Nullable`1<DateTimeOffset> updatedOn, string userMetadata, Nullable`1<AzureLocation> location, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_CreatedOn();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_UpdatedOn();
    [CompilerGeneratedAttribute]
public string get_UserMetadata();
    [CompilerGeneratedAttribute]
public void set_UserMetadata(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<AzureLocation> get_Location();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsConsumerGroupData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsConsumerGroupData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsConsumerGroupData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsConsumerGroupData DeserializeEventHubsConsumerGroupData(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsConsumerGroupData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsConsumerGroupData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsConsumerGroupData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsConsumerGroupData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.EventHubsConsumerGroupResource : ArmResource {
    private ClientDiagnostics _eventHubsConsumerGroupConsumerGroupsClientDiagnostics;
    private ConsumerGroupsRestOperations _eventHubsConsumerGroupConsumerGroupsRestClient;
    private EventHubsConsumerGroupData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public EventHubsConsumerGroupData Data { get; }
    internal EventHubsConsumerGroupResource(ArmClient client, EventHubsConsumerGroupData data);
    internal EventHubsConsumerGroupResource(ArmClient client, ResourceIdentifier id);
    private static EventHubsConsumerGroupResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual EventHubsConsumerGroupData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsConsumerGroupResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<EventHubsConsumerGroupResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<EventHubsConsumerGroupResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsConsumerGroupResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsConsumerGroupResource/<UpdateAsync>d__18")]
public virtual Task`1<ArmOperation`1<EventHubsConsumerGroupResource>> UpdateAsync(WaitUntil waitUntil, EventHubsConsumerGroupData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<EventHubsConsumerGroupResource> Update(WaitUntil waitUntil, EventHubsConsumerGroupData data, CancellationToken cancellationToken);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsConsumerGroupData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsConsumerGroupData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsConsumerGroupData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsConsumerGroupData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsConsumerGroupData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsConsumerGroupData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsConsumerGroupData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryAuthorizationRuleCollection : ArmCollection {
    private ClientDiagnostics _eventHubsDisasterRecoveryAuthorizationRuleDisasterRecoveryConfigsClientDiagnostics;
    private DisasterRecoveryConfigsRestOperations _eventHubsDisasterRecoveryAuthorizationRuleDisasterRecoveryConfigsRestClient;
    internal EventHubsDisasterRecoveryAuthorizationRuleCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryAuthorizationRuleCollection/<GetAsync>d__5")]
public virtual Task`1<Response`1<EventHubsDisasterRecoveryAuthorizationRuleResource>> GetAsync(string authorizationRuleName, CancellationToken cancellationToken);
    public virtual Response`1<EventHubsDisasterRecoveryAuthorizationRuleResource> Get(string authorizationRuleName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<EventHubsDisasterRecoveryAuthorizationRuleResource> GetAllAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<EventHubsDisasterRecoveryAuthorizationRuleResource> GetAll(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryAuthorizationRuleCollection/<ExistsAsync>d__9")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string authorizationRuleName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string authorizationRuleName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryAuthorizationRuleCollection/<GetIfExistsAsync>d__11")]
public virtual Task`1<NullableResponse`1<EventHubsDisasterRecoveryAuthorizationRuleResource>> GetIfExistsAsync(string authorizationRuleName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<EventHubsDisasterRecoveryAuthorizationRuleResource> GetIfExists(string authorizationRuleName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<EventHubsDisasterRecoveryAuthorizationRuleResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryAuthorizationRuleResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<EventHubsDisasterRecoveryAuthorizationRuleResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryAuthorizationRuleResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__FirstPageRequest|7_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__NextPageRequest|7_1(Nullable`1<int> pageSizeHint, string nextLink);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private EventHubsDisasterRecoveryAuthorizationRuleResource <GetAllAsync>b__7_2(JsonElement e);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__FirstPageRequest|8_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__NextPageRequest|8_1(Nullable`1<int> pageSizeHint, string nextLink);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private EventHubsDisasterRecoveryAuthorizationRuleResource <GetAll>b__8_2(JsonElement e);
}
public class Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryAuthorizationRuleResource : ArmResource {
    private ClientDiagnostics _eventHubsDisasterRecoveryAuthorizationRuleDisasterRecoveryConfigsClientDiagnostics;
    private DisasterRecoveryConfigsRestOperations _eventHubsDisasterRecoveryAuthorizationRuleDisasterRecoveryConfigsRestClient;
    private EventHubsAuthorizationRuleData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public EventHubsAuthorizationRuleData Data { get; }
    internal EventHubsDisasterRecoveryAuthorizationRuleResource(ArmClient client, EventHubsAuthorizationRuleData data);
    internal EventHubsDisasterRecoveryAuthorizationRuleResource(ArmClient client, ResourceIdentifier id);
    private static EventHubsDisasterRecoveryAuthorizationRuleResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string namespaceName, string alias, string authorizationRuleName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual EventHubsAuthorizationRuleData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryAuthorizationRuleResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<EventHubsDisasterRecoveryAuthorizationRuleResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<EventHubsDisasterRecoveryAuthorizationRuleResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryAuthorizationRuleResource/<GetKeysAsync>d__16")]
public virtual Task`1<Response`1<EventHubsAccessKeys>> GetKeysAsync(CancellationToken cancellationToken);
    public virtual Response`1<EventHubsAccessKeys> GetKeys(CancellationToken cancellationToken);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsAuthorizationRuleData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsAuthorizationRuleData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsAuthorizationRuleData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsAuthorizationRuleData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsAuthorizationRuleData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsAuthorizationRuleData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsAuthorizationRuleData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryCollection : ArmCollection {
    private ClientDiagnostics _eventHubsDisasterRecoveryDisasterRecoveryConfigsClientDiagnostics;
    private DisasterRecoveryConfigsRestOperations _eventHubsDisasterRecoveryDisasterRecoveryConfigsRestClient;
    internal EventHubsDisasterRecoveryCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<EventHubsDisasterRecoveryResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string alias, EventHubsDisasterRecoveryData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<EventHubsDisasterRecoveryResource> CreateOrUpdate(WaitUntil waitUntil, string alias, EventHubsDisasterRecoveryData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<EventHubsDisasterRecoveryResource>> GetAsync(string alias, CancellationToken cancellationToken);
    public virtual Response`1<EventHubsDisasterRecoveryResource> Get(string alias, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<EventHubsDisasterRecoveryResource> GetAllAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<EventHubsDisasterRecoveryResource> GetAll(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string alias, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string alias, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<EventHubsDisasterRecoveryResource>> GetIfExistsAsync(string alias, CancellationToken cancellationToken);
    public virtual NullableResponse`1<EventHubsDisasterRecoveryResource> GetIfExists(string alias, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<EventHubsDisasterRecoveryResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<EventHubsDisasterRecoveryResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__FirstPageRequest|9_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__NextPageRequest|9_1(Nullable`1<int> pageSizeHint, string nextLink);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private EventHubsDisasterRecoveryResource <GetAllAsync>b__9_2(JsonElement e);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__FirstPageRequest|10_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__NextPageRequest|10_1(Nullable`1<int> pageSizeHint, string nextLink);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private EventHubsDisasterRecoveryResource <GetAll>b__10_2(JsonElement e);
}
public class Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryData : ResourceData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private Nullable`1<EventHubsDisasterRecoveryProvisioningState> <ProvisioningState>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PartnerNamespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AlternateName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<EventHubsDisasterRecoveryRole> <Role>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <PendingReplicationOperationsCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<AzureLocation> <Location>k__BackingField;
    [WirePathAttribute("properties.provisioningState")]
public Nullable`1<EventHubsDisasterRecoveryProvisioningState> ProvisioningState { get; }
    [WirePathAttribute("properties.partnerNamespace")]
public string PartnerNamespace { get; public set; }
    [WirePathAttribute("properties.alternateName")]
public string AlternateName { get; public set; }
    [WirePathAttribute("properties.role")]
public Nullable`1<EventHubsDisasterRecoveryRole> Role { get; }
    [WirePathAttribute("properties.pendingReplicationOperationsCount")]
public Nullable`1<long> PendingReplicationOperationsCount { get; }
    [WirePathAttribute("location")]
public Nullable`1<AzureLocation> Location { get; }
    internal EventHubsDisasterRecoveryData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<EventHubsDisasterRecoveryProvisioningState> provisioningState, string partnerNamespace, string alternateName, Nullable`1<EventHubsDisasterRecoveryRole> role, Nullable`1<long> pendingReplicationOperationsCount, Nullable`1<AzureLocation> location, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public Nullable`1<EventHubsDisasterRecoveryProvisioningState> get_ProvisioningState();
    [CompilerGeneratedAttribute]
public string get_PartnerNamespace();
    [CompilerGeneratedAttribute]
public void set_PartnerNamespace(string value);
    [CompilerGeneratedAttribute]
public string get_AlternateName();
    [CompilerGeneratedAttribute]
public void set_AlternateName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<EventHubsDisasterRecoveryRole> get_Role();
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_PendingReplicationOperationsCount();
    [CompilerGeneratedAttribute]
public Nullable`1<AzureLocation> get_Location();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsDisasterRecoveryData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsDisasterRecoveryData DeserializeEventHubsDisasterRecoveryData(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsDisasterRecoveryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryResource : ArmResource {
    private ClientDiagnostics _eventHubsDisasterRecoveryDisasterRecoveryConfigsClientDiagnostics;
    private DisasterRecoveryConfigsRestOperations _eventHubsDisasterRecoveryDisasterRecoveryConfigsRestClient;
    private EventHubsDisasterRecoveryData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public EventHubsDisasterRecoveryData Data { get; }
    internal EventHubsDisasterRecoveryResource(ArmClient client, EventHubsDisasterRecoveryData data);
    internal EventHubsDisasterRecoveryResource(ArmClient client, ResourceIdentifier id);
    private static EventHubsDisasterRecoveryResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string namespaceName, string alias);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual EventHubsDisasterRecoveryData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    public virtual EventHubsDisasterRecoveryAuthorizationRuleCollection GetEventHubsDisasterRecoveryAuthorizationRules();
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryResource/<GetEventHubsDisasterRecoveryAuthorizationRuleAsync>d__15")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<EventHubsDisasterRecoveryAuthorizationRuleResource>> GetEventHubsDisasterRecoveryAuthorizationRuleAsync(string authorizationRuleName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<EventHubsDisasterRecoveryAuthorizationRuleResource> GetEventHubsDisasterRecoveryAuthorizationRule(string authorizationRuleName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryResource/<GetAsync>d__17")]
public virtual Task`1<Response`1<EventHubsDisasterRecoveryResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<EventHubsDisasterRecoveryResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryResource/<DeleteAsync>d__19")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryResource/<UpdateAsync>d__21")]
public virtual Task`1<ArmOperation`1<EventHubsDisasterRecoveryResource>> UpdateAsync(WaitUntil waitUntil, EventHubsDisasterRecoveryData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<EventHubsDisasterRecoveryResource> Update(WaitUntil waitUntil, EventHubsDisasterRecoveryData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryResource/<BreakPairingAsync>d__23")]
public virtual Task`1<Response> BreakPairingAsync(CancellationToken cancellationToken);
    public virtual Response BreakPairing(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryResource/<FailOverAsync>d__25")]
public virtual Task`1<Response> FailOverAsync(CancellationToken cancellationToken);
    public virtual Response FailOver(CancellationToken cancellationToken);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsDisasterRecoveryData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsDisasterRecoveryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryData>.GetFormatFromOptions(ModelReaderWriterOptions options);
    [CompilerGeneratedAttribute]
private EventHubsDisasterRecoveryAuthorizationRuleCollection <GetEventHubsDisasterRecoveryAuthorizationRules>b__14_0(ArmClient client);
}
[ExtensionAttribute]
public static class Azure.ResourceManager.EventHubs.EventHubsExtensions : object {
    private static MockableEventHubsArmClient GetMockableEventHubsArmClient(ArmClient client);
    private static MockableEventHubsResourceGroupResource GetMockableEventHubsResourceGroupResource(ArmResource resource);
    private static MockableEventHubsSubscriptionResource GetMockableEventHubsSubscriptionResource(ArmResource resource);
    [ExtensionAttribute]
public static EventHubsClusterResource GetEventHubsClusterResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static EventHubsNamespaceResource GetEventHubsNamespaceResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static EventHubsNetworkRuleSetResource GetEventHubsNetworkRuleSetResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static EventHubsNamespaceAuthorizationRuleResource GetEventHubsNamespaceAuthorizationRuleResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static EventHubsDisasterRecoveryAuthorizationRuleResource GetEventHubsDisasterRecoveryAuthorizationRuleResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static EventHubAuthorizationRuleResource GetEventHubAuthorizationRuleResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static EventHubsPrivateEndpointConnectionResource GetEventHubsPrivateEndpointConnectionResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static EventHubsDisasterRecoveryResource GetEventHubsDisasterRecoveryResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static EventHubResource GetEventHubResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static EventHubsConsumerGroupResource GetEventHubsConsumerGroupResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static EventHubsSchemaGroupResource GetEventHubsSchemaGroupResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static EventHubsApplicationGroupResource GetEventHubsApplicationGroupResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static EventHubsClusterCollection GetEventHubsClusters(ResourceGroupResource resourceGroupResource);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsExtensions/<GetEventHubsClusterAsync>d__16")]
[ExtensionAttribute]
[ForwardsClientCallsAttribute]
public static Task`1<Response`1<EventHubsClusterResource>> GetEventHubsClusterAsync(ResourceGroupResource resourceGroupResource, string clusterName, CancellationToken cancellationToken);
    [ExtensionAttribute]
[ForwardsClientCallsAttribute]
public static Response`1<EventHubsClusterResource> GetEventHubsCluster(ResourceGroupResource resourceGroupResource, string clusterName, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static EventHubsNamespaceCollection GetEventHubsNamespaces(ResourceGroupResource resourceGroupResource);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsExtensions/<GetEventHubsNamespaceAsync>d__19")]
[ExtensionAttribute]
[ForwardsClientCallsAttribute]
public static Task`1<Response`1<EventHubsNamespaceResource>> GetEventHubsNamespaceAsync(ResourceGroupResource resourceGroupResource, string namespaceName, CancellationToken cancellationToken);
    [ExtensionAttribute]
[ForwardsClientCallsAttribute]
public static Response`1<EventHubsNamespaceResource> GetEventHubsNamespace(ResourceGroupResource resourceGroupResource, string namespaceName, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static AsyncPageable`1<AvailableCluster> GetAvailableClusterRegionClustersAsync(SubscriptionResource subscriptionResource, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Pageable`1<AvailableCluster> GetAvailableClusterRegionClusters(SubscriptionResource subscriptionResource, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static AsyncPageable`1<EventHubsClusterResource> GetEventHubsClustersAsync(SubscriptionResource subscriptionResource, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Pageable`1<EventHubsClusterResource> GetEventHubsClusters(SubscriptionResource subscriptionResource, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static AsyncPageable`1<EventHubsNamespaceResource> GetEventHubsNamespacesAsync(SubscriptionResource subscriptionResource, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Pageable`1<EventHubsNamespaceResource> GetEventHubsNamespaces(SubscriptionResource subscriptionResource, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsExtensions/<CheckEventHubsNamespaceNameAvailabilityAsync>d__27")]
[ExtensionAttribute]
public static Task`1<Response`1<EventHubsNameAvailabilityResult>> CheckEventHubsNamespaceNameAvailabilityAsync(SubscriptionResource subscriptionResource, EventHubsNameAvailabilityContent content, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response`1<EventHubsNameAvailabilityResult> CheckEventHubsNamespaceNameAvailability(SubscriptionResource subscriptionResource, EventHubsNameAvailabilityContent content, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.EventHubs.EventHubsNamespaceAuthorizationRuleCollection : ArmCollection {
    private ClientDiagnostics _eventHubsNamespaceAuthorizationRuleNamespacesClientDiagnostics;
    private NamespacesRestOperations _eventHubsNamespaceAuthorizationRuleNamespacesRestClient;
    internal EventHubsNamespaceAuthorizationRuleCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceAuthorizationRuleCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<EventHubsNamespaceAuthorizationRuleResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string authorizationRuleName, EventHubsAuthorizationRuleData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<EventHubsNamespaceAuthorizationRuleResource> CreateOrUpdate(WaitUntil waitUntil, string authorizationRuleName, EventHubsAuthorizationRuleData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceAuthorizationRuleCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<EventHubsNamespaceAuthorizationRuleResource>> GetAsync(string authorizationRuleName, CancellationToken cancellationToken);
    public virtual Response`1<EventHubsNamespaceAuthorizationRuleResource> Get(string authorizationRuleName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<EventHubsNamespaceAuthorizationRuleResource> GetAllAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<EventHubsNamespaceAuthorizationRuleResource> GetAll(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceAuthorizationRuleCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string authorizationRuleName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string authorizationRuleName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceAuthorizationRuleCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<EventHubsNamespaceAuthorizationRuleResource>> GetIfExistsAsync(string authorizationRuleName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<EventHubsNamespaceAuthorizationRuleResource> GetIfExists(string authorizationRuleName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<EventHubsNamespaceAuthorizationRuleResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.EventHubs.EventHubsNamespaceAuthorizationRuleResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<EventHubsNamespaceAuthorizationRuleResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.EventHubs.EventHubsNamespaceAuthorizationRuleResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__FirstPageRequest|9_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__NextPageRequest|9_1(Nullable`1<int> pageSizeHint, string nextLink);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private EventHubsNamespaceAuthorizationRuleResource <GetAllAsync>b__9_2(JsonElement e);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__FirstPageRequest|10_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__NextPageRequest|10_1(Nullable`1<int> pageSizeHint, string nextLink);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private EventHubsNamespaceAuthorizationRuleResource <GetAll>b__10_2(JsonElement e);
}
public class Azure.ResourceManager.EventHubs.EventHubsNamespaceAuthorizationRuleResource : ArmResource {
    private ClientDiagnostics _eventHubsNamespaceAuthorizationRuleNamespacesClientDiagnostics;
    private NamespacesRestOperations _eventHubsNamespaceAuthorizationRuleNamespacesRestClient;
    private EventHubsAuthorizationRuleData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public EventHubsAuthorizationRuleData Data { get; }
    internal EventHubsNamespaceAuthorizationRuleResource(ArmClient client, EventHubsAuthorizationRuleData data);
    internal EventHubsNamespaceAuthorizationRuleResource(ArmClient client, ResourceIdentifier id);
    private static EventHubsNamespaceAuthorizationRuleResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string namespaceName, string authorizationRuleName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual EventHubsAuthorizationRuleData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceAuthorizationRuleResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<EventHubsNamespaceAuthorizationRuleResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<EventHubsNamespaceAuthorizationRuleResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceAuthorizationRuleResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceAuthorizationRuleResource/<UpdateAsync>d__18")]
public virtual Task`1<ArmOperation`1<EventHubsNamespaceAuthorizationRuleResource>> UpdateAsync(WaitUntil waitUntil, EventHubsAuthorizationRuleData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<EventHubsNamespaceAuthorizationRuleResource> Update(WaitUntil waitUntil, EventHubsAuthorizationRuleData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceAuthorizationRuleResource/<GetKeysAsync>d__20")]
public virtual Task`1<Response`1<EventHubsAccessKeys>> GetKeysAsync(CancellationToken cancellationToken);
    public virtual Response`1<EventHubsAccessKeys> GetKeys(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceAuthorizationRuleResource/<RegenerateKeysAsync>d__22")]
public virtual Task`1<Response`1<EventHubsAccessKeys>> RegenerateKeysAsync(EventHubsRegenerateAccessKeyContent content, CancellationToken cancellationToken);
    public virtual Response`1<EventHubsAccessKeys> RegenerateKeys(EventHubsRegenerateAccessKeyContent content, CancellationToken cancellationToken);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsAuthorizationRuleData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsAuthorizationRuleData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsAuthorizationRuleData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsAuthorizationRuleData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsAuthorizationRuleData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsAuthorizationRuleData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsAuthorizationRuleData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.EventHubsNamespaceCollection : ArmCollection {
    private ClientDiagnostics _eventHubsNamespaceNamespacesClientDiagnostics;
    private NamespacesRestOperations _eventHubsNamespaceNamespacesRestClient;
    internal EventHubsNamespaceCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<EventHubsNamespaceResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string namespaceName, EventHubsNamespaceData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<EventHubsNamespaceResource> CreateOrUpdate(WaitUntil waitUntil, string namespaceName, EventHubsNamespaceData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<EventHubsNamespaceResource>> GetAsync(string namespaceName, CancellationToken cancellationToken);
    public virtual Response`1<EventHubsNamespaceResource> Get(string namespaceName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<EventHubsNamespaceResource> GetAllAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<EventHubsNamespaceResource> GetAll(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string namespaceName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string namespaceName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<EventHubsNamespaceResource>> GetIfExistsAsync(string namespaceName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<EventHubsNamespaceResource> GetIfExists(string namespaceName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<EventHubsNamespaceResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.EventHubs.EventHubsNamespaceResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<EventHubsNamespaceResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.EventHubs.EventHubsNamespaceResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__FirstPageRequest|9_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__NextPageRequest|9_1(Nullable`1<int> pageSizeHint, string nextLink);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private EventHubsNamespaceResource <GetAllAsync>b__9_2(JsonElement e);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__FirstPageRequest|10_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__NextPageRequest|10_1(Nullable`1<int> pageSizeHint, string nextLink);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private EventHubsNamespaceResource <GetAll>b__10_2(JsonElement e);
}
public class Azure.ResourceManager.EventHubs.EventHubsNamespaceData : TrackedResourceData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private EventHubsSku <Sku>k__BackingField;
    [CompilerGeneratedAttribute]
private ManagedServiceIdentity <Identity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<EventHubsTlsVersion> <MinimumTlsVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProvisioningState>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <CreatedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <UpdatedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceBusEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceIdentifier <ClusterArmId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MetricId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsAutoInflateEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<EventHubsPublicNetworkAccess> <PublicNetworkAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaximumThroughputUnits>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <KafkaEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ZoneRedundant>k__BackingField;
    [CompilerGeneratedAttribute]
private EventHubsEncryption <Encryption>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<EventHubsPrivateEndpointConnectionData> <PrivateEndpointConnections>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DisableLocalAuth>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AlternateName>k__BackingField;
    [WirePathAttribute("sku")]
public EventHubsSku Sku { get; public set; }
    [WirePathAttribute("identity")]
public ManagedServiceIdentity Identity { get; public set; }
    [WirePathAttribute("properties.minimumTlsVersion")]
public Nullable`1<EventHubsTlsVersion> MinimumTlsVersion { get; public set; }
    [WirePathAttribute("properties.provisioningState")]
public string ProvisioningState { get; }
    [WirePathAttribute("properties.status")]
public string Status { get; }
    [WirePathAttribute("properties.createdAt")]
public Nullable`1<DateTimeOffset> CreatedOn { get; }
    [WirePathAttribute("properties.updatedAt")]
public Nullable`1<DateTimeOffset> UpdatedOn { get; }
    [WirePathAttribute("properties.serviceBusEndpoint")]
public string ServiceBusEndpoint { get; }
    [WirePathAttribute("properties.clusterArmId")]
public ResourceIdentifier ClusterArmId { get; public set; }
    [WirePathAttribute("properties.metricId")]
public string MetricId { get; }
    [WirePathAttribute("properties.isAutoInflateEnabled")]
public Nullable`1<bool> IsAutoInflateEnabled { get; public set; }
    [WirePathAttribute("properties.publicNetworkAccess")]
public Nullable`1<EventHubsPublicNetworkAccess> PublicNetworkAccess { get; public set; }
    [WirePathAttribute("properties.maximumThroughputUnits")]
public Nullable`1<int> MaximumThroughputUnits { get; public set; }
    [WirePathAttribute("properties.kafkaEnabled")]
public Nullable`1<bool> KafkaEnabled { get; public set; }
    [WirePathAttribute("properties.zoneRedundant")]
public Nullable`1<bool> ZoneRedundant { get; public set; }
    [WirePathAttribute("properties.encryption")]
public EventHubsEncryption Encryption { get; public set; }
    [WirePathAttribute("properties.privateEndpointConnections")]
public IList`1<EventHubsPrivateEndpointConnectionData> PrivateEndpointConnections { get; }
    [WirePathAttribute("properties.disableLocalAuth")]
public Nullable`1<bool> DisableLocalAuth { get; public set; }
    [WirePathAttribute("properties.alternateName")]
public string AlternateName { get; public set; }
    public EventHubsNamespaceData(AzureLocation location);
    internal EventHubsNamespaceData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary`2<string, string> tags, AzureLocation location, EventHubsSku sku, ManagedServiceIdentity identity, Nullable`1<EventHubsTlsVersion> minimumTlsVersion, string provisioningState, string status, Nullable`1<DateTimeOffset> createdOn, Nullable`1<DateTimeOffset> updatedOn, string serviceBusEndpoint, ResourceIdentifier clusterArmId, string metricId, Nullable`1<bool> isAutoInflateEnabled, Nullable`1<EventHubsPublicNetworkAccess> publicNetworkAccess, Nullable`1<int> maximumThroughputUnits, Nullable`1<bool> kafkaEnabled, Nullable`1<bool> zoneRedundant, EventHubsEncryption encryption, IList`1<EventHubsPrivateEndpointConnectionData> privateEndpointConnections, Nullable`1<bool> disableLocalAuth, string alternateName, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public EventHubsSku get_Sku();
    [CompilerGeneratedAttribute]
public void set_Sku(EventHubsSku value);
    [CompilerGeneratedAttribute]
public ManagedServiceIdentity get_Identity();
    [CompilerGeneratedAttribute]
public void set_Identity(ManagedServiceIdentity value);
    [CompilerGeneratedAttribute]
public Nullable`1<EventHubsTlsVersion> get_MinimumTlsVersion();
    [CompilerGeneratedAttribute]
public void set_MinimumTlsVersion(Nullable`1<EventHubsTlsVersion> value);
    [CompilerGeneratedAttribute]
public string get_ProvisioningState();
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_CreatedOn();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_UpdatedOn();
    [CompilerGeneratedAttribute]
public string get_ServiceBusEndpoint();
    [CompilerGeneratedAttribute]
public ResourceIdentifier get_ClusterArmId();
    [CompilerGeneratedAttribute]
public void set_ClusterArmId(ResourceIdentifier value);
    [CompilerGeneratedAttribute]
public string get_MetricId();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsAutoInflateEnabled();
    [CompilerGeneratedAttribute]
public void set_IsAutoInflateEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<EventHubsPublicNetworkAccess> get_PublicNetworkAccess();
    [CompilerGeneratedAttribute]
public void set_PublicNetworkAccess(Nullable`1<EventHubsPublicNetworkAccess> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaximumThroughputUnits();
    [CompilerGeneratedAttribute]
public void set_MaximumThroughputUnits(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_KafkaEnabled();
    [CompilerGeneratedAttribute]
public void set_KafkaEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ZoneRedundant();
    [CompilerGeneratedAttribute]
public void set_ZoneRedundant(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public EventHubsEncryption get_Encryption();
    [CompilerGeneratedAttribute]
public void set_Encryption(EventHubsEncryption value);
    [CompilerGeneratedAttribute]
public IList`1<EventHubsPrivateEndpointConnectionData> get_PrivateEndpointConnections();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DisableLocalAuth();
    [CompilerGeneratedAttribute]
public void set_DisableLocalAuth(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_AlternateName();
    [CompilerGeneratedAttribute]
public void set_AlternateName(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsNamespaceData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNamespaceData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsNamespaceData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsNamespaceData DeserializeEventHubsNamespaceData(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsNamespaceData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNamespaceData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsNamespaceData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsNamespaceData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.EventHubs.EventHubsNamespaceOperationSource : object {
    private ArmClient _client;
    internal EventHubsNamespaceOperationSource(ArmClient client);
    private sealed virtual override EventHubsNamespaceResource Azure.Core.IOperationSource<Azure.ResourceManager.EventHubs.EventHubsNamespaceResource>.CreateResult(Response response, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceOperationSource/<Azure-Core-IOperationSource<Azure-ResourceManager-EventHubs-EventHubsNamespaceResource>-CreateResultAsync>d__3")]
private sealed virtual override ValueTask`1<EventHubsNamespaceResource> Azure.Core.IOperationSource<Azure.ResourceManager.EventHubs.EventHubsNamespaceResource>.CreateResultAsync(Response response, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.EventHubs.EventHubsNamespaceResource : ArmResource {
    private ClientDiagnostics _eventHubsNamespaceNamespacesClientDiagnostics;
    private NamespacesRestOperations _eventHubsNamespaceNamespacesRestClient;
    private ClientDiagnostics _privateLinkResourcesClientDiagnostics;
    private PrivateLinkResourcesRestOperations _privateLinkResourcesRestClient;
    private ClientDiagnostics _networkSecurityPerimeterConfigurationClientDiagnostics;
    private NetworkSecurityPerimeterConfigurationRestOperations _networkSecurityPerimeterConfigurationRestClient;
    private ClientDiagnostics _networkSecurityPerimeterConfigurationsClientDiagnostics;
    private NetworkSecurityPerimeterConfigurationsRestOperations _networkSecurityPerimeterConfigurationsRestClient;
    private ClientDiagnostics _disasterRecoveryConfigsClientDiagnostics;
    private DisasterRecoveryConfigsRestOperations _disasterRecoveryConfigsRestClient;
    private EventHubsNamespaceData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public EventHubsNamespaceData Data { get; }
    internal EventHubsNamespaceResource(ArmClient client, EventHubsNamespaceData data);
    internal EventHubsNamespaceResource(ArmClient client, ResourceIdentifier id);
    private static EventHubsNamespaceResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string namespaceName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual EventHubsNamespaceData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    public virtual EventHubsNetworkRuleSetResource GetEventHubsNetworkRuleSet();
    public virtual EventHubsNamespaceAuthorizationRuleCollection GetEventHubsNamespaceAuthorizationRules();
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceResource/<GetEventHubsNamespaceAuthorizationRuleAsync>d__24")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<EventHubsNamespaceAuthorizationRuleResource>> GetEventHubsNamespaceAuthorizationRuleAsync(string authorizationRuleName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<EventHubsNamespaceAuthorizationRuleResource> GetEventHubsNamespaceAuthorizationRule(string authorizationRuleName, CancellationToken cancellationToken);
    public virtual EventHubsPrivateEndpointConnectionCollection GetEventHubsPrivateEndpointConnections();
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceResource/<GetEventHubsPrivateEndpointConnectionAsync>d__27")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<EventHubsPrivateEndpointConnectionResource>> GetEventHubsPrivateEndpointConnectionAsync(string privateEndpointConnectionName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<EventHubsPrivateEndpointConnectionResource> GetEventHubsPrivateEndpointConnection(string privateEndpointConnectionName, CancellationToken cancellationToken);
    public virtual EventHubsDisasterRecoveryCollection GetEventHubsDisasterRecoveries();
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceResource/<GetEventHubsDisasterRecoveryAsync>d__30")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<EventHubsDisasterRecoveryResource>> GetEventHubsDisasterRecoveryAsync(string alias, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<EventHubsDisasterRecoveryResource> GetEventHubsDisasterRecovery(string alias, CancellationToken cancellationToken);
    public virtual EventHubCollection GetEventHubs();
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceResource/<GetEventHubAsync>d__33")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<EventHubResource>> GetEventHubAsync(string eventHubName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<EventHubResource> GetEventHub(string eventHubName, CancellationToken cancellationToken);
    public virtual EventHubsSchemaGroupCollection GetEventHubsSchemaGroups();
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceResource/<GetEventHubsSchemaGroupAsync>d__36")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<EventHubsSchemaGroupResource>> GetEventHubsSchemaGroupAsync(string schemaGroupName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<EventHubsSchemaGroupResource> GetEventHubsSchemaGroup(string schemaGroupName, CancellationToken cancellationToken);
    public virtual EventHubsApplicationGroupCollection GetEventHubsApplicationGroups();
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceResource/<GetEventHubsApplicationGroupAsync>d__39")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<EventHubsApplicationGroupResource>> GetEventHubsApplicationGroupAsync(string applicationGroupName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<EventHubsApplicationGroupResource> GetEventHubsApplicationGroup(string applicationGroupName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceResource/<GetAsync>d__41")]
public virtual Task`1<Response`1<EventHubsNamespaceResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<EventHubsNamespaceResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceResource/<DeleteAsync>d__43")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceResource/<UpdateAsync>d__45")]
public virtual Task`1<Response`1<EventHubsNamespaceResource>> UpdateAsync(EventHubsNamespaceData data, CancellationToken cancellationToken);
    public virtual Response`1<EventHubsNamespaceResource> Update(EventHubsNamespaceData data, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<EventHubsPrivateLinkResourceData> GetPrivateLinkResourcesAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<EventHubsPrivateLinkResourceData> GetPrivateLinkResources(CancellationToken cancellationToken);
    public virtual AsyncPageable`1<EventHubsNetworkSecurityPerimeterConfiguration> GetNetworkSecurityPerimeterConfigurationsAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<EventHubsNetworkSecurityPerimeterConfiguration> GetNetworkSecurityPerimeterConfigurations(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceResource/<CreateOrUpdateNetworkSecurityPerimeterConfigurationAsync>d__51")]
public virtual Task`1<ArmOperation> CreateOrUpdateNetworkSecurityPerimeterConfigurationAsync(WaitUntil waitUntil, string resourceAssociationName, CancellationToken cancellationToken);
    public virtual ArmOperation CreateOrUpdateNetworkSecurityPerimeterConfiguration(WaitUntil waitUntil, string resourceAssociationName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceResource/<CheckEventHubsDisasterRecoveryNameAvailabilityAsync>d__53")]
public virtual Task`1<Response`1<EventHubsNameAvailabilityResult>> CheckEventHubsDisasterRecoveryNameAvailabilityAsync(EventHubsNameAvailabilityContent content, CancellationToken cancellationToken);
    public virtual Response`1<EventHubsNameAvailabilityResult> CheckEventHubsDisasterRecoveryNameAvailability(EventHubsNameAvailabilityContent content, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceResource/<AddTagAsync>d__55")]
public virtual Task`1<Response`1<EventHubsNamespaceResource>> AddTagAsync(string key, string value, CancellationToken cancellationToken);
    public virtual Response`1<EventHubsNamespaceResource> AddTag(string key, string value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceResource/<SetTagsAsync>d__57")]
public virtual Task`1<Response`1<EventHubsNamespaceResource>> SetTagsAsync(IDictionary`2<string, string> tags, CancellationToken cancellationToken);
    public virtual Response`1<EventHubsNamespaceResource> SetTags(IDictionary`2<string, string> tags, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNamespaceResource/<RemoveTagAsync>d__59")]
public virtual Task`1<Response`1<EventHubsNamespaceResource>> RemoveTagAsync(string key, CancellationToken cancellationToken);
    public virtual Response`1<EventHubsNamespaceResource> RemoveTag(string key, CancellationToken cancellationToken);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsNamespaceData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNamespaceData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsNamespaceData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsNamespaceData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNamespaceData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsNamespaceData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsNamespaceData>.GetFormatFromOptions(ModelReaderWriterOptions options);
    [CompilerGeneratedAttribute]
private EventHubsNamespaceAuthorizationRuleCollection <GetEventHubsNamespaceAuthorizationRules>b__23_0(ArmClient client);
    [CompilerGeneratedAttribute]
private EventHubsPrivateEndpointConnectionCollection <GetEventHubsPrivateEndpointConnections>b__26_0(ArmClient client);
    [CompilerGeneratedAttribute]
private EventHubsDisasterRecoveryCollection <GetEventHubsDisasterRecoveries>b__29_0(ArmClient client);
    [CompilerGeneratedAttribute]
private EventHubCollection <GetEventHubs>b__32_0(ArmClient client);
    [CompilerGeneratedAttribute]
private EventHubsSchemaGroupCollection <GetEventHubsSchemaGroups>b__35_0(ArmClient client);
    [CompilerGeneratedAttribute]
private EventHubsApplicationGroupCollection <GetEventHubsApplicationGroups>b__38_0(ArmClient client);
    [CompilerGeneratedAttribute]
private HttpMessage <GetPrivateLinkResourcesAsync>g__FirstPageRequest|47_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetPrivateLinkResources>g__FirstPageRequest|48_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetNetworkSecurityPerimeterConfigurationsAsync>g__FirstPageRequest|49_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetNetworkSecurityPerimeterConfigurations>g__FirstPageRequest|50_0(Nullable`1<int> pageSizeHint);
}
public class Azure.ResourceManager.EventHubs.EventHubsNetworkRuleSetData : ResourceData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <TrustedServiceAccessEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<EventHubsNetworkRuleSetDefaultAction> <DefaultAction>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<EventHubsNetworkRuleSetVirtualNetworkRules> <VirtualNetworkRules>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<EventHubsNetworkRuleSetIPRules> <IPRules>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<EventHubsPublicNetworkAccessFlag> <PublicNetworkAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<AzureLocation> <Location>k__BackingField;
    [WirePathAttribute("properties.trustedServiceAccessEnabled")]
public Nullable`1<bool> TrustedServiceAccessEnabled { get; public set; }
    [WirePathAttribute("properties.defaultAction")]
public Nullable`1<EventHubsNetworkRuleSetDefaultAction> DefaultAction { get; public set; }
    [WirePathAttribute("properties.virtualNetworkRules")]
public IList`1<EventHubsNetworkRuleSetVirtualNetworkRules> VirtualNetworkRules { get; }
    [WirePathAttribute("properties.ipRules")]
public IList`1<EventHubsNetworkRuleSetIPRules> IPRules { get; }
    [WirePathAttribute("properties.publicNetworkAccess")]
public Nullable`1<EventHubsPublicNetworkAccessFlag> PublicNetworkAccess { get; public set; }
    [WirePathAttribute("location")]
public Nullable`1<AzureLocation> Location { get; }
    internal EventHubsNetworkRuleSetData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<bool> trustedServiceAccessEnabled, Nullable`1<EventHubsNetworkRuleSetDefaultAction> defaultAction, IList`1<EventHubsNetworkRuleSetVirtualNetworkRules> virtualNetworkRules, IList`1<EventHubsNetworkRuleSetIPRules> ipRules, Nullable`1<EventHubsPublicNetworkAccessFlag> publicNetworkAccess, Nullable`1<AzureLocation> location, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_TrustedServiceAccessEnabled();
    [CompilerGeneratedAttribute]
public void set_TrustedServiceAccessEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<EventHubsNetworkRuleSetDefaultAction> get_DefaultAction();
    [CompilerGeneratedAttribute]
public void set_DefaultAction(Nullable`1<EventHubsNetworkRuleSetDefaultAction> value);
    [CompilerGeneratedAttribute]
public IList`1<EventHubsNetworkRuleSetVirtualNetworkRules> get_VirtualNetworkRules();
    [CompilerGeneratedAttribute]
public IList`1<EventHubsNetworkRuleSetIPRules> get_IPRules();
    [CompilerGeneratedAttribute]
public Nullable`1<EventHubsPublicNetworkAccessFlag> get_PublicNetworkAccess();
    [CompilerGeneratedAttribute]
public void set_PublicNetworkAccess(Nullable`1<EventHubsPublicNetworkAccessFlag> value);
    [CompilerGeneratedAttribute]
public Nullable`1<AzureLocation> get_Location();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsNetworkRuleSetData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNetworkRuleSetData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsNetworkRuleSetData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsNetworkRuleSetData DeserializeEventHubsNetworkRuleSetData(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsNetworkRuleSetData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNetworkRuleSetData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsNetworkRuleSetData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsNetworkRuleSetData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.EventHubsNetworkRuleSetResource : ArmResource {
    private ClientDiagnostics _eventHubsNetworkRuleSetNamespacesClientDiagnostics;
    private NamespacesRestOperations _eventHubsNetworkRuleSetNamespacesRestClient;
    private EventHubsNetworkRuleSetData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public EventHubsNetworkRuleSetData Data { get; }
    internal EventHubsNetworkRuleSetResource(ArmClient client, EventHubsNetworkRuleSetData data);
    internal EventHubsNetworkRuleSetResource(ArmClient client, ResourceIdentifier id);
    private static EventHubsNetworkRuleSetResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string namespaceName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual EventHubsNetworkRuleSetData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNetworkRuleSetResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<EventHubsNetworkRuleSetResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<EventHubsNetworkRuleSetResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsNetworkRuleSetResource/<CreateOrUpdateAsync>d__16")]
public virtual Task`1<ArmOperation`1<EventHubsNetworkRuleSetResource>> CreateOrUpdateAsync(WaitUntil waitUntil, EventHubsNetworkRuleSetData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<EventHubsNetworkRuleSetResource> CreateOrUpdate(WaitUntil waitUntil, EventHubsNetworkRuleSetData data, CancellationToken cancellationToken);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsNetworkRuleSetData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNetworkRuleSetData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsNetworkRuleSetData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsNetworkRuleSetData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNetworkRuleSetData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsNetworkRuleSetData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsNetworkRuleSetData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionCollection : ArmCollection {
    private ClientDiagnostics _eventHubsPrivateEndpointConnectionPrivateEndpointConnectionsClientDiagnostics;
    private PrivateEndpointConnectionsRestOperations _eventHubsPrivateEndpointConnectionPrivateEndpointConnectionsRestClient;
    internal EventHubsPrivateEndpointConnectionCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<EventHubsPrivateEndpointConnectionResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string privateEndpointConnectionName, EventHubsPrivateEndpointConnectionData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<EventHubsPrivateEndpointConnectionResource> CreateOrUpdate(WaitUntil waitUntil, string privateEndpointConnectionName, EventHubsPrivateEndpointConnectionData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<EventHubsPrivateEndpointConnectionResource>> GetAsync(string privateEndpointConnectionName, CancellationToken cancellationToken);
    public virtual Response`1<EventHubsPrivateEndpointConnectionResource> Get(string privateEndpointConnectionName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<EventHubsPrivateEndpointConnectionResource> GetAllAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<EventHubsPrivateEndpointConnectionResource> GetAll(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string privateEndpointConnectionName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string privateEndpointConnectionName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<EventHubsPrivateEndpointConnectionResource>> GetIfExistsAsync(string privateEndpointConnectionName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<EventHubsPrivateEndpointConnectionResource> GetIfExists(string privateEndpointConnectionName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<EventHubsPrivateEndpointConnectionResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<EventHubsPrivateEndpointConnectionResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__FirstPageRequest|9_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__NextPageRequest|9_1(Nullable`1<int> pageSizeHint, string nextLink);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private EventHubsPrivateEndpointConnectionResource <GetAllAsync>b__9_2(JsonElement e);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__FirstPageRequest|10_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__NextPageRequest|10_1(Nullable`1<int> pageSizeHint, string nextLink);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private EventHubsPrivateEndpointConnectionResource <GetAll>b__10_2(JsonElement e);
}
public class Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionData : ResourceData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private WritableSubResource <PrivateEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private EventHubsPrivateLinkServiceConnectionState <ConnectionState>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<EventHubsPrivateEndpointConnectionProvisioningState> <ProvisioningState>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<AzureLocation> <Location>k__BackingField;
    internal WritableSubResource PrivateEndpoint { get; internal set; }
    [WirePathAttribute("properties.privateEndpoint.id")]
public ResourceIdentifier PrivateEndpointId { get; public set; }
    [WirePathAttribute("properties.privateLinkServiceConnectionState")]
public EventHubsPrivateLinkServiceConnectionState ConnectionState { get; public set; }
    [WirePathAttribute("properties.provisioningState")]
public Nullable`1<EventHubsPrivateEndpointConnectionProvisioningState> ProvisioningState { get; public set; }
    [WirePathAttribute("location")]
public Nullable`1<AzureLocation> Location { get; }
    internal EventHubsPrivateEndpointConnectionData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, WritableSubResource privateEndpoint, EventHubsPrivateLinkServiceConnectionState connectionState, Nullable`1<EventHubsPrivateEndpointConnectionProvisioningState> provisioningState, Nullable`1<AzureLocation> location, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
internal WritableSubResource get_PrivateEndpoint();
    [CompilerGeneratedAttribute]
internal void set_PrivateEndpoint(WritableSubResource value);
    public ResourceIdentifier get_PrivateEndpointId();
    public void set_PrivateEndpointId(ResourceIdentifier value);
    [CompilerGeneratedAttribute]
public EventHubsPrivateLinkServiceConnectionState get_ConnectionState();
    [CompilerGeneratedAttribute]
public void set_ConnectionState(EventHubsPrivateLinkServiceConnectionState value);
    [CompilerGeneratedAttribute]
public Nullable`1<EventHubsPrivateEndpointConnectionProvisioningState> get_ProvisioningState();
    [CompilerGeneratedAttribute]
public void set_ProvisioningState(Nullable`1<EventHubsPrivateEndpointConnectionProvisioningState> value);
    [CompilerGeneratedAttribute]
public Nullable`1<AzureLocation> get_Location();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsPrivateEndpointConnectionData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsPrivateEndpointConnectionData DeserializeEventHubsPrivateEndpointConnectionData(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsPrivateEndpointConnectionData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionResource : ArmResource {
    private ClientDiagnostics _eventHubsPrivateEndpointConnectionPrivateEndpointConnectionsClientDiagnostics;
    private PrivateEndpointConnectionsRestOperations _eventHubsPrivateEndpointConnectionPrivateEndpointConnectionsRestClient;
    private EventHubsPrivateEndpointConnectionData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public EventHubsPrivateEndpointConnectionData Data { get; }
    internal EventHubsPrivateEndpointConnectionResource(ArmClient client, EventHubsPrivateEndpointConnectionData data);
    internal EventHubsPrivateEndpointConnectionResource(ArmClient client, ResourceIdentifier id);
    private static EventHubsPrivateEndpointConnectionResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string namespaceName, string privateEndpointConnectionName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual EventHubsPrivateEndpointConnectionData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<EventHubsPrivateEndpointConnectionResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<EventHubsPrivateEndpointConnectionResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionResource/<UpdateAsync>d__18")]
public virtual Task`1<ArmOperation`1<EventHubsPrivateEndpointConnectionResource>> UpdateAsync(WaitUntil waitUntil, EventHubsPrivateEndpointConnectionData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<EventHubsPrivateEndpointConnectionResource> Update(WaitUntil waitUntil, EventHubsPrivateEndpointConnectionData data, CancellationToken cancellationToken);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsPrivateEndpointConnectionData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsPrivateEndpointConnectionData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.EventHubs.EventHubsRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public EventHubsRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal RequestUriBuilder CreateListAuthorizationRulesRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName);
    internal HttpMessage CreateListAuthorizationRulesRequest(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsRestOperations/<ListAuthorizationRulesAsync>d__7")]
public Task`1<Response`1<AuthorizationRuleListResult>> ListAuthorizationRulesAsync(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, CancellationToken cancellationToken);
    public Response`1<AuthorizationRuleListResult> ListAuthorizationRules(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateCreateOrUpdateAuthorizationRuleRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, EventHubsAuthorizationRuleData data);
    internal HttpMessage CreateCreateOrUpdateAuthorizationRuleRequest(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, EventHubsAuthorizationRuleData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsRestOperations/<CreateOrUpdateAuthorizationRuleAsync>d__11")]
public Task`1<Response`1<EventHubsAuthorizationRuleData>> CreateOrUpdateAuthorizationRuleAsync(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, EventHubsAuthorizationRuleData data, CancellationToken cancellationToken);
    public Response`1<EventHubsAuthorizationRuleData> CreateOrUpdateAuthorizationRule(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, EventHubsAuthorizationRuleData data, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateGetAuthorizationRuleRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName);
    internal HttpMessage CreateGetAuthorizationRuleRequest(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsRestOperations/<GetAuthorizationRuleAsync>d__15")]
public Task`1<Response`1<EventHubsAuthorizationRuleData>> GetAuthorizationRuleAsync(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, CancellationToken cancellationToken);
    public Response`1<EventHubsAuthorizationRuleData> GetAuthorizationRule(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateDeleteAuthorizationRuleRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName);
    internal HttpMessage CreateDeleteAuthorizationRuleRequest(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsRestOperations/<DeleteAuthorizationRuleAsync>d__19")]
public Task`1<Response> DeleteAuthorizationRuleAsync(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, CancellationToken cancellationToken);
    public Response DeleteAuthorizationRule(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListKeysRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName);
    internal HttpMessage CreateListKeysRequest(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsRestOperations/<ListKeysAsync>d__23")]
public Task`1<Response`1<EventHubsAccessKeys>> ListKeysAsync(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, CancellationToken cancellationToken);
    public Response`1<EventHubsAccessKeys> ListKeys(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateRegenerateKeysRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, EventHubsRegenerateAccessKeyContent content);
    internal HttpMessage CreateRegenerateKeysRequest(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, EventHubsRegenerateAccessKeyContent content);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsRestOperations/<RegenerateKeysAsync>d__27")]
public Task`1<Response`1<EventHubsAccessKeys>> RegenerateKeysAsync(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, EventHubsRegenerateAccessKeyContent content, CancellationToken cancellationToken);
    public Response`1<EventHubsAccessKeys> RegenerateKeys(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, EventHubsRegenerateAccessKeyContent content, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListByNamespaceRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, Nullable`1<int> skip, Nullable`1<int> top);
    internal HttpMessage CreateListByNamespaceRequest(string subscriptionId, string resourceGroupName, string namespaceName, Nullable`1<int> skip, Nullable`1<int> top);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsRestOperations/<ListByNamespaceAsync>d__31")]
public Task`1<Response`1<EventHubListResult>> ListByNamespaceAsync(string subscriptionId, string resourceGroupName, string namespaceName, Nullable`1<int> skip, Nullable`1<int> top, CancellationToken cancellationToken);
    public Response`1<EventHubListResult> ListByNamespace(string subscriptionId, string resourceGroupName, string namespaceName, Nullable`1<int> skip, Nullable`1<int> top, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateCreateOrUpdateRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, EventHubData data);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, EventHubData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsRestOperations/<CreateOrUpdateAsync>d__35")]
public Task`1<Response`1<EventHubData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, EventHubData data, CancellationToken cancellationToken);
    public Response`1<EventHubData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, EventHubData data, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateDeleteRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsRestOperations/<DeleteAsync>d__39")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateGetRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsRestOperations/<GetAsync>d__43")]
public Task`1<Response`1<EventHubData>> GetAsync(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, CancellationToken cancellationToken);
    public Response`1<EventHubData> Get(string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListAuthorizationRulesNextPageRequestUri(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName);
    internal HttpMessage CreateListAuthorizationRulesNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsRestOperations/<ListAuthorizationRulesNextPageAsync>d__47")]
public Task`1<Response`1<AuthorizationRuleListResult>> ListAuthorizationRulesNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, CancellationToken cancellationToken);
    public Response`1<AuthorizationRuleListResult> ListAuthorizationRulesNextPage(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, string eventHubName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListByNamespaceNextPageRequestUri(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, Nullable`1<int> skip, Nullable`1<int> top);
    internal HttpMessage CreateListByNamespaceNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, Nullable`1<int> skip, Nullable`1<int> top);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsRestOperations/<ListByNamespaceNextPageAsync>d__51")]
public Task`1<Response`1<EventHubListResult>> ListByNamespaceNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, Nullable`1<int> skip, Nullable`1<int> top, CancellationToken cancellationToken);
    public Response`1<EventHubListResult> ListByNamespaceNextPage(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, Nullable`1<int> skip, Nullable`1<int> top, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.EventHubs.EventHubsSchemaGroupCollection : ArmCollection {
    private ClientDiagnostics _eventHubsSchemaGroupSchemaRegistryClientDiagnostics;
    private SchemaRegistryRestOperations _eventHubsSchemaGroupSchemaRegistryRestClient;
    internal EventHubsSchemaGroupCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsSchemaGroupCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<EventHubsSchemaGroupResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string schemaGroupName, EventHubsSchemaGroupData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<EventHubsSchemaGroupResource> CreateOrUpdate(WaitUntil waitUntil, string schemaGroupName, EventHubsSchemaGroupData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsSchemaGroupCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<EventHubsSchemaGroupResource>> GetAsync(string schemaGroupName, CancellationToken cancellationToken);
    public virtual Response`1<EventHubsSchemaGroupResource> Get(string schemaGroupName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<EventHubsSchemaGroupResource> GetAllAsync(Nullable`1<int> skip, Nullable`1<int> top, CancellationToken cancellationToken);
    public virtual Pageable`1<EventHubsSchemaGroupResource> GetAll(Nullable`1<int> skip, Nullable`1<int> top, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsSchemaGroupCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string schemaGroupName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string schemaGroupName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsSchemaGroupCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<EventHubsSchemaGroupResource>> GetIfExistsAsync(string schemaGroupName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<EventHubsSchemaGroupResource> GetIfExists(string schemaGroupName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<EventHubsSchemaGroupResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.EventHubs.EventHubsSchemaGroupResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<EventHubsSchemaGroupResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.EventHubs.EventHubsSchemaGroupResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.EventHubs.EventHubsSchemaGroupData : ResourceData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <UpdatedAtUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <CreatedAtUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ETag> <ETag>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <GroupProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<EventHubsSchemaCompatibility> <SchemaCompatibility>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<EventHubsSchemaType> <SchemaType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<AzureLocation> <Location>k__BackingField;
    [WirePathAttribute("properties.updatedAtUtc")]
public Nullable`1<DateTimeOffset> UpdatedAtUtc { get; }
    [WirePathAttribute("properties.createdAtUtc")]
public Nullable`1<DateTimeOffset> CreatedAtUtc { get; }
    [WirePathAttribute("properties.eTag")]
public Nullable`1<ETag> ETag { get; }
    [WirePathAttribute("properties.groupProperties")]
public IDictionary`2<string, string> GroupProperties { get; }
    [WirePathAttribute("properties.schemaCompatibility")]
public Nullable`1<EventHubsSchemaCompatibility> SchemaCompatibility { get; public set; }
    [WirePathAttribute("properties.schemaType")]
public Nullable`1<EventHubsSchemaType> SchemaType { get; public set; }
    [WirePathAttribute("location")]
public Nullable`1<AzureLocation> Location { get; }
    internal EventHubsSchemaGroupData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<DateTimeOffset> updatedAtUtc, Nullable`1<DateTimeOffset> createdAtUtc, Nullable`1<ETag> eTag, IDictionary`2<string, string> groupProperties, Nullable`1<EventHubsSchemaCompatibility> schemaCompatibility, Nullable`1<EventHubsSchemaType> schemaType, Nullable`1<AzureLocation> location, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_UpdatedAtUtc();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_CreatedAtUtc();
    [CompilerGeneratedAttribute]
public Nullable`1<ETag> get_ETag();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_GroupProperties();
    [CompilerGeneratedAttribute]
public Nullable`1<EventHubsSchemaCompatibility> get_SchemaCompatibility();
    [CompilerGeneratedAttribute]
public void set_SchemaCompatibility(Nullable`1<EventHubsSchemaCompatibility> value);
    [CompilerGeneratedAttribute]
public Nullable`1<EventHubsSchemaType> get_SchemaType();
    [CompilerGeneratedAttribute]
public void set_SchemaType(Nullable`1<EventHubsSchemaType> value);
    [CompilerGeneratedAttribute]
public Nullable`1<AzureLocation> get_Location();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsSchemaGroupData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsSchemaGroupData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsSchemaGroupData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsSchemaGroupData DeserializeEventHubsSchemaGroupData(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsSchemaGroupData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsSchemaGroupData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsSchemaGroupData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsSchemaGroupData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.EventHubsSchemaGroupResource : ArmResource {
    private ClientDiagnostics _eventHubsSchemaGroupSchemaRegistryClientDiagnostics;
    private SchemaRegistryRestOperations _eventHubsSchemaGroupSchemaRegistryRestClient;
    private EventHubsSchemaGroupData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public EventHubsSchemaGroupData Data { get; }
    internal EventHubsSchemaGroupResource(ArmClient client, EventHubsSchemaGroupData data);
    internal EventHubsSchemaGroupResource(ArmClient client, ResourceIdentifier id);
    private static EventHubsSchemaGroupResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string namespaceName, string schemaGroupName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual EventHubsSchemaGroupData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsSchemaGroupResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<EventHubsSchemaGroupResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<EventHubsSchemaGroupResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsSchemaGroupResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.EventHubsSchemaGroupResource/<UpdateAsync>d__18")]
public virtual Task`1<ArmOperation`1<EventHubsSchemaGroupResource>> UpdateAsync(WaitUntil waitUntil, EventHubsSchemaGroupData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<EventHubsSchemaGroupResource> Update(WaitUntil waitUntil, EventHubsSchemaGroupData data, CancellationToken cancellationToken);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsSchemaGroupData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsSchemaGroupData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.EventHubsSchemaGroupData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsSchemaGroupData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsSchemaGroupData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsSchemaGroupData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.EventHubsSchemaGroupData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsArmClient : ArmResource {
    internal MockableEventHubsArmClient(ArmClient client, ResourceIdentifier id);
    internal MockableEventHubsArmClient(ArmClient client);
    private string GetApiVersionOrNull(ResourceType resourceType);
    public virtual EventHubsClusterResource GetEventHubsClusterResource(ResourceIdentifier id);
    public virtual EventHubsNamespaceResource GetEventHubsNamespaceResource(ResourceIdentifier id);
    public virtual EventHubsNetworkRuleSetResource GetEventHubsNetworkRuleSetResource(ResourceIdentifier id);
    public virtual EventHubsNamespaceAuthorizationRuleResource GetEventHubsNamespaceAuthorizationRuleResource(ResourceIdentifier id);
    public virtual EventHubsDisasterRecoveryAuthorizationRuleResource GetEventHubsDisasterRecoveryAuthorizationRuleResource(ResourceIdentifier id);
    public virtual EventHubAuthorizationRuleResource GetEventHubAuthorizationRuleResource(ResourceIdentifier id);
    public virtual EventHubsPrivateEndpointConnectionResource GetEventHubsPrivateEndpointConnectionResource(ResourceIdentifier id);
    public virtual EventHubsDisasterRecoveryResource GetEventHubsDisasterRecoveryResource(ResourceIdentifier id);
    public virtual EventHubResource GetEventHubResource(ResourceIdentifier id);
    public virtual EventHubsConsumerGroupResource GetEventHubsConsumerGroupResource(ResourceIdentifier id);
    public virtual EventHubsSchemaGroupResource GetEventHubsSchemaGroupResource(ResourceIdentifier id);
    public virtual EventHubsApplicationGroupResource GetEventHubsApplicationGroupResource(ResourceIdentifier id);
}
public class Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsResourceGroupResource : ArmResource {
    internal MockableEventHubsResourceGroupResource(ArmClient client, ResourceIdentifier id);
    private string GetApiVersionOrNull(ResourceType resourceType);
    public virtual EventHubsClusterCollection GetEventHubsClusters();
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsResourceGroupResource/<GetEventHubsClusterAsync>d__4")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<EventHubsClusterResource>> GetEventHubsClusterAsync(string clusterName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<EventHubsClusterResource> GetEventHubsCluster(string clusterName, CancellationToken cancellationToken);
    public virtual EventHubsNamespaceCollection GetEventHubsNamespaces();
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsResourceGroupResource/<GetEventHubsNamespaceAsync>d__7")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<EventHubsNamespaceResource>> GetEventHubsNamespaceAsync(string namespaceName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<EventHubsNamespaceResource> GetEventHubsNamespace(string namespaceName, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private EventHubsClusterCollection <GetEventHubsClusters>b__3_0(ArmClient client);
    [CompilerGeneratedAttribute]
private EventHubsNamespaceCollection <GetEventHubsNamespaces>b__6_0(ArmClient client);
}
public class Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsSubscriptionResource : ArmResource {
    private ClientDiagnostics _eventHubsClusterClustersClientDiagnostics;
    private ClustersRestOperations _eventHubsClusterClustersRestClient;
    private ClientDiagnostics _eventHubsNamespaceNamespacesClientDiagnostics;
    private NamespacesRestOperations _eventHubsNamespaceNamespacesRestClient;
    private ClientDiagnostics EventHubsClusterClustersClientDiagnostics { get; }
    private ClustersRestOperations EventHubsClusterClustersRestClient { get; }
    private ClientDiagnostics EventHubsNamespaceNamespacesClientDiagnostics { get; }
    private NamespacesRestOperations EventHubsNamespaceNamespacesRestClient { get; }
    internal MockableEventHubsSubscriptionResource(ArmClient client, ResourceIdentifier id);
    private ClientDiagnostics get_EventHubsClusterClustersClientDiagnostics();
    private ClustersRestOperations get_EventHubsClusterClustersRestClient();
    private ClientDiagnostics get_EventHubsNamespaceNamespacesClientDiagnostics();
    private NamespacesRestOperations get_EventHubsNamespaceNamespacesRestClient();
    private string GetApiVersionOrNull(ResourceType resourceType);
    public virtual AsyncPageable`1<AvailableCluster> GetAvailableClusterRegionClustersAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<AvailableCluster> GetAvailableClusterRegionClusters(CancellationToken cancellationToken);
    public virtual AsyncPageable`1<EventHubsClusterResource> GetEventHubsClustersAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<EventHubsClusterResource> GetEventHubsClusters(CancellationToken cancellationToken);
    public virtual AsyncPageable`1<EventHubsNamespaceResource> GetEventHubsNamespacesAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<EventHubsNamespaceResource> GetEventHubsNamespaces(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsSubscriptionResource/<CheckEventHubsNamespaceNameAvailabilityAsync>d__21")]
public virtual Task`1<Response`1<EventHubsNameAvailabilityResult>> CheckEventHubsNamespaceNameAvailabilityAsync(EventHubsNameAvailabilityContent content, CancellationToken cancellationToken);
    public virtual Response`1<EventHubsNameAvailabilityResult> CheckEventHubsNamespaceNameAvailability(EventHubsNameAvailabilityContent content, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAvailableClusterRegionClustersAsync>g__FirstPageRequest|15_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAvailableClusterRegionClusters>g__FirstPageRequest|16_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetEventHubsClustersAsync>g__FirstPageRequest|17_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetEventHubsClustersAsync>g__NextPageRequest|17_1(Nullable`1<int> pageSizeHint, string nextLink);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private EventHubsClusterResource <GetEventHubsClustersAsync>b__17_2(JsonElement e);
    [CompilerGeneratedAttribute]
private HttpMessage <GetEventHubsClusters>g__FirstPageRequest|18_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetEventHubsClusters>g__NextPageRequest|18_1(Nullable`1<int> pageSizeHint, string nextLink);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private EventHubsClusterResource <GetEventHubsClusters>b__18_2(JsonElement e);
    [CompilerGeneratedAttribute]
private HttpMessage <GetEventHubsNamespacesAsync>g__FirstPageRequest|19_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetEventHubsNamespacesAsync>g__NextPageRequest|19_1(Nullable`1<int> pageSizeHint, string nextLink);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private EventHubsNamespaceResource <GetEventHubsNamespacesAsync>b__19_2(JsonElement e);
    [CompilerGeneratedAttribute]
private HttpMessage <GetEventHubsNamespaces>g__FirstPageRequest|20_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetEventHubsNamespaces>g__NextPageRequest|20_1(Nullable`1<int> pageSizeHint, string nextLink);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private EventHubsNamespaceResource <GetEventHubsNamespaces>b__20_2(JsonElement e);
}
[IsReadOnlyAttribute]
internal class Azure.ResourceManager.EventHubs.Models.ApplicationGroupPolicyType : ValueType {
    private string _value;
    private static string ThrottlingPolicyValue;
    [CompilerGeneratedAttribute]
private static ApplicationGroupPolicyType <ThrottlingPolicy>k__BackingField;
    public static ApplicationGroupPolicyType ThrottlingPolicy { get; }
    public ApplicationGroupPolicyType(string value);
    private static ApplicationGroupPolicyType();
    [CompilerGeneratedAttribute]
public static ApplicationGroupPolicyType get_ThrottlingPolicy();
    public static bool op_Equality(ApplicationGroupPolicyType left, ApplicationGroupPolicyType right);
    public static bool op_Inequality(ApplicationGroupPolicyType left, ApplicationGroupPolicyType right);
    public static ApplicationGroupPolicyType op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ApplicationGroupPolicyType other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
internal class Azure.ResourceManager.EventHubs.Models.ArmDisasterRecoveryListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<EventHubsDisasterRecoveryData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<EventHubsDisasterRecoveryData> Value { get; }
    public string NextLink { get; }
    internal ArmDisasterRecoveryListResult(IReadOnlyList`1<EventHubsDisasterRecoveryData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<EventHubsDisasterRecoveryData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.ArmDisasterRecoveryListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override ArmDisasterRecoveryListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.ArmDisasterRecoveryListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static ArmDisasterRecoveryListResult DeserializeArmDisasterRecoveryListResult(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.ArmDisasterRecoveryListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override ArmDisasterRecoveryListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.ArmDisasterRecoveryListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.ArmDisasterRecoveryListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public static class Azure.ResourceManager.EventHubs.Models.ArmEventHubsModelFactory : object {
    public static AvailableCluster AvailableCluster(Nullable`1<AzureLocation> location);
    public static EventHubsClusterData EventHubsClusterData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary`2<string, string> tags, AzureLocation location, EventHubsClusterSku sku, Nullable`1<DateTimeOffset> createdOn, Nullable`1<EventHubsClusterProvisioningState> provisioningState, Nullable`1<DateTimeOffset> updatedOn, string metricId, string status, Nullable`1<bool> supportsScaling);
    public static EventHubsNamespaceData EventHubsNamespaceData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary`2<string, string> tags, AzureLocation location, EventHubsSku sku, ManagedServiceIdentity identity, Nullable`1<EventHubsTlsVersion> minimumTlsVersion, string provisioningState, string status, Nullable`1<DateTimeOffset> createdOn, Nullable`1<DateTimeOffset> updatedOn, string serviceBusEndpoint, ResourceIdentifier clusterArmId, string metricId, Nullable`1<bool> isAutoInflateEnabled, Nullable`1<EventHubsPublicNetworkAccess> publicNetworkAccess, Nullable`1<int> maximumThroughputUnits, Nullable`1<bool> kafkaEnabled, Nullable`1<bool> zoneRedundant, EventHubsEncryption encryption, IEnumerable`1<EventHubsPrivateEndpointConnectionData> privateEndpointConnections, Nullable`1<bool> disableLocalAuth, string alternateName);
    public static EventHubsPrivateEndpointConnectionData EventHubsPrivateEndpointConnectionData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, ResourceIdentifier privateEndpointId, EventHubsPrivateLinkServiceConnectionState connectionState, Nullable`1<EventHubsPrivateEndpointConnectionProvisioningState> provisioningState, Nullable`1<AzureLocation> location);
    public static EventHubsPrivateLinkResourceData EventHubsPrivateLinkResourceData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string groupId, IEnumerable`1<string> requiredMembers, IEnumerable`1<string> requiredZoneNames);
    public static EventHubsNetworkSecurityPerimeterConfiguration EventHubsNetworkSecurityPerimeterConfiguration(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<EventHubsNetworkSecurityPerimeterConfigurationProvisioningState> provisioningState, IEnumerable`1<EventHubsProvisioningIssue> provisioningIssues, EventHubsNetworkSecurityPerimeter networkSecurityPerimeter, EventHubsNetworkSecurityPerimeterConfigurationPropertiesResourceAssociation resourceAssociation, EventHubsNetworkSecurityPerimeterConfigurationPropertiesProfile profile, Nullable`1<bool> isBackingResource, IEnumerable`1<string> applicableFeatures, string parentAssociationName, ResourceIdentifier sourceResourceId, Nullable`1<AzureLocation> location);
    public static EventHubsProvisioningIssue EventHubsProvisioningIssue(string name, EventHubsProvisioningIssueProperties properties);
    public static EventHubsProvisioningIssueProperties EventHubsProvisioningIssueProperties(string issueType, string description);
    public static EventHubsNetworkSecurityPerimeter EventHubsNetworkSecurityPerimeter(string id, string perimeterGuid, Nullable`1<AzureLocation> location);
    public static EventHubsNetworkSecurityPerimeterConfigurationPropertiesResourceAssociation EventHubsNetworkSecurityPerimeterConfigurationPropertiesResourceAssociation(string name, Nullable`1<EventHubsResourceAssociationAccessMode> accessMode);
    public static EventHubsNetworkSecurityPerimeterConfigurationPropertiesProfile EventHubsNetworkSecurityPerimeterConfigurationPropertiesProfile(string name, string accessRulesVersion, IEnumerable`1<EventHubsNspAccessRule> accessRules);
    public static EventHubsNspAccessRule EventHubsNspAccessRule(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, EventHubsNspAccessRuleProperties properties);
    public static EventHubsNspAccessRuleProperties EventHubsNspAccessRuleProperties(Nullable`1<EventHubsNspAccessRuleDirection> direction, IEnumerable`1<string> addressPrefixes, IEnumerable`1<SubResource> subscriptions, IEnumerable`1<EventHubsNetworkSecurityPerimeter> networkSecurityPerimeters, IEnumerable`1<string> fullyQualifiedDomainNames);
    public static EventHubsNetworkRuleSetData EventHubsNetworkRuleSetData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<bool> trustedServiceAccessEnabled, Nullable`1<EventHubsNetworkRuleSetDefaultAction> defaultAction, IEnumerable`1<EventHubsNetworkRuleSetVirtualNetworkRules> virtualNetworkRules, IEnumerable`1<EventHubsNetworkRuleSetIPRules> ipRules, Nullable`1<EventHubsPublicNetworkAccessFlag> publicNetworkAccess, Nullable`1<AzureLocation> location);
    public static EventHubsAuthorizationRuleData EventHubsAuthorizationRuleData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IEnumerable`1<EventHubsAccessRight> rights, Nullable`1<AzureLocation> location);
    public static EventHubsAccessKeys EventHubsAccessKeys(string primaryConnectionString, string secondaryConnectionString, string aliasPrimaryConnectionString, string aliasSecondaryConnectionString, string primaryKey, string secondaryKey, string keyName);
    public static EventHubsRegenerateAccessKeyContent EventHubsRegenerateAccessKeyContent(EventHubsAccessKeyType keyType, string key);
    public static EventHubsNameAvailabilityResult EventHubsNameAvailabilityResult(string message, Nullable`1<bool> nameAvailable, Nullable`1<EventHubsNameUnavailableReason> reason);
    public static EventHubsConsumerGroupData EventHubsConsumerGroupData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<DateTimeOffset> createdOn, Nullable`1<DateTimeOffset> updatedOn, string userMetadata, Nullable`1<AzureLocation> location);
    public static EventHubsDisasterRecoveryData EventHubsDisasterRecoveryData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<EventHubsDisasterRecoveryProvisioningState> provisioningState, string partnerNamespace, string alternateName, Nullable`1<EventHubsDisasterRecoveryRole> role, Nullable`1<long> pendingReplicationOperationsCount, Nullable`1<AzureLocation> location);
    public static EventHubData EventHubData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IEnumerable`1<string> partitionIds, Nullable`1<DateTimeOffset> createdOn, Nullable`1<DateTimeOffset> updatedOn, Nullable`1<long> partitionCount, Nullable`1<EventHubEntityStatus> status, string userMetadata, CaptureDescription captureDescription, RetentionDescription retentionDescription, Nullable`1<AzureLocation> location);
    public static EventHubsSchemaGroupData EventHubsSchemaGroupData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<DateTimeOffset> updatedAtUtc, Nullable`1<DateTimeOffset> createdAtUtc, Nullable`1<ETag> eTag, IDictionary`2<string, string> groupProperties, Nullable`1<EventHubsSchemaCompatibility> schemaCompatibility, Nullable`1<EventHubsSchemaType> schemaType, Nullable`1<AzureLocation> location);
    public static EventHubsApplicationGroupData EventHubsApplicationGroupData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<bool> isEnabled, string clientAppGroupIdentifier, IEnumerable`1<EventHubsApplicationGroupPolicy> policies, Nullable`1<AzureLocation> location);
}
internal class Azure.ResourceManager.EventHubs.Models.AuthorizationRuleListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<EventHubsAuthorizationRuleData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<EventHubsAuthorizationRuleData> Value { get; }
    public string NextLink { get; }
    internal AuthorizationRuleListResult(IReadOnlyList`1<EventHubsAuthorizationRuleData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<EventHubsAuthorizationRuleData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.AuthorizationRuleListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override AuthorizationRuleListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.AuthorizationRuleListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static AuthorizationRuleListResult DeserializeAuthorizationRuleListResult(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.AuthorizationRuleListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override AuthorizationRuleListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.AuthorizationRuleListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.AuthorizationRuleListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.Models.AvailableCluster : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private Nullable`1<AzureLocation> <Location>k__BackingField;
    [WirePathAttribute("location")]
public Nullable`1<AzureLocation> Location { get; }
    internal AvailableCluster(Nullable`1<AzureLocation> location, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public Nullable`1<AzureLocation> get_Location();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.AvailableCluster>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override AvailableCluster System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.AvailableCluster>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static AvailableCluster DeserializeAvailableCluster(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.AvailableCluster>.Write(ModelReaderWriterOptions options);
    private sealed virtual override AvailableCluster System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.AvailableCluster>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.AvailableCluster>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.EventHubs.Models.AvailableClustersList : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<AvailableCluster> <Value>k__BackingField;
    [WirePathAttribute("value")]
public IReadOnlyList`1<AvailableCluster> Value { get; }
    internal AvailableClustersList(IReadOnlyList`1<AvailableCluster> value, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<AvailableCluster> get_Value();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.AvailableClustersList>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override AvailableClustersList System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.AvailableClustersList>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static AvailableClustersList DeserializeAvailableClustersList(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.AvailableClustersList>.Write(ModelReaderWriterOptions options);
    private sealed virtual override AvailableClustersList System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.AvailableClustersList>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.AvailableClustersList>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.Models.CaptureDescription : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<EncodingCaptureDescription> <Encoding>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <IntervalInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <SizeLimitInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private EventHubDestination <Destination>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SkipEmptyArchives>k__BackingField;
    [WirePathAttribute("enabled")]
public Nullable`1<bool> Enabled { get; public set; }
    [WirePathAttribute("encoding")]
public Nullable`1<EncodingCaptureDescription> Encoding { get; public set; }
    [WirePathAttribute("intervalInSeconds")]
public Nullable`1<int> IntervalInSeconds { get; public set; }
    [WirePathAttribute("sizeLimitInBytes")]
public Nullable`1<int> SizeLimitInBytes { get; public set; }
    [WirePathAttribute("destination")]
public EventHubDestination Destination { get; public set; }
    [WirePathAttribute("skipEmptyArchives")]
public Nullable`1<bool> SkipEmptyArchives { get; public set; }
    internal CaptureDescription(Nullable`1<bool> enabled, Nullable`1<EncodingCaptureDescription> encoding, Nullable`1<int> intervalInSeconds, Nullable`1<int> sizeLimitInBytes, EventHubDestination destination, Nullable`1<bool> skipEmptyArchives, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<EncodingCaptureDescription> get_Encoding();
    [CompilerGeneratedAttribute]
public void set_Encoding(Nullable`1<EncodingCaptureDescription> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_IntervalInSeconds();
    [CompilerGeneratedAttribute]
public void set_IntervalInSeconds(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_SizeLimitInBytes();
    [CompilerGeneratedAttribute]
public void set_SizeLimitInBytes(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public EventHubDestination get_Destination();
    [CompilerGeneratedAttribute]
public void set_Destination(EventHubDestination value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_SkipEmptyArchives();
    [CompilerGeneratedAttribute]
public void set_SkipEmptyArchives(Nullable`1<bool> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.CaptureDescription>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override CaptureDescription System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.CaptureDescription>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static CaptureDescription DeserializeCaptureDescription(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.CaptureDescription>.Write(ModelReaderWriterOptions options);
    private sealed virtual override CaptureDescription System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.CaptureDescription>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.CaptureDescription>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.EventHubs.Models.CleanupPolicyRetentionDescription : ValueType {
    private string _value;
    private static string DeleteValue;
    private static string CompactionValue;
    [CompilerGeneratedAttribute]
private static CleanupPolicyRetentionDescription <Delete>k__BackingField;
    [CompilerGeneratedAttribute]
private static CleanupPolicyRetentionDescription <Compaction>k__BackingField;
    public static CleanupPolicyRetentionDescription Delete { get; }
    public static CleanupPolicyRetentionDescription Compaction { get; }
    public CleanupPolicyRetentionDescription(string value);
    private static CleanupPolicyRetentionDescription();
    [CompilerGeneratedAttribute]
public static CleanupPolicyRetentionDescription get_Delete();
    [CompilerGeneratedAttribute]
public static CleanupPolicyRetentionDescription get_Compaction();
    public static bool op_Equality(CleanupPolicyRetentionDescription left, CleanupPolicyRetentionDescription right);
    public static bool op_Inequality(CleanupPolicyRetentionDescription left, CleanupPolicyRetentionDescription right);
    public static CleanupPolicyRetentionDescription op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(CleanupPolicyRetentionDescription other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
internal class Azure.ResourceManager.EventHubs.Models.ClusterListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<EventHubsClusterData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<EventHubsClusterData> Value { get; }
    public string NextLink { get; }
    internal ClusterListResult(IReadOnlyList`1<EventHubsClusterData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<EventHubsClusterData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.ClusterListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override ClusterListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.ClusterListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static ClusterListResult DeserializeClusterListResult(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.ClusterListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override ClusterListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.ClusterListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.ClusterListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.Models.ClusterQuotaConfigurationProperties : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Settings>k__BackingField;
    [WirePathAttribute("settings")]
public IDictionary`2<string, string> Settings { get; }
    internal ClusterQuotaConfigurationProperties(IDictionary`2<string, string> settings, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Settings();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.ClusterQuotaConfigurationProperties>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override ClusterQuotaConfigurationProperties System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.ClusterQuotaConfigurationProperties>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static ClusterQuotaConfigurationProperties DeserializeClusterQuotaConfigurationProperties(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.ClusterQuotaConfigurationProperties>.Write(ModelReaderWriterOptions options);
    private sealed virtual override ClusterQuotaConfigurationProperties System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.ClusterQuotaConfigurationProperties>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.ClusterQuotaConfigurationProperties>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.EventHubs.Models.ConsumerGroupListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<EventHubsConsumerGroupData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<EventHubsConsumerGroupData> Value { get; }
    public string NextLink { get; }
    internal ConsumerGroupListResult(IReadOnlyList`1<EventHubsConsumerGroupData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<EventHubsConsumerGroupData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.ConsumerGroupListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override ConsumerGroupListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.ConsumerGroupListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static ConsumerGroupListResult DeserializeConsumerGroupListResult(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.ConsumerGroupListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override ConsumerGroupListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.ConsumerGroupListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.ConsumerGroupListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.EventHubs.Models.EHNamespaceIdListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<SubResource> <Value>k__BackingField;
    [WirePathAttribute("value")]
public IReadOnlyList`1<SubResource> Value { get; }
    internal EHNamespaceIdListResult(IReadOnlyList`1<SubResource> value, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<SubResource> get_Value();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EHNamespaceIdListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EHNamespaceIdListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EHNamespaceIdListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EHNamespaceIdListResult DeserializeEHNamespaceIdListResult(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EHNamespaceIdListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EHNamespaceIdListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EHNamespaceIdListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EHNamespaceIdListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.EventHubs.Models.EHNamespaceListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<EventHubsNamespaceData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<EventHubsNamespaceData> Value { get; }
    public string NextLink { get; }
    internal EHNamespaceListResult(IReadOnlyList`1<EventHubsNamespaceData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<EventHubsNamespaceData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EHNamespaceListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EHNamespaceListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EHNamespaceListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EHNamespaceListResult DeserializeEHNamespaceListResult(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EHNamespaceListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EHNamespaceListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EHNamespaceListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EHNamespaceListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public enum Azure.ResourceManager.EventHubs.Models.EncodingCaptureDescription : Enum {
    public int value__;
    public static EncodingCaptureDescription Avro;
    public static EncodingCaptureDescription AvroDeflate;
}
[ExtensionAttribute]
internal static class Azure.ResourceManager.EventHubs.Models.EncodingCaptureDescriptionExtensions : object {
    [ExtensionAttribute]
public static string ToSerialString(EncodingCaptureDescription value);
    [ExtensionAttribute]
public static EncodingCaptureDescription ToEncodingCaptureDescription(string value);
}
public class Azure.ResourceManager.EventHubs.Models.EventHubDestination : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private EventHubsCaptureIdentity <Identity>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceIdentifier <StorageAccountResourceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BlobContainer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ArchiveNameFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <DataLakeSubscriptionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataLakeAccountName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataLakeFolderPath>k__BackingField;
    [WirePathAttribute("name")]
public string Name { get; public set; }
    [WirePathAttribute("identity")]
public EventHubsCaptureIdentity Identity { get; public set; }
    [WirePathAttribute("properties.storageAccountResourceId")]
public ResourceIdentifier StorageAccountResourceId { get; public set; }
    [WirePathAttribute("properties.blobContainer")]
public string BlobContainer { get; public set; }
    [WirePathAttribute("properties.archiveNameFormat")]
public string ArchiveNameFormat { get; public set; }
    [WirePathAttribute("properties.dataLakeSubscriptionId")]
public Nullable`1<Guid> DataLakeSubscriptionId { get; public set; }
    [WirePathAttribute("properties.dataLakeAccountName")]
public string DataLakeAccountName { get; public set; }
    [WirePathAttribute("properties.dataLakeFolderPath")]
public string DataLakeFolderPath { get; public set; }
    internal EventHubDestination(string name, EventHubsCaptureIdentity identity, ResourceIdentifier storageAccountResourceId, string blobContainer, string archiveNameFormat, Nullable`1<Guid> dataLakeSubscriptionId, string dataLakeAccountName, string dataLakeFolderPath, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public EventHubsCaptureIdentity get_Identity();
    [CompilerGeneratedAttribute]
public void set_Identity(EventHubsCaptureIdentity value);
    [CompilerGeneratedAttribute]
public ResourceIdentifier get_StorageAccountResourceId();
    [CompilerGeneratedAttribute]
public void set_StorageAccountResourceId(ResourceIdentifier value);
    [CompilerGeneratedAttribute]
public string get_BlobContainer();
    [CompilerGeneratedAttribute]
public void set_BlobContainer(string value);
    [CompilerGeneratedAttribute]
public string get_ArchiveNameFormat();
    [CompilerGeneratedAttribute]
public void set_ArchiveNameFormat(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_DataLakeSubscriptionId();
    [CompilerGeneratedAttribute]
public void set_DataLakeSubscriptionId(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public string get_DataLakeAccountName();
    [CompilerGeneratedAttribute]
public void set_DataLakeAccountName(string value);
    [CompilerGeneratedAttribute]
public string get_DataLakeFolderPath();
    [CompilerGeneratedAttribute]
public void set_DataLakeFolderPath(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubDestination>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubDestination System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubDestination>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubDestination DeserializeEventHubDestination(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubDestination>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubDestination System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubDestination>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubDestination>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public enum Azure.ResourceManager.EventHubs.Models.EventHubEntityStatus : Enum {
    public int value__;
    public static EventHubEntityStatus Unknown;
    public static EventHubEntityStatus Active;
    public static EventHubEntityStatus Disabled;
    public static EventHubEntityStatus Restoring;
    public static EventHubEntityStatus SendDisabled;
    public static EventHubEntityStatus ReceiveDisabled;
    public static EventHubEntityStatus Creating;
    public static EventHubEntityStatus Deleting;
    public static EventHubEntityStatus Renaming;
}
[ExtensionAttribute]
internal static class Azure.ResourceManager.EventHubs.Models.EventHubEntityStatusExtensions : object {
    [ExtensionAttribute]
public static string ToSerialString(EventHubEntityStatus value);
    [ExtensionAttribute]
public static EventHubEntityStatus ToEventHubEntityStatus(string value);
}
internal class Azure.ResourceManager.EventHubs.Models.EventHubListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<EventHubData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<EventHubData> Value { get; }
    public string NextLink { get; }
    internal EventHubListResult(IReadOnlyList`1<EventHubData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<EventHubData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubListResult DeserializeEventHubListResult(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.Models.EventHubsAccessKeys : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <PrimaryConnectionString>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecondaryConnectionString>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AliasPrimaryConnectionString>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AliasSecondaryConnectionString>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PrimaryKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecondaryKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeyName>k__BackingField;
    [WirePathAttribute("primaryConnectionString")]
public string PrimaryConnectionString { get; }
    [WirePathAttribute("secondaryConnectionString")]
public string SecondaryConnectionString { get; }
    [WirePathAttribute("aliasPrimaryConnectionString")]
public string AliasPrimaryConnectionString { get; }
    [WirePathAttribute("aliasSecondaryConnectionString")]
public string AliasSecondaryConnectionString { get; }
    [WirePathAttribute("primaryKey")]
public string PrimaryKey { get; }
    [WirePathAttribute("secondaryKey")]
public string SecondaryKey { get; }
    [WirePathAttribute("keyName")]
public string KeyName { get; }
    internal EventHubsAccessKeys(string primaryConnectionString, string secondaryConnectionString, string aliasPrimaryConnectionString, string aliasSecondaryConnectionString, string primaryKey, string secondaryKey, string keyName, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_PrimaryConnectionString();
    [CompilerGeneratedAttribute]
public string get_SecondaryConnectionString();
    [CompilerGeneratedAttribute]
public string get_AliasPrimaryConnectionString();
    [CompilerGeneratedAttribute]
public string get_AliasSecondaryConnectionString();
    [CompilerGeneratedAttribute]
public string get_PrimaryKey();
    [CompilerGeneratedAttribute]
public string get_SecondaryKey();
    [CompilerGeneratedAttribute]
public string get_KeyName();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsAccessKeys>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsAccessKeys System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsAccessKeys>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsAccessKeys DeserializeEventHubsAccessKeys(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsAccessKeys>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsAccessKeys System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsAccessKeys>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsAccessKeys>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.EventHubs.Models.EventHubsAccessKeyType : ValueType {
    private string _value;
    private static string PrimaryKeyValue;
    private static string SecondaryKeyValue;
    [CompilerGeneratedAttribute]
private static EventHubsAccessKeyType <PrimaryKey>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsAccessKeyType <SecondaryKey>k__BackingField;
    public static EventHubsAccessKeyType PrimaryKey { get; }
    public static EventHubsAccessKeyType SecondaryKey { get; }
    public EventHubsAccessKeyType(string value);
    private static EventHubsAccessKeyType();
    [CompilerGeneratedAttribute]
public static EventHubsAccessKeyType get_PrimaryKey();
    [CompilerGeneratedAttribute]
public static EventHubsAccessKeyType get_SecondaryKey();
    public static bool op_Equality(EventHubsAccessKeyType left, EventHubsAccessKeyType right);
    public static bool op_Inequality(EventHubsAccessKeyType left, EventHubsAccessKeyType right);
    public static EventHubsAccessKeyType op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(EventHubsAccessKeyType other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.EventHubs.Models.EventHubsAccessRight : ValueType {
    private string _value;
    private static string ManageValue;
    private static string SendValue;
    private static string ListenValue;
    [CompilerGeneratedAttribute]
private static EventHubsAccessRight <Manage>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsAccessRight <Send>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsAccessRight <Listen>k__BackingField;
    public static EventHubsAccessRight Manage { get; }
    public static EventHubsAccessRight Send { get; }
    public static EventHubsAccessRight Listen { get; }
    public EventHubsAccessRight(string value);
    private static EventHubsAccessRight();
    [CompilerGeneratedAttribute]
public static EventHubsAccessRight get_Manage();
    [CompilerGeneratedAttribute]
public static EventHubsAccessRight get_Send();
    [CompilerGeneratedAttribute]
public static EventHubsAccessRight get_Listen();
    public static bool op_Equality(EventHubsAccessRight left, EventHubsAccessRight right);
    public static bool op_Inequality(EventHubsAccessRight left, EventHubsAccessRight right);
    public static EventHubsAccessRight op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(EventHubsAccessRight other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
internal class Azure.ResourceManager.EventHubs.Models.EventHubsApplicationGroupListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<EventHubsApplicationGroupData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<EventHubsApplicationGroupData> Value { get; }
    public string NextLink { get; }
    internal EventHubsApplicationGroupListResult(IReadOnlyList`1<EventHubsApplicationGroupData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<EventHubsApplicationGroupData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsApplicationGroupListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsApplicationGroupListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsApplicationGroupListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsApplicationGroupListResult DeserializeEventHubsApplicationGroupListResult(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsApplicationGroupListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsApplicationGroupListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsApplicationGroupListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsApplicationGroupListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
[PersistableModelProxyAttribute("Azure.ResourceManager.EventHubs.Models.UnknownApplicationGroupPolicy")]
public abstract class Azure.ResourceManager.EventHubs.Models.EventHubsApplicationGroupPolicy : object {
    private protected IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ApplicationGroupPolicyType <ApplicationGroupPolicyType>k__BackingField;
    [WirePathAttribute("name")]
public string Name { get; public set; }
    internal ApplicationGroupPolicyType ApplicationGroupPolicyType { get; internal set; }
    protected EventHubsApplicationGroupPolicy(string name);
    internal EventHubsApplicationGroupPolicy(string name, ApplicationGroupPolicyType applicationGroupPolicyType, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
internal ApplicationGroupPolicyType get_ApplicationGroupPolicyType();
    [CompilerGeneratedAttribute]
internal void set_ApplicationGroupPolicyType(ApplicationGroupPolicyType value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsApplicationGroupPolicy>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsApplicationGroupPolicy System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsApplicationGroupPolicy>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsApplicationGroupPolicy DeserializeEventHubsApplicationGroupPolicy(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsApplicationGroupPolicy>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsApplicationGroupPolicy System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsApplicationGroupPolicy>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsApplicationGroupPolicy>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.Models.EventHubsCaptureIdentity : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private Nullable`1<EventHubsCaptureIdentityType> <IdentityType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserAssignedIdentity>k__BackingField;
    [WirePathAttribute("type")]
public Nullable`1<EventHubsCaptureIdentityType> IdentityType { get; public set; }
    [WirePathAttribute("userAssignedIdentity")]
public string UserAssignedIdentity { get; public set; }
    internal EventHubsCaptureIdentity(Nullable`1<EventHubsCaptureIdentityType> identityType, string userAssignedIdentity, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public Nullable`1<EventHubsCaptureIdentityType> get_IdentityType();
    [CompilerGeneratedAttribute]
public void set_IdentityType(Nullable`1<EventHubsCaptureIdentityType> value);
    [CompilerGeneratedAttribute]
public string get_UserAssignedIdentity();
    [CompilerGeneratedAttribute]
public void set_UserAssignedIdentity(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsCaptureIdentity>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsCaptureIdentity System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsCaptureIdentity>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsCaptureIdentity DeserializeEventHubsCaptureIdentity(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsCaptureIdentity>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsCaptureIdentity System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsCaptureIdentity>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsCaptureIdentity>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public enum Azure.ResourceManager.EventHubs.Models.EventHubsCaptureIdentityType : Enum {
    public int value__;
    public static EventHubsCaptureIdentityType SystemAssigned;
    public static EventHubsCaptureIdentityType UserAssigned;
}
[ExtensionAttribute]
internal static class Azure.ResourceManager.EventHubs.Models.EventHubsCaptureIdentityTypeExtensions : object {
    [ExtensionAttribute]
public static string ToSerialString(EventHubsCaptureIdentityType value);
    [ExtensionAttribute]
public static EventHubsCaptureIdentityType ToEventHubsCaptureIdentityType(string value);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.EventHubs.Models.EventHubsClusterProvisioningState : ValueType {
    private string _value;
    private static string UnknownValue;
    private static string CreatingValue;
    private static string DeletingValue;
    private static string ScalingValue;
    private static string ActiveValue;
    private static string FailedValue;
    private static string SucceededValue;
    private static string CanceledValue;
    [CompilerGeneratedAttribute]
private static EventHubsClusterProvisioningState <Unknown>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsClusterProvisioningState <Creating>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsClusterProvisioningState <Deleting>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsClusterProvisioningState <Scaling>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsClusterProvisioningState <Active>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsClusterProvisioningState <Failed>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsClusterProvisioningState <Succeeded>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsClusterProvisioningState <Canceled>k__BackingField;
    public static EventHubsClusterProvisioningState Unknown { get; }
    public static EventHubsClusterProvisioningState Creating { get; }
    public static EventHubsClusterProvisioningState Deleting { get; }
    public static EventHubsClusterProvisioningState Scaling { get; }
    public static EventHubsClusterProvisioningState Active { get; }
    public static EventHubsClusterProvisioningState Failed { get; }
    public static EventHubsClusterProvisioningState Succeeded { get; }
    public static EventHubsClusterProvisioningState Canceled { get; }
    public EventHubsClusterProvisioningState(string value);
    private static EventHubsClusterProvisioningState();
    [CompilerGeneratedAttribute]
public static EventHubsClusterProvisioningState get_Unknown();
    [CompilerGeneratedAttribute]
public static EventHubsClusterProvisioningState get_Creating();
    [CompilerGeneratedAttribute]
public static EventHubsClusterProvisioningState get_Deleting();
    [CompilerGeneratedAttribute]
public static EventHubsClusterProvisioningState get_Scaling();
    [CompilerGeneratedAttribute]
public static EventHubsClusterProvisioningState get_Active();
    [CompilerGeneratedAttribute]
public static EventHubsClusterProvisioningState get_Failed();
    [CompilerGeneratedAttribute]
public static EventHubsClusterProvisioningState get_Succeeded();
    [CompilerGeneratedAttribute]
public static EventHubsClusterProvisioningState get_Canceled();
    public static bool op_Equality(EventHubsClusterProvisioningState left, EventHubsClusterProvisioningState right);
    public static bool op_Inequality(EventHubsClusterProvisioningState left, EventHubsClusterProvisioningState right);
    public static EventHubsClusterProvisioningState op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(EventHubsClusterProvisioningState other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.EventHubs.Models.EventHubsClusterSku : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private EventHubsClusterSkuName <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Capacity>k__BackingField;
    [WirePathAttribute("name")]
public EventHubsClusterSkuName Name { get; public set; }
    [WirePathAttribute("capacity")]
public Nullable`1<int> Capacity { get; public set; }
    public EventHubsClusterSku(EventHubsClusterSkuName name);
    internal EventHubsClusterSku(EventHubsClusterSkuName name, Nullable`1<int> capacity, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public EventHubsClusterSkuName get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(EventHubsClusterSkuName value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Capacity();
    [CompilerGeneratedAttribute]
public void set_Capacity(Nullable`1<int> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsClusterSku>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsClusterSku System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsClusterSku>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsClusterSku DeserializeEventHubsClusterSku(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsClusterSku>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsClusterSku System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsClusterSku>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsClusterSku>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.EventHubs.Models.EventHubsClusterSkuName : ValueType {
    private string _value;
    private static string DedicatedValue;
    [CompilerGeneratedAttribute]
private static EventHubsClusterSkuName <Dedicated>k__BackingField;
    public static EventHubsClusterSkuName Dedicated { get; }
    public EventHubsClusterSkuName(string value);
    private static EventHubsClusterSkuName();
    [CompilerGeneratedAttribute]
public static EventHubsClusterSkuName get_Dedicated();
    public static bool op_Equality(EventHubsClusterSkuName left, EventHubsClusterSkuName right);
    public static bool op_Inequality(EventHubsClusterSkuName left, EventHubsClusterSkuName right);
    public static EventHubsClusterSkuName op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(EventHubsClusterSkuName other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public enum Azure.ResourceManager.EventHubs.Models.EventHubsDisasterRecoveryProvisioningState : Enum {
    public int value__;
    public static EventHubsDisasterRecoveryProvisioningState Accepted;
    public static EventHubsDisasterRecoveryProvisioningState Succeeded;
    public static EventHubsDisasterRecoveryProvisioningState Failed;
}
[ExtensionAttribute]
internal static class Azure.ResourceManager.EventHubs.Models.EventHubsDisasterRecoveryProvisioningStateExtensions : object {
    [ExtensionAttribute]
public static string ToSerialString(EventHubsDisasterRecoveryProvisioningState value);
    [ExtensionAttribute]
public static EventHubsDisasterRecoveryProvisioningState ToEventHubsDisasterRecoveryProvisioningState(string value);
}
public enum Azure.ResourceManager.EventHubs.Models.EventHubsDisasterRecoveryRole : Enum {
    public int value__;
    public static EventHubsDisasterRecoveryRole Primary;
    public static EventHubsDisasterRecoveryRole PrimaryNotReplicating;
    public static EventHubsDisasterRecoveryRole Secondary;
}
[ExtensionAttribute]
internal static class Azure.ResourceManager.EventHubs.Models.EventHubsDisasterRecoveryRoleExtensions : object {
    [ExtensionAttribute]
public static string ToSerialString(EventHubsDisasterRecoveryRole value);
    [ExtensionAttribute]
public static EventHubsDisasterRecoveryRole ToEventHubsDisasterRecoveryRole(string value);
}
public class Azure.ResourceManager.EventHubs.Models.EventHubsEncryption : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IList`1<EventHubsKeyVaultProperties> <KeyVaultProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<EventHubsKeySource> <KeySource>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RequireInfrastructureEncryption>k__BackingField;
    [WirePathAttribute("keyVaultProperties")]
public IList`1<EventHubsKeyVaultProperties> KeyVaultProperties { get; }
    [WirePathAttribute("keySource")]
public Nullable`1<EventHubsKeySource> KeySource { get; public set; }
    [WirePathAttribute("requireInfrastructureEncryption")]
public Nullable`1<bool> RequireInfrastructureEncryption { get; public set; }
    internal EventHubsEncryption(IList`1<EventHubsKeyVaultProperties> keyVaultProperties, Nullable`1<EventHubsKeySource> keySource, Nullable`1<bool> requireInfrastructureEncryption, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IList`1<EventHubsKeyVaultProperties> get_KeyVaultProperties();
    [CompilerGeneratedAttribute]
public Nullable`1<EventHubsKeySource> get_KeySource();
    [CompilerGeneratedAttribute]
public void set_KeySource(Nullable`1<EventHubsKeySource> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_RequireInfrastructureEncryption();
    [CompilerGeneratedAttribute]
public void set_RequireInfrastructureEncryption(Nullable`1<bool> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsEncryption>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsEncryption System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsEncryption>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsEncryption DeserializeEventHubsEncryption(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsEncryption>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsEncryption System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsEncryption>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsEncryption>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.EventHubs.Models.EventHubsKeySource : ValueType {
    private string _value;
    private static string MicrosoftKeyVaultValue;
    [CompilerGeneratedAttribute]
private static EventHubsKeySource <MicrosoftKeyVault>k__BackingField;
    public static EventHubsKeySource MicrosoftKeyVault { get; }
    public EventHubsKeySource(string value);
    private static EventHubsKeySource();
    [CompilerGeneratedAttribute]
public static EventHubsKeySource get_MicrosoftKeyVault();
    public static bool op_Equality(EventHubsKeySource left, EventHubsKeySource right);
    public static bool op_Inequality(EventHubsKeySource left, EventHubsKeySource right);
    public static EventHubsKeySource op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(EventHubsKeySource other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.EventHubs.Models.EventHubsKeyVaultProperties : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <KeyName>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <KeyVaultUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeyVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private UserAssignedIdentityProperties <Identity>k__BackingField;
    [WirePathAttribute("keyName")]
public string KeyName { get; public set; }
    [WirePathAttribute("keyVaultUri")]
public Uri KeyVaultUri { get; public set; }
    [WirePathAttribute("keyVersion")]
public string KeyVersion { get; public set; }
    internal UserAssignedIdentityProperties Identity { get; internal set; }
    [WirePathAttribute("identity.userAssignedIdentity")]
public string UserAssignedIdentity { get; public set; }
    internal EventHubsKeyVaultProperties(string keyName, Uri keyVaultUri, string keyVersion, UserAssignedIdentityProperties identity, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_KeyName();
    [CompilerGeneratedAttribute]
public void set_KeyName(string value);
    [CompilerGeneratedAttribute]
public Uri get_KeyVaultUri();
    [CompilerGeneratedAttribute]
public void set_KeyVaultUri(Uri value);
    [CompilerGeneratedAttribute]
public string get_KeyVersion();
    [CompilerGeneratedAttribute]
public void set_KeyVersion(string value);
    [CompilerGeneratedAttribute]
internal UserAssignedIdentityProperties get_Identity();
    [CompilerGeneratedAttribute]
internal void set_Identity(UserAssignedIdentityProperties value);
    public string get_UserAssignedIdentity();
    public void set_UserAssignedIdentity(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsKeyVaultProperties>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsKeyVaultProperties System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsKeyVaultProperties>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsKeyVaultProperties DeserializeEventHubsKeyVaultProperties(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsKeyVaultProperties>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsKeyVaultProperties System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsKeyVaultProperties>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsKeyVaultProperties>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.EventHubs.Models.EventHubsMetricId : ValueType {
    private string _value;
    private static string IncomingBytesValue;
    private static string OutgoingBytesValue;
    private static string IncomingMessagesValue;
    private static string OutgoingMessagesValue;
    [CompilerGeneratedAttribute]
private static EventHubsMetricId <IncomingBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsMetricId <OutgoingBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsMetricId <IncomingMessages>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsMetricId <OutgoingMessages>k__BackingField;
    public static EventHubsMetricId IncomingBytes { get; }
    public static EventHubsMetricId OutgoingBytes { get; }
    public static EventHubsMetricId IncomingMessages { get; }
    public static EventHubsMetricId OutgoingMessages { get; }
    public EventHubsMetricId(string value);
    private static EventHubsMetricId();
    [CompilerGeneratedAttribute]
public static EventHubsMetricId get_IncomingBytes();
    [CompilerGeneratedAttribute]
public static EventHubsMetricId get_OutgoingBytes();
    [CompilerGeneratedAttribute]
public static EventHubsMetricId get_IncomingMessages();
    [CompilerGeneratedAttribute]
public static EventHubsMetricId get_OutgoingMessages();
    public static bool op_Equality(EventHubsMetricId left, EventHubsMetricId right);
    public static bool op_Inequality(EventHubsMetricId left, EventHubsMetricId right);
    public static EventHubsMetricId op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(EventHubsMetricId other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.EventHubs.Models.EventHubsNameAvailabilityContent : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [WirePathAttribute("name")]
public string Name { get; }
    public EventHubsNameAvailabilityContent(string name);
    internal EventHubsNameAvailabilityContent(string name, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_Name();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsNameAvailabilityContent>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNameAvailabilityContent System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsNameAvailabilityContent>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsNameAvailabilityContent DeserializeEventHubsNameAvailabilityContent(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNameAvailabilityContent>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNameAvailabilityContent System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNameAvailabilityContent>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNameAvailabilityContent>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.Models.EventHubsNameAvailabilityResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <NameAvailable>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<EventHubsNameUnavailableReason> <Reason>k__BackingField;
    [WirePathAttribute("message")]
public string Message { get; }
    [WirePathAttribute("nameAvailable")]
public Nullable`1<bool> NameAvailable { get; }
    [WirePathAttribute("reason")]
public Nullable`1<EventHubsNameUnavailableReason> Reason { get; }
    internal EventHubsNameAvailabilityResult(string message, Nullable`1<bool> nameAvailable, Nullable`1<EventHubsNameUnavailableReason> reason, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_NameAvailable();
    [CompilerGeneratedAttribute]
public Nullable`1<EventHubsNameUnavailableReason> get_Reason();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsNameAvailabilityResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNameAvailabilityResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsNameAvailabilityResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsNameAvailabilityResult DeserializeEventHubsNameAvailabilityResult(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNameAvailabilityResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNameAvailabilityResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNameAvailabilityResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNameAvailabilityResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public enum Azure.ResourceManager.EventHubs.Models.EventHubsNameUnavailableReason : Enum {
    public int value__;
    public static EventHubsNameUnavailableReason None;
    public static EventHubsNameUnavailableReason InvalidName;
    public static EventHubsNameUnavailableReason SubscriptionIsDisabled;
    public static EventHubsNameUnavailableReason NameInUse;
    public static EventHubsNameUnavailableReason NameInLockdown;
    public static EventHubsNameUnavailableReason TooManyNamespaceInCurrentSubscription;
}
[ExtensionAttribute]
internal static class Azure.ResourceManager.EventHubs.Models.EventHubsNameUnavailableReasonExtensions : object {
    [ExtensionAttribute]
public static string ToSerialString(EventHubsNameUnavailableReason value);
    [ExtensionAttribute]
public static EventHubsNameUnavailableReason ToEventHubsNameUnavailableReason(string value);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.EventHubs.Models.EventHubsNetworkRuleIPAction : ValueType {
    private string _value;
    private static string AllowValue;
    [CompilerGeneratedAttribute]
private static EventHubsNetworkRuleIPAction <Allow>k__BackingField;
    public static EventHubsNetworkRuleIPAction Allow { get; }
    public EventHubsNetworkRuleIPAction(string value);
    private static EventHubsNetworkRuleIPAction();
    [CompilerGeneratedAttribute]
public static EventHubsNetworkRuleIPAction get_Allow();
    public static bool op_Equality(EventHubsNetworkRuleIPAction left, EventHubsNetworkRuleIPAction right);
    public static bool op_Inequality(EventHubsNetworkRuleIPAction left, EventHubsNetworkRuleIPAction right);
    public static EventHubsNetworkRuleIPAction op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(EventHubsNetworkRuleIPAction other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.EventHubs.Models.EventHubsNetworkRuleSetDefaultAction : ValueType {
    private string _value;
    private static string AllowValue;
    private static string DenyValue;
    [CompilerGeneratedAttribute]
private static EventHubsNetworkRuleSetDefaultAction <Allow>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsNetworkRuleSetDefaultAction <Deny>k__BackingField;
    public static EventHubsNetworkRuleSetDefaultAction Allow { get; }
    public static EventHubsNetworkRuleSetDefaultAction Deny { get; }
    public EventHubsNetworkRuleSetDefaultAction(string value);
    private static EventHubsNetworkRuleSetDefaultAction();
    [CompilerGeneratedAttribute]
public static EventHubsNetworkRuleSetDefaultAction get_Allow();
    [CompilerGeneratedAttribute]
public static EventHubsNetworkRuleSetDefaultAction get_Deny();
    public static bool op_Equality(EventHubsNetworkRuleSetDefaultAction left, EventHubsNetworkRuleSetDefaultAction right);
    public static bool op_Inequality(EventHubsNetworkRuleSetDefaultAction left, EventHubsNetworkRuleSetDefaultAction right);
    public static EventHubsNetworkRuleSetDefaultAction op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(EventHubsNetworkRuleSetDefaultAction other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.EventHubs.Models.EventHubsNetworkRuleSetIPRules : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <IPMask>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<EventHubsNetworkRuleIPAction> <Action>k__BackingField;
    [WirePathAttribute("ipMask")]
public string IPMask { get; public set; }
    [WirePathAttribute("action")]
public Nullable`1<EventHubsNetworkRuleIPAction> Action { get; public set; }
    internal EventHubsNetworkRuleSetIPRules(string ipMask, Nullable`1<EventHubsNetworkRuleIPAction> action, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_IPMask();
    [CompilerGeneratedAttribute]
public void set_IPMask(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<EventHubsNetworkRuleIPAction> get_Action();
    [CompilerGeneratedAttribute]
public void set_Action(Nullable`1<EventHubsNetworkRuleIPAction> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkRuleSetIPRules>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNetworkRuleSetIPRules System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkRuleSetIPRules>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsNetworkRuleSetIPRules DeserializeEventHubsNetworkRuleSetIPRules(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkRuleSetIPRules>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNetworkRuleSetIPRules System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkRuleSetIPRules>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkRuleSetIPRules>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.Models.EventHubsNetworkRuleSetVirtualNetworkRules : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private WritableSubResource <Subnet>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMissingVnetServiceEndpoint>k__BackingField;
    internal WritableSubResource Subnet { get; internal set; }
    [WirePathAttribute("subnet.id")]
public ResourceIdentifier SubnetId { get; public set; }
    [WirePathAttribute("ignoreMissingVnetServiceEndpoint")]
public Nullable`1<bool> IgnoreMissingVnetServiceEndpoint { get; public set; }
    internal EventHubsNetworkRuleSetVirtualNetworkRules(WritableSubResource subnet, Nullable`1<bool> ignoreMissingVnetServiceEndpoint, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
internal WritableSubResource get_Subnet();
    [CompilerGeneratedAttribute]
internal void set_Subnet(WritableSubResource value);
    public ResourceIdentifier get_SubnetId();
    public void set_SubnetId(ResourceIdentifier value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IgnoreMissingVnetServiceEndpoint();
    [CompilerGeneratedAttribute]
public void set_IgnoreMissingVnetServiceEndpoint(Nullable`1<bool> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkRuleSetVirtualNetworkRules>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNetworkRuleSetVirtualNetworkRules System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkRuleSetVirtualNetworkRules>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsNetworkRuleSetVirtualNetworkRules DeserializeEventHubsNetworkRuleSetVirtualNetworkRules(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkRuleSetVirtualNetworkRules>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNetworkRuleSetVirtualNetworkRules System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkRuleSetVirtualNetworkRules>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkRuleSetVirtualNetworkRules>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeter : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PerimeterGuid>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<AzureLocation> <Location>k__BackingField;
    [WirePathAttribute("id")]
public string Id { get; }
    [WirePathAttribute("perimeterGuid")]
public string PerimeterGuid { get; }
    [WirePathAttribute("location")]
public Nullable`1<AzureLocation> Location { get; }
    internal EventHubsNetworkSecurityPerimeter(string id, string perimeterGuid, Nullable`1<AzureLocation> location, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public string get_PerimeterGuid();
    [CompilerGeneratedAttribute]
public Nullable`1<AzureLocation> get_Location();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeter>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNetworkSecurityPerimeter System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeter>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsNetworkSecurityPerimeter DeserializeEventHubsNetworkSecurityPerimeter(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeter>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNetworkSecurityPerimeter System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeter>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeter>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeterConfiguration : ResourceData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private Nullable`1<EventHubsNetworkSecurityPerimeterConfigurationProvisioningState> <ProvisioningState>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<EventHubsProvisioningIssue> <ProvisioningIssues>k__BackingField;
    [CompilerGeneratedAttribute]
private EventHubsNetworkSecurityPerimeter <NetworkSecurityPerimeter>k__BackingField;
    [CompilerGeneratedAttribute]
private EventHubsNetworkSecurityPerimeterConfigurationPropertiesResourceAssociation <ResourceAssociation>k__BackingField;
    [CompilerGeneratedAttribute]
private EventHubsNetworkSecurityPerimeterConfigurationPropertiesProfile <Profile>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsBackingResource>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <ApplicableFeatures>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParentAssociationName>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceIdentifier <SourceResourceId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<AzureLocation> <Location>k__BackingField;
    [WirePathAttribute("properties.provisioningState")]
public Nullable`1<EventHubsNetworkSecurityPerimeterConfigurationProvisioningState> ProvisioningState { get; public set; }
    [WirePathAttribute("properties.provisioningIssues")]
public IList`1<EventHubsProvisioningIssue> ProvisioningIssues { get; }
    [WirePathAttribute("properties.networkSecurityPerimeter")]
public EventHubsNetworkSecurityPerimeter NetworkSecurityPerimeter { get; }
    [WirePathAttribute("properties.resourceAssociation")]
public EventHubsNetworkSecurityPerimeterConfigurationPropertiesResourceAssociation ResourceAssociation { get; }
    [WirePathAttribute("properties.profile")]
public EventHubsNetworkSecurityPerimeterConfigurationPropertiesProfile Profile { get; }
    [WirePathAttribute("properties.isBackingResource")]
public Nullable`1<bool> IsBackingResource { get; }
    [WirePathAttribute("properties.applicableFeatures")]
public IReadOnlyList`1<string> ApplicableFeatures { get; }
    [WirePathAttribute("properties.parentAssociationName")]
public string ParentAssociationName { get; }
    [WirePathAttribute("properties.sourceResourceId")]
public ResourceIdentifier SourceResourceId { get; }
    [WirePathAttribute("location")]
public Nullable`1<AzureLocation> Location { get; }
    internal EventHubsNetworkSecurityPerimeterConfiguration(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<EventHubsNetworkSecurityPerimeterConfigurationProvisioningState> provisioningState, IList`1<EventHubsProvisioningIssue> provisioningIssues, EventHubsNetworkSecurityPerimeter networkSecurityPerimeter, EventHubsNetworkSecurityPerimeterConfigurationPropertiesResourceAssociation resourceAssociation, EventHubsNetworkSecurityPerimeterConfigurationPropertiesProfile profile, Nullable`1<bool> isBackingResource, IReadOnlyList`1<string> applicableFeatures, string parentAssociationName, ResourceIdentifier sourceResourceId, Nullable`1<AzureLocation> location, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public Nullable`1<EventHubsNetworkSecurityPerimeterConfigurationProvisioningState> get_ProvisioningState();
    [CompilerGeneratedAttribute]
public void set_ProvisioningState(Nullable`1<EventHubsNetworkSecurityPerimeterConfigurationProvisioningState> value);
    [CompilerGeneratedAttribute]
public IList`1<EventHubsProvisioningIssue> get_ProvisioningIssues();
    [CompilerGeneratedAttribute]
public EventHubsNetworkSecurityPerimeter get_NetworkSecurityPerimeter();
    [CompilerGeneratedAttribute]
public EventHubsNetworkSecurityPerimeterConfigurationPropertiesResourceAssociation get_ResourceAssociation();
    [CompilerGeneratedAttribute]
public EventHubsNetworkSecurityPerimeterConfigurationPropertiesProfile get_Profile();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsBackingResource();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_ApplicableFeatures();
    [CompilerGeneratedAttribute]
public string get_ParentAssociationName();
    [CompilerGeneratedAttribute]
public ResourceIdentifier get_SourceResourceId();
    [CompilerGeneratedAttribute]
public Nullable`1<AzureLocation> get_Location();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeterConfiguration>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNetworkSecurityPerimeterConfiguration System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeterConfiguration>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsNetworkSecurityPerimeterConfiguration DeserializeEventHubsNetworkSecurityPerimeterConfiguration(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeterConfiguration>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNetworkSecurityPerimeterConfiguration System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeterConfiguration>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeterConfiguration>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeterConfigurationPropertiesProfile : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessRulesVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<EventHubsNspAccessRule> <AccessRules>k__BackingField;
    [WirePathAttribute("name")]
public string Name { get; }
    [WirePathAttribute("accessRulesVersion")]
public string AccessRulesVersion { get; }
    [WirePathAttribute("accessRules")]
public IReadOnlyList`1<EventHubsNspAccessRule> AccessRules { get; }
    internal EventHubsNetworkSecurityPerimeterConfigurationPropertiesProfile(string name, string accessRulesVersion, IReadOnlyList`1<EventHubsNspAccessRule> accessRules, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_AccessRulesVersion();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<EventHubsNspAccessRule> get_AccessRules();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeterConfigurationPropertiesProfile>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNetworkSecurityPerimeterConfigurationPropertiesProfile System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeterConfigurationPropertiesProfile>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsNetworkSecurityPerimeterConfigurationPropertiesProfile DeserializeEventHubsNetworkSecurityPerimeterConfigurationPropertiesProfile(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeterConfigurationPropertiesProfile>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNetworkSecurityPerimeterConfigurationPropertiesProfile System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeterConfigurationPropertiesProfile>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeterConfigurationPropertiesProfile>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeterConfigurationPropertiesResourceAssociation : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<EventHubsResourceAssociationAccessMode> <AccessMode>k__BackingField;
    [WirePathAttribute("name")]
public string Name { get; }
    [WirePathAttribute("accessMode")]
public Nullable`1<EventHubsResourceAssociationAccessMode> AccessMode { get; }
    internal EventHubsNetworkSecurityPerimeterConfigurationPropertiesResourceAssociation(string name, Nullable`1<EventHubsResourceAssociationAccessMode> accessMode, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Nullable`1<EventHubsResourceAssociationAccessMode> get_AccessMode();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeterConfigurationPropertiesResourceAssociation>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNetworkSecurityPerimeterConfigurationPropertiesResourceAssociation System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeterConfigurationPropertiesResourceAssociation>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsNetworkSecurityPerimeterConfigurationPropertiesResourceAssociation DeserializeEventHubsNetworkSecurityPerimeterConfigurationPropertiesResourceAssociation(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeterConfigurationPropertiesResourceAssociation>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNetworkSecurityPerimeterConfigurationPropertiesResourceAssociation System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeterConfigurationPropertiesResourceAssociation>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeterConfigurationPropertiesResourceAssociation>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.EventHubs.Models.EventHubsNetworkSecurityPerimeterConfigurationProvisioningState : ValueType {
    private string _value;
    private static string UnknownValue;
    private static string CreatingValue;
    private static string UpdatingValue;
    private static string AcceptedValue;
    private static string InvalidResponseValue;
    private static string SucceededValue;
    private static string SucceededWithIssuesValue;
    private static string FailedValue;
    private static string DeletingValue;
    private static string DeletedValue;
    private static string CanceledValue;
    [CompilerGeneratedAttribute]
private static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState <Unknown>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState <Creating>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState <Updating>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState <Accepted>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState <InvalidResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState <Succeeded>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState <SucceededWithIssues>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState <Failed>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState <Deleting>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState <Deleted>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState <Canceled>k__BackingField;
    public static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState Unknown { get; }
    public static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState Creating { get; }
    public static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState Updating { get; }
    public static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState Accepted { get; }
    public static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState InvalidResponse { get; }
    public static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState Succeeded { get; }
    public static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState SucceededWithIssues { get; }
    public static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState Failed { get; }
    public static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState Deleting { get; }
    public static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState Deleted { get; }
    public static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState Canceled { get; }
    public EventHubsNetworkSecurityPerimeterConfigurationProvisioningState(string value);
    private static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState();
    [CompilerGeneratedAttribute]
public static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState get_Unknown();
    [CompilerGeneratedAttribute]
public static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState get_Creating();
    [CompilerGeneratedAttribute]
public static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState get_Updating();
    [CompilerGeneratedAttribute]
public static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState get_Accepted();
    [CompilerGeneratedAttribute]
public static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState get_InvalidResponse();
    [CompilerGeneratedAttribute]
public static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState get_Succeeded();
    [CompilerGeneratedAttribute]
public static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState get_SucceededWithIssues();
    [CompilerGeneratedAttribute]
public static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState get_Failed();
    [CompilerGeneratedAttribute]
public static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState get_Deleting();
    [CompilerGeneratedAttribute]
public static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState get_Deleted();
    [CompilerGeneratedAttribute]
public static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState get_Canceled();
    public static bool op_Equality(EventHubsNetworkSecurityPerimeterConfigurationProvisioningState left, EventHubsNetworkSecurityPerimeterConfigurationProvisioningState right);
    public static bool op_Inequality(EventHubsNetworkSecurityPerimeterConfigurationProvisioningState left, EventHubsNetworkSecurityPerimeterConfigurationProvisioningState right);
    public static EventHubsNetworkSecurityPerimeterConfigurationProvisioningState op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(EventHubsNetworkSecurityPerimeterConfigurationProvisioningState other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.EventHubs.Models.EventHubsNspAccessRule : ResourceData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private EventHubsNspAccessRuleProperties <Properties>k__BackingField;
    [WirePathAttribute("properties")]
public EventHubsNspAccessRuleProperties Properties { get; }
    internal EventHubsNspAccessRule(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, EventHubsNspAccessRuleProperties properties, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public EventHubsNspAccessRuleProperties get_Properties();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsNspAccessRule>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNspAccessRule System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsNspAccessRule>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsNspAccessRule DeserializeEventHubsNspAccessRule(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNspAccessRule>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNspAccessRule System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNspAccessRule>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNspAccessRule>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.EventHubs.Models.EventHubsNspAccessRuleDirection : ValueType {
    private string _value;
    private static string InboundValue;
    private static string OutboundValue;
    [CompilerGeneratedAttribute]
private static EventHubsNspAccessRuleDirection <Inbound>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsNspAccessRuleDirection <Outbound>k__BackingField;
    public static EventHubsNspAccessRuleDirection Inbound { get; }
    public static EventHubsNspAccessRuleDirection Outbound { get; }
    public EventHubsNspAccessRuleDirection(string value);
    private static EventHubsNspAccessRuleDirection();
    [CompilerGeneratedAttribute]
public static EventHubsNspAccessRuleDirection get_Inbound();
    [CompilerGeneratedAttribute]
public static EventHubsNspAccessRuleDirection get_Outbound();
    public static bool op_Equality(EventHubsNspAccessRuleDirection left, EventHubsNspAccessRuleDirection right);
    public static bool op_Inequality(EventHubsNspAccessRuleDirection left, EventHubsNspAccessRuleDirection right);
    public static EventHubsNspAccessRuleDirection op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(EventHubsNspAccessRuleDirection other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.EventHubs.Models.EventHubsNspAccessRuleProperties : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private Nullable`1<EventHubsNspAccessRuleDirection> <Direction>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <AddressPrefixes>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<SubResource> <Subscriptions>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<EventHubsNetworkSecurityPerimeter> <NetworkSecurityPerimeters>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <FullyQualifiedDomainNames>k__BackingField;
    [WirePathAttribute("direction")]
public Nullable`1<EventHubsNspAccessRuleDirection> Direction { get; }
    [WirePathAttribute("addressPrefixes")]
public IReadOnlyList`1<string> AddressPrefixes { get; }
    [WirePathAttribute("subscriptions")]
public IReadOnlyList`1<SubResource> Subscriptions { get; }
    [WirePathAttribute("networkSecurityPerimeters")]
public IReadOnlyList`1<EventHubsNetworkSecurityPerimeter> NetworkSecurityPerimeters { get; }
    [WirePathAttribute("fullyQualifiedDomainNames")]
public IReadOnlyList`1<string> FullyQualifiedDomainNames { get; }
    internal EventHubsNspAccessRuleProperties(Nullable`1<EventHubsNspAccessRuleDirection> direction, IReadOnlyList`1<string> addressPrefixes, IReadOnlyList`1<SubResource> subscriptions, IReadOnlyList`1<EventHubsNetworkSecurityPerimeter> networkSecurityPerimeters, IReadOnlyList`1<string> fullyQualifiedDomainNames, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public Nullable`1<EventHubsNspAccessRuleDirection> get_Direction();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_AddressPrefixes();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<SubResource> get_Subscriptions();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<EventHubsNetworkSecurityPerimeter> get_NetworkSecurityPerimeters();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_FullyQualifiedDomainNames();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsNspAccessRuleProperties>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNspAccessRuleProperties System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsNspAccessRuleProperties>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsNspAccessRuleProperties DeserializeEventHubsNspAccessRuleProperties(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNspAccessRuleProperties>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsNspAccessRuleProperties System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNspAccessRuleProperties>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsNspAccessRuleProperties>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.EventHubs.Models.EventHubsPrivateEndpointConnectionListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<EventHubsPrivateEndpointConnectionData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<EventHubsPrivateEndpointConnectionData> Value { get; }
    public string NextLink { get; }
    internal EventHubsPrivateEndpointConnectionListResult(IReadOnlyList`1<EventHubsPrivateEndpointConnectionData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<EventHubsPrivateEndpointConnectionData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsPrivateEndpointConnectionListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsPrivateEndpointConnectionListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsPrivateEndpointConnectionListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsPrivateEndpointConnectionListResult DeserializeEventHubsPrivateEndpointConnectionListResult(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsPrivateEndpointConnectionListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsPrivateEndpointConnectionListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsPrivateEndpointConnectionListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsPrivateEndpointConnectionListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.EventHubs.Models.EventHubsPrivateEndpointConnectionProvisioningState : ValueType {
    private string _value;
    private static string CreatingValue;
    private static string UpdatingValue;
    private static string DeletingValue;
    private static string SucceededValue;
    private static string CanceledValue;
    private static string FailedValue;
    [CompilerGeneratedAttribute]
private static EventHubsPrivateEndpointConnectionProvisioningState <Creating>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsPrivateEndpointConnectionProvisioningState <Updating>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsPrivateEndpointConnectionProvisioningState <Deleting>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsPrivateEndpointConnectionProvisioningState <Succeeded>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsPrivateEndpointConnectionProvisioningState <Canceled>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsPrivateEndpointConnectionProvisioningState <Failed>k__BackingField;
    public static EventHubsPrivateEndpointConnectionProvisioningState Creating { get; }
    public static EventHubsPrivateEndpointConnectionProvisioningState Updating { get; }
    public static EventHubsPrivateEndpointConnectionProvisioningState Deleting { get; }
    public static EventHubsPrivateEndpointConnectionProvisioningState Succeeded { get; }
    public static EventHubsPrivateEndpointConnectionProvisioningState Canceled { get; }
    public static EventHubsPrivateEndpointConnectionProvisioningState Failed { get; }
    public EventHubsPrivateEndpointConnectionProvisioningState(string value);
    private static EventHubsPrivateEndpointConnectionProvisioningState();
    [CompilerGeneratedAttribute]
public static EventHubsPrivateEndpointConnectionProvisioningState get_Creating();
    [CompilerGeneratedAttribute]
public static EventHubsPrivateEndpointConnectionProvisioningState get_Updating();
    [CompilerGeneratedAttribute]
public static EventHubsPrivateEndpointConnectionProvisioningState get_Deleting();
    [CompilerGeneratedAttribute]
public static EventHubsPrivateEndpointConnectionProvisioningState get_Succeeded();
    [CompilerGeneratedAttribute]
public static EventHubsPrivateEndpointConnectionProvisioningState get_Canceled();
    [CompilerGeneratedAttribute]
public static EventHubsPrivateEndpointConnectionProvisioningState get_Failed();
    public static bool op_Equality(EventHubsPrivateEndpointConnectionProvisioningState left, EventHubsPrivateEndpointConnectionProvisioningState right);
    public static bool op_Inequality(EventHubsPrivateEndpointConnectionProvisioningState left, EventHubsPrivateEndpointConnectionProvisioningState right);
    public static EventHubsPrivateEndpointConnectionProvisioningState op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(EventHubsPrivateEndpointConnectionProvisioningState other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.EventHubs.Models.EventHubsPrivateLinkConnectionStatus : ValueType {
    private string _value;
    private static string PendingValue;
    private static string ApprovedValue;
    private static string RejectedValue;
    private static string DisconnectedValue;
    [CompilerGeneratedAttribute]
private static EventHubsPrivateLinkConnectionStatus <Pending>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsPrivateLinkConnectionStatus <Approved>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsPrivateLinkConnectionStatus <Rejected>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsPrivateLinkConnectionStatus <Disconnected>k__BackingField;
    public static EventHubsPrivateLinkConnectionStatus Pending { get; }
    public static EventHubsPrivateLinkConnectionStatus Approved { get; }
    public static EventHubsPrivateLinkConnectionStatus Rejected { get; }
    public static EventHubsPrivateLinkConnectionStatus Disconnected { get; }
    public EventHubsPrivateLinkConnectionStatus(string value);
    private static EventHubsPrivateLinkConnectionStatus();
    [CompilerGeneratedAttribute]
public static EventHubsPrivateLinkConnectionStatus get_Pending();
    [CompilerGeneratedAttribute]
public static EventHubsPrivateLinkConnectionStatus get_Approved();
    [CompilerGeneratedAttribute]
public static EventHubsPrivateLinkConnectionStatus get_Rejected();
    [CompilerGeneratedAttribute]
public static EventHubsPrivateLinkConnectionStatus get_Disconnected();
    public static bool op_Equality(EventHubsPrivateLinkConnectionStatus left, EventHubsPrivateLinkConnectionStatus right);
    public static bool op_Inequality(EventHubsPrivateLinkConnectionStatus left, EventHubsPrivateLinkConnectionStatus right);
    public static EventHubsPrivateLinkConnectionStatus op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(EventHubsPrivateLinkConnectionStatus other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.EventHubs.Models.EventHubsPrivateLinkResourceData : ResourceData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <GroupId>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <RequiredMembers>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <RequiredZoneNames>k__BackingField;
    [WirePathAttribute("properties.groupId")]
public string GroupId { get; }
    [WirePathAttribute("properties.requiredMembers")]
public IReadOnlyList`1<string> RequiredMembers { get; }
    [WirePathAttribute("properties.requiredZoneNames")]
public IReadOnlyList`1<string> RequiredZoneNames { get; }
    internal EventHubsPrivateLinkResourceData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string groupId, IReadOnlyList`1<string> requiredMembers, IReadOnlyList`1<string> requiredZoneNames, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_GroupId();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_RequiredMembers();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_RequiredZoneNames();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsPrivateLinkResourceData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsPrivateLinkResourceData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsPrivateLinkResourceData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsPrivateLinkResourceData DeserializeEventHubsPrivateLinkResourceData(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsPrivateLinkResourceData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsPrivateLinkResourceData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsPrivateLinkResourceData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsPrivateLinkResourceData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.Models.EventHubsPrivateLinkServiceConnectionState : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private Nullable`1<EventHubsPrivateLinkConnectionStatus> <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [WirePathAttribute("status")]
public Nullable`1<EventHubsPrivateLinkConnectionStatus> Status { get; public set; }
    [WirePathAttribute("description")]
public string Description { get; public set; }
    internal EventHubsPrivateLinkServiceConnectionState(Nullable`1<EventHubsPrivateLinkConnectionStatus> status, string description, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public Nullable`1<EventHubsPrivateLinkConnectionStatus> get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(Nullable`1<EventHubsPrivateLinkConnectionStatus> value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsPrivateLinkServiceConnectionState>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsPrivateLinkServiceConnectionState System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsPrivateLinkServiceConnectionState>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsPrivateLinkServiceConnectionState DeserializeEventHubsPrivateLinkServiceConnectionState(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsPrivateLinkServiceConnectionState>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsPrivateLinkServiceConnectionState System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsPrivateLinkServiceConnectionState>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsPrivateLinkServiceConnectionState>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.Models.EventHubsProvisioningIssue : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private EventHubsProvisioningIssueProperties <Properties>k__BackingField;
    [WirePathAttribute("name")]
public string Name { get; public set; }
    [WirePathAttribute("properties")]
public EventHubsProvisioningIssueProperties Properties { get; }
    internal EventHubsProvisioningIssue(string name, EventHubsProvisioningIssueProperties properties, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public EventHubsProvisioningIssueProperties get_Properties();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsProvisioningIssue>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsProvisioningIssue System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsProvisioningIssue>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsProvisioningIssue DeserializeEventHubsProvisioningIssue(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsProvisioningIssue>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsProvisioningIssue System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsProvisioningIssue>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsProvisioningIssue>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.Models.EventHubsProvisioningIssueProperties : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <IssueType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [WirePathAttribute("issueType")]
public string IssueType { get; }
    [WirePathAttribute("description")]
public string Description { get; }
    internal EventHubsProvisioningIssueProperties(string issueType, string description, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_IssueType();
    [CompilerGeneratedAttribute]
public string get_Description();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsProvisioningIssueProperties>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsProvisioningIssueProperties System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsProvisioningIssueProperties>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsProvisioningIssueProperties DeserializeEventHubsProvisioningIssueProperties(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsProvisioningIssueProperties>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsProvisioningIssueProperties System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsProvisioningIssueProperties>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsProvisioningIssueProperties>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.EventHubs.Models.EventHubsPublicNetworkAccess : ValueType {
    private string _value;
    private static string EnabledValue;
    private static string DisabledValue;
    private static string SecuredByPerimeterValue;
    [CompilerGeneratedAttribute]
private static EventHubsPublicNetworkAccess <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsPublicNetworkAccess <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsPublicNetworkAccess <SecuredByPerimeter>k__BackingField;
    public static EventHubsPublicNetworkAccess Enabled { get; }
    public static EventHubsPublicNetworkAccess Disabled { get; }
    public static EventHubsPublicNetworkAccess SecuredByPerimeter { get; }
    public EventHubsPublicNetworkAccess(string value);
    private static EventHubsPublicNetworkAccess();
    [CompilerGeneratedAttribute]
public static EventHubsPublicNetworkAccess get_Enabled();
    [CompilerGeneratedAttribute]
public static EventHubsPublicNetworkAccess get_Disabled();
    [CompilerGeneratedAttribute]
public static EventHubsPublicNetworkAccess get_SecuredByPerimeter();
    public static bool op_Equality(EventHubsPublicNetworkAccess left, EventHubsPublicNetworkAccess right);
    public static bool op_Inequality(EventHubsPublicNetworkAccess left, EventHubsPublicNetworkAccess right);
    public static EventHubsPublicNetworkAccess op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(EventHubsPublicNetworkAccess other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.EventHubs.Models.EventHubsPublicNetworkAccessFlag : ValueType {
    private string _value;
    private static string EnabledValue;
    private static string DisabledValue;
    private static string SecuredByPerimeterValue;
    [CompilerGeneratedAttribute]
private static EventHubsPublicNetworkAccessFlag <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsPublicNetworkAccessFlag <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsPublicNetworkAccessFlag <SecuredByPerimeter>k__BackingField;
    public static EventHubsPublicNetworkAccessFlag Enabled { get; }
    public static EventHubsPublicNetworkAccessFlag Disabled { get; }
    public static EventHubsPublicNetworkAccessFlag SecuredByPerimeter { get; }
    public EventHubsPublicNetworkAccessFlag(string value);
    private static EventHubsPublicNetworkAccessFlag();
    [CompilerGeneratedAttribute]
public static EventHubsPublicNetworkAccessFlag get_Enabled();
    [CompilerGeneratedAttribute]
public static EventHubsPublicNetworkAccessFlag get_Disabled();
    [CompilerGeneratedAttribute]
public static EventHubsPublicNetworkAccessFlag get_SecuredByPerimeter();
    public static bool op_Equality(EventHubsPublicNetworkAccessFlag left, EventHubsPublicNetworkAccessFlag right);
    public static bool op_Inequality(EventHubsPublicNetworkAccessFlag left, EventHubsPublicNetworkAccessFlag right);
    public static EventHubsPublicNetworkAccessFlag op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(EventHubsPublicNetworkAccessFlag other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.EventHubs.Models.EventHubsRegenerateAccessKeyContent : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private EventHubsAccessKeyType <KeyType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [WirePathAttribute("keyType")]
public EventHubsAccessKeyType KeyType { get; }
    [WirePathAttribute("key")]
public string Key { get; public set; }
    public EventHubsRegenerateAccessKeyContent(EventHubsAccessKeyType keyType);
    internal EventHubsRegenerateAccessKeyContent(EventHubsAccessKeyType keyType, string key, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public EventHubsAccessKeyType get_KeyType();
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsRegenerateAccessKeyContent>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsRegenerateAccessKeyContent System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsRegenerateAccessKeyContent>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsRegenerateAccessKeyContent DeserializeEventHubsRegenerateAccessKeyContent(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsRegenerateAccessKeyContent>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsRegenerateAccessKeyContent System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsRegenerateAccessKeyContent>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsRegenerateAccessKeyContent>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.EventHubs.Models.EventHubsResourceAssociationAccessMode : ValueType {
    private string _value;
    private static string NoAssociationModeValue;
    private static string EnforcedModeValue;
    private static string LearningModeValue;
    private static string AuditModeValue;
    private static string UnspecifiedModeValue;
    [CompilerGeneratedAttribute]
private static EventHubsResourceAssociationAccessMode <NoAssociationMode>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsResourceAssociationAccessMode <EnforcedMode>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsResourceAssociationAccessMode <LearningMode>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsResourceAssociationAccessMode <AuditMode>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsResourceAssociationAccessMode <UnspecifiedMode>k__BackingField;
    public static EventHubsResourceAssociationAccessMode NoAssociationMode { get; }
    public static EventHubsResourceAssociationAccessMode EnforcedMode { get; }
    public static EventHubsResourceAssociationAccessMode LearningMode { get; }
    public static EventHubsResourceAssociationAccessMode AuditMode { get; }
    public static EventHubsResourceAssociationAccessMode UnspecifiedMode { get; }
    public EventHubsResourceAssociationAccessMode(string value);
    private static EventHubsResourceAssociationAccessMode();
    [CompilerGeneratedAttribute]
public static EventHubsResourceAssociationAccessMode get_NoAssociationMode();
    [CompilerGeneratedAttribute]
public static EventHubsResourceAssociationAccessMode get_EnforcedMode();
    [CompilerGeneratedAttribute]
public static EventHubsResourceAssociationAccessMode get_LearningMode();
    [CompilerGeneratedAttribute]
public static EventHubsResourceAssociationAccessMode get_AuditMode();
    [CompilerGeneratedAttribute]
public static EventHubsResourceAssociationAccessMode get_UnspecifiedMode();
    public static bool op_Equality(EventHubsResourceAssociationAccessMode left, EventHubsResourceAssociationAccessMode right);
    public static bool op_Inequality(EventHubsResourceAssociationAccessMode left, EventHubsResourceAssociationAccessMode right);
    public static EventHubsResourceAssociationAccessMode op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(EventHubsResourceAssociationAccessMode other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.EventHubs.Models.EventHubsSchemaCompatibility : ValueType {
    private string _value;
    private static string NoneValue;
    private static string BackwardValue;
    private static string ForwardValue;
    [CompilerGeneratedAttribute]
private static EventHubsSchemaCompatibility <None>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsSchemaCompatibility <Backward>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsSchemaCompatibility <Forward>k__BackingField;
    public static EventHubsSchemaCompatibility None { get; }
    public static EventHubsSchemaCompatibility Backward { get; }
    public static EventHubsSchemaCompatibility Forward { get; }
    public EventHubsSchemaCompatibility(string value);
    private static EventHubsSchemaCompatibility();
    [CompilerGeneratedAttribute]
public static EventHubsSchemaCompatibility get_None();
    [CompilerGeneratedAttribute]
public static EventHubsSchemaCompatibility get_Backward();
    [CompilerGeneratedAttribute]
public static EventHubsSchemaCompatibility get_Forward();
    public static bool op_Equality(EventHubsSchemaCompatibility left, EventHubsSchemaCompatibility right);
    public static bool op_Inequality(EventHubsSchemaCompatibility left, EventHubsSchemaCompatibility right);
    public static EventHubsSchemaCompatibility op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(EventHubsSchemaCompatibility other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.EventHubs.Models.EventHubsSchemaType : ValueType {
    private string _value;
    private static string UnknownValue;
    private static string AvroValue;
    [CompilerGeneratedAttribute]
private static EventHubsSchemaType <Unknown>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsSchemaType <Avro>k__BackingField;
    public static EventHubsSchemaType Unknown { get; }
    public static EventHubsSchemaType Avro { get; }
    public EventHubsSchemaType(string value);
    private static EventHubsSchemaType();
    [CompilerGeneratedAttribute]
public static EventHubsSchemaType get_Unknown();
    [CompilerGeneratedAttribute]
public static EventHubsSchemaType get_Avro();
    public static bool op_Equality(EventHubsSchemaType left, EventHubsSchemaType right);
    public static bool op_Inequality(EventHubsSchemaType left, EventHubsSchemaType right);
    public static EventHubsSchemaType op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(EventHubsSchemaType other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.EventHubs.Models.EventHubsSku : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private EventHubsSkuName <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<EventHubsSkuTier> <Tier>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Capacity>k__BackingField;
    [WirePathAttribute("name")]
public EventHubsSkuName Name { get; public set; }
    [WirePathAttribute("tier")]
public Nullable`1<EventHubsSkuTier> Tier { get; public set; }
    [WirePathAttribute("capacity")]
public Nullable`1<int> Capacity { get; public set; }
    public EventHubsSku(EventHubsSkuName name);
    internal EventHubsSku(EventHubsSkuName name, Nullable`1<EventHubsSkuTier> tier, Nullable`1<int> capacity, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public EventHubsSkuName get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(EventHubsSkuName value);
    [CompilerGeneratedAttribute]
public Nullable`1<EventHubsSkuTier> get_Tier();
    [CompilerGeneratedAttribute]
public void set_Tier(Nullable`1<EventHubsSkuTier> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Capacity();
    [CompilerGeneratedAttribute]
public void set_Capacity(Nullable`1<int> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsSku>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsSku System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsSku>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsSku DeserializeEventHubsSku(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsSku>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsSku System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsSku>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsSku>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.EventHubs.Models.EventHubsSkuName : ValueType {
    private string _value;
    private static string BasicValue;
    private static string StandardValue;
    private static string PremiumValue;
    [CompilerGeneratedAttribute]
private static EventHubsSkuName <Basic>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsSkuName <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsSkuName <Premium>k__BackingField;
    public static EventHubsSkuName Basic { get; }
    public static EventHubsSkuName Standard { get; }
    public static EventHubsSkuName Premium { get; }
    public EventHubsSkuName(string value);
    private static EventHubsSkuName();
    [CompilerGeneratedAttribute]
public static EventHubsSkuName get_Basic();
    [CompilerGeneratedAttribute]
public static EventHubsSkuName get_Standard();
    [CompilerGeneratedAttribute]
public static EventHubsSkuName get_Premium();
    public static bool op_Equality(EventHubsSkuName left, EventHubsSkuName right);
    public static bool op_Inequality(EventHubsSkuName left, EventHubsSkuName right);
    public static EventHubsSkuName op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(EventHubsSkuName other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.EventHubs.Models.EventHubsSkuTier : ValueType {
    private string _value;
    private static string BasicValue;
    private static string StandardValue;
    private static string PremiumValue;
    [CompilerGeneratedAttribute]
private static EventHubsSkuTier <Basic>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsSkuTier <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsSkuTier <Premium>k__BackingField;
    public static EventHubsSkuTier Basic { get; }
    public static EventHubsSkuTier Standard { get; }
    public static EventHubsSkuTier Premium { get; }
    public EventHubsSkuTier(string value);
    private static EventHubsSkuTier();
    [CompilerGeneratedAttribute]
public static EventHubsSkuTier get_Basic();
    [CompilerGeneratedAttribute]
public static EventHubsSkuTier get_Standard();
    [CompilerGeneratedAttribute]
public static EventHubsSkuTier get_Premium();
    public static bool op_Equality(EventHubsSkuTier left, EventHubsSkuTier right);
    public static bool op_Inequality(EventHubsSkuTier left, EventHubsSkuTier right);
    public static EventHubsSkuTier op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(EventHubsSkuTier other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.EventHubs.Models.EventHubsThrottlingPolicy : EventHubsApplicationGroupPolicy {
    [CompilerGeneratedAttribute]
private long <RateLimitThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private EventHubsMetricId <MetricId>k__BackingField;
    [WirePathAttribute("rateLimitThreshold")]
public long RateLimitThreshold { get; public set; }
    [WirePathAttribute("metricId")]
public EventHubsMetricId MetricId { get; public set; }
    public EventHubsThrottlingPolicy(string name, long rateLimitThreshold, EventHubsMetricId metricId);
    internal EventHubsThrottlingPolicy(string name, ApplicationGroupPolicyType applicationGroupPolicyType, IDictionary`2<string, BinaryData> serializedAdditionalRawData, long rateLimitThreshold, EventHubsMetricId metricId);
    [CompilerGeneratedAttribute]
public long get_RateLimitThreshold();
    [CompilerGeneratedAttribute]
public void set_RateLimitThreshold(long value);
    [CompilerGeneratedAttribute]
public EventHubsMetricId get_MetricId();
    [CompilerGeneratedAttribute]
public void set_MetricId(EventHubsMetricId value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsThrottlingPolicy>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsThrottlingPolicy System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsThrottlingPolicy>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static EventHubsThrottlingPolicy DeserializeEventHubsThrottlingPolicy(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsThrottlingPolicy>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsThrottlingPolicy System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsThrottlingPolicy>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsThrottlingPolicy>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.EventHubs.Models.EventHubsTlsVersion : ValueType {
    private string _value;
    private static string Tls1_0Value;
    private static string Tls1_1Value;
    private static string Tls1_2Value;
    [CompilerGeneratedAttribute]
private static EventHubsTlsVersion <Tls1_0>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsTlsVersion <Tls1_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static EventHubsTlsVersion <Tls1_2>k__BackingField;
    public static EventHubsTlsVersion Tls1_0 { get; }
    public static EventHubsTlsVersion Tls1_1 { get; }
    public static EventHubsTlsVersion Tls1_2 { get; }
    public EventHubsTlsVersion(string value);
    private static EventHubsTlsVersion();
    [CompilerGeneratedAttribute]
public static EventHubsTlsVersion get_Tls1_0();
    [CompilerGeneratedAttribute]
public static EventHubsTlsVersion get_Tls1_1();
    [CompilerGeneratedAttribute]
public static EventHubsTlsVersion get_Tls1_2();
    public static bool op_Equality(EventHubsTlsVersion left, EventHubsTlsVersion right);
    public static bool op_Inequality(EventHubsTlsVersion left, EventHubsTlsVersion right);
    public static EventHubsTlsVersion op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(EventHubsTlsVersion other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
internal class Azure.ResourceManager.EventHubs.Models.NetworkRuleSetListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<EventHubsNetworkRuleSetData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    [WirePathAttribute("value")]
public IReadOnlyList`1<EventHubsNetworkRuleSetData> Value { get; }
    [WirePathAttribute("nextLink")]
public string NextLink { get; }
    internal NetworkRuleSetListResult(IReadOnlyList`1<EventHubsNetworkRuleSetData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<EventHubsNetworkRuleSetData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.NetworkRuleSetListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override NetworkRuleSetListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.NetworkRuleSetListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static NetworkRuleSetListResult DeserializeNetworkRuleSetListResult(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.NetworkRuleSetListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override NetworkRuleSetListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.NetworkRuleSetListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.NetworkRuleSetListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.EventHubs.Models.NetworkSecurityPerimeterConfigurationList : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<EventHubsNetworkSecurityPerimeterConfiguration> <Value>k__BackingField;
    [WirePathAttribute("value")]
public IReadOnlyList`1<EventHubsNetworkSecurityPerimeterConfiguration> Value { get; }
    internal NetworkSecurityPerimeterConfigurationList(IReadOnlyList`1<EventHubsNetworkSecurityPerimeterConfiguration> value, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<EventHubsNetworkSecurityPerimeterConfiguration> get_Value();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.NetworkSecurityPerimeterConfigurationList>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override NetworkSecurityPerimeterConfigurationList System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.NetworkSecurityPerimeterConfigurationList>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static NetworkSecurityPerimeterConfigurationList DeserializeNetworkSecurityPerimeterConfigurationList(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.NetworkSecurityPerimeterConfigurationList>.Write(ModelReaderWriterOptions options);
    private sealed virtual override NetworkSecurityPerimeterConfigurationList System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.NetworkSecurityPerimeterConfigurationList>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.NetworkSecurityPerimeterConfigurationList>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.EventHubs.Models.PrivateLinkResourcesListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<EventHubsPrivateLinkResourceData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    [WirePathAttribute("value")]
public IReadOnlyList`1<EventHubsPrivateLinkResourceData> Value { get; }
    [WirePathAttribute("nextLink")]
public string NextLink { get; }
    internal PrivateLinkResourcesListResult(IReadOnlyList`1<EventHubsPrivateLinkResourceData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<EventHubsPrivateLinkResourceData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.PrivateLinkResourcesListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateLinkResourcesListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.PrivateLinkResourcesListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateLinkResourcesListResult DeserializePrivateLinkResourcesListResult(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.PrivateLinkResourcesListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateLinkResourcesListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.PrivateLinkResourcesListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.PrivateLinkResourcesListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.EventHubs.Models.RetentionDescription : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private Nullable`1<CleanupPolicyRetentionDescription> <CleanupPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <RetentionTimeInHours>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <TombstoneRetentionTimeInHours>k__BackingField;
    [WirePathAttribute("cleanupPolicy")]
public Nullable`1<CleanupPolicyRetentionDescription> CleanupPolicy { get; public set; }
    [WirePathAttribute("retentionTimeInHours")]
public Nullable`1<long> RetentionTimeInHours { get; public set; }
    [WirePathAttribute("tombstoneRetentionTimeInHours")]
public Nullable`1<int> TombstoneRetentionTimeInHours { get; public set; }
    internal RetentionDescription(Nullable`1<CleanupPolicyRetentionDescription> cleanupPolicy, Nullable`1<long> retentionTimeInHours, Nullable`1<int> tombstoneRetentionTimeInHours, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public Nullable`1<CleanupPolicyRetentionDescription> get_CleanupPolicy();
    [CompilerGeneratedAttribute]
public void set_CleanupPolicy(Nullable`1<CleanupPolicyRetentionDescription> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_RetentionTimeInHours();
    [CompilerGeneratedAttribute]
public void set_RetentionTimeInHours(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_TombstoneRetentionTimeInHours();
    [CompilerGeneratedAttribute]
public void set_TombstoneRetentionTimeInHours(Nullable`1<int> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.RetentionDescription>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override RetentionDescription System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.RetentionDescription>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static RetentionDescription DeserializeRetentionDescription(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.RetentionDescription>.Write(ModelReaderWriterOptions options);
    private sealed virtual override RetentionDescription System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.RetentionDescription>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.RetentionDescription>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.EventHubs.Models.SchemaGroupListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<EventHubsSchemaGroupData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<EventHubsSchemaGroupData> Value { get; }
    public string NextLink { get; }
    internal SchemaGroupListResult(IReadOnlyList`1<EventHubsSchemaGroupData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<EventHubsSchemaGroupData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.SchemaGroupListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override SchemaGroupListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.SchemaGroupListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static SchemaGroupListResult DeserializeSchemaGroupListResult(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.SchemaGroupListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override SchemaGroupListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.SchemaGroupListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.SchemaGroupListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.EventHubs.Models.UnknownApplicationGroupPolicy : EventHubsApplicationGroupPolicy {
    internal UnknownApplicationGroupPolicy(string name, ApplicationGroupPolicyType applicationGroupPolicyType, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsApplicationGroupPolicy>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override EventHubsApplicationGroupPolicy System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.EventHubsApplicationGroupPolicy>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static UnknownApplicationGroupPolicy DeserializeUnknownApplicationGroupPolicy(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsApplicationGroupPolicy>.Write(ModelReaderWriterOptions options);
    private sealed virtual override EventHubsApplicationGroupPolicy System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsApplicationGroupPolicy>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.EventHubsApplicationGroupPolicy>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.EventHubs.Models.UserAssignedIdentityProperties : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <UserAssignedIdentity>k__BackingField;
    [WirePathAttribute("userAssignedIdentity")]
public string UserAssignedIdentity { get; public set; }
    internal UserAssignedIdentityProperties(string userAssignedIdentity, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_UserAssignedIdentity();
    [CompilerGeneratedAttribute]
public void set_UserAssignedIdentity(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.UserAssignedIdentityProperties>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override UserAssignedIdentityProperties System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.EventHubs.Models.UserAssignedIdentityProperties>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static UserAssignedIdentityProperties DeserializeUserAssignedIdentityProperties(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.UserAssignedIdentityProperties>.Write(ModelReaderWriterOptions options);
    private sealed virtual override UserAssignedIdentityProperties System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.UserAssignedIdentityProperties>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.EventHubs.Models.UserAssignedIdentityProperties>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
[ExtensionAttribute]
internal static class Azure.ResourceManager.EventHubs.ModelSerializationExtensions : object {
    internal static ModelReaderWriterOptions WireOptions;
    private static ModelSerializationExtensions();
    [ExtensionAttribute]
public static object GetObject(JsonElement element);
    [ExtensionAttribute]
public static Byte[] GetBytesFromBase64(JsonElement element, string format);
    [ExtensionAttribute]
public static DateTimeOffset GetDateTimeOffset(JsonElement element, string format);
    [ExtensionAttribute]
public static TimeSpan GetTimeSpan(JsonElement element, string format);
    [ExtensionAttribute]
public static char GetChar(JsonElement element);
    [ExtensionAttribute]
[ConditionalAttribute("DEBUG")]
public static void ThrowNonNullablePropertyIsNull(JsonProperty property);
    [ExtensionAttribute]
public static string GetRequiredString(JsonElement element);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, DateTime value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, TimeSpan value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, char value);
    [ExtensionAttribute]
public static void WriteBase64StringValue(Utf8JsonWriter writer, Byte[] value, string format);
    [ExtensionAttribute]
public static void WriteNumberValue(Utf8JsonWriter writer, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void WriteObjectValue(Utf8JsonWriter writer, T value, ModelReaderWriterOptions options);
    [ExtensionAttribute]
public static void WriteObjectValue(Utf8JsonWriter writer, object value, ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.EventHubs.NamespacesRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public NamespacesRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal RequestUriBuilder CreateListRequestUri(string subscriptionId);
    internal HttpMessage CreateListRequest(string subscriptionId);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.NamespacesRestOperations/<ListAsync>d__7")]
public Task`1<Response`1<EHNamespaceListResult>> ListAsync(string subscriptionId, CancellationToken cancellationToken);
    public Response`1<EHNamespaceListResult> List(string subscriptionId, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListByResourceGroupRequestUri(string subscriptionId, string resourceGroupName);
    internal HttpMessage CreateListByResourceGroupRequest(string subscriptionId, string resourceGroupName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.NamespacesRestOperations/<ListByResourceGroupAsync>d__11")]
public Task`1<Response`1<EHNamespaceListResult>> ListByResourceGroupAsync(string subscriptionId, string resourceGroupName, CancellationToken cancellationToken);
    public Response`1<EHNamespaceListResult> ListByResourceGroup(string subscriptionId, string resourceGroupName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateCreateOrUpdateRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, EventHubsNamespaceData data);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string namespaceName, EventHubsNamespaceData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.NamespacesRestOperations/<CreateOrUpdateAsync>d__15")]
public Task`1<Response> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string namespaceName, EventHubsNamespaceData data, CancellationToken cancellationToken);
    public Response CreateOrUpdate(string subscriptionId, string resourceGroupName, string namespaceName, EventHubsNamespaceData data, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateDeleteRequestUri(string subscriptionId, string resourceGroupName, string namespaceName);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string namespaceName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.NamespacesRestOperations/<DeleteAsync>d__19")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateGetRequestUri(string subscriptionId, string resourceGroupName, string namespaceName);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string namespaceName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.NamespacesRestOperations/<GetAsync>d__23")]
public Task`1<Response`1<EventHubsNamespaceData>> GetAsync(string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
    public Response`1<EventHubsNamespaceData> Get(string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateUpdateRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, EventHubsNamespaceData data);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string namespaceName, EventHubsNamespaceData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.NamespacesRestOperations/<UpdateAsync>d__27")]
public Task`1<Response`1<EventHubsNamespaceData>> UpdateAsync(string subscriptionId, string resourceGroupName, string namespaceName, EventHubsNamespaceData data, CancellationToken cancellationToken);
    public Response`1<EventHubsNamespaceData> Update(string subscriptionId, string resourceGroupName, string namespaceName, EventHubsNamespaceData data, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateCreateOrUpdateNetworkRuleSetRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, EventHubsNetworkRuleSetData data);
    internal HttpMessage CreateCreateOrUpdateNetworkRuleSetRequest(string subscriptionId, string resourceGroupName, string namespaceName, EventHubsNetworkRuleSetData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.NamespacesRestOperations/<CreateOrUpdateNetworkRuleSetAsync>d__31")]
public Task`1<Response`1<EventHubsNetworkRuleSetData>> CreateOrUpdateNetworkRuleSetAsync(string subscriptionId, string resourceGroupName, string namespaceName, EventHubsNetworkRuleSetData data, CancellationToken cancellationToken);
    public Response`1<EventHubsNetworkRuleSetData> CreateOrUpdateNetworkRuleSet(string subscriptionId, string resourceGroupName, string namespaceName, EventHubsNetworkRuleSetData data, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateGetNetworkRuleSetRequestUri(string subscriptionId, string resourceGroupName, string namespaceName);
    internal HttpMessage CreateGetNetworkRuleSetRequest(string subscriptionId, string resourceGroupName, string namespaceName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.NamespacesRestOperations/<GetNetworkRuleSetAsync>d__35")]
public Task`1<Response`1<EventHubsNetworkRuleSetData>> GetNetworkRuleSetAsync(string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
    public Response`1<EventHubsNetworkRuleSetData> GetNetworkRuleSet(string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListNetworkRuleSetRequestUri(string subscriptionId, string resourceGroupName, string namespaceName);
    internal HttpMessage CreateListNetworkRuleSetRequest(string subscriptionId, string resourceGroupName, string namespaceName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.NamespacesRestOperations/<ListNetworkRuleSetAsync>d__39")]
public Task`1<Response`1<NetworkRuleSetListResult>> ListNetworkRuleSetAsync(string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
    public Response`1<NetworkRuleSetListResult> ListNetworkRuleSet(string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListAuthorizationRulesRequestUri(string subscriptionId, string resourceGroupName, string namespaceName);
    internal HttpMessage CreateListAuthorizationRulesRequest(string subscriptionId, string resourceGroupName, string namespaceName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.NamespacesRestOperations/<ListAuthorizationRulesAsync>d__43")]
public Task`1<Response`1<AuthorizationRuleListResult>> ListAuthorizationRulesAsync(string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
    public Response`1<AuthorizationRuleListResult> ListAuthorizationRules(string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateCreateOrUpdateAuthorizationRuleRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string authorizationRuleName, EventHubsAuthorizationRuleData data);
    internal HttpMessage CreateCreateOrUpdateAuthorizationRuleRequest(string subscriptionId, string resourceGroupName, string namespaceName, string authorizationRuleName, EventHubsAuthorizationRuleData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.NamespacesRestOperations/<CreateOrUpdateAuthorizationRuleAsync>d__47")]
public Task`1<Response`1<EventHubsAuthorizationRuleData>> CreateOrUpdateAuthorizationRuleAsync(string subscriptionId, string resourceGroupName, string namespaceName, string authorizationRuleName, EventHubsAuthorizationRuleData data, CancellationToken cancellationToken);
    public Response`1<EventHubsAuthorizationRuleData> CreateOrUpdateAuthorizationRule(string subscriptionId, string resourceGroupName, string namespaceName, string authorizationRuleName, EventHubsAuthorizationRuleData data, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateDeleteAuthorizationRuleRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string authorizationRuleName);
    internal HttpMessage CreateDeleteAuthorizationRuleRequest(string subscriptionId, string resourceGroupName, string namespaceName, string authorizationRuleName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.NamespacesRestOperations/<DeleteAuthorizationRuleAsync>d__51")]
public Task`1<Response> DeleteAuthorizationRuleAsync(string subscriptionId, string resourceGroupName, string namespaceName, string authorizationRuleName, CancellationToken cancellationToken);
    public Response DeleteAuthorizationRule(string subscriptionId, string resourceGroupName, string namespaceName, string authorizationRuleName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateGetAuthorizationRuleRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string authorizationRuleName);
    internal HttpMessage CreateGetAuthorizationRuleRequest(string subscriptionId, string resourceGroupName, string namespaceName, string authorizationRuleName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.NamespacesRestOperations/<GetAuthorizationRuleAsync>d__55")]
public Task`1<Response`1<EventHubsAuthorizationRuleData>> GetAuthorizationRuleAsync(string subscriptionId, string resourceGroupName, string namespaceName, string authorizationRuleName, CancellationToken cancellationToken);
    public Response`1<EventHubsAuthorizationRuleData> GetAuthorizationRule(string subscriptionId, string resourceGroupName, string namespaceName, string authorizationRuleName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListKeysRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string authorizationRuleName);
    internal HttpMessage CreateListKeysRequest(string subscriptionId, string resourceGroupName, string namespaceName, string authorizationRuleName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.NamespacesRestOperations/<ListKeysAsync>d__59")]
public Task`1<Response`1<EventHubsAccessKeys>> ListKeysAsync(string subscriptionId, string resourceGroupName, string namespaceName, string authorizationRuleName, CancellationToken cancellationToken);
    public Response`1<EventHubsAccessKeys> ListKeys(string subscriptionId, string resourceGroupName, string namespaceName, string authorizationRuleName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateRegenerateKeysRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string authorizationRuleName, EventHubsRegenerateAccessKeyContent content);
    internal HttpMessage CreateRegenerateKeysRequest(string subscriptionId, string resourceGroupName, string namespaceName, string authorizationRuleName, EventHubsRegenerateAccessKeyContent content);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.NamespacesRestOperations/<RegenerateKeysAsync>d__63")]
public Task`1<Response`1<EventHubsAccessKeys>> RegenerateKeysAsync(string subscriptionId, string resourceGroupName, string namespaceName, string authorizationRuleName, EventHubsRegenerateAccessKeyContent content, CancellationToken cancellationToken);
    public Response`1<EventHubsAccessKeys> RegenerateKeys(string subscriptionId, string resourceGroupName, string namespaceName, string authorizationRuleName, EventHubsRegenerateAccessKeyContent content, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateCheckNameAvailabilityRequestUri(string subscriptionId, EventHubsNameAvailabilityContent content);
    internal HttpMessage CreateCheckNameAvailabilityRequest(string subscriptionId, EventHubsNameAvailabilityContent content);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.NamespacesRestOperations/<CheckNameAvailabilityAsync>d__67")]
public Task`1<Response`1<EventHubsNameAvailabilityResult>> CheckNameAvailabilityAsync(string subscriptionId, EventHubsNameAvailabilityContent content, CancellationToken cancellationToken);
    public Response`1<EventHubsNameAvailabilityResult> CheckNameAvailability(string subscriptionId, EventHubsNameAvailabilityContent content, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListNextPageRequestUri(string nextLink, string subscriptionId);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.NamespacesRestOperations/<ListNextPageAsync>d__71")]
public Task`1<Response`1<EHNamespaceListResult>> ListNextPageAsync(string nextLink, string subscriptionId, CancellationToken cancellationToken);
    public Response`1<EHNamespaceListResult> ListNextPage(string nextLink, string subscriptionId, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListByResourceGroupNextPageRequestUri(string nextLink, string subscriptionId, string resourceGroupName);
    internal HttpMessage CreateListByResourceGroupNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.NamespacesRestOperations/<ListByResourceGroupNextPageAsync>d__75")]
public Task`1<Response`1<EHNamespaceListResult>> ListByResourceGroupNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, CancellationToken cancellationToken);
    public Response`1<EHNamespaceListResult> ListByResourceGroupNextPage(string nextLink, string subscriptionId, string resourceGroupName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListAuthorizationRulesNextPageRequestUri(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName);
    internal HttpMessage CreateListAuthorizationRulesNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.NamespacesRestOperations/<ListAuthorizationRulesNextPageAsync>d__79")]
public Task`1<Response`1<AuthorizationRuleListResult>> ListAuthorizationRulesNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
    public Response`1<AuthorizationRuleListResult> ListAuthorizationRulesNextPage(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.EventHubs.NetworkSecurityPerimeterConfigurationRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public NetworkSecurityPerimeterConfigurationRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal RequestUriBuilder CreateListRequestUri(string subscriptionId, string resourceGroupName, string namespaceName);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string namespaceName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.NetworkSecurityPerimeterConfigurationRestOperations/<ListAsync>d__7")]
public Task`1<Response`1<NetworkSecurityPerimeterConfigurationList>> ListAsync(string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
    public Response`1<NetworkSecurityPerimeterConfigurationList> List(string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.EventHubs.NetworkSecurityPerimeterConfigurationsRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public NetworkSecurityPerimeterConfigurationsRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal RequestUriBuilder CreateCreateOrUpdateRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string resourceAssociationName);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string namespaceName, string resourceAssociationName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.NetworkSecurityPerimeterConfigurationsRestOperations/<CreateOrUpdateAsync>d__7")]
public Task`1<Response> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string namespaceName, string resourceAssociationName, CancellationToken cancellationToken);
    public Response CreateOrUpdate(string subscriptionId, string resourceGroupName, string namespaceName, string resourceAssociationName, CancellationToken cancellationToken);
}
internal static class Azure.ResourceManager.EventHubs.Optional : object {
    public static bool IsCollectionDefined(IEnumerable`1<T> collection);
    public static bool IsCollectionDefined(IDictionary`2<TKey, TValue> collection);
    public static bool IsCollectionDefined(IReadOnlyDictionary`2<TKey, TValue> collection);
    public static bool IsDefined(Nullable`1<T> value);
    public static bool IsDefined(object value);
    public static bool IsDefined(JsonElement value);
    public static bool IsDefined(string value);
}
internal class Azure.ResourceManager.EventHubs.PrivateEndpointConnectionsRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public PrivateEndpointConnectionsRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal RequestUriBuilder CreateListRequestUri(string subscriptionId, string resourceGroupName, string namespaceName);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string namespaceName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.PrivateEndpointConnectionsRestOperations/<ListAsync>d__7")]
public Task`1<Response`1<EventHubsPrivateEndpointConnectionListResult>> ListAsync(string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
    public Response`1<EventHubsPrivateEndpointConnectionListResult> List(string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateCreateOrUpdateRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string privateEndpointConnectionName, EventHubsPrivateEndpointConnectionData data);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string namespaceName, string privateEndpointConnectionName, EventHubsPrivateEndpointConnectionData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.PrivateEndpointConnectionsRestOperations/<CreateOrUpdateAsync>d__11")]
public Task`1<Response`1<EventHubsPrivateEndpointConnectionData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string namespaceName, string privateEndpointConnectionName, EventHubsPrivateEndpointConnectionData data, CancellationToken cancellationToken);
    public Response`1<EventHubsPrivateEndpointConnectionData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string namespaceName, string privateEndpointConnectionName, EventHubsPrivateEndpointConnectionData data, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateDeleteRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string privateEndpointConnectionName);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string namespaceName, string privateEndpointConnectionName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.PrivateEndpointConnectionsRestOperations/<DeleteAsync>d__15")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string namespaceName, string privateEndpointConnectionName, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string namespaceName, string privateEndpointConnectionName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateGetRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string privateEndpointConnectionName);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string namespaceName, string privateEndpointConnectionName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.PrivateEndpointConnectionsRestOperations/<GetAsync>d__19")]
public Task`1<Response`1<EventHubsPrivateEndpointConnectionData>> GetAsync(string subscriptionId, string resourceGroupName, string namespaceName, string privateEndpointConnectionName, CancellationToken cancellationToken);
    public Response`1<EventHubsPrivateEndpointConnectionData> Get(string subscriptionId, string resourceGroupName, string namespaceName, string privateEndpointConnectionName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListNextPageRequestUri(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.PrivateEndpointConnectionsRestOperations/<ListNextPageAsync>d__23")]
public Task`1<Response`1<EventHubsPrivateEndpointConnectionListResult>> ListNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
    public Response`1<EventHubsPrivateEndpointConnectionListResult> ListNextPage(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.EventHubs.PrivateLinkResourcesRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public PrivateLinkResourcesRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal RequestUriBuilder CreateGetRequestUri(string subscriptionId, string resourceGroupName, string namespaceName);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string namespaceName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.PrivateLinkResourcesRestOperations/<GetAsync>d__7")]
public Task`1<Response`1<PrivateLinkResourcesListResult>> GetAsync(string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
    public Response`1<PrivateLinkResourcesListResult> Get(string subscriptionId, string resourceGroupName, string namespaceName, CancellationToken cancellationToken);
}
internal static class Azure.ResourceManager.EventHubs.ProviderConstants : object {
    [CompilerGeneratedAttribute]
private static string <DefaultProviderNamespace>k__BackingField;
    public static string DefaultProviderNamespace { get; }
    private static ProviderConstants();
    [CompilerGeneratedAttribute]
public static string get_DefaultProviderNamespace();
}
internal class Azure.ResourceManager.EventHubs.SchemaRegistryRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public SchemaRegistryRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal RequestUriBuilder CreateListByNamespaceRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, Nullable`1<int> skip, Nullable`1<int> top);
    internal HttpMessage CreateListByNamespaceRequest(string subscriptionId, string resourceGroupName, string namespaceName, Nullable`1<int> skip, Nullable`1<int> top);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.SchemaRegistryRestOperations/<ListByNamespaceAsync>d__7")]
public Task`1<Response`1<SchemaGroupListResult>> ListByNamespaceAsync(string subscriptionId, string resourceGroupName, string namespaceName, Nullable`1<int> skip, Nullable`1<int> top, CancellationToken cancellationToken);
    public Response`1<SchemaGroupListResult> ListByNamespace(string subscriptionId, string resourceGroupName, string namespaceName, Nullable`1<int> skip, Nullable`1<int> top, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateCreateOrUpdateRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string schemaGroupName, EventHubsSchemaGroupData data);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string namespaceName, string schemaGroupName, EventHubsSchemaGroupData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.SchemaRegistryRestOperations/<CreateOrUpdateAsync>d__11")]
public Task`1<Response`1<EventHubsSchemaGroupData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string namespaceName, string schemaGroupName, EventHubsSchemaGroupData data, CancellationToken cancellationToken);
    public Response`1<EventHubsSchemaGroupData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string namespaceName, string schemaGroupName, EventHubsSchemaGroupData data, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateDeleteRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string schemaGroupName);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string namespaceName, string schemaGroupName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.SchemaRegistryRestOperations/<DeleteAsync>d__15")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string namespaceName, string schemaGroupName, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string namespaceName, string schemaGroupName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateGetRequestUri(string subscriptionId, string resourceGroupName, string namespaceName, string schemaGroupName);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string namespaceName, string schemaGroupName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.SchemaRegistryRestOperations/<GetAsync>d__19")]
public Task`1<Response`1<EventHubsSchemaGroupData>> GetAsync(string subscriptionId, string resourceGroupName, string namespaceName, string schemaGroupName, CancellationToken cancellationToken);
    public Response`1<EventHubsSchemaGroupData> Get(string subscriptionId, string resourceGroupName, string namespaceName, string schemaGroupName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListByNamespaceNextPageRequestUri(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, Nullable`1<int> skip, Nullable`1<int> top);
    internal HttpMessage CreateListByNamespaceNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, Nullable`1<int> skip, Nullable`1<int> top);
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.SchemaRegistryRestOperations/<ListByNamespaceNextPageAsync>d__23")]
public Task`1<Response`1<SchemaGroupListResult>> ListByNamespaceNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, Nullable`1<int> skip, Nullable`1<int> top, CancellationToken cancellationToken);
    public Response`1<SchemaGroupListResult> ListByNamespaceNextPage(string nextLink, string subscriptionId, string resourceGroupName, string namespaceName, Nullable`1<int> skip, Nullable`1<int> top, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.EventHubs.Utf8JsonRequestContent : RequestContent {
    private MemoryStream _stream;
    private RequestContent _content;
    [CompilerGeneratedAttribute]
private Utf8JsonWriter <JsonWriter>k__BackingField;
    public Utf8JsonWriter JsonWriter { get; }
    [CompilerGeneratedAttribute]
public Utf8JsonWriter get_JsonWriter();
    [AsyncStateMachineAttribute("Azure.ResourceManager.EventHubs.Utf8JsonRequestContent/<WriteToAsync>d__6")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellationToken);
    public virtual void WriteTo(Stream stream, CancellationToken cancellationToken);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
[AttributeUsageAttribute("128")]
internal class Azure.ResourceManager.EventHubs.WirePathAttribute : Attribute {
    private string _wirePath;
    public WirePathAttribute(string wirePath);
    public virtual string ToString();
}
internal class Azure.ResourceManager.Models.ManagedServiceIdentityTypeV3Converter : JsonConverter`1<ManagedServiceIdentityType> {
    internal static string SystemAssignedUserAssignedV3Value;
    public virtual void Write(Utf8JsonWriter writer, ManagedServiceIdentityType model, JsonSerializerOptions options);
    public virtual ManagedServiceIdentityType Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.ResourceManager.SharedExtensions : object {
    [ExtensionAttribute]
public static string SubstringAfterProviderNamespace(ResourceIdentifier resourceId);
    [ExtensionAttribute]
public static IDictionary`2<string, string> ReplaceWith(IDictionary`2<string, string> dest, IDictionary`2<string, string> src);
    [AsyncStateMachineAttribute("Azure.ResourceManager.SharedExtensions/<FirstOrDefaultAsync>d__2`1")]
[ExtensionAttribute]
public static Task`1<TSource> FirstOrDefaultAsync(AsyncPageable`1<TSource> source, Func`2<TSource, bool> predicate, CancellationToken token);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("28108")]
internal class System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute : Attribute {
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public DynamicallyAccessedMembersAttribute(DynamicallyAccessedMemberTypes memberTypes);
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
}
[FlagsAttribute]
internal enum System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes : Enum {
    public int value__;
    public static DynamicallyAccessedMemberTypes None;
    public static DynamicallyAccessedMemberTypes PublicParameterlessConstructor;
    public static DynamicallyAccessedMemberTypes PublicConstructors;
    public static DynamicallyAccessedMemberTypes NonPublicConstructors;
    public static DynamicallyAccessedMemberTypes PublicMethods;
    public static DynamicallyAccessedMemberTypes NonPublicMethods;
    public static DynamicallyAccessedMemberTypes PublicFields;
    public static DynamicallyAccessedMemberTypes NonPublicFields;
    public static DynamicallyAccessedMemberTypes PublicNestedTypes;
    public static DynamicallyAccessedMemberTypes NonPublicNestedTypes;
    public static DynamicallyAccessedMemberTypes PublicProperties;
    public static DynamicallyAccessedMemberTypes NonPublicProperties;
    public static DynamicallyAccessedMemberTypes PublicEvents;
    public static DynamicallyAccessedMemberTypes NonPublicEvents;
    public static DynamicallyAccessedMemberTypes Interfaces;
    public static DynamicallyAccessedMemberTypes All;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("352")]
internal class System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <MemberSignature>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssemblyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Condition>k__BackingField;
    public string MemberSignature { get; }
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public Type Type { get; }
    public string TypeName { get; }
    public string AssemblyName { get; }
    public string Condition { get; public set; }
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature, Type type);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature, string typeName, string assemblyName);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(DynamicallyAccessedMemberTypes memberTypes, Type type);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(DynamicallyAccessedMemberTypes memberTypes, string typeName, string assemblyName);
    [CompilerGeneratedAttribute]
public string get_MemberSignature();
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public string get_AssemblyName();
    [CompilerGeneratedAttribute]
public string get_Condition();
    [CompilerGeneratedAttribute]
public void set_Condition(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("100")]
internal class System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    [NullableAttribute("2")]
public string Url { get; public set; }
    public RequiresDynamicCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Url(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("100")]
internal class System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    [NullableAttribute("2")]
public string Url { get; public set; }
    public RequiresUnreferencedCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Url(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
internal class System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute : Attribute {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <CheckId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Justification>k__BackingField;
    [NullableAttribute("1")]
public string Category { get; }
    [NullableAttribute("1")]
public string CheckId { get; }
    public string Scope { get; public set; }
    public string Target { get; public set; }
    public string MessageId { get; public set; }
    public string Justification { get; public set; }
    [NullableContextAttribute("1")]
public UnconditionalSuppressMessageAttribute(string category, string checkId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Category();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_CheckId();
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public string get_MessageId();
    [CompilerGeneratedAttribute]
public void set_MessageId(string value);
    [CompilerGeneratedAttribute]
public string get_Justification();
    [CompilerGeneratedAttribute]
public void set_Justification(string value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
