[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Autorest.CSharp.Core.GeneratorPageableHelpers : object {
    private static Byte[] DefaultItemPropertyName;
    private static Byte[] DefaultNextLinkPropertyName;
    private static GeneratorPageableHelpers();
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Autorest.CSharp.Core.GeneratorPageableHelpers/<CreateAsyncPageable>d__10`1")]
public static ValueTask`1<Operation`1<AsyncPageable`1<T>>> CreateAsyncPageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Operation`1<Pageable`1<T>> CreatePageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreateEnumerable(Func`2<Nullable`1<int>, Page`1<T>> firstPageFunc, Func`3<string, Nullable`1<int>, Page`1<T>> nextPageFunc, Nullable`1<int> pageSize);
    public static AsyncPageable`1<T> CreateAsyncEnumerable(Func`2<Nullable`1<int>, Task`1<Page`1<T>>> firstPageFunc, Func`3<string, Nullable`1<int>, Task`1<Page`1<T>>> nextPageFunc, Nullable`1<int> pageSize);
}
internal static class Azure.Core.AppContextSwitchHelper : object {
    [NullableContextAttribute("1")]
public static bool GetConfigValue(string appContexSwitchName, string environmentVariableName);
}
internal static class Azure.Core.Argument : object {
    public static void AssertNotNull(T value, string name);
    public static void AssertNotNull(Nullable`1<T> value, string name);
    public static void AssertNotNullOrEmpty(IEnumerable`1<T> value, string name);
    public static void AssertNotNullOrEmpty(string value, string name);
    public static void AssertNotNullOrWhiteSpace(string value, string name);
    public static void AssertNotDefault(T& value, string name);
    public static void AssertInRange(T value, T minimum, T maximum, string name);
    public static void AssertEnumDefined(Type enumType, object value, string name);
    public static T CheckNotNull(T value, string name);
    public static string CheckNotNullOrEmpty(string value, string name);
    [NullableContextAttribute("1")]
public static void AssertNull(T value, string name, string message);
}
internal class Azure.Core.ArrayBufferWriter`1 : object {
    private T[] _buffer;
    private static int DefaultInitialBufferSize;
    [CompilerGeneratedAttribute]
private int <WrittenCount>k__BackingField;
    public ReadOnlyMemory`1<T> WrittenMemory { get; }
    public ReadOnlySpan`1<T> WrittenSpan { get; }
    public int WrittenCount { get; private set; }
    public int Capacity { get; }
    public int FreeCapacity { get; }
    public ArrayBufferWriter`1(int initialCapacity);
    public ReadOnlyMemory`1<T> get_WrittenMemory();
    public ReadOnlySpan`1<T> get_WrittenSpan();
    [CompilerGeneratedAttribute]
public int get_WrittenCount();
    [CompilerGeneratedAttribute]
private void set_WrittenCount(int value);
    public int get_Capacity();
    public int get_FreeCapacity();
    public void Clear();
    public sealed virtual void Advance(int count);
    public sealed virtual Memory`1<T> GetMemory(int sizeHint);
    public sealed virtual Span`1<T> GetSpan(int sizeHint);
    private void CheckAndResizeBuffer(int sizeHint);
    private static void ThrowInvalidOperationException_AdvancedTooFar(int capacity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.AsyncLockWithValue`1 : object {
    private object _syncObj;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Queue`1<TaskCompletionSource`1<LockOrValue<T>>> _waiters;
    private bool _isLocked;
    private bool _hasValue;
    private long _index;
    [NullableAttribute("2")]
private T _value;
    public bool HasValue { get; }
    public AsyncLockWithValue`1(T value);
    public bool get_HasValue();
    [NullableContextAttribute("2")]
public bool TryGetValue(T& value);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Azure.Core.AsyncLockWithValue`1/<GetLockOrValueAsync>d__11")]
public ValueTask`1<LockOrValue<T>> GetLockOrValueAsync(bool async, CancellationToken cancellationToken);
    private void SetValue(T value, Int64& lockIndex);
    private void Reset(Int64& lockIndex);
    private void UnlockOrGetNextWaiter(Int64& lockIndex, TaskCompletionSource`1& nextWaiter);
}
[AttributeUsageAttribute("1")]
internal class Azure.Core.AzureResourceProviderNamespaceAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ResourceProviderNamespace>k__BackingField;
    public string ResourceProviderNamespace { get; }
    public AzureResourceProviderNamespaceAttribute(string resourceProviderNamespace);
    [CompilerGeneratedAttribute]
public string get_ResourceProviderNamespace();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
internal class Azure.Core.ChangeTrackingDictionary`2 : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IDictionary`2<TKey, TValue> _innerDictionary;
    public bool IsUndefined { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public TValue Item { get; public set; }
    private IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys { get; }
    private IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values { get; }
    public ICollection`1<TKey> Keys { get; }
    public ICollection`1<TValue> Values { get; }
    public ChangeTrackingDictionary`2(Optional`1<IReadOnlyDictionary`2<TKey, TValue>> optionalDictionary);
    public ChangeTrackingDictionary`2(Optional`1<IDictionary`2<TKey, TValue>> optionalDictionary);
    private ChangeTrackingDictionary`2(IDictionary`2<TKey, TValue> dictionary);
    private ChangeTrackingDictionary`2(IReadOnlyDictionary`2<TKey, TValue> dictionary);
    public bool get_IsUndefined();
    public sealed virtual IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual void Add(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int arrayIndex);
    public sealed virtual bool Remove(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual void Add(TKey key, TValue value);
    public sealed virtual bool ContainsKey(TKey key);
    public sealed virtual bool Remove(TKey key);
    public sealed virtual bool TryGetValue(TKey key, TValue& value);
    public sealed virtual TValue get_Item(TKey key);
    public sealed virtual void set_Item(TKey key, TValue value);
    private sealed virtual override IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys();
    private sealed virtual override IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values();
    public sealed virtual ICollection`1<TKey> get_Keys();
    public sealed virtual ICollection`1<TValue> get_Values();
    private IDictionary`2<TKey, TValue> EnsureDictionary();
    [IteratorStateMachineAttribute("Azure.Core.ChangeTrackingDictionary`2/<<GetEnumerator>g__GetEmptyEnumerator|8_0>d")]
[CompilerGeneratedAttribute]
internal static IEnumerator`1<KeyValuePair`2<TKey, TValue>> <GetEnumerator>g__GetEmptyEnumerator|8_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
internal class Azure.Core.ChangeTrackingList`1 : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IList`1<T> _innerList;
    public bool IsUndefined { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public T Item { get; public set; }
    public ChangeTrackingList`1(Optional`1<IList`1<T>> optionalList);
    public ChangeTrackingList`1(Optional`1<IReadOnlyList`1<T>> optionalList);
    private ChangeTrackingList`1(IEnumerable`1<T> innerList);
    private ChangeTrackingList`1(IList`1<T> innerList);
    public bool get_IsUndefined();
    public void Reset();
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual void Add(T item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(T item);
    public sealed virtual void CopyTo(T[] array, int arrayIndex);
    public sealed virtual bool Remove(T item);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual int IndexOf(T item);
    public sealed virtual void Insert(int index, T item);
    public sealed virtual void RemoveAt(int index);
    public sealed virtual T get_Item(int index);
    public sealed virtual void set_Item(int index, T value);
    private IList`1<T> EnsureList();
    [IteratorStateMachineAttribute("Azure.Core.ChangeTrackingList`1/<<GetEnumerator>g__EnumerateEmpty|9_0>d")]
[CompilerGeneratedAttribute]
internal static IEnumerator`1<T> <GetEnumerator>g__EnumerateEmpty|9_0();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
internal class Azure.Core.CodeGenClientAttribute : CodeGenTypeAttribute {
    [CompilerGeneratedAttribute]
private Type <ParentClient>k__BackingField;
    public Type ParentClient { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenClientAttribute(string originalName);
    [CompilerGeneratedAttribute]
public Type get_ParentClient();
    [CompilerGeneratedAttribute]
public void set_ParentClient(Type value);
}
[AttributeUsageAttribute("384")]
internal class Azure.Core.CodeGenMemberAttribute : CodeGenTypeAttribute {
    [NullableContextAttribute("1")]
public CodeGenMemberAttribute(string originalName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("128")]
internal class Azure.Core.CodeGenMemberSerializationAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <SerializationPath>k__BackingField;
    public String[] SerializationPath { get; }
    public CodeGenMemberSerializationAttribute(String[] serializationPath);
    [CompilerGeneratedAttribute]
public String[] get_SerializationPath();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("128")]
internal class Azure.Core.CodeGenMemberSerializationHooksAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <SerializationValueHook>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeserializationValueHook>k__BackingField;
    public string SerializationValueHook { get; public set; }
    public string DeserializationValueHook { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SerializationValueHook();
    [CompilerGeneratedAttribute]
public void set_SerializationValueHook(string value);
    [CompilerGeneratedAttribute]
public string get_DeserializationValueHook();
    [CompilerGeneratedAttribute]
public void set_DeserializationValueHook(string value);
}
[AttributeUsageAttribute("28")]
internal class Azure.Core.CodeGenModelAttribute : CodeGenTypeAttribute {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <Usage>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <Formats>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] Usage { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] Formats { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenModelAttribute(string originalName);
    [CompilerGeneratedAttribute]
public String[] get_Usage();
    [CompilerGeneratedAttribute]
public void set_Usage(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_Formats();
    [CompilerGeneratedAttribute]
public void set_Formats(String[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1")]
internal class Azure.Core.CodeGenOverrideServiceVersionsAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Versions>k__BackingField;
    public String[] Versions { get; }
    public CodeGenOverrideServiceVersionsAttribute(String[] versions);
    [CompilerGeneratedAttribute]
public String[] get_Versions();
}
[AttributeUsageAttribute("28")]
internal class Azure.Core.CodeGenSuppressAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Member>k__BackingField;
    [CompilerGeneratedAttribute]
private Type[] <Parameters>k__BackingField;
    public string Member { get; }
    public Type[] Parameters { get; }
    public CodeGenSuppressAttribute(string member, Type[] parameters);
    [CompilerGeneratedAttribute]
public string get_Member();
    [CompilerGeneratedAttribute]
public Type[] get_Parameters();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1")]
internal class Azure.Core.CodeGenSuppressTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Typename>k__BackingField;
    public string Typename { get; }
    public CodeGenSuppressTypeAttribute(string typename);
    [CompilerGeneratedAttribute]
public string get_Typename();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
internal class Azure.Core.CodeGenTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <OriginalName>k__BackingField;
    public string OriginalName { get; }
    public CodeGenTypeAttribute(string originalName);
    [CompilerGeneratedAttribute]
public string get_OriginalName();
}
internal class Azure.Core.FixedDelayWithNoJitterStrategy : DelayStrategy {
    private static TimeSpan DefaultDelay;
    private TimeSpan _delay;
    public FixedDelayWithNoJitterStrategy(Nullable`1<TimeSpan> suggestedDelay);
    private static FixedDelayWithNoJitterStrategy();
    [NullableContextAttribute("2")]
protected virtual TimeSpan GetNextDelayCore(Response response, int retryNumber);
}
internal class Azure.Core.FormUrlEncodedContent : RequestContent {
    private List`1<KeyValuePair`2<string, string>> _values;
    private Encoding Latin1;
    private Byte[] _bytes;
    public void Add(string parameter, string value);
    private void BuildIfNeeded();
    [AsyncStateMachineAttribute("Azure.Core.FormUrlEncodedContent/<WriteToAsync>d__5")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
    private Byte[] GetContentByteArray(IEnumerable`1<KeyValuePair`2<string, string>> nameValueCollection);
    private static string Encode(string data);
}
[AttributeUsageAttribute("64")]
internal class Azure.Core.ForwardsClientCallsAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <SkipChecks>k__BackingField;
    public bool SkipChecks { get; }
    public ForwardsClientCallsAttribute(bool skipChecks);
    [CompilerGeneratedAttribute]
public bool get_SkipChecks();
}
internal class Azure.Core.HttpMessageSanitizer : object {
    private static string LogAllValue;
    private bool _logAllHeaders;
    private bool _logFullQueries;
    private String[] _allowedQueryParameters;
    private string _redactedPlaceholder;
    private HashSet`1<string> _allowedHeaders;
    internal static HttpMessageSanitizer Default;
    public HttpMessageSanitizer(String[] allowedQueryParameters, String[] allowedHeaders, string redactedPlaceholder);
    private static HttpMessageSanitizer();
    public string SanitizeHeader(string name, string value);
    public string SanitizeUrl(string url);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.HttpPipelineExtensions : object {
    [AsyncStateMachineAttribute("Azure.Core.HttpPipelineExtensions/<ProcessMessageAsync>d__0")]
[ExtensionAttribute]
public static ValueTask`1<Response> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, RequestContext requestContext, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response ProcessMessage(HttpPipeline pipeline, HttpMessage message, RequestContext requestContext, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.HttpPipelineExtensions/<ProcessHeadAsBoolMessageAsync>d__2")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<bool>> ProcessHeadAsBoolMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, RequestContext requestContext);
    [ExtensionAttribute]
public static Response`1<bool> ProcessHeadAsBoolMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, RequestContext requestContext);
    [NullableContextAttribute("0")]
private static ValueTuple`2<CancellationToken, ErrorOptions> ApplyRequestContext(RequestContext requestContext);
}
internal interface Azure.Core.IOperation {
    public abstract virtual ValueTask`1<OperationState> UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("2")]
internal interface Azure.Core.IOperation`1 {
    public abstract virtual ValueTask`1<OperationState`1<T>> UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
internal interface Azure.Core.IOperationSource`1 {
    public abstract virtual T CreateResult(Response response, CancellationToken cancellationToken);
    public abstract virtual ValueTask`1<T> CreateResultAsync(Response response, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Azure.Core.IUtf8JsonSerializable {
    public abstract virtual void Write(Utf8JsonWriter writer);
}
[NullableContextAttribute("1")]
internal interface Azure.Core.IXmlSerializable {
    public abstract virtual void Write(XmlWriter writer, string nameHint);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.JsonElementExtensions : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static object GetObject(JsonElement& element);
    [ExtensionAttribute]
public static Byte[] GetBytesFromBase64(JsonElement& element, string format);
    [ExtensionAttribute]
public static DateTimeOffset GetDateTimeOffset(JsonElement& element, string format);
    [ExtensionAttribute]
public static TimeSpan GetTimeSpan(JsonElement& element, string format);
    [ExtensionAttribute]
public static char GetChar(JsonElement& element);
    [ExtensionAttribute]
[ConditionalAttribute("DEBUG")]
public static void ThrowNonNullablePropertyIsNull(JsonProperty property);
    [ExtensionAttribute]
public static string GetRequiredString(JsonElement& element);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.NextLinkOperationImplementation : object {
    private static string ApiVersionParam;
    private static String[] FailureStates;
    private static String[] SuccessStates;
    private HeaderSource _headerSource;
    private bool _originalResponseHasLocation;
    private Uri _startRequestUri;
    private OperationFinalStateVia _finalStateVia;
    private RequestMethod _requestMethod;
    private HttpPipeline _pipeline;
    [NullableAttribute("2")]
private string _apiVersion;
    [NullableAttribute("2")]
private string _lastKnownLocation;
    private string _nextRequestUri;
    private NextLinkOperationImplementation(HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, string nextRequestUri, HeaderSource headerSource, bool originalResponseHasLocation, string lastKnownLocation, OperationFinalStateVia finalStateVia, string apiVersion);
    private static NextLinkOperationImplementation();
    public static IOperation Create(HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    public static IOperation`1<T> Create(IOperationSource`1<T> operationSource, HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Azure.Core.NextLinkOperationImplementation/<UpdateStateAsync>d__15")]
public sealed virtual ValueTask`1<OperationState> UpdateStateAsync(bool async, CancellationToken cancellationToken);
    private static OperationState GetOperationStateFromFinalResponse(RequestMethod requestMethod, Response response);
    private void UpdateNextRequestUri(ResponseHeaders headers);
    internal static string AppendOrReplaceApiVersion(string uri, string apiVersion);
    [NullableContextAttribute("0")]
internal static bool TryGetApiVersion(Uri startRequestUri, ReadOnlySpan`1& apiVersion);
    [NullableContextAttribute("2")]
private string GetFinalUri(string resourceLocation);
    [AsyncStateMachineAttribute("Azure.Core.NextLinkOperationImplementation/<GetResponseAsync>d__21")]
private ValueTask`1<Response> GetResponseAsync(bool async, string uri, CancellationToken cancellationToken);
    private HttpMessage CreateRequest(string uri);
    private static bool IsFinalState(Response response, HeaderSource headerSource, Nullable`1& failureState, String& resourceLocation);
    private static bool ShouldIgnoreHeader(RequestMethod method, Response response);
    private static HeaderSource GetHeaderSource(RequestMethod requestMethod, Uri requestUri, Response response, string apiVersion, String& nextRequestUri);
}
internal enum Azure.Core.OperationFinalStateVia : Enum {
    public int value__;
    public static OperationFinalStateVia AzureAsyncOperation;
    public static OperationFinalStateVia Location;
    public static OperationFinalStateVia OriginalUri;
    public static OperationFinalStateVia OperationLocation;
    public static OperationFinalStateVia LocationOverride;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.OperationHelpers : object {
    public static T GetValue(T& value);
    [NullableContextAttribute("0")]
public static T GetValue(Nullable`1& value);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionAsync>d__2`1")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<TResult>> DefaultWaitForCompletionAsync(Operation`1<TResult> operation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionAsync>d__3`1")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<TResult>> DefaultWaitForCompletionAsync(Operation`1<TResult> operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response`1<TResult> DefaultWaitForCompletion(Operation`1<TResult> operation, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response`1<TResult> DefaultWaitForCompletion(Operation`1<TResult> operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionResponseAsync>d__6")]
[ExtensionAttribute]
public static ValueTask`1<Response> DefaultWaitForCompletionResponseAsync(Operation operation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionResponseAsync>d__7")]
[ExtensionAttribute]
public static ValueTask`1<Response> DefaultWaitForCompletionResponseAsync(Operation operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response DefaultWaitForCompletionResponse(Operation operation, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response DefaultWaitForCompletionResponse(Operation operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationInternal : OperationInternalBase {
    private OperationInternal`1<VoidValue> _internalOperation;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public OperationInternal(IOperation operation, ClientDiagnostics clientDiagnostics, Response rawResponse, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    private OperationInternal(OperationState finalState);
    public static OperationInternal Succeeded(Response rawResponse);
    public static OperationInternal Failed(Response rawResponse, RequestFailedException operationFailedException);
    public virtual Response get_RawResponse();
    public virtual bool get_HasCompleted();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal/<UpdateStatusAsync>d__9")]
protected virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationInternal`1 : OperationInternalBase {
    private IOperation`1<T> _operation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AsyncLockWithValue`1<OperationState`1<T>> _stateLock;
    private Response _rawResponse;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasValue { get; }
    public T Value { get; }
    public OperationInternal`1(IOperation`1<T> operation, ClientDiagnostics clientDiagnostics, Response rawResponse, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    private OperationInternal`1(OperationState`1<T> finalState);
    public static OperationInternal`1<T> Succeeded(Response rawResponse, T value);
    public static OperationInternal`1<T> Failed(Response rawResponse, RequestFailedException operationFailedException);
    public virtual Response get_RawResponse();
    public virtual bool get_HasCompleted();
    public bool get_HasValue();
    public T get_Value();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__15")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__16")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__19")]
private ValueTask`1<Response`1<T>> WaitForCompletionAsync(bool async, Nullable`1<TimeSpan> pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<UpdateStatusAsync>d__20")]
protected virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
    private static Response GetResponseFromState(OperationState`1<T> state);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Azure.Core.OperationInternalBase : object {
    private ClientDiagnostics _diagnostics;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IReadOnlyDictionary`2<string, string> _scopeAttributes;
    [NullableAttribute("2")]
private DelayStrategy _fallbackStrategy;
    private AsyncLockWithValue`1<Response> _responseLock;
    private string _waitForCompletionResponseScopeName;
    protected string _updateStatusScopeName;
    protected string _waitForCompletionScopeName;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    protected OperationInternalBase(Response rawResponse);
    protected OperationInternalBase(ClientDiagnostics clientDiagnostics, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    public abstract virtual Response get_RawResponse();
    public abstract virtual bool get_HasCompleted();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<UpdateStatusAsync>d__13")]
public ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public Response UpdateStatus(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__15")]
public ValueTask`1<Response> WaitForCompletionResponseAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__16")]
public ValueTask`1<Response> WaitForCompletionResponseAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__19")]
protected ValueTask`1<Response> WaitForCompletionResponseAsync(bool async, Nullable`1<TimeSpan> pollingInterval, string scopeName, CancellationToken cancellationToken);
    protected abstract virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
    protected DiagnosticScope CreateScope(string scopeName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationPoller : object {
    private DelayStrategy _delayStrategy;
    [NullableContextAttribute("2")]
public OperationPoller(DelayStrategy strategy);
    public ValueTask`1<Response> WaitForCompletionResponseAsync(Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public ValueTask`1<Response> WaitForCompletionResponseAsync(OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__6`1")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(Operation`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(Operation`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__8`1")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(OperationInternal`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(OperationInternal`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__10")]
private ValueTask`1<Response> WaitForCompletionAsync(bool async, Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__11")]
private ValueTask`1<Response> WaitForCompletionAsync(bool async, OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<Delay>d__12")]
private static ValueTask Delay(bool async, TimeSpan delay, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.OperationState : ValueType {
    [CompilerGeneratedAttribute]
private Response <RawResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasSucceeded>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private RequestFailedException <OperationFailedException>k__BackingField;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasSucceeded { get; }
    [NullableAttribute("2")]
public RequestFailedException OperationFailedException { get; }
    private OperationState(Response rawResponse, bool hasCompleted, bool hasSucceeded, RequestFailedException operationFailedException);
    [CompilerGeneratedAttribute]
public Response get_RawResponse();
    [CompilerGeneratedAttribute]
public bool get_HasCompleted();
    [CompilerGeneratedAttribute]
public bool get_HasSucceeded();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public RequestFailedException get_OperationFailedException();
    public static OperationState Success(Response rawResponse);
    public static OperationState Failure(Response rawResponse, RequestFailedException operationFailedException);
    public static OperationState Pending(Response rawResponse);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.OperationState`1 : ValueType {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Response <RawResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasSucceeded>k__BackingField;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestFailedException <OperationFailedException>k__BackingField;
    [NullableAttribute("1")]
public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasSucceeded { get; }
    public T Value { get; }
    public RequestFailedException OperationFailedException { get; }
    private OperationState`1(Response rawResponse, bool hasCompleted, bool hasSucceeded, T value, RequestFailedException operationFailedException);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Response get_RawResponse();
    [CompilerGeneratedAttribute]
public bool get_HasCompleted();
    [CompilerGeneratedAttribute]
public bool get_HasSucceeded();
    [CompilerGeneratedAttribute]
public T get_Value();
    [CompilerGeneratedAttribute]
public RequestFailedException get_OperationFailedException();
    [NullableContextAttribute("1")]
public static OperationState`1<T> Success(Response rawResponse, T value);
    [NullableContextAttribute("1")]
public static OperationState`1<T> Failure(Response rawResponse, RequestFailedException operationFailedException);
    [NullableContextAttribute("1")]
public static OperationState`1<T> Pending(Response rawResponse);
}
internal static class Azure.Core.Optional : object {
    public static bool IsCollectionDefined(IEnumerable`1<T> collection);
    public static bool IsCollectionDefined(IReadOnlyDictionary`2<TKey, TValue> collection);
    public static bool IsCollectionDefined(IDictionary`2<TKey, TValue> collection);
    public static bool IsDefined(Nullable`1<T> value);
    public static bool IsDefined(object value);
    public static bool IsDefined(string value);
    public static bool IsDefined(JsonElement value);
    public static IReadOnlyDictionary`2<TKey, TValue> ToDictionary(Optional`1<IReadOnlyDictionary`2<TKey, TValue>> optional);
    public static IDictionary`2<TKey, TValue> ToDictionary(Optional`1<IDictionary`2<TKey, TValue>> optional);
    public static IReadOnlyList`1<T> ToList(Optional`1<IReadOnlyList`1<T>> optional);
    public static IList`1<T> ToList(Optional`1<IList`1<T>> optional);
    public static Nullable`1<T> ToNullable(Optional`1<T> optional);
    public static Nullable`1<T> ToNullable(Optional`1<Nullable`1<T>> optional);
}
[IsReadOnlyAttribute]
internal class Azure.Core.Optional`1 : ValueType {
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasValue>k__BackingField;
    public T Value { get; }
    public bool HasValue { get; }
    public Optional`1(T value);
    [CompilerGeneratedAttribute]
public T get_Value();
    [CompilerGeneratedAttribute]
public bool get_HasValue();
    public static Optional`1<T> op_Implicit(T value);
    public static T op_Implicit(Optional`1<T> optional);
}
internal static class Azure.Core.Page : object {
    [NullableContextAttribute("1")]
public static Page`1<T> FromValues(IEnumerable`1<T> values, string continuationToken, Response response);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.PageableHelpers : object {
    private static Byte[] DefaultItemPropertyName;
    private static Byte[] DefaultNextLinkPropertyName;
    private static PageableHelpers();
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.PageableHelpers/<CreateAsyncPageable>d__10`1")]
public static ValueTask`1<Operation`1<AsyncPageable`1<T>>> CreateAsyncPageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Operation`1<Pageable`1<T>> CreatePageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreateEnumerable(Func`2<Nullable`1<int>, Page`1<T>> firstPageFunc, Func`3<string, Nullable`1<int>, Page`1<T>> nextPageFunc, Nullable`1<int> pageSize);
    public static AsyncPageable`1<T> CreateAsyncEnumerable(Func`2<Nullable`1<int>, Task`1<Page`1<T>>> firstPageFunc, Func`3<string, Nullable`1<int>, Task`1<Page`1<T>>> nextPageFunc, Nullable`1<int> pageSize);
    private static ValueTuple`2<List`1<T>, string> ParseResponseForBinaryData(Response response, Byte[] itemPropertyName, Byte[] nextLinkPropertyName);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static object <ParseResponseForBinaryData>g__ReadBinaryData|19_0(Utf8JsonReader& r, ReadOnlyMemory`1& content);
}
internal static class Azure.Core.Pipeline.ActivityExtensions : object {
    [CompilerGeneratedAttribute]
private static bool <SupportsActivitySource>k__BackingField;
    public static bool SupportsActivitySource { get; private set; }
    private static ActivityExtensions();
    [CompilerGeneratedAttribute]
public static bool get_SupportsActivitySource();
    [CompilerGeneratedAttribute]
private static void set_SupportsActivitySource(bool value);
    public static void ResetFeatureSwitch();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.ClientDiagnostics : DiagnosticScopeFactory {
    public ClientDiagnostics(ClientOptions options, Nullable`1<bool> suppressNestedClientActivities);
    public ClientDiagnostics(string optionsNamespace, string providerNamespace, DiagnosticsOptions diagnosticsOptions, Nullable`1<bool> suppressNestedClientActivities);
    internal static HttpMessageSanitizer CreateMessageSanitizer(DiagnosticsOptions diagnostics);
    internal static string GetResourceProviderNamespace(Assembly assembly);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.Pipeline.DiagnosticScope : ValueType {
    private static string AzureSdkScopeLabel;
    internal static string OpenTelemetrySchemaAttribute;
    internal static string OpenTelemetrySchemaVersion;
    private static object AzureSdkScopeValue;
    [NullableAttribute("2")]
private ActivityAdapter _activityAdapter;
    private bool _suppressNestedClientActivities;
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    public bool IsEnabled { get; }
    [RequiresUnreferencedCodeAttribute("The diagnosticSourceArgs are used in a call to DiagnosticSource.Write, all necessary properties need to be preserved on the type being passed in using DynamicDependency attributes.")]
internal DiagnosticScope(string scopeName, DiagnosticListener source, object diagnosticSourceArgs, ActivitySource activitySource, ActivityKind kind, bool suppressNestedClientActivities);
    private static DiagnosticScope();
    [CompilerGeneratedAttribute]
public bool get_IsEnabled();
    public void AddAttribute(string name, string value);
    public void AddIntegerAttribute(string name, int value);
    public void AddAttribute(string name, T value, Func`2<T, string> format);
    public void AddLink(string traceparent, string tracestate, IDictionary`2<string, string> attributes);
    public void Start();
    public void SetDisplayName(string displayName);
    public void SetStartTime(DateTime dateTime);
    public void SetTraceContext(string traceparent, string tracestate);
    public sealed virtual void Dispose();
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void Failed(Exception exception);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void Failed(string errorCode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.DiagnosticScopeFactory : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Dictionary`2<string, DiagnosticListener> _listeners;
    [NullableAttribute("2")]
private string _resourceProviderNamespace;
    [NullableAttribute("2")]
private DiagnosticListener _source;
    private bool _suppressNestedClientActivities;
    private bool _isStable;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ConcurrentDictionary`2<string, ActivitySource> ActivitySources;
    [CompilerGeneratedAttribute]
private bool <IsActivityEnabled>k__BackingField;
    public bool IsActivityEnabled { get; }
    public DiagnosticScopeFactory(string clientNamespace, string resourceProviderNamespace, bool isActivityEnabled, bool suppressNestedClientActivities, bool isStable);
    private static DiagnosticScopeFactory();
    [CompilerGeneratedAttribute]
public bool get_IsActivityEnabled();
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
public DiagnosticScope CreateScope(string name, ActivityKind kind);
    private ActivitySource GetActivitySource(string ns, string name);
}
[ExtensionAttribute]
internal static class Azure.Core.Pipeline.TaskExtensions : object {
    [ExtensionAttribute]
public static WithCancellationTaskAwaitable AwaitWithCancellation(Task task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static WithCancellationTaskAwaitable`1<T> AwaitWithCancellation(Task`1<T> task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static WithCancellationValueTaskAwaitable`1<T> AwaitWithCancellation(ValueTask`1<T> task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static T EnsureCompleted(Task`1<T> task);
    [ExtensionAttribute]
public static void EnsureCompleted(Task task);
    [ExtensionAttribute]
public static T EnsureCompleted(ValueTask`1<T> task);
    [ExtensionAttribute]
public static void EnsureCompleted(ValueTask task);
    [ExtensionAttribute]
public static Enumerable`1<T> EnsureSyncEnumerable(IAsyncEnumerable`1<T> asyncEnumerable);
    [ExtensionAttribute]
public static ConfiguredValueTaskAwaitable`1<T> EnsureCompleted(ConfiguredValueTaskAwaitable`1<T> awaitable, bool async);
    [ExtensionAttribute]
public static ConfiguredValueTaskAwaitable EnsureCompleted(ConfiguredValueTaskAwaitable awaitable, bool async);
    [ConditionalAttribute("DEBUG")]
private static void VerifyTaskCompleted(bool isCompleted);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Core.ProtocolOperation`1 : Operation`1<T> {
    private Func`2<Response, T> _resultSelector;
    private OperationInternal`1<T> _operation;
    private IOperation _nextLinkOperation;
    public string Id { get; }
    public T Value { get; }
    public bool HasCompleted { get; }
    public bool HasValue { get; }
    internal ProtocolOperation`1(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Request request, Response response, OperationFinalStateVia finalStateVia, string scopeName, Func`2<Response, T> resultSelector);
    public virtual string get_Id();
    public virtual T get_Value();
    public virtual bool get_HasCompleted();
    public virtual bool get_HasValue();
    public virtual Response GetRawResponse();
    public virtual Response UpdateStatus(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.ProtocolOperation`1/<Azure-Core-IOperation<T>-UpdateStateAsync>d__17")]
private sealed virtual override ValueTask`1<OperationState`1<T>> Azure.Core.IOperation<T>.UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.ProtocolOperationHelpers : object {
    public static Operation`1<TTo> Convert(Operation`1<TFrom> operation, Func`2<Response, TTo> convertFunc, ClientDiagnostics diagnostics, string scopeName);
    public static ValueTask`1<Operation`1<VoidValue>> ProcessMessageWithoutResponseValueAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static Operation`1<VoidValue> ProcessMessageWithoutResponseValue(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static ValueTask`1<Operation`1<BinaryData>> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static Operation`1<BinaryData> ProcessMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    [AsyncStateMachineAttribute("Azure.Core.ProtocolOperationHelpers/<ProcessMessageAsync>d__5`1")]
public static ValueTask`1<Operation`1<T>> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil, Func`2<Response, T> resultSelector);
    public static Operation`1<T> ProcessMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil, Func`2<Response, T> resultSelector);
}
internal class Azure.Core.RawRequestUriBuilder : RequestUriBuilder {
    [NullableAttribute("1")]
private static string SchemeSeparator;
    private static char HostSeparator;
    private static char PortSeparator;
    [NullableAttribute("1")]
private static Char[] HostOrPort;
    private static char QueryBeginSeparator;
    private static char QueryContinueSeparator;
    private static char QueryValueSeparator;
    private Nullable`1<RawWritingPosition> _position;
    private static RawRequestUriBuilder();
    private static void GetQueryParts(ReadOnlySpan`1<char> queryUnparsed, ReadOnlySpan`1& name, ReadOnlySpan`1& value);
    [NullableContextAttribute("1")]
public void AppendRaw(string value, bool escape);
    private void AppendRaw(ReadOnlySpan`1<char> value, bool escape);
    [NullableContextAttribute("1")]
public void AppendRawNextLink(string nextLink, bool escape);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.RequestContentHelper : object {
    public static RequestContent FromEnumerable(IEnumerable`1<T> enumerable);
    public static RequestContent FromEnumerable(IEnumerable`1<BinaryData> enumerable);
    public static RequestContent FromDictionary(IDictionary`2<string, T> dictionary);
    public static RequestContent FromDictionary(IDictionary`2<string, BinaryData> dictionary);
    public static RequestContent FromObject(object value);
    public static RequestContent FromObject(BinaryData value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.RequestHeaderExtensions : object {
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, bool value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, float value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, double value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, int value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, long value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, TimeSpan value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, Guid value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, Byte[] value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, BinaryData value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string prefix, IDictionary`2<string, string> headersToAdd);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, ETag value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, MatchConditions conditions);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, RequestConditions conditions, string format);
    [ExtensionAttribute]
public static void AddDelimited(RequestHeaders headers, string name, IEnumerable`1<T> value, string delimiter);
    [ExtensionAttribute]
public static void AddDelimited(RequestHeaders headers, string name, IEnumerable`1<T> value, string delimiter, string format);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.RequestUriBuilderExtensions : object {
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, bool value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, float value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, double value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, int value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, Byte[] value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, IEnumerable`1<string> value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, DateTimeOffset value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, TimeSpan value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, Guid value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, long value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, bool value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, float value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, DateTimeOffset value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, TimeSpan value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, double value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, decimal value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, int value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, long value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, TimeSpan value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, Byte[] value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, Guid value, bool escape);
    [ExtensionAttribute]
public static void AppendQueryDelimited(RequestUriBuilder builder, string name, IEnumerable`1<T> value, string delimiter, bool escape);
    [ExtensionAttribute]
public static void AppendQueryDelimited(RequestUriBuilder builder, string name, IEnumerable`1<T> value, string delimiter, string format, bool escape);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.ResponseHeadersExtensions : object {
    private static String[] KnownFormats;
    private static ResponseHeadersExtensions();
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Byte[]& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, T& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string prefix, IDictionary`2& value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.ResponseWithHeaders : object {
    public static ResponseWithHeaders`2<T, THeaders> FromValue(T value, THeaders headers, Response rawResponse);
    public static ResponseWithHeaders`1<THeaders> FromValue(THeaders headers, Response rawResponse);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.ResponseWithHeaders`1 : object {
    private Response _rawResponse;
    [CompilerGeneratedAttribute]
private THeaders <Headers>k__BackingField;
    public THeaders Headers { get; }
    public ResponseWithHeaders`1(THeaders headers, Response rawResponse);
    public Response GetRawResponse();
    [CompilerGeneratedAttribute]
public THeaders get_Headers();
    public static Response op_Implicit(ResponseWithHeaders`1<THeaders> self);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Core.ResponseWithHeaders`2 : Response`1<T> {
    private Response _rawResponse;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private THeaders <Headers>k__BackingField;
    public T Value { get; }
    public THeaders Headers { get; }
    public ResponseWithHeaders`2(T value, THeaders headers, Response rawResponse);
    public virtual Response GetRawResponse();
    [CompilerGeneratedAttribute]
public virtual T get_Value();
    [CompilerGeneratedAttribute]
public THeaders get_Headers();
    public static Response op_Implicit(ResponseWithHeaders`2<T, THeaders> self);
}
internal class Azure.Core.SequentialDelayStrategy : DelayStrategy {
    [NullableAttribute("1")]
private static TimeSpan[] _pollingSequence;
    private static TimeSpan _maxDelay;
    private static SequentialDelayStrategy();
    [NullableContextAttribute("2")]
protected virtual TimeSpan GetNextDelayCore(Response response, int retryNumber);
}
internal class Azure.Core.StringRequestContent : RequestContent {
    private Byte[] _bytes;
    public StringRequestContent(string value);
    [AsyncStateMachineAttribute("Azure.Core.StringRequestContent/<WriteToAsync>d__2")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.TypeFormatters : object {
    private static string RoundtripZFormat;
    [CompilerGeneratedAttribute]
private static string <DefaultNumberFormat>k__BackingField;
    public static string DefaultNumberFormat { get; }
    private static TypeFormatters();
    [CompilerGeneratedAttribute]
public static string get_DefaultNumberFormat();
    public static string ToString(bool value);
    public static string ToString(DateTime value, string format);
    public static string ToString(DateTimeOffset value, string format);
    public static string ToString(TimeSpan value, string format);
    public static string ToString(Byte[] value, string format);
    public static string ToBase64UrlString(Byte[] value);
    public static Byte[] FromBase64UrlString(string value);
    private static int GetNumBase64PaddingCharsToAddForDecode(int inputLength);
    public static DateTimeOffset ParseDateTimeOffset(string value, string format);
    public static TimeSpan ParseTimeSpan(string value, string format);
    [NullableContextAttribute("2")]
public static string ConvertToString(object value, string format);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Utf8JsonRequestContent : RequestContent {
    private MemoryStream _stream;
    private RequestContent _content;
    [CompilerGeneratedAttribute]
private Utf8JsonWriter <JsonWriter>k__BackingField;
    public Utf8JsonWriter JsonWriter { get; }
    [CompilerGeneratedAttribute]
public Utf8JsonWriter get_JsonWriter();
    [AsyncStateMachineAttribute("Azure.Core.Utf8JsonRequestContent/<WriteToAsync>d__6")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.Utf8JsonWriterExtensions : object {
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, DateTime value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, TimeSpan value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, char value);
    [ExtensionAttribute]
public static void WriteNonEmptyArray(Utf8JsonWriter writer, string name, IReadOnlyList`1<string> values);
    [ExtensionAttribute]
public static void WriteBase64StringValue(Utf8JsonWriter writer, Byte[] value, string format);
    [ExtensionAttribute]
public static void WriteNumberValue(Utf8JsonWriter writer, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void WriteObjectValue(Utf8JsonWriter writer, object value);
}
[IsReadOnlyAttribute]
internal class Azure.Core.VoidValue : ValueType {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.XElementExtensions : object {
    [ExtensionAttribute]
public static Byte[] GetBytesFromBase64Value(XElement element, string format);
    [ExtensionAttribute]
public static DateTimeOffset GetDateTimeOffsetValue(XElement element, string format);
    [ExtensionAttribute]
public static TimeSpan GetTimeSpanValue(XElement element, string format);
    [ExtensionAttribute]
public static object GetObjectValue(XElement element, string format);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.XmlWriterContent : RequestContent {
    private MemoryStream _stream;
    private RequestContent _content;
    [CompilerGeneratedAttribute]
private XmlWriter <XmlWriter>k__BackingField;
    public XmlWriter XmlWriter { get; }
    [CompilerGeneratedAttribute]
public XmlWriter get_XmlWriter();
    [AsyncStateMachineAttribute("Azure.Core.XmlWriterContent/<WriteToAsync>d__6")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.XmlWriterExtensions : object {
    [ExtensionAttribute]
public static void WriteObjectValue(XmlWriter writer, object value, string nameHint);
    [ExtensionAttribute]
public static void WriteValue(XmlWriter writer, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void WriteValue(XmlWriter writer, TimeSpan value, string format);
    [ExtensionAttribute]
public static void WriteValue(XmlWriter writer, Byte[] value, string format);
}
internal class Azure.NoValueResponse`1 : NullableResponse`1<T> {
    private Response _response;
    public bool HasValue { get; }
    public T Value { get; }
    public NoValueResponse`1(Response response);
    public virtual bool get_HasValue();
    public virtual T get_Value();
    public virtual Response GetRawResponse();
    public virtual string ToString();
    internal string GetStatusMessage();
}
internal class Azure.ResourceManager.Media.AccountFiltersRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public AccountFiltersRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string accountName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.AccountFiltersRestOperations/<ListAsync>d__6")]
public Task`1<Response`1<MediaServicesAccountFilterListResult>> ListAsync(string subscriptionId, string resourceGroupName, string accountName, CancellationToken cancellationToken);
    public Response`1<MediaServicesAccountFilterListResult> List(string subscriptionId, string resourceGroupName, string accountName, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string accountName, string filterName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.AccountFiltersRestOperations/<GetAsync>d__9")]
public Task`1<Response`1<MediaServicesAccountFilterData>> GetAsync(string subscriptionId, string resourceGroupName, string accountName, string filterName, CancellationToken cancellationToken);
    public Response`1<MediaServicesAccountFilterData> Get(string subscriptionId, string resourceGroupName, string accountName, string filterName, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string accountName, string filterName, MediaServicesAccountFilterData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.AccountFiltersRestOperations/<CreateOrUpdateAsync>d__12")]
public Task`1<Response`1<MediaServicesAccountFilterData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string accountName, string filterName, MediaServicesAccountFilterData data, CancellationToken cancellationToken);
    public Response`1<MediaServicesAccountFilterData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string accountName, string filterName, MediaServicesAccountFilterData data, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string accountName, string filterName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.AccountFiltersRestOperations/<DeleteAsync>d__15")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string accountName, string filterName, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string accountName, string filterName, CancellationToken cancellationToken);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string accountName, string filterName, MediaServicesAccountFilterData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.AccountFiltersRestOperations/<UpdateAsync>d__18")]
public Task`1<Response`1<MediaServicesAccountFilterData>> UpdateAsync(string subscriptionId, string resourceGroupName, string accountName, string filterName, MediaServicesAccountFilterData data, CancellationToken cancellationToken);
    public Response`1<MediaServicesAccountFilterData> Update(string subscriptionId, string resourceGroupName, string accountName, string filterName, MediaServicesAccountFilterData data, CancellationToken cancellationToken);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string accountName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.AccountFiltersRestOperations/<ListNextPageAsync>d__21")]
public Task`1<Response`1<MediaServicesAccountFilterListResult>> ListNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string accountName, CancellationToken cancellationToken);
    public Response`1<MediaServicesAccountFilterListResult> ListNextPage(string nextLink, string subscriptionId, string resourceGroupName, string accountName, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Media.AssetFiltersRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public AssetFiltersRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string accountName, string assetName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.AssetFiltersRestOperations/<ListAsync>d__6")]
public Task`1<Response`1<MediaAssetFilterListResult>> ListAsync(string subscriptionId, string resourceGroupName, string accountName, string assetName, CancellationToken cancellationToken);
    public Response`1<MediaAssetFilterListResult> List(string subscriptionId, string resourceGroupName, string accountName, string assetName, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string accountName, string assetName, string filterName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.AssetFiltersRestOperations/<GetAsync>d__9")]
public Task`1<Response`1<MediaAssetFilterData>> GetAsync(string subscriptionId, string resourceGroupName, string accountName, string assetName, string filterName, CancellationToken cancellationToken);
    public Response`1<MediaAssetFilterData> Get(string subscriptionId, string resourceGroupName, string accountName, string assetName, string filterName, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string accountName, string assetName, string filterName, MediaAssetFilterData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.AssetFiltersRestOperations/<CreateOrUpdateAsync>d__12")]
public Task`1<Response`1<MediaAssetFilterData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string accountName, string assetName, string filterName, MediaAssetFilterData data, CancellationToken cancellationToken);
    public Response`1<MediaAssetFilterData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string accountName, string assetName, string filterName, MediaAssetFilterData data, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string accountName, string assetName, string filterName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.AssetFiltersRestOperations/<DeleteAsync>d__15")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string accountName, string assetName, string filterName, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string accountName, string assetName, string filterName, CancellationToken cancellationToken);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string accountName, string assetName, string filterName, MediaAssetFilterData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.AssetFiltersRestOperations/<UpdateAsync>d__18")]
public Task`1<Response`1<MediaAssetFilterData>> UpdateAsync(string subscriptionId, string resourceGroupName, string accountName, string assetName, string filterName, MediaAssetFilterData data, CancellationToken cancellationToken);
    public Response`1<MediaAssetFilterData> Update(string subscriptionId, string resourceGroupName, string accountName, string assetName, string filterName, MediaAssetFilterData data, CancellationToken cancellationToken);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string accountName, string assetName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.AssetFiltersRestOperations/<ListNextPageAsync>d__21")]
public Task`1<Response`1<MediaAssetFilterListResult>> ListNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string accountName, string assetName, CancellationToken cancellationToken);
    public Response`1<MediaAssetFilterListResult> ListNextPage(string nextLink, string subscriptionId, string resourceGroupName, string accountName, string assetName, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Media.AssetsRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public AssetsRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string accountName, string filter, Nullable`1<int> top, string orderby);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.AssetsRestOperations/<ListAsync>d__6")]
public Task`1<Response`1<MediaAssetListResult>> ListAsync(string subscriptionId, string resourceGroupName, string accountName, string filter, Nullable`1<int> top, string orderby, CancellationToken cancellationToken);
    public Response`1<MediaAssetListResult> List(string subscriptionId, string resourceGroupName, string accountName, string filter, Nullable`1<int> top, string orderby, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string accountName, string assetName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.AssetsRestOperations/<GetAsync>d__9")]
public Task`1<Response`1<MediaAssetData>> GetAsync(string subscriptionId, string resourceGroupName, string accountName, string assetName, CancellationToken cancellationToken);
    public Response`1<MediaAssetData> Get(string subscriptionId, string resourceGroupName, string accountName, string assetName, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string accountName, string assetName, MediaAssetData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.AssetsRestOperations/<CreateOrUpdateAsync>d__12")]
public Task`1<Response`1<MediaAssetData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string accountName, string assetName, MediaAssetData data, CancellationToken cancellationToken);
    public Response`1<MediaAssetData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string accountName, string assetName, MediaAssetData data, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string accountName, string assetName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.AssetsRestOperations/<DeleteAsync>d__15")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string accountName, string assetName, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string accountName, string assetName, CancellationToken cancellationToken);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string accountName, string assetName, MediaAssetData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.AssetsRestOperations/<UpdateAsync>d__18")]
public Task`1<Response`1<MediaAssetData>> UpdateAsync(string subscriptionId, string resourceGroupName, string accountName, string assetName, MediaAssetData data, CancellationToken cancellationToken);
    public Response`1<MediaAssetData> Update(string subscriptionId, string resourceGroupName, string accountName, string assetName, MediaAssetData data, CancellationToken cancellationToken);
    internal HttpMessage CreateListContainerSasRequest(string subscriptionId, string resourceGroupName, string accountName, string assetName, MediaAssetStorageContainerSasContent content);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.AssetsRestOperations/<ListContainerSasAsync>d__21")]
public Task`1<Response`1<AssetContainerSas>> ListContainerSasAsync(string subscriptionId, string resourceGroupName, string accountName, string assetName, MediaAssetStorageContainerSasContent content, CancellationToken cancellationToken);
    public Response`1<AssetContainerSas> ListContainerSas(string subscriptionId, string resourceGroupName, string accountName, string assetName, MediaAssetStorageContainerSasContent content, CancellationToken cancellationToken);
    internal HttpMessage CreateGetEncryptionKeyRequest(string subscriptionId, string resourceGroupName, string accountName, string assetName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.AssetsRestOperations/<GetEncryptionKeyAsync>d__24")]
public Task`1<Response`1<StorageEncryptedAssetDecryptionInfo>> GetEncryptionKeyAsync(string subscriptionId, string resourceGroupName, string accountName, string assetName, CancellationToken cancellationToken);
    public Response`1<StorageEncryptedAssetDecryptionInfo> GetEncryptionKey(string subscriptionId, string resourceGroupName, string accountName, string assetName, CancellationToken cancellationToken);
    internal HttpMessage CreateListStreamingLocatorsRequest(string subscriptionId, string resourceGroupName, string accountName, string assetName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.AssetsRestOperations/<ListStreamingLocatorsAsync>d__27")]
public Task`1<Response`1<ListStreamingLocatorsResponse>> ListStreamingLocatorsAsync(string subscriptionId, string resourceGroupName, string accountName, string assetName, CancellationToken cancellationToken);
    public Response`1<ListStreamingLocatorsResponse> ListStreamingLocators(string subscriptionId, string resourceGroupName, string accountName, string assetName, CancellationToken cancellationToken);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string accountName, string filter, Nullable`1<int> top, string orderby);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.AssetsRestOperations/<ListNextPageAsync>d__30")]
public Task`1<Response`1<MediaAssetListResult>> ListNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string accountName, string filter, Nullable`1<int> top, string orderby, CancellationToken cancellationToken);
    public Response`1<MediaAssetListResult> ListNextPage(string nextLink, string subscriptionId, string resourceGroupName, string accountName, string filter, Nullable`1<int> top, string orderby, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Media.ContentKeyPoliciesRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public ContentKeyPoliciesRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string accountName, string filter, Nullable`1<int> top, string orderby);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.ContentKeyPoliciesRestOperations/<ListAsync>d__6")]
public Task`1<Response`1<ContentKeyPolicyListResult>> ListAsync(string subscriptionId, string resourceGroupName, string accountName, string filter, Nullable`1<int> top, string orderby, CancellationToken cancellationToken);
    public Response`1<ContentKeyPolicyListResult> List(string subscriptionId, string resourceGroupName, string accountName, string filter, Nullable`1<int> top, string orderby, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string accountName, string contentKeyPolicyName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.ContentKeyPoliciesRestOperations/<GetAsync>d__9")]
public Task`1<Response`1<ContentKeyPolicyData>> GetAsync(string subscriptionId, string resourceGroupName, string accountName, string contentKeyPolicyName, CancellationToken cancellationToken);
    public Response`1<ContentKeyPolicyData> Get(string subscriptionId, string resourceGroupName, string accountName, string contentKeyPolicyName, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string accountName, string contentKeyPolicyName, ContentKeyPolicyData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.ContentKeyPoliciesRestOperations/<CreateOrUpdateAsync>d__12")]
public Task`1<Response`1<ContentKeyPolicyData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string accountName, string contentKeyPolicyName, ContentKeyPolicyData data, CancellationToken cancellationToken);
    public Response`1<ContentKeyPolicyData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string accountName, string contentKeyPolicyName, ContentKeyPolicyData data, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string accountName, string contentKeyPolicyName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.ContentKeyPoliciesRestOperations/<DeleteAsync>d__15")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string accountName, string contentKeyPolicyName, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string accountName, string contentKeyPolicyName, CancellationToken cancellationToken);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string accountName, string contentKeyPolicyName, ContentKeyPolicyData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.ContentKeyPoliciesRestOperations/<UpdateAsync>d__18")]
public Task`1<Response`1<ContentKeyPolicyData>> UpdateAsync(string subscriptionId, string resourceGroupName, string accountName, string contentKeyPolicyName, ContentKeyPolicyData data, CancellationToken cancellationToken);
    public Response`1<ContentKeyPolicyData> Update(string subscriptionId, string resourceGroupName, string accountName, string contentKeyPolicyName, ContentKeyPolicyData data, CancellationToken cancellationToken);
    internal HttpMessage CreateGetPolicyPropertiesWithSecretsRequest(string subscriptionId, string resourceGroupName, string accountName, string contentKeyPolicyName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.ContentKeyPoliciesRestOperations/<GetPolicyPropertiesWithSecretsAsync>d__21")]
public Task`1<Response`1<ContentKeyPolicyProperties>> GetPolicyPropertiesWithSecretsAsync(string subscriptionId, string resourceGroupName, string accountName, string contentKeyPolicyName, CancellationToken cancellationToken);
    public Response`1<ContentKeyPolicyProperties> GetPolicyPropertiesWithSecrets(string subscriptionId, string resourceGroupName, string accountName, string contentKeyPolicyName, CancellationToken cancellationToken);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string accountName, string filter, Nullable`1<int> top, string orderby);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.ContentKeyPoliciesRestOperations/<ListNextPageAsync>d__24")]
public Task`1<Response`1<ContentKeyPolicyListResult>> ListNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string accountName, string filter, Nullable`1<int> top, string orderby, CancellationToken cancellationToken);
    public Response`1<ContentKeyPolicyListResult> ListNextPage(string nextLink, string subscriptionId, string resourceGroupName, string accountName, string filter, Nullable`1<int> top, string orderby, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Media.ContentKeyPolicyCollection : ArmCollection {
    private ClientDiagnostics _contentKeyPolicyClientDiagnostics;
    private ContentKeyPoliciesRestOperations _contentKeyPolicyRestClient;
    internal ContentKeyPolicyCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.ContentKeyPolicyCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<ContentKeyPolicyResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string contentKeyPolicyName, ContentKeyPolicyData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<ContentKeyPolicyResource> CreateOrUpdate(WaitUntil waitUntil, string contentKeyPolicyName, ContentKeyPolicyData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.ContentKeyPolicyCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<ContentKeyPolicyResource>> GetAsync(string contentKeyPolicyName, CancellationToken cancellationToken);
    public virtual Response`1<ContentKeyPolicyResource> Get(string contentKeyPolicyName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<ContentKeyPolicyResource> GetAllAsync(string filter, Nullable`1<int> top, string orderby, CancellationToken cancellationToken);
    public virtual Pageable`1<ContentKeyPolicyResource> GetAll(string filter, Nullable`1<int> top, string orderby, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.ContentKeyPolicyCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string contentKeyPolicyName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string contentKeyPolicyName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.ContentKeyPolicyCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<ContentKeyPolicyResource>> GetIfExistsAsync(string contentKeyPolicyName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<ContentKeyPolicyResource> GetIfExists(string contentKeyPolicyName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<ContentKeyPolicyResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Media.ContentKeyPolicyResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<ContentKeyPolicyResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Media.ContentKeyPolicyResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Media.ContentKeyPolicyData : ResourceData {
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <PolicyId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <CreatedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <LastModifiedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ContentKeyPolicyOption> <Options>k__BackingField;
    public Nullable`1<Guid> PolicyId { get; }
    public Nullable`1<DateTimeOffset> CreatedOn { get; }
    public Nullable`1<DateTimeOffset> LastModifiedOn { get; }
    public string Description { get; public set; }
    public IList`1<ContentKeyPolicyOption> Options { get; }
    internal ContentKeyPolicyData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<Guid> policyId, Nullable`1<DateTimeOffset> createdOn, Nullable`1<DateTimeOffset> lastModifiedOn, string description, IList`1<ContentKeyPolicyOption> options);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_PolicyId();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_CreatedOn();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_LastModifiedOn();
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public IList`1<ContentKeyPolicyOption> get_Options();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ContentKeyPolicyData DeserializeContentKeyPolicyData(JsonElement element);
}
public class Azure.ResourceManager.Media.ContentKeyPolicyResource : ArmResource {
    private ClientDiagnostics _contentKeyPolicyClientDiagnostics;
    private ContentKeyPoliciesRestOperations _contentKeyPolicyRestClient;
    private ContentKeyPolicyData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public ContentKeyPolicyData Data { get; }
    internal ContentKeyPolicyResource(ArmClient client, ContentKeyPolicyData data);
    internal ContentKeyPolicyResource(ArmClient client, ResourceIdentifier id);
    private static ContentKeyPolicyResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string accountName, string contentKeyPolicyName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual ContentKeyPolicyData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.ContentKeyPolicyResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<ContentKeyPolicyResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<ContentKeyPolicyResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.ContentKeyPolicyResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.ContentKeyPolicyResource/<UpdateAsync>d__18")]
public virtual Task`1<Response`1<ContentKeyPolicyResource>> UpdateAsync(ContentKeyPolicyData data, CancellationToken cancellationToken);
    public virtual Response`1<ContentKeyPolicyResource> Update(ContentKeyPolicyData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.ContentKeyPolicyResource/<GetPolicyPropertiesWithSecretsAsync>d__20")]
public virtual Task`1<Response`1<ContentKeyPolicyProperties>> GetPolicyPropertiesWithSecretsAsync(CancellationToken cancellationToken);
    public virtual Response`1<ContentKeyPolicyProperties> GetPolicyPropertiesWithSecrets(CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Media.JobsRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public JobsRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string accountName, string transformName, string filter, string orderby);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.JobsRestOperations/<ListAsync>d__6")]
public Task`1<Response`1<MediaJobListResult>> ListAsync(string subscriptionId, string resourceGroupName, string accountName, string transformName, string filter, string orderby, CancellationToken cancellationToken);
    public Response`1<MediaJobListResult> List(string subscriptionId, string resourceGroupName, string accountName, string transformName, string filter, string orderby, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string accountName, string transformName, string jobName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.JobsRestOperations/<GetAsync>d__9")]
public Task`1<Response`1<MediaJobData>> GetAsync(string subscriptionId, string resourceGroupName, string accountName, string transformName, string jobName, CancellationToken cancellationToken);
    public Response`1<MediaJobData> Get(string subscriptionId, string resourceGroupName, string accountName, string transformName, string jobName, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateRequest(string subscriptionId, string resourceGroupName, string accountName, string transformName, string jobName, MediaJobData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.JobsRestOperations/<CreateAsync>d__12")]
public Task`1<Response`1<MediaJobData>> CreateAsync(string subscriptionId, string resourceGroupName, string accountName, string transformName, string jobName, MediaJobData data, CancellationToken cancellationToken);
    public Response`1<MediaJobData> Create(string subscriptionId, string resourceGroupName, string accountName, string transformName, string jobName, MediaJobData data, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string accountName, string transformName, string jobName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.JobsRestOperations/<DeleteAsync>d__15")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string accountName, string transformName, string jobName, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string accountName, string transformName, string jobName, CancellationToken cancellationToken);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string accountName, string transformName, string jobName, MediaJobData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.JobsRestOperations/<UpdateAsync>d__18")]
public Task`1<Response`1<MediaJobData>> UpdateAsync(string subscriptionId, string resourceGroupName, string accountName, string transformName, string jobName, MediaJobData data, CancellationToken cancellationToken);
    public Response`1<MediaJobData> Update(string subscriptionId, string resourceGroupName, string accountName, string transformName, string jobName, MediaJobData data, CancellationToken cancellationToken);
    internal HttpMessage CreateCancelJobRequest(string subscriptionId, string resourceGroupName, string accountName, string transformName, string jobName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.JobsRestOperations/<CancelJobAsync>d__21")]
public Task`1<Response> CancelJobAsync(string subscriptionId, string resourceGroupName, string accountName, string transformName, string jobName, CancellationToken cancellationToken);
    public Response CancelJob(string subscriptionId, string resourceGroupName, string accountName, string transformName, string jobName, CancellationToken cancellationToken);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string accountName, string transformName, string filter, string orderby);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.JobsRestOperations/<ListNextPageAsync>d__24")]
public Task`1<Response`1<MediaJobListResult>> ListNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string accountName, string transformName, string filter, string orderby, CancellationToken cancellationToken);
    public Response`1<MediaJobListResult> ListNextPage(string nextLink, string subscriptionId, string resourceGroupName, string accountName, string transformName, string filter, string orderby, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Media.LiveEventsRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public LiveEventsRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string accountName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.LiveEventsRestOperations/<ListAsync>d__6")]
public Task`1<Response`1<LiveEventListResult>> ListAsync(string subscriptionId, string resourceGroupName, string accountName, CancellationToken cancellationToken);
    public Response`1<LiveEventListResult> List(string subscriptionId, string resourceGroupName, string accountName, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string accountName, string liveEventName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.LiveEventsRestOperations/<GetAsync>d__9")]
public Task`1<Response`1<MediaLiveEventData>> GetAsync(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, CancellationToken cancellationToken);
    public Response`1<MediaLiveEventData> Get(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateRequest(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, MediaLiveEventData data, Nullable`1<bool> autoStart);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.LiveEventsRestOperations/<CreateAsync>d__12")]
public Task`1<Response> CreateAsync(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, MediaLiveEventData data, Nullable`1<bool> autoStart, CancellationToken cancellationToken);
    public Response Create(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, MediaLiveEventData data, Nullable`1<bool> autoStart, CancellationToken cancellationToken);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, MediaLiveEventData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.LiveEventsRestOperations/<UpdateAsync>d__15")]
public Task`1<Response> UpdateAsync(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, MediaLiveEventData data, CancellationToken cancellationToken);
    public Response Update(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, MediaLiveEventData data, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string accountName, string liveEventName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.LiveEventsRestOperations/<DeleteAsync>d__18")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, CancellationToken cancellationToken);
    internal HttpMessage CreateAllocateRequest(string subscriptionId, string resourceGroupName, string accountName, string liveEventName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.LiveEventsRestOperations/<AllocateAsync>d__21")]
public Task`1<Response> AllocateAsync(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, CancellationToken cancellationToken);
    public Response Allocate(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, CancellationToken cancellationToken);
    internal HttpMessage CreateStartRequest(string subscriptionId, string resourceGroupName, string accountName, string liveEventName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.LiveEventsRestOperations/<StartAsync>d__24")]
public Task`1<Response> StartAsync(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, CancellationToken cancellationToken);
    public Response Start(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, CancellationToken cancellationToken);
    internal HttpMessage CreateStopRequest(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, LiveEventActionContent content);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.LiveEventsRestOperations/<StopAsync>d__27")]
public Task`1<Response> StopAsync(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, LiveEventActionContent content, CancellationToken cancellationToken);
    public Response Stop(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, LiveEventActionContent content, CancellationToken cancellationToken);
    internal HttpMessage CreateResetRequest(string subscriptionId, string resourceGroupName, string accountName, string liveEventName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.LiveEventsRestOperations/<ResetAsync>d__30")]
public Task`1<Response> ResetAsync(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, CancellationToken cancellationToken);
    public Response Reset(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, CancellationToken cancellationToken);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string accountName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.LiveEventsRestOperations/<ListNextPageAsync>d__33")]
public Task`1<Response`1<LiveEventListResult>> ListNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string accountName, CancellationToken cancellationToken);
    public Response`1<LiveEventListResult> ListNextPage(string nextLink, string subscriptionId, string resourceGroupName, string accountName, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Media.LiveOutputsRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public LiveOutputsRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string accountName, string liveEventName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.LiveOutputsRestOperations/<ListAsync>d__6")]
public Task`1<Response`1<LiveOutputListResult>> ListAsync(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, CancellationToken cancellationToken);
    public Response`1<LiveOutputListResult> List(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, string liveOutputName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.LiveOutputsRestOperations/<GetAsync>d__9")]
public Task`1<Response`1<MediaLiveOutputData>> GetAsync(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, string liveOutputName, CancellationToken cancellationToken);
    public Response`1<MediaLiveOutputData> Get(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, string liveOutputName, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateRequest(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, string liveOutputName, MediaLiveOutputData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.LiveOutputsRestOperations/<CreateAsync>d__12")]
public Task`1<Response> CreateAsync(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, string liveOutputName, MediaLiveOutputData data, CancellationToken cancellationToken);
    public Response Create(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, string liveOutputName, MediaLiveOutputData data, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, string liveOutputName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.LiveOutputsRestOperations/<DeleteAsync>d__15")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, string liveOutputName, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, string liveOutputName, CancellationToken cancellationToken);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string accountName, string liveEventName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.LiveOutputsRestOperations/<ListNextPageAsync>d__18")]
public Task`1<Response`1<LiveOutputListResult>> ListNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string accountName, string liveEventName, CancellationToken cancellationToken);
    public Response`1<LiveOutputListResult> ListNextPage(string nextLink, string subscriptionId, string resourceGroupName, string accountName, string liveEventName, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Media.LocationsRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public LocationsRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateCheckNameAvailabilityRequest(string subscriptionId, AzureLocation locationName, MediaServicesNameAvailabilityContent content);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.LocationsRestOperations/<CheckNameAvailabilityAsync>d__6")]
public Task`1<Response`1<MediaServicesNameAvailabilityResult>> CheckNameAvailabilityAsync(string subscriptionId, AzureLocation locationName, MediaServicesNameAvailabilityContent content, CancellationToken cancellationToken);
    public Response`1<MediaServicesNameAvailabilityResult> CheckNameAvailability(string subscriptionId, AzureLocation locationName, MediaServicesNameAvailabilityContent content, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Media.MediaArmOperation : ArmOperation {
    private OperationInternal _operation;
    [EditorBrowsableAttribute("1")]
public string Id { get; }
    public bool HasCompleted { get; }
    internal MediaArmOperation(Response response);
    internal MediaArmOperation(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Request request, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    public virtual string get_Id();
    public virtual bool get_HasCompleted();
    public virtual Response GetRawResponse();
    public virtual Response UpdateStatus(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public virtual Response WaitForCompletionResponse(CancellationToken cancellationToken);
    public virtual Response WaitForCompletionResponse(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> WaitForCompletionResponseAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> WaitForCompletionResponseAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Media.MediaArmOperation`1 : ArmOperation`1<T> {
    private OperationInternal`1<T> _operation;
    [EditorBrowsableAttribute("1")]
public string Id { get; }
    public T Value { get; }
    public bool HasValue { get; }
    public bool HasCompleted { get; }
    internal MediaArmOperation`1(Response`1<T> response);
    internal MediaArmOperation`1(IOperationSource`1<T> source, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Request request, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    public virtual string get_Id();
    public virtual T get_Value();
    public virtual bool get_HasValue();
    public virtual bool get_HasCompleted();
    public virtual Response GetRawResponse();
    public virtual Response UpdateStatus(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public virtual Response`1<T> WaitForCompletion(CancellationToken cancellationToken);
    public virtual Response`1<T> WaitForCompletion(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Media.MediaAssetCollection : ArmCollection {
    private ClientDiagnostics _mediaAssetAssetsClientDiagnostics;
    private AssetsRestOperations _mediaAssetAssetsRestClient;
    internal MediaAssetCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<MediaAssetResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string assetName, MediaAssetData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<MediaAssetResource> CreateOrUpdate(WaitUntil waitUntil, string assetName, MediaAssetData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<MediaAssetResource>> GetAsync(string assetName, CancellationToken cancellationToken);
    public virtual Response`1<MediaAssetResource> Get(string assetName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<MediaAssetResource> GetAllAsync(string filter, Nullable`1<int> top, string orderby, CancellationToken cancellationToken);
    public virtual Pageable`1<MediaAssetResource> GetAll(string filter, Nullable`1<int> top, string orderby, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string assetName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string assetName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<MediaAssetResource>> GetIfExistsAsync(string assetName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<MediaAssetResource> GetIfExists(string assetName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<MediaAssetResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Media.MediaAssetResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<MediaAssetResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Media.MediaAssetResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Media.MediaAssetData : ResourceData {
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <AssetId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <CreatedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <LastModifiedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AlternateId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Container>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StorageAccountName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MediaAssetStorageEncryptionFormat> <StorageEncryptionFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EncryptionScope>k__BackingField;
    public Nullable`1<Guid> AssetId { get; }
    public Nullable`1<DateTimeOffset> CreatedOn { get; }
    public Nullable`1<DateTimeOffset> LastModifiedOn { get; }
    public string AlternateId { get; public set; }
    public string Description { get; public set; }
    public string Container { get; public set; }
    public string StorageAccountName { get; public set; }
    public Nullable`1<MediaAssetStorageEncryptionFormat> StorageEncryptionFormat { get; }
    public string EncryptionScope { get; public set; }
    internal MediaAssetData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<Guid> assetId, Nullable`1<DateTimeOffset> createdOn, Nullable`1<DateTimeOffset> lastModifiedOn, string alternateId, string description, string container, string storageAccountName, Nullable`1<MediaAssetStorageEncryptionFormat> storageEncryptionFormat, string encryptionScope);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_AssetId();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_CreatedOn();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_LastModifiedOn();
    [CompilerGeneratedAttribute]
public string get_AlternateId();
    [CompilerGeneratedAttribute]
public void set_AlternateId(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Container();
    [CompilerGeneratedAttribute]
public void set_Container(string value);
    [CompilerGeneratedAttribute]
public string get_StorageAccountName();
    [CompilerGeneratedAttribute]
public void set_StorageAccountName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<MediaAssetStorageEncryptionFormat> get_StorageEncryptionFormat();
    [CompilerGeneratedAttribute]
public string get_EncryptionScope();
    [CompilerGeneratedAttribute]
public void set_EncryptionScope(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaAssetData DeserializeMediaAssetData(JsonElement element);
}
public class Azure.ResourceManager.Media.MediaAssetFilterCollection : ArmCollection {
    private ClientDiagnostics _mediaAssetFilterAssetFiltersClientDiagnostics;
    private AssetFiltersRestOperations _mediaAssetFilterAssetFiltersRestClient;
    internal MediaAssetFilterCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetFilterCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<MediaAssetFilterResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string filterName, MediaAssetFilterData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<MediaAssetFilterResource> CreateOrUpdate(WaitUntil waitUntil, string filterName, MediaAssetFilterData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetFilterCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<MediaAssetFilterResource>> GetAsync(string filterName, CancellationToken cancellationToken);
    public virtual Response`1<MediaAssetFilterResource> Get(string filterName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<MediaAssetFilterResource> GetAllAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<MediaAssetFilterResource> GetAll(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetFilterCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string filterName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string filterName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetFilterCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<MediaAssetFilterResource>> GetIfExistsAsync(string filterName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<MediaAssetFilterResource> GetIfExists(string filterName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<MediaAssetFilterResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Media.MediaAssetFilterResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<MediaAssetFilterResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Media.MediaAssetFilterResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__FirstPageRequest|9_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__NextPageRequest|9_1(Nullable`1<int> pageSizeHint, string nextLink);
    [CompilerGeneratedAttribute]
private MediaAssetFilterResource <GetAllAsync>b__9_2(JsonElement e);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__FirstPageRequest|10_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__NextPageRequest|10_1(Nullable`1<int> pageSizeHint, string nextLink);
    [CompilerGeneratedAttribute]
private MediaAssetFilterResource <GetAll>b__10_2(JsonElement e);
}
public class Azure.ResourceManager.Media.MediaAssetFilterData : ResourceData {
    [CompilerGeneratedAttribute]
private PresentationTimeRange <PresentationTimeRange>k__BackingField;
    [CompilerGeneratedAttribute]
private FirstQuality <FirstQuality>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<FilterTrackSelection> <Tracks>k__BackingField;
    public PresentationTimeRange PresentationTimeRange { get; public set; }
    internal FirstQuality FirstQuality { get; internal set; }
    public Nullable`1<int> FirstQualityBitrate { get; public set; }
    public IList`1<FilterTrackSelection> Tracks { get; }
    internal MediaAssetFilterData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, PresentationTimeRange presentationTimeRange, FirstQuality firstQuality, IList`1<FilterTrackSelection> tracks);
    [CompilerGeneratedAttribute]
public PresentationTimeRange get_PresentationTimeRange();
    [CompilerGeneratedAttribute]
public void set_PresentationTimeRange(PresentationTimeRange value);
    [CompilerGeneratedAttribute]
internal FirstQuality get_FirstQuality();
    [CompilerGeneratedAttribute]
internal void set_FirstQuality(FirstQuality value);
    public Nullable`1<int> get_FirstQualityBitrate();
    public void set_FirstQualityBitrate(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public IList`1<FilterTrackSelection> get_Tracks();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaAssetFilterData DeserializeMediaAssetFilterData(JsonElement element);
}
public class Azure.ResourceManager.Media.MediaAssetFilterResource : ArmResource {
    private ClientDiagnostics _mediaAssetFilterAssetFiltersClientDiagnostics;
    private AssetFiltersRestOperations _mediaAssetFilterAssetFiltersRestClient;
    private MediaAssetFilterData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public MediaAssetFilterData Data { get; }
    internal MediaAssetFilterResource(ArmClient client, MediaAssetFilterData data);
    internal MediaAssetFilterResource(ArmClient client, ResourceIdentifier id);
    private static MediaAssetFilterResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string accountName, string assetName, string filterName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual MediaAssetFilterData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetFilterResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<MediaAssetFilterResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<MediaAssetFilterResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetFilterResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetFilterResource/<UpdateAsync>d__18")]
public virtual Task`1<Response`1<MediaAssetFilterResource>> UpdateAsync(MediaAssetFilterData data, CancellationToken cancellationToken);
    public virtual Response`1<MediaAssetFilterResource> Update(MediaAssetFilterData data, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Media.MediaAssetResource : ArmResource {
    private ClientDiagnostics _mediaAssetAssetsClientDiagnostics;
    private AssetsRestOperations _mediaAssetAssetsRestClient;
    private MediaAssetData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public MediaAssetData Data { get; }
    internal MediaAssetResource(ArmClient client, MediaAssetData data);
    internal MediaAssetResource(ArmClient client, ResourceIdentifier id);
    private static MediaAssetResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string accountName, string assetName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual MediaAssetData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    public virtual MediaAssetFilterCollection GetMediaAssetFilters();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetResource/<GetMediaAssetFilterAsync>d__15")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<MediaAssetFilterResource>> GetMediaAssetFilterAsync(string filterName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<MediaAssetFilterResource> GetMediaAssetFilter(string filterName, CancellationToken cancellationToken);
    public virtual MediaAssetTrackCollection GetMediaAssetTracks();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetResource/<GetMediaAssetTrackAsync>d__18")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<MediaAssetTrackResource>> GetMediaAssetTrackAsync(string trackName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<MediaAssetTrackResource> GetMediaAssetTrack(string trackName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetResource/<GetAsync>d__20")]
public virtual Task`1<Response`1<MediaAssetResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<MediaAssetResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetResource/<DeleteAsync>d__22")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetResource/<UpdateAsync>d__24")]
public virtual Task`1<Response`1<MediaAssetResource>> UpdateAsync(MediaAssetData data, CancellationToken cancellationToken);
    public virtual Response`1<MediaAssetResource> Update(MediaAssetData data, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<Uri> GetStorageContainerUrisAsync(MediaAssetStorageContainerSasContent content, CancellationToken cancellationToken);
    public virtual Pageable`1<Uri> GetStorageContainerUris(MediaAssetStorageContainerSasContent content, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetResource/<GetEncryptionKeyAsync>d__28")]
public virtual Task`1<Response`1<StorageEncryptedAssetDecryptionInfo>> GetEncryptionKeyAsync(CancellationToken cancellationToken);
    public virtual Response`1<StorageEncryptedAssetDecryptionInfo> GetEncryptionKey(CancellationToken cancellationToken);
    public virtual AsyncPageable`1<MediaAssetStreamingLocator> GetStreamingLocatorsAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<MediaAssetStreamingLocator> GetStreamingLocators(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private MediaAssetFilterCollection <GetMediaAssetFilters>b__14_0(ArmClient client);
    [CompilerGeneratedAttribute]
private MediaAssetTrackCollection <GetMediaAssetTracks>b__17_0(ArmClient client);
    [CompilerGeneratedAttribute]
private HttpMessage <GetStreamingLocatorsAsync>g__FirstPageRequest|30_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetStreamingLocators>g__FirstPageRequest|31_0(Nullable`1<int> pageSizeHint);
}
public class Azure.ResourceManager.Media.MediaAssetTrackCollection : ArmCollection {
    private ClientDiagnostics _mediaAssetTrackTracksClientDiagnostics;
    private TracksRestOperations _mediaAssetTrackTracksRestClient;
    internal MediaAssetTrackCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetTrackCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<MediaAssetTrackResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string trackName, MediaAssetTrackData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<MediaAssetTrackResource> CreateOrUpdate(WaitUntil waitUntil, string trackName, MediaAssetTrackData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetTrackCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<MediaAssetTrackResource>> GetAsync(string trackName, CancellationToken cancellationToken);
    public virtual Response`1<MediaAssetTrackResource> Get(string trackName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<MediaAssetTrackResource> GetAllAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<MediaAssetTrackResource> GetAll(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetTrackCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string trackName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string trackName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetTrackCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<MediaAssetTrackResource>> GetIfExistsAsync(string trackName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<MediaAssetTrackResource> GetIfExists(string trackName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<MediaAssetTrackResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Media.MediaAssetTrackResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<MediaAssetTrackResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Media.MediaAssetTrackResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__FirstPageRequest|9_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private MediaAssetTrackResource <GetAllAsync>b__9_1(JsonElement e);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__FirstPageRequest|10_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private MediaAssetTrackResource <GetAll>b__10_1(JsonElement e);
}
public class Azure.ResourceManager.Media.MediaAssetTrackData : ResourceData {
    [CompilerGeneratedAttribute]
private MediaAssetTrackBase <Track>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MediaServicesProvisioningState> <ProvisioningState>k__BackingField;
    public MediaAssetTrackBase Track { get; public set; }
    public Nullable`1<MediaServicesProvisioningState> ProvisioningState { get; }
    internal MediaAssetTrackData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, MediaAssetTrackBase track, Nullable`1<MediaServicesProvisioningState> provisioningState);
    [CompilerGeneratedAttribute]
public MediaAssetTrackBase get_Track();
    [CompilerGeneratedAttribute]
public void set_Track(MediaAssetTrackBase value);
    [CompilerGeneratedAttribute]
public Nullable`1<MediaServicesProvisioningState> get_ProvisioningState();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaAssetTrackData DeserializeMediaAssetTrackData(JsonElement element);
}
internal class Azure.ResourceManager.Media.MediaAssetTrackOperationSource : object {
    private ArmClient _client;
    internal MediaAssetTrackOperationSource(ArmClient client);
    private sealed virtual override MediaAssetTrackResource Azure.Core.IOperationSource<Azure.ResourceManager.Media.MediaAssetTrackResource>.CreateResult(Response response, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetTrackOperationSource/<Azure-Core-IOperationSource<Azure-ResourceManager-Media-MediaAssetTrackResource>-CreateResultAsync>d__3")]
private sealed virtual override ValueTask`1<MediaAssetTrackResource> Azure.Core.IOperationSource<Azure.ResourceManager.Media.MediaAssetTrackResource>.CreateResultAsync(Response response, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Media.MediaAssetTrackResource : ArmResource {
    private ClientDiagnostics _mediaAssetTrackTracksClientDiagnostics;
    private TracksRestOperations _mediaAssetTrackTracksRestClient;
    private MediaAssetTrackData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public MediaAssetTrackData Data { get; }
    internal MediaAssetTrackResource(ArmClient client, MediaAssetTrackData data);
    internal MediaAssetTrackResource(ArmClient client, ResourceIdentifier id);
    private static MediaAssetTrackResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string accountName, string assetName, string trackName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual MediaAssetTrackData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetTrackResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<MediaAssetTrackResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<MediaAssetTrackResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetTrackResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetTrackResource/<UpdateAsync>d__18")]
public virtual Task`1<ArmOperation`1<MediaAssetTrackResource>> UpdateAsync(WaitUntil waitUntil, MediaAssetTrackData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<MediaAssetTrackResource> Update(WaitUntil waitUntil, MediaAssetTrackData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaAssetTrackResource/<UpdateTrackDataAsync>d__20")]
public virtual Task`1<ArmOperation> UpdateTrackDataAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation UpdateTrackData(WaitUntil waitUntil, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Azure.ResourceManager.Media.MediaExtensions : object {
    private static MockableMediaArmClient GetMockableMediaArmClient(ArmClient client);
    private static MockableMediaResourceGroupResource GetMockableMediaResourceGroupResource(ArmResource resource);
    private static MockableMediaSubscriptionResource GetMockableMediaSubscriptionResource(ArmResource resource);
    [ExtensionAttribute]
public static MediaServicesAccountFilterResource GetMediaServicesAccountFilterResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static MediaServicesAccountResource GetMediaServicesAccountResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static MediaServicesPrivateLinkResource GetMediaServicesPrivateLinkResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static MediaServicesPrivateEndpointConnectionResource GetMediaServicesPrivateEndpointConnectionResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static MediaAssetResource GetMediaAssetResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static MediaAssetFilterResource GetMediaAssetFilterResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static MediaAssetTrackResource GetMediaAssetTrackResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static ContentKeyPolicyResource GetContentKeyPolicyResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static MediaTransformResource GetMediaTransformResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static MediaJobResource GetMediaJobResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static StreamingPolicyResource GetStreamingPolicyResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static StreamingLocatorResource GetStreamingLocatorResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static MediaLiveEventResource GetMediaLiveEventResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static MediaLiveOutputResource GetMediaLiveOutputResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static StreamingEndpointResource GetStreamingEndpointResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static MediaServicesAccountCollection GetMediaServicesAccounts(ResourceGroupResource resourceGroupResource);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaExtensions/<GetMediaServicesAccountAsync>d__19")]
[ExtensionAttribute]
[ForwardsClientCallsAttribute]
public static Task`1<Response`1<MediaServicesAccountResource>> GetMediaServicesAccountAsync(ResourceGroupResource resourceGroupResource, string accountName, CancellationToken cancellationToken);
    [ExtensionAttribute]
[ForwardsClientCallsAttribute]
public static Response`1<MediaServicesAccountResource> GetMediaServicesAccount(ResourceGroupResource resourceGroupResource, string accountName, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static AsyncPageable`1<MediaServicesAccountResource> GetMediaServicesAccountsAsync(SubscriptionResource subscriptionResource, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Pageable`1<MediaServicesAccountResource> GetMediaServicesAccounts(SubscriptionResource subscriptionResource, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaExtensions/<CheckMediaServicesNameAvailabilityAsync>d__23")]
[ExtensionAttribute]
public static Task`1<Response`1<MediaServicesNameAvailabilityResult>> CheckMediaServicesNameAvailabilityAsync(SubscriptionResource subscriptionResource, AzureLocation locationName, MediaServicesNameAvailabilityContent content, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response`1<MediaServicesNameAvailabilityResult> CheckMediaServicesNameAvailability(SubscriptionResource subscriptionResource, AzureLocation locationName, MediaServicesNameAvailabilityContent content, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Media.MediaJobCollection : ArmCollection {
    private ClientDiagnostics _mediaJobJobsClientDiagnostics;
    private JobsRestOperations _mediaJobJobsRestClient;
    internal MediaJobCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaJobCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<MediaJobResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string jobName, MediaJobData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<MediaJobResource> CreateOrUpdate(WaitUntil waitUntil, string jobName, MediaJobData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaJobCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<MediaJobResource>> GetAsync(string jobName, CancellationToken cancellationToken);
    public virtual Response`1<MediaJobResource> Get(string jobName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<MediaJobResource> GetAllAsync(string filter, string orderby, CancellationToken cancellationToken);
    public virtual Pageable`1<MediaJobResource> GetAll(string filter, string orderby, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaJobCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string jobName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string jobName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaJobCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<MediaJobResource>> GetIfExistsAsync(string jobName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<MediaJobResource> GetIfExists(string jobName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<MediaJobResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Media.MediaJobResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<MediaJobResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Media.MediaJobResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Media.MediaJobData : ResourceData {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <CreatedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MediaJobState> <State>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private MediaJobInputBasicProperties <Input>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <LastModifiedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<MediaJobOutput> <Outputs>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MediaJobPriority> <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <CorrelationData>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <StartOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <EndOn>k__BackingField;
    public Nullable`1<DateTimeOffset> CreatedOn { get; }
    public Nullable`1<MediaJobState> State { get; }
    public string Description { get; public set; }
    public MediaJobInputBasicProperties Input { get; public set; }
    public Nullable`1<DateTimeOffset> LastModifiedOn { get; }
    public IList`1<MediaJobOutput> Outputs { get; }
    public Nullable`1<MediaJobPriority> Priority { get; public set; }
    public IDictionary`2<string, string> CorrelationData { get; }
    public Nullable`1<DateTimeOffset> StartOn { get; }
    public Nullable`1<DateTimeOffset> EndOn { get; }
    internal MediaJobData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<DateTimeOffset> createdOn, Nullable`1<MediaJobState> state, string description, MediaJobInputBasicProperties input, Nullable`1<DateTimeOffset> lastModifiedOn, IList`1<MediaJobOutput> outputs, Nullable`1<MediaJobPriority> priority, IDictionary`2<string, string> correlationData, Nullable`1<DateTimeOffset> startOn, Nullable`1<DateTimeOffset> endOn);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_CreatedOn();
    [CompilerGeneratedAttribute]
public Nullable`1<MediaJobState> get_State();
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public MediaJobInputBasicProperties get_Input();
    [CompilerGeneratedAttribute]
public void set_Input(MediaJobInputBasicProperties value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_LastModifiedOn();
    [CompilerGeneratedAttribute]
public IList`1<MediaJobOutput> get_Outputs();
    [CompilerGeneratedAttribute]
public Nullable`1<MediaJobPriority> get_Priority();
    [CompilerGeneratedAttribute]
public void set_Priority(Nullable`1<MediaJobPriority> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_CorrelationData();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_StartOn();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_EndOn();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaJobData DeserializeMediaJobData(JsonElement element);
}
public class Azure.ResourceManager.Media.MediaJobResource : ArmResource {
    private ClientDiagnostics _mediaJobJobsClientDiagnostics;
    private JobsRestOperations _mediaJobJobsRestClient;
    private MediaJobData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public MediaJobData Data { get; }
    internal MediaJobResource(ArmClient client, MediaJobData data);
    internal MediaJobResource(ArmClient client, ResourceIdentifier id);
    private static MediaJobResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string accountName, string transformName, string jobName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual MediaJobData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaJobResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<MediaJobResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<MediaJobResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaJobResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaJobResource/<UpdateAsync>d__18")]
public virtual Task`1<Response`1<MediaJobResource>> UpdateAsync(MediaJobData data, CancellationToken cancellationToken);
    public virtual Response`1<MediaJobResource> Update(MediaJobData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaJobResource/<CancelJobAsync>d__20")]
public virtual Task`1<Response> CancelJobAsync(CancellationToken cancellationToken);
    public virtual Response CancelJob(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Media.MediaLiveEventCollection : ArmCollection {
    private ClientDiagnostics _mediaLiveEventLiveEventsClientDiagnostics;
    private LiveEventsRestOperations _mediaLiveEventLiveEventsRestClient;
    internal MediaLiveEventCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaLiveEventCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<MediaLiveEventResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string liveEventName, MediaLiveEventData data, Nullable`1<bool> autoStart, CancellationToken cancellationToken);
    public virtual ArmOperation`1<MediaLiveEventResource> CreateOrUpdate(WaitUntil waitUntil, string liveEventName, MediaLiveEventData data, Nullable`1<bool> autoStart, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaLiveEventCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<MediaLiveEventResource>> GetAsync(string liveEventName, CancellationToken cancellationToken);
    public virtual Response`1<MediaLiveEventResource> Get(string liveEventName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<MediaLiveEventResource> GetAllAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<MediaLiveEventResource> GetAll(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaLiveEventCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string liveEventName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string liveEventName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaLiveEventCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<MediaLiveEventResource>> GetIfExistsAsync(string liveEventName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<MediaLiveEventResource> GetIfExists(string liveEventName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<MediaLiveEventResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Media.MediaLiveEventResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<MediaLiveEventResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Media.MediaLiveEventResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__FirstPageRequest|9_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__NextPageRequest|9_1(Nullable`1<int> pageSizeHint, string nextLink);
    [CompilerGeneratedAttribute]
private MediaLiveEventResource <GetAllAsync>b__9_2(JsonElement e);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__FirstPageRequest|10_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__NextPageRequest|10_1(Nullable`1<int> pageSizeHint, string nextLink);
    [CompilerGeneratedAttribute]
private MediaLiveEventResource <GetAll>b__10_2(JsonElement e);
}
public class Azure.ResourceManager.Media.MediaLiveEventData : TrackedResourceData {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private LiveEventInput <Input>k__BackingField;
    [CompilerGeneratedAttribute]
private LiveEventPreview <Preview>k__BackingField;
    [CompilerGeneratedAttribute]
private LiveEventEncoding <Encoding>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<LiveEventTranscription> <Transcriptions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProvisioningState>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<LiveEventResourceState> <ResourceState>k__BackingField;
    [CompilerGeneratedAttribute]
private CrossSiteAccessPolicies <CrossSiteAccessPolicies>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseStaticHostname>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HostnamePrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<StreamOptionsFlag> <StreamOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <CreatedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <LastModifiedOn>k__BackingField;
    public string Description { get; public set; }
    public LiveEventInput Input { get; public set; }
    public LiveEventPreview Preview { get; public set; }
    public LiveEventEncoding Encoding { get; public set; }
    public IList`1<LiveEventTranscription> Transcriptions { get; }
    public string ProvisioningState { get; }
    public Nullable`1<LiveEventResourceState> ResourceState { get; }
    public CrossSiteAccessPolicies CrossSiteAccessPolicies { get; public set; }
    public Nullable`1<bool> UseStaticHostname { get; public set; }
    public string HostnamePrefix { get; public set; }
    public IList`1<StreamOptionsFlag> StreamOptions { get; }
    public Nullable`1<DateTimeOffset> CreatedOn { get; }
    public Nullable`1<DateTimeOffset> LastModifiedOn { get; }
    public MediaLiveEventData(AzureLocation location);
    internal MediaLiveEventData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary`2<string, string> tags, AzureLocation location, string description, LiveEventInput input, LiveEventPreview preview, LiveEventEncoding encoding, IList`1<LiveEventTranscription> transcriptions, string provisioningState, Nullable`1<LiveEventResourceState> resourceState, CrossSiteAccessPolicies crossSiteAccessPolicies, Nullable`1<bool> useStaticHostname, string hostnamePrefix, IList`1<StreamOptionsFlag> streamOptions, Nullable`1<DateTimeOffset> createdOn, Nullable`1<DateTimeOffset> lastModifiedOn);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public LiveEventInput get_Input();
    [CompilerGeneratedAttribute]
public void set_Input(LiveEventInput value);
    [CompilerGeneratedAttribute]
public LiveEventPreview get_Preview();
    [CompilerGeneratedAttribute]
public void set_Preview(LiveEventPreview value);
    [CompilerGeneratedAttribute]
public LiveEventEncoding get_Encoding();
    [CompilerGeneratedAttribute]
public void set_Encoding(LiveEventEncoding value);
    [CompilerGeneratedAttribute]
public IList`1<LiveEventTranscription> get_Transcriptions();
    [CompilerGeneratedAttribute]
public string get_ProvisioningState();
    [CompilerGeneratedAttribute]
public Nullable`1<LiveEventResourceState> get_ResourceState();
    [CompilerGeneratedAttribute]
public CrossSiteAccessPolicies get_CrossSiteAccessPolicies();
    [CompilerGeneratedAttribute]
public void set_CrossSiteAccessPolicies(CrossSiteAccessPolicies value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UseStaticHostname();
    [CompilerGeneratedAttribute]
public void set_UseStaticHostname(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_HostnamePrefix();
    [CompilerGeneratedAttribute]
public void set_HostnamePrefix(string value);
    [CompilerGeneratedAttribute]
public IList`1<StreamOptionsFlag> get_StreamOptions();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_CreatedOn();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_LastModifiedOn();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaLiveEventData DeserializeMediaLiveEventData(JsonElement element);
}
internal class Azure.ResourceManager.Media.MediaLiveEventOperationSource : object {
    private ArmClient _client;
    internal MediaLiveEventOperationSource(ArmClient client);
    private sealed virtual override MediaLiveEventResource Azure.Core.IOperationSource<Azure.ResourceManager.Media.MediaLiveEventResource>.CreateResult(Response response, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaLiveEventOperationSource/<Azure-Core-IOperationSource<Azure-ResourceManager-Media-MediaLiveEventResource>-CreateResultAsync>d__3")]
private sealed virtual override ValueTask`1<MediaLiveEventResource> Azure.Core.IOperationSource<Azure.ResourceManager.Media.MediaLiveEventResource>.CreateResultAsync(Response response, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Media.MediaLiveEventResource : ArmResource {
    private ClientDiagnostics _mediaLiveEventLiveEventsClientDiagnostics;
    private LiveEventsRestOperations _mediaLiveEventLiveEventsRestClient;
    private MediaLiveEventData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public MediaLiveEventData Data { get; }
    internal MediaLiveEventResource(ArmClient client, MediaLiveEventData data);
    internal MediaLiveEventResource(ArmClient client, ResourceIdentifier id);
    private static MediaLiveEventResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string accountName, string liveEventName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual MediaLiveEventData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    public virtual MediaLiveOutputCollection GetMediaLiveOutputs();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaLiveEventResource/<GetMediaLiveOutputAsync>d__15")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<MediaLiveOutputResource>> GetMediaLiveOutputAsync(string liveOutputName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<MediaLiveOutputResource> GetMediaLiveOutput(string liveOutputName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaLiveEventResource/<GetAsync>d__17")]
public virtual Task`1<Response`1<MediaLiveEventResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<MediaLiveEventResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaLiveEventResource/<DeleteAsync>d__19")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaLiveEventResource/<UpdateAsync>d__21")]
public virtual Task`1<ArmOperation`1<MediaLiveEventResource>> UpdateAsync(WaitUntil waitUntil, MediaLiveEventData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<MediaLiveEventResource> Update(WaitUntil waitUntil, MediaLiveEventData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaLiveEventResource/<AllocateAsync>d__23")]
public virtual Task`1<ArmOperation> AllocateAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Allocate(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaLiveEventResource/<StartAsync>d__25")]
public virtual Task`1<ArmOperation> StartAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Start(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaLiveEventResource/<StopAsync>d__27")]
public virtual Task`1<ArmOperation> StopAsync(WaitUntil waitUntil, LiveEventActionContent content, CancellationToken cancellationToken);
    public virtual ArmOperation Stop(WaitUntil waitUntil, LiveEventActionContent content, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaLiveEventResource/<ResetAsync>d__29")]
public virtual Task`1<ArmOperation> ResetAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Reset(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaLiveEventResource/<AddTagAsync>d__31")]
public virtual Task`1<Response`1<MediaLiveEventResource>> AddTagAsync(string key, string value, CancellationToken cancellationToken);
    public virtual Response`1<MediaLiveEventResource> AddTag(string key, string value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaLiveEventResource/<SetTagsAsync>d__33")]
public virtual Task`1<Response`1<MediaLiveEventResource>> SetTagsAsync(IDictionary`2<string, string> tags, CancellationToken cancellationToken);
    public virtual Response`1<MediaLiveEventResource> SetTags(IDictionary`2<string, string> tags, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaLiveEventResource/<RemoveTagAsync>d__35")]
public virtual Task`1<Response`1<MediaLiveEventResource>> RemoveTagAsync(string key, CancellationToken cancellationToken);
    public virtual Response`1<MediaLiveEventResource> RemoveTag(string key, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private MediaLiveOutputCollection <GetMediaLiveOutputs>b__14_0(ArmClient client);
}
public class Azure.ResourceManager.Media.MediaLiveOutputCollection : ArmCollection {
    private ClientDiagnostics _mediaLiveOutputLiveOutputsClientDiagnostics;
    private LiveOutputsRestOperations _mediaLiveOutputLiveOutputsRestClient;
    internal MediaLiveOutputCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaLiveOutputCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<MediaLiveOutputResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string liveOutputName, MediaLiveOutputData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<MediaLiveOutputResource> CreateOrUpdate(WaitUntil waitUntil, string liveOutputName, MediaLiveOutputData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaLiveOutputCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<MediaLiveOutputResource>> GetAsync(string liveOutputName, CancellationToken cancellationToken);
    public virtual Response`1<MediaLiveOutputResource> Get(string liveOutputName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<MediaLiveOutputResource> GetAllAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<MediaLiveOutputResource> GetAll(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaLiveOutputCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string liveOutputName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string liveOutputName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaLiveOutputCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<MediaLiveOutputResource>> GetIfExistsAsync(string liveOutputName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<MediaLiveOutputResource> GetIfExists(string liveOutputName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<MediaLiveOutputResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Media.MediaLiveOutputResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<MediaLiveOutputResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Media.MediaLiveOutputResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__FirstPageRequest|9_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__NextPageRequest|9_1(Nullable`1<int> pageSizeHint, string nextLink);
    [CompilerGeneratedAttribute]
private MediaLiveOutputResource <GetAllAsync>b__9_2(JsonElement e);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__FirstPageRequest|10_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__NextPageRequest|10_1(Nullable`1<int> pageSizeHint, string nextLink);
    [CompilerGeneratedAttribute]
private MediaLiveOutputResource <GetAll>b__10_2(JsonElement e);
}
public class Azure.ResourceManager.Media.MediaLiveOutputData : ResourceData {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssetName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <ArchiveWindowLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <RewindWindowLength>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ManifestName>k__BackingField;
    [CompilerGeneratedAttribute]
private Hls <Hls>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OutputSnapTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <CreatedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <LastModifiedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProvisioningState>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<LiveOutputResourceState> <ResourceState>k__BackingField;
    public string Description { get; public set; }
    public string AssetName { get; public set; }
    public Nullable`1<TimeSpan> ArchiveWindowLength { get; public set; }
    public Nullable`1<TimeSpan> RewindWindowLength { get; public set; }
    public string ManifestName { get; public set; }
    internal Hls Hls { get; internal set; }
    public Nullable`1<int> HlsFragmentsPerTsSegment { get; public set; }
    public Nullable`1<long> OutputSnapTime { get; public set; }
    public Nullable`1<DateTimeOffset> CreatedOn { get; }
    public Nullable`1<DateTimeOffset> LastModifiedOn { get; }
    public string ProvisioningState { get; }
    public Nullable`1<LiveOutputResourceState> ResourceState { get; }
    internal MediaLiveOutputData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string description, string assetName, Nullable`1<TimeSpan> archiveWindowLength, Nullable`1<TimeSpan> rewindWindowLength, string manifestName, Hls hls, Nullable`1<long> outputSnapTime, Nullable`1<DateTimeOffset> createdOn, Nullable`1<DateTimeOffset> lastModifiedOn, string provisioningState, Nullable`1<LiveOutputResourceState> resourceState);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_AssetName();
    [CompilerGeneratedAttribute]
public void set_AssetName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_ArchiveWindowLength();
    [CompilerGeneratedAttribute]
public void set_ArchiveWindowLength(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_RewindWindowLength();
    [CompilerGeneratedAttribute]
public void set_RewindWindowLength(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public string get_ManifestName();
    [CompilerGeneratedAttribute]
public void set_ManifestName(string value);
    [CompilerGeneratedAttribute]
internal Hls get_Hls();
    [CompilerGeneratedAttribute]
internal void set_Hls(Hls value);
    public Nullable`1<int> get_HlsFragmentsPerTsSegment();
    public void set_HlsFragmentsPerTsSegment(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_OutputSnapTime();
    [CompilerGeneratedAttribute]
public void set_OutputSnapTime(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_CreatedOn();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_LastModifiedOn();
    [CompilerGeneratedAttribute]
public string get_ProvisioningState();
    [CompilerGeneratedAttribute]
public Nullable`1<LiveOutputResourceState> get_ResourceState();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaLiveOutputData DeserializeMediaLiveOutputData(JsonElement element);
}
internal class Azure.ResourceManager.Media.MediaLiveOutputOperationSource : object {
    private ArmClient _client;
    internal MediaLiveOutputOperationSource(ArmClient client);
    private sealed virtual override MediaLiveOutputResource Azure.Core.IOperationSource<Azure.ResourceManager.Media.MediaLiveOutputResource>.CreateResult(Response response, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaLiveOutputOperationSource/<Azure-Core-IOperationSource<Azure-ResourceManager-Media-MediaLiveOutputResource>-CreateResultAsync>d__3")]
private sealed virtual override ValueTask`1<MediaLiveOutputResource> Azure.Core.IOperationSource<Azure.ResourceManager.Media.MediaLiveOutputResource>.CreateResultAsync(Response response, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Media.MediaLiveOutputResource : ArmResource {
    private ClientDiagnostics _mediaLiveOutputLiveOutputsClientDiagnostics;
    private LiveOutputsRestOperations _mediaLiveOutputLiveOutputsRestClient;
    private MediaLiveOutputData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public MediaLiveOutputData Data { get; }
    internal MediaLiveOutputResource(ArmClient client, MediaLiveOutputData data);
    internal MediaLiveOutputResource(ArmClient client, ResourceIdentifier id);
    private static MediaLiveOutputResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string accountName, string liveEventName, string liveOutputName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual MediaLiveOutputData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaLiveOutputResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<MediaLiveOutputResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<MediaLiveOutputResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaLiveOutputResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaLiveOutputResource/<UpdateAsync>d__18")]
public virtual Task`1<ArmOperation`1<MediaLiveOutputResource>> UpdateAsync(WaitUntil waitUntil, MediaLiveOutputData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<MediaLiveOutputResource> Update(WaitUntil waitUntil, MediaLiveOutputData data, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Media.MediaServicesAccountCollection : ArmCollection {
    private ClientDiagnostics _mediaServicesAccountMediaservicesClientDiagnostics;
    private MediaservicesRestOperations _mediaServicesAccountMediaservicesRestClient;
    internal MediaServicesAccountCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<MediaServicesAccountResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string accountName, MediaServicesAccountData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<MediaServicesAccountResource> CreateOrUpdate(WaitUntil waitUntil, string accountName, MediaServicesAccountData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<MediaServicesAccountResource>> GetAsync(string accountName, CancellationToken cancellationToken);
    public virtual Response`1<MediaServicesAccountResource> Get(string accountName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<MediaServicesAccountResource> GetAllAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<MediaServicesAccountResource> GetAll(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string accountName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string accountName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<MediaServicesAccountResource>> GetIfExistsAsync(string accountName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<MediaServicesAccountResource> GetIfExists(string accountName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<MediaServicesAccountResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Media.MediaServicesAccountResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<MediaServicesAccountResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Media.MediaServicesAccountResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__FirstPageRequest|9_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__NextPageRequest|9_1(Nullable`1<int> pageSizeHint, string nextLink);
    [CompilerGeneratedAttribute]
private MediaServicesAccountResource <GetAllAsync>b__9_2(JsonElement e);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__FirstPageRequest|10_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__NextPageRequest|10_1(Nullable`1<int> pageSizeHint, string nextLink);
    [CompilerGeneratedAttribute]
private MediaServicesAccountResource <GetAll>b__10_2(JsonElement e);
}
public class Azure.ResourceManager.Media.MediaServicesAccountData : TrackedResourceData {
    [CompilerGeneratedAttribute]
private ManagedServiceIdentity <Identity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <MediaServicesAccountId>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<MediaServicesStorageAccount> <StorageAccounts>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MediaStorageAuthentication> <StorageAuthentication>k__BackingField;
    [CompilerGeneratedAttribute]
private AccountEncryption <Encryption>k__BackingField;
    [CompilerGeneratedAttribute]
private MediaKeyDelivery <KeyDelivery>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MediaServicesPublicNetworkAccess> <PublicNetworkAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MediaServicesProvisioningState> <ProvisioningState>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<MediaServicesPrivateEndpointConnectionData> <PrivateEndpointConnections>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MediaServicesMinimumTlsVersion> <MinimumTlsVersion>k__BackingField;
    public ManagedServiceIdentity Identity { get; public set; }
    public Nullable`1<Guid> MediaServicesAccountId { get; }
    public IList`1<MediaServicesStorageAccount> StorageAccounts { get; }
    public Nullable`1<MediaStorageAuthentication> StorageAuthentication { get; public set; }
    public AccountEncryption Encryption { get; public set; }
    internal MediaKeyDelivery KeyDelivery { get; internal set; }
    public MediaAccessControl KeyDeliveryAccessControl { get; public set; }
    public Nullable`1<MediaServicesPublicNetworkAccess> PublicNetworkAccess { get; public set; }
    public Nullable`1<MediaServicesProvisioningState> ProvisioningState { get; }
    public IReadOnlyList`1<MediaServicesPrivateEndpointConnectionData> PrivateEndpointConnections { get; }
    public Nullable`1<MediaServicesMinimumTlsVersion> MinimumTlsVersion { get; public set; }
    public MediaServicesAccountData(AzureLocation location);
    internal MediaServicesAccountData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary`2<string, string> tags, AzureLocation location, ManagedServiceIdentity identity, Nullable`1<Guid> mediaServicesAccountId, IList`1<MediaServicesStorageAccount> storageAccounts, Nullable`1<MediaStorageAuthentication> storageAuthentication, AccountEncryption encryption, MediaKeyDelivery keyDelivery, Nullable`1<MediaServicesPublicNetworkAccess> publicNetworkAccess, Nullable`1<MediaServicesProvisioningState> provisioningState, IReadOnlyList`1<MediaServicesPrivateEndpointConnectionData> privateEndpointConnections, Nullable`1<MediaServicesMinimumTlsVersion> minimumTlsVersion);
    [CompilerGeneratedAttribute]
public ManagedServiceIdentity get_Identity();
    [CompilerGeneratedAttribute]
public void set_Identity(ManagedServiceIdentity value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_MediaServicesAccountId();
    [CompilerGeneratedAttribute]
public IList`1<MediaServicesStorageAccount> get_StorageAccounts();
    [CompilerGeneratedAttribute]
public Nullable`1<MediaStorageAuthentication> get_StorageAuthentication();
    [CompilerGeneratedAttribute]
public void set_StorageAuthentication(Nullable`1<MediaStorageAuthentication> value);
    [CompilerGeneratedAttribute]
public AccountEncryption get_Encryption();
    [CompilerGeneratedAttribute]
public void set_Encryption(AccountEncryption value);
    [CompilerGeneratedAttribute]
internal MediaKeyDelivery get_KeyDelivery();
    [CompilerGeneratedAttribute]
internal void set_KeyDelivery(MediaKeyDelivery value);
    public MediaAccessControl get_KeyDeliveryAccessControl();
    public void set_KeyDeliveryAccessControl(MediaAccessControl value);
    [CompilerGeneratedAttribute]
public Nullable`1<MediaServicesPublicNetworkAccess> get_PublicNetworkAccess();
    [CompilerGeneratedAttribute]
public void set_PublicNetworkAccess(Nullable`1<MediaServicesPublicNetworkAccess> value);
    [CompilerGeneratedAttribute]
public Nullable`1<MediaServicesProvisioningState> get_ProvisioningState();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<MediaServicesPrivateEndpointConnectionData> get_PrivateEndpointConnections();
    [CompilerGeneratedAttribute]
public Nullable`1<MediaServicesMinimumTlsVersion> get_MinimumTlsVersion();
    [CompilerGeneratedAttribute]
public void set_MinimumTlsVersion(Nullable`1<MediaServicesMinimumTlsVersion> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaServicesAccountData DeserializeMediaServicesAccountData(JsonElement element);
}
public class Azure.ResourceManager.Media.MediaServicesAccountFilterCollection : ArmCollection {
    private ClientDiagnostics _mediaServicesAccountFilterAccountFiltersClientDiagnostics;
    private AccountFiltersRestOperations _mediaServicesAccountFilterAccountFiltersRestClient;
    internal MediaServicesAccountFilterCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountFilterCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<MediaServicesAccountFilterResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string filterName, MediaServicesAccountFilterData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<MediaServicesAccountFilterResource> CreateOrUpdate(WaitUntil waitUntil, string filterName, MediaServicesAccountFilterData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountFilterCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<MediaServicesAccountFilterResource>> GetAsync(string filterName, CancellationToken cancellationToken);
    public virtual Response`1<MediaServicesAccountFilterResource> Get(string filterName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<MediaServicesAccountFilterResource> GetAllAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<MediaServicesAccountFilterResource> GetAll(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountFilterCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string filterName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string filterName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountFilterCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<MediaServicesAccountFilterResource>> GetIfExistsAsync(string filterName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<MediaServicesAccountFilterResource> GetIfExists(string filterName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<MediaServicesAccountFilterResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Media.MediaServicesAccountFilterResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<MediaServicesAccountFilterResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Media.MediaServicesAccountFilterResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__FirstPageRequest|9_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__NextPageRequest|9_1(Nullable`1<int> pageSizeHint, string nextLink);
    [CompilerGeneratedAttribute]
private MediaServicesAccountFilterResource <GetAllAsync>b__9_2(JsonElement e);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__FirstPageRequest|10_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__NextPageRequest|10_1(Nullable`1<int> pageSizeHint, string nextLink);
    [CompilerGeneratedAttribute]
private MediaServicesAccountFilterResource <GetAll>b__10_2(JsonElement e);
}
public class Azure.ResourceManager.Media.MediaServicesAccountFilterData : ResourceData {
    [CompilerGeneratedAttribute]
private PresentationTimeRange <PresentationTimeRange>k__BackingField;
    [CompilerGeneratedAttribute]
private FirstQuality <FirstQuality>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<FilterTrackSelection> <Tracks>k__BackingField;
    public PresentationTimeRange PresentationTimeRange { get; public set; }
    internal FirstQuality FirstQuality { get; internal set; }
    public Nullable`1<int> FirstQualityBitrate { get; public set; }
    public IList`1<FilterTrackSelection> Tracks { get; }
    internal MediaServicesAccountFilterData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, PresentationTimeRange presentationTimeRange, FirstQuality firstQuality, IList`1<FilterTrackSelection> tracks);
    [CompilerGeneratedAttribute]
public PresentationTimeRange get_PresentationTimeRange();
    [CompilerGeneratedAttribute]
public void set_PresentationTimeRange(PresentationTimeRange value);
    [CompilerGeneratedAttribute]
internal FirstQuality get_FirstQuality();
    [CompilerGeneratedAttribute]
internal void set_FirstQuality(FirstQuality value);
    public Nullable`1<int> get_FirstQualityBitrate();
    public void set_FirstQualityBitrate(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public IList`1<FilterTrackSelection> get_Tracks();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaServicesAccountFilterData DeserializeMediaServicesAccountFilterData(JsonElement element);
}
public class Azure.ResourceManager.Media.MediaServicesAccountFilterResource : ArmResource {
    private ClientDiagnostics _mediaServicesAccountFilterAccountFiltersClientDiagnostics;
    private AccountFiltersRestOperations _mediaServicesAccountFilterAccountFiltersRestClient;
    private MediaServicesAccountFilterData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public MediaServicesAccountFilterData Data { get; }
    internal MediaServicesAccountFilterResource(ArmClient client, MediaServicesAccountFilterData data);
    internal MediaServicesAccountFilterResource(ArmClient client, ResourceIdentifier id);
    private static MediaServicesAccountFilterResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string accountName, string filterName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual MediaServicesAccountFilterData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountFilterResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<MediaServicesAccountFilterResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<MediaServicesAccountFilterResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountFilterResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountFilterResource/<UpdateAsync>d__18")]
public virtual Task`1<Response`1<MediaServicesAccountFilterResource>> UpdateAsync(MediaServicesAccountFilterData data, CancellationToken cancellationToken);
    public virtual Response`1<MediaServicesAccountFilterResource> Update(MediaServicesAccountFilterData data, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Media.MediaServicesAccountOperationSource : object {
    private ArmClient _client;
    internal MediaServicesAccountOperationSource(ArmClient client);
    private sealed virtual override MediaServicesAccountResource Azure.Core.IOperationSource<Azure.ResourceManager.Media.MediaServicesAccountResource>.CreateResult(Response response, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountOperationSource/<Azure-Core-IOperationSource<Azure-ResourceManager-Media-MediaServicesAccountResource>-CreateResultAsync>d__3")]
private sealed virtual override ValueTask`1<MediaServicesAccountResource> Azure.Core.IOperationSource<Azure.ResourceManager.Media.MediaServicesAccountResource>.CreateResultAsync(Response response, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Media.MediaServicesAccountResource : ArmResource {
    private ClientDiagnostics _mediaServicesAccountMediaservicesClientDiagnostics;
    private MediaservicesRestOperations _mediaServicesAccountMediaservicesRestClient;
    private MediaServicesAccountData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public MediaServicesAccountData Data { get; }
    internal MediaServicesAccountResource(ArmClient client, MediaServicesAccountData data);
    internal MediaServicesAccountResource(ArmClient client, ResourceIdentifier id);
    private static MediaServicesAccountResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string accountName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual MediaServicesAccountData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    public virtual MediaServicesAccountFilterCollection GetMediaServicesAccountFilters();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountResource/<GetMediaServicesAccountFilterAsync>d__15")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<MediaServicesAccountFilterResource>> GetMediaServicesAccountFilterAsync(string filterName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<MediaServicesAccountFilterResource> GetMediaServicesAccountFilter(string filterName, CancellationToken cancellationToken);
    public virtual MediaServicesPrivateLinkResourceCollection GetMediaServicesPrivateLinkResources();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountResource/<GetMediaServicesPrivateLinkResourceAsync>d__18")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<MediaServicesPrivateLinkResource>> GetMediaServicesPrivateLinkResourceAsync(string name, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<MediaServicesPrivateLinkResource> GetMediaServicesPrivateLinkResource(string name, CancellationToken cancellationToken);
    public virtual MediaServicesPrivateEndpointConnectionCollection GetMediaServicesPrivateEndpointConnections();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountResource/<GetMediaServicesPrivateEndpointConnectionAsync>d__21")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<MediaServicesPrivateEndpointConnectionResource>> GetMediaServicesPrivateEndpointConnectionAsync(string name, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<MediaServicesPrivateEndpointConnectionResource> GetMediaServicesPrivateEndpointConnection(string name, CancellationToken cancellationToken);
    public virtual MediaAssetCollection GetMediaAssets();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountResource/<GetMediaAssetAsync>d__24")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<MediaAssetResource>> GetMediaAssetAsync(string assetName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<MediaAssetResource> GetMediaAsset(string assetName, CancellationToken cancellationToken);
    public virtual ContentKeyPolicyCollection GetContentKeyPolicies();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountResource/<GetContentKeyPolicyAsync>d__27")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<ContentKeyPolicyResource>> GetContentKeyPolicyAsync(string contentKeyPolicyName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<ContentKeyPolicyResource> GetContentKeyPolicy(string contentKeyPolicyName, CancellationToken cancellationToken);
    public virtual MediaTransformCollection GetMediaTransforms();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountResource/<GetMediaTransformAsync>d__30")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<MediaTransformResource>> GetMediaTransformAsync(string transformName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<MediaTransformResource> GetMediaTransform(string transformName, CancellationToken cancellationToken);
    public virtual StreamingPolicyCollection GetStreamingPolicies();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountResource/<GetStreamingPolicyAsync>d__33")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<StreamingPolicyResource>> GetStreamingPolicyAsync(string streamingPolicyName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<StreamingPolicyResource> GetStreamingPolicy(string streamingPolicyName, CancellationToken cancellationToken);
    public virtual StreamingLocatorCollection GetStreamingLocators();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountResource/<GetStreamingLocatorAsync>d__36")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<StreamingLocatorResource>> GetStreamingLocatorAsync(string streamingLocatorName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<StreamingLocatorResource> GetStreamingLocator(string streamingLocatorName, CancellationToken cancellationToken);
    public virtual MediaLiveEventCollection GetMediaLiveEvents();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountResource/<GetMediaLiveEventAsync>d__39")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<MediaLiveEventResource>> GetMediaLiveEventAsync(string liveEventName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<MediaLiveEventResource> GetMediaLiveEvent(string liveEventName, CancellationToken cancellationToken);
    public virtual StreamingEndpointCollection GetStreamingEndpoints();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountResource/<GetStreamingEndpointAsync>d__42")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<StreamingEndpointResource>> GetStreamingEndpointAsync(string streamingEndpointName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<StreamingEndpointResource> GetStreamingEndpoint(string streamingEndpointName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountResource/<GetAsync>d__44")]
public virtual Task`1<Response`1<MediaServicesAccountResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<MediaServicesAccountResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountResource/<DeleteAsync>d__46")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountResource/<UpdateAsync>d__48")]
public virtual Task`1<ArmOperation`1<MediaServicesAccountResource>> UpdateAsync(WaitUntil waitUntil, MediaServicesAccountPatch patch, CancellationToken cancellationToken);
    public virtual ArmOperation`1<MediaServicesAccountResource> Update(WaitUntil waitUntil, MediaServicesAccountPatch patch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountResource/<SyncStorageKeysAsync>d__50")]
public virtual Task`1<Response> SyncStorageKeysAsync(SyncStorageKeysContent content, CancellationToken cancellationToken);
    public virtual Response SyncStorageKeys(SyncStorageKeysContent content, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountResource/<GetEdgePoliciesAsync>d__52")]
public virtual Task`1<Response`1<MediaServicesEdgePolicies>> GetEdgePoliciesAsync(EdgePoliciesRequestContent content, CancellationToken cancellationToken);
    public virtual Response`1<MediaServicesEdgePolicies> GetEdgePolicies(EdgePoliciesRequestContent content, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountResource/<AddTagAsync>d__54")]
public virtual Task`1<Response`1<MediaServicesAccountResource>> AddTagAsync(string key, string value, CancellationToken cancellationToken);
    public virtual Response`1<MediaServicesAccountResource> AddTag(string key, string value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountResource/<SetTagsAsync>d__56")]
public virtual Task`1<Response`1<MediaServicesAccountResource>> SetTagsAsync(IDictionary`2<string, string> tags, CancellationToken cancellationToken);
    public virtual Response`1<MediaServicesAccountResource> SetTags(IDictionary`2<string, string> tags, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesAccountResource/<RemoveTagAsync>d__58")]
public virtual Task`1<Response`1<MediaServicesAccountResource>> RemoveTagAsync(string key, CancellationToken cancellationToken);
    public virtual Response`1<MediaServicesAccountResource> RemoveTag(string key, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private MediaServicesAccountFilterCollection <GetMediaServicesAccountFilters>b__14_0(ArmClient client);
    [CompilerGeneratedAttribute]
private MediaServicesPrivateLinkResourceCollection <GetMediaServicesPrivateLinkResources>b__17_0(ArmClient client);
    [CompilerGeneratedAttribute]
private MediaServicesPrivateEndpointConnectionCollection <GetMediaServicesPrivateEndpointConnections>b__20_0(ArmClient client);
    [CompilerGeneratedAttribute]
private MediaAssetCollection <GetMediaAssets>b__23_0(ArmClient client);
    [CompilerGeneratedAttribute]
private ContentKeyPolicyCollection <GetContentKeyPolicies>b__26_0(ArmClient client);
    [CompilerGeneratedAttribute]
private MediaTransformCollection <GetMediaTransforms>b__29_0(ArmClient client);
    [CompilerGeneratedAttribute]
private StreamingPolicyCollection <GetStreamingPolicies>b__32_0(ArmClient client);
    [CompilerGeneratedAttribute]
private StreamingLocatorCollection <GetStreamingLocators>b__35_0(ArmClient client);
    [CompilerGeneratedAttribute]
private MediaLiveEventCollection <GetMediaLiveEvents>b__38_0(ArmClient client);
    [CompilerGeneratedAttribute]
private StreamingEndpointCollection <GetStreamingEndpoints>b__41_0(ArmClient client);
}
public class Azure.ResourceManager.Media.MediaServicesPrivateEndpointConnectionCollection : ArmCollection {
    private ClientDiagnostics _mediaServicesPrivateEndpointConnectionPrivateEndpointConnectionsClientDiagnostics;
    private PrivateEndpointConnectionsRestOperations _mediaServicesPrivateEndpointConnectionPrivateEndpointConnectionsRestClient;
    internal MediaServicesPrivateEndpointConnectionCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesPrivateEndpointConnectionCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<MediaServicesPrivateEndpointConnectionResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string name, MediaServicesPrivateEndpointConnectionData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<MediaServicesPrivateEndpointConnectionResource> CreateOrUpdate(WaitUntil waitUntil, string name, MediaServicesPrivateEndpointConnectionData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesPrivateEndpointConnectionCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<MediaServicesPrivateEndpointConnectionResource>> GetAsync(string name, CancellationToken cancellationToken);
    public virtual Response`1<MediaServicesPrivateEndpointConnectionResource> Get(string name, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<MediaServicesPrivateEndpointConnectionResource> GetAllAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<MediaServicesPrivateEndpointConnectionResource> GetAll(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesPrivateEndpointConnectionCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string name, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string name, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesPrivateEndpointConnectionCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<MediaServicesPrivateEndpointConnectionResource>> GetIfExistsAsync(string name, CancellationToken cancellationToken);
    public virtual NullableResponse`1<MediaServicesPrivateEndpointConnectionResource> GetIfExists(string name, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<MediaServicesPrivateEndpointConnectionResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Media.MediaServicesPrivateEndpointConnectionResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<MediaServicesPrivateEndpointConnectionResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Media.MediaServicesPrivateEndpointConnectionResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__FirstPageRequest|9_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private MediaServicesPrivateEndpointConnectionResource <GetAllAsync>b__9_1(JsonElement e);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__FirstPageRequest|10_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private MediaServicesPrivateEndpointConnectionResource <GetAll>b__10_1(JsonElement e);
}
public class Azure.ResourceManager.Media.MediaServicesPrivateEndpointConnectionData : ResourceData {
    [CompilerGeneratedAttribute]
private SubResource <PrivateEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private MediaPrivateLinkServiceConnectionState <ConnectionState>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MediaPrivateEndpointConnectionProvisioningState> <ProvisioningState>k__BackingField;
    internal SubResource PrivateEndpoint { get; internal set; }
    public ResourceIdentifier PrivateEndpointId { get; }
    public MediaPrivateLinkServiceConnectionState ConnectionState { get; public set; }
    public Nullable`1<MediaPrivateEndpointConnectionProvisioningState> ProvisioningState { get; }
    internal MediaServicesPrivateEndpointConnectionData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, SubResource privateEndpoint, MediaPrivateLinkServiceConnectionState connectionState, Nullable`1<MediaPrivateEndpointConnectionProvisioningState> provisioningState);
    [CompilerGeneratedAttribute]
internal SubResource get_PrivateEndpoint();
    [CompilerGeneratedAttribute]
internal void set_PrivateEndpoint(SubResource value);
    public ResourceIdentifier get_PrivateEndpointId();
    [CompilerGeneratedAttribute]
public MediaPrivateLinkServiceConnectionState get_ConnectionState();
    [CompilerGeneratedAttribute]
public void set_ConnectionState(MediaPrivateLinkServiceConnectionState value);
    [CompilerGeneratedAttribute]
public Nullable`1<MediaPrivateEndpointConnectionProvisioningState> get_ProvisioningState();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaServicesPrivateEndpointConnectionData DeserializeMediaServicesPrivateEndpointConnectionData(JsonElement element);
}
public class Azure.ResourceManager.Media.MediaServicesPrivateEndpointConnectionResource : ArmResource {
    private ClientDiagnostics _mediaServicesPrivateEndpointConnectionPrivateEndpointConnectionsClientDiagnostics;
    private PrivateEndpointConnectionsRestOperations _mediaServicesPrivateEndpointConnectionPrivateEndpointConnectionsRestClient;
    private MediaServicesPrivateEndpointConnectionData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public MediaServicesPrivateEndpointConnectionData Data { get; }
    internal MediaServicesPrivateEndpointConnectionResource(ArmClient client, MediaServicesPrivateEndpointConnectionData data);
    internal MediaServicesPrivateEndpointConnectionResource(ArmClient client, ResourceIdentifier id);
    private static MediaServicesPrivateEndpointConnectionResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string accountName, string name);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual MediaServicesPrivateEndpointConnectionData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesPrivateEndpointConnectionResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<MediaServicesPrivateEndpointConnectionResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<MediaServicesPrivateEndpointConnectionResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesPrivateEndpointConnectionResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesPrivateEndpointConnectionResource/<UpdateAsync>d__18")]
public virtual Task`1<ArmOperation`1<MediaServicesPrivateEndpointConnectionResource>> UpdateAsync(WaitUntil waitUntil, MediaServicesPrivateEndpointConnectionData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<MediaServicesPrivateEndpointConnectionResource> Update(WaitUntil waitUntil, MediaServicesPrivateEndpointConnectionData data, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Media.MediaServicesPrivateLinkResource : ArmResource {
    private ClientDiagnostics _mediaServicesPrivateLinkResourcePrivateLinkResourcesClientDiagnostics;
    private PrivateLinkResourcesRestOperations _mediaServicesPrivateLinkResourcePrivateLinkResourcesRestClient;
    private MediaServicesPrivateLinkResourceData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public MediaServicesPrivateLinkResourceData Data { get; }
    internal MediaServicesPrivateLinkResource(ArmClient client, MediaServicesPrivateLinkResourceData data);
    internal MediaServicesPrivateLinkResource(ArmClient client, ResourceIdentifier id);
    private static MediaServicesPrivateLinkResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string accountName, string name);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual MediaServicesPrivateLinkResourceData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesPrivateLinkResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<MediaServicesPrivateLinkResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<MediaServicesPrivateLinkResource> Get(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Media.MediaServicesPrivateLinkResourceCollection : ArmCollection {
    private ClientDiagnostics _mediaServicesPrivateLinkResourcePrivateLinkResourcesClientDiagnostics;
    private PrivateLinkResourcesRestOperations _mediaServicesPrivateLinkResourcePrivateLinkResourcesRestClient;
    internal MediaServicesPrivateLinkResourceCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesPrivateLinkResourceCollection/<GetAsync>d__5")]
public virtual Task`1<Response`1<MediaServicesPrivateLinkResource>> GetAsync(string name, CancellationToken cancellationToken);
    public virtual Response`1<MediaServicesPrivateLinkResource> Get(string name, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<MediaServicesPrivateLinkResource> GetAllAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<MediaServicesPrivateLinkResource> GetAll(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesPrivateLinkResourceCollection/<ExistsAsync>d__9")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string name, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string name, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaServicesPrivateLinkResourceCollection/<GetIfExistsAsync>d__11")]
public virtual Task`1<NullableResponse`1<MediaServicesPrivateLinkResource>> GetIfExistsAsync(string name, CancellationToken cancellationToken);
    public virtual NullableResponse`1<MediaServicesPrivateLinkResource> GetIfExists(string name, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<MediaServicesPrivateLinkResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Media.MediaServicesPrivateLinkResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<MediaServicesPrivateLinkResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Media.MediaServicesPrivateLinkResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__FirstPageRequest|7_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private MediaServicesPrivateLinkResource <GetAllAsync>b__7_1(JsonElement e);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__FirstPageRequest|8_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private MediaServicesPrivateLinkResource <GetAll>b__8_1(JsonElement e);
}
public class Azure.ResourceManager.Media.MediaServicesPrivateLinkResourceData : ResourceData {
    [CompilerGeneratedAttribute]
private string <GroupId>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <RequiredMembers>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <RequiredZoneNames>k__BackingField;
    public string GroupId { get; }
    public IReadOnlyList`1<string> RequiredMembers { get; }
    public IList`1<string> RequiredZoneNames { get; }
    internal MediaServicesPrivateLinkResourceData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string groupId, IReadOnlyList`1<string> requiredMembers, IList`1<string> requiredZoneNames);
    [CompilerGeneratedAttribute]
public string get_GroupId();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_RequiredMembers();
    [CompilerGeneratedAttribute]
public IList`1<string> get_RequiredZoneNames();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaServicesPrivateLinkResourceData DeserializeMediaServicesPrivateLinkResourceData(JsonElement element);
}
internal class Azure.ResourceManager.Media.MediaservicesRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public MediaservicesRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaservicesRestOperations/<ListAsync>d__6")]
public Task`1<Response`1<MediaServicesAccountListResult>> ListAsync(string subscriptionId, string resourceGroupName, CancellationToken cancellationToken);
    public Response`1<MediaServicesAccountListResult> List(string subscriptionId, string resourceGroupName, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string accountName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaservicesRestOperations/<GetAsync>d__9")]
public Task`1<Response`1<MediaServicesAccountData>> GetAsync(string subscriptionId, string resourceGroupName, string accountName, CancellationToken cancellationToken);
    public Response`1<MediaServicesAccountData> Get(string subscriptionId, string resourceGroupName, string accountName, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string accountName, MediaServicesAccountData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaservicesRestOperations/<CreateOrUpdateAsync>d__12")]
public Task`1<Response> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string accountName, MediaServicesAccountData data, CancellationToken cancellationToken);
    public Response CreateOrUpdate(string subscriptionId, string resourceGroupName, string accountName, MediaServicesAccountData data, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string accountName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaservicesRestOperations/<DeleteAsync>d__15")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string accountName, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string accountName, CancellationToken cancellationToken);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string accountName, MediaServicesAccountPatch patch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaservicesRestOperations/<UpdateAsync>d__18")]
public Task`1<Response> UpdateAsync(string subscriptionId, string resourceGroupName, string accountName, MediaServicesAccountPatch patch, CancellationToken cancellationToken);
    public Response Update(string subscriptionId, string resourceGroupName, string accountName, MediaServicesAccountPatch patch, CancellationToken cancellationToken);
    internal HttpMessage CreateSyncStorageKeysRequest(string subscriptionId, string resourceGroupName, string accountName, SyncStorageKeysContent content);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaservicesRestOperations/<SyncStorageKeysAsync>d__21")]
public Task`1<Response> SyncStorageKeysAsync(string subscriptionId, string resourceGroupName, string accountName, SyncStorageKeysContent content, CancellationToken cancellationToken);
    public Response SyncStorageKeys(string subscriptionId, string resourceGroupName, string accountName, SyncStorageKeysContent content, CancellationToken cancellationToken);
    internal HttpMessage CreateListEdgePoliciesRequest(string subscriptionId, string resourceGroupName, string accountName, EdgePoliciesRequestContent content);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaservicesRestOperations/<ListEdgePoliciesAsync>d__24")]
public Task`1<Response`1<MediaServicesEdgePolicies>> ListEdgePoliciesAsync(string subscriptionId, string resourceGroupName, string accountName, EdgePoliciesRequestContent content, CancellationToken cancellationToken);
    public Response`1<MediaServicesEdgePolicies> ListEdgePolicies(string subscriptionId, string resourceGroupName, string accountName, EdgePoliciesRequestContent content, CancellationToken cancellationToken);
    internal HttpMessage CreateListBySubscriptionRequest(string subscriptionId);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaservicesRestOperations/<ListBySubscriptionAsync>d__27")]
public Task`1<Response`1<MediaServicesAccountListResult>> ListBySubscriptionAsync(string subscriptionId, CancellationToken cancellationToken);
    public Response`1<MediaServicesAccountListResult> ListBySubscription(string subscriptionId, CancellationToken cancellationToken);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaservicesRestOperations/<ListNextPageAsync>d__30")]
public Task`1<Response`1<MediaServicesAccountListResult>> ListNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, CancellationToken cancellationToken);
    public Response`1<MediaServicesAccountListResult> ListNextPage(string nextLink, string subscriptionId, string resourceGroupName, CancellationToken cancellationToken);
    internal HttpMessage CreateListBySubscriptionNextPageRequest(string nextLink, string subscriptionId);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaservicesRestOperations/<ListBySubscriptionNextPageAsync>d__33")]
public Task`1<Response`1<MediaServicesAccountListResult>> ListBySubscriptionNextPageAsync(string nextLink, string subscriptionId, CancellationToken cancellationToken);
    public Response`1<MediaServicesAccountListResult> ListBySubscriptionNextPage(string nextLink, string subscriptionId, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Media.MediaTransformCollection : ArmCollection {
    private ClientDiagnostics _mediaTransformTransformsClientDiagnostics;
    private TransformsRestOperations _mediaTransformTransformsRestClient;
    internal MediaTransformCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaTransformCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<MediaTransformResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string transformName, MediaTransformData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<MediaTransformResource> CreateOrUpdate(WaitUntil waitUntil, string transformName, MediaTransformData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaTransformCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<MediaTransformResource>> GetAsync(string transformName, CancellationToken cancellationToken);
    public virtual Response`1<MediaTransformResource> Get(string transformName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<MediaTransformResource> GetAllAsync(string filter, string orderby, CancellationToken cancellationToken);
    public virtual Pageable`1<MediaTransformResource> GetAll(string filter, string orderby, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaTransformCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string transformName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string transformName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaTransformCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<MediaTransformResource>> GetIfExistsAsync(string transformName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<MediaTransformResource> GetIfExists(string transformName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<MediaTransformResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Media.MediaTransformResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<MediaTransformResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Media.MediaTransformResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Media.MediaTransformData : ResourceData {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <CreatedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <LastModifiedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<MediaTransformOutput> <Outputs>k__BackingField;
    public Nullable`1<DateTimeOffset> CreatedOn { get; }
    public string Description { get; public set; }
    public Nullable`1<DateTimeOffset> LastModifiedOn { get; }
    public IList`1<MediaTransformOutput> Outputs { get; }
    internal MediaTransformData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<DateTimeOffset> createdOn, string description, Nullable`1<DateTimeOffset> lastModifiedOn, IList`1<MediaTransformOutput> outputs);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_CreatedOn();
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_LastModifiedOn();
    [CompilerGeneratedAttribute]
public IList`1<MediaTransformOutput> get_Outputs();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaTransformData DeserializeMediaTransformData(JsonElement element);
}
public class Azure.ResourceManager.Media.MediaTransformResource : ArmResource {
    private ClientDiagnostics _mediaTransformTransformsClientDiagnostics;
    private TransformsRestOperations _mediaTransformTransformsRestClient;
    private MediaTransformData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public MediaTransformData Data { get; }
    internal MediaTransformResource(ArmClient client, MediaTransformData data);
    internal MediaTransformResource(ArmClient client, ResourceIdentifier id);
    private static MediaTransformResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string accountName, string transformName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual MediaTransformData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    public virtual MediaJobCollection GetMediaJobs();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaTransformResource/<GetMediaJobAsync>d__15")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<MediaJobResource>> GetMediaJobAsync(string jobName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<MediaJobResource> GetMediaJob(string jobName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaTransformResource/<GetAsync>d__17")]
public virtual Task`1<Response`1<MediaTransformResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<MediaTransformResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaTransformResource/<DeleteAsync>d__19")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.MediaTransformResource/<UpdateAsync>d__21")]
public virtual Task`1<Response`1<MediaTransformResource>> UpdateAsync(MediaTransformData data, CancellationToken cancellationToken);
    public virtual Response`1<MediaTransformResource> Update(MediaTransformData data, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private MediaJobCollection <GetMediaJobs>b__14_0(ArmClient client);
}
public class Azure.ResourceManager.Media.Mocking.MockableMediaArmClient : ArmResource {
    internal MockableMediaArmClient(ArmClient client, ResourceIdentifier id);
    internal MockableMediaArmClient(ArmClient client);
    private string GetApiVersionOrNull(ResourceType resourceType);
    public virtual MediaServicesAccountFilterResource GetMediaServicesAccountFilterResource(ResourceIdentifier id);
    public virtual MediaServicesAccountResource GetMediaServicesAccountResource(ResourceIdentifier id);
    public virtual MediaServicesPrivateLinkResource GetMediaServicesPrivateLinkResource(ResourceIdentifier id);
    public virtual MediaServicesPrivateEndpointConnectionResource GetMediaServicesPrivateEndpointConnectionResource(ResourceIdentifier id);
    public virtual MediaAssetResource GetMediaAssetResource(ResourceIdentifier id);
    public virtual MediaAssetFilterResource GetMediaAssetFilterResource(ResourceIdentifier id);
    public virtual MediaAssetTrackResource GetMediaAssetTrackResource(ResourceIdentifier id);
    public virtual ContentKeyPolicyResource GetContentKeyPolicyResource(ResourceIdentifier id);
    public virtual MediaTransformResource GetMediaTransformResource(ResourceIdentifier id);
    public virtual MediaJobResource GetMediaJobResource(ResourceIdentifier id);
    public virtual StreamingPolicyResource GetStreamingPolicyResource(ResourceIdentifier id);
    public virtual StreamingLocatorResource GetStreamingLocatorResource(ResourceIdentifier id);
    public virtual MediaLiveEventResource GetMediaLiveEventResource(ResourceIdentifier id);
    public virtual MediaLiveOutputResource GetMediaLiveOutputResource(ResourceIdentifier id);
    public virtual StreamingEndpointResource GetStreamingEndpointResource(ResourceIdentifier id);
}
public class Azure.ResourceManager.Media.Mocking.MockableMediaResourceGroupResource : ArmResource {
    internal MockableMediaResourceGroupResource(ArmClient client, ResourceIdentifier id);
    private string GetApiVersionOrNull(ResourceType resourceType);
    public virtual MediaServicesAccountCollection GetMediaServicesAccounts();
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.Mocking.MockableMediaResourceGroupResource/<GetMediaServicesAccountAsync>d__4")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<MediaServicesAccountResource>> GetMediaServicesAccountAsync(string accountName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<MediaServicesAccountResource> GetMediaServicesAccount(string accountName, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private MediaServicesAccountCollection <GetMediaServicesAccounts>b__3_0(ArmClient client);
}
public class Azure.ResourceManager.Media.Mocking.MockableMediaSubscriptionResource : ArmResource {
    private ClientDiagnostics _mediaServicesAccountMediaservicesClientDiagnostics;
    private MediaservicesRestOperations _mediaServicesAccountMediaservicesRestClient;
    private ClientDiagnostics _locationsClientDiagnostics;
    private LocationsRestOperations _locationsRestClient;
    private ClientDiagnostics MediaServicesAccountMediaservicesClientDiagnostics { get; }
    private MediaservicesRestOperations MediaServicesAccountMediaservicesRestClient { get; }
    private ClientDiagnostics LocationsClientDiagnostics { get; }
    private LocationsRestOperations LocationsRestClient { get; }
    internal MockableMediaSubscriptionResource(ArmClient client, ResourceIdentifier id);
    private ClientDiagnostics get_MediaServicesAccountMediaservicesClientDiagnostics();
    private MediaservicesRestOperations get_MediaServicesAccountMediaservicesRestClient();
    private ClientDiagnostics get_LocationsClientDiagnostics();
    private LocationsRestOperations get_LocationsRestClient();
    private string GetApiVersionOrNull(ResourceType resourceType);
    public virtual AsyncPageable`1<MediaServicesAccountResource> GetMediaServicesAccountsAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<MediaServicesAccountResource> GetMediaServicesAccounts(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.Mocking.MockableMediaSubscriptionResource/<CheckMediaServicesNameAvailabilityAsync>d__17")]
public virtual Task`1<Response`1<MediaServicesNameAvailabilityResult>> CheckMediaServicesNameAvailabilityAsync(AzureLocation locationName, MediaServicesNameAvailabilityContent content, CancellationToken cancellationToken);
    public virtual Response`1<MediaServicesNameAvailabilityResult> CheckMediaServicesNameAvailability(AzureLocation locationName, MediaServicesNameAvailabilityContent content, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private HttpMessage <GetMediaServicesAccountsAsync>g__FirstPageRequest|15_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetMediaServicesAccountsAsync>g__NextPageRequest|15_1(Nullable`1<int> pageSizeHint, string nextLink);
    [CompilerGeneratedAttribute]
private MediaServicesAccountResource <GetMediaServicesAccountsAsync>b__15_2(JsonElement e);
    [CompilerGeneratedAttribute]
private HttpMessage <GetMediaServicesAccounts>g__FirstPageRequest|16_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetMediaServicesAccounts>g__NextPageRequest|16_1(Nullable`1<int> pageSizeHint, string nextLink);
    [CompilerGeneratedAttribute]
private MediaServicesAccountResource <GetMediaServicesAccounts>b__16_2(JsonElement e);
}
public class Azure.ResourceManager.Media.Models.AacAudio : MediaAudioBase {
    [CompilerGeneratedAttribute]
private Nullable`1<AacAudioProfile> <Profile>k__BackingField;
    public Nullable`1<AacAudioProfile> Profile { get; public set; }
    internal AacAudio(string odataType, string label, Nullable`1<int> channels, Nullable`1<int> samplingRate, Nullable`1<int> bitrate, Nullable`1<AacAudioProfile> profile);
    [CompilerGeneratedAttribute]
public Nullable`1<AacAudioProfile> get_Profile();
    [CompilerGeneratedAttribute]
public void set_Profile(Nullable`1<AacAudioProfile> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static AacAudio DeserializeAacAudio(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.AacAudioProfile : ValueType {
    private string _value;
    private static string AacLcValue;
    private static string HEAacV1Value;
    private static string HEAacV2Value;
    [CompilerGeneratedAttribute]
private static AacAudioProfile <AacLc>k__BackingField;
    [CompilerGeneratedAttribute]
private static AacAudioProfile <HEAacV1>k__BackingField;
    [CompilerGeneratedAttribute]
private static AacAudioProfile <HEAacV2>k__BackingField;
    public static AacAudioProfile AacLc { get; }
    public static AacAudioProfile HEAacV1 { get; }
    public static AacAudioProfile HEAacV2 { get; }
    public AacAudioProfile(string value);
    private static AacAudioProfile();
    [CompilerGeneratedAttribute]
public static AacAudioProfile get_AacLc();
    [CompilerGeneratedAttribute]
public static AacAudioProfile get_HEAacV1();
    [CompilerGeneratedAttribute]
public static AacAudioProfile get_HEAacV2();
    public static bool op_Equality(AacAudioProfile left, AacAudioProfile right);
    public static bool op_Inequality(AacAudioProfile left, AacAudioProfile right);
    public static AacAudioProfile op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(AacAudioProfile other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.AbsoluteClipTime : ClipTime {
    [CompilerGeneratedAttribute]
private TimeSpan <Time>k__BackingField;
    public TimeSpan Time { get; public set; }
    public AbsoluteClipTime(TimeSpan time);
    internal AbsoluteClipTime(string odataType, TimeSpan time);
    [CompilerGeneratedAttribute]
public TimeSpan get_Time();
    [CompilerGeneratedAttribute]
public void set_Time(TimeSpan value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static AbsoluteClipTime DeserializeAbsoluteClipTime(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.AccountEncryption : object {
    [CompilerGeneratedAttribute]
private AccountEncryptionKeyType <KeyType>k__BackingField;
    [CompilerGeneratedAttribute]
private KeyVaultProperties <KeyVaultProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceIdentity <Identity>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    public AccountEncryptionKeyType KeyType { get; public set; }
    public KeyVaultProperties KeyVaultProperties { get; public set; }
    public ResourceIdentity Identity { get; public set; }
    public string Status { get; }
    public AccountEncryption(AccountEncryptionKeyType keyType);
    internal AccountEncryption(AccountEncryptionKeyType keyType, KeyVaultProperties keyVaultProperties, ResourceIdentity identity, string status);
    [CompilerGeneratedAttribute]
public AccountEncryptionKeyType get_KeyType();
    [CompilerGeneratedAttribute]
public void set_KeyType(AccountEncryptionKeyType value);
    [CompilerGeneratedAttribute]
public KeyVaultProperties get_KeyVaultProperties();
    [CompilerGeneratedAttribute]
public void set_KeyVaultProperties(KeyVaultProperties value);
    [CompilerGeneratedAttribute]
public ResourceIdentity get_Identity();
    [CompilerGeneratedAttribute]
public void set_Identity(ResourceIdentity value);
    [CompilerGeneratedAttribute]
public string get_Status();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static AccountEncryption DeserializeAccountEncryption(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.AccountEncryptionKeyType : ValueType {
    private string _value;
    private static string SystemKeyValue;
    private static string CustomerKeyValue;
    [CompilerGeneratedAttribute]
private static AccountEncryptionKeyType <SystemKey>k__BackingField;
    [CompilerGeneratedAttribute]
private static AccountEncryptionKeyType <CustomerKey>k__BackingField;
    public static AccountEncryptionKeyType SystemKey { get; }
    public static AccountEncryptionKeyType CustomerKey { get; }
    public AccountEncryptionKeyType(string value);
    private static AccountEncryptionKeyType();
    [CompilerGeneratedAttribute]
public static AccountEncryptionKeyType get_SystemKey();
    [CompilerGeneratedAttribute]
public static AccountEncryptionKeyType get_CustomerKey();
    public static bool op_Equality(AccountEncryptionKeyType left, AccountEncryptionKeyType right);
    public static bool op_Inequality(AccountEncryptionKeyType left, AccountEncryptionKeyType right);
    public static AccountEncryptionKeyType op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(AccountEncryptionKeyType other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
internal class Azure.ResourceManager.Media.Models.AkamaiAccessControl : object {
    [CompilerGeneratedAttribute]
private IList`1<AkamaiSignatureHeaderAuthenticationKey> <AkamaiSignatureHeaderAuthenticationKeyList>k__BackingField;
    public IList`1<AkamaiSignatureHeaderAuthenticationKey> AkamaiSignatureHeaderAuthenticationKeyList { get; }
    internal AkamaiAccessControl(IList`1<AkamaiSignatureHeaderAuthenticationKey> akamaiSignatureHeaderAuthenticationKeyList);
    [CompilerGeneratedAttribute]
public IList`1<AkamaiSignatureHeaderAuthenticationKey> get_AkamaiSignatureHeaderAuthenticationKeyList();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static AkamaiAccessControl DeserializeAkamaiAccessControl(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.AkamaiSignatureHeaderAuthenticationKey : object {
    [CompilerGeneratedAttribute]
private string <Identifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Base64Key>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <ExpireOn>k__BackingField;
    public string Identifier { get; public set; }
    public string Base64Key { get; public set; }
    public Nullable`1<DateTimeOffset> ExpireOn { get; public set; }
    internal AkamaiSignatureHeaderAuthenticationKey(string identifier, string base64Key, Nullable`1<DateTimeOffset> expireOn);
    [CompilerGeneratedAttribute]
public string get_Identifier();
    [CompilerGeneratedAttribute]
public void set_Identifier(string value);
    [CompilerGeneratedAttribute]
public string get_Base64Key();
    [CompilerGeneratedAttribute]
public void set_Base64Key(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_ExpireOn();
    [CompilerGeneratedAttribute]
public void set_ExpireOn(Nullable`1<DateTimeOffset> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static AkamaiSignatureHeaderAuthenticationKey DeserializeAkamaiSignatureHeaderAuthenticationKey(JsonElement element);
}
public static class Azure.ResourceManager.Media.Models.ArmMediaModelFactory : object {
    public static MediaServicesAccountFilterData MediaServicesAccountFilterData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, PresentationTimeRange presentationTimeRange, Nullable`1<int> firstQualityBitrate, IEnumerable`1<FilterTrackSelection> tracks);
    public static MediaServicesAccountData MediaServicesAccountData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary`2<string, string> tags, AzureLocation location, ManagedServiceIdentity identity, Nullable`1<Guid> mediaServicesAccountId, IEnumerable`1<MediaServicesStorageAccount> storageAccounts, Nullable`1<MediaStorageAuthentication> storageAuthentication, AccountEncryption encryption, MediaAccessControl keyDeliveryAccessControl, Nullable`1<MediaServicesPublicNetworkAccess> publicNetworkAccess, Nullable`1<MediaServicesProvisioningState> provisioningState, IEnumerable`1<MediaServicesPrivateEndpointConnectionData> privateEndpointConnections, Nullable`1<MediaServicesMinimumTlsVersion> minimumTlsVersion);
    public static MediaServicesStorageAccount MediaServicesStorageAccount(ResourceIdentifier id, MediaServicesStorageAccountType accountType, ResourceIdentity identity, string status);
    public static AccountEncryption AccountEncryption(AccountEncryptionKeyType keyType, KeyVaultProperties keyVaultProperties, ResourceIdentity identity, string status);
    public static KeyVaultProperties KeyVaultProperties(string keyIdentifier, string currentKeyIdentifier);
    public static MediaServicesPrivateEndpointConnectionData MediaServicesPrivateEndpointConnectionData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, ResourceIdentifier privateEndpointId, MediaPrivateLinkServiceConnectionState connectionState, Nullable`1<MediaPrivateEndpointConnectionProvisioningState> provisioningState);
    public static MediaServicesEdgePolicies MediaServicesEdgePolicies(EdgeUsageDataCollectionPolicy usageDataCollectionPolicy);
    public static EdgeUsageDataCollectionPolicy EdgeUsageDataCollectionPolicy(string dataCollectionFrequency, string dataReportingFrequency, Nullable`1<TimeSpan> maxAllowedUnreportedUsageDuration, EdgeUsageDataEventHub eventHubDetails);
    public static EdgeUsageDataEventHub EdgeUsageDataEventHub(string name, string namespace, string token);
    public static MediaServicesPrivateLinkResourceData MediaServicesPrivateLinkResourceData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string groupId, IEnumerable`1<string> requiredMembers, IEnumerable`1<string> requiredZoneNames);
    public static MediaServicesNameAvailabilityResult MediaServicesNameAvailabilityResult(bool isNameAvailable, string reason, string message);
    public static MediaAssetData MediaAssetData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<Guid> assetId, Nullable`1<DateTimeOffset> createdOn, Nullable`1<DateTimeOffset> lastModifiedOn, string alternateId, string description, string container, string storageAccountName, Nullable`1<MediaAssetStorageEncryptionFormat> storageEncryptionFormat, string encryptionScope);
    public static StorageEncryptedAssetDecryptionInfo StorageEncryptedAssetDecryptionInfo(Byte[] key, IEnumerable`1<MediaAssetFileEncryptionMetadata> assetFileEncryptionMetadata);
    public static MediaAssetFileEncryptionMetadata MediaAssetFileEncryptionMetadata(string initializationVector, string assetFileName, Guid assetFileId);
    public static MediaAssetStreamingLocator MediaAssetStreamingLocator(string name, string assetName, Nullable`1<DateTimeOffset> createdOn, Nullable`1<DateTimeOffset> startOn, Nullable`1<DateTimeOffset> endOn, Nullable`1<Guid> streamingLocatorId, string streamingPolicyName, string defaultContentKeyPolicyName);
    public static MediaAssetFilterData MediaAssetFilterData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, PresentationTimeRange presentationTimeRange, Nullable`1<int> firstQualityBitrate, IEnumerable`1<FilterTrackSelection> tracks);
    public static MediaAssetTrackData MediaAssetTrackData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, MediaAssetTrackBase track, Nullable`1<MediaServicesProvisioningState> provisioningState);
    public static ContentKeyPolicyData ContentKeyPolicyData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<Guid> policyId, Nullable`1<DateTimeOffset> createdOn, Nullable`1<DateTimeOffset> lastModifiedOn, string description, IEnumerable`1<ContentKeyPolicyOption> options);
    public static ContentKeyPolicyProperties ContentKeyPolicyProperties(Nullable`1<Guid> policyId, Nullable`1<DateTimeOffset> createdOn, Nullable`1<DateTimeOffset> lastModifiedOn, string description, IEnumerable`1<ContentKeyPolicyOption> options);
    public static ContentKeyPolicyOption ContentKeyPolicyOption(Nullable`1<Guid> policyOptionId, string name, ContentKeyPolicyConfiguration configuration, ContentKeyPolicyRestriction restriction);
    public static MediaTransformData MediaTransformData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<DateTimeOffset> createdOn, string description, Nullable`1<DateTimeOffset> lastModifiedOn, IEnumerable`1<MediaTransformOutput> outputs);
    public static MediaJobData MediaJobData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<DateTimeOffset> createdOn, Nullable`1<MediaJobState> state, string description, MediaJobInputBasicProperties input, Nullable`1<DateTimeOffset> lastModifiedOn, IEnumerable`1<MediaJobOutput> outputs, Nullable`1<MediaJobPriority> priority, IDictionary`2<string, string> correlationData, Nullable`1<DateTimeOffset> startOn, Nullable`1<DateTimeOffset> endOn);
    public static MediaJobOutput MediaJobOutput(string odataType, MediaJobError error, MediaTransformPreset presetOverride, Nullable`1<MediaJobState> state, Nullable`1<int> progress, string label, Nullable`1<DateTimeOffset> startOn, Nullable`1<DateTimeOffset> endOn);
    public static MediaJobError MediaJobError(Nullable`1<MediaJobErrorCode> code, string message, Nullable`1<MediaJobErrorCategory> category, Nullable`1<MediaJobRetry> retry, IEnumerable`1<MediaJobErrorDetail> details);
    public static MediaJobErrorDetail MediaJobErrorDetail(string code, string message);
    public static StreamingPolicyData StreamingPolicyData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<DateTimeOffset> createdOn, string defaultContentKeyPolicyName, EnvelopeEncryption envelopeEncryption, CommonEncryptionCenc commonEncryptionCenc, CommonEncryptionCbcs commonEncryptionCbcs, MediaEnabledProtocols noEncryptionEnabledProtocols);
    public static StreamingLocatorData StreamingLocatorData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string assetName, Nullable`1<DateTimeOffset> createdOn, Nullable`1<DateTimeOffset> startOn, Nullable`1<DateTimeOffset> endOn, Nullable`1<Guid> streamingLocatorId, string streamingPolicyName, string defaultContentKeyPolicyName, IEnumerable`1<StreamingLocatorContentKey> contentKeys, string alternativeMediaId, IEnumerable`1<string> filters);
    public static StreamingLocatorContentKey StreamingLocatorContentKey(Guid id, Nullable`1<StreamingLocatorContentKeyType> keyType, string labelReferenceInStreamingPolicy, string value, string policyName, IEnumerable`1<MediaTrackSelection> tracks);
    public static StreamingPathsResult StreamingPathsResult(IEnumerable`1<StreamingPath> streamingPaths, IEnumerable`1<string> downloadPaths);
    public static StreamingPath StreamingPath(StreamingPolicyStreamingProtocol streamingProtocol, StreamingPathEncryptionScheme encryptionScheme, IEnumerable`1<string> paths);
    public static MediaLiveEventData MediaLiveEventData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary`2<string, string> tags, AzureLocation location, string description, LiveEventInput input, LiveEventPreview preview, LiveEventEncoding encoding, IEnumerable`1<LiveEventTranscription> transcriptions, string provisioningState, Nullable`1<LiveEventResourceState> resourceState, CrossSiteAccessPolicies crossSiteAccessPolicies, Nullable`1<bool> useStaticHostname, string hostnamePrefix, IEnumerable`1<StreamOptionsFlag> streamOptions, Nullable`1<DateTimeOffset> createdOn, Nullable`1<DateTimeOffset> lastModifiedOn);
    public static MediaLiveOutputData MediaLiveOutputData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string description, string assetName, Nullable`1<TimeSpan> archiveWindowLength, Nullable`1<TimeSpan> rewindWindowLength, string manifestName, Nullable`1<int> hlsFragmentsPerTsSegment, Nullable`1<long> outputSnapTime, Nullable`1<DateTimeOffset> createdOn, Nullable`1<DateTimeOffset> lastModifiedOn, string provisioningState, Nullable`1<LiveOutputResourceState> resourceState);
    public static StreamingEndpointData StreamingEndpointData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary`2<string, string> tags, AzureLocation location, StreamingEndpointCurrentSku sku, string description, Nullable`1<int> scaleUnits, string availabilitySetName, StreamingEndpointAccessControl accessControl, Nullable`1<long> maxCacheAge, IEnumerable`1<string> customHostNames, string hostName, Nullable`1<bool> isCdnEnabled, string cdnProvider, string cdnProfile, string provisioningState, Nullable`1<StreamingEndpointResourceState> resourceState, CrossSiteAccessPolicies crossSiteAccessPolicies, Nullable`1<DateTimeOffset> freeTrialEndOn, Nullable`1<DateTimeOffset> createdOn, Nullable`1<DateTimeOffset> lastModifiedOn);
    public static StreamingEndpointCurrentSku StreamingEndpointCurrentSku(string name, Nullable`1<int> capacity);
    public static StreamingEndpointSkuInfo StreamingEndpointSkuInfo(Nullable`1<ResourceType> resourceType, StreamingEndpointCapacity capacity, string skuName);
    public static StreamingEndpointCapacity StreamingEndpointCapacity(string scaleType, Nullable`1<int> default, Nullable`1<int> minimum, Nullable`1<int> maximum);
    public static AudioTrack AudioTrack(string fileName, string displayName, string languageCode, HlsSettings hlsSettings, string dashRole, Nullable`1<int> mpeg4TrackId, Nullable`1<int> bitRate);
    public static TextTrack TextTrack(string fileName, string displayName, string languageCode, Nullable`1<PlayerVisibility> playerVisibility, HlsSettings hlsSettings);
    public static MediaJobOutputAsset MediaJobOutputAsset(MediaJobError error, MediaTransformPreset presetOverride, Nullable`1<MediaJobState> state, Nullable`1<int> progress, string label, Nullable`1<DateTimeOffset> startOn, Nullable`1<DateTimeOffset> endOn, string assetName);
}
internal class Azure.ResourceManager.Media.Models.AssetContainerSas : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<Uri> <AssetContainerSasUris>k__BackingField;
    public IReadOnlyList`1<Uri> AssetContainerSasUris { get; }
    internal AssetContainerSas(IReadOnlyList`1<Uri> assetContainerSasUris);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<Uri> get_AssetContainerSasUris();
    internal static AssetContainerSas DeserializeAssetContainerSas(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.AudioAnalysisMode : ValueType {
    private string _value;
    private static string StandardValue;
    private static string BasicValue;
    [CompilerGeneratedAttribute]
private static AudioAnalysisMode <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static AudioAnalysisMode <Basic>k__BackingField;
    public static AudioAnalysisMode Standard { get; }
    public static AudioAnalysisMode Basic { get; }
    public AudioAnalysisMode(string value);
    private static AudioAnalysisMode();
    [CompilerGeneratedAttribute]
public static AudioAnalysisMode get_Standard();
    [CompilerGeneratedAttribute]
public static AudioAnalysisMode get_Basic();
    public static bool op_Equality(AudioAnalysisMode left, AudioAnalysisMode right);
    public static bool op_Inequality(AudioAnalysisMode left, AudioAnalysisMode right);
    public static AudioAnalysisMode op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(AudioAnalysisMode other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.AudioAnalyzerPreset : MediaTransformPreset {
    [CompilerGeneratedAttribute]
private string <AudioLanguage>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<AudioAnalysisMode> <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <ExperimentalOptions>k__BackingField;
    public string AudioLanguage { get; public set; }
    public Nullable`1<AudioAnalysisMode> Mode { get; public set; }
    public IDictionary`2<string, string> ExperimentalOptions { get; }
    internal AudioAnalyzerPreset(string odataType, string audioLanguage, Nullable`1<AudioAnalysisMode> mode, IDictionary`2<string, string> experimentalOptions);
    [CompilerGeneratedAttribute]
public string get_AudioLanguage();
    [CompilerGeneratedAttribute]
public void set_AudioLanguage(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<AudioAnalysisMode> get_Mode();
    [CompilerGeneratedAttribute]
public void set_Mode(Nullable`1<AudioAnalysisMode> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_ExperimentalOptions();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static AudioAnalyzerPreset DeserializeAudioAnalyzerPreset(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.AudioOverlay : MediaOverlayBase {
    public AudioOverlay(string inputLabel);
    internal AudioOverlay(string odataType, string inputLabel, Nullable`1<TimeSpan> start, Nullable`1<TimeSpan> end, Nullable`1<TimeSpan> fadeInDuration, Nullable`1<TimeSpan> fadeOutDuration, Nullable`1<double> audioGainLevel);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static AudioOverlay DeserializeAudioOverlay(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.AudioTrack : MediaAssetTrackBase {
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LanguageCode>k__BackingField;
    [CompilerGeneratedAttribute]
private HlsSettings <HlsSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private TrackDashSettings <DashSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Mpeg4TrackId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <BitRate>k__BackingField;
    public string FileName { get; public set; }
    public string DisplayName { get; public set; }
    public string LanguageCode { get; public set; }
    public HlsSettings HlsSettings { get; public set; }
    internal TrackDashSettings DashSettings { get; internal set; }
    public string DashRole { get; public set; }
    public Nullable`1<int> Mpeg4TrackId { get; public set; }
    public Nullable`1<int> BitRate { get; }
    internal AudioTrack(string odataType, string fileName, string displayName, string languageCode, HlsSettings hlsSettings, TrackDashSettings dashSettings, Nullable`1<int> mpeg4TrackId, Nullable`1<int> bitRate);
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public void set_FileName(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_LanguageCode();
    [CompilerGeneratedAttribute]
public void set_LanguageCode(string value);
    [CompilerGeneratedAttribute]
public HlsSettings get_HlsSettings();
    [CompilerGeneratedAttribute]
public void set_HlsSettings(HlsSettings value);
    [CompilerGeneratedAttribute]
internal TrackDashSettings get_DashSettings();
    [CompilerGeneratedAttribute]
internal void set_DashSettings(TrackDashSettings value);
    public string get_DashRole();
    public void set_DashRole(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Mpeg4TrackId();
    [CompilerGeneratedAttribute]
public void set_Mpeg4TrackId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_BitRate();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static AudioTrack DeserializeAudioTrack(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.AudioTrackDescriptor : TrackDescriptor {
    [CompilerGeneratedAttribute]
private Nullable`1<ChannelMapping> <ChannelMapping>k__BackingField;
    public Nullable`1<ChannelMapping> ChannelMapping { get; public set; }
    internal AudioTrackDescriptor(string odataType, Nullable`1<ChannelMapping> channelMapping);
    [CompilerGeneratedAttribute]
public Nullable`1<ChannelMapping> get_ChannelMapping();
    [CompilerGeneratedAttribute]
public void set_ChannelMapping(Nullable`1<ChannelMapping> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static AudioTrackDescriptor DeserializeAudioTrackDescriptor(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.BuiltInStandardEncoderPreset : MediaTransformPreset {
    [CompilerGeneratedAttribute]
private EncoderPresetConfigurations <Configurations>k__BackingField;
    [CompilerGeneratedAttribute]
private EncoderNamedPreset <PresetName>k__BackingField;
    public EncoderPresetConfigurations Configurations { get; public set; }
    public EncoderNamedPreset PresetName { get; public set; }
    public BuiltInStandardEncoderPreset(EncoderNamedPreset presetName);
    internal BuiltInStandardEncoderPreset(string odataType, EncoderPresetConfigurations configurations, EncoderNamedPreset presetName);
    [CompilerGeneratedAttribute]
public EncoderPresetConfigurations get_Configurations();
    [CompilerGeneratedAttribute]
public void set_Configurations(EncoderPresetConfigurations value);
    [CompilerGeneratedAttribute]
public EncoderNamedPreset get_PresetName();
    [CompilerGeneratedAttribute]
public void set_PresetName(EncoderNamedPreset value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static BuiltInStandardEncoderPreset DeserializeBuiltInStandardEncoderPreset(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.CbcsDrmConfiguration : object {
    [CompilerGeneratedAttribute]
private StreamingPolicyFairPlayConfiguration <FairPlay>k__BackingField;
    [CompilerGeneratedAttribute]
private StreamingPolicyPlayReadyConfiguration <PlayReady>k__BackingField;
    [CompilerGeneratedAttribute]
private StreamingPolicyWidevineConfiguration <Widevine>k__BackingField;
    public StreamingPolicyFairPlayConfiguration FairPlay { get; public set; }
    public StreamingPolicyPlayReadyConfiguration PlayReady { get; public set; }
    internal StreamingPolicyWidevineConfiguration Widevine { get; internal set; }
    public string WidevineCustomLicenseAcquisitionUriTemplate { get; public set; }
    internal CbcsDrmConfiguration(StreamingPolicyFairPlayConfiguration fairPlay, StreamingPolicyPlayReadyConfiguration playReady, StreamingPolicyWidevineConfiguration widevine);
    [CompilerGeneratedAttribute]
public StreamingPolicyFairPlayConfiguration get_FairPlay();
    [CompilerGeneratedAttribute]
public void set_FairPlay(StreamingPolicyFairPlayConfiguration value);
    [CompilerGeneratedAttribute]
public StreamingPolicyPlayReadyConfiguration get_PlayReady();
    [CompilerGeneratedAttribute]
public void set_PlayReady(StreamingPolicyPlayReadyConfiguration value);
    [CompilerGeneratedAttribute]
internal StreamingPolicyWidevineConfiguration get_Widevine();
    [CompilerGeneratedAttribute]
internal void set_Widevine(StreamingPolicyWidevineConfiguration value);
    public string get_WidevineCustomLicenseAcquisitionUriTemplate();
    public void set_WidevineCustomLicenseAcquisitionUriTemplate(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static CbcsDrmConfiguration DeserializeCbcsDrmConfiguration(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.CencDrmConfiguration : object {
    [CompilerGeneratedAttribute]
private StreamingPolicyPlayReadyConfiguration <PlayReady>k__BackingField;
    [CompilerGeneratedAttribute]
private StreamingPolicyWidevineConfiguration <Widevine>k__BackingField;
    public StreamingPolicyPlayReadyConfiguration PlayReady { get; public set; }
    internal StreamingPolicyWidevineConfiguration Widevine { get; internal set; }
    public string WidevineCustomLicenseAcquisitionUriTemplate { get; public set; }
    internal CencDrmConfiguration(StreamingPolicyPlayReadyConfiguration playReady, StreamingPolicyWidevineConfiguration widevine);
    [CompilerGeneratedAttribute]
public StreamingPolicyPlayReadyConfiguration get_PlayReady();
    [CompilerGeneratedAttribute]
public void set_PlayReady(StreamingPolicyPlayReadyConfiguration value);
    [CompilerGeneratedAttribute]
internal StreamingPolicyWidevineConfiguration get_Widevine();
    [CompilerGeneratedAttribute]
internal void set_Widevine(StreamingPolicyWidevineConfiguration value);
    public string get_WidevineCustomLicenseAcquisitionUriTemplate();
    public void set_WidevineCustomLicenseAcquisitionUriTemplate(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static CencDrmConfiguration DeserializeCencDrmConfiguration(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.ChannelMapping : ValueType {
    private string _value;
    private static string FrontLeftValue;
    private static string FrontRightValue;
    private static string CenterValue;
    private static string LowFrequencyEffectsValue;
    private static string BackLeftValue;
    private static string BackRightValue;
    private static string StereoLeftValue;
    private static string StereoRightValue;
    [CompilerGeneratedAttribute]
private static ChannelMapping <FrontLeft>k__BackingField;
    [CompilerGeneratedAttribute]
private static ChannelMapping <FrontRight>k__BackingField;
    [CompilerGeneratedAttribute]
private static ChannelMapping <Center>k__BackingField;
    [CompilerGeneratedAttribute]
private static ChannelMapping <LowFrequencyEffects>k__BackingField;
    [CompilerGeneratedAttribute]
private static ChannelMapping <BackLeft>k__BackingField;
    [CompilerGeneratedAttribute]
private static ChannelMapping <BackRight>k__BackingField;
    [CompilerGeneratedAttribute]
private static ChannelMapping <StereoLeft>k__BackingField;
    [CompilerGeneratedAttribute]
private static ChannelMapping <StereoRight>k__BackingField;
    public static ChannelMapping FrontLeft { get; }
    public static ChannelMapping FrontRight { get; }
    public static ChannelMapping Center { get; }
    public static ChannelMapping LowFrequencyEffects { get; }
    public static ChannelMapping BackLeft { get; }
    public static ChannelMapping BackRight { get; }
    public static ChannelMapping StereoLeft { get; }
    public static ChannelMapping StereoRight { get; }
    public ChannelMapping(string value);
    private static ChannelMapping();
    [CompilerGeneratedAttribute]
public static ChannelMapping get_FrontLeft();
    [CompilerGeneratedAttribute]
public static ChannelMapping get_FrontRight();
    [CompilerGeneratedAttribute]
public static ChannelMapping get_Center();
    [CompilerGeneratedAttribute]
public static ChannelMapping get_LowFrequencyEffects();
    [CompilerGeneratedAttribute]
public static ChannelMapping get_BackLeft();
    [CompilerGeneratedAttribute]
public static ChannelMapping get_BackRight();
    [CompilerGeneratedAttribute]
public static ChannelMapping get_StereoLeft();
    [CompilerGeneratedAttribute]
public static ChannelMapping get_StereoRight();
    public static bool op_Equality(ChannelMapping left, ChannelMapping right);
    public static bool op_Inequality(ChannelMapping left, ChannelMapping right);
    public static ChannelMapping op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ChannelMapping other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
internal class Azure.ResourceManager.Media.Models.ClearKeyEncryptionConfiguration : object {
    [CompilerGeneratedAttribute]
private string <CustomKeysAcquisitionUriTemplate>k__BackingField;
    public string CustomKeysAcquisitionUriTemplate { get; public set; }
    internal ClearKeyEncryptionConfiguration(string customKeysAcquisitionUriTemplate);
    [CompilerGeneratedAttribute]
public string get_CustomKeysAcquisitionUriTemplate();
    [CompilerGeneratedAttribute]
public void set_CustomKeysAcquisitionUriTemplate(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ClearKeyEncryptionConfiguration DeserializeClearKeyEncryptionConfiguration(JsonElement element);
}
public abstract class Azure.ResourceManager.Media.Models.ClipTime : object {
    [CompilerGeneratedAttribute]
private string <OdataType>k__BackingField;
    internal string OdataType { get; internal set; }
    internal ClipTime(string odataType);
    [CompilerGeneratedAttribute]
internal string get_OdataType();
    [CompilerGeneratedAttribute]
internal void set_OdataType(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ClipTime DeserializeClipTime(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.CodecCopyAudio : MediaCodecBase {
    internal CodecCopyAudio(string odataType, string label);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static CodecCopyAudio DeserializeCodecCopyAudio(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.CodecCopyVideo : MediaCodecBase {
    internal CodecCopyVideo(string odataType, string label);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static CodecCopyVideo DeserializeCodecCopyVideo(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.CommonEncryptionCbcs : object {
    [CompilerGeneratedAttribute]
private MediaEnabledProtocols <EnabledProtocols>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<MediaTrackSelection> <ClearTracks>k__BackingField;
    [CompilerGeneratedAttribute]
private StreamingPolicyContentKeys <ContentKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private CbcsDrmConfiguration <Drm>k__BackingField;
    [CompilerGeneratedAttribute]
private ClearKeyEncryptionConfiguration <ClearKeyEncryptionConfiguration>k__BackingField;
    public MediaEnabledProtocols EnabledProtocols { get; public set; }
    public IList`1<MediaTrackSelection> ClearTracks { get; }
    public StreamingPolicyContentKeys ContentKeys { get; public set; }
    public CbcsDrmConfiguration Drm { get; public set; }
    internal ClearKeyEncryptionConfiguration ClearKeyEncryptionConfiguration { get; internal set; }
    public string ClearKeyEncryptionCustomKeysAcquisitionUriTemplate { get; public set; }
    internal CommonEncryptionCbcs(MediaEnabledProtocols enabledProtocols, IList`1<MediaTrackSelection> clearTracks, StreamingPolicyContentKeys contentKeys, CbcsDrmConfiguration drm, ClearKeyEncryptionConfiguration clearKeyEncryptionConfiguration);
    [CompilerGeneratedAttribute]
public MediaEnabledProtocols get_EnabledProtocols();
    [CompilerGeneratedAttribute]
public void set_EnabledProtocols(MediaEnabledProtocols value);
    [CompilerGeneratedAttribute]
public IList`1<MediaTrackSelection> get_ClearTracks();
    [CompilerGeneratedAttribute]
public StreamingPolicyContentKeys get_ContentKeys();
    [CompilerGeneratedAttribute]
public void set_ContentKeys(StreamingPolicyContentKeys value);
    [CompilerGeneratedAttribute]
public CbcsDrmConfiguration get_Drm();
    [CompilerGeneratedAttribute]
public void set_Drm(CbcsDrmConfiguration value);
    [CompilerGeneratedAttribute]
internal ClearKeyEncryptionConfiguration get_ClearKeyEncryptionConfiguration();
    [CompilerGeneratedAttribute]
internal void set_ClearKeyEncryptionConfiguration(ClearKeyEncryptionConfiguration value);
    public string get_ClearKeyEncryptionCustomKeysAcquisitionUriTemplate();
    public void set_ClearKeyEncryptionCustomKeysAcquisitionUriTemplate(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static CommonEncryptionCbcs DeserializeCommonEncryptionCbcs(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.CommonEncryptionCenc : object {
    [CompilerGeneratedAttribute]
private MediaEnabledProtocols <EnabledProtocols>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<MediaTrackSelection> <ClearTracks>k__BackingField;
    [CompilerGeneratedAttribute]
private StreamingPolicyContentKeys <ContentKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private CencDrmConfiguration <Drm>k__BackingField;
    [CompilerGeneratedAttribute]
private ClearKeyEncryptionConfiguration <ClearKeyEncryptionConfiguration>k__BackingField;
    public MediaEnabledProtocols EnabledProtocols { get; public set; }
    public IList`1<MediaTrackSelection> ClearTracks { get; }
    public StreamingPolicyContentKeys ContentKeys { get; public set; }
    public CencDrmConfiguration Drm { get; public set; }
    internal ClearKeyEncryptionConfiguration ClearKeyEncryptionConfiguration { get; internal set; }
    public string ClearKeyEncryptionCustomKeysAcquisitionUriTemplate { get; public set; }
    internal CommonEncryptionCenc(MediaEnabledProtocols enabledProtocols, IList`1<MediaTrackSelection> clearTracks, StreamingPolicyContentKeys contentKeys, CencDrmConfiguration drm, ClearKeyEncryptionConfiguration clearKeyEncryptionConfiguration);
    [CompilerGeneratedAttribute]
public MediaEnabledProtocols get_EnabledProtocols();
    [CompilerGeneratedAttribute]
public void set_EnabledProtocols(MediaEnabledProtocols value);
    [CompilerGeneratedAttribute]
public IList`1<MediaTrackSelection> get_ClearTracks();
    [CompilerGeneratedAttribute]
public StreamingPolicyContentKeys get_ContentKeys();
    [CompilerGeneratedAttribute]
public void set_ContentKeys(StreamingPolicyContentKeys value);
    [CompilerGeneratedAttribute]
public CencDrmConfiguration get_Drm();
    [CompilerGeneratedAttribute]
public void set_Drm(CencDrmConfiguration value);
    [CompilerGeneratedAttribute]
internal ClearKeyEncryptionConfiguration get_ClearKeyEncryptionConfiguration();
    [CompilerGeneratedAttribute]
internal void set_ClearKeyEncryptionConfiguration(ClearKeyEncryptionConfiguration value);
    public string get_ClearKeyEncryptionCustomKeysAcquisitionUriTemplate();
    public void set_ClearKeyEncryptionCustomKeysAcquisitionUriTemplate(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static CommonEncryptionCenc DeserializeCommonEncryptionCenc(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.ContentKeyPolicyClearKeyConfiguration : ContentKeyPolicyConfiguration {
    internal ContentKeyPolicyClearKeyConfiguration(string odataType);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ContentKeyPolicyClearKeyConfiguration DeserializeContentKeyPolicyClearKeyConfiguration(JsonElement element);
}
public abstract class Azure.ResourceManager.Media.Models.ContentKeyPolicyConfiguration : object {
    [CompilerGeneratedAttribute]
private string <OdataType>k__BackingField;
    internal string OdataType { get; internal set; }
    internal ContentKeyPolicyConfiguration(string odataType);
    [CompilerGeneratedAttribute]
internal string get_OdataType();
    [CompilerGeneratedAttribute]
internal void set_OdataType(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ContentKeyPolicyConfiguration DeserializeContentKeyPolicyConfiguration(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration : ContentKeyPolicyConfiguration {
    [CompilerGeneratedAttribute]
private Byte[] <ApplicationSecretKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FairPlayPfxPassword>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FairPlayPfx>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentKeyPolicyFairPlayRentalAndLeaseKeyType <RentalAndLeaseKeyType>k__BackingField;
    [CompilerGeneratedAttribute]
private long <RentalDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentKeyPolicyFairPlayOfflineRentalConfiguration <OfflineRentalConfiguration>k__BackingField;
    public Byte[] ApplicationSecretKey { get; public set; }
    public string FairPlayPfxPassword { get; public set; }
    public string FairPlayPfx { get; public set; }
    public ContentKeyPolicyFairPlayRentalAndLeaseKeyType RentalAndLeaseKeyType { get; public set; }
    public long RentalDuration { get; public set; }
    public ContentKeyPolicyFairPlayOfflineRentalConfiguration OfflineRentalConfiguration { get; public set; }
    public ContentKeyPolicyFairPlayConfiguration(Byte[] applicationSecretKey, string fairPlayPfxPassword, string fairPlayPfx, ContentKeyPolicyFairPlayRentalAndLeaseKeyType rentalAndLeaseKeyType, long rentalDuration);
    internal ContentKeyPolicyFairPlayConfiguration(string odataType, Byte[] applicationSecretKey, string fairPlayPfxPassword, string fairPlayPfx, ContentKeyPolicyFairPlayRentalAndLeaseKeyType rentalAndLeaseKeyType, long rentalDuration, ContentKeyPolicyFairPlayOfflineRentalConfiguration offlineRentalConfiguration);
    [CompilerGeneratedAttribute]
public Byte[] get_ApplicationSecretKey();
    [CompilerGeneratedAttribute]
public void set_ApplicationSecretKey(Byte[] value);
    [CompilerGeneratedAttribute]
public string get_FairPlayPfxPassword();
    [CompilerGeneratedAttribute]
public void set_FairPlayPfxPassword(string value);
    [CompilerGeneratedAttribute]
public string get_FairPlayPfx();
    [CompilerGeneratedAttribute]
public void set_FairPlayPfx(string value);
    [CompilerGeneratedAttribute]
public ContentKeyPolicyFairPlayRentalAndLeaseKeyType get_RentalAndLeaseKeyType();
    [CompilerGeneratedAttribute]
public void set_RentalAndLeaseKeyType(ContentKeyPolicyFairPlayRentalAndLeaseKeyType value);
    [CompilerGeneratedAttribute]
public long get_RentalDuration();
    [CompilerGeneratedAttribute]
public void set_RentalDuration(long value);
    [CompilerGeneratedAttribute]
public ContentKeyPolicyFairPlayOfflineRentalConfiguration get_OfflineRentalConfiguration();
    [CompilerGeneratedAttribute]
public void set_OfflineRentalConfiguration(ContentKeyPolicyFairPlayOfflineRentalConfiguration value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ContentKeyPolicyFairPlayConfiguration DeserializeContentKeyPolicyFairPlayConfiguration(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayOfflineRentalConfiguration : object {
    [CompilerGeneratedAttribute]
private long <PlaybackDurationInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <StorageDurationInSeconds>k__BackingField;
    public long PlaybackDurationInSeconds { get; public set; }
    public long StorageDurationInSeconds { get; public set; }
    public ContentKeyPolicyFairPlayOfflineRentalConfiguration(long playbackDurationInSeconds, long storageDurationInSeconds);
    [CompilerGeneratedAttribute]
public long get_PlaybackDurationInSeconds();
    [CompilerGeneratedAttribute]
public void set_PlaybackDurationInSeconds(long value);
    [CompilerGeneratedAttribute]
public long get_StorageDurationInSeconds();
    [CompilerGeneratedAttribute]
public void set_StorageDurationInSeconds(long value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ContentKeyPolicyFairPlayOfflineRentalConfiguration DeserializeContentKeyPolicyFairPlayOfflineRentalConfiguration(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayRentalAndLeaseKeyType : ValueType {
    private string _value;
    private static string UnknownValue;
    private static string UndefinedValue;
    private static string DualExpiryValue;
    private static string PersistentUnlimitedValue;
    private static string PersistentLimitedValue;
    [CompilerGeneratedAttribute]
private static ContentKeyPolicyFairPlayRentalAndLeaseKeyType <Unknown>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContentKeyPolicyFairPlayRentalAndLeaseKeyType <Undefined>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContentKeyPolicyFairPlayRentalAndLeaseKeyType <DualExpiry>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContentKeyPolicyFairPlayRentalAndLeaseKeyType <PersistentUnlimited>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContentKeyPolicyFairPlayRentalAndLeaseKeyType <PersistentLimited>k__BackingField;
    public static ContentKeyPolicyFairPlayRentalAndLeaseKeyType Unknown { get; }
    public static ContentKeyPolicyFairPlayRentalAndLeaseKeyType Undefined { get; }
    public static ContentKeyPolicyFairPlayRentalAndLeaseKeyType DualExpiry { get; }
    public static ContentKeyPolicyFairPlayRentalAndLeaseKeyType PersistentUnlimited { get; }
    public static ContentKeyPolicyFairPlayRentalAndLeaseKeyType PersistentLimited { get; }
    public ContentKeyPolicyFairPlayRentalAndLeaseKeyType(string value);
    private static ContentKeyPolicyFairPlayRentalAndLeaseKeyType();
    [CompilerGeneratedAttribute]
public static ContentKeyPolicyFairPlayRentalAndLeaseKeyType get_Unknown();
    [CompilerGeneratedAttribute]
public static ContentKeyPolicyFairPlayRentalAndLeaseKeyType get_Undefined();
    [CompilerGeneratedAttribute]
public static ContentKeyPolicyFairPlayRentalAndLeaseKeyType get_DualExpiry();
    [CompilerGeneratedAttribute]
public static ContentKeyPolicyFairPlayRentalAndLeaseKeyType get_PersistentUnlimited();
    [CompilerGeneratedAttribute]
public static ContentKeyPolicyFairPlayRentalAndLeaseKeyType get_PersistentLimited();
    public static bool op_Equality(ContentKeyPolicyFairPlayRentalAndLeaseKeyType left, ContentKeyPolicyFairPlayRentalAndLeaseKeyType right);
    public static bool op_Inequality(ContentKeyPolicyFairPlayRentalAndLeaseKeyType left, ContentKeyPolicyFairPlayRentalAndLeaseKeyType right);
    public static ContentKeyPolicyFairPlayRentalAndLeaseKeyType op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ContentKeyPolicyFairPlayRentalAndLeaseKeyType other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
internal class Azure.ResourceManager.Media.Models.ContentKeyPolicyListResult : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<ContentKeyPolicyData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OdataNextLink>k__BackingField;
    public IReadOnlyList`1<ContentKeyPolicyData> Value { get; }
    public string OdataNextLink { get; }
    internal ContentKeyPolicyListResult(IReadOnlyList`1<ContentKeyPolicyData> value, string odataNextLink);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<ContentKeyPolicyData> get_Value();
    [CompilerGeneratedAttribute]
public string get_OdataNextLink();
    internal static ContentKeyPolicyListResult DeserializeContentKeyPolicyListResult(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.ContentKeyPolicyOpenRestriction : ContentKeyPolicyRestriction {
    internal ContentKeyPolicyOpenRestriction(string odataType);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ContentKeyPolicyOpenRestriction DeserializeContentKeyPolicyOpenRestriction(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.ContentKeyPolicyOption : object {
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <PolicyOptionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentKeyPolicyConfiguration <Configuration>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentKeyPolicyRestriction <Restriction>k__BackingField;
    public Nullable`1<Guid> PolicyOptionId { get; }
    public string Name { get; public set; }
    public ContentKeyPolicyConfiguration Configuration { get; public set; }
    public ContentKeyPolicyRestriction Restriction { get; public set; }
    public ContentKeyPolicyOption(ContentKeyPolicyConfiguration configuration, ContentKeyPolicyRestriction restriction);
    internal ContentKeyPolicyOption(Nullable`1<Guid> policyOptionId, string name, ContentKeyPolicyConfiguration configuration, ContentKeyPolicyRestriction restriction);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_PolicyOptionId();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public ContentKeyPolicyConfiguration get_Configuration();
    [CompilerGeneratedAttribute]
public void set_Configuration(ContentKeyPolicyConfiguration value);
    [CompilerGeneratedAttribute]
public ContentKeyPolicyRestriction get_Restriction();
    [CompilerGeneratedAttribute]
public void set_Restriction(ContentKeyPolicyRestriction value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ContentKeyPolicyOption DeserializeContentKeyPolicyOption(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.ContentKeyPolicyPlayReadyConfiguration : ContentKeyPolicyConfiguration {
    [CompilerGeneratedAttribute]
private IList`1<ContentKeyPolicyPlayReadyLicense> <Licenses>k__BackingField;
    [CompilerGeneratedAttribute]
private BinaryData <ResponseCustomData>k__BackingField;
    public IList`1<ContentKeyPolicyPlayReadyLicense> Licenses { get; }
    public BinaryData ResponseCustomData { get; public set; }
    public ContentKeyPolicyPlayReadyConfiguration(IEnumerable`1<ContentKeyPolicyPlayReadyLicense> licenses);
    internal ContentKeyPolicyPlayReadyConfiguration(string odataType, IList`1<ContentKeyPolicyPlayReadyLicense> licenses, BinaryData responseCustomData);
    [CompilerGeneratedAttribute]
public IList`1<ContentKeyPolicyPlayReadyLicense> get_Licenses();
    [CompilerGeneratedAttribute]
public BinaryData get_ResponseCustomData();
    [CompilerGeneratedAttribute]
public void set_ResponseCustomData(BinaryData value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ContentKeyPolicyPlayReadyConfiguration DeserializeContentKeyPolicyPlayReadyConfiguration(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader : ContentKeyPolicyPlayReadyContentKeyLocation {
    internal ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader(string odataType);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader DeserializeContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier : ContentKeyPolicyPlayReadyContentKeyLocation {
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <KeyId>k__BackingField;
    public Nullable`1<Guid> KeyId { get; public set; }
    public ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier(Nullable`1<Guid> keyId);
    internal ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier(string odataType, Nullable`1<Guid> keyId);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_KeyId();
    [CompilerGeneratedAttribute]
public void set_KeyId(Nullable`1<Guid> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier DeserializeContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier(JsonElement element);
}
public abstract class Azure.ResourceManager.Media.Models.ContentKeyPolicyPlayReadyContentKeyLocation : object {
    [CompilerGeneratedAttribute]
private string <OdataType>k__BackingField;
    internal string OdataType { get; internal set; }
    internal ContentKeyPolicyPlayReadyContentKeyLocation(string odataType);
    [CompilerGeneratedAttribute]
internal string get_OdataType();
    [CompilerGeneratedAttribute]
internal void set_OdataType(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ContentKeyPolicyPlayReadyContentKeyLocation DeserializeContentKeyPolicyPlayReadyContentKeyLocation(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.ContentKeyPolicyPlayReadyContentType : ValueType {
    private string _value;
    private static string UnknownValue;
    private static string UnspecifiedValue;
    private static string UltraVioletDownloadValue;
    private static string UltraVioletStreamingValue;
    [CompilerGeneratedAttribute]
private static ContentKeyPolicyPlayReadyContentType <Unknown>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContentKeyPolicyPlayReadyContentType <Unspecified>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContentKeyPolicyPlayReadyContentType <UltraVioletDownload>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContentKeyPolicyPlayReadyContentType <UltraVioletStreaming>k__BackingField;
    public static ContentKeyPolicyPlayReadyContentType Unknown { get; }
    public static ContentKeyPolicyPlayReadyContentType Unspecified { get; }
    public static ContentKeyPolicyPlayReadyContentType UltraVioletDownload { get; }
    public static ContentKeyPolicyPlayReadyContentType UltraVioletStreaming { get; }
    public ContentKeyPolicyPlayReadyContentType(string value);
    private static ContentKeyPolicyPlayReadyContentType();
    [CompilerGeneratedAttribute]
public static ContentKeyPolicyPlayReadyContentType get_Unknown();
    [CompilerGeneratedAttribute]
public static ContentKeyPolicyPlayReadyContentType get_Unspecified();
    [CompilerGeneratedAttribute]
public static ContentKeyPolicyPlayReadyContentType get_UltraVioletDownload();
    [CompilerGeneratedAttribute]
public static ContentKeyPolicyPlayReadyContentType get_UltraVioletStreaming();
    public static bool op_Equality(ContentKeyPolicyPlayReadyContentType left, ContentKeyPolicyPlayReadyContentType right);
    public static bool op_Inequality(ContentKeyPolicyPlayReadyContentType left, ContentKeyPolicyPlayReadyContentType right);
    public static ContentKeyPolicyPlayReadyContentType op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ContentKeyPolicyPlayReadyContentType other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction : object {
    [CompilerGeneratedAttribute]
private bool <IsBestEffort>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ConfigurationData>k__BackingField;
    public bool IsBestEffort { get; public set; }
    public int ConfigurationData { get; public set; }
    public ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction(bool isBestEffort, int configurationData);
    [CompilerGeneratedAttribute]
public bool get_IsBestEffort();
    [CompilerGeneratedAttribute]
public void set_IsBestEffort(bool value);
    [CompilerGeneratedAttribute]
public int get_ConfigurationData();
    [CompilerGeneratedAttribute]
public void set_ConfigurationData(int value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction DeserializeContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.ContentKeyPolicyPlayReadyLicense : object {
    [CompilerGeneratedAttribute]
private bool <AllowTestDevices>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<PlayReadySecurityLevel> <SecurityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <BeginOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <ExpireOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <RelativeBeginDate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <RelativeExpirationDate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <GracePeriod>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentKeyPolicyPlayReadyPlayRight <PlayRight>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentKeyPolicyPlayReadyLicenseType <LicenseType>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentKeyPolicyPlayReadyContentKeyLocation <ContentKeyLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentKeyPolicyPlayReadyContentType <ContentType>k__BackingField;
    public bool AllowTestDevices { get; public set; }
    public Nullable`1<PlayReadySecurityLevel> SecurityLevel { get; public set; }
    public Nullable`1<DateTimeOffset> BeginOn { get; public set; }
    public Nullable`1<DateTimeOffset> ExpireOn { get; public set; }
    public Nullable`1<TimeSpan> RelativeBeginDate { get; public set; }
    public Nullable`1<TimeSpan> RelativeExpirationDate { get; public set; }
    public Nullable`1<TimeSpan> GracePeriod { get; public set; }
    public ContentKeyPolicyPlayReadyPlayRight PlayRight { get; public set; }
    public ContentKeyPolicyPlayReadyLicenseType LicenseType { get; public set; }
    public ContentKeyPolicyPlayReadyContentKeyLocation ContentKeyLocation { get; public set; }
    public ContentKeyPolicyPlayReadyContentType ContentType { get; public set; }
    public ContentKeyPolicyPlayReadyLicense(bool allowTestDevices, ContentKeyPolicyPlayReadyLicenseType licenseType, ContentKeyPolicyPlayReadyContentKeyLocation contentKeyLocation, ContentKeyPolicyPlayReadyContentType contentType);
    internal ContentKeyPolicyPlayReadyLicense(bool allowTestDevices, Nullable`1<PlayReadySecurityLevel> securityLevel, Nullable`1<DateTimeOffset> beginOn, Nullable`1<DateTimeOffset> expireOn, Nullable`1<TimeSpan> relativeBeginDate, Nullable`1<TimeSpan> relativeExpirationDate, Nullable`1<TimeSpan> gracePeriod, ContentKeyPolicyPlayReadyPlayRight playRight, ContentKeyPolicyPlayReadyLicenseType licenseType, ContentKeyPolicyPlayReadyContentKeyLocation contentKeyLocation, ContentKeyPolicyPlayReadyContentType contentType);
    [CompilerGeneratedAttribute]
public bool get_AllowTestDevices();
    [CompilerGeneratedAttribute]
public void set_AllowTestDevices(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<PlayReadySecurityLevel> get_SecurityLevel();
    [CompilerGeneratedAttribute]
public void set_SecurityLevel(Nullable`1<PlayReadySecurityLevel> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_BeginOn();
    [CompilerGeneratedAttribute]
public void set_BeginOn(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_ExpireOn();
    [CompilerGeneratedAttribute]
public void set_ExpireOn(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_RelativeBeginDate();
    [CompilerGeneratedAttribute]
public void set_RelativeBeginDate(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_RelativeExpirationDate();
    [CompilerGeneratedAttribute]
public void set_RelativeExpirationDate(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_GracePeriod();
    [CompilerGeneratedAttribute]
public void set_GracePeriod(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public ContentKeyPolicyPlayReadyPlayRight get_PlayRight();
    [CompilerGeneratedAttribute]
public void set_PlayRight(ContentKeyPolicyPlayReadyPlayRight value);
    [CompilerGeneratedAttribute]
public ContentKeyPolicyPlayReadyLicenseType get_LicenseType();
    [CompilerGeneratedAttribute]
public void set_LicenseType(ContentKeyPolicyPlayReadyLicenseType value);
    [CompilerGeneratedAttribute]
public ContentKeyPolicyPlayReadyContentKeyLocation get_ContentKeyLocation();
    [CompilerGeneratedAttribute]
public void set_ContentKeyLocation(ContentKeyPolicyPlayReadyContentKeyLocation value);
    [CompilerGeneratedAttribute]
public ContentKeyPolicyPlayReadyContentType get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(ContentKeyPolicyPlayReadyContentType value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ContentKeyPolicyPlayReadyLicense DeserializeContentKeyPolicyPlayReadyLicense(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.ContentKeyPolicyPlayReadyLicenseType : ValueType {
    private string _value;
    private static string UnknownValue;
    private static string NonPersistentValue;
    private static string PersistentValue;
    [CompilerGeneratedAttribute]
private static ContentKeyPolicyPlayReadyLicenseType <Unknown>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContentKeyPolicyPlayReadyLicenseType <NonPersistent>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContentKeyPolicyPlayReadyLicenseType <Persistent>k__BackingField;
    public static ContentKeyPolicyPlayReadyLicenseType Unknown { get; }
    public static ContentKeyPolicyPlayReadyLicenseType NonPersistent { get; }
    public static ContentKeyPolicyPlayReadyLicenseType Persistent { get; }
    public ContentKeyPolicyPlayReadyLicenseType(string value);
    private static ContentKeyPolicyPlayReadyLicenseType();
    [CompilerGeneratedAttribute]
public static ContentKeyPolicyPlayReadyLicenseType get_Unknown();
    [CompilerGeneratedAttribute]
public static ContentKeyPolicyPlayReadyLicenseType get_NonPersistent();
    [CompilerGeneratedAttribute]
public static ContentKeyPolicyPlayReadyLicenseType get_Persistent();
    public static bool op_Equality(ContentKeyPolicyPlayReadyLicenseType left, ContentKeyPolicyPlayReadyLicenseType right);
    public static bool op_Inequality(ContentKeyPolicyPlayReadyLicenseType left, ContentKeyPolicyPlayReadyLicenseType right);
    public static ContentKeyPolicyPlayReadyLicenseType op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ContentKeyPolicyPlayReadyLicenseType other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.ContentKeyPolicyPlayReadyPlayRight : object {
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <FirstPlayExpiration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ScmsRestriction>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <AgcAndColorStripeRestriction>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction <ExplicitAnalogTelevisionOutputRestriction>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasDigitalVideoOnlyContentRestriction>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasImageConstraintForAnalogComponentVideoRestriction>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasImageConstraintForAnalogComputerMonitorRestriction>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentKeyPolicyPlayReadyUnknownOutputPassingOption <AllowPassingVideoContentToUnknownOutput>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <UncompressedDigitalVideoOutputProtectionLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <CompressedDigitalVideoOutputProtectionLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <AnalogVideoOutputProtectionLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <CompressedDigitalAudioOutputProtectionLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <UncompressedDigitalAudioOutputProtectionLevel>k__BackingField;
    public Nullable`1<TimeSpan> FirstPlayExpiration { get; public set; }
    public Nullable`1<int> ScmsRestriction { get; public set; }
    public Nullable`1<int> AgcAndColorStripeRestriction { get; public set; }
    public ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction ExplicitAnalogTelevisionOutputRestriction { get; public set; }
    public bool HasDigitalVideoOnlyContentRestriction { get; public set; }
    public bool HasImageConstraintForAnalogComponentVideoRestriction { get; public set; }
    public bool HasImageConstraintForAnalogComputerMonitorRestriction { get; public set; }
    public ContentKeyPolicyPlayReadyUnknownOutputPassingOption AllowPassingVideoContentToUnknownOutput { get; public set; }
    public Nullable`1<int> UncompressedDigitalVideoOutputProtectionLevel { get; public set; }
    public Nullable`1<int> CompressedDigitalVideoOutputProtectionLevel { get; public set; }
    public Nullable`1<int> AnalogVideoOutputProtectionLevel { get; public set; }
    public Nullable`1<int> CompressedDigitalAudioOutputProtectionLevel { get; public set; }
    public Nullable`1<int> UncompressedDigitalAudioOutputProtectionLevel { get; public set; }
    public ContentKeyPolicyPlayReadyPlayRight(bool hasDigitalVideoOnlyContentRestriction, bool hasImageConstraintForAnalogComponentVideoRestriction, bool hasImageConstraintForAnalogComputerMonitorRestriction, ContentKeyPolicyPlayReadyUnknownOutputPassingOption allowPassingVideoContentToUnknownOutput);
    internal ContentKeyPolicyPlayReadyPlayRight(Nullable`1<TimeSpan> firstPlayExpiration, Nullable`1<int> scmsRestriction, Nullable`1<int> agcAndColorStripeRestriction, ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction explicitAnalogTelevisionOutputRestriction, bool hasDigitalVideoOnlyContentRestriction, bool hasImageConstraintForAnalogComponentVideoRestriction, bool hasImageConstraintForAnalogComputerMonitorRestriction, ContentKeyPolicyPlayReadyUnknownOutputPassingOption allowPassingVideoContentToUnknownOutput, Nullable`1<int> uncompressedDigitalVideoOutputProtectionLevel, Nullable`1<int> compressedDigitalVideoOutputProtectionLevel, Nullable`1<int> analogVideoOutputProtectionLevel, Nullable`1<int> compressedDigitalAudioOutputProtectionLevel, Nullable`1<int> uncompressedDigitalAudioOutputProtectionLevel);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_FirstPlayExpiration();
    [CompilerGeneratedAttribute]
public void set_FirstPlayExpiration(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ScmsRestriction();
    [CompilerGeneratedAttribute]
public void set_ScmsRestriction(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_AgcAndColorStripeRestriction();
    [CompilerGeneratedAttribute]
public void set_AgcAndColorStripeRestriction(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction get_ExplicitAnalogTelevisionOutputRestriction();
    [CompilerGeneratedAttribute]
public void set_ExplicitAnalogTelevisionOutputRestriction(ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction value);
    [CompilerGeneratedAttribute]
public bool get_HasDigitalVideoOnlyContentRestriction();
    [CompilerGeneratedAttribute]
public void set_HasDigitalVideoOnlyContentRestriction(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasImageConstraintForAnalogComponentVideoRestriction();
    [CompilerGeneratedAttribute]
public void set_HasImageConstraintForAnalogComponentVideoRestriction(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasImageConstraintForAnalogComputerMonitorRestriction();
    [CompilerGeneratedAttribute]
public void set_HasImageConstraintForAnalogComputerMonitorRestriction(bool value);
    [CompilerGeneratedAttribute]
public ContentKeyPolicyPlayReadyUnknownOutputPassingOption get_AllowPassingVideoContentToUnknownOutput();
    [CompilerGeneratedAttribute]
public void set_AllowPassingVideoContentToUnknownOutput(ContentKeyPolicyPlayReadyUnknownOutputPassingOption value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_UncompressedDigitalVideoOutputProtectionLevel();
    [CompilerGeneratedAttribute]
public void set_UncompressedDigitalVideoOutputProtectionLevel(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_CompressedDigitalVideoOutputProtectionLevel();
    [CompilerGeneratedAttribute]
public void set_CompressedDigitalVideoOutputProtectionLevel(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_AnalogVideoOutputProtectionLevel();
    [CompilerGeneratedAttribute]
public void set_AnalogVideoOutputProtectionLevel(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_CompressedDigitalAudioOutputProtectionLevel();
    [CompilerGeneratedAttribute]
public void set_CompressedDigitalAudioOutputProtectionLevel(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_UncompressedDigitalAudioOutputProtectionLevel();
    [CompilerGeneratedAttribute]
public void set_UncompressedDigitalAudioOutputProtectionLevel(Nullable`1<int> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ContentKeyPolicyPlayReadyPlayRight DeserializeContentKeyPolicyPlayReadyPlayRight(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.ContentKeyPolicyPlayReadyUnknownOutputPassingOption : ValueType {
    private string _value;
    private static string UnknownValue;
    private static string NotAllowedValue;
    private static string AllowedValue;
    private static string AllowedWithVideoConstrictionValue;
    [CompilerGeneratedAttribute]
private static ContentKeyPolicyPlayReadyUnknownOutputPassingOption <Unknown>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContentKeyPolicyPlayReadyUnknownOutputPassingOption <NotAllowed>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContentKeyPolicyPlayReadyUnknownOutputPassingOption <Allowed>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContentKeyPolicyPlayReadyUnknownOutputPassingOption <AllowedWithVideoConstriction>k__BackingField;
    public static ContentKeyPolicyPlayReadyUnknownOutputPassingOption Unknown { get; }
    public static ContentKeyPolicyPlayReadyUnknownOutputPassingOption NotAllowed { get; }
    public static ContentKeyPolicyPlayReadyUnknownOutputPassingOption Allowed { get; }
    public static ContentKeyPolicyPlayReadyUnknownOutputPassingOption AllowedWithVideoConstriction { get; }
    public ContentKeyPolicyPlayReadyUnknownOutputPassingOption(string value);
    private static ContentKeyPolicyPlayReadyUnknownOutputPassingOption();
    [CompilerGeneratedAttribute]
public static ContentKeyPolicyPlayReadyUnknownOutputPassingOption get_Unknown();
    [CompilerGeneratedAttribute]
public static ContentKeyPolicyPlayReadyUnknownOutputPassingOption get_NotAllowed();
    [CompilerGeneratedAttribute]
public static ContentKeyPolicyPlayReadyUnknownOutputPassingOption get_Allowed();
    [CompilerGeneratedAttribute]
public static ContentKeyPolicyPlayReadyUnknownOutputPassingOption get_AllowedWithVideoConstriction();
    public static bool op_Equality(ContentKeyPolicyPlayReadyUnknownOutputPassingOption left, ContentKeyPolicyPlayReadyUnknownOutputPassingOption right);
    public static bool op_Inequality(ContentKeyPolicyPlayReadyUnknownOutputPassingOption left, ContentKeyPolicyPlayReadyUnknownOutputPassingOption right);
    public static ContentKeyPolicyPlayReadyUnknownOutputPassingOption op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ContentKeyPolicyPlayReadyUnknownOutputPassingOption other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.ContentKeyPolicyProperties : object {
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <PolicyId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <CreatedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <LastModifiedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<ContentKeyPolicyOption> <Options>k__BackingField;
    public Nullable`1<Guid> PolicyId { get; }
    public Nullable`1<DateTimeOffset> CreatedOn { get; }
    public Nullable`1<DateTimeOffset> LastModifiedOn { get; }
    public string Description { get; }
    public IReadOnlyList`1<ContentKeyPolicyOption> Options { get; }
    internal ContentKeyPolicyProperties(IEnumerable`1<ContentKeyPolicyOption> options);
    internal ContentKeyPolicyProperties(Nullable`1<Guid> policyId, Nullable`1<DateTimeOffset> createdOn, Nullable`1<DateTimeOffset> lastModifiedOn, string description, IReadOnlyList`1<ContentKeyPolicyOption> options);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_PolicyId();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_CreatedOn();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_LastModifiedOn();
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<ContentKeyPolicyOption> get_Options();
    internal static ContentKeyPolicyProperties DeserializeContentKeyPolicyProperties(JsonElement element);
}
public abstract class Azure.ResourceManager.Media.Models.ContentKeyPolicyRestriction : object {
    [CompilerGeneratedAttribute]
private string <OdataType>k__BackingField;
    internal string OdataType { get; internal set; }
    internal ContentKeyPolicyRestriction(string odataType);
    [CompilerGeneratedAttribute]
internal string get_OdataType();
    [CompilerGeneratedAttribute]
internal void set_OdataType(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ContentKeyPolicyRestriction DeserializeContentKeyPolicyRestriction(JsonElement element);
}
public abstract class Azure.ResourceManager.Media.Models.ContentKeyPolicyRestrictionTokenKey : object {
    [CompilerGeneratedAttribute]
private string <OdataType>k__BackingField;
    internal string OdataType { get; internal set; }
    internal ContentKeyPolicyRestrictionTokenKey(string odataType);
    [CompilerGeneratedAttribute]
internal string get_OdataType();
    [CompilerGeneratedAttribute]
internal void set_OdataType(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ContentKeyPolicyRestrictionTokenKey DeserializeContentKeyPolicyRestrictionTokenKey(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.ContentKeyPolicyRestrictionTokenType : ValueType {
    private string _value;
    private static string UnknownValue;
    private static string SwtValue;
    private static string JwtValue;
    [CompilerGeneratedAttribute]
private static ContentKeyPolicyRestrictionTokenType <Unknown>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContentKeyPolicyRestrictionTokenType <Swt>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContentKeyPolicyRestrictionTokenType <Jwt>k__BackingField;
    public static ContentKeyPolicyRestrictionTokenType Unknown { get; }
    public static ContentKeyPolicyRestrictionTokenType Swt { get; }
    public static ContentKeyPolicyRestrictionTokenType Jwt { get; }
    public ContentKeyPolicyRestrictionTokenType(string value);
    private static ContentKeyPolicyRestrictionTokenType();
    [CompilerGeneratedAttribute]
public static ContentKeyPolicyRestrictionTokenType get_Unknown();
    [CompilerGeneratedAttribute]
public static ContentKeyPolicyRestrictionTokenType get_Swt();
    [CompilerGeneratedAttribute]
public static ContentKeyPolicyRestrictionTokenType get_Jwt();
    public static bool op_Equality(ContentKeyPolicyRestrictionTokenType left, ContentKeyPolicyRestrictionTokenType right);
    public static bool op_Inequality(ContentKeyPolicyRestrictionTokenType left, ContentKeyPolicyRestrictionTokenType right);
    public static ContentKeyPolicyRestrictionTokenType op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ContentKeyPolicyRestrictionTokenType other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.ContentKeyPolicyRsaTokenKey : ContentKeyPolicyRestrictionTokenKey {
    [CompilerGeneratedAttribute]
private Byte[] <Exponent>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Modulus>k__BackingField;
    public Byte[] Exponent { get; public set; }
    public Byte[] Modulus { get; public set; }
    public ContentKeyPolicyRsaTokenKey(Byte[] exponent, Byte[] modulus);
    internal ContentKeyPolicyRsaTokenKey(string odataType, Byte[] exponent, Byte[] modulus);
    [CompilerGeneratedAttribute]
public Byte[] get_Exponent();
    [CompilerGeneratedAttribute]
public void set_Exponent(Byte[] value);
    [CompilerGeneratedAttribute]
public Byte[] get_Modulus();
    [CompilerGeneratedAttribute]
public void set_Modulus(Byte[] value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ContentKeyPolicyRsaTokenKey DeserializeContentKeyPolicyRsaTokenKey(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.ContentKeyPolicySymmetricTokenKey : ContentKeyPolicyRestrictionTokenKey {
    [CompilerGeneratedAttribute]
private Byte[] <KeyValue>k__BackingField;
    public Byte[] KeyValue { get; public set; }
    public ContentKeyPolicySymmetricTokenKey(Byte[] keyValue);
    internal ContentKeyPolicySymmetricTokenKey(string odataType, Byte[] keyValue);
    [CompilerGeneratedAttribute]
public Byte[] get_KeyValue();
    [CompilerGeneratedAttribute]
public void set_KeyValue(Byte[] value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ContentKeyPolicySymmetricTokenKey DeserializeContentKeyPolicySymmetricTokenKey(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.ContentKeyPolicyTokenClaim : object {
    [CompilerGeneratedAttribute]
private string <ClaimType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClaimValue>k__BackingField;
    public string ClaimType { get; public set; }
    public string ClaimValue { get; public set; }
    internal ContentKeyPolicyTokenClaim(string claimType, string claimValue);
    [CompilerGeneratedAttribute]
public string get_ClaimType();
    [CompilerGeneratedAttribute]
public void set_ClaimType(string value);
    [CompilerGeneratedAttribute]
public string get_ClaimValue();
    [CompilerGeneratedAttribute]
public void set_ClaimValue(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ContentKeyPolicyTokenClaim DeserializeContentKeyPolicyTokenClaim(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.ContentKeyPolicyTokenRestriction : ContentKeyPolicyRestriction {
    [CompilerGeneratedAttribute]
private string <Issuer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Audience>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentKeyPolicyRestrictionTokenKey <PrimaryVerificationKey>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ContentKeyPolicyRestrictionTokenKey> <AlternateVerificationKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ContentKeyPolicyTokenClaim> <RequiredClaims>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentKeyPolicyRestrictionTokenType <RestrictionTokenType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenIdConnectDiscoveryDocument>k__BackingField;
    public string Issuer { get; public set; }
    public string Audience { get; public set; }
    public ContentKeyPolicyRestrictionTokenKey PrimaryVerificationKey { get; public set; }
    public IList`1<ContentKeyPolicyRestrictionTokenKey> AlternateVerificationKeys { get; }
    public IList`1<ContentKeyPolicyTokenClaim> RequiredClaims { get; }
    public ContentKeyPolicyRestrictionTokenType RestrictionTokenType { get; public set; }
    public string OpenIdConnectDiscoveryDocument { get; public set; }
    public ContentKeyPolicyTokenRestriction(string issuer, string audience, ContentKeyPolicyRestrictionTokenKey primaryVerificationKey, ContentKeyPolicyRestrictionTokenType restrictionTokenType);
    internal ContentKeyPolicyTokenRestriction(string odataType, string issuer, string audience, ContentKeyPolicyRestrictionTokenKey primaryVerificationKey, IList`1<ContentKeyPolicyRestrictionTokenKey> alternateVerificationKeys, IList`1<ContentKeyPolicyTokenClaim> requiredClaims, ContentKeyPolicyRestrictionTokenType restrictionTokenType, string openIdConnectDiscoveryDocument);
    [CompilerGeneratedAttribute]
public string get_Issuer();
    [CompilerGeneratedAttribute]
public void set_Issuer(string value);
    [CompilerGeneratedAttribute]
public string get_Audience();
    [CompilerGeneratedAttribute]
public void set_Audience(string value);
    [CompilerGeneratedAttribute]
public ContentKeyPolicyRestrictionTokenKey get_PrimaryVerificationKey();
    [CompilerGeneratedAttribute]
public void set_PrimaryVerificationKey(ContentKeyPolicyRestrictionTokenKey value);
    [CompilerGeneratedAttribute]
public IList`1<ContentKeyPolicyRestrictionTokenKey> get_AlternateVerificationKeys();
    [CompilerGeneratedAttribute]
public IList`1<ContentKeyPolicyTokenClaim> get_RequiredClaims();
    [CompilerGeneratedAttribute]
public ContentKeyPolicyRestrictionTokenType get_RestrictionTokenType();
    [CompilerGeneratedAttribute]
public void set_RestrictionTokenType(ContentKeyPolicyRestrictionTokenType value);
    [CompilerGeneratedAttribute]
public string get_OpenIdConnectDiscoveryDocument();
    [CompilerGeneratedAttribute]
public void set_OpenIdConnectDiscoveryDocument(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ContentKeyPolicyTokenRestriction DeserializeContentKeyPolicyTokenRestriction(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.ContentKeyPolicyUnknownConfiguration : ContentKeyPolicyConfiguration {
    internal ContentKeyPolicyUnknownConfiguration(string odataType);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ContentKeyPolicyUnknownConfiguration DeserializeContentKeyPolicyUnknownConfiguration(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.ContentKeyPolicyUnknownRestriction : ContentKeyPolicyRestriction {
    internal ContentKeyPolicyUnknownRestriction(string odataType);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ContentKeyPolicyUnknownRestriction DeserializeContentKeyPolicyUnknownRestriction(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.ContentKeyPolicyWidevineConfiguration : ContentKeyPolicyConfiguration {
    [CompilerGeneratedAttribute]
private string <WidevineTemplate>k__BackingField;
    public string WidevineTemplate { get; public set; }
    public ContentKeyPolicyWidevineConfiguration(string widevineTemplate);
    internal ContentKeyPolicyWidevineConfiguration(string odataType, string widevineTemplate);
    [CompilerGeneratedAttribute]
public string get_WidevineTemplate();
    [CompilerGeneratedAttribute]
public void set_WidevineTemplate(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ContentKeyPolicyWidevineConfiguration DeserializeContentKeyPolicyWidevineConfiguration(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.ContentKeyPolicyX509CertificateTokenKey : ContentKeyPolicyRestrictionTokenKey {
    [CompilerGeneratedAttribute]
private Byte[] <RawBody>k__BackingField;
    public Byte[] RawBody { get; public set; }
    public ContentKeyPolicyX509CertificateTokenKey(Byte[] rawBody);
    internal ContentKeyPolicyX509CertificateTokenKey(string odataType, Byte[] rawBody);
    [CompilerGeneratedAttribute]
public Byte[] get_RawBody();
    [CompilerGeneratedAttribute]
public void set_RawBody(Byte[] value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ContentKeyPolicyX509CertificateTokenKey DeserializeContentKeyPolicyX509CertificateTokenKey(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.CrossSiteAccessPolicies : object {
    [CompilerGeneratedAttribute]
private string <ClientAccessPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CrossDomainPolicy>k__BackingField;
    public string ClientAccessPolicy { get; public set; }
    public string CrossDomainPolicy { get; public set; }
    internal CrossSiteAccessPolicies(string clientAccessPolicy, string crossDomainPolicy);
    [CompilerGeneratedAttribute]
public string get_ClientAccessPolicy();
    [CompilerGeneratedAttribute]
public void set_ClientAccessPolicy(string value);
    [CompilerGeneratedAttribute]
public string get_CrossDomainPolicy();
    [CompilerGeneratedAttribute]
public void set_CrossDomainPolicy(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static CrossSiteAccessPolicies DeserializeCrossSiteAccessPolicies(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.DDAudio : MediaAudioBase {
    internal DDAudio(string odataType, string label, Nullable`1<int> channels, Nullable`1<int> samplingRate, Nullable`1<int> bitrate);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static DDAudio DeserializeDDAudio(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.DeinterlaceMode : ValueType {
    private string _value;
    private static string OffValue;
    private static string AutoPixelAdaptiveValue;
    [CompilerGeneratedAttribute]
private static DeinterlaceMode <Off>k__BackingField;
    [CompilerGeneratedAttribute]
private static DeinterlaceMode <AutoPixelAdaptive>k__BackingField;
    public static DeinterlaceMode Off { get; }
    public static DeinterlaceMode AutoPixelAdaptive { get; }
    public DeinterlaceMode(string value);
    private static DeinterlaceMode();
    [CompilerGeneratedAttribute]
public static DeinterlaceMode get_Off();
    [CompilerGeneratedAttribute]
public static DeinterlaceMode get_AutoPixelAdaptive();
    public static bool op_Equality(DeinterlaceMode left, DeinterlaceMode right);
    public static bool op_Inequality(DeinterlaceMode left, DeinterlaceMode right);
    public static DeinterlaceMode op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(DeinterlaceMode other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.DeinterlaceParity : ValueType {
    private string _value;
    private static string AutoValue;
    private static string TopFieldFirstValue;
    private static string BottomFieldFirstValue;
    [CompilerGeneratedAttribute]
private static DeinterlaceParity <Auto>k__BackingField;
    [CompilerGeneratedAttribute]
private static DeinterlaceParity <TopFieldFirst>k__BackingField;
    [CompilerGeneratedAttribute]
private static DeinterlaceParity <BottomFieldFirst>k__BackingField;
    public static DeinterlaceParity Auto { get; }
    public static DeinterlaceParity TopFieldFirst { get; }
    public static DeinterlaceParity BottomFieldFirst { get; }
    public DeinterlaceParity(string value);
    private static DeinterlaceParity();
    [CompilerGeneratedAttribute]
public static DeinterlaceParity get_Auto();
    [CompilerGeneratedAttribute]
public static DeinterlaceParity get_TopFieldFirst();
    [CompilerGeneratedAttribute]
public static DeinterlaceParity get_BottomFieldFirst();
    public static bool op_Equality(DeinterlaceParity left, DeinterlaceParity right);
    public static bool op_Inequality(DeinterlaceParity left, DeinterlaceParity right);
    public static DeinterlaceParity op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(DeinterlaceParity other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.DeinterlaceSettings : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DeinterlaceParity> <Parity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DeinterlaceMode> <Mode>k__BackingField;
    public Nullable`1<DeinterlaceParity> Parity { get; public set; }
    public Nullable`1<DeinterlaceMode> Mode { get; public set; }
    internal DeinterlaceSettings(Nullable`1<DeinterlaceParity> parity, Nullable`1<DeinterlaceMode> mode);
    [CompilerGeneratedAttribute]
public Nullable`1<DeinterlaceParity> get_Parity();
    [CompilerGeneratedAttribute]
public void set_Parity(Nullable`1<DeinterlaceParity> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DeinterlaceMode> get_Mode();
    [CompilerGeneratedAttribute]
public void set_Mode(Nullable`1<DeinterlaceMode> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static DeinterlaceSettings DeserializeDeinterlaceSettings(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.EdgePoliciesRequestContent : object {
    [CompilerGeneratedAttribute]
private string <DeviceId>k__BackingField;
    public string DeviceId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DeviceId();
    [CompilerGeneratedAttribute]
public void set_DeviceId(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
}
public class Azure.ResourceManager.Media.Models.EdgeUsageDataCollectionPolicy : object {
    [CompilerGeneratedAttribute]
private string <DataCollectionFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataReportingFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <MaxAllowedUnreportedUsageDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private EdgeUsageDataEventHub <EventHubDetails>k__BackingField;
    public string DataCollectionFrequency { get; }
    public string DataReportingFrequency { get; }
    public Nullable`1<TimeSpan> MaxAllowedUnreportedUsageDuration { get; }
    public EdgeUsageDataEventHub EventHubDetails { get; }
    internal EdgeUsageDataCollectionPolicy(string dataCollectionFrequency, string dataReportingFrequency, Nullable`1<TimeSpan> maxAllowedUnreportedUsageDuration, EdgeUsageDataEventHub eventHubDetails);
    [CompilerGeneratedAttribute]
public string get_DataCollectionFrequency();
    [CompilerGeneratedAttribute]
public string get_DataReportingFrequency();
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_MaxAllowedUnreportedUsageDuration();
    [CompilerGeneratedAttribute]
public EdgeUsageDataEventHub get_EventHubDetails();
    internal static EdgeUsageDataCollectionPolicy DeserializeEdgeUsageDataCollectionPolicy(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.EdgeUsageDataEventHub : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    public string Name { get; }
    public string Namespace { get; }
    public string Token { get; }
    internal EdgeUsageDataEventHub(string name, string namespace, string token);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public string get_Token();
    internal static EdgeUsageDataEventHub DeserializeEdgeUsageDataEventHub(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.EncoderNamedPreset : ValueType {
    private string _value;
    private static string H264SingleBitrateSDValue;
    private static string H264SingleBitrate720PValue;
    private static string H264SingleBitrate1080PValue;
    private static string AdaptiveStreamingValue;
    private static string AacGoodQualityAudioValue;
    private static string DDGoodQualityAudioValue;
    private static string ContentAwareEncodingExperimentalValue;
    private static string ContentAwareEncodingValue;
    private static string CopyAllBitrateNonInterleavedValue;
    private static string H264MultipleBitrate1080PValue;
    private static string H264MultipleBitrate720PValue;
    private static string H264MultipleBitrateSDValue;
    private static string H265ContentAwareEncodingValue;
    private static string H265AdaptiveStreamingValue;
    private static string H265SingleBitrate720PValue;
    private static string H265SingleBitrate1080PValue;
    private static string H265SingleBitrate4KValue;
    [CompilerGeneratedAttribute]
private static EncoderNamedPreset <H264SingleBitrateSD>k__BackingField;
    [CompilerGeneratedAttribute]
private static EncoderNamedPreset <H264SingleBitrate720P>k__BackingField;
    [CompilerGeneratedAttribute]
private static EncoderNamedPreset <H264SingleBitrate1080P>k__BackingField;
    [CompilerGeneratedAttribute]
private static EncoderNamedPreset <AdaptiveStreaming>k__BackingField;
    [CompilerGeneratedAttribute]
private static EncoderNamedPreset <AacGoodQualityAudio>k__BackingField;
    [CompilerGeneratedAttribute]
private static EncoderNamedPreset <DDGoodQualityAudio>k__BackingField;
    [CompilerGeneratedAttribute]
private static EncoderNamedPreset <ContentAwareEncodingExperimental>k__BackingField;
    [CompilerGeneratedAttribute]
private static EncoderNamedPreset <ContentAwareEncoding>k__BackingField;
    [CompilerGeneratedAttribute]
private static EncoderNamedPreset <CopyAllBitrateNonInterleaved>k__BackingField;
    [CompilerGeneratedAttribute]
private static EncoderNamedPreset <H264MultipleBitrate1080P>k__BackingField;
    [CompilerGeneratedAttribute]
private static EncoderNamedPreset <H264MultipleBitrate720P>k__BackingField;
    [CompilerGeneratedAttribute]
private static EncoderNamedPreset <H264MultipleBitrateSD>k__BackingField;
    [CompilerGeneratedAttribute]
private static EncoderNamedPreset <H265ContentAwareEncoding>k__BackingField;
    [CompilerGeneratedAttribute]
private static EncoderNamedPreset <H265AdaptiveStreaming>k__BackingField;
    [CompilerGeneratedAttribute]
private static EncoderNamedPreset <H265SingleBitrate720P>k__BackingField;
    [CompilerGeneratedAttribute]
private static EncoderNamedPreset <H265SingleBitrate1080P>k__BackingField;
    [CompilerGeneratedAttribute]
private static EncoderNamedPreset <H265SingleBitrate4K>k__BackingField;
    public static EncoderNamedPreset H264SingleBitrateSD { get; }
    public static EncoderNamedPreset H264SingleBitrate720P { get; }
    public static EncoderNamedPreset H264SingleBitrate1080P { get; }
    public static EncoderNamedPreset AdaptiveStreaming { get; }
    public static EncoderNamedPreset AacGoodQualityAudio { get; }
    public static EncoderNamedPreset DDGoodQualityAudio { get; }
    public static EncoderNamedPreset ContentAwareEncodingExperimental { get; }
    public static EncoderNamedPreset ContentAwareEncoding { get; }
    public static EncoderNamedPreset CopyAllBitrateNonInterleaved { get; }
    public static EncoderNamedPreset H264MultipleBitrate1080P { get; }
    public static EncoderNamedPreset H264MultipleBitrate720P { get; }
    public static EncoderNamedPreset H264MultipleBitrateSD { get; }
    public static EncoderNamedPreset H265ContentAwareEncoding { get; }
    public static EncoderNamedPreset H265AdaptiveStreaming { get; }
    public static EncoderNamedPreset H265SingleBitrate720P { get; }
    public static EncoderNamedPreset H265SingleBitrate1080P { get; }
    public static EncoderNamedPreset H265SingleBitrate4K { get; }
    public EncoderNamedPreset(string value);
    private static EncoderNamedPreset();
    [CompilerGeneratedAttribute]
public static EncoderNamedPreset get_H264SingleBitrateSD();
    [CompilerGeneratedAttribute]
public static EncoderNamedPreset get_H264SingleBitrate720P();
    [CompilerGeneratedAttribute]
public static EncoderNamedPreset get_H264SingleBitrate1080P();
    [CompilerGeneratedAttribute]
public static EncoderNamedPreset get_AdaptiveStreaming();
    [CompilerGeneratedAttribute]
public static EncoderNamedPreset get_AacGoodQualityAudio();
    [CompilerGeneratedAttribute]
public static EncoderNamedPreset get_DDGoodQualityAudio();
    [CompilerGeneratedAttribute]
public static EncoderNamedPreset get_ContentAwareEncodingExperimental();
    [CompilerGeneratedAttribute]
public static EncoderNamedPreset get_ContentAwareEncoding();
    [CompilerGeneratedAttribute]
public static EncoderNamedPreset get_CopyAllBitrateNonInterleaved();
    [CompilerGeneratedAttribute]
public static EncoderNamedPreset get_H264MultipleBitrate1080P();
    [CompilerGeneratedAttribute]
public static EncoderNamedPreset get_H264MultipleBitrate720P();
    [CompilerGeneratedAttribute]
public static EncoderNamedPreset get_H264MultipleBitrateSD();
    [CompilerGeneratedAttribute]
public static EncoderNamedPreset get_H265ContentAwareEncoding();
    [CompilerGeneratedAttribute]
public static EncoderNamedPreset get_H265AdaptiveStreaming();
    [CompilerGeneratedAttribute]
public static EncoderNamedPreset get_H265SingleBitrate720P();
    [CompilerGeneratedAttribute]
public static EncoderNamedPreset get_H265SingleBitrate1080P();
    [CompilerGeneratedAttribute]
public static EncoderNamedPreset get_H265SingleBitrate4K();
    public static bool op_Equality(EncoderNamedPreset left, EncoderNamedPreset right);
    public static bool op_Inequality(EncoderNamedPreset left, EncoderNamedPreset right);
    public static EncoderNamedPreset op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(EncoderNamedPreset other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.EncoderPresetConfigurations : object {
    [CompilerGeneratedAttribute]
private Nullable`1<EncodingComplexity> <Complexity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<InterleaveOutput> <InterleaveOutput>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <KeyFrameIntervalInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxBitrateBps>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxHeight>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxLayers>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinBitrateBps>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinHeight>k__BackingField;
    public Nullable`1<EncodingComplexity> Complexity { get; public set; }
    public Nullable`1<InterleaveOutput> InterleaveOutput { get; public set; }
    public Nullable`1<float> KeyFrameIntervalInSeconds { get; public set; }
    public Nullable`1<int> MaxBitrateBps { get; public set; }
    public Nullable`1<int> MaxHeight { get; public set; }
    public Nullable`1<int> MaxLayers { get; public set; }
    public Nullable`1<int> MinBitrateBps { get; public set; }
    public Nullable`1<int> MinHeight { get; public set; }
    internal EncoderPresetConfigurations(Nullable`1<EncodingComplexity> complexity, Nullable`1<InterleaveOutput> interleaveOutput, Nullable`1<float> keyFrameIntervalInSeconds, Nullable`1<int> maxBitrateBps, Nullable`1<int> maxHeight, Nullable`1<int> maxLayers, Nullable`1<int> minBitrateBps, Nullable`1<int> minHeight);
    [CompilerGeneratedAttribute]
public Nullable`1<EncodingComplexity> get_Complexity();
    [CompilerGeneratedAttribute]
public void set_Complexity(Nullable`1<EncodingComplexity> value);
    [CompilerGeneratedAttribute]
public Nullable`1<InterleaveOutput> get_InterleaveOutput();
    [CompilerGeneratedAttribute]
public void set_InterleaveOutput(Nullable`1<InterleaveOutput> value);
    [CompilerGeneratedAttribute]
public Nullable`1<float> get_KeyFrameIntervalInSeconds();
    [CompilerGeneratedAttribute]
public void set_KeyFrameIntervalInSeconds(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxBitrateBps();
    [CompilerGeneratedAttribute]
public void set_MaxBitrateBps(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxHeight();
    [CompilerGeneratedAttribute]
public void set_MaxHeight(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxLayers();
    [CompilerGeneratedAttribute]
public void set_MaxLayers(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MinBitrateBps();
    [CompilerGeneratedAttribute]
public void set_MinBitrateBps(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MinHeight();
    [CompilerGeneratedAttribute]
public void set_MinHeight(Nullable`1<int> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static EncoderPresetConfigurations DeserializeEncoderPresetConfigurations(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.EncodingComplexity : ValueType {
    private string _value;
    private static string SpeedValue;
    private static string BalancedValue;
    private static string QualityValue;
    [CompilerGeneratedAttribute]
private static EncodingComplexity <Speed>k__BackingField;
    [CompilerGeneratedAttribute]
private static EncodingComplexity <Balanced>k__BackingField;
    [CompilerGeneratedAttribute]
private static EncodingComplexity <Quality>k__BackingField;
    public static EncodingComplexity Speed { get; }
    public static EncodingComplexity Balanced { get; }
    public static EncodingComplexity Quality { get; }
    public EncodingComplexity(string value);
    private static EncodingComplexity();
    [CompilerGeneratedAttribute]
public static EncodingComplexity get_Speed();
    [CompilerGeneratedAttribute]
public static EncodingComplexity get_Balanced();
    [CompilerGeneratedAttribute]
public static EncodingComplexity get_Quality();
    public static bool op_Equality(EncodingComplexity left, EncodingComplexity right);
    public static bool op_Inequality(EncodingComplexity left, EncodingComplexity right);
    public static EncodingComplexity op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(EncodingComplexity other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.EncryptionSchemeDefaultKey : object {
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PolicyName>k__BackingField;
    public string Label { get; public set; }
    public string PolicyName { get; public set; }
    internal EncryptionSchemeDefaultKey(string label, string policyName);
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public string get_PolicyName();
    [CompilerGeneratedAttribute]
public void set_PolicyName(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static EncryptionSchemeDefaultKey DeserializeEncryptionSchemeDefaultKey(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.EnvelopeEncryption : object {
    [CompilerGeneratedAttribute]
private MediaEnabledProtocols <EnabledProtocols>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<MediaTrackSelection> <ClearTracks>k__BackingField;
    [CompilerGeneratedAttribute]
private StreamingPolicyContentKeys <ContentKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomKeyAcquisitionUriTemplate>k__BackingField;
    public MediaEnabledProtocols EnabledProtocols { get; public set; }
    public IList`1<MediaTrackSelection> ClearTracks { get; }
    public StreamingPolicyContentKeys ContentKeys { get; public set; }
    public string CustomKeyAcquisitionUriTemplate { get; public set; }
    internal EnvelopeEncryption(MediaEnabledProtocols enabledProtocols, IList`1<MediaTrackSelection> clearTracks, StreamingPolicyContentKeys contentKeys, string customKeyAcquisitionUriTemplate);
    [CompilerGeneratedAttribute]
public MediaEnabledProtocols get_EnabledProtocols();
    [CompilerGeneratedAttribute]
public void set_EnabledProtocols(MediaEnabledProtocols value);
    [CompilerGeneratedAttribute]
public IList`1<MediaTrackSelection> get_ClearTracks();
    [CompilerGeneratedAttribute]
public StreamingPolicyContentKeys get_ContentKeys();
    [CompilerGeneratedAttribute]
public void set_ContentKeys(StreamingPolicyContentKeys value);
    [CompilerGeneratedAttribute]
public string get_CustomKeyAcquisitionUriTemplate();
    [CompilerGeneratedAttribute]
public void set_CustomKeyAcquisitionUriTemplate(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static EnvelopeEncryption DeserializeEnvelopeEncryption(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.FadeOptions : object {
    [CompilerGeneratedAttribute]
private TimeSpan <Duration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FadeColor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Start>k__BackingField;
    public TimeSpan Duration { get; public set; }
    public string FadeColor { get; public set; }
    public string Start { get; public set; }
    public FadeOptions(TimeSpan duration, string fadeColor);
    internal FadeOptions(TimeSpan duration, string fadeColor, string start);
    [CompilerGeneratedAttribute]
public TimeSpan get_Duration();
    [CompilerGeneratedAttribute]
public void set_Duration(TimeSpan value);
    [CompilerGeneratedAttribute]
public string get_FadeColor();
    [CompilerGeneratedAttribute]
public void set_FadeColor(string value);
    [CompilerGeneratedAttribute]
public string get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static FadeOptions DeserializeFadeOptions(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.FilteringOperations : object {
    [CompilerGeneratedAttribute]
private DeinterlaceSettings <Deinterlace>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<RotationSetting> <Rotation>k__BackingField;
    [CompilerGeneratedAttribute]
private RectangularWindow <Crop>k__BackingField;
    [CompilerGeneratedAttribute]
private FadeOptions <FadeIn>k__BackingField;
    [CompilerGeneratedAttribute]
private FadeOptions <FadeOut>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<MediaOverlayBase> <Overlays>k__BackingField;
    public DeinterlaceSettings Deinterlace { get; public set; }
    public Nullable`1<RotationSetting> Rotation { get; public set; }
    public RectangularWindow Crop { get; public set; }
    public FadeOptions FadeIn { get; public set; }
    public FadeOptions FadeOut { get; public set; }
    public IList`1<MediaOverlayBase> Overlays { get; }
    internal FilteringOperations(DeinterlaceSettings deinterlace, Nullable`1<RotationSetting> rotation, RectangularWindow crop, FadeOptions fadeIn, FadeOptions fadeOut, IList`1<MediaOverlayBase> overlays);
    [CompilerGeneratedAttribute]
public DeinterlaceSettings get_Deinterlace();
    [CompilerGeneratedAttribute]
public void set_Deinterlace(DeinterlaceSettings value);
    [CompilerGeneratedAttribute]
public Nullable`1<RotationSetting> get_Rotation();
    [CompilerGeneratedAttribute]
public void set_Rotation(Nullable`1<RotationSetting> value);
    [CompilerGeneratedAttribute]
public RectangularWindow get_Crop();
    [CompilerGeneratedAttribute]
public void set_Crop(RectangularWindow value);
    [CompilerGeneratedAttribute]
public FadeOptions get_FadeIn();
    [CompilerGeneratedAttribute]
public void set_FadeIn(FadeOptions value);
    [CompilerGeneratedAttribute]
public FadeOptions get_FadeOut();
    [CompilerGeneratedAttribute]
public void set_FadeOut(FadeOptions value);
    [CompilerGeneratedAttribute]
public IList`1<MediaOverlayBase> get_Overlays();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static FilteringOperations DeserializeFilteringOperations(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.FilterTrackPropertyCompareOperation : ValueType {
    private string _value;
    private static string EqualValue;
    private static string NotEqualValue;
    [CompilerGeneratedAttribute]
private static FilterTrackPropertyCompareOperation <Equal>k__BackingField;
    [CompilerGeneratedAttribute]
private static FilterTrackPropertyCompareOperation <NotEqual>k__BackingField;
    public static FilterTrackPropertyCompareOperation Equal { get; }
    public static FilterTrackPropertyCompareOperation NotEqual { get; }
    public FilterTrackPropertyCompareOperation(string value);
    private static FilterTrackPropertyCompareOperation();
    [CompilerGeneratedAttribute]
public static FilterTrackPropertyCompareOperation get_Equal();
    [CompilerGeneratedAttribute]
public static FilterTrackPropertyCompareOperation get_NotEqual();
    public static bool op_Equality(FilterTrackPropertyCompareOperation left, FilterTrackPropertyCompareOperation right);
    public static bool op_Inequality(FilterTrackPropertyCompareOperation left, FilterTrackPropertyCompareOperation right);
    public static FilterTrackPropertyCompareOperation op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(FilterTrackPropertyCompareOperation other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.FilterTrackPropertyCondition : object {
    [CompilerGeneratedAttribute]
private FilterTrackPropertyType <Property>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private FilterTrackPropertyCompareOperation <Operation>k__BackingField;
    public FilterTrackPropertyType Property { get; public set; }
    public string Value { get; public set; }
    public FilterTrackPropertyCompareOperation Operation { get; public set; }
    public FilterTrackPropertyCondition(FilterTrackPropertyType property, string value, FilterTrackPropertyCompareOperation operation);
    [CompilerGeneratedAttribute]
public FilterTrackPropertyType get_Property();
    [CompilerGeneratedAttribute]
public void set_Property(FilterTrackPropertyType value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public FilterTrackPropertyCompareOperation get_Operation();
    [CompilerGeneratedAttribute]
public void set_Operation(FilterTrackPropertyCompareOperation value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static FilterTrackPropertyCondition DeserializeFilterTrackPropertyCondition(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.FilterTrackPropertyType : ValueType {
    private string _value;
    private static string UnknownValue;
    private static string TypeValue;
    private static string NameValue;
    private static string LanguageValue;
    private static string FourCCValue;
    private static string BitrateValue;
    [CompilerGeneratedAttribute]
private static FilterTrackPropertyType <Unknown>k__BackingField;
    [CompilerGeneratedAttribute]
private static FilterTrackPropertyType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private static FilterTrackPropertyType <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private static FilterTrackPropertyType <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private static FilterTrackPropertyType <FourCC>k__BackingField;
    [CompilerGeneratedAttribute]
private static FilterTrackPropertyType <Bitrate>k__BackingField;
    public static FilterTrackPropertyType Unknown { get; }
    public static FilterTrackPropertyType Type { get; }
    public static FilterTrackPropertyType Name { get; }
    public static FilterTrackPropertyType Language { get; }
    public static FilterTrackPropertyType FourCC { get; }
    public static FilterTrackPropertyType Bitrate { get; }
    public FilterTrackPropertyType(string value);
    private static FilterTrackPropertyType();
    [CompilerGeneratedAttribute]
public static FilterTrackPropertyType get_Unknown();
    [CompilerGeneratedAttribute]
public static FilterTrackPropertyType get_Type();
    [CompilerGeneratedAttribute]
public static FilterTrackPropertyType get_Name();
    [CompilerGeneratedAttribute]
public static FilterTrackPropertyType get_Language();
    [CompilerGeneratedAttribute]
public static FilterTrackPropertyType get_FourCC();
    [CompilerGeneratedAttribute]
public static FilterTrackPropertyType get_Bitrate();
    public static bool op_Equality(FilterTrackPropertyType left, FilterTrackPropertyType right);
    public static bool op_Inequality(FilterTrackPropertyType left, FilterTrackPropertyType right);
    public static FilterTrackPropertyType op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(FilterTrackPropertyType other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.FilterTrackSelection : object {
    [CompilerGeneratedAttribute]
private IList`1<FilterTrackPropertyCondition> <TrackSelections>k__BackingField;
    public IList`1<FilterTrackPropertyCondition> TrackSelections { get; }
    public FilterTrackSelection(IEnumerable`1<FilterTrackPropertyCondition> trackSelections);
    internal FilterTrackSelection(IList`1<FilterTrackPropertyCondition> trackSelections);
    [CompilerGeneratedAttribute]
public IList`1<FilterTrackPropertyCondition> get_TrackSelections();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static FilterTrackSelection DeserializeFilterTrackSelection(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.FirstQuality : object {
    [CompilerGeneratedAttribute]
private int <Bitrate>k__BackingField;
    public int Bitrate { get; public set; }
    public FirstQuality(int bitrate);
    [CompilerGeneratedAttribute]
public int get_Bitrate();
    [CompilerGeneratedAttribute]
public void set_Bitrate(int value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static FirstQuality DeserializeFirstQuality(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.FromAllInputFile : MediaJobInputDefinition {
    internal FromAllInputFile(string odataType, IList`1<TrackDescriptor> includedTracks);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static FromAllInputFile DeserializeFromAllInputFile(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.FromEachInputFile : MediaJobInputDefinition {
    internal FromEachInputFile(string odataType, IList`1<TrackDescriptor> includedTracks);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static FromEachInputFile DeserializeFromEachInputFile(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.H264Complexity : ValueType {
    private string _value;
    private static string SpeedValue;
    private static string BalancedValue;
    private static string QualityValue;
    [CompilerGeneratedAttribute]
private static H264Complexity <Speed>k__BackingField;
    [CompilerGeneratedAttribute]
private static H264Complexity <Balanced>k__BackingField;
    [CompilerGeneratedAttribute]
private static H264Complexity <Quality>k__BackingField;
    public static H264Complexity Speed { get; }
    public static H264Complexity Balanced { get; }
    public static H264Complexity Quality { get; }
    public H264Complexity(string value);
    private static H264Complexity();
    [CompilerGeneratedAttribute]
public static H264Complexity get_Speed();
    [CompilerGeneratedAttribute]
public static H264Complexity get_Balanced();
    [CompilerGeneratedAttribute]
public static H264Complexity get_Quality();
    public static bool op_Equality(H264Complexity left, H264Complexity right);
    public static bool op_Inequality(H264Complexity left, H264Complexity right);
    public static H264Complexity op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(H264Complexity other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.H264Layer : VideoLayer {
    [CompilerGeneratedAttribute]
private Nullable`1<H264VideoProfile> <Profile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Level>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <BufferWindow>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <ConstantRateFactor>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ReferenceFrames>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<LayerEntropyMode> <EntropyMode>k__BackingField;
    public Nullable`1<H264VideoProfile> Profile { get; public set; }
    public string Level { get; public set; }
    public Nullable`1<TimeSpan> BufferWindow { get; public set; }
    public Nullable`1<float> ConstantRateFactor { get; public set; }
    public Nullable`1<int> ReferenceFrames { get; public set; }
    public Nullable`1<LayerEntropyMode> EntropyMode { get; public set; }
    public H264Layer(int bitrate);
    internal H264Layer(string width, string height, string label, int bitrate, Nullable`1<int> maxBitrate, Nullable`1<int> bFrames, string frameRate, Nullable`1<int> slices, Nullable`1<bool> useAdaptiveBFrame, Nullable`1<H264VideoProfile> profile, string level, Nullable`1<TimeSpan> bufferWindow, Nullable`1<float> constantRateFactor, Nullable`1<int> referenceFrames, Nullable`1<LayerEntropyMode> entropyMode);
    [CompilerGeneratedAttribute]
public Nullable`1<H264VideoProfile> get_Profile();
    [CompilerGeneratedAttribute]
public void set_Profile(Nullable`1<H264VideoProfile> value);
    [CompilerGeneratedAttribute]
public string get_Level();
    [CompilerGeneratedAttribute]
public void set_Level(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_BufferWindow();
    [CompilerGeneratedAttribute]
public void set_BufferWindow(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<float> get_ConstantRateFactor();
    [CompilerGeneratedAttribute]
public void set_ConstantRateFactor(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ReferenceFrames();
    [CompilerGeneratedAttribute]
public void set_ReferenceFrames(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<LayerEntropyMode> get_EntropyMode();
    [CompilerGeneratedAttribute]
public void set_EntropyMode(Nullable`1<LayerEntropyMode> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static H264Layer DeserializeH264Layer(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.H264RateControlMode : ValueType {
    private string _value;
    private static string AbrValue;
    private static string CbrValue;
    private static string CrfValue;
    [CompilerGeneratedAttribute]
private static H264RateControlMode <Abr>k__BackingField;
    [CompilerGeneratedAttribute]
private static H264RateControlMode <Cbr>k__BackingField;
    [CompilerGeneratedAttribute]
private static H264RateControlMode <Crf>k__BackingField;
    public static H264RateControlMode Abr { get; }
    public static H264RateControlMode Cbr { get; }
    public static H264RateControlMode Crf { get; }
    public H264RateControlMode(string value);
    private static H264RateControlMode();
    [CompilerGeneratedAttribute]
public static H264RateControlMode get_Abr();
    [CompilerGeneratedAttribute]
public static H264RateControlMode get_Cbr();
    [CompilerGeneratedAttribute]
public static H264RateControlMode get_Crf();
    public static bool op_Equality(H264RateControlMode left, H264RateControlMode right);
    public static bool op_Inequality(H264RateControlMode left, H264RateControlMode right);
    public static H264RateControlMode op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(H264RateControlMode other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.H264Video : MediaVideoBase {
    [CompilerGeneratedAttribute]
private Nullable`1<H264Complexity> <Complexity>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<H264Layer> <Layers>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<H264RateControlMode> <RateControlMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseSceneChangeDetection>k__BackingField;
    public Nullable`1<H264Complexity> Complexity { get; public set; }
    public IList`1<H264Layer> Layers { get; }
    public Nullable`1<H264RateControlMode> RateControlMode { get; public set; }
    public Nullable`1<bool> UseSceneChangeDetection { get; public set; }
    internal H264Video(string odataType, string label, Nullable`1<TimeSpan> keyFrameInterval, Nullable`1<InputVideoStretchMode> stretchMode, Nullable`1<VideoSyncMode> syncMode, Nullable`1<H264Complexity> complexity, IList`1<H264Layer> layers, Nullable`1<H264RateControlMode> rateControlMode, Nullable`1<bool> useSceneChangeDetection);
    [CompilerGeneratedAttribute]
public Nullable`1<H264Complexity> get_Complexity();
    [CompilerGeneratedAttribute]
public void set_Complexity(Nullable`1<H264Complexity> value);
    [CompilerGeneratedAttribute]
public IList`1<H264Layer> get_Layers();
    [CompilerGeneratedAttribute]
public Nullable`1<H264RateControlMode> get_RateControlMode();
    [CompilerGeneratedAttribute]
public void set_RateControlMode(Nullable`1<H264RateControlMode> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UseSceneChangeDetection();
    [CompilerGeneratedAttribute]
public void set_UseSceneChangeDetection(Nullable`1<bool> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static H264Video DeserializeH264Video(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.H264VideoProfile : ValueType {
    private string _value;
    private static string AutoValue;
    private static string BaselineValue;
    private static string MainValue;
    private static string HighValue;
    private static string High422Value;
    private static string High444Value;
    [CompilerGeneratedAttribute]
private static H264VideoProfile <Auto>k__BackingField;
    [CompilerGeneratedAttribute]
private static H264VideoProfile <Baseline>k__BackingField;
    [CompilerGeneratedAttribute]
private static H264VideoProfile <Main>k__BackingField;
    [CompilerGeneratedAttribute]
private static H264VideoProfile <High>k__BackingField;
    [CompilerGeneratedAttribute]
private static H264VideoProfile <High422>k__BackingField;
    [CompilerGeneratedAttribute]
private static H264VideoProfile <High444>k__BackingField;
    public static H264VideoProfile Auto { get; }
    public static H264VideoProfile Baseline { get; }
    public static H264VideoProfile Main { get; }
    public static H264VideoProfile High { get; }
    public static H264VideoProfile High422 { get; }
    public static H264VideoProfile High444 { get; }
    public H264VideoProfile(string value);
    private static H264VideoProfile();
    [CompilerGeneratedAttribute]
public static H264VideoProfile get_Auto();
    [CompilerGeneratedAttribute]
public static H264VideoProfile get_Baseline();
    [CompilerGeneratedAttribute]
public static H264VideoProfile get_Main();
    [CompilerGeneratedAttribute]
public static H264VideoProfile get_High();
    [CompilerGeneratedAttribute]
public static H264VideoProfile get_High422();
    [CompilerGeneratedAttribute]
public static H264VideoProfile get_High444();
    public static bool op_Equality(H264VideoProfile left, H264VideoProfile right);
    public static bool op_Inequality(H264VideoProfile left, H264VideoProfile right);
    public static H264VideoProfile op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(H264VideoProfile other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.H265Complexity : ValueType {
    private string _value;
    private static string SpeedValue;
    private static string BalancedValue;
    private static string QualityValue;
    [CompilerGeneratedAttribute]
private static H265Complexity <Speed>k__BackingField;
    [CompilerGeneratedAttribute]
private static H265Complexity <Balanced>k__BackingField;
    [CompilerGeneratedAttribute]
private static H265Complexity <Quality>k__BackingField;
    public static H265Complexity Speed { get; }
    public static H265Complexity Balanced { get; }
    public static H265Complexity Quality { get; }
    public H265Complexity(string value);
    private static H265Complexity();
    [CompilerGeneratedAttribute]
public static H265Complexity get_Speed();
    [CompilerGeneratedAttribute]
public static H265Complexity get_Balanced();
    [CompilerGeneratedAttribute]
public static H265Complexity get_Quality();
    public static bool op_Equality(H265Complexity left, H265Complexity right);
    public static bool op_Inequality(H265Complexity left, H265Complexity right);
    public static H265Complexity op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(H265Complexity other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.H265Layer : H265VideoLayer {
    [CompilerGeneratedAttribute]
private Nullable`1<H265VideoProfile> <Profile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Level>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <BufferWindow>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <Crf>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ReferenceFrames>k__BackingField;
    public Nullable`1<H265VideoProfile> Profile { get; public set; }
    public string Level { get; public set; }
    public Nullable`1<TimeSpan> BufferWindow { get; public set; }
    public Nullable`1<float> Crf { get; public set; }
    public Nullable`1<int> ReferenceFrames { get; public set; }
    public H265Layer(int bitrate);
    internal H265Layer(string width, string height, string label, int bitrate, Nullable`1<int> maxBitrate, Nullable`1<int> bFrames, string frameRate, Nullable`1<int> slices, Nullable`1<bool> useAdaptiveBFrame, Nullable`1<H265VideoProfile> profile, string level, Nullable`1<TimeSpan> bufferWindow, Nullable`1<float> crf, Nullable`1<int> referenceFrames);
    [CompilerGeneratedAttribute]
public Nullable`1<H265VideoProfile> get_Profile();
    [CompilerGeneratedAttribute]
public void set_Profile(Nullable`1<H265VideoProfile> value);
    [CompilerGeneratedAttribute]
public string get_Level();
    [CompilerGeneratedAttribute]
public void set_Level(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_BufferWindow();
    [CompilerGeneratedAttribute]
public void set_BufferWindow(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<float> get_Crf();
    [CompilerGeneratedAttribute]
public void set_Crf(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ReferenceFrames();
    [CompilerGeneratedAttribute]
public void set_ReferenceFrames(Nullable`1<int> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static H265Layer DeserializeH265Layer(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.H265Video : MediaVideoBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseSceneChangeDetection>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<H265Complexity> <Complexity>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<H265Layer> <Layers>k__BackingField;
    public Nullable`1<bool> UseSceneChangeDetection { get; public set; }
    public Nullable`1<H265Complexity> Complexity { get; public set; }
    public IList`1<H265Layer> Layers { get; }
    internal H265Video(string odataType, string label, Nullable`1<TimeSpan> keyFrameInterval, Nullable`1<InputVideoStretchMode> stretchMode, Nullable`1<VideoSyncMode> syncMode, Nullable`1<bool> useSceneChangeDetection, Nullable`1<H265Complexity> complexity, IList`1<H265Layer> layers);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UseSceneChangeDetection();
    [CompilerGeneratedAttribute]
public void set_UseSceneChangeDetection(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<H265Complexity> get_Complexity();
    [CompilerGeneratedAttribute]
public void set_Complexity(Nullable`1<H265Complexity> value);
    [CompilerGeneratedAttribute]
public IList`1<H265Layer> get_Layers();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static H265Video DeserializeH265Video(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.H265VideoLayer : MediaLayerBase {
    [CompilerGeneratedAttribute]
private int <Bitrate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxBitrate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <BFrames>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FrameRate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Slices>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseAdaptiveBFrame>k__BackingField;
    public int Bitrate { get; public set; }
    public Nullable`1<int> MaxBitrate { get; public set; }
    public Nullable`1<int> BFrames { get; public set; }
    public string FrameRate { get; public set; }
    public Nullable`1<int> Slices { get; public set; }
    public Nullable`1<bool> UseAdaptiveBFrame { get; public set; }
    public H265VideoLayer(int bitrate);
    internal H265VideoLayer(string width, string height, string label, int bitrate, Nullable`1<int> maxBitrate, Nullable`1<int> bFrames, string frameRate, Nullable`1<int> slices, Nullable`1<bool> useAdaptiveBFrame);
    [CompilerGeneratedAttribute]
public int get_Bitrate();
    [CompilerGeneratedAttribute]
public void set_Bitrate(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxBitrate();
    [CompilerGeneratedAttribute]
public void set_MaxBitrate(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_BFrames();
    [CompilerGeneratedAttribute]
public void set_BFrames(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_FrameRate();
    [CompilerGeneratedAttribute]
public void set_FrameRate(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Slices();
    [CompilerGeneratedAttribute]
public void set_Slices(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UseAdaptiveBFrame();
    [CompilerGeneratedAttribute]
public void set_UseAdaptiveBFrame(Nullable`1<bool> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static H265VideoLayer DeserializeH265VideoLayer(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.H265VideoProfile : ValueType {
    private string _value;
    private static string AutoValue;
    private static string MainValue;
    private static string Main10Value;
    [CompilerGeneratedAttribute]
private static H265VideoProfile <Auto>k__BackingField;
    [CompilerGeneratedAttribute]
private static H265VideoProfile <Main>k__BackingField;
    [CompilerGeneratedAttribute]
private static H265VideoProfile <Main10>k__BackingField;
    public static H265VideoProfile Auto { get; }
    public static H265VideoProfile Main { get; }
    public static H265VideoProfile Main10 { get; }
    public H265VideoProfile(string value);
    private static H265VideoProfile();
    [CompilerGeneratedAttribute]
public static H265VideoProfile get_Auto();
    [CompilerGeneratedAttribute]
public static H265VideoProfile get_Main();
    [CompilerGeneratedAttribute]
public static H265VideoProfile get_Main10();
    public static bool op_Equality(H265VideoProfile left, H265VideoProfile right);
    public static bool op_Inequality(H265VideoProfile left, H265VideoProfile right);
    public static H265VideoProfile op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(H265VideoProfile other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
internal class Azure.ResourceManager.Media.Models.Hls : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <FragmentsPerTsSegment>k__BackingField;
    public Nullable`1<int> FragmentsPerTsSegment { get; public set; }
    internal Hls(Nullable`1<int> fragmentsPerTsSegment);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_FragmentsPerTsSegment();
    [CompilerGeneratedAttribute]
public void set_FragmentsPerTsSegment(Nullable`1<int> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static Hls DeserializeHls(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.HlsSettings : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsForced>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Characteristics>k__BackingField;
    public Nullable`1<bool> IsDefault { get; public set; }
    public Nullable`1<bool> IsForced { get; public set; }
    public string Characteristics { get; public set; }
    internal HlsSettings(Nullable`1<bool> isDefault, Nullable`1<bool> isForced, string characteristics);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsDefault();
    [CompilerGeneratedAttribute]
public void set_IsDefault(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsForced();
    [CompilerGeneratedAttribute]
public void set_IsForced(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Characteristics();
    [CompilerGeneratedAttribute]
public void set_Characteristics(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static HlsSettings DeserializeHlsSettings(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.InputVideoStretchMode : ValueType {
    private string _value;
    private static string NoneValue;
    private static string AutoSizeValue;
    private static string AutoFitValue;
    [CompilerGeneratedAttribute]
private static InputVideoStretchMode <None>k__BackingField;
    [CompilerGeneratedAttribute]
private static InputVideoStretchMode <AutoSize>k__BackingField;
    [CompilerGeneratedAttribute]
private static InputVideoStretchMode <AutoFit>k__BackingField;
    public static InputVideoStretchMode None { get; }
    public static InputVideoStretchMode AutoSize { get; }
    public static InputVideoStretchMode AutoFit { get; }
    public InputVideoStretchMode(string value);
    private static InputVideoStretchMode();
    [CompilerGeneratedAttribute]
public static InputVideoStretchMode get_None();
    [CompilerGeneratedAttribute]
public static InputVideoStretchMode get_AutoSize();
    [CompilerGeneratedAttribute]
public static InputVideoStretchMode get_AutoFit();
    public static bool op_Equality(InputVideoStretchMode left, InputVideoStretchMode right);
    public static bool op_Inequality(InputVideoStretchMode left, InputVideoStretchMode right);
    public static InputVideoStretchMode op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(InputVideoStretchMode other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.InsightsType : ValueType {
    private string _value;
    private static string AudioInsightsOnlyValue;
    private static string VideoInsightsOnlyValue;
    private static string AllInsightsValue;
    [CompilerGeneratedAttribute]
private static InsightsType <AudioInsightsOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private static InsightsType <VideoInsightsOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private static InsightsType <AllInsights>k__BackingField;
    public static InsightsType AudioInsightsOnly { get; }
    public static InsightsType VideoInsightsOnly { get; }
    public static InsightsType AllInsights { get; }
    public InsightsType(string value);
    private static InsightsType();
    [CompilerGeneratedAttribute]
public static InsightsType get_AudioInsightsOnly();
    [CompilerGeneratedAttribute]
public static InsightsType get_VideoInsightsOnly();
    [CompilerGeneratedAttribute]
public static InsightsType get_AllInsights();
    public static bool op_Equality(InsightsType left, InsightsType right);
    public static bool op_Inequality(InsightsType left, InsightsType right);
    public static InsightsType op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(InsightsType other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.InterleaveOutput : ValueType {
    private string _value;
    private static string NonInterleavedOutputValue;
    private static string InterleavedOutputValue;
    [CompilerGeneratedAttribute]
private static InterleaveOutput <NonInterleavedOutput>k__BackingField;
    [CompilerGeneratedAttribute]
private static InterleaveOutput <InterleavedOutput>k__BackingField;
    public static InterleaveOutput NonInterleavedOutput { get; }
    public static InterleaveOutput InterleavedOutput { get; }
    public InterleaveOutput(string value);
    private static InterleaveOutput();
    [CompilerGeneratedAttribute]
public static InterleaveOutput get_NonInterleavedOutput();
    [CompilerGeneratedAttribute]
public static InterleaveOutput get_InterleavedOutput();
    public static bool op_Equality(InterleaveOutput left, InterleaveOutput right);
    public static bool op_Inequality(InterleaveOutput left, InterleaveOutput right);
    public static InterleaveOutput op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(InterleaveOutput other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
internal class Azure.ResourceManager.Media.Models.IPAccessControl : object {
    [CompilerGeneratedAttribute]
private IList`1<IPRange> <AllowedIPs>k__BackingField;
    public IList`1<IPRange> AllowedIPs { get; }
    internal IPAccessControl(IList`1<IPRange> allowedIPs);
    [CompilerGeneratedAttribute]
public IList`1<IPRange> get_AllowedIPs();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static IPAccessControl DeserializeIPAccessControl(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.IPAccessControlDefaultAction : ValueType {
    private string _value;
    private static string AllowValue;
    private static string DenyValue;
    [CompilerGeneratedAttribute]
private static IPAccessControlDefaultAction <Allow>k__BackingField;
    [CompilerGeneratedAttribute]
private static IPAccessControlDefaultAction <Deny>k__BackingField;
    public static IPAccessControlDefaultAction Allow { get; }
    public static IPAccessControlDefaultAction Deny { get; }
    public IPAccessControlDefaultAction(string value);
    private static IPAccessControlDefaultAction();
    [CompilerGeneratedAttribute]
public static IPAccessControlDefaultAction get_Allow();
    [CompilerGeneratedAttribute]
public static IPAccessControlDefaultAction get_Deny();
    public static bool op_Equality(IPAccessControlDefaultAction left, IPAccessControlDefaultAction right);
    public static bool op_Inequality(IPAccessControlDefaultAction left, IPAccessControlDefaultAction right);
    public static IPAccessControlDefaultAction op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(IPAccessControlDefaultAction other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.IPRange : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IPAddress <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <SubnetPrefixLength>k__BackingField;
    public string Name { get; public set; }
    public IPAddress Address { get; public set; }
    public Nullable`1<int> SubnetPrefixLength { get; public set; }
    internal IPRange(string name, IPAddress address, Nullable`1<int> subnetPrefixLength);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public IPAddress get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(IPAddress value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_SubnetPrefixLength();
    [CompilerGeneratedAttribute]
public void set_SubnetPrefixLength(Nullable`1<int> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static IPRange DeserializeIPRange(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.JpgFormat : OutputImageFileFormat {
    public JpgFormat(string filenamePattern);
    internal JpgFormat(string odataType, string filenamePattern);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static JpgFormat DeserializeJpgFormat(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.JpgImage : MediaImageBase {
    [CompilerGeneratedAttribute]
private IList`1<JpgLayer> <Layers>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <SpriteColumn>k__BackingField;
    public IList`1<JpgLayer> Layers { get; }
    public Nullable`1<int> SpriteColumn { get; public set; }
    public JpgImage(string start);
    internal JpgImage(string odataType, string label, Nullable`1<TimeSpan> keyFrameInterval, Nullable`1<InputVideoStretchMode> stretchMode, Nullable`1<VideoSyncMode> syncMode, string start, string step, string range, IList`1<JpgLayer> layers, Nullable`1<int> spriteColumn);
    [CompilerGeneratedAttribute]
public IList`1<JpgLayer> get_Layers();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_SpriteColumn();
    [CompilerGeneratedAttribute]
public void set_SpriteColumn(Nullable`1<int> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static JpgImage DeserializeJpgImage(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.JpgLayer : MediaLayerBase {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Quality>k__BackingField;
    public Nullable`1<int> Quality { get; public set; }
    internal JpgLayer(string width, string height, string label, Nullable`1<int> quality);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Quality();
    [CompilerGeneratedAttribute]
public void set_Quality(Nullable`1<int> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static JpgLayer DeserializeJpgLayer(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.KeyVaultProperties : object {
    [CompilerGeneratedAttribute]
private string <KeyIdentifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CurrentKeyIdentifier>k__BackingField;
    public string KeyIdentifier { get; public set; }
    public string CurrentKeyIdentifier { get; }
    internal KeyVaultProperties(string keyIdentifier, string currentKeyIdentifier);
    [CompilerGeneratedAttribute]
public string get_KeyIdentifier();
    [CompilerGeneratedAttribute]
public void set_KeyIdentifier(string value);
    [CompilerGeneratedAttribute]
public string get_CurrentKeyIdentifier();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static KeyVaultProperties DeserializeKeyVaultProperties(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.LayerEntropyMode : ValueType {
    private string _value;
    private static string CabacValue;
    private static string CavlcValue;
    [CompilerGeneratedAttribute]
private static LayerEntropyMode <Cabac>k__BackingField;
    [CompilerGeneratedAttribute]
private static LayerEntropyMode <Cavlc>k__BackingField;
    public static LayerEntropyMode Cabac { get; }
    public static LayerEntropyMode Cavlc { get; }
    public LayerEntropyMode(string value);
    private static LayerEntropyMode();
    [CompilerGeneratedAttribute]
public static LayerEntropyMode get_Cabac();
    [CompilerGeneratedAttribute]
public static LayerEntropyMode get_Cavlc();
    public static bool op_Equality(LayerEntropyMode left, LayerEntropyMode right);
    public static bool op_Inequality(LayerEntropyMode left, LayerEntropyMode right);
    public static LayerEntropyMode op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(LayerEntropyMode other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
internal class Azure.ResourceManager.Media.Models.ListContentKeysResponse : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<StreamingLocatorContentKey> <ContentKeys>k__BackingField;
    public IReadOnlyList`1<StreamingLocatorContentKey> ContentKeys { get; }
    internal ListContentKeysResponse(IReadOnlyList`1<StreamingLocatorContentKey> contentKeys);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<StreamingLocatorContentKey> get_ContentKeys();
    internal static ListContentKeysResponse DeserializeListContentKeysResponse(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.ListStreamingLocatorsResponse : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<MediaAssetStreamingLocator> <StreamingLocators>k__BackingField;
    public IReadOnlyList`1<MediaAssetStreamingLocator> StreamingLocators { get; }
    internal ListStreamingLocatorsResponse(IReadOnlyList`1<MediaAssetStreamingLocator> streamingLocators);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<MediaAssetStreamingLocator> get_StreamingLocators();
    internal static ListStreamingLocatorsResponse DeserializeListStreamingLocatorsResponse(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.LiveEventActionContent : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RemoveOutputsOnStop>k__BackingField;
    public Nullable`1<bool> RemoveOutputsOnStop { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_RemoveOutputsOnStop();
    [CompilerGeneratedAttribute]
public void set_RemoveOutputsOnStop(Nullable`1<bool> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
}
public class Azure.ResourceManager.Media.Models.LiveEventEncoding : object {
    [CompilerGeneratedAttribute]
private Nullable`1<LiveEventEncodingType> <EncodingType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PresetName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<InputVideoStretchMode> <StretchMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <KeyFrameInterval>k__BackingField;
    public Nullable`1<LiveEventEncodingType> EncodingType { get; public set; }
    public string PresetName { get; public set; }
    public Nullable`1<InputVideoStretchMode> StretchMode { get; public set; }
    public Nullable`1<TimeSpan> KeyFrameInterval { get; public set; }
    internal LiveEventEncoding(Nullable`1<LiveEventEncodingType> encodingType, string presetName, Nullable`1<InputVideoStretchMode> stretchMode, Nullable`1<TimeSpan> keyFrameInterval);
    [CompilerGeneratedAttribute]
public Nullable`1<LiveEventEncodingType> get_EncodingType();
    [CompilerGeneratedAttribute]
public void set_EncodingType(Nullable`1<LiveEventEncodingType> value);
    [CompilerGeneratedAttribute]
public string get_PresetName();
    [CompilerGeneratedAttribute]
public void set_PresetName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<InputVideoStretchMode> get_StretchMode();
    [CompilerGeneratedAttribute]
public void set_StretchMode(Nullable`1<InputVideoStretchMode> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_KeyFrameInterval();
    [CompilerGeneratedAttribute]
public void set_KeyFrameInterval(Nullable`1<TimeSpan> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static LiveEventEncoding DeserializeLiveEventEncoding(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.LiveEventEncodingType : ValueType {
    private string _value;
    private static string NoneValue;
    private static string StandardValue;
    private static string Premium1080PValue;
    private static string PassthroughBasicValue;
    private static string PassthroughStandardValue;
    [CompilerGeneratedAttribute]
private static LiveEventEncodingType <None>k__BackingField;
    [CompilerGeneratedAttribute]
private static LiveEventEncodingType <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static LiveEventEncodingType <Premium1080P>k__BackingField;
    [CompilerGeneratedAttribute]
private static LiveEventEncodingType <PassthroughBasic>k__BackingField;
    [CompilerGeneratedAttribute]
private static LiveEventEncodingType <PassthroughStandard>k__BackingField;
    public static LiveEventEncodingType None { get; }
    public static LiveEventEncodingType Standard { get; }
    public static LiveEventEncodingType Premium1080P { get; }
    public static LiveEventEncodingType PassthroughBasic { get; }
    public static LiveEventEncodingType PassthroughStandard { get; }
    public LiveEventEncodingType(string value);
    private static LiveEventEncodingType();
    [CompilerGeneratedAttribute]
public static LiveEventEncodingType get_None();
    [CompilerGeneratedAttribute]
public static LiveEventEncodingType get_Standard();
    [CompilerGeneratedAttribute]
public static LiveEventEncodingType get_Premium1080P();
    [CompilerGeneratedAttribute]
public static LiveEventEncodingType get_PassthroughBasic();
    [CompilerGeneratedAttribute]
public static LiveEventEncodingType get_PassthroughStandard();
    public static bool op_Equality(LiveEventEncodingType left, LiveEventEncodingType right);
    public static bool op_Inequality(LiveEventEncodingType left, LiveEventEncodingType right);
    public static LiveEventEncodingType op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(LiveEventEncodingType other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.LiveEventEndpoint : object {
    [CompilerGeneratedAttribute]
private string <Protocol>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    public string Protocol { get; public set; }
    public Uri Uri { get; public set; }
    internal LiveEventEndpoint(string protocol, Uri uri);
    [CompilerGeneratedAttribute]
public string get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(string value);
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(Uri value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static LiveEventEndpoint DeserializeLiveEventEndpoint(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.LiveEventInput : object {
    [CompilerGeneratedAttribute]
private LiveEventInputProtocol <StreamingProtocol>k__BackingField;
    [CompilerGeneratedAttribute]
private LiveEventInputAccessControl <AccessControl>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <KeyFrameIntervalDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<LiveEventEndpoint> <Endpoints>k__BackingField;
    public LiveEventInputProtocol StreamingProtocol { get; public set; }
    internal LiveEventInputAccessControl AccessControl { get; internal set; }
    public IList`1<IPRange> IPAllowedIPs { get; }
    public Nullable`1<TimeSpan> KeyFrameIntervalDuration { get; public set; }
    public string AccessToken { get; public set; }
    public IList`1<LiveEventEndpoint> Endpoints { get; }
    public LiveEventInput(LiveEventInputProtocol streamingProtocol);
    internal LiveEventInput(LiveEventInputProtocol streamingProtocol, LiveEventInputAccessControl accessControl, Nullable`1<TimeSpan> keyFrameIntervalDuration, string accessToken, IList`1<LiveEventEndpoint> endpoints);
    [CompilerGeneratedAttribute]
public LiveEventInputProtocol get_StreamingProtocol();
    [CompilerGeneratedAttribute]
public void set_StreamingProtocol(LiveEventInputProtocol value);
    [CompilerGeneratedAttribute]
internal LiveEventInputAccessControl get_AccessControl();
    [CompilerGeneratedAttribute]
internal void set_AccessControl(LiveEventInputAccessControl value);
    public IList`1<IPRange> get_IPAllowedIPs();
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_KeyFrameIntervalDuration();
    [CompilerGeneratedAttribute]
public void set_KeyFrameIntervalDuration(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public string get_AccessToken();
    [CompilerGeneratedAttribute]
public void set_AccessToken(string value);
    [CompilerGeneratedAttribute]
public IList`1<LiveEventEndpoint> get_Endpoints();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static LiveEventInput DeserializeLiveEventInput(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.LiveEventInputAccessControl : object {
    [CompilerGeneratedAttribute]
private IPAccessControl <IP>k__BackingField;
    internal IPAccessControl IP { get; internal set; }
    public IList`1<IPRange> IPAllowedIPs { get; }
    internal LiveEventInputAccessControl(IPAccessControl ip);
    [CompilerGeneratedAttribute]
internal IPAccessControl get_IP();
    [CompilerGeneratedAttribute]
internal void set_IP(IPAccessControl value);
    public IList`1<IPRange> get_IPAllowedIPs();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static LiveEventInputAccessControl DeserializeLiveEventInputAccessControl(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.LiveEventInputProtocol : ValueType {
    private string _value;
    private static string FragmentedMp4Value;
    private static string RtmpValue;
    [CompilerGeneratedAttribute]
private static LiveEventInputProtocol <FragmentedMp4>k__BackingField;
    [CompilerGeneratedAttribute]
private static LiveEventInputProtocol <Rtmp>k__BackingField;
    public static LiveEventInputProtocol FragmentedMp4 { get; }
    public static LiveEventInputProtocol Rtmp { get; }
    public LiveEventInputProtocol(string value);
    private static LiveEventInputProtocol();
    [CompilerGeneratedAttribute]
public static LiveEventInputProtocol get_FragmentedMp4();
    [CompilerGeneratedAttribute]
public static LiveEventInputProtocol get_Rtmp();
    public static bool op_Equality(LiveEventInputProtocol left, LiveEventInputProtocol right);
    public static bool op_Inequality(LiveEventInputProtocol left, LiveEventInputProtocol right);
    public static LiveEventInputProtocol op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(LiveEventInputProtocol other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.LiveEventInputTrackSelection : object {
    [CompilerGeneratedAttribute]
private string <Property>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Operation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Property { get; public set; }
    public string Operation { get; public set; }
    public string Value { get; public set; }
    internal LiveEventInputTrackSelection(string property, string operation, string value);
    [CompilerGeneratedAttribute]
public string get_Property();
    [CompilerGeneratedAttribute]
public void set_Property(string value);
    [CompilerGeneratedAttribute]
public string get_Operation();
    [CompilerGeneratedAttribute]
public void set_Operation(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static LiveEventInputTrackSelection DeserializeLiveEventInputTrackSelection(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.LiveEventListResult : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<MediaLiveEventData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OdataCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OdataNextLink>k__BackingField;
    public IReadOnlyList`1<MediaLiveEventData> Value { get; }
    public Nullable`1<int> OdataCount { get; }
    public string OdataNextLink { get; }
    internal LiveEventListResult(IReadOnlyList`1<MediaLiveEventData> value, Nullable`1<int> odataCount, string odataNextLink);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<MediaLiveEventData> get_Value();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_OdataCount();
    [CompilerGeneratedAttribute]
public string get_OdataNextLink();
    internal static LiveEventListResult DeserializeLiveEventListResult(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.LiveEventOutputTranscriptionTrack : object {
    [CompilerGeneratedAttribute]
private string <TrackName>k__BackingField;
    public string TrackName { get; public set; }
    public LiveEventOutputTranscriptionTrack(string trackName);
    [CompilerGeneratedAttribute]
public string get_TrackName();
    [CompilerGeneratedAttribute]
public void set_TrackName(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static LiveEventOutputTranscriptionTrack DeserializeLiveEventOutputTranscriptionTrack(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.LiveEventPreview : object {
    [CompilerGeneratedAttribute]
private IList`1<LiveEventEndpoint> <Endpoints>k__BackingField;
    [CompilerGeneratedAttribute]
private LiveEventPreviewAccessControl <AccessControl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PreviewLocator>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StreamingPolicyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AlternativeMediaId>k__BackingField;
    public IList`1<LiveEventEndpoint> Endpoints { get; }
    internal LiveEventPreviewAccessControl AccessControl { get; internal set; }
    public IList`1<IPRange> IPAllowedIPs { get; }
    public string PreviewLocator { get; public set; }
    public string StreamingPolicyName { get; public set; }
    public string AlternativeMediaId { get; public set; }
    internal LiveEventPreview(IList`1<LiveEventEndpoint> endpoints, LiveEventPreviewAccessControl accessControl, string previewLocator, string streamingPolicyName, string alternativeMediaId);
    [CompilerGeneratedAttribute]
public IList`1<LiveEventEndpoint> get_Endpoints();
    [CompilerGeneratedAttribute]
internal LiveEventPreviewAccessControl get_AccessControl();
    [CompilerGeneratedAttribute]
internal void set_AccessControl(LiveEventPreviewAccessControl value);
    public IList`1<IPRange> get_IPAllowedIPs();
    [CompilerGeneratedAttribute]
public string get_PreviewLocator();
    [CompilerGeneratedAttribute]
public void set_PreviewLocator(string value);
    [CompilerGeneratedAttribute]
public string get_StreamingPolicyName();
    [CompilerGeneratedAttribute]
public void set_StreamingPolicyName(string value);
    [CompilerGeneratedAttribute]
public string get_AlternativeMediaId();
    [CompilerGeneratedAttribute]
public void set_AlternativeMediaId(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static LiveEventPreview DeserializeLiveEventPreview(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.LiveEventPreviewAccessControl : object {
    [CompilerGeneratedAttribute]
private IPAccessControl <IP>k__BackingField;
    internal IPAccessControl IP { get; internal set; }
    public IList`1<IPRange> IPAllowedIPs { get; }
    internal LiveEventPreviewAccessControl(IPAccessControl ip);
    [CompilerGeneratedAttribute]
internal IPAccessControl get_IP();
    [CompilerGeneratedAttribute]
internal void set_IP(IPAccessControl value);
    public IList`1<IPRange> get_IPAllowedIPs();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static LiveEventPreviewAccessControl DeserializeLiveEventPreviewAccessControl(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.LiveEventResourceState : ValueType {
    private string _value;
    private static string StoppedValue;
    private static string AllocatingValue;
    private static string StandByValue;
    private static string StartingValue;
    private static string RunningValue;
    private static string StoppingValue;
    private static string DeletingValue;
    [CompilerGeneratedAttribute]
private static LiveEventResourceState <Stopped>k__BackingField;
    [CompilerGeneratedAttribute]
private static LiveEventResourceState <Allocating>k__BackingField;
    [CompilerGeneratedAttribute]
private static LiveEventResourceState <StandBy>k__BackingField;
    [CompilerGeneratedAttribute]
private static LiveEventResourceState <Starting>k__BackingField;
    [CompilerGeneratedAttribute]
private static LiveEventResourceState <Running>k__BackingField;
    [CompilerGeneratedAttribute]
private static LiveEventResourceState <Stopping>k__BackingField;
    [CompilerGeneratedAttribute]
private static LiveEventResourceState <Deleting>k__BackingField;
    public static LiveEventResourceState Stopped { get; }
    public static LiveEventResourceState Allocating { get; }
    public static LiveEventResourceState StandBy { get; }
    public static LiveEventResourceState Starting { get; }
    public static LiveEventResourceState Running { get; }
    public static LiveEventResourceState Stopping { get; }
    public static LiveEventResourceState Deleting { get; }
    public LiveEventResourceState(string value);
    private static LiveEventResourceState();
    [CompilerGeneratedAttribute]
public static LiveEventResourceState get_Stopped();
    [CompilerGeneratedAttribute]
public static LiveEventResourceState get_Allocating();
    [CompilerGeneratedAttribute]
public static LiveEventResourceState get_StandBy();
    [CompilerGeneratedAttribute]
public static LiveEventResourceState get_Starting();
    [CompilerGeneratedAttribute]
public static LiveEventResourceState get_Running();
    [CompilerGeneratedAttribute]
public static LiveEventResourceState get_Stopping();
    [CompilerGeneratedAttribute]
public static LiveEventResourceState get_Deleting();
    public static bool op_Equality(LiveEventResourceState left, LiveEventResourceState right);
    public static bool op_Inequality(LiveEventResourceState left, LiveEventResourceState right);
    public static LiveEventResourceState op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(LiveEventResourceState other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.LiveEventTranscription : object {
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<LiveEventInputTrackSelection> <InputTrackSelection>k__BackingField;
    [CompilerGeneratedAttribute]
private LiveEventOutputTranscriptionTrack <OutputTranscriptionTrack>k__BackingField;
    public string Language { get; public set; }
    public IList`1<LiveEventInputTrackSelection> InputTrackSelection { get; }
    internal LiveEventOutputTranscriptionTrack OutputTranscriptionTrack { get; internal set; }
    public string TrackName { get; public set; }
    internal LiveEventTranscription(string language, IList`1<LiveEventInputTrackSelection> inputTrackSelection, LiveEventOutputTranscriptionTrack outputTranscriptionTrack);
    [CompilerGeneratedAttribute]
public string get_Language();
    [CompilerGeneratedAttribute]
public void set_Language(string value);
    [CompilerGeneratedAttribute]
public IList`1<LiveEventInputTrackSelection> get_InputTrackSelection();
    [CompilerGeneratedAttribute]
internal LiveEventOutputTranscriptionTrack get_OutputTranscriptionTrack();
    [CompilerGeneratedAttribute]
internal void set_OutputTranscriptionTrack(LiveEventOutputTranscriptionTrack value);
    public string get_TrackName();
    public void set_TrackName(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static LiveEventTranscription DeserializeLiveEventTranscription(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.LiveOutputListResult : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<MediaLiveOutputData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OdataCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OdataNextLink>k__BackingField;
    public IReadOnlyList`1<MediaLiveOutputData> Value { get; }
    public Nullable`1<int> OdataCount { get; }
    public string OdataNextLink { get; }
    internal LiveOutputListResult(IReadOnlyList`1<MediaLiveOutputData> value, Nullable`1<int> odataCount, string odataNextLink);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<MediaLiveOutputData> get_Value();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_OdataCount();
    [CompilerGeneratedAttribute]
public string get_OdataNextLink();
    internal static LiveOutputListResult DeserializeLiveOutputListResult(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.LiveOutputResourceState : ValueType {
    private string _value;
    private static string CreatingValue;
    private static string RunningValue;
    private static string DeletingValue;
    [CompilerGeneratedAttribute]
private static LiveOutputResourceState <Creating>k__BackingField;
    [CompilerGeneratedAttribute]
private static LiveOutputResourceState <Running>k__BackingField;
    [CompilerGeneratedAttribute]
private static LiveOutputResourceState <Deleting>k__BackingField;
    public static LiveOutputResourceState Creating { get; }
    public static LiveOutputResourceState Running { get; }
    public static LiveOutputResourceState Deleting { get; }
    public LiveOutputResourceState(string value);
    private static LiveOutputResourceState();
    [CompilerGeneratedAttribute]
public static LiveOutputResourceState get_Creating();
    [CompilerGeneratedAttribute]
public static LiveOutputResourceState get_Running();
    [CompilerGeneratedAttribute]
public static LiveOutputResourceState get_Deleting();
    public static bool op_Equality(LiveOutputResourceState left, LiveOutputResourceState right);
    public static bool op_Inequality(LiveOutputResourceState left, LiveOutputResourceState right);
    public static LiveOutputResourceState op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(LiveOutputResourceState other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.MediaAccessControl : object {
    [CompilerGeneratedAttribute]
private Nullable`1<IPAccessControlDefaultAction> <DefaultAction>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IPAddress> <IPAllowList>k__BackingField;
    public Nullable`1<IPAccessControlDefaultAction> DefaultAction { get; public set; }
    public IList`1<IPAddress> IPAllowList { get; }
    internal MediaAccessControl(Nullable`1<IPAccessControlDefaultAction> defaultAction, IList`1<IPAddress> ipAllowList);
    [CompilerGeneratedAttribute]
public Nullable`1<IPAccessControlDefaultAction> get_DefaultAction();
    [CompilerGeneratedAttribute]
public void set_DefaultAction(Nullable`1<IPAccessControlDefaultAction> value);
    [CompilerGeneratedAttribute]
public IList`1<IPAddress> get_IPAllowList();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaAccessControl DeserializeMediaAccessControl(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.MediaAssetContainerPermission : ValueType {
    private string _value;
    private static string ReadValue;
    private static string ReadWriteValue;
    private static string ReadWriteDeleteValue;
    [CompilerGeneratedAttribute]
private static MediaAssetContainerPermission <Read>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaAssetContainerPermission <ReadWrite>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaAssetContainerPermission <ReadWriteDelete>k__BackingField;
    public static MediaAssetContainerPermission Read { get; }
    public static MediaAssetContainerPermission ReadWrite { get; }
    public static MediaAssetContainerPermission ReadWriteDelete { get; }
    public MediaAssetContainerPermission(string value);
    private static MediaAssetContainerPermission();
    [CompilerGeneratedAttribute]
public static MediaAssetContainerPermission get_Read();
    [CompilerGeneratedAttribute]
public static MediaAssetContainerPermission get_ReadWrite();
    [CompilerGeneratedAttribute]
public static MediaAssetContainerPermission get_ReadWriteDelete();
    public static bool op_Equality(MediaAssetContainerPermission left, MediaAssetContainerPermission right);
    public static bool op_Inequality(MediaAssetContainerPermission left, MediaAssetContainerPermission right);
    public static MediaAssetContainerPermission op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(MediaAssetContainerPermission other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.MediaAssetFileEncryptionMetadata : object {
    [CompilerGeneratedAttribute]
private string <InitializationVector>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssetFileName>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <AssetFileId>k__BackingField;
    public string InitializationVector { get; }
    public string AssetFileName { get; }
    public Guid AssetFileId { get; }
    internal MediaAssetFileEncryptionMetadata(Guid assetFileId);
    internal MediaAssetFileEncryptionMetadata(string initializationVector, string assetFileName, Guid assetFileId);
    [CompilerGeneratedAttribute]
public string get_InitializationVector();
    [CompilerGeneratedAttribute]
public string get_AssetFileName();
    [CompilerGeneratedAttribute]
public Guid get_AssetFileId();
    internal static MediaAssetFileEncryptionMetadata DeserializeMediaAssetFileEncryptionMetadata(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.MediaAssetFilterListResult : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<MediaAssetFilterData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OdataNextLink>k__BackingField;
    public IReadOnlyList`1<MediaAssetFilterData> Value { get; }
    public string OdataNextLink { get; }
    internal MediaAssetFilterListResult(IReadOnlyList`1<MediaAssetFilterData> value, string odataNextLink);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<MediaAssetFilterData> get_Value();
    [CompilerGeneratedAttribute]
public string get_OdataNextLink();
    internal static MediaAssetFilterListResult DeserializeMediaAssetFilterListResult(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.MediaAssetListResult : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<MediaAssetData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OdataNextLink>k__BackingField;
    public IReadOnlyList`1<MediaAssetData> Value { get; }
    public string OdataNextLink { get; }
    internal MediaAssetListResult(IReadOnlyList`1<MediaAssetData> value, string odataNextLink);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<MediaAssetData> get_Value();
    [CompilerGeneratedAttribute]
public string get_OdataNextLink();
    internal static MediaAssetListResult DeserializeMediaAssetListResult(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.MediaAssetStorageContainerSasContent : object {
    [CompilerGeneratedAttribute]
private Nullable`1<MediaAssetContainerPermission> <Permissions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <ExpireOn>k__BackingField;
    public Nullable`1<MediaAssetContainerPermission> Permissions { get; public set; }
    public Nullable`1<DateTimeOffset> ExpireOn { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<MediaAssetContainerPermission> get_Permissions();
    [CompilerGeneratedAttribute]
public void set_Permissions(Nullable`1<MediaAssetContainerPermission> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_ExpireOn();
    [CompilerGeneratedAttribute]
public void set_ExpireOn(Nullable`1<DateTimeOffset> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.MediaAssetStorageEncryptionFormat : ValueType {
    private string _value;
    private static string NoneValue;
    private static string MediaStorageClientEncryptionValue;
    [CompilerGeneratedAttribute]
private static MediaAssetStorageEncryptionFormat <None>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaAssetStorageEncryptionFormat <MediaStorageClientEncryption>k__BackingField;
    public static MediaAssetStorageEncryptionFormat None { get; }
    public static MediaAssetStorageEncryptionFormat MediaStorageClientEncryption { get; }
    public MediaAssetStorageEncryptionFormat(string value);
    private static MediaAssetStorageEncryptionFormat();
    [CompilerGeneratedAttribute]
public static MediaAssetStorageEncryptionFormat get_None();
    [CompilerGeneratedAttribute]
public static MediaAssetStorageEncryptionFormat get_MediaStorageClientEncryption();
    public static bool op_Equality(MediaAssetStorageEncryptionFormat left, MediaAssetStorageEncryptionFormat right);
    public static bool op_Inequality(MediaAssetStorageEncryptionFormat left, MediaAssetStorageEncryptionFormat right);
    public static MediaAssetStorageEncryptionFormat op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(MediaAssetStorageEncryptionFormat other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.MediaAssetStreamingLocator : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssetName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <CreatedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <StartOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <EndOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <StreamingLocatorId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StreamingPolicyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultContentKeyPolicyName>k__BackingField;
    public string Name { get; }
    public string AssetName { get; }
    public Nullable`1<DateTimeOffset> CreatedOn { get; }
    public Nullable`1<DateTimeOffset> StartOn { get; }
    public Nullable`1<DateTimeOffset> EndOn { get; }
    public Nullable`1<Guid> StreamingLocatorId { get; }
    public string StreamingPolicyName { get; }
    public string DefaultContentKeyPolicyName { get; }
    internal MediaAssetStreamingLocator(string name, string assetName, Nullable`1<DateTimeOffset> createdOn, Nullable`1<DateTimeOffset> startOn, Nullable`1<DateTimeOffset> endOn, Nullable`1<Guid> streamingLocatorId, string streamingPolicyName, string defaultContentKeyPolicyName);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_AssetName();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_CreatedOn();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_StartOn();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_EndOn();
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_StreamingLocatorId();
    [CompilerGeneratedAttribute]
public string get_StreamingPolicyName();
    [CompilerGeneratedAttribute]
public string get_DefaultContentKeyPolicyName();
    internal static MediaAssetStreamingLocator DeserializeMediaAssetStreamingLocator(JsonElement element);
}
public abstract class Azure.ResourceManager.Media.Models.MediaAssetTrackBase : object {
    [CompilerGeneratedAttribute]
private string <OdataType>k__BackingField;
    internal string OdataType { get; internal set; }
    internal MediaAssetTrackBase(string odataType);
    [CompilerGeneratedAttribute]
internal string get_OdataType();
    [CompilerGeneratedAttribute]
internal void set_OdataType(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaAssetTrackBase DeserializeMediaAssetTrackBase(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.MediaAssetTrackListResult : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<MediaAssetTrackData> <Value>k__BackingField;
    public IReadOnlyList`1<MediaAssetTrackData> Value { get; }
    internal MediaAssetTrackListResult(IReadOnlyList`1<MediaAssetTrackData> value);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<MediaAssetTrackData> get_Value();
    internal static MediaAssetTrackListResult DeserializeMediaAssetTrackListResult(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.MediaAudioBase : MediaCodecBase {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Channels>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <SamplingRate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Bitrate>k__BackingField;
    public Nullable`1<int> Channels { get; public set; }
    public Nullable`1<int> SamplingRate { get; public set; }
    public Nullable`1<int> Bitrate { get; public set; }
    internal MediaAudioBase(string odataType, string label, Nullable`1<int> channels, Nullable`1<int> samplingRate, Nullable`1<int> bitrate);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Channels();
    [CompilerGeneratedAttribute]
public void set_Channels(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_SamplingRate();
    [CompilerGeneratedAttribute]
public void set_SamplingRate(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Bitrate();
    [CompilerGeneratedAttribute]
public void set_Bitrate(Nullable`1<int> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaAudioBase DeserializeMediaAudioBase(JsonElement element);
}
public abstract class Azure.ResourceManager.Media.Models.MediaCodecBase : object {
    [CompilerGeneratedAttribute]
private string <OdataType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    internal string OdataType { get; internal set; }
    public string Label { get; public set; }
    internal MediaCodecBase(string odataType, string label);
    [CompilerGeneratedAttribute]
internal string get_OdataType();
    [CompilerGeneratedAttribute]
internal void set_OdataType(string value);
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaCodecBase DeserializeMediaCodecBase(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.MediaEnabledProtocols : object {
    [CompilerGeneratedAttribute]
private bool <IsDownloadEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDashEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsHlsEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSmoothStreamingEnabled>k__BackingField;
    public bool IsDownloadEnabled { get; public set; }
    public bool IsDashEnabled { get; public set; }
    public bool IsHlsEnabled { get; public set; }
    public bool IsSmoothStreamingEnabled { get; public set; }
    public MediaEnabledProtocols(bool isDownloadEnabled, bool isDashEnabled, bool isHlsEnabled, bool isSmoothStreamingEnabled);
    [CompilerGeneratedAttribute]
public bool get_IsDownloadEnabled();
    [CompilerGeneratedAttribute]
public void set_IsDownloadEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsDashEnabled();
    [CompilerGeneratedAttribute]
public void set_IsDashEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsHlsEnabled();
    [CompilerGeneratedAttribute]
public void set_IsHlsEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsSmoothStreamingEnabled();
    [CompilerGeneratedAttribute]
public void set_IsSmoothStreamingEnabled(bool value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaEnabledProtocols DeserializeMediaEnabledProtocols(JsonElement element);
}
public abstract class Azure.ResourceManager.Media.Models.MediaFormatBase : object {
    [CompilerGeneratedAttribute]
private string <OdataType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FilenamePattern>k__BackingField;
    internal string OdataType { get; internal set; }
    public string FilenamePattern { get; public set; }
    protected MediaFormatBase(string filenamePattern);
    internal MediaFormatBase(string odataType, string filenamePattern);
    [CompilerGeneratedAttribute]
internal string get_OdataType();
    [CompilerGeneratedAttribute]
internal void set_OdataType(string value);
    [CompilerGeneratedAttribute]
public string get_FilenamePattern();
    [CompilerGeneratedAttribute]
public void set_FilenamePattern(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaFormatBase DeserializeMediaFormatBase(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.MediaImageBase : MediaVideoBase {
    [CompilerGeneratedAttribute]
private string <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Step>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Range>k__BackingField;
    public string Start { get; public set; }
    public string Step { get; public set; }
    public string Range { get; public set; }
    public MediaImageBase(string start);
    internal MediaImageBase(string odataType, string label, Nullable`1<TimeSpan> keyFrameInterval, Nullable`1<InputVideoStretchMode> stretchMode, Nullable`1<VideoSyncMode> syncMode, string start, string step, string range);
    [CompilerGeneratedAttribute]
public string get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(string value);
    [CompilerGeneratedAttribute]
public string get_Step();
    [CompilerGeneratedAttribute]
public void set_Step(string value);
    [CompilerGeneratedAttribute]
public string get_Range();
    [CompilerGeneratedAttribute]
public void set_Range(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaImageBase DeserializeMediaImageBase(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.MediaJobError : object {
    [CompilerGeneratedAttribute]
private Nullable`1<MediaJobErrorCode> <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MediaJobErrorCategory> <Category>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MediaJobRetry> <Retry>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<MediaJobErrorDetail> <Details>k__BackingField;
    public Nullable`1<MediaJobErrorCode> Code { get; }
    public string Message { get; }
    public Nullable`1<MediaJobErrorCategory> Category { get; }
    public Nullable`1<MediaJobRetry> Retry { get; }
    public IReadOnlyList`1<MediaJobErrorDetail> Details { get; }
    internal MediaJobError(Nullable`1<MediaJobErrorCode> code, string message, Nullable`1<MediaJobErrorCategory> category, Nullable`1<MediaJobRetry> retry, IReadOnlyList`1<MediaJobErrorDetail> details);
    [CompilerGeneratedAttribute]
public Nullable`1<MediaJobErrorCode> get_Code();
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public Nullable`1<MediaJobErrorCategory> get_Category();
    [CompilerGeneratedAttribute]
public Nullable`1<MediaJobRetry> get_Retry();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<MediaJobErrorDetail> get_Details();
    internal static MediaJobError DeserializeMediaJobError(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.MediaJobErrorCategory : ValueType {
    private string _value;
    private static string ServiceValue;
    private static string DownloadValue;
    private static string UploadValue;
    private static string ConfigurationValue;
    private static string ContentValue;
    private static string AccountValue;
    [CompilerGeneratedAttribute]
private static MediaJobErrorCategory <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaJobErrorCategory <Download>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaJobErrorCategory <Upload>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaJobErrorCategory <Configuration>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaJobErrorCategory <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaJobErrorCategory <Account>k__BackingField;
    public static MediaJobErrorCategory Service { get; }
    public static MediaJobErrorCategory Download { get; }
    public static MediaJobErrorCategory Upload { get; }
    public static MediaJobErrorCategory Configuration { get; }
    public static MediaJobErrorCategory Content { get; }
    public static MediaJobErrorCategory Account { get; }
    public MediaJobErrorCategory(string value);
    private static MediaJobErrorCategory();
    [CompilerGeneratedAttribute]
public static MediaJobErrorCategory get_Service();
    [CompilerGeneratedAttribute]
public static MediaJobErrorCategory get_Download();
    [CompilerGeneratedAttribute]
public static MediaJobErrorCategory get_Upload();
    [CompilerGeneratedAttribute]
public static MediaJobErrorCategory get_Configuration();
    [CompilerGeneratedAttribute]
public static MediaJobErrorCategory get_Content();
    [CompilerGeneratedAttribute]
public static MediaJobErrorCategory get_Account();
    public static bool op_Equality(MediaJobErrorCategory left, MediaJobErrorCategory right);
    public static bool op_Inequality(MediaJobErrorCategory left, MediaJobErrorCategory right);
    public static MediaJobErrorCategory op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(MediaJobErrorCategory other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.MediaJobErrorCode : ValueType {
    private string _value;
    private static string ServiceErrorValue;
    private static string ServiceTransientErrorValue;
    private static string DownloadNotAccessibleValue;
    private static string DownloadTransientErrorValue;
    private static string UploadNotAccessibleValue;
    private static string UploadTransientErrorValue;
    private static string ConfigurationUnsupportedValue;
    private static string ContentMalformedValue;
    private static string ContentUnsupportedValue;
    private static string IdentityUnsupportedValue;
    [CompilerGeneratedAttribute]
private static MediaJobErrorCode <ServiceError>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaJobErrorCode <ServiceTransientError>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaJobErrorCode <DownloadNotAccessible>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaJobErrorCode <DownloadTransientError>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaJobErrorCode <UploadNotAccessible>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaJobErrorCode <UploadTransientError>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaJobErrorCode <ConfigurationUnsupported>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaJobErrorCode <ContentMalformed>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaJobErrorCode <ContentUnsupported>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaJobErrorCode <IdentityUnsupported>k__BackingField;
    public static MediaJobErrorCode ServiceError { get; }
    public static MediaJobErrorCode ServiceTransientError { get; }
    public static MediaJobErrorCode DownloadNotAccessible { get; }
    public static MediaJobErrorCode DownloadTransientError { get; }
    public static MediaJobErrorCode UploadNotAccessible { get; }
    public static MediaJobErrorCode UploadTransientError { get; }
    public static MediaJobErrorCode ConfigurationUnsupported { get; }
    public static MediaJobErrorCode ContentMalformed { get; }
    public static MediaJobErrorCode ContentUnsupported { get; }
    public static MediaJobErrorCode IdentityUnsupported { get; }
    public MediaJobErrorCode(string value);
    private static MediaJobErrorCode();
    [CompilerGeneratedAttribute]
public static MediaJobErrorCode get_ServiceError();
    [CompilerGeneratedAttribute]
public static MediaJobErrorCode get_ServiceTransientError();
    [CompilerGeneratedAttribute]
public static MediaJobErrorCode get_DownloadNotAccessible();
    [CompilerGeneratedAttribute]
public static MediaJobErrorCode get_DownloadTransientError();
    [CompilerGeneratedAttribute]
public static MediaJobErrorCode get_UploadNotAccessible();
    [CompilerGeneratedAttribute]
public static MediaJobErrorCode get_UploadTransientError();
    [CompilerGeneratedAttribute]
public static MediaJobErrorCode get_ConfigurationUnsupported();
    [CompilerGeneratedAttribute]
public static MediaJobErrorCode get_ContentMalformed();
    [CompilerGeneratedAttribute]
public static MediaJobErrorCode get_ContentUnsupported();
    [CompilerGeneratedAttribute]
public static MediaJobErrorCode get_IdentityUnsupported();
    public static bool op_Equality(MediaJobErrorCode left, MediaJobErrorCode right);
    public static bool op_Inequality(MediaJobErrorCode left, MediaJobErrorCode right);
    public static MediaJobErrorCode op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(MediaJobErrorCode other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.MediaJobErrorDetail : object {
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public string Code { get; }
    public string Message { get; }
    internal MediaJobErrorDetail(string code, string message);
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public string get_Message();
    internal static MediaJobErrorDetail DeserializeMediaJobErrorDetail(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.MediaJobInputAsset : MediaJobInputClip {
    [CompilerGeneratedAttribute]
private string <AssetName>k__BackingField;
    public string AssetName { get; public set; }
    public MediaJobInputAsset(string assetName);
    internal MediaJobInputAsset(string odataType, IList`1<string> files, ClipTime start, ClipTime end, string label, IList`1<MediaJobInputDefinition> inputDefinitions, string assetName);
    [CompilerGeneratedAttribute]
public string get_AssetName();
    [CompilerGeneratedAttribute]
public void set_AssetName(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaJobInputAsset DeserializeMediaJobInputAsset(JsonElement element);
}
public abstract class Azure.ResourceManager.Media.Models.MediaJobInputBasicProperties : object {
    [CompilerGeneratedAttribute]
private string <OdataType>k__BackingField;
    internal string OdataType { get; internal set; }
    internal MediaJobInputBasicProperties(string odataType);
    [CompilerGeneratedAttribute]
internal string get_OdataType();
    [CompilerGeneratedAttribute]
internal void set_OdataType(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaJobInputBasicProperties DeserializeMediaJobInputBasicProperties(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.MediaJobInputClip : MediaJobInputBasicProperties {
    [CompilerGeneratedAttribute]
private IList`1<string> <Files>k__BackingField;
    [CompilerGeneratedAttribute]
private ClipTime <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private ClipTime <End>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<MediaJobInputDefinition> <InputDefinitions>k__BackingField;
    public IList`1<string> Files { get; }
    public ClipTime Start { get; public set; }
    public ClipTime End { get; public set; }
    public string Label { get; public set; }
    public IList`1<MediaJobInputDefinition> InputDefinitions { get; }
    internal MediaJobInputClip(string odataType, IList`1<string> files, ClipTime start, ClipTime end, string label, IList`1<MediaJobInputDefinition> inputDefinitions);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Files();
    [CompilerGeneratedAttribute]
public ClipTime get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(ClipTime value);
    [CompilerGeneratedAttribute]
public ClipTime get_End();
    [CompilerGeneratedAttribute]
public void set_End(ClipTime value);
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public IList`1<MediaJobInputDefinition> get_InputDefinitions();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaJobInputClip DeserializeMediaJobInputClip(JsonElement element);
}
public abstract class Azure.ResourceManager.Media.Models.MediaJobInputDefinition : object {
    [CompilerGeneratedAttribute]
private string <OdataType>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<TrackDescriptor> <IncludedTracks>k__BackingField;
    internal string OdataType { get; internal set; }
    public IList`1<TrackDescriptor> IncludedTracks { get; }
    internal MediaJobInputDefinition(string odataType, IList`1<TrackDescriptor> includedTracks);
    [CompilerGeneratedAttribute]
internal string get_OdataType();
    [CompilerGeneratedAttribute]
internal void set_OdataType(string value);
    [CompilerGeneratedAttribute]
public IList`1<TrackDescriptor> get_IncludedTracks();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaJobInputDefinition DeserializeMediaJobInputDefinition(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.MediaJobInputFile : MediaJobInputDefinition {
    [CompilerGeneratedAttribute]
private string <Filename>k__BackingField;
    public string Filename { get; public set; }
    internal MediaJobInputFile(string odataType, IList`1<TrackDescriptor> includedTracks, string filename);
    [CompilerGeneratedAttribute]
public string get_Filename();
    [CompilerGeneratedAttribute]
public void set_Filename(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaJobInputFile DeserializeMediaJobInputFile(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.MediaJobInputHttp : MediaJobInputClip {
    [CompilerGeneratedAttribute]
private Uri <BaseUri>k__BackingField;
    public Uri BaseUri { get; public set; }
    internal MediaJobInputHttp(string odataType, IList`1<string> files, ClipTime start, ClipTime end, string label, IList`1<MediaJobInputDefinition> inputDefinitions, Uri baseUri);
    [CompilerGeneratedAttribute]
public Uri get_BaseUri();
    [CompilerGeneratedAttribute]
public void set_BaseUri(Uri value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaJobInputHttp DeserializeMediaJobInputHttp(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.MediaJobInputs : MediaJobInputBasicProperties {
    [CompilerGeneratedAttribute]
private IList`1<MediaJobInputBasicProperties> <Inputs>k__BackingField;
    public IList`1<MediaJobInputBasicProperties> Inputs { get; }
    internal MediaJobInputs(string odataType, IList`1<MediaJobInputBasicProperties> inputs);
    [CompilerGeneratedAttribute]
public IList`1<MediaJobInputBasicProperties> get_Inputs();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaJobInputs DeserializeMediaJobInputs(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.MediaJobInputSequence : MediaJobInputBasicProperties {
    [CompilerGeneratedAttribute]
private IList`1<MediaJobInputClip> <Inputs>k__BackingField;
    public IList`1<MediaJobInputClip> Inputs { get; }
    internal MediaJobInputSequence(string odataType, IList`1<MediaJobInputClip> inputs);
    [CompilerGeneratedAttribute]
public IList`1<MediaJobInputClip> get_Inputs();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaJobInputSequence DeserializeMediaJobInputSequence(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.MediaJobListResult : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<MediaJobData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OdataNextLink>k__BackingField;
    public IReadOnlyList`1<MediaJobData> Value { get; }
    public string OdataNextLink { get; }
    internal MediaJobListResult(IReadOnlyList`1<MediaJobData> value, string odataNextLink);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<MediaJobData> get_Value();
    [CompilerGeneratedAttribute]
public string get_OdataNextLink();
    internal static MediaJobListResult DeserializeMediaJobListResult(JsonElement element);
}
public abstract class Azure.ResourceManager.Media.Models.MediaJobOutput : object {
    [CompilerGeneratedAttribute]
private string <OdataType>k__BackingField;
    [CompilerGeneratedAttribute]
private MediaJobError <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private MediaTransformPreset <PresetOverride>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MediaJobState> <State>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Progress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <StartOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <EndOn>k__BackingField;
    internal string OdataType { get; internal set; }
    public MediaJobError Error { get; }
    public MediaTransformPreset PresetOverride { get; public set; }
    public Nullable`1<MediaJobState> State { get; }
    public Nullable`1<int> Progress { get; }
    public string Label { get; public set; }
    public Nullable`1<DateTimeOffset> StartOn { get; }
    public Nullable`1<DateTimeOffset> EndOn { get; }
    internal MediaJobOutput(string odataType, MediaJobError error, MediaTransformPreset presetOverride, Nullable`1<MediaJobState> state, Nullable`1<int> progress, string label, Nullable`1<DateTimeOffset> startOn, Nullable`1<DateTimeOffset> endOn);
    [CompilerGeneratedAttribute]
internal string get_OdataType();
    [CompilerGeneratedAttribute]
internal void set_OdataType(string value);
    [CompilerGeneratedAttribute]
public MediaJobError get_Error();
    [CompilerGeneratedAttribute]
public MediaTransformPreset get_PresetOverride();
    [CompilerGeneratedAttribute]
public void set_PresetOverride(MediaTransformPreset value);
    [CompilerGeneratedAttribute]
public Nullable`1<MediaJobState> get_State();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Progress();
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_StartOn();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_EndOn();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaJobOutput DeserializeMediaJobOutput(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.MediaJobOutputAsset : MediaJobOutput {
    [CompilerGeneratedAttribute]
private string <AssetName>k__BackingField;
    public string AssetName { get; public set; }
    public MediaJobOutputAsset(string assetName);
    internal MediaJobOutputAsset(string odataType, MediaJobError error, MediaTransformPreset presetOverride, Nullable`1<MediaJobState> state, Nullable`1<int> progress, string label, Nullable`1<DateTimeOffset> startOn, Nullable`1<DateTimeOffset> endOn, string assetName);
    [CompilerGeneratedAttribute]
public string get_AssetName();
    [CompilerGeneratedAttribute]
public void set_AssetName(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaJobOutputAsset DeserializeMediaJobOutputAsset(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.MediaJobPriority : ValueType {
    private string _value;
    private static string LowValue;
    private static string NormalValue;
    private static string HighValue;
    [CompilerGeneratedAttribute]
private static MediaJobPriority <Low>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaJobPriority <Normal>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaJobPriority <High>k__BackingField;
    public static MediaJobPriority Low { get; }
    public static MediaJobPriority Normal { get; }
    public static MediaJobPriority High { get; }
    public MediaJobPriority(string value);
    private static MediaJobPriority();
    [CompilerGeneratedAttribute]
public static MediaJobPriority get_Low();
    [CompilerGeneratedAttribute]
public static MediaJobPriority get_Normal();
    [CompilerGeneratedAttribute]
public static MediaJobPriority get_High();
    public static bool op_Equality(MediaJobPriority left, MediaJobPriority right);
    public static bool op_Inequality(MediaJobPriority left, MediaJobPriority right);
    public static MediaJobPriority op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(MediaJobPriority other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.MediaJobRetry : ValueType {
    private string _value;
    private static string DoNotRetryValue;
    private static string MayRetryValue;
    [CompilerGeneratedAttribute]
private static MediaJobRetry <DoNotRetry>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaJobRetry <MayRetry>k__BackingField;
    public static MediaJobRetry DoNotRetry { get; }
    public static MediaJobRetry MayRetry { get; }
    public MediaJobRetry(string value);
    private static MediaJobRetry();
    [CompilerGeneratedAttribute]
public static MediaJobRetry get_DoNotRetry();
    [CompilerGeneratedAttribute]
public static MediaJobRetry get_MayRetry();
    public static bool op_Equality(MediaJobRetry left, MediaJobRetry right);
    public static bool op_Inequality(MediaJobRetry left, MediaJobRetry right);
    public static MediaJobRetry op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(MediaJobRetry other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.MediaJobState : ValueType {
    private string _value;
    private static string CanceledValue;
    private static string CancelingValue;
    private static string ErrorValue;
    private static string FinishedValue;
    private static string ProcessingValue;
    private static string QueuedValue;
    private static string ScheduledValue;
    [CompilerGeneratedAttribute]
private static MediaJobState <Canceled>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaJobState <Canceling>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaJobState <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaJobState <Finished>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaJobState <Processing>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaJobState <Queued>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaJobState <Scheduled>k__BackingField;
    public static MediaJobState Canceled { get; }
    public static MediaJobState Canceling { get; }
    public static MediaJobState Error { get; }
    public static MediaJobState Finished { get; }
    public static MediaJobState Processing { get; }
    public static MediaJobState Queued { get; }
    public static MediaJobState Scheduled { get; }
    public MediaJobState(string value);
    private static MediaJobState();
    [CompilerGeneratedAttribute]
public static MediaJobState get_Canceled();
    [CompilerGeneratedAttribute]
public static MediaJobState get_Canceling();
    [CompilerGeneratedAttribute]
public static MediaJobState get_Error();
    [CompilerGeneratedAttribute]
public static MediaJobState get_Finished();
    [CompilerGeneratedAttribute]
public static MediaJobState get_Processing();
    [CompilerGeneratedAttribute]
public static MediaJobState get_Queued();
    [CompilerGeneratedAttribute]
public static MediaJobState get_Scheduled();
    public static bool op_Equality(MediaJobState left, MediaJobState right);
    public static bool op_Inequality(MediaJobState left, MediaJobState right);
    public static MediaJobState op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(MediaJobState other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
internal class Azure.ResourceManager.Media.Models.MediaKeyDelivery : object {
    [CompilerGeneratedAttribute]
private MediaAccessControl <AccessControl>k__BackingField;
    public MediaAccessControl AccessControl { get; public set; }
    internal MediaKeyDelivery(MediaAccessControl accessControl);
    [CompilerGeneratedAttribute]
public MediaAccessControl get_AccessControl();
    [CompilerGeneratedAttribute]
public void set_AccessControl(MediaAccessControl value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaKeyDelivery DeserializeMediaKeyDelivery(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.MediaLayerBase : object {
    [CompilerGeneratedAttribute]
private string <Width>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Height>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    public string Width { get; public set; }
    public string Height { get; public set; }
    public string Label { get; public set; }
    internal MediaLayerBase(string width, string height, string label);
    [CompilerGeneratedAttribute]
public string get_Width();
    [CompilerGeneratedAttribute]
public void set_Width(string value);
    [CompilerGeneratedAttribute]
public string get_Height();
    [CompilerGeneratedAttribute]
public void set_Height(string value);
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaLayerBase DeserializeMediaLayerBase(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.MediaOutputFile : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Labels>k__BackingField;
    public IList`1<string> Labels { get; }
    public MediaOutputFile(IEnumerable`1<string> labels);
    internal MediaOutputFile(IList`1<string> labels);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Labels();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaOutputFile DeserializeMediaOutputFile(JsonElement element);
}
public abstract class Azure.ResourceManager.Media.Models.MediaOverlayBase : object {
    [CompilerGeneratedAttribute]
private string <OdataType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InputLabel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <End>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <FadeInDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <FadeOutDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <AudioGainLevel>k__BackingField;
    internal string OdataType { get; internal set; }
    public string InputLabel { get; public set; }
    public Nullable`1<TimeSpan> Start { get; public set; }
    public Nullable`1<TimeSpan> End { get; public set; }
    public Nullable`1<TimeSpan> FadeInDuration { get; public set; }
    public Nullable`1<TimeSpan> FadeOutDuration { get; public set; }
    public Nullable`1<double> AudioGainLevel { get; public set; }
    protected MediaOverlayBase(string inputLabel);
    internal MediaOverlayBase(string odataType, string inputLabel, Nullable`1<TimeSpan> start, Nullable`1<TimeSpan> end, Nullable`1<TimeSpan> fadeInDuration, Nullable`1<TimeSpan> fadeOutDuration, Nullable`1<double> audioGainLevel);
    [CompilerGeneratedAttribute]
internal string get_OdataType();
    [CompilerGeneratedAttribute]
internal void set_OdataType(string value);
    [CompilerGeneratedAttribute]
public string get_InputLabel();
    [CompilerGeneratedAttribute]
public void set_InputLabel(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_End();
    [CompilerGeneratedAttribute]
public void set_End(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_FadeInDuration();
    [CompilerGeneratedAttribute]
public void set_FadeInDuration(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_FadeOutDuration();
    [CompilerGeneratedAttribute]
public void set_FadeOutDuration(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_AudioGainLevel();
    [CompilerGeneratedAttribute]
public void set_AudioGainLevel(Nullable`1<double> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaOverlayBase DeserializeMediaOverlayBase(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.MediaPrivateEndpointConnectionListResult : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<MediaServicesPrivateEndpointConnectionData> <Value>k__BackingField;
    public IReadOnlyList`1<MediaServicesPrivateEndpointConnectionData> Value { get; }
    internal MediaPrivateEndpointConnectionListResult(IReadOnlyList`1<MediaServicesPrivateEndpointConnectionData> value);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<MediaServicesPrivateEndpointConnectionData> get_Value();
    internal static MediaPrivateEndpointConnectionListResult DeserializeMediaPrivateEndpointConnectionListResult(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.MediaPrivateEndpointConnectionProvisioningState : ValueType {
    private string _value;
    private static string SucceededValue;
    private static string CreatingValue;
    private static string DeletingValue;
    private static string FailedValue;
    [CompilerGeneratedAttribute]
private static MediaPrivateEndpointConnectionProvisioningState <Succeeded>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaPrivateEndpointConnectionProvisioningState <Creating>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaPrivateEndpointConnectionProvisioningState <Deleting>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaPrivateEndpointConnectionProvisioningState <Failed>k__BackingField;
    public static MediaPrivateEndpointConnectionProvisioningState Succeeded { get; }
    public static MediaPrivateEndpointConnectionProvisioningState Creating { get; }
    public static MediaPrivateEndpointConnectionProvisioningState Deleting { get; }
    public static MediaPrivateEndpointConnectionProvisioningState Failed { get; }
    public MediaPrivateEndpointConnectionProvisioningState(string value);
    private static MediaPrivateEndpointConnectionProvisioningState();
    [CompilerGeneratedAttribute]
public static MediaPrivateEndpointConnectionProvisioningState get_Succeeded();
    [CompilerGeneratedAttribute]
public static MediaPrivateEndpointConnectionProvisioningState get_Creating();
    [CompilerGeneratedAttribute]
public static MediaPrivateEndpointConnectionProvisioningState get_Deleting();
    [CompilerGeneratedAttribute]
public static MediaPrivateEndpointConnectionProvisioningState get_Failed();
    public static bool op_Equality(MediaPrivateEndpointConnectionProvisioningState left, MediaPrivateEndpointConnectionProvisioningState right);
    public static bool op_Inequality(MediaPrivateEndpointConnectionProvisioningState left, MediaPrivateEndpointConnectionProvisioningState right);
    public static MediaPrivateEndpointConnectionProvisioningState op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(MediaPrivateEndpointConnectionProvisioningState other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.MediaPrivateEndpointServiceConnectionStatus : ValueType {
    private string _value;
    private static string PendingValue;
    private static string ApprovedValue;
    private static string RejectedValue;
    [CompilerGeneratedAttribute]
private static MediaPrivateEndpointServiceConnectionStatus <Pending>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaPrivateEndpointServiceConnectionStatus <Approved>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaPrivateEndpointServiceConnectionStatus <Rejected>k__BackingField;
    public static MediaPrivateEndpointServiceConnectionStatus Pending { get; }
    public static MediaPrivateEndpointServiceConnectionStatus Approved { get; }
    public static MediaPrivateEndpointServiceConnectionStatus Rejected { get; }
    public MediaPrivateEndpointServiceConnectionStatus(string value);
    private static MediaPrivateEndpointServiceConnectionStatus();
    [CompilerGeneratedAttribute]
public static MediaPrivateEndpointServiceConnectionStatus get_Pending();
    [CompilerGeneratedAttribute]
public static MediaPrivateEndpointServiceConnectionStatus get_Approved();
    [CompilerGeneratedAttribute]
public static MediaPrivateEndpointServiceConnectionStatus get_Rejected();
    public static bool op_Equality(MediaPrivateEndpointServiceConnectionStatus left, MediaPrivateEndpointServiceConnectionStatus right);
    public static bool op_Inequality(MediaPrivateEndpointServiceConnectionStatus left, MediaPrivateEndpointServiceConnectionStatus right);
    public static MediaPrivateEndpointServiceConnectionStatus op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(MediaPrivateEndpointServiceConnectionStatus other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
internal class Azure.ResourceManager.Media.Models.MediaPrivateLinkResourceListResult : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<MediaServicesPrivateLinkResourceData> <Value>k__BackingField;
    public IReadOnlyList`1<MediaServicesPrivateLinkResourceData> Value { get; }
    internal MediaPrivateLinkResourceListResult(IReadOnlyList`1<MediaServicesPrivateLinkResourceData> value);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<MediaServicesPrivateLinkResourceData> get_Value();
    internal static MediaPrivateLinkResourceListResult DeserializeMediaPrivateLinkResourceListResult(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.MediaPrivateLinkServiceConnectionState : object {
    [CompilerGeneratedAttribute]
private Nullable`1<MediaPrivateEndpointServiceConnectionStatus> <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActionsRequired>k__BackingField;
    public Nullable`1<MediaPrivateEndpointServiceConnectionStatus> Status { get; public set; }
    public string Description { get; public set; }
    public string ActionsRequired { get; public set; }
    internal MediaPrivateLinkServiceConnectionState(Nullable`1<MediaPrivateEndpointServiceConnectionStatus> status, string description, string actionsRequired);
    [CompilerGeneratedAttribute]
public Nullable`1<MediaPrivateEndpointServiceConnectionStatus> get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(Nullable`1<MediaPrivateEndpointServiceConnectionStatus> value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_ActionsRequired();
    [CompilerGeneratedAttribute]
public void set_ActionsRequired(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaPrivateLinkServiceConnectionState DeserializeMediaPrivateLinkServiceConnectionState(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.MediaServicesAccountFilterListResult : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<MediaServicesAccountFilterData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OdataNextLink>k__BackingField;
    public IReadOnlyList`1<MediaServicesAccountFilterData> Value { get; }
    public string OdataNextLink { get; }
    internal MediaServicesAccountFilterListResult(IReadOnlyList`1<MediaServicesAccountFilterData> value, string odataNextLink);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<MediaServicesAccountFilterData> get_Value();
    [CompilerGeneratedAttribute]
public string get_OdataNextLink();
    internal static MediaServicesAccountFilterListResult DeserializeMediaServicesAccountFilterListResult(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.MediaServicesAccountListResult : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<MediaServicesAccountData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OdataNextLink>k__BackingField;
    public IReadOnlyList`1<MediaServicesAccountData> Value { get; }
    public string OdataNextLink { get; }
    internal MediaServicesAccountListResult(IReadOnlyList`1<MediaServicesAccountData> value, string odataNextLink);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<MediaServicesAccountData> get_Value();
    [CompilerGeneratedAttribute]
public string get_OdataNextLink();
    internal static MediaServicesAccountListResult DeserializeMediaServicesAccountListResult(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.MediaServicesAccountPatch : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private ManagedServiceIdentity <Identity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <MediaServiceId>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<MediaServicesStorageAccount> <StorageAccounts>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MediaStorageAuthentication> <StorageAuthentication>k__BackingField;
    [CompilerGeneratedAttribute]
private AccountEncryption <Encryption>k__BackingField;
    [CompilerGeneratedAttribute]
private MediaKeyDelivery <KeyDelivery>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MediaServicesPublicNetworkAccess> <PublicNetworkAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MediaServicesProvisioningState> <ProvisioningState>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<MediaServicesPrivateEndpointConnectionData> <PrivateEndpointConnections>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MediaServicesMinimumTlsVersion> <MinimumTlsVersion>k__BackingField;
    public IDictionary`2<string, string> Tags { get; }
    public ManagedServiceIdentity Identity { get; public set; }
    public Nullable`1<Guid> MediaServiceId { get; }
    public IList`1<MediaServicesStorageAccount> StorageAccounts { get; }
    public Nullable`1<MediaStorageAuthentication> StorageAuthentication { get; public set; }
    public AccountEncryption Encryption { get; public set; }
    internal MediaKeyDelivery KeyDelivery { get; internal set; }
    public MediaAccessControl KeyDeliveryAccessControl { get; public set; }
    public Nullable`1<MediaServicesPublicNetworkAccess> PublicNetworkAccess { get; public set; }
    public Nullable`1<MediaServicesProvisioningState> ProvisioningState { get; }
    public IReadOnlyList`1<MediaServicesPrivateEndpointConnectionData> PrivateEndpointConnections { get; }
    public Nullable`1<MediaServicesMinimumTlsVersion> MinimumTlsVersion { get; public set; }
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Tags();
    [CompilerGeneratedAttribute]
public ManagedServiceIdentity get_Identity();
    [CompilerGeneratedAttribute]
public void set_Identity(ManagedServiceIdentity value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_MediaServiceId();
    [CompilerGeneratedAttribute]
public IList`1<MediaServicesStorageAccount> get_StorageAccounts();
    [CompilerGeneratedAttribute]
public Nullable`1<MediaStorageAuthentication> get_StorageAuthentication();
    [CompilerGeneratedAttribute]
public void set_StorageAuthentication(Nullable`1<MediaStorageAuthentication> value);
    [CompilerGeneratedAttribute]
public AccountEncryption get_Encryption();
    [CompilerGeneratedAttribute]
public void set_Encryption(AccountEncryption value);
    [CompilerGeneratedAttribute]
internal MediaKeyDelivery get_KeyDelivery();
    [CompilerGeneratedAttribute]
internal void set_KeyDelivery(MediaKeyDelivery value);
    public MediaAccessControl get_KeyDeliveryAccessControl();
    public void set_KeyDeliveryAccessControl(MediaAccessControl value);
    [CompilerGeneratedAttribute]
public Nullable`1<MediaServicesPublicNetworkAccess> get_PublicNetworkAccess();
    [CompilerGeneratedAttribute]
public void set_PublicNetworkAccess(Nullable`1<MediaServicesPublicNetworkAccess> value);
    [CompilerGeneratedAttribute]
public Nullable`1<MediaServicesProvisioningState> get_ProvisioningState();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<MediaServicesPrivateEndpointConnectionData> get_PrivateEndpointConnections();
    [CompilerGeneratedAttribute]
public Nullable`1<MediaServicesMinimumTlsVersion> get_MinimumTlsVersion();
    [CompilerGeneratedAttribute]
public void set_MinimumTlsVersion(Nullable`1<MediaServicesMinimumTlsVersion> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
}
public class Azure.ResourceManager.Media.Models.MediaServicesEdgePolicies : object {
    [CompilerGeneratedAttribute]
private EdgeUsageDataCollectionPolicy <UsageDataCollectionPolicy>k__BackingField;
    public EdgeUsageDataCollectionPolicy UsageDataCollectionPolicy { get; }
    internal MediaServicesEdgePolicies(EdgeUsageDataCollectionPolicy usageDataCollectionPolicy);
    [CompilerGeneratedAttribute]
public EdgeUsageDataCollectionPolicy get_UsageDataCollectionPolicy();
    internal static MediaServicesEdgePolicies DeserializeMediaServicesEdgePolicies(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.MediaServicesMinimumTlsVersion : ValueType {
    private string _value;
    private static string Tls10Value;
    private static string Tls11Value;
    private static string Tls12Value;
    private static string Tls13Value;
    [CompilerGeneratedAttribute]
private static MediaServicesMinimumTlsVersion <Tls10>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaServicesMinimumTlsVersion <Tls11>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaServicesMinimumTlsVersion <Tls12>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaServicesMinimumTlsVersion <Tls13>k__BackingField;
    public static MediaServicesMinimumTlsVersion Tls10 { get; }
    public static MediaServicesMinimumTlsVersion Tls11 { get; }
    public static MediaServicesMinimumTlsVersion Tls12 { get; }
    public static MediaServicesMinimumTlsVersion Tls13 { get; }
    public MediaServicesMinimumTlsVersion(string value);
    private static MediaServicesMinimumTlsVersion();
    [CompilerGeneratedAttribute]
public static MediaServicesMinimumTlsVersion get_Tls10();
    [CompilerGeneratedAttribute]
public static MediaServicesMinimumTlsVersion get_Tls11();
    [CompilerGeneratedAttribute]
public static MediaServicesMinimumTlsVersion get_Tls12();
    [CompilerGeneratedAttribute]
public static MediaServicesMinimumTlsVersion get_Tls13();
    public static bool op_Equality(MediaServicesMinimumTlsVersion left, MediaServicesMinimumTlsVersion right);
    public static bool op_Inequality(MediaServicesMinimumTlsVersion left, MediaServicesMinimumTlsVersion right);
    public static MediaServicesMinimumTlsVersion op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(MediaServicesMinimumTlsVersion other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.MediaServicesNameAvailabilityContent : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceType>k__BackingField;
    public string Name { get; public set; }
    public string ResourceType { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_ResourceType();
    [CompilerGeneratedAttribute]
public void set_ResourceType(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
}
public class Azure.ResourceManager.Media.Models.MediaServicesNameAvailabilityResult : object {
    [CompilerGeneratedAttribute]
private bool <IsNameAvailable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public bool IsNameAvailable { get; }
    public string Reason { get; }
    public string Message { get; }
    internal MediaServicesNameAvailabilityResult(bool isNameAvailable);
    internal MediaServicesNameAvailabilityResult(bool isNameAvailable, string reason, string message);
    [CompilerGeneratedAttribute]
public bool get_IsNameAvailable();
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public string get_Message();
    internal static MediaServicesNameAvailabilityResult DeserializeMediaServicesNameAvailabilityResult(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.MediaServicesProvisioningState : ValueType {
    private string _value;
    private static string FailedValue;
    private static string InProgressValue;
    private static string SucceededValue;
    [CompilerGeneratedAttribute]
private static MediaServicesProvisioningState <Failed>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaServicesProvisioningState <InProgress>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaServicesProvisioningState <Succeeded>k__BackingField;
    public static MediaServicesProvisioningState Failed { get; }
    public static MediaServicesProvisioningState InProgress { get; }
    public static MediaServicesProvisioningState Succeeded { get; }
    public MediaServicesProvisioningState(string value);
    private static MediaServicesProvisioningState();
    [CompilerGeneratedAttribute]
public static MediaServicesProvisioningState get_Failed();
    [CompilerGeneratedAttribute]
public static MediaServicesProvisioningState get_InProgress();
    [CompilerGeneratedAttribute]
public static MediaServicesProvisioningState get_Succeeded();
    public static bool op_Equality(MediaServicesProvisioningState left, MediaServicesProvisioningState right);
    public static bool op_Inequality(MediaServicesProvisioningState left, MediaServicesProvisioningState right);
    public static MediaServicesProvisioningState op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(MediaServicesProvisioningState other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.MediaServicesPublicNetworkAccess : ValueType {
    private string _value;
    private static string EnabledValue;
    private static string DisabledValue;
    [CompilerGeneratedAttribute]
private static MediaServicesPublicNetworkAccess <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaServicesPublicNetworkAccess <Disabled>k__BackingField;
    public static MediaServicesPublicNetworkAccess Enabled { get; }
    public static MediaServicesPublicNetworkAccess Disabled { get; }
    public MediaServicesPublicNetworkAccess(string value);
    private static MediaServicesPublicNetworkAccess();
    [CompilerGeneratedAttribute]
public static MediaServicesPublicNetworkAccess get_Enabled();
    [CompilerGeneratedAttribute]
public static MediaServicesPublicNetworkAccess get_Disabled();
    public static bool op_Equality(MediaServicesPublicNetworkAccess left, MediaServicesPublicNetworkAccess right);
    public static bool op_Inequality(MediaServicesPublicNetworkAccess left, MediaServicesPublicNetworkAccess right);
    public static MediaServicesPublicNetworkAccess op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(MediaServicesPublicNetworkAccess other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.MediaServicesStorageAccount : object {
    [CompilerGeneratedAttribute]
private ResourceIdentifier <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private MediaServicesStorageAccountType <AccountType>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceIdentity <Identity>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    public ResourceIdentifier Id { get; public set; }
    public MediaServicesStorageAccountType AccountType { get; public set; }
    public ResourceIdentity Identity { get; public set; }
    public string Status { get; }
    public MediaServicesStorageAccount(MediaServicesStorageAccountType accountType);
    internal MediaServicesStorageAccount(ResourceIdentifier id, MediaServicesStorageAccountType accountType, ResourceIdentity identity, string status);
    [CompilerGeneratedAttribute]
public ResourceIdentifier get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(ResourceIdentifier value);
    [CompilerGeneratedAttribute]
public MediaServicesStorageAccountType get_AccountType();
    [CompilerGeneratedAttribute]
public void set_AccountType(MediaServicesStorageAccountType value);
    [CompilerGeneratedAttribute]
public ResourceIdentity get_Identity();
    [CompilerGeneratedAttribute]
public void set_Identity(ResourceIdentity value);
    [CompilerGeneratedAttribute]
public string get_Status();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaServicesStorageAccount DeserializeMediaServicesStorageAccount(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.MediaServicesStorageAccountType : ValueType {
    private string _value;
    private static string PrimaryValue;
    private static string SecondaryValue;
    [CompilerGeneratedAttribute]
private static MediaServicesStorageAccountType <Primary>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaServicesStorageAccountType <Secondary>k__BackingField;
    public static MediaServicesStorageAccountType Primary { get; }
    public static MediaServicesStorageAccountType Secondary { get; }
    public MediaServicesStorageAccountType(string value);
    private static MediaServicesStorageAccountType();
    [CompilerGeneratedAttribute]
public static MediaServicesStorageAccountType get_Primary();
    [CompilerGeneratedAttribute]
public static MediaServicesStorageAccountType get_Secondary();
    public static bool op_Equality(MediaServicesStorageAccountType left, MediaServicesStorageAccountType right);
    public static bool op_Inequality(MediaServicesStorageAccountType left, MediaServicesStorageAccountType right);
    public static MediaServicesStorageAccountType op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(MediaServicesStorageAccountType other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.MediaStorageAuthentication : ValueType {
    private string _value;
    private static string SystemValue;
    private static string ManagedIdentityValue;
    [CompilerGeneratedAttribute]
private static MediaStorageAuthentication <System>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaStorageAuthentication <ManagedIdentity>k__BackingField;
    public static MediaStorageAuthentication System { get; }
    public static MediaStorageAuthentication ManagedIdentity { get; }
    public MediaStorageAuthentication(string value);
    private static MediaStorageAuthentication();
    [CompilerGeneratedAttribute]
public static MediaStorageAuthentication get_System();
    [CompilerGeneratedAttribute]
public static MediaStorageAuthentication get_ManagedIdentity();
    public static bool op_Equality(MediaStorageAuthentication left, MediaStorageAuthentication right);
    public static bool op_Inequality(MediaStorageAuthentication left, MediaStorageAuthentication right);
    public static MediaStorageAuthentication op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(MediaStorageAuthentication other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.MediaTrackSelection : object {
    [CompilerGeneratedAttribute]
private IList`1<TrackPropertyCondition> <TrackSelections>k__BackingField;
    public IList`1<TrackPropertyCondition> TrackSelections { get; }
    internal MediaTrackSelection(IList`1<TrackPropertyCondition> trackSelections);
    [CompilerGeneratedAttribute]
public IList`1<TrackPropertyCondition> get_TrackSelections();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaTrackSelection DeserializeMediaTrackSelection(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.MediaTransformListResult : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<MediaTransformData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OdataNextLink>k__BackingField;
    public IReadOnlyList`1<MediaTransformData> Value { get; }
    public string OdataNextLink { get; }
    internal MediaTransformListResult(IReadOnlyList`1<MediaTransformData> value, string odataNextLink);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<MediaTransformData> get_Value();
    [CompilerGeneratedAttribute]
public string get_OdataNextLink();
    internal static MediaTransformListResult DeserializeMediaTransformListResult(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.MediaTransformOnErrorType : ValueType {
    private string _value;
    private static string StopProcessingJobValue;
    private static string ContinueJobValue;
    [CompilerGeneratedAttribute]
private static MediaTransformOnErrorType <StopProcessingJob>k__BackingField;
    [CompilerGeneratedAttribute]
private static MediaTransformOnErrorType <ContinueJob>k__BackingField;
    public static MediaTransformOnErrorType StopProcessingJob { get; }
    public static MediaTransformOnErrorType ContinueJob { get; }
    public MediaTransformOnErrorType(string value);
    private static MediaTransformOnErrorType();
    [CompilerGeneratedAttribute]
public static MediaTransformOnErrorType get_StopProcessingJob();
    [CompilerGeneratedAttribute]
public static MediaTransformOnErrorType get_ContinueJob();
    public static bool op_Equality(MediaTransformOnErrorType left, MediaTransformOnErrorType right);
    public static bool op_Inequality(MediaTransformOnErrorType left, MediaTransformOnErrorType right);
    public static MediaTransformOnErrorType op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(MediaTransformOnErrorType other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.MediaTransformOutput : object {
    [CompilerGeneratedAttribute]
private Nullable`1<MediaTransformOnErrorType> <OnError>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MediaJobPriority> <RelativePriority>k__BackingField;
    [CompilerGeneratedAttribute]
private MediaTransformPreset <Preset>k__BackingField;
    public Nullable`1<MediaTransformOnErrorType> OnError { get; public set; }
    public Nullable`1<MediaJobPriority> RelativePriority { get; public set; }
    public MediaTransformPreset Preset { get; public set; }
    public MediaTransformOutput(MediaTransformPreset preset);
    internal MediaTransformOutput(Nullable`1<MediaTransformOnErrorType> onError, Nullable`1<MediaJobPriority> relativePriority, MediaTransformPreset preset);
    [CompilerGeneratedAttribute]
public Nullable`1<MediaTransformOnErrorType> get_OnError();
    [CompilerGeneratedAttribute]
public void set_OnError(Nullable`1<MediaTransformOnErrorType> value);
    [CompilerGeneratedAttribute]
public Nullable`1<MediaJobPriority> get_RelativePriority();
    [CompilerGeneratedAttribute]
public void set_RelativePriority(Nullable`1<MediaJobPriority> value);
    [CompilerGeneratedAttribute]
public MediaTransformPreset get_Preset();
    [CompilerGeneratedAttribute]
public void set_Preset(MediaTransformPreset value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaTransformOutput DeserializeMediaTransformOutput(JsonElement element);
}
public abstract class Azure.ResourceManager.Media.Models.MediaTransformPreset : object {
    [CompilerGeneratedAttribute]
private string <OdataType>k__BackingField;
    internal string OdataType { get; internal set; }
    internal MediaTransformPreset(string odataType);
    [CompilerGeneratedAttribute]
internal string get_OdataType();
    [CompilerGeneratedAttribute]
internal void set_OdataType(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaTransformPreset DeserializeMediaTransformPreset(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.MediaVideoBase : MediaCodecBase {
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <KeyFrameInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<InputVideoStretchMode> <StretchMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<VideoSyncMode> <SyncMode>k__BackingField;
    public Nullable`1<TimeSpan> KeyFrameInterval { get; public set; }
    public Nullable`1<InputVideoStretchMode> StretchMode { get; public set; }
    public Nullable`1<VideoSyncMode> SyncMode { get; public set; }
    internal MediaVideoBase(string odataType, string label, Nullable`1<TimeSpan> keyFrameInterval, Nullable`1<InputVideoStretchMode> stretchMode, Nullable`1<VideoSyncMode> syncMode);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_KeyFrameInterval();
    [CompilerGeneratedAttribute]
public void set_KeyFrameInterval(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<InputVideoStretchMode> get_StretchMode();
    [CompilerGeneratedAttribute]
public void set_StretchMode(Nullable`1<InputVideoStretchMode> value);
    [CompilerGeneratedAttribute]
public Nullable`1<VideoSyncMode> get_SyncMode();
    [CompilerGeneratedAttribute]
public void set_SyncMode(Nullable`1<VideoSyncMode> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MediaVideoBase DeserializeMediaVideoBase(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.Mp4Format : MultiBitrateFormat {
    public Mp4Format(string filenamePattern);
    internal Mp4Format(string odataType, string filenamePattern, IList`1<MediaOutputFile> outputFiles);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static Mp4Format DeserializeMp4Format(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.MultiBitrateFormat : MediaFormatBase {
    [CompilerGeneratedAttribute]
private IList`1<MediaOutputFile> <OutputFiles>k__BackingField;
    public IList`1<MediaOutputFile> OutputFiles { get; }
    public MultiBitrateFormat(string filenamePattern);
    internal MultiBitrateFormat(string odataType, string filenamePattern, IList`1<MediaOutputFile> outputFiles);
    [CompilerGeneratedAttribute]
public IList`1<MediaOutputFile> get_OutputFiles();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static MultiBitrateFormat DeserializeMultiBitrateFormat(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.NoEncryption : object {
    [CompilerGeneratedAttribute]
private MediaEnabledProtocols <EnabledProtocols>k__BackingField;
    public MediaEnabledProtocols EnabledProtocols { get; public set; }
    internal NoEncryption(MediaEnabledProtocols enabledProtocols);
    [CompilerGeneratedAttribute]
public MediaEnabledProtocols get_EnabledProtocols();
    [CompilerGeneratedAttribute]
public void set_EnabledProtocols(MediaEnabledProtocols value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static NoEncryption DeserializeNoEncryption(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.OutputImageFileFormat : MediaFormatBase {
    public OutputImageFileFormat(string filenamePattern);
    internal OutputImageFileFormat(string odataType, string filenamePattern);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static OutputImageFileFormat DeserializeOutputImageFileFormat(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.PlayerVisibility : ValueType {
    private string _value;
    private static string HiddenValue;
    private static string VisibleValue;
    [CompilerGeneratedAttribute]
private static PlayerVisibility <Hidden>k__BackingField;
    [CompilerGeneratedAttribute]
private static PlayerVisibility <Visible>k__BackingField;
    public static PlayerVisibility Hidden { get; }
    public static PlayerVisibility Visible { get; }
    public PlayerVisibility(string value);
    private static PlayerVisibility();
    [CompilerGeneratedAttribute]
public static PlayerVisibility get_Hidden();
    [CompilerGeneratedAttribute]
public static PlayerVisibility get_Visible();
    public static bool op_Equality(PlayerVisibility left, PlayerVisibility right);
    public static bool op_Inequality(PlayerVisibility left, PlayerVisibility right);
    public static PlayerVisibility op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(PlayerVisibility other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.PlayReadySecurityLevel : ValueType {
    private string _value;
    private static string UnknownValue;
    private static string SL150Value;
    private static string SL2000Value;
    private static string SL3000Value;
    [CompilerGeneratedAttribute]
private static PlayReadySecurityLevel <Unknown>k__BackingField;
    [CompilerGeneratedAttribute]
private static PlayReadySecurityLevel <SL150>k__BackingField;
    [CompilerGeneratedAttribute]
private static PlayReadySecurityLevel <SL2000>k__BackingField;
    [CompilerGeneratedAttribute]
private static PlayReadySecurityLevel <SL3000>k__BackingField;
    public static PlayReadySecurityLevel Unknown { get; }
    public static PlayReadySecurityLevel SL150 { get; }
    public static PlayReadySecurityLevel SL2000 { get; }
    public static PlayReadySecurityLevel SL3000 { get; }
    public PlayReadySecurityLevel(string value);
    private static PlayReadySecurityLevel();
    [CompilerGeneratedAttribute]
public static PlayReadySecurityLevel get_Unknown();
    [CompilerGeneratedAttribute]
public static PlayReadySecurityLevel get_SL150();
    [CompilerGeneratedAttribute]
public static PlayReadySecurityLevel get_SL2000();
    [CompilerGeneratedAttribute]
public static PlayReadySecurityLevel get_SL3000();
    public static bool op_Equality(PlayReadySecurityLevel left, PlayReadySecurityLevel right);
    public static bool op_Inequality(PlayReadySecurityLevel left, PlayReadySecurityLevel right);
    public static PlayReadySecurityLevel op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(PlayReadySecurityLevel other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.PngFormat : OutputImageFileFormat {
    public PngFormat(string filenamePattern);
    internal PngFormat(string odataType, string filenamePattern);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static PngFormat DeserializePngFormat(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.PngImage : MediaImageBase {
    [CompilerGeneratedAttribute]
private IList`1<PngLayer> <Layers>k__BackingField;
    public IList`1<PngLayer> Layers { get; }
    public PngImage(string start);
    internal PngImage(string odataType, string label, Nullable`1<TimeSpan> keyFrameInterval, Nullable`1<InputVideoStretchMode> stretchMode, Nullable`1<VideoSyncMode> syncMode, string start, string step, string range, IList`1<PngLayer> layers);
    [CompilerGeneratedAttribute]
public IList`1<PngLayer> get_Layers();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static PngImage DeserializePngImage(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.PngLayer : MediaLayerBase {
    internal PngLayer(string width, string height, string label);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static PngLayer DeserializePngLayer(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.PresentationTimeRange : object {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <StartTimestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <EndTimestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <PresentationWindowDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <LiveBackoffDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Timescale>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ForceEndTimestamp>k__BackingField;
    public Nullable`1<long> StartTimestamp { get; public set; }
    public Nullable`1<long> EndTimestamp { get; public set; }
    public Nullable`1<long> PresentationWindowDuration { get; public set; }
    public Nullable`1<long> LiveBackoffDuration { get; public set; }
    public Nullable`1<long> Timescale { get; public set; }
    public Nullable`1<bool> ForceEndTimestamp { get; public set; }
    internal PresentationTimeRange(Nullable`1<long> startTimestamp, Nullable`1<long> endTimestamp, Nullable`1<long> presentationWindowDuration, Nullable`1<long> liveBackoffDuration, Nullable`1<long> timescale, Nullable`1<bool> forceEndTimestamp);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_StartTimestamp();
    [CompilerGeneratedAttribute]
public void set_StartTimestamp(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_EndTimestamp();
    [CompilerGeneratedAttribute]
public void set_EndTimestamp(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_PresentationWindowDuration();
    [CompilerGeneratedAttribute]
public void set_PresentationWindowDuration(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_LiveBackoffDuration();
    [CompilerGeneratedAttribute]
public void set_LiveBackoffDuration(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Timescale();
    [CompilerGeneratedAttribute]
public void set_Timescale(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ForceEndTimestamp();
    [CompilerGeneratedAttribute]
public void set_ForceEndTimestamp(Nullable`1<bool> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static PresentationTimeRange DeserializePresentationTimeRange(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.RectangularWindow : object {
    [CompilerGeneratedAttribute]
private string <Left>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Top>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Width>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Height>k__BackingField;
    public string Left { get; public set; }
    public string Top { get; public set; }
    public string Width { get; public set; }
    public string Height { get; public set; }
    internal RectangularWindow(string left, string top, string width, string height);
    [CompilerGeneratedAttribute]
public string get_Left();
    [CompilerGeneratedAttribute]
public void set_Left(string value);
    [CompilerGeneratedAttribute]
public string get_Top();
    [CompilerGeneratedAttribute]
public void set_Top(string value);
    [CompilerGeneratedAttribute]
public string get_Width();
    [CompilerGeneratedAttribute]
public void set_Width(string value);
    [CompilerGeneratedAttribute]
public string get_Height();
    [CompilerGeneratedAttribute]
public void set_Height(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static RectangularWindow DeserializeRectangularWindow(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.ResourceIdentity : object {
    [CompilerGeneratedAttribute]
private string <UserAssignedIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseSystemAssignedIdentity>k__BackingField;
    public string UserAssignedIdentity { get; public set; }
    public bool UseSystemAssignedIdentity { get; public set; }
    public ResourceIdentity(bool useSystemAssignedIdentity);
    internal ResourceIdentity(string userAssignedIdentity, bool useSystemAssignedIdentity);
    [CompilerGeneratedAttribute]
public string get_UserAssignedIdentity();
    [CompilerGeneratedAttribute]
public void set_UserAssignedIdentity(string value);
    [CompilerGeneratedAttribute]
public bool get_UseSystemAssignedIdentity();
    [CompilerGeneratedAttribute]
public void set_UseSystemAssignedIdentity(bool value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ResourceIdentity DeserializeResourceIdentity(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.RotationSetting : ValueType {
    private string _value;
    private static string AutoValue;
    private static string NoneValue;
    private static string Rotate0Value;
    private static string Rotate90Value;
    private static string Rotate180Value;
    private static string Rotate270Value;
    [CompilerGeneratedAttribute]
private static RotationSetting <Auto>k__BackingField;
    [CompilerGeneratedAttribute]
private static RotationSetting <None>k__BackingField;
    [CompilerGeneratedAttribute]
private static RotationSetting <Rotate0>k__BackingField;
    [CompilerGeneratedAttribute]
private static RotationSetting <Rotate90>k__BackingField;
    [CompilerGeneratedAttribute]
private static RotationSetting <Rotate180>k__BackingField;
    [CompilerGeneratedAttribute]
private static RotationSetting <Rotate270>k__BackingField;
    public static RotationSetting Auto { get; }
    public static RotationSetting None { get; }
    public static RotationSetting Rotate0 { get; }
    public static RotationSetting Rotate90 { get; }
    public static RotationSetting Rotate180 { get; }
    public static RotationSetting Rotate270 { get; }
    public RotationSetting(string value);
    private static RotationSetting();
    [CompilerGeneratedAttribute]
public static RotationSetting get_Auto();
    [CompilerGeneratedAttribute]
public static RotationSetting get_None();
    [CompilerGeneratedAttribute]
public static RotationSetting get_Rotate0();
    [CompilerGeneratedAttribute]
public static RotationSetting get_Rotate90();
    [CompilerGeneratedAttribute]
public static RotationSetting get_Rotate180();
    [CompilerGeneratedAttribute]
public static RotationSetting get_Rotate270();
    public static bool op_Equality(RotationSetting left, RotationSetting right);
    public static bool op_Inequality(RotationSetting left, RotationSetting right);
    public static RotationSetting op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(RotationSetting other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.SelectAudioTrackByAttribute : AudioTrackDescriptor {
    [CompilerGeneratedAttribute]
private TrackAttribute <Attribute>k__BackingField;
    [CompilerGeneratedAttribute]
private TrackAttributeFilter <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FilterValue>k__BackingField;
    public TrackAttribute Attribute { get; public set; }
    public TrackAttributeFilter Filter { get; public set; }
    public string FilterValue { get; public set; }
    public SelectAudioTrackByAttribute(TrackAttribute attribute, TrackAttributeFilter filter);
    internal SelectAudioTrackByAttribute(string odataType, Nullable`1<ChannelMapping> channelMapping, TrackAttribute attribute, TrackAttributeFilter filter, string filterValue);
    [CompilerGeneratedAttribute]
public TrackAttribute get_Attribute();
    [CompilerGeneratedAttribute]
public void set_Attribute(TrackAttribute value);
    [CompilerGeneratedAttribute]
public TrackAttributeFilter get_Filter();
    [CompilerGeneratedAttribute]
public void set_Filter(TrackAttributeFilter value);
    [CompilerGeneratedAttribute]
public string get_FilterValue();
    [CompilerGeneratedAttribute]
public void set_FilterValue(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static SelectAudioTrackByAttribute DeserializeSelectAudioTrackByAttribute(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.SelectAudioTrackById : AudioTrackDescriptor {
    [CompilerGeneratedAttribute]
private long <TrackId>k__BackingField;
    public long TrackId { get; public set; }
    public SelectAudioTrackById(long trackId);
    internal SelectAudioTrackById(string odataType, Nullable`1<ChannelMapping> channelMapping, long trackId);
    [CompilerGeneratedAttribute]
public long get_TrackId();
    [CompilerGeneratedAttribute]
public void set_TrackId(long value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static SelectAudioTrackById DeserializeSelectAudioTrackById(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.SelectVideoTrackByAttribute : VideoTrackDescriptor {
    [CompilerGeneratedAttribute]
private TrackAttribute <Attribute>k__BackingField;
    [CompilerGeneratedAttribute]
private TrackAttributeFilter <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FilterValue>k__BackingField;
    public TrackAttribute Attribute { get; public set; }
    public TrackAttributeFilter Filter { get; public set; }
    public string FilterValue { get; public set; }
    public SelectVideoTrackByAttribute(TrackAttribute attribute, TrackAttributeFilter filter);
    internal SelectVideoTrackByAttribute(string odataType, TrackAttribute attribute, TrackAttributeFilter filter, string filterValue);
    [CompilerGeneratedAttribute]
public TrackAttribute get_Attribute();
    [CompilerGeneratedAttribute]
public void set_Attribute(TrackAttribute value);
    [CompilerGeneratedAttribute]
public TrackAttributeFilter get_Filter();
    [CompilerGeneratedAttribute]
public void set_Filter(TrackAttributeFilter value);
    [CompilerGeneratedAttribute]
public string get_FilterValue();
    [CompilerGeneratedAttribute]
public void set_FilterValue(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static SelectVideoTrackByAttribute DeserializeSelectVideoTrackByAttribute(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.SelectVideoTrackById : VideoTrackDescriptor {
    [CompilerGeneratedAttribute]
private long <TrackId>k__BackingField;
    public long TrackId { get; public set; }
    public SelectVideoTrackById(long trackId);
    internal SelectVideoTrackById(string odataType, long trackId);
    [CompilerGeneratedAttribute]
public long get_TrackId();
    [CompilerGeneratedAttribute]
public void set_TrackId(long value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static SelectVideoTrackById DeserializeSelectVideoTrackById(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.StandardEncoderPreset : MediaTransformPreset {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <ExperimentalOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private FilteringOperations <Filters>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<MediaCodecBase> <Codecs>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<MediaFormatBase> <Formats>k__BackingField;
    public IDictionary`2<string, string> ExperimentalOptions { get; }
    public FilteringOperations Filters { get; public set; }
    public IList`1<MediaCodecBase> Codecs { get; }
    public IList`1<MediaFormatBase> Formats { get; }
    public StandardEncoderPreset(IEnumerable`1<MediaCodecBase> codecs, IEnumerable`1<MediaFormatBase> formats);
    internal StandardEncoderPreset(string odataType, IDictionary`2<string, string> experimentalOptions, FilteringOperations filters, IList`1<MediaCodecBase> codecs, IList`1<MediaFormatBase> formats);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_ExperimentalOptions();
    [CompilerGeneratedAttribute]
public FilteringOperations get_Filters();
    [CompilerGeneratedAttribute]
public void set_Filters(FilteringOperations value);
    [CompilerGeneratedAttribute]
public IList`1<MediaCodecBase> get_Codecs();
    [CompilerGeneratedAttribute]
public IList`1<MediaFormatBase> get_Formats();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static StandardEncoderPreset DeserializeStandardEncoderPreset(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.StorageEncryptedAssetDecryptionInfo : object {
    [CompilerGeneratedAttribute]
private Byte[] <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<MediaAssetFileEncryptionMetadata> <AssetFileEncryptionMetadata>k__BackingField;
    public Byte[] Key { get; }
    public IReadOnlyList`1<MediaAssetFileEncryptionMetadata> AssetFileEncryptionMetadata { get; }
    internal StorageEncryptedAssetDecryptionInfo(Byte[] key, IReadOnlyList`1<MediaAssetFileEncryptionMetadata> assetFileEncryptionMetadata);
    [CompilerGeneratedAttribute]
public Byte[] get_Key();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<MediaAssetFileEncryptionMetadata> get_AssetFileEncryptionMetadata();
    internal static StorageEncryptedAssetDecryptionInfo DeserializeStorageEncryptedAssetDecryptionInfo(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.StreamingEndpointAccessControl : object {
    [CompilerGeneratedAttribute]
private AkamaiAccessControl <Akamai>k__BackingField;
    [CompilerGeneratedAttribute]
private IPAccessControl <IPs>k__BackingField;
    internal AkamaiAccessControl Akamai { get; internal set; }
    public IList`1<AkamaiSignatureHeaderAuthenticationKey> AkamaiSignatureHeaderAuthenticationKeyList { get; }
    internal IPAccessControl IPs { get; internal set; }
    public IList`1<IPRange> AllowedIPs { get; }
    internal StreamingEndpointAccessControl(AkamaiAccessControl akamai, IPAccessControl iPs);
    [CompilerGeneratedAttribute]
internal AkamaiAccessControl get_Akamai();
    [CompilerGeneratedAttribute]
internal void set_Akamai(AkamaiAccessControl value);
    public IList`1<AkamaiSignatureHeaderAuthenticationKey> get_AkamaiSignatureHeaderAuthenticationKeyList();
    [CompilerGeneratedAttribute]
internal IPAccessControl get_IPs();
    [CompilerGeneratedAttribute]
internal void set_IPs(IPAccessControl value);
    public IList`1<IPRange> get_AllowedIPs();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static StreamingEndpointAccessControl DeserializeStreamingEndpointAccessControl(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.StreamingEndpointCapacity : object {
    [CompilerGeneratedAttribute]
private string <ScaleType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Default>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Minimum>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Maximum>k__BackingField;
    public string ScaleType { get; }
    public Nullable`1<int> Default { get; }
    public Nullable`1<int> Minimum { get; }
    public Nullable`1<int> Maximum { get; }
    internal StreamingEndpointCapacity(string scaleType, Nullable`1<int> default, Nullable`1<int> minimum, Nullable`1<int> maximum);
    [CompilerGeneratedAttribute]
public string get_ScaleType();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Default();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Minimum();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Maximum();
    internal static StreamingEndpointCapacity DeserializeStreamingEndpointCapacity(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.StreamingEndpointCurrentSku : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Capacity>k__BackingField;
    public string Name { get; }
    public Nullable`1<int> Capacity { get; public set; }
    internal StreamingEndpointCurrentSku(string name, Nullable`1<int> capacity);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Capacity();
    [CompilerGeneratedAttribute]
public void set_Capacity(Nullable`1<int> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static StreamingEndpointCurrentSku DeserializeStreamingEndpointCurrentSku(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.StreamingEndpointListResult : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<StreamingEndpointData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OdataCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OdataNextLink>k__BackingField;
    public IReadOnlyList`1<StreamingEndpointData> Value { get; }
    public Nullable`1<int> OdataCount { get; }
    public string OdataNextLink { get; }
    internal StreamingEndpointListResult(IReadOnlyList`1<StreamingEndpointData> value, Nullable`1<int> odataCount, string odataNextLink);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<StreamingEndpointData> get_Value();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_OdataCount();
    [CompilerGeneratedAttribute]
public string get_OdataNextLink();
    internal static StreamingEndpointListResult DeserializeStreamingEndpointListResult(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.StreamingEndpointResourceState : ValueType {
    private string _value;
    private static string StoppedValue;
    private static string StartingValue;
    private static string RunningValue;
    private static string StoppingValue;
    private static string DeletingValue;
    private static string ScalingValue;
    [CompilerGeneratedAttribute]
private static StreamingEndpointResourceState <Stopped>k__BackingField;
    [CompilerGeneratedAttribute]
private static StreamingEndpointResourceState <Starting>k__BackingField;
    [CompilerGeneratedAttribute]
private static StreamingEndpointResourceState <Running>k__BackingField;
    [CompilerGeneratedAttribute]
private static StreamingEndpointResourceState <Stopping>k__BackingField;
    [CompilerGeneratedAttribute]
private static StreamingEndpointResourceState <Deleting>k__BackingField;
    [CompilerGeneratedAttribute]
private static StreamingEndpointResourceState <Scaling>k__BackingField;
    public static StreamingEndpointResourceState Stopped { get; }
    public static StreamingEndpointResourceState Starting { get; }
    public static StreamingEndpointResourceState Running { get; }
    public static StreamingEndpointResourceState Stopping { get; }
    public static StreamingEndpointResourceState Deleting { get; }
    public static StreamingEndpointResourceState Scaling { get; }
    public StreamingEndpointResourceState(string value);
    private static StreamingEndpointResourceState();
    [CompilerGeneratedAttribute]
public static StreamingEndpointResourceState get_Stopped();
    [CompilerGeneratedAttribute]
public static StreamingEndpointResourceState get_Starting();
    [CompilerGeneratedAttribute]
public static StreamingEndpointResourceState get_Running();
    [CompilerGeneratedAttribute]
public static StreamingEndpointResourceState get_Stopping();
    [CompilerGeneratedAttribute]
public static StreamingEndpointResourceState get_Deleting();
    [CompilerGeneratedAttribute]
public static StreamingEndpointResourceState get_Scaling();
    public static bool op_Equality(StreamingEndpointResourceState left, StreamingEndpointResourceState right);
    public static bool op_Inequality(StreamingEndpointResourceState left, StreamingEndpointResourceState right);
    public static StreamingEndpointResourceState op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(StreamingEndpointResourceState other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
internal class Azure.ResourceManager.Media.Models.StreamingEndpointSku : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; }
    internal StreamingEndpointSku(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    internal static StreamingEndpointSku DeserializeStreamingEndpointSku(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.StreamingEndpointSkuInfo : object {
    [CompilerGeneratedAttribute]
private Nullable`1<ResourceType> <ResourceType>k__BackingField;
    [CompilerGeneratedAttribute]
private StreamingEndpointCapacity <Capacity>k__BackingField;
    [CompilerGeneratedAttribute]
private StreamingEndpointSku <Sku>k__BackingField;
    public Nullable`1<ResourceType> ResourceType { get; }
    public StreamingEndpointCapacity Capacity { get; }
    internal StreamingEndpointSku Sku { get; }
    public string SkuName { get; }
    internal StreamingEndpointSkuInfo(Nullable`1<ResourceType> resourceType, StreamingEndpointCapacity capacity, StreamingEndpointSku sku);
    [CompilerGeneratedAttribute]
public Nullable`1<ResourceType> get_ResourceType();
    [CompilerGeneratedAttribute]
public StreamingEndpointCapacity get_Capacity();
    [CompilerGeneratedAttribute]
internal StreamingEndpointSku get_Sku();
    public string get_SkuName();
    internal static StreamingEndpointSkuInfo DeserializeStreamingEndpointSkuInfo(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.StreamingEndpointSkuInfoListResult : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<StreamingEndpointSkuInfo> <Value>k__BackingField;
    public IReadOnlyList`1<StreamingEndpointSkuInfo> Value { get; }
    internal StreamingEndpointSkuInfoListResult(IReadOnlyList`1<StreamingEndpointSkuInfo> value);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<StreamingEndpointSkuInfo> get_Value();
    internal static StreamingEndpointSkuInfoListResult DeserializeStreamingEndpointSkuInfoListResult(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.StreamingEntityScaleUnit : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ScaleUnit>k__BackingField;
    public Nullable`1<int> ScaleUnit { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ScaleUnit();
    [CompilerGeneratedAttribute]
public void set_ScaleUnit(Nullable`1<int> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
}
public class Azure.ResourceManager.Media.Models.StreamingLocatorContentKey : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<StreamingLocatorContentKeyType> <KeyType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LabelReferenceInStreamingPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PolicyName>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<MediaTrackSelection> <Tracks>k__BackingField;
    public Guid Id { get; public set; }
    public Nullable`1<StreamingLocatorContentKeyType> KeyType { get; }
    public string LabelReferenceInStreamingPolicy { get; public set; }
    public string Value { get; public set; }
    public string PolicyName { get; }
    public IReadOnlyList`1<MediaTrackSelection> Tracks { get; }
    public StreamingLocatorContentKey(Guid id);
    internal StreamingLocatorContentKey(Guid id, Nullable`1<StreamingLocatorContentKeyType> keyType, string labelReferenceInStreamingPolicy, string value, string policyName, IReadOnlyList`1<MediaTrackSelection> tracks);
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public Nullable`1<StreamingLocatorContentKeyType> get_KeyType();
    [CompilerGeneratedAttribute]
public string get_LabelReferenceInStreamingPolicy();
    [CompilerGeneratedAttribute]
public void set_LabelReferenceInStreamingPolicy(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public string get_PolicyName();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<MediaTrackSelection> get_Tracks();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static StreamingLocatorContentKey DeserializeStreamingLocatorContentKey(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.StreamingLocatorContentKeyType : ValueType {
    private string _value;
    private static string CommonEncryptionCencValue;
    private static string CommonEncryptionCbcsValue;
    private static string EnvelopeEncryptionValue;
    [CompilerGeneratedAttribute]
private static StreamingLocatorContentKeyType <CommonEncryptionCenc>k__BackingField;
    [CompilerGeneratedAttribute]
private static StreamingLocatorContentKeyType <CommonEncryptionCbcs>k__BackingField;
    [CompilerGeneratedAttribute]
private static StreamingLocatorContentKeyType <EnvelopeEncryption>k__BackingField;
    public static StreamingLocatorContentKeyType CommonEncryptionCenc { get; }
    public static StreamingLocatorContentKeyType CommonEncryptionCbcs { get; }
    public static StreamingLocatorContentKeyType EnvelopeEncryption { get; }
    public StreamingLocatorContentKeyType(string value);
    private static StreamingLocatorContentKeyType();
    [CompilerGeneratedAttribute]
public static StreamingLocatorContentKeyType get_CommonEncryptionCenc();
    [CompilerGeneratedAttribute]
public static StreamingLocatorContentKeyType get_CommonEncryptionCbcs();
    [CompilerGeneratedAttribute]
public static StreamingLocatorContentKeyType get_EnvelopeEncryption();
    public static bool op_Equality(StreamingLocatorContentKeyType left, StreamingLocatorContentKeyType right);
    public static bool op_Inequality(StreamingLocatorContentKeyType left, StreamingLocatorContentKeyType right);
    public static StreamingLocatorContentKeyType op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(StreamingLocatorContentKeyType other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
internal class Azure.ResourceManager.Media.Models.StreamingLocatorListResult : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<StreamingLocatorData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OdataNextLink>k__BackingField;
    public IReadOnlyList`1<StreamingLocatorData> Value { get; }
    public string OdataNextLink { get; }
    internal StreamingLocatorListResult(IReadOnlyList`1<StreamingLocatorData> value, string odataNextLink);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<StreamingLocatorData> get_Value();
    [CompilerGeneratedAttribute]
public string get_OdataNextLink();
    internal static StreamingLocatorListResult DeserializeStreamingLocatorListResult(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.StreamingPath : object {
    [CompilerGeneratedAttribute]
private StreamingPolicyStreamingProtocol <StreamingProtocol>k__BackingField;
    [CompilerGeneratedAttribute]
private StreamingPathEncryptionScheme <EncryptionScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <Paths>k__BackingField;
    public StreamingPolicyStreamingProtocol StreamingProtocol { get; }
    public StreamingPathEncryptionScheme EncryptionScheme { get; }
    public IReadOnlyList`1<string> Paths { get; }
    internal StreamingPath(StreamingPolicyStreamingProtocol streamingProtocol, StreamingPathEncryptionScheme encryptionScheme);
    internal StreamingPath(StreamingPolicyStreamingProtocol streamingProtocol, StreamingPathEncryptionScheme encryptionScheme, IReadOnlyList`1<string> paths);
    [CompilerGeneratedAttribute]
public StreamingPolicyStreamingProtocol get_StreamingProtocol();
    [CompilerGeneratedAttribute]
public StreamingPathEncryptionScheme get_EncryptionScheme();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_Paths();
    internal static StreamingPath DeserializeStreamingPath(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.StreamingPathEncryptionScheme : ValueType {
    private string _value;
    private static string NoEncryptionValue;
    private static string EnvelopeEncryptionValue;
    private static string CommonEncryptionCencValue;
    private static string CommonEncryptionCbcsValue;
    [CompilerGeneratedAttribute]
private static StreamingPathEncryptionScheme <NoEncryption>k__BackingField;
    [CompilerGeneratedAttribute]
private static StreamingPathEncryptionScheme <EnvelopeEncryption>k__BackingField;
    [CompilerGeneratedAttribute]
private static StreamingPathEncryptionScheme <CommonEncryptionCenc>k__BackingField;
    [CompilerGeneratedAttribute]
private static StreamingPathEncryptionScheme <CommonEncryptionCbcs>k__BackingField;
    public static StreamingPathEncryptionScheme NoEncryption { get; }
    public static StreamingPathEncryptionScheme EnvelopeEncryption { get; }
    public static StreamingPathEncryptionScheme CommonEncryptionCenc { get; }
    public static StreamingPathEncryptionScheme CommonEncryptionCbcs { get; }
    public StreamingPathEncryptionScheme(string value);
    private static StreamingPathEncryptionScheme();
    [CompilerGeneratedAttribute]
public static StreamingPathEncryptionScheme get_NoEncryption();
    [CompilerGeneratedAttribute]
public static StreamingPathEncryptionScheme get_EnvelopeEncryption();
    [CompilerGeneratedAttribute]
public static StreamingPathEncryptionScheme get_CommonEncryptionCenc();
    [CompilerGeneratedAttribute]
public static StreamingPathEncryptionScheme get_CommonEncryptionCbcs();
    public static bool op_Equality(StreamingPathEncryptionScheme left, StreamingPathEncryptionScheme right);
    public static bool op_Inequality(StreamingPathEncryptionScheme left, StreamingPathEncryptionScheme right);
    public static StreamingPathEncryptionScheme op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(StreamingPathEncryptionScheme other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.StreamingPathsResult : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<StreamingPath> <StreamingPaths>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <DownloadPaths>k__BackingField;
    public IReadOnlyList`1<StreamingPath> StreamingPaths { get; }
    public IReadOnlyList`1<string> DownloadPaths { get; }
    internal StreamingPathsResult(IReadOnlyList`1<StreamingPath> streamingPaths, IReadOnlyList`1<string> downloadPaths);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<StreamingPath> get_StreamingPaths();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_DownloadPaths();
    internal static StreamingPathsResult DeserializeStreamingPathsResult(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.StreamingPolicyContentKey : object {
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PolicyName>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<MediaTrackSelection> <Tracks>k__BackingField;
    public string Label { get; public set; }
    public string PolicyName { get; public set; }
    public IList`1<MediaTrackSelection> Tracks { get; }
    internal StreamingPolicyContentKey(string label, string policyName, IList`1<MediaTrackSelection> tracks);
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public string get_PolicyName();
    [CompilerGeneratedAttribute]
public void set_PolicyName(string value);
    [CompilerGeneratedAttribute]
public IList`1<MediaTrackSelection> get_Tracks();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static StreamingPolicyContentKey DeserializeStreamingPolicyContentKey(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.StreamingPolicyContentKeys : object {
    [CompilerGeneratedAttribute]
private EncryptionSchemeDefaultKey <DefaultKey>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<StreamingPolicyContentKey> <KeyToTrackMappings>k__BackingField;
    public EncryptionSchemeDefaultKey DefaultKey { get; public set; }
    public IList`1<StreamingPolicyContentKey> KeyToTrackMappings { get; }
    internal StreamingPolicyContentKeys(EncryptionSchemeDefaultKey defaultKey, IList`1<StreamingPolicyContentKey> keyToTrackMappings);
    [CompilerGeneratedAttribute]
public EncryptionSchemeDefaultKey get_DefaultKey();
    [CompilerGeneratedAttribute]
public void set_DefaultKey(EncryptionSchemeDefaultKey value);
    [CompilerGeneratedAttribute]
public IList`1<StreamingPolicyContentKey> get_KeyToTrackMappings();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static StreamingPolicyContentKeys DeserializeStreamingPolicyContentKeys(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.StreamingPolicyFairPlayConfiguration : object {
    [CompilerGeneratedAttribute]
private string <CustomLicenseAcquisitionUriTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowPersistentLicense>k__BackingField;
    public string CustomLicenseAcquisitionUriTemplate { get; public set; }
    public bool AllowPersistentLicense { get; public set; }
    public StreamingPolicyFairPlayConfiguration(bool allowPersistentLicense);
    internal StreamingPolicyFairPlayConfiguration(string customLicenseAcquisitionUriTemplate, bool allowPersistentLicense);
    [CompilerGeneratedAttribute]
public string get_CustomLicenseAcquisitionUriTemplate();
    [CompilerGeneratedAttribute]
public void set_CustomLicenseAcquisitionUriTemplate(string value);
    [CompilerGeneratedAttribute]
public bool get_AllowPersistentLicense();
    [CompilerGeneratedAttribute]
public void set_AllowPersistentLicense(bool value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static StreamingPolicyFairPlayConfiguration DeserializeStreamingPolicyFairPlayConfiguration(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.StreamingPolicyListResult : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<StreamingPolicyData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OdataNextLink>k__BackingField;
    public IReadOnlyList`1<StreamingPolicyData> Value { get; }
    public string OdataNextLink { get; }
    internal StreamingPolicyListResult(IReadOnlyList`1<StreamingPolicyData> value, string odataNextLink);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<StreamingPolicyData> get_Value();
    [CompilerGeneratedAttribute]
public string get_OdataNextLink();
    internal static StreamingPolicyListResult DeserializeStreamingPolicyListResult(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.StreamingPolicyPlayReadyConfiguration : object {
    [CompilerGeneratedAttribute]
private string <CustomLicenseAcquisitionUriTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PlayReadyCustomAttributes>k__BackingField;
    public string CustomLicenseAcquisitionUriTemplate { get; public set; }
    public string PlayReadyCustomAttributes { get; public set; }
    internal StreamingPolicyPlayReadyConfiguration(string customLicenseAcquisitionUriTemplate, string playReadyCustomAttributes);
    [CompilerGeneratedAttribute]
public string get_CustomLicenseAcquisitionUriTemplate();
    [CompilerGeneratedAttribute]
public void set_CustomLicenseAcquisitionUriTemplate(string value);
    [CompilerGeneratedAttribute]
public string get_PlayReadyCustomAttributes();
    [CompilerGeneratedAttribute]
public void set_PlayReadyCustomAttributes(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static StreamingPolicyPlayReadyConfiguration DeserializeStreamingPolicyPlayReadyConfiguration(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.StreamingPolicyStreamingProtocol : ValueType {
    private string _value;
    private static string HlsValue;
    private static string DashValue;
    private static string SmoothStreamingValue;
    private static string DownloadValue;
    [CompilerGeneratedAttribute]
private static StreamingPolicyStreamingProtocol <Hls>k__BackingField;
    [CompilerGeneratedAttribute]
private static StreamingPolicyStreamingProtocol <Dash>k__BackingField;
    [CompilerGeneratedAttribute]
private static StreamingPolicyStreamingProtocol <SmoothStreaming>k__BackingField;
    [CompilerGeneratedAttribute]
private static StreamingPolicyStreamingProtocol <Download>k__BackingField;
    public static StreamingPolicyStreamingProtocol Hls { get; }
    public static StreamingPolicyStreamingProtocol Dash { get; }
    public static StreamingPolicyStreamingProtocol SmoothStreaming { get; }
    public static StreamingPolicyStreamingProtocol Download { get; }
    public StreamingPolicyStreamingProtocol(string value);
    private static StreamingPolicyStreamingProtocol();
    [CompilerGeneratedAttribute]
public static StreamingPolicyStreamingProtocol get_Hls();
    [CompilerGeneratedAttribute]
public static StreamingPolicyStreamingProtocol get_Dash();
    [CompilerGeneratedAttribute]
public static StreamingPolicyStreamingProtocol get_SmoothStreaming();
    [CompilerGeneratedAttribute]
public static StreamingPolicyStreamingProtocol get_Download();
    public static bool op_Equality(StreamingPolicyStreamingProtocol left, StreamingPolicyStreamingProtocol right);
    public static bool op_Inequality(StreamingPolicyStreamingProtocol left, StreamingPolicyStreamingProtocol right);
    public static StreamingPolicyStreamingProtocol op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(StreamingPolicyStreamingProtocol other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
internal class Azure.ResourceManager.Media.Models.StreamingPolicyWidevineConfiguration : object {
    [CompilerGeneratedAttribute]
private string <CustomLicenseAcquisitionUriTemplate>k__BackingField;
    public string CustomLicenseAcquisitionUriTemplate { get; public set; }
    internal StreamingPolicyWidevineConfiguration(string customLicenseAcquisitionUriTemplate);
    [CompilerGeneratedAttribute]
public string get_CustomLicenseAcquisitionUriTemplate();
    [CompilerGeneratedAttribute]
public void set_CustomLicenseAcquisitionUriTemplate(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static StreamingPolicyWidevineConfiguration DeserializeStreamingPolicyWidevineConfiguration(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.StreamOptionsFlag : ValueType {
    private string _value;
    private static string DefaultValue;
    private static string LowLatencyValue;
    private static string LowLatencyV2Value;
    [CompilerGeneratedAttribute]
private static StreamOptionsFlag <Default>k__BackingField;
    [CompilerGeneratedAttribute]
private static StreamOptionsFlag <LowLatency>k__BackingField;
    [CompilerGeneratedAttribute]
private static StreamOptionsFlag <LowLatencyV2>k__BackingField;
    public static StreamOptionsFlag Default { get; }
    public static StreamOptionsFlag LowLatency { get; }
    public static StreamOptionsFlag LowLatencyV2 { get; }
    public StreamOptionsFlag(string value);
    private static StreamOptionsFlag();
    [CompilerGeneratedAttribute]
public static StreamOptionsFlag get_Default();
    [CompilerGeneratedAttribute]
public static StreamOptionsFlag get_LowLatency();
    [CompilerGeneratedAttribute]
public static StreamOptionsFlag get_LowLatencyV2();
    public static bool op_Equality(StreamOptionsFlag left, StreamOptionsFlag right);
    public static bool op_Inequality(StreamOptionsFlag left, StreamOptionsFlag right);
    public static StreamOptionsFlag op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(StreamOptionsFlag other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.SyncStorageKeysContent : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public string Id { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
}
public class Azure.ResourceManager.Media.Models.TextTrack : MediaAssetTrackBase {
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LanguageCode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<PlayerVisibility> <PlayerVisibility>k__BackingField;
    [CompilerGeneratedAttribute]
private HlsSettings <HlsSettings>k__BackingField;
    public string FileName { get; public set; }
    public string DisplayName { get; public set; }
    public string LanguageCode { get; }
    public Nullable`1<PlayerVisibility> PlayerVisibility { get; public set; }
    public HlsSettings HlsSettings { get; public set; }
    internal TextTrack(string odataType, string fileName, string displayName, string languageCode, Nullable`1<PlayerVisibility> playerVisibility, HlsSettings hlsSettings);
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public void set_FileName(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_LanguageCode();
    [CompilerGeneratedAttribute]
public Nullable`1<PlayerVisibility> get_PlayerVisibility();
    [CompilerGeneratedAttribute]
public void set_PlayerVisibility(Nullable`1<PlayerVisibility> value);
    [CompilerGeneratedAttribute]
public HlsSettings get_HlsSettings();
    [CompilerGeneratedAttribute]
public void set_HlsSettings(HlsSettings value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static TextTrack DeserializeTextTrack(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.TrackAttribute : ValueType {
    private string _value;
    private static string BitrateValue;
    private static string LanguageValue;
    [CompilerGeneratedAttribute]
private static TrackAttribute <Bitrate>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrackAttribute <Language>k__BackingField;
    public static TrackAttribute Bitrate { get; }
    public static TrackAttribute Language { get; }
    public TrackAttribute(string value);
    private static TrackAttribute();
    [CompilerGeneratedAttribute]
public static TrackAttribute get_Bitrate();
    [CompilerGeneratedAttribute]
public static TrackAttribute get_Language();
    public static bool op_Equality(TrackAttribute left, TrackAttribute right);
    public static bool op_Inequality(TrackAttribute left, TrackAttribute right);
    public static TrackAttribute op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(TrackAttribute other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.TrackAttributeFilter : ValueType {
    private string _value;
    private static string AllValue;
    private static string TopValue;
    private static string BottomValue;
    private static string ValueEqualsValue;
    [CompilerGeneratedAttribute]
private static TrackAttributeFilter <All>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrackAttributeFilter <Top>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrackAttributeFilter <Bottom>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrackAttributeFilter <ValueEquals>k__BackingField;
    public static TrackAttributeFilter All { get; }
    public static TrackAttributeFilter Top { get; }
    public static TrackAttributeFilter Bottom { get; }
    public static TrackAttributeFilter ValueEquals { get; }
    public TrackAttributeFilter(string value);
    private static TrackAttributeFilter();
    [CompilerGeneratedAttribute]
public static TrackAttributeFilter get_All();
    [CompilerGeneratedAttribute]
public static TrackAttributeFilter get_Top();
    [CompilerGeneratedAttribute]
public static TrackAttributeFilter get_Bottom();
    [CompilerGeneratedAttribute]
public static TrackAttributeFilter get_ValueEquals();
    public static bool op_Equality(TrackAttributeFilter left, TrackAttributeFilter right);
    public static bool op_Inequality(TrackAttributeFilter left, TrackAttributeFilter right);
    public static TrackAttributeFilter op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(TrackAttributeFilter other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
internal class Azure.ResourceManager.Media.Models.TrackDashSettings : object {
    [CompilerGeneratedAttribute]
private string <Role>k__BackingField;
    public string Role { get; public set; }
    internal TrackDashSettings(string role);
    [CompilerGeneratedAttribute]
public string get_Role();
    [CompilerGeneratedAttribute]
public void set_Role(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static TrackDashSettings DeserializeTrackDashSettings(JsonElement element);
}
public abstract class Azure.ResourceManager.Media.Models.TrackDescriptor : object {
    [CompilerGeneratedAttribute]
private string <OdataType>k__BackingField;
    internal string OdataType { get; internal set; }
    internal TrackDescriptor(string odataType);
    [CompilerGeneratedAttribute]
internal string get_OdataType();
    [CompilerGeneratedAttribute]
internal void set_OdataType(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static TrackDescriptor DeserializeTrackDescriptor(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.TrackPropertyCompareOperation : ValueType {
    private string _value;
    private static string UnknownValue;
    private static string EqualValue;
    [CompilerGeneratedAttribute]
private static TrackPropertyCompareOperation <Unknown>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrackPropertyCompareOperation <Equal>k__BackingField;
    public static TrackPropertyCompareOperation Unknown { get; }
    public static TrackPropertyCompareOperation Equal { get; }
    public TrackPropertyCompareOperation(string value);
    private static TrackPropertyCompareOperation();
    [CompilerGeneratedAttribute]
public static TrackPropertyCompareOperation get_Unknown();
    [CompilerGeneratedAttribute]
public static TrackPropertyCompareOperation get_Equal();
    public static bool op_Equality(TrackPropertyCompareOperation left, TrackPropertyCompareOperation right);
    public static bool op_Inequality(TrackPropertyCompareOperation left, TrackPropertyCompareOperation right);
    public static TrackPropertyCompareOperation op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(TrackPropertyCompareOperation other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.TrackPropertyCondition : object {
    [CompilerGeneratedAttribute]
private TrackPropertyType <Property>k__BackingField;
    [CompilerGeneratedAttribute]
private TrackPropertyCompareOperation <Operation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public TrackPropertyType Property { get; public set; }
    public TrackPropertyCompareOperation Operation { get; public set; }
    public string Value { get; public set; }
    public TrackPropertyCondition(TrackPropertyType property, TrackPropertyCompareOperation operation);
    internal TrackPropertyCondition(TrackPropertyType property, TrackPropertyCompareOperation operation, string value);
    [CompilerGeneratedAttribute]
public TrackPropertyType get_Property();
    [CompilerGeneratedAttribute]
public void set_Property(TrackPropertyType value);
    [CompilerGeneratedAttribute]
public TrackPropertyCompareOperation get_Operation();
    [CompilerGeneratedAttribute]
public void set_Operation(TrackPropertyCompareOperation value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static TrackPropertyCondition DeserializeTrackPropertyCondition(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.TrackPropertyType : ValueType {
    private string _value;
    private static string UnknownValue;
    private static string FourCCValue;
    [CompilerGeneratedAttribute]
private static TrackPropertyType <Unknown>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrackPropertyType <FourCC>k__BackingField;
    public static TrackPropertyType Unknown { get; }
    public static TrackPropertyType FourCC { get; }
    public TrackPropertyType(string value);
    private static TrackPropertyType();
    [CompilerGeneratedAttribute]
public static TrackPropertyType get_Unknown();
    [CompilerGeneratedAttribute]
public static TrackPropertyType get_FourCC();
    public static bool op_Equality(TrackPropertyType left, TrackPropertyType right);
    public static bool op_Inequality(TrackPropertyType left, TrackPropertyType right);
    public static TrackPropertyType op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(TrackPropertyType other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.TransportStreamFormat : MultiBitrateFormat {
    public TransportStreamFormat(string filenamePattern);
    internal TransportStreamFormat(string odataType, string filenamePattern, IList`1<MediaOutputFile> outputFiles);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static TransportStreamFormat DeserializeTransportStreamFormat(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.UnknownClipTime : ClipTime {
    internal UnknownClipTime(string odataType);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static UnknownClipTime DeserializeUnknownClipTime(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.UnknownCodec : MediaCodecBase {
    internal UnknownCodec(string odataType, string label);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static UnknownCodec DeserializeUnknownCodec(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.UnknownContentKeyPolicyConfiguration : ContentKeyPolicyConfiguration {
    internal UnknownContentKeyPolicyConfiguration(string odataType);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static UnknownContentKeyPolicyConfiguration DeserializeUnknownContentKeyPolicyConfiguration(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.UnknownContentKeyPolicyPlayReadyContentKeyLocation : ContentKeyPolicyPlayReadyContentKeyLocation {
    internal UnknownContentKeyPolicyPlayReadyContentKeyLocation(string odataType);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static UnknownContentKeyPolicyPlayReadyContentKeyLocation DeserializeUnknownContentKeyPolicyPlayReadyContentKeyLocation(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.UnknownContentKeyPolicyRestriction : ContentKeyPolicyRestriction {
    internal UnknownContentKeyPolicyRestriction(string odataType);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static UnknownContentKeyPolicyRestriction DeserializeUnknownContentKeyPolicyRestriction(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.UnknownContentKeyPolicyRestrictionTokenKey : ContentKeyPolicyRestrictionTokenKey {
    internal UnknownContentKeyPolicyRestrictionTokenKey(string odataType);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static UnknownContentKeyPolicyRestrictionTokenKey DeserializeUnknownContentKeyPolicyRestrictionTokenKey(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.UnknownFormat : MediaFormatBase {
    internal UnknownFormat(string odataType, string filenamePattern);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static UnknownFormat DeserializeUnknownFormat(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.UnknownInputDefinition : MediaJobInputDefinition {
    internal UnknownInputDefinition(string odataType, IList`1<TrackDescriptor> includedTracks);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static UnknownInputDefinition DeserializeUnknownInputDefinition(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.UnknownJobInput : MediaJobInputBasicProperties {
    internal UnknownJobInput(string odataType);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static UnknownJobInput DeserializeUnknownJobInput(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.UnknownJobOutput : MediaJobOutput {
    internal UnknownJobOutput(string odataType, MediaJobError error, MediaTransformPreset presetOverride, Nullable`1<MediaJobState> state, Nullable`1<int> progress, string label, Nullable`1<DateTimeOffset> startOn, Nullable`1<DateTimeOffset> endOn);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static UnknownJobOutput DeserializeUnknownJobOutput(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.UnknownOverlay : MediaOverlayBase {
    internal UnknownOverlay(string odataType, string inputLabel, Nullable`1<TimeSpan> start, Nullable`1<TimeSpan> end, Nullable`1<TimeSpan> fadeInDuration, Nullable`1<TimeSpan> fadeOutDuration, Nullable`1<double> audioGainLevel);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static UnknownOverlay DeserializeUnknownOverlay(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.UnknownPreset : MediaTransformPreset {
    internal UnknownPreset(string odataType);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static UnknownPreset DeserializeUnknownPreset(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.UnknownTrackBase : MediaAssetTrackBase {
    internal UnknownTrackBase(string odataType);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static UnknownTrackBase DeserializeUnknownTrackBase(JsonElement element);
}
internal class Azure.ResourceManager.Media.Models.UnknownTrackDescriptor : TrackDescriptor {
    internal UnknownTrackDescriptor(string odataType);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static UnknownTrackDescriptor DeserializeUnknownTrackDescriptor(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.UtcClipTime : ClipTime {
    [CompilerGeneratedAttribute]
private DateTimeOffset <Time>k__BackingField;
    public DateTimeOffset Time { get; public set; }
    public UtcClipTime(DateTimeOffset time);
    internal UtcClipTime(string odataType, DateTimeOffset time);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Time();
    [CompilerGeneratedAttribute]
public void set_Time(DateTimeOffset value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static UtcClipTime DeserializeUtcClipTime(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.VideoAnalyzerPreset : AudioAnalyzerPreset {
    [CompilerGeneratedAttribute]
private Nullable`1<InsightsType> <InsightsToExtract>k__BackingField;
    public Nullable`1<InsightsType> InsightsToExtract { get; public set; }
    internal VideoAnalyzerPreset(string odataType, string audioLanguage, Nullable`1<AudioAnalysisMode> mode, IDictionary`2<string, string> experimentalOptions, Nullable`1<InsightsType> insightsToExtract);
    [CompilerGeneratedAttribute]
public Nullable`1<InsightsType> get_InsightsToExtract();
    [CompilerGeneratedAttribute]
public void set_InsightsToExtract(Nullable`1<InsightsType> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static VideoAnalyzerPreset DeserializeVideoAnalyzerPreset(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.VideoLayer : MediaLayerBase {
    [CompilerGeneratedAttribute]
private int <Bitrate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxBitrate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <BFrames>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FrameRate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Slices>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseAdaptiveBFrame>k__BackingField;
    public int Bitrate { get; public set; }
    public Nullable`1<int> MaxBitrate { get; public set; }
    public Nullable`1<int> BFrames { get; public set; }
    public string FrameRate { get; public set; }
    public Nullable`1<int> Slices { get; public set; }
    public Nullable`1<bool> UseAdaptiveBFrame { get; public set; }
    public VideoLayer(int bitrate);
    internal VideoLayer(string width, string height, string label, int bitrate, Nullable`1<int> maxBitrate, Nullable`1<int> bFrames, string frameRate, Nullable`1<int> slices, Nullable`1<bool> useAdaptiveBFrame);
    [CompilerGeneratedAttribute]
public int get_Bitrate();
    [CompilerGeneratedAttribute]
public void set_Bitrate(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxBitrate();
    [CompilerGeneratedAttribute]
public void set_MaxBitrate(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_BFrames();
    [CompilerGeneratedAttribute]
public void set_BFrames(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_FrameRate();
    [CompilerGeneratedAttribute]
public void set_FrameRate(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Slices();
    [CompilerGeneratedAttribute]
public void set_Slices(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UseAdaptiveBFrame();
    [CompilerGeneratedAttribute]
public void set_UseAdaptiveBFrame(Nullable`1<bool> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static VideoLayer DeserializeVideoLayer(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.VideoOverlay : MediaOverlayBase {
    [CompilerGeneratedAttribute]
private RectangularWindow <Position>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Opacity>k__BackingField;
    [CompilerGeneratedAttribute]
private RectangularWindow <CropRectangle>k__BackingField;
    public RectangularWindow Position { get; public set; }
    public Nullable`1<double> Opacity { get; public set; }
    public RectangularWindow CropRectangle { get; public set; }
    public VideoOverlay(string inputLabel);
    internal VideoOverlay(string odataType, string inputLabel, Nullable`1<TimeSpan> start, Nullable`1<TimeSpan> end, Nullable`1<TimeSpan> fadeInDuration, Nullable`1<TimeSpan> fadeOutDuration, Nullable`1<double> audioGainLevel, RectangularWindow position, Nullable`1<double> opacity, RectangularWindow cropRectangle);
    [CompilerGeneratedAttribute]
public RectangularWindow get_Position();
    [CompilerGeneratedAttribute]
public void set_Position(RectangularWindow value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Opacity();
    [CompilerGeneratedAttribute]
public void set_Opacity(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public RectangularWindow get_CropRectangle();
    [CompilerGeneratedAttribute]
public void set_CropRectangle(RectangularWindow value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static VideoOverlay DeserializeVideoOverlay(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.Media.Models.VideoSyncMode : ValueType {
    private string _value;
    private static string AutoValue;
    private static string PassthroughValue;
    private static string CfrValue;
    private static string VfrValue;
    [CompilerGeneratedAttribute]
private static VideoSyncMode <Auto>k__BackingField;
    [CompilerGeneratedAttribute]
private static VideoSyncMode <Passthrough>k__BackingField;
    [CompilerGeneratedAttribute]
private static VideoSyncMode <Cfr>k__BackingField;
    [CompilerGeneratedAttribute]
private static VideoSyncMode <Vfr>k__BackingField;
    public static VideoSyncMode Auto { get; }
    public static VideoSyncMode Passthrough { get; }
    public static VideoSyncMode Cfr { get; }
    public static VideoSyncMode Vfr { get; }
    public VideoSyncMode(string value);
    private static VideoSyncMode();
    [CompilerGeneratedAttribute]
public static VideoSyncMode get_Auto();
    [CompilerGeneratedAttribute]
public static VideoSyncMode get_Passthrough();
    [CompilerGeneratedAttribute]
public static VideoSyncMode get_Cfr();
    [CompilerGeneratedAttribute]
public static VideoSyncMode get_Vfr();
    public static bool op_Equality(VideoSyncMode left, VideoSyncMode right);
    public static bool op_Inequality(VideoSyncMode left, VideoSyncMode right);
    public static VideoSyncMode op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(VideoSyncMode other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.Media.Models.VideoTrack : MediaAssetTrackBase {
    internal VideoTrack(string odataType);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static VideoTrack DeserializeVideoTrack(JsonElement element);
}
public class Azure.ResourceManager.Media.Models.VideoTrackDescriptor : TrackDescriptor {
    internal VideoTrackDescriptor(string odataType);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static VideoTrackDescriptor DeserializeVideoTrackDescriptor(JsonElement element);
}
internal class Azure.ResourceManager.Media.PrivateEndpointConnectionsRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public PrivateEndpointConnectionsRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string accountName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.PrivateEndpointConnectionsRestOperations/<ListAsync>d__6")]
public Task`1<Response`1<MediaPrivateEndpointConnectionListResult>> ListAsync(string subscriptionId, string resourceGroupName, string accountName, CancellationToken cancellationToken);
    public Response`1<MediaPrivateEndpointConnectionListResult> List(string subscriptionId, string resourceGroupName, string accountName, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string accountName, string name);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.PrivateEndpointConnectionsRestOperations/<GetAsync>d__9")]
public Task`1<Response`1<MediaServicesPrivateEndpointConnectionData>> GetAsync(string subscriptionId, string resourceGroupName, string accountName, string name, CancellationToken cancellationToken);
    public Response`1<MediaServicesPrivateEndpointConnectionData> Get(string subscriptionId, string resourceGroupName, string accountName, string name, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string accountName, string name, MediaServicesPrivateEndpointConnectionData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.PrivateEndpointConnectionsRestOperations/<CreateOrUpdateAsync>d__12")]
public Task`1<Response`1<MediaServicesPrivateEndpointConnectionData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string accountName, string name, MediaServicesPrivateEndpointConnectionData data, CancellationToken cancellationToken);
    public Response`1<MediaServicesPrivateEndpointConnectionData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string accountName, string name, MediaServicesPrivateEndpointConnectionData data, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string accountName, string name);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.PrivateEndpointConnectionsRestOperations/<DeleteAsync>d__15")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string accountName, string name, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string accountName, string name, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Media.PrivateLinkResourcesRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public PrivateLinkResourcesRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string accountName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.PrivateLinkResourcesRestOperations/<ListAsync>d__6")]
public Task`1<Response`1<MediaPrivateLinkResourceListResult>> ListAsync(string subscriptionId, string resourceGroupName, string accountName, CancellationToken cancellationToken);
    public Response`1<MediaPrivateLinkResourceListResult> List(string subscriptionId, string resourceGroupName, string accountName, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string accountName, string name);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.PrivateLinkResourcesRestOperations/<GetAsync>d__9")]
public Task`1<Response`1<MediaServicesPrivateLinkResourceData>> GetAsync(string subscriptionId, string resourceGroupName, string accountName, string name, CancellationToken cancellationToken);
    public Response`1<MediaServicesPrivateLinkResourceData> Get(string subscriptionId, string resourceGroupName, string accountName, string name, CancellationToken cancellationToken);
}
internal static class Azure.ResourceManager.Media.ProviderConstants : object {
    [CompilerGeneratedAttribute]
private static string <DefaultProviderNamespace>k__BackingField;
    public static string DefaultProviderNamespace { get; }
    private static ProviderConstants();
    [CompilerGeneratedAttribute]
public static string get_DefaultProviderNamespace();
}
public class Azure.ResourceManager.Media.StreamingEndpointCollection : ArmCollection {
    private ClientDiagnostics _streamingEndpointClientDiagnostics;
    private StreamingEndpointsRestOperations _streamingEndpointRestClient;
    internal StreamingEndpointCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingEndpointCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<StreamingEndpointResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string streamingEndpointName, StreamingEndpointData data, Nullable`1<bool> autoStart, CancellationToken cancellationToken);
    public virtual ArmOperation`1<StreamingEndpointResource> CreateOrUpdate(WaitUntil waitUntil, string streamingEndpointName, StreamingEndpointData data, Nullable`1<bool> autoStart, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingEndpointCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<StreamingEndpointResource>> GetAsync(string streamingEndpointName, CancellationToken cancellationToken);
    public virtual Response`1<StreamingEndpointResource> Get(string streamingEndpointName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<StreamingEndpointResource> GetAllAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<StreamingEndpointResource> GetAll(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingEndpointCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string streamingEndpointName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string streamingEndpointName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingEndpointCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<StreamingEndpointResource>> GetIfExistsAsync(string streamingEndpointName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<StreamingEndpointResource> GetIfExists(string streamingEndpointName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<StreamingEndpointResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Media.StreamingEndpointResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<StreamingEndpointResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Media.StreamingEndpointResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__FirstPageRequest|9_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__NextPageRequest|9_1(Nullable`1<int> pageSizeHint, string nextLink);
    [CompilerGeneratedAttribute]
private StreamingEndpointResource <GetAllAsync>b__9_2(JsonElement e);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__FirstPageRequest|10_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__NextPageRequest|10_1(Nullable`1<int> pageSizeHint, string nextLink);
    [CompilerGeneratedAttribute]
private StreamingEndpointResource <GetAll>b__10_2(JsonElement e);
}
public class Azure.ResourceManager.Media.StreamingEndpointData : TrackedResourceData {
    [CompilerGeneratedAttribute]
private StreamingEndpointCurrentSku <Sku>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ScaleUnits>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AvailabilitySetName>k__BackingField;
    [CompilerGeneratedAttribute]
private StreamingEndpointAccessControl <AccessControl>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MaxCacheAge>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <CustomHostNames>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HostName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsCdnEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CdnProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CdnProfile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProvisioningState>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<StreamingEndpointResourceState> <ResourceState>k__BackingField;
    [CompilerGeneratedAttribute]
private CrossSiteAccessPolicies <CrossSiteAccessPolicies>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <FreeTrialEndOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <CreatedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <LastModifiedOn>k__BackingField;
    public StreamingEndpointCurrentSku Sku { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<int> ScaleUnits { get; public set; }
    public string AvailabilitySetName { get; public set; }
    public StreamingEndpointAccessControl AccessControl { get; public set; }
    public Nullable`1<long> MaxCacheAge { get; public set; }
    public IList`1<string> CustomHostNames { get; }
    public string HostName { get; }
    public Nullable`1<bool> IsCdnEnabled { get; public set; }
    public string CdnProvider { get; public set; }
    public string CdnProfile { get; public set; }
    public string ProvisioningState { get; }
    public Nullable`1<StreamingEndpointResourceState> ResourceState { get; }
    public CrossSiteAccessPolicies CrossSiteAccessPolicies { get; public set; }
    public Nullable`1<DateTimeOffset> FreeTrialEndOn { get; }
    public Nullable`1<DateTimeOffset> CreatedOn { get; }
    public Nullable`1<DateTimeOffset> LastModifiedOn { get; }
    public StreamingEndpointData(AzureLocation location);
    internal StreamingEndpointData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary`2<string, string> tags, AzureLocation location, StreamingEndpointCurrentSku sku, string description, Nullable`1<int> scaleUnits, string availabilitySetName, StreamingEndpointAccessControl accessControl, Nullable`1<long> maxCacheAge, IList`1<string> customHostNames, string hostName, Nullable`1<bool> isCdnEnabled, string cdnProvider, string cdnProfile, string provisioningState, Nullable`1<StreamingEndpointResourceState> resourceState, CrossSiteAccessPolicies crossSiteAccessPolicies, Nullable`1<DateTimeOffset> freeTrialEndOn, Nullable`1<DateTimeOffset> createdOn, Nullable`1<DateTimeOffset> lastModifiedOn);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static StreamingEndpointData DeserializeStreamingEndpointData(JsonElement element);
    [CompilerGeneratedAttribute]
public StreamingEndpointCurrentSku get_Sku();
    [CompilerGeneratedAttribute]
public void set_Sku(StreamingEndpointCurrentSku value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ScaleUnits();
    [CompilerGeneratedAttribute]
public void set_ScaleUnits(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_AvailabilitySetName();
    [CompilerGeneratedAttribute]
public void set_AvailabilitySetName(string value);
    [CompilerGeneratedAttribute]
public StreamingEndpointAccessControl get_AccessControl();
    [CompilerGeneratedAttribute]
public void set_AccessControl(StreamingEndpointAccessControl value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_MaxCacheAge();
    [CompilerGeneratedAttribute]
public void set_MaxCacheAge(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_CustomHostNames();
    [CompilerGeneratedAttribute]
public string get_HostName();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsCdnEnabled();
    [CompilerGeneratedAttribute]
public void set_IsCdnEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_CdnProvider();
    [CompilerGeneratedAttribute]
public void set_CdnProvider(string value);
    [CompilerGeneratedAttribute]
public string get_CdnProfile();
    [CompilerGeneratedAttribute]
public void set_CdnProfile(string value);
    [CompilerGeneratedAttribute]
public string get_ProvisioningState();
    [CompilerGeneratedAttribute]
public Nullable`1<StreamingEndpointResourceState> get_ResourceState();
    [CompilerGeneratedAttribute]
public CrossSiteAccessPolicies get_CrossSiteAccessPolicies();
    [CompilerGeneratedAttribute]
public void set_CrossSiteAccessPolicies(CrossSiteAccessPolicies value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_FreeTrialEndOn();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_CreatedOn();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_LastModifiedOn();
}
internal class Azure.ResourceManager.Media.StreamingEndpointOperationSource : object {
    private ArmClient _client;
    internal StreamingEndpointOperationSource(ArmClient client);
    private sealed virtual override StreamingEndpointResource Azure.Core.IOperationSource<Azure.ResourceManager.Media.StreamingEndpointResource>.CreateResult(Response response, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingEndpointOperationSource/<Azure-Core-IOperationSource<Azure-ResourceManager-Media-StreamingEndpointResource>-CreateResultAsync>d__3")]
private sealed virtual override ValueTask`1<StreamingEndpointResource> Azure.Core.IOperationSource<Azure.ResourceManager.Media.StreamingEndpointResource>.CreateResultAsync(Response response, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Media.StreamingEndpointResource : ArmResource {
    private ClientDiagnostics _streamingEndpointClientDiagnostics;
    private StreamingEndpointsRestOperations _streamingEndpointRestClient;
    private StreamingEndpointData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public StreamingEndpointData Data { get; }
    internal StreamingEndpointResource(ArmClient client, StreamingEndpointData data);
    internal StreamingEndpointResource(ArmClient client, ResourceIdentifier id);
    private static StreamingEndpointResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual StreamingEndpointData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingEndpointResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<StreamingEndpointResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<StreamingEndpointResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingEndpointResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingEndpointResource/<UpdateAsync>d__18")]
public virtual Task`1<ArmOperation`1<StreamingEndpointResource>> UpdateAsync(WaitUntil waitUntil, StreamingEndpointData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<StreamingEndpointResource> Update(WaitUntil waitUntil, StreamingEndpointData data, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<StreamingEndpointSkuInfo> GetSupportedSkusAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<StreamingEndpointSkuInfo> GetSupportedSkus(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingEndpointResource/<StartAsync>d__22")]
public virtual Task`1<ArmOperation> StartAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Start(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingEndpointResource/<StopAsync>d__24")]
public virtual Task`1<ArmOperation> StopAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Stop(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingEndpointResource/<ScaleAsync>d__26")]
public virtual Task`1<ArmOperation> ScaleAsync(WaitUntil waitUntil, StreamingEntityScaleUnit streamingEntityScaleUnit, CancellationToken cancellationToken);
    public virtual ArmOperation Scale(WaitUntil waitUntil, StreamingEntityScaleUnit streamingEntityScaleUnit, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingEndpointResource/<AddTagAsync>d__28")]
public virtual Task`1<Response`1<StreamingEndpointResource>> AddTagAsync(string key, string value, CancellationToken cancellationToken);
    public virtual Response`1<StreamingEndpointResource> AddTag(string key, string value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingEndpointResource/<SetTagsAsync>d__30")]
public virtual Task`1<Response`1<StreamingEndpointResource>> SetTagsAsync(IDictionary`2<string, string> tags, CancellationToken cancellationToken);
    public virtual Response`1<StreamingEndpointResource> SetTags(IDictionary`2<string, string> tags, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingEndpointResource/<RemoveTagAsync>d__32")]
public virtual Task`1<Response`1<StreamingEndpointResource>> RemoveTagAsync(string key, CancellationToken cancellationToken);
    public virtual Response`1<StreamingEndpointResource> RemoveTag(string key, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private HttpMessage <GetSupportedSkusAsync>g__FirstPageRequest|20_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetSupportedSkus>g__FirstPageRequest|21_0(Nullable`1<int> pageSizeHint);
}
internal class Azure.ResourceManager.Media.StreamingEndpointsRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public StreamingEndpointsRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string accountName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingEndpointsRestOperations/<ListAsync>d__6")]
public Task`1<Response`1<StreamingEndpointListResult>> ListAsync(string subscriptionId, string resourceGroupName, string accountName, CancellationToken cancellationToken);
    public Response`1<StreamingEndpointListResult> List(string subscriptionId, string resourceGroupName, string accountName, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingEndpointsRestOperations/<GetAsync>d__9")]
public Task`1<Response`1<StreamingEndpointData>> GetAsync(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName, CancellationToken cancellationToken);
    public Response`1<StreamingEndpointData> Get(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateRequest(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName, StreamingEndpointData data, Nullable`1<bool> autoStart);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingEndpointsRestOperations/<CreateAsync>d__12")]
public Task`1<Response> CreateAsync(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName, StreamingEndpointData data, Nullable`1<bool> autoStart, CancellationToken cancellationToken);
    public Response Create(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName, StreamingEndpointData data, Nullable`1<bool> autoStart, CancellationToken cancellationToken);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName, StreamingEndpointData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingEndpointsRestOperations/<UpdateAsync>d__15")]
public Task`1<Response> UpdateAsync(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName, StreamingEndpointData data, CancellationToken cancellationToken);
    public Response Update(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName, StreamingEndpointData data, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingEndpointsRestOperations/<DeleteAsync>d__18")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName, CancellationToken cancellationToken);
    internal HttpMessage CreateSkusRequest(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingEndpointsRestOperations/<SkusAsync>d__21")]
public Task`1<Response`1<StreamingEndpointSkuInfoListResult>> SkusAsync(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName, CancellationToken cancellationToken);
    public Response`1<StreamingEndpointSkuInfoListResult> Skus(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName, CancellationToken cancellationToken);
    internal HttpMessage CreateStartRequest(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingEndpointsRestOperations/<StartAsync>d__24")]
public Task`1<Response> StartAsync(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName, CancellationToken cancellationToken);
    public Response Start(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName, CancellationToken cancellationToken);
    internal HttpMessage CreateStopRequest(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingEndpointsRestOperations/<StopAsync>d__27")]
public Task`1<Response> StopAsync(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName, CancellationToken cancellationToken);
    public Response Stop(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName, CancellationToken cancellationToken);
    internal HttpMessage CreateScaleRequest(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName, StreamingEntityScaleUnit streamingEntityScaleUnit);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingEndpointsRestOperations/<ScaleAsync>d__30")]
public Task`1<Response> ScaleAsync(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName, StreamingEntityScaleUnit streamingEntityScaleUnit, CancellationToken cancellationToken);
    public Response Scale(string subscriptionId, string resourceGroupName, string accountName, string streamingEndpointName, StreamingEntityScaleUnit streamingEntityScaleUnit, CancellationToken cancellationToken);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string accountName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingEndpointsRestOperations/<ListNextPageAsync>d__33")]
public Task`1<Response`1<StreamingEndpointListResult>> ListNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string accountName, CancellationToken cancellationToken);
    public Response`1<StreamingEndpointListResult> ListNextPage(string nextLink, string subscriptionId, string resourceGroupName, string accountName, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Media.StreamingLocatorCollection : ArmCollection {
    private ClientDiagnostics _streamingLocatorClientDiagnostics;
    private StreamingLocatorsRestOperations _streamingLocatorRestClient;
    internal StreamingLocatorCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingLocatorCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<StreamingLocatorResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string streamingLocatorName, StreamingLocatorData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<StreamingLocatorResource> CreateOrUpdate(WaitUntil waitUntil, string streamingLocatorName, StreamingLocatorData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingLocatorCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<StreamingLocatorResource>> GetAsync(string streamingLocatorName, CancellationToken cancellationToken);
    public virtual Response`1<StreamingLocatorResource> Get(string streamingLocatorName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<StreamingLocatorResource> GetAllAsync(string filter, Nullable`1<int> top, string orderby, CancellationToken cancellationToken);
    public virtual Pageable`1<StreamingLocatorResource> GetAll(string filter, Nullable`1<int> top, string orderby, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingLocatorCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string streamingLocatorName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string streamingLocatorName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingLocatorCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<StreamingLocatorResource>> GetIfExistsAsync(string streamingLocatorName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<StreamingLocatorResource> GetIfExists(string streamingLocatorName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<StreamingLocatorResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Media.StreamingLocatorResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<StreamingLocatorResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Media.StreamingLocatorResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Media.StreamingLocatorData : ResourceData {
    [CompilerGeneratedAttribute]
private string <AssetName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <CreatedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <StartOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <EndOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <StreamingLocatorId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StreamingPolicyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultContentKeyPolicyName>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<StreamingLocatorContentKey> <ContentKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AlternativeMediaId>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Filters>k__BackingField;
    public string AssetName { get; public set; }
    public Nullable`1<DateTimeOffset> CreatedOn { get; }
    public Nullable`1<DateTimeOffset> StartOn { get; public set; }
    public Nullable`1<DateTimeOffset> EndOn { get; public set; }
    public Nullable`1<Guid> StreamingLocatorId { get; public set; }
    public string StreamingPolicyName { get; public set; }
    public string DefaultContentKeyPolicyName { get; public set; }
    public IList`1<StreamingLocatorContentKey> ContentKeys { get; }
    public string AlternativeMediaId { get; public set; }
    public IList`1<string> Filters { get; }
    internal StreamingLocatorData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string assetName, Nullable`1<DateTimeOffset> createdOn, Nullable`1<DateTimeOffset> startOn, Nullable`1<DateTimeOffset> endOn, Nullable`1<Guid> streamingLocatorId, string streamingPolicyName, string defaultContentKeyPolicyName, IList`1<StreamingLocatorContentKey> contentKeys, string alternativeMediaId, IList`1<string> filters);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static StreamingLocatorData DeserializeStreamingLocatorData(JsonElement element);
    [CompilerGeneratedAttribute]
public string get_AssetName();
    [CompilerGeneratedAttribute]
public void set_AssetName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_CreatedOn();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_StartOn();
    [CompilerGeneratedAttribute]
public void set_StartOn(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_EndOn();
    [CompilerGeneratedAttribute]
public void set_EndOn(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_StreamingLocatorId();
    [CompilerGeneratedAttribute]
public void set_StreamingLocatorId(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public string get_StreamingPolicyName();
    [CompilerGeneratedAttribute]
public void set_StreamingPolicyName(string value);
    [CompilerGeneratedAttribute]
public string get_DefaultContentKeyPolicyName();
    [CompilerGeneratedAttribute]
public void set_DefaultContentKeyPolicyName(string value);
    [CompilerGeneratedAttribute]
public IList`1<StreamingLocatorContentKey> get_ContentKeys();
    [CompilerGeneratedAttribute]
public string get_AlternativeMediaId();
    [CompilerGeneratedAttribute]
public void set_AlternativeMediaId(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Filters();
}
public class Azure.ResourceManager.Media.StreamingLocatorResource : ArmResource {
    private ClientDiagnostics _streamingLocatorClientDiagnostics;
    private StreamingLocatorsRestOperations _streamingLocatorRestClient;
    private StreamingLocatorData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public StreamingLocatorData Data { get; }
    internal StreamingLocatorResource(ArmClient client, StreamingLocatorData data);
    internal StreamingLocatorResource(ArmClient client, ResourceIdentifier id);
    private static StreamingLocatorResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string accountName, string streamingLocatorName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual StreamingLocatorData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingLocatorResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<StreamingLocatorResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<StreamingLocatorResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingLocatorResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingLocatorResource/<UpdateAsync>d__18")]
public virtual Task`1<ArmOperation`1<StreamingLocatorResource>> UpdateAsync(WaitUntil waitUntil, StreamingLocatorData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<StreamingLocatorResource> Update(WaitUntil waitUntil, StreamingLocatorData data, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<StreamingLocatorContentKey> GetContentKeysAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<StreamingLocatorContentKey> GetContentKeys(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingLocatorResource/<GetStreamingPathsAsync>d__22")]
public virtual Task`1<Response`1<StreamingPathsResult>> GetStreamingPathsAsync(CancellationToken cancellationToken);
    public virtual Response`1<StreamingPathsResult> GetStreamingPaths(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private HttpMessage <GetContentKeysAsync>g__FirstPageRequest|20_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private HttpMessage <GetContentKeys>g__FirstPageRequest|21_0(Nullable`1<int> pageSizeHint);
}
internal class Azure.ResourceManager.Media.StreamingLocatorsRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public StreamingLocatorsRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string accountName, string filter, Nullable`1<int> top, string orderby);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingLocatorsRestOperations/<ListAsync>d__6")]
public Task`1<Response`1<StreamingLocatorListResult>> ListAsync(string subscriptionId, string resourceGroupName, string accountName, string filter, Nullable`1<int> top, string orderby, CancellationToken cancellationToken);
    public Response`1<StreamingLocatorListResult> List(string subscriptionId, string resourceGroupName, string accountName, string filter, Nullable`1<int> top, string orderby, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string accountName, string streamingLocatorName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingLocatorsRestOperations/<GetAsync>d__9")]
public Task`1<Response`1<StreamingLocatorData>> GetAsync(string subscriptionId, string resourceGroupName, string accountName, string streamingLocatorName, CancellationToken cancellationToken);
    public Response`1<StreamingLocatorData> Get(string subscriptionId, string resourceGroupName, string accountName, string streamingLocatorName, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateRequest(string subscriptionId, string resourceGroupName, string accountName, string streamingLocatorName, StreamingLocatorData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingLocatorsRestOperations/<CreateAsync>d__12")]
public Task`1<Response`1<StreamingLocatorData>> CreateAsync(string subscriptionId, string resourceGroupName, string accountName, string streamingLocatorName, StreamingLocatorData data, CancellationToken cancellationToken);
    public Response`1<StreamingLocatorData> Create(string subscriptionId, string resourceGroupName, string accountName, string streamingLocatorName, StreamingLocatorData data, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string accountName, string streamingLocatorName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingLocatorsRestOperations/<DeleteAsync>d__15")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string accountName, string streamingLocatorName, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string accountName, string streamingLocatorName, CancellationToken cancellationToken);
    internal HttpMessage CreateListContentKeysRequest(string subscriptionId, string resourceGroupName, string accountName, string streamingLocatorName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingLocatorsRestOperations/<ListContentKeysAsync>d__18")]
public Task`1<Response`1<ListContentKeysResponse>> ListContentKeysAsync(string subscriptionId, string resourceGroupName, string accountName, string streamingLocatorName, CancellationToken cancellationToken);
    public Response`1<ListContentKeysResponse> ListContentKeys(string subscriptionId, string resourceGroupName, string accountName, string streamingLocatorName, CancellationToken cancellationToken);
    internal HttpMessage CreateListPathsRequest(string subscriptionId, string resourceGroupName, string accountName, string streamingLocatorName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingLocatorsRestOperations/<ListPathsAsync>d__21")]
public Task`1<Response`1<StreamingPathsResult>> ListPathsAsync(string subscriptionId, string resourceGroupName, string accountName, string streamingLocatorName, CancellationToken cancellationToken);
    public Response`1<StreamingPathsResult> ListPaths(string subscriptionId, string resourceGroupName, string accountName, string streamingLocatorName, CancellationToken cancellationToken);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string accountName, string filter, Nullable`1<int> top, string orderby);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingLocatorsRestOperations/<ListNextPageAsync>d__24")]
public Task`1<Response`1<StreamingLocatorListResult>> ListNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string accountName, string filter, Nullable`1<int> top, string orderby, CancellationToken cancellationToken);
    public Response`1<StreamingLocatorListResult> ListNextPage(string nextLink, string subscriptionId, string resourceGroupName, string accountName, string filter, Nullable`1<int> top, string orderby, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Media.StreamingPoliciesRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public StreamingPoliciesRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string accountName, string filter, Nullable`1<int> top, string orderby);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingPoliciesRestOperations/<ListAsync>d__6")]
public Task`1<Response`1<StreamingPolicyListResult>> ListAsync(string subscriptionId, string resourceGroupName, string accountName, string filter, Nullable`1<int> top, string orderby, CancellationToken cancellationToken);
    public Response`1<StreamingPolicyListResult> List(string subscriptionId, string resourceGroupName, string accountName, string filter, Nullable`1<int> top, string orderby, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string accountName, string streamingPolicyName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingPoliciesRestOperations/<GetAsync>d__9")]
public Task`1<Response`1<StreamingPolicyData>> GetAsync(string subscriptionId, string resourceGroupName, string accountName, string streamingPolicyName, CancellationToken cancellationToken);
    public Response`1<StreamingPolicyData> Get(string subscriptionId, string resourceGroupName, string accountName, string streamingPolicyName, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateRequest(string subscriptionId, string resourceGroupName, string accountName, string streamingPolicyName, StreamingPolicyData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingPoliciesRestOperations/<CreateAsync>d__12")]
public Task`1<Response`1<StreamingPolicyData>> CreateAsync(string subscriptionId, string resourceGroupName, string accountName, string streamingPolicyName, StreamingPolicyData data, CancellationToken cancellationToken);
    public Response`1<StreamingPolicyData> Create(string subscriptionId, string resourceGroupName, string accountName, string streamingPolicyName, StreamingPolicyData data, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string accountName, string streamingPolicyName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingPoliciesRestOperations/<DeleteAsync>d__15")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string accountName, string streamingPolicyName, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string accountName, string streamingPolicyName, CancellationToken cancellationToken);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string accountName, string filter, Nullable`1<int> top, string orderby);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingPoliciesRestOperations/<ListNextPageAsync>d__18")]
public Task`1<Response`1<StreamingPolicyListResult>> ListNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string accountName, string filter, Nullable`1<int> top, string orderby, CancellationToken cancellationToken);
    public Response`1<StreamingPolicyListResult> ListNextPage(string nextLink, string subscriptionId, string resourceGroupName, string accountName, string filter, Nullable`1<int> top, string orderby, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Media.StreamingPolicyCollection : ArmCollection {
    private ClientDiagnostics _streamingPolicyClientDiagnostics;
    private StreamingPoliciesRestOperations _streamingPolicyRestClient;
    internal StreamingPolicyCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingPolicyCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<StreamingPolicyResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string streamingPolicyName, StreamingPolicyData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<StreamingPolicyResource> CreateOrUpdate(WaitUntil waitUntil, string streamingPolicyName, StreamingPolicyData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingPolicyCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<StreamingPolicyResource>> GetAsync(string streamingPolicyName, CancellationToken cancellationToken);
    public virtual Response`1<StreamingPolicyResource> Get(string streamingPolicyName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<StreamingPolicyResource> GetAllAsync(string filter, Nullable`1<int> top, string orderby, CancellationToken cancellationToken);
    public virtual Pageable`1<StreamingPolicyResource> GetAll(string filter, Nullable`1<int> top, string orderby, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingPolicyCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string streamingPolicyName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string streamingPolicyName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingPolicyCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<StreamingPolicyResource>> GetIfExistsAsync(string streamingPolicyName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<StreamingPolicyResource> GetIfExists(string streamingPolicyName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<StreamingPolicyResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.Media.StreamingPolicyResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<StreamingPolicyResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.Media.StreamingPolicyResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.Media.StreamingPolicyData : ResourceData {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <CreatedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultContentKeyPolicyName>k__BackingField;
    [CompilerGeneratedAttribute]
private EnvelopeEncryption <EnvelopeEncryption>k__BackingField;
    [CompilerGeneratedAttribute]
private CommonEncryptionCenc <CommonEncryptionCenc>k__BackingField;
    [CompilerGeneratedAttribute]
private CommonEncryptionCbcs <CommonEncryptionCbcs>k__BackingField;
    [CompilerGeneratedAttribute]
private NoEncryption <NoEncryption>k__BackingField;
    public Nullable`1<DateTimeOffset> CreatedOn { get; }
    public string DefaultContentKeyPolicyName { get; public set; }
    public EnvelopeEncryption EnvelopeEncryption { get; public set; }
    public CommonEncryptionCenc CommonEncryptionCenc { get; public set; }
    public CommonEncryptionCbcs CommonEncryptionCbcs { get; public set; }
    internal NoEncryption NoEncryption { get; internal set; }
    public MediaEnabledProtocols NoEncryptionEnabledProtocols { get; public set; }
    internal StreamingPolicyData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<DateTimeOffset> createdOn, string defaultContentKeyPolicyName, EnvelopeEncryption envelopeEncryption, CommonEncryptionCenc commonEncryptionCenc, CommonEncryptionCbcs commonEncryptionCbcs, NoEncryption noEncryption);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static StreamingPolicyData DeserializeStreamingPolicyData(JsonElement element);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_CreatedOn();
    [CompilerGeneratedAttribute]
public string get_DefaultContentKeyPolicyName();
    [CompilerGeneratedAttribute]
public void set_DefaultContentKeyPolicyName(string value);
    [CompilerGeneratedAttribute]
public EnvelopeEncryption get_EnvelopeEncryption();
    [CompilerGeneratedAttribute]
public void set_EnvelopeEncryption(EnvelopeEncryption value);
    [CompilerGeneratedAttribute]
public CommonEncryptionCenc get_CommonEncryptionCenc();
    [CompilerGeneratedAttribute]
public void set_CommonEncryptionCenc(CommonEncryptionCenc value);
    [CompilerGeneratedAttribute]
public CommonEncryptionCbcs get_CommonEncryptionCbcs();
    [CompilerGeneratedAttribute]
public void set_CommonEncryptionCbcs(CommonEncryptionCbcs value);
    [CompilerGeneratedAttribute]
internal NoEncryption get_NoEncryption();
    [CompilerGeneratedAttribute]
internal void set_NoEncryption(NoEncryption value);
    public MediaEnabledProtocols get_NoEncryptionEnabledProtocols();
    public void set_NoEncryptionEnabledProtocols(MediaEnabledProtocols value);
}
public class Azure.ResourceManager.Media.StreamingPolicyResource : ArmResource {
    private ClientDiagnostics _streamingPolicyClientDiagnostics;
    private StreamingPoliciesRestOperations _streamingPolicyRestClient;
    private StreamingPolicyData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public StreamingPolicyData Data { get; }
    internal StreamingPolicyResource(ArmClient client, StreamingPolicyData data);
    internal StreamingPolicyResource(ArmClient client, ResourceIdentifier id);
    private static StreamingPolicyResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string accountName, string streamingPolicyName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual StreamingPolicyData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingPolicyResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<StreamingPolicyResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<StreamingPolicyResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingPolicyResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.StreamingPolicyResource/<UpdateAsync>d__18")]
public virtual Task`1<ArmOperation`1<StreamingPolicyResource>> UpdateAsync(WaitUntil waitUntil, StreamingPolicyData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<StreamingPolicyResource> Update(WaitUntil waitUntil, StreamingPolicyData data, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Media.TracksRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public TracksRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string accountName, string assetName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.TracksRestOperations/<ListAsync>d__6")]
public Task`1<Response`1<MediaAssetTrackListResult>> ListAsync(string subscriptionId, string resourceGroupName, string accountName, string assetName, CancellationToken cancellationToken);
    public Response`1<MediaAssetTrackListResult> List(string subscriptionId, string resourceGroupName, string accountName, string assetName, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string accountName, string assetName, string trackName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.TracksRestOperations/<GetAsync>d__9")]
public Task`1<Response`1<MediaAssetTrackData>> GetAsync(string subscriptionId, string resourceGroupName, string accountName, string assetName, string trackName, CancellationToken cancellationToken);
    public Response`1<MediaAssetTrackData> Get(string subscriptionId, string resourceGroupName, string accountName, string assetName, string trackName, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string accountName, string assetName, string trackName, MediaAssetTrackData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.TracksRestOperations/<CreateOrUpdateAsync>d__12")]
public Task`1<Response> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string accountName, string assetName, string trackName, MediaAssetTrackData data, CancellationToken cancellationToken);
    public Response CreateOrUpdate(string subscriptionId, string resourceGroupName, string accountName, string assetName, string trackName, MediaAssetTrackData data, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string accountName, string assetName, string trackName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.TracksRestOperations/<DeleteAsync>d__15")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string accountName, string assetName, string trackName, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string accountName, string assetName, string trackName, CancellationToken cancellationToken);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string accountName, string assetName, string trackName, MediaAssetTrackData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.TracksRestOperations/<UpdateAsync>d__18")]
public Task`1<Response> UpdateAsync(string subscriptionId, string resourceGroupName, string accountName, string assetName, string trackName, MediaAssetTrackData data, CancellationToken cancellationToken);
    public Response Update(string subscriptionId, string resourceGroupName, string accountName, string assetName, string trackName, MediaAssetTrackData data, CancellationToken cancellationToken);
    internal HttpMessage CreateUpdateTrackDataRequest(string subscriptionId, string resourceGroupName, string accountName, string assetName, string trackName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.TracksRestOperations/<UpdateTrackDataAsync>d__21")]
public Task`1<Response> UpdateTrackDataAsync(string subscriptionId, string resourceGroupName, string accountName, string assetName, string trackName, CancellationToken cancellationToken);
    public Response UpdateTrackData(string subscriptionId, string resourceGroupName, string accountName, string assetName, string trackName, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Media.TransformsRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public TransformsRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string accountName, string filter, string orderby);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.TransformsRestOperations/<ListAsync>d__6")]
public Task`1<Response`1<MediaTransformListResult>> ListAsync(string subscriptionId, string resourceGroupName, string accountName, string filter, string orderby, CancellationToken cancellationToken);
    public Response`1<MediaTransformListResult> List(string subscriptionId, string resourceGroupName, string accountName, string filter, string orderby, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string accountName, string transformName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.TransformsRestOperations/<GetAsync>d__9")]
public Task`1<Response`1<MediaTransformData>> GetAsync(string subscriptionId, string resourceGroupName, string accountName, string transformName, CancellationToken cancellationToken);
    public Response`1<MediaTransformData> Get(string subscriptionId, string resourceGroupName, string accountName, string transformName, CancellationToken cancellationToken);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string accountName, string transformName, MediaTransformData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.TransformsRestOperations/<CreateOrUpdateAsync>d__12")]
public Task`1<Response`1<MediaTransformData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string accountName, string transformName, MediaTransformData data, CancellationToken cancellationToken);
    public Response`1<MediaTransformData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string accountName, string transformName, MediaTransformData data, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string accountName, string transformName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.TransformsRestOperations/<DeleteAsync>d__15")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string accountName, string transformName, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string accountName, string transformName, CancellationToken cancellationToken);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string accountName, string transformName, MediaTransformData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.TransformsRestOperations/<UpdateAsync>d__18")]
public Task`1<Response`1<MediaTransformData>> UpdateAsync(string subscriptionId, string resourceGroupName, string accountName, string transformName, MediaTransformData data, CancellationToken cancellationToken);
    public Response`1<MediaTransformData> Update(string subscriptionId, string resourceGroupName, string accountName, string transformName, MediaTransformData data, CancellationToken cancellationToken);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string accountName, string filter, string orderby);
    [AsyncStateMachineAttribute("Azure.ResourceManager.Media.TransformsRestOperations/<ListNextPageAsync>d__21")]
public Task`1<Response`1<MediaTransformListResult>> ListNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string accountName, string filter, string orderby, CancellationToken cancellationToken);
    public Response`1<MediaTransformListResult> ListNextPage(string nextLink, string subscriptionId, string resourceGroupName, string accountName, string filter, string orderby, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.Models.ManagedServiceIdentityTypeV3Converter : JsonConverter`1<ManagedServiceIdentityType> {
    internal static string SystemAssignedUserAssignedV3Value;
    public virtual void Write(Utf8JsonWriter writer, ManagedServiceIdentityType model, JsonSerializerOptions options);
    public virtual ManagedServiceIdentityType Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.ResourceManager.SharedExtensions : object {
    [ExtensionAttribute]
public static string SubstringAfterProviderNamespace(ResourceIdentifier resourceId);
    [ExtensionAttribute]
public static IDictionary`2<string, string> ReplaceWith(IDictionary`2<string, string> dest, IDictionary`2<string, string> src);
    [AsyncStateMachineAttribute("Azure.ResourceManager.SharedExtensions/<FirstOrDefaultAsync>d__2`1")]
[ExtensionAttribute]
public static Task`1<TSource> FirstOrDefaultAsync(AsyncPageable`1<TSource> source, Func`2<TSource, bool> predicate, CancellationToken token);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("28108")]
internal class System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute : Attribute {
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public DynamicallyAccessedMembersAttribute(DynamicallyAccessedMemberTypes memberTypes);
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
}
[FlagsAttribute]
internal enum System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes : Enum {
    public int value__;
    public static DynamicallyAccessedMemberTypes None;
    public static DynamicallyAccessedMemberTypes PublicParameterlessConstructor;
    public static DynamicallyAccessedMemberTypes PublicConstructors;
    public static DynamicallyAccessedMemberTypes NonPublicConstructors;
    public static DynamicallyAccessedMemberTypes PublicMethods;
    public static DynamicallyAccessedMemberTypes NonPublicMethods;
    public static DynamicallyAccessedMemberTypes PublicFields;
    public static DynamicallyAccessedMemberTypes NonPublicFields;
    public static DynamicallyAccessedMemberTypes PublicNestedTypes;
    public static DynamicallyAccessedMemberTypes NonPublicNestedTypes;
    public static DynamicallyAccessedMemberTypes PublicProperties;
    public static DynamicallyAccessedMemberTypes NonPublicProperties;
    public static DynamicallyAccessedMemberTypes PublicEvents;
    public static DynamicallyAccessedMemberTypes NonPublicEvents;
    public static DynamicallyAccessedMemberTypes Interfaces;
    public static DynamicallyAccessedMemberTypes All;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("352")]
internal class System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <MemberSignature>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssemblyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Condition>k__BackingField;
    public string MemberSignature { get; }
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public Type Type { get; }
    public string TypeName { get; }
    public string AssemblyName { get; }
    public string Condition { get; public set; }
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature, Type type);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature, string typeName, string assemblyName);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(DynamicallyAccessedMemberTypes memberTypes, Type type);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(DynamicallyAccessedMemberTypes memberTypes, string typeName, string assemblyName);
    [CompilerGeneratedAttribute]
public string get_MemberSignature();
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public string get_AssemblyName();
    [CompilerGeneratedAttribute]
public string get_Condition();
    [CompilerGeneratedAttribute]
public void set_Condition(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("100")]
internal class System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    [NullableAttribute("2")]
public string Url { get; public set; }
    public RequiresDynamicCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Url(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("100")]
internal class System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    [NullableAttribute("2")]
public string Url { get; public set; }
    public RequiresUnreferencedCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Url(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
internal class System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute : Attribute {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <CheckId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Justification>k__BackingField;
    [NullableAttribute("1")]
public string Category { get; }
    [NullableAttribute("1")]
public string CheckId { get; }
    public string Scope { get; public set; }
    public string Target { get; public set; }
    public string MessageId { get; public set; }
    public string Justification { get; public set; }
    [NullableContextAttribute("1")]
public UnconditionalSuppressMessageAttribute(string category, string checkId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Category();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_CheckId();
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public string get_MessageId();
    [CompilerGeneratedAttribute]
public void set_MessageId(string value);
    [CompilerGeneratedAttribute]
public string get_Justification();
    [CompilerGeneratedAttribute]
public void set_Justification(string value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
