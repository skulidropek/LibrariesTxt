[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Autorest.CSharp.Core.GeneratorPageableHelpers : object {
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Autorest.CSharp.Core.GeneratorPageableHelpers/<CreateAsyncPageable>d__8`1")]
public static ValueTask`1<Operation`1<AsyncPageable`1<T>>> CreateAsyncPageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Operation`1<Pageable`1<T>> CreatePageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreateEnumerable(Func`2<Nullable`1<int>, Page`1<T>> firstPageFunc, Func`3<string, Nullable`1<int>, Page`1<T>> nextPageFunc, Nullable`1<int> pageSize);
    public static AsyncPageable`1<T> CreateAsyncEnumerable(Func`2<Nullable`1<int>, Task`1<Page`1<T>>> firstPageFunc, Func`3<string, Nullable`1<int>, Task`1<Page`1<T>>> nextPageFunc, Nullable`1<int> pageSize);
}
internal static class Azure.Core.AppContextSwitchHelper : object {
    [NullableContextAttribute("1")]
public static bool GetConfigValue(string appContexSwitchName, string environmentVariableName);
}
internal class Azure.Core.ArrayBufferWriter`1 : object {
    private T[] _buffer;
    private static int DefaultInitialBufferSize;
    [CompilerGeneratedAttribute]
private int <WrittenCount>k__BackingField;
    public ReadOnlyMemory`1<T> WrittenMemory { get; }
    public ReadOnlySpan`1<T> WrittenSpan { get; }
    public int WrittenCount { get; private set; }
    public int Capacity { get; }
    public int FreeCapacity { get; }
    public ArrayBufferWriter`1(int initialCapacity);
    public ReadOnlyMemory`1<T> get_WrittenMemory();
    public ReadOnlySpan`1<T> get_WrittenSpan();
    [CompilerGeneratedAttribute]
public int get_WrittenCount();
    [CompilerGeneratedAttribute]
private void set_WrittenCount(int value);
    public int get_Capacity();
    public int get_FreeCapacity();
    public void Clear();
    public sealed virtual void Advance(int count);
    public sealed virtual Memory`1<T> GetMemory(int sizeHint);
    public sealed virtual Span`1<T> GetSpan(int sizeHint);
    private void CheckAndResizeBuffer(int sizeHint);
    private static void ThrowInvalidOperationException_AdvancedTooFar(int capacity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.AsyncLockWithValue`1 : object {
    private object _syncObj;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Queue`1<TaskCompletionSource`1<LockOrValue<T>>> _waiters;
    private bool _isLocked;
    private bool _hasValue;
    private long _index;
    [NullableAttribute("2")]
private T _value;
    public bool HasValue { get; }
    public AsyncLockWithValue`1(T value);
    public bool get_HasValue();
    [NullableContextAttribute("2")]
public bool TryGetValue(T& value);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Azure.Core.AsyncLockWithValue`1/<GetLockOrValueAsync>d__11")]
public ValueTask`1<LockOrValue<T>> GetLockOrValueAsync(bool async, CancellationToken cancellationToken);
    private void SetValue(T value, Int64& lockIndex);
    private void Reset(Int64& lockIndex);
    private void UnlockOrGetNextWaiter(Int64& lockIndex, TaskCompletionSource`1& nextWaiter);
}
[AttributeUsageAttribute("1")]
internal class Azure.Core.AzureResourceProviderNamespaceAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ResourceProviderNamespace>k__BackingField;
    public string ResourceProviderNamespace { get; }
    public AzureResourceProviderNamespaceAttribute(string resourceProviderNamespace);
    [CompilerGeneratedAttribute]
public string get_ResourceProviderNamespace();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
internal class Azure.Core.CodeGenClientAttribute : CodeGenTypeAttribute {
    [CompilerGeneratedAttribute]
private Type <ParentClient>k__BackingField;
    public Type ParentClient { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenClientAttribute(string originalName);
    [CompilerGeneratedAttribute]
public Type get_ParentClient();
    [CompilerGeneratedAttribute]
public void set_ParentClient(Type value);
}
[AttributeUsageAttribute("384")]
internal class Azure.Core.CodeGenMemberAttribute : CodeGenTypeAttribute {
    [NullableContextAttribute("1")]
public CodeGenMemberAttribute(string originalName);
}
[AttributeUsageAttribute("28")]
internal class Azure.Core.CodeGenModelAttribute : CodeGenTypeAttribute {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <Usage>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <Formats>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] Usage { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] Formats { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenModelAttribute(string originalName);
    [CompilerGeneratedAttribute]
public String[] get_Usage();
    [CompilerGeneratedAttribute]
public void set_Usage(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_Formats();
    [CompilerGeneratedAttribute]
public void set_Formats(String[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1")]
internal class Azure.Core.CodeGenOverrideServiceVersionsAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Versions>k__BackingField;
    public String[] Versions { get; }
    public CodeGenOverrideServiceVersionsAttribute(String[] versions);
    [CompilerGeneratedAttribute]
public String[] get_Versions();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("12")]
internal class Azure.Core.CodeGenSerializationAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <SerializationPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SerializationValueHook>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeserializationValueHook>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BicepSerializationValueHook>k__BackingField;
    public string PropertyName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] SerializationPath { get; }
    public string SerializationValueHook { get; public set; }
    public string DeserializationValueHook { get; public set; }
    public string BicepSerializationValueHook { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenSerializationAttribute(string propertyName);
    [NullableContextAttribute("1")]
public CodeGenSerializationAttribute(string propertyName, string serializationName);
    [NullableContextAttribute("1")]
public CodeGenSerializationAttribute(string propertyName, String[] serializationPath);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public void set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public String[] get_SerializationPath();
    [CompilerGeneratedAttribute]
public string get_SerializationValueHook();
    [CompilerGeneratedAttribute]
public void set_SerializationValueHook(string value);
    [CompilerGeneratedAttribute]
public string get_DeserializationValueHook();
    [CompilerGeneratedAttribute]
public void set_DeserializationValueHook(string value);
    [CompilerGeneratedAttribute]
public string get_BicepSerializationValueHook();
    [CompilerGeneratedAttribute]
public void set_BicepSerializationValueHook(string value);
}
[AttributeUsageAttribute("28")]
internal class Azure.Core.CodeGenSuppressAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Member>k__BackingField;
    [CompilerGeneratedAttribute]
private Type[] <Parameters>k__BackingField;
    public string Member { get; }
    public Type[] Parameters { get; }
    public CodeGenSuppressAttribute(string member, Type[] parameters);
    [CompilerGeneratedAttribute]
public string get_Member();
    [CompilerGeneratedAttribute]
public Type[] get_Parameters();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1")]
internal class Azure.Core.CodeGenSuppressTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Typename>k__BackingField;
    public string Typename { get; }
    public CodeGenSuppressTypeAttribute(string typename);
    [CompilerGeneratedAttribute]
public string get_Typename();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
internal class Azure.Core.CodeGenTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <OriginalName>k__BackingField;
    public string OriginalName { get; }
    public CodeGenTypeAttribute(string originalName);
    [CompilerGeneratedAttribute]
public string get_OriginalName();
}
internal class Azure.Core.FixedDelayWithNoJitterStrategy : DelayStrategy {
    private static TimeSpan DefaultDelay;
    private TimeSpan _delay;
    public FixedDelayWithNoJitterStrategy(Nullable`1<TimeSpan> suggestedDelay);
    private static FixedDelayWithNoJitterStrategy();
    [NullableContextAttribute("2")]
protected virtual TimeSpan GetNextDelayCore(Response response, int retryNumber);
}
internal class Azure.Core.FormUrlEncodedContent : RequestContent {
    private List`1<KeyValuePair`2<string, string>> _values;
    private Encoding Latin1;
    private Byte[] _bytes;
    public void Add(string parameter, string value);
    private void BuildIfNeeded();
    [AsyncStateMachineAttribute("Azure.Core.FormUrlEncodedContent/<WriteToAsync>d__5")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
    private Byte[] GetContentByteArray(IEnumerable`1<KeyValuePair`2<string, string>> nameValueCollection);
    private static string Encode(string data);
}
[AttributeUsageAttribute("64")]
internal class Azure.Core.ForwardsClientCallsAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <SkipChecks>k__BackingField;
    public bool SkipChecks { get; }
    public ForwardsClientCallsAttribute(bool skipChecks);
    [CompilerGeneratedAttribute]
public bool get_SkipChecks();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.HttpMessageSanitizer : object {
    private static string LogAllValue;
    private bool _logAllHeaders;
    private bool _logFullQueries;
    private String[] _allowedQueryParameters;
    private string _redactedPlaceholder;
    private HashSet`1<string> _allowedHeaders;
    [NullableAttribute("2")]
[ThreadStaticAttribute]
private static StringBuilder s_cachedStringBuilder;
    private static int MaxCachedStringBuilderCapacity;
    internal static HttpMessageSanitizer Default;
    public HttpMessageSanitizer(String[] allowedQueryParameters, String[] allowedHeaders, string redactedPlaceholder);
    private static HttpMessageSanitizer();
    public string SanitizeHeader(string name, string value);
    public string SanitizeUrl(string url);
    private static StringBuilder RentStringBuilder(int capacity);
    private static string ToStringAndReturnStringBuilder(StringBuilder builder);
    [CompilerGeneratedAttribute]
internal static StringBuilder <SanitizeUrl>g__AppendReadOnlySpan|11_0(StringBuilder builder, ReadOnlySpan`1<char> span);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.HttpPipelineExtensions : object {
    [AsyncStateMachineAttribute("Azure.Core.HttpPipelineExtensions/<ProcessMessageAsync>d__0")]
[ExtensionAttribute]
public static ValueTask`1<Response> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, RequestContext requestContext, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response ProcessMessage(HttpPipeline pipeline, HttpMessage message, RequestContext requestContext, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.HttpPipelineExtensions/<ProcessHeadAsBoolMessageAsync>d__2")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<bool>> ProcessHeadAsBoolMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, RequestContext requestContext);
    [ExtensionAttribute]
public static Response`1<bool> ProcessHeadAsBoolMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, RequestContext requestContext);
    [NullableContextAttribute("0")]
private static ValueTuple`2<CancellationToken, ErrorOptions> ApplyRequestContext(RequestContext requestContext);
}
internal interface Azure.Core.IOperation {
    public abstract virtual ValueTask`1<OperationState> UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("2")]
internal interface Azure.Core.IOperation`1 {
    public abstract virtual ValueTask`1<OperationState`1<T>> UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
internal interface Azure.Core.IOperationSource`1 {
    public abstract virtual T CreateResult(Response response, CancellationToken cancellationToken);
    public abstract virtual ValueTask`1<T> CreateResultAsync(Response response, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Azure.Core.IUtf8JsonSerializable {
    public abstract virtual void Write(Utf8JsonWriter writer);
}
[NullableContextAttribute("1")]
internal interface Azure.Core.IXmlSerializable {
    public abstract virtual void Write(XmlWriter writer, string nameHint);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.NextLinkOperationImplementation : object {
    internal static string NotSet;
    internal static string RehydrationTokenVersion;
    private static string ApiVersionParam;
    private static String[] FailureStates;
    private static String[] SuccessStates;
    private HeaderSource _headerSource;
    private Uri _startRequestUri;
    private OperationFinalStateVia _finalStateVia;
    private HttpPipeline _pipeline;
    [NullableAttribute("2")]
private string _apiVersion;
    [NullableAttribute("2")]
private string _lastKnownLocation;
    private string _nextRequestUri;
    [CompilerGeneratedAttribute]
private string <OperationId>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestMethod <RequestMethod>k__BackingField;
    public string OperationId { get; private set; }
    public RequestMethod RequestMethod { get; }
    private NextLinkOperationImplementation(HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, string nextRequestUri, HeaderSource headerSource, string lastKnownLocation, OperationFinalStateVia finalStateVia, string apiVersion, string operationId, bool isNextRequestPolling);
    private static NextLinkOperationImplementation();
    [CompilerGeneratedAttribute]
public string get_OperationId();
    [CompilerGeneratedAttribute]
private void set_OperationId(string value);
    [CompilerGeneratedAttribute]
public RequestMethod get_RequestMethod();
    public static IOperation Create(HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    public static IOperation`1<T> Create(IOperationSource`1<T> operationSource, HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    public static IOperation`1<T> Create(IOperationSource`1<T> operationSource, IOperation operation);
    public static IOperation Create(HttpPipeline pipeline, RehydrationToken rehydrationToken);
    private static string ParseOperationId(Uri startRequestUri, string nextRequestUri);
    public RehydrationToken GetRehydrationToken();
    public static RehydrationToken GetRehydrationToken(RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia);
    public static RehydrationToken GetRehydrationToken(RequestMethod requestMethod, Uri startRequestUri, string nextRequestUri, string headerSource, string lastKnownLocation, string finalStateVia, string operationId);
    [NullableContextAttribute("2")]
private static string ConstructStringValue(string value);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Azure.Core.NextLinkOperationImplementation/<UpdateStateAsync>d__29")]
public sealed virtual ValueTask`1<OperationState> UpdateStateAsync(bool async, CancellationToken cancellationToken);
    private static OperationState GetOperationStateFromFinalResponse(RequestMethod requestMethod, Response response);
    private void UpdateNextRequestUri(ResponseHeaders headers);
    internal static string AppendOrReplaceApiVersion(string uri, string apiVersion);
    [NullableContextAttribute("0")]
internal static bool TryGetApiVersion(Uri startRequestUri, ReadOnlySpan`1& apiVersion);
    [NullableContextAttribute("2")]
private string GetFinalUri(string resourceLocation);
    private Response GetResponse(string uri, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.NextLinkOperationImplementation/<GetResponseAsync>d__36")]
private ValueTask`1<Response> GetResponseAsync(string uri, CancellationToken cancellationToken);
    private HttpMessage CreateRequest(string uri);
    private static bool IsFinalState(Response response, HeaderSource headerSource, Nullable`1& failureState, String& resourceLocation);
    private static string GetRequiredString(JsonElement& element);
    private static bool ShouldIgnoreHeader(RequestMethod method, Response response);
    private static HeaderSource GetHeaderSource(RequestMethod requestMethod, Uri requestUri, Response response, string apiVersion, String& nextRequestUri, Boolean& isNextRequestPolling);
    private static void AssertNotNull(T value, string name);
}
internal enum Azure.Core.OperationFinalStateVia : Enum {
    public int value__;
    public static OperationFinalStateVia AzureAsyncOperation;
    public static OperationFinalStateVia Location;
    public static OperationFinalStateVia OriginalUri;
    public static OperationFinalStateVia OperationLocation;
    public static OperationFinalStateVia LocationOverride;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.OperationHelpers : object {
    public static T GetValue(T& value);
    [NullableContextAttribute("0")]
public static T GetValue(Nullable`1& value);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionAsync>d__2`1")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<TResult>> DefaultWaitForCompletionAsync(Operation`1<TResult> operation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionAsync>d__3`1")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<TResult>> DefaultWaitForCompletionAsync(Operation`1<TResult> operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response`1<TResult> DefaultWaitForCompletion(Operation`1<TResult> operation, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response`1<TResult> DefaultWaitForCompletion(Operation`1<TResult> operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionResponseAsync>d__6")]
[ExtensionAttribute]
public static ValueTask`1<Response> DefaultWaitForCompletionResponseAsync(Operation operation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionResponseAsync>d__7")]
[ExtensionAttribute]
public static ValueTask`1<Response> DefaultWaitForCompletionResponseAsync(Operation operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response DefaultWaitForCompletionResponse(Operation operation, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response DefaultWaitForCompletionResponse(Operation operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationInternal : OperationInternalBase {
    private OperationInternal`1<VoidValue> _internalOperation;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public OperationInternal(IOperation operation, ClientDiagnostics clientDiagnostics, Response rawResponse, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    internal OperationInternal(OperationState finalState);
    public static OperationInternal Succeeded(Response rawResponse);
    public static OperationInternal Failed(Response rawResponse, RequestFailedException operationFailedException);
    public virtual Response get_RawResponse();
    public virtual bool get_HasCompleted();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal/<UpdateStatusAsync>d__9")]
protected virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationInternal`1 : OperationInternalBase {
    private IOperation`1<T> _operation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AsyncLockWithValue`1<OperationState`1<T>> _stateLock;
    private Response _rawResponse;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasValue { get; }
    public T Value { get; }
    public OperationInternal`1(IOperation`1<T> operation, ClientDiagnostics clientDiagnostics, Response rawResponse, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    internal OperationInternal`1(OperationState`1<T> finalState);
    public static OperationInternal`1<T> Succeeded(Response rawResponse, T value);
    public static OperationInternal`1<T> Failed(Response rawResponse, RequestFailedException operationFailedException);
    public virtual Response get_RawResponse();
    public virtual bool get_HasCompleted();
    public bool get_HasValue();
    public T get_Value();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__15")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__16")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__19")]
private ValueTask`1<Response`1<T>> WaitForCompletionAsync(bool async, Nullable`1<TimeSpan> pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<UpdateStatusAsync>d__20")]
protected virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
    private static Response GetResponseFromState(OperationState`1<T> state);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Azure.Core.OperationInternalBase : object {
    private ClientDiagnostics _diagnostics;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IReadOnlyDictionary`2<string, string> _scopeAttributes;
    [NullableAttribute("2")]
private DelayStrategy _fallbackStrategy;
    private AsyncLockWithValue`1<Response> _responseLock;
    private string _waitForCompletionResponseScopeName;
    protected string _updateStatusScopeName;
    protected string _waitForCompletionScopeName;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    protected OperationInternalBase(Response rawResponse);
    protected OperationInternalBase(ClientDiagnostics clientDiagnostics, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    public abstract virtual Response get_RawResponse();
    public abstract virtual bool get_HasCompleted();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<UpdateStatusAsync>d__13")]
public ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public Response UpdateStatus(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__15")]
public ValueTask`1<Response> WaitForCompletionResponseAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__16")]
public ValueTask`1<Response> WaitForCompletionResponseAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__19")]
protected ValueTask`1<Response> WaitForCompletionResponseAsync(bool async, Nullable`1<TimeSpan> pollingInterval, string scopeName, CancellationToken cancellationToken);
    protected abstract virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
    protected DiagnosticScope CreateScope(string scopeName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationPoller : object {
    private DelayStrategy _delayStrategy;
    [NullableContextAttribute("2")]
public OperationPoller(DelayStrategy strategy);
    public ValueTask`1<Response> WaitForCompletionResponseAsync(Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public ValueTask`1<Response> WaitForCompletionResponseAsync(OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__6`1")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(Operation`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(Operation`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__8`1")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(OperationInternal`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(OperationInternal`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__10")]
private ValueTask`1<Response> WaitForCompletionAsync(bool async, Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__11")]
private ValueTask`1<Response> WaitForCompletionAsync(bool async, OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<Delay>d__12")]
private static ValueTask Delay(bool async, TimeSpan delay, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.OperationState : ValueType {
    [CompilerGeneratedAttribute]
private Response <RawResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasSucceeded>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private RequestFailedException <OperationFailedException>k__BackingField;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasSucceeded { get; }
    [NullableAttribute("2")]
public RequestFailedException OperationFailedException { get; }
    private OperationState(Response rawResponse, bool hasCompleted, bool hasSucceeded, RequestFailedException operationFailedException);
    [CompilerGeneratedAttribute]
public Response get_RawResponse();
    [CompilerGeneratedAttribute]
public bool get_HasCompleted();
    [CompilerGeneratedAttribute]
public bool get_HasSucceeded();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public RequestFailedException get_OperationFailedException();
    public static OperationState Success(Response rawResponse);
    public static OperationState Failure(Response rawResponse, RequestFailedException operationFailedException);
    public static OperationState Pending(Response rawResponse);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.OperationState`1 : ValueType {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Response <RawResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasSucceeded>k__BackingField;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestFailedException <OperationFailedException>k__BackingField;
    [NullableAttribute("1")]
public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasSucceeded { get; }
    public T Value { get; }
    public RequestFailedException OperationFailedException { get; }
    private OperationState`1(Response rawResponse, bool hasCompleted, bool hasSucceeded, T value, RequestFailedException operationFailedException);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Response get_RawResponse();
    [CompilerGeneratedAttribute]
public bool get_HasCompleted();
    [CompilerGeneratedAttribute]
public bool get_HasSucceeded();
    [CompilerGeneratedAttribute]
public T get_Value();
    [CompilerGeneratedAttribute]
public RequestFailedException get_OperationFailedException();
    [NullableContextAttribute("1")]
public static OperationState`1<T> Success(Response rawResponse, T value);
    [NullableContextAttribute("1")]
public static OperationState`1<T> Failure(Response rawResponse, RequestFailedException operationFailedException);
    [NullableContextAttribute("1")]
public static OperationState`1<T> Pending(Response rawResponse);
}
internal static class Azure.Core.Page : object {
    [NullableContextAttribute("1")]
public static Page`1<T> FromValues(IEnumerable`1<T> values, string continuationToken, Response response);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.PageableHelpers : object {
    private static Byte[] DefaultItemPropertyName;
    private static Byte[] DefaultNextLinkPropertyName;
    private static PageableHelpers();
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.PageableHelpers/<CreateAsyncPageable>d__10`1")]
public static ValueTask`1<Operation`1<AsyncPageable`1<T>>> CreateAsyncPageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Operation`1<Pageable`1<T>> CreatePageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreateEnumerable(Func`2<Nullable`1<int>, Page`1<T>> firstPageFunc, Func`3<string, Nullable`1<int>, Page`1<T>> nextPageFunc, Nullable`1<int> pageSize);
    public static AsyncPageable`1<T> CreateAsyncEnumerable(Func`2<Nullable`1<int>, Task`1<Page`1<T>>> firstPageFunc, Func`3<string, Nullable`1<int>, Task`1<Page`1<T>>> nextPageFunc, Nullable`1<int> pageSize);
    private static ValueTuple`2<List`1<T>, string> ParseResponseForBinaryData(Response response, Byte[] itemPropertyName, Byte[] nextLinkPropertyName);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static object <ParseResponseForBinaryData>g__ReadBinaryData|19_0(Utf8JsonReader& r, ReadOnlyMemory`1& content);
}
internal static class Azure.Core.Pipeline.ActivityExtensions : object {
    [CompilerGeneratedAttribute]
private static bool <SupportsActivitySource>k__BackingField;
    public static bool SupportsActivitySource { get; private set; }
    private static ActivityExtensions();
    [CompilerGeneratedAttribute]
public static bool get_SupportsActivitySource();
    [CompilerGeneratedAttribute]
private static void set_SupportsActivitySource(bool value);
    public static void ResetFeatureSwitch();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.ClientDiagnostics : DiagnosticScopeFactory {
    public ClientDiagnostics(ClientOptions options, Nullable`1<bool> suppressNestedClientActivities);
    public ClientDiagnostics(string optionsNamespace, string providerNamespace, DiagnosticsOptions diagnosticsOptions, Nullable`1<bool> suppressNestedClientActivities);
    internal static HttpMessageSanitizer CreateMessageSanitizer(DiagnosticsOptions diagnostics);
    internal static string GetResourceProviderNamespace(Assembly assembly);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.Pipeline.DiagnosticScope : ValueType {
    private static string AzureSdkScopeLabel;
    internal static string OpenTelemetrySchemaAttribute;
    internal static string OpenTelemetrySchemaVersion;
    private static object AzureSdkScopeValue;
    [NullableAttribute("2")]
private ActivityAdapter _activityAdapter;
    private bool _suppressNestedClientActivities;
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    public bool IsEnabled { get; }
    [RequiresUnreferencedCodeAttribute("The diagnosticSourceArgs are used in a call to DiagnosticSource.Write, all necessary properties need to be preserved on the type being passed in using DynamicDependency attributes.")]
internal DiagnosticScope(string scopeName, DiagnosticListener source, object diagnosticSourceArgs, ActivitySource activitySource, ActivityKind kind, bool suppressNestedClientActivities);
    private static DiagnosticScope();
    [CompilerGeneratedAttribute]
public bool get_IsEnabled();
    public void AddAttribute(string name, string value);
    public void AddIntegerAttribute(string name, int value);
    public void AddLongAttribute(string name, long value);
    public void AddAttribute(string name, T value, Func`2<T, string> format);
    public void AddLink(string traceparent, string tracestate, IDictionary`2<string, object> attributes);
    public void Start();
    public void SetDisplayName(string displayName);
    public void SetStartTime(DateTime dateTime);
    public void SetTraceContext(string traceparent, string tracestate);
    public sealed virtual void Dispose();
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void Failed(Exception exception);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void Failed(string errorCode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.DiagnosticScopeFactory : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Dictionary`2<string, DiagnosticListener> _listeners;
    [NullableAttribute("2")]
private string _resourceProviderNamespace;
    [NullableAttribute("2")]
private DiagnosticListener _source;
    private bool _suppressNestedClientActivities;
    private bool _isStable;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ConcurrentDictionary`2<string, ActivitySource> ActivitySources;
    [CompilerGeneratedAttribute]
private bool <IsActivityEnabled>k__BackingField;
    public bool IsActivityEnabled { get; }
    public DiagnosticScopeFactory(string clientNamespace, string resourceProviderNamespace, bool isActivityEnabled, bool suppressNestedClientActivities, bool isStable);
    private static DiagnosticScopeFactory();
    [CompilerGeneratedAttribute]
public bool get_IsActivityEnabled();
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
public DiagnosticScope CreateScope(string name, ActivityKind kind);
    private ActivitySource GetActivitySource(string ns, string name);
}
[ExtensionAttribute]
internal static class Azure.Core.Pipeline.TaskExtensions : object {
    [ExtensionAttribute]
public static WithCancellationTaskAwaitable AwaitWithCancellation(Task task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static WithCancellationTaskAwaitable`1<T> AwaitWithCancellation(Task`1<T> task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static WithCancellationValueTaskAwaitable`1<T> AwaitWithCancellation(ValueTask`1<T> task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static T EnsureCompleted(Task`1<T> task);
    [ExtensionAttribute]
public static void EnsureCompleted(Task task);
    [ExtensionAttribute]
public static T EnsureCompleted(ValueTask`1<T> task);
    [ExtensionAttribute]
public static void EnsureCompleted(ValueTask task);
    [ExtensionAttribute]
public static Enumerable`1<T> EnsureSyncEnumerable(IAsyncEnumerable`1<T> asyncEnumerable);
    [ExtensionAttribute]
public static ConfiguredValueTaskAwaitable`1<T> EnsureCompleted(ConfiguredValueTaskAwaitable`1<T> awaitable, bool async);
    [ExtensionAttribute]
public static ConfiguredValueTaskAwaitable EnsureCompleted(ConfiguredValueTaskAwaitable awaitable, bool async);
    [ConditionalAttribute("DEBUG")]
private static void VerifyTaskCompleted(bool isCompleted);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Core.ProtocolOperation`1 : Operation`1<T> {
    private Func`2<Response, T> _resultSelector;
    private OperationInternal`1<T> _operation;
    private IOperation _nextLinkOperation;
    public string Id { get; }
    public T Value { get; }
    public bool HasCompleted { get; }
    public bool HasValue { get; }
    internal ProtocolOperation`1(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Request request, Response response, OperationFinalStateVia finalStateVia, string scopeName, Func`2<Response, T> resultSelector);
    public virtual string get_Id();
    public virtual T get_Value();
    public virtual bool get_HasCompleted();
    public virtual bool get_HasValue();
    public virtual Response GetRawResponse();
    public virtual Response UpdateStatus(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.ProtocolOperation`1/<Azure-Core-IOperation<T>-UpdateStateAsync>d__17")]
private sealed virtual override ValueTask`1<OperationState`1<T>> Azure.Core.IOperation<T>.UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.ProtocolOperationHelpers : object {
    public static Operation`1<TTo> Convert(Operation`1<TFrom> operation, Func`2<Response, TTo> convertFunc, ClientDiagnostics diagnostics, string scopeName);
    public static ValueTask`1<Operation`1<VoidValue>> ProcessMessageWithoutResponseValueAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static Operation`1<VoidValue> ProcessMessageWithoutResponseValue(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static ValueTask`1<Operation`1<BinaryData>> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static Operation`1<BinaryData> ProcessMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    [AsyncStateMachineAttribute("Azure.Core.ProtocolOperationHelpers/<ProcessMessageAsync>d__5`1")]
public static ValueTask`1<Operation`1<T>> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil, Func`2<Response, T> resultSelector);
    public static Operation`1<T> ProcessMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil, Func`2<Response, T> resultSelector);
}
internal class Azure.Core.RawRequestUriBuilder : RequestUriBuilder {
    [NullableAttribute("1")]
private static string SchemeSeparator;
    private static char HostSeparator;
    private static char PortSeparator;
    [NullableAttribute("1")]
private static Char[] HostOrPort;
    private static char QueryBeginSeparator;
    private static char QueryContinueSeparator;
    private static char QueryValueSeparator;
    private Nullable`1<RawWritingPosition> _position;
    private static RawRequestUriBuilder();
    private static void GetQueryParts(ReadOnlySpan`1<char> queryUnparsed, ReadOnlySpan`1& name, ReadOnlySpan`1& value);
    [NullableContextAttribute("1")]
public void AppendRaw(string value, bool escape);
    private void AppendRaw(ReadOnlySpan`1<char> value, bool escape);
    [NullableContextAttribute("1")]
public void AppendRawNextLink(string nextLink, bool escape);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.RequestHeaderExtensions : object {
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, bool value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, float value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, double value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, int value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, long value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, TimeSpan value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, Guid value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, Byte[] value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, BinaryData value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string prefix, IDictionary`2<string, string> headersToAdd);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, ETag value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, MatchConditions conditions);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, RequestConditions conditions, string format);
    [ExtensionAttribute]
public static void AddDelimited(RequestHeaders headers, string name, IEnumerable`1<T> value, string delimiter);
    [ExtensionAttribute]
public static void AddDelimited(RequestHeaders headers, string name, IEnumerable`1<T> value, string delimiter, string format);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.RequestUriBuilderExtensions : object {
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, bool value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, float value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, double value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, int value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, Byte[] value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, IEnumerable`1<string> value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, DateTimeOffset value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, TimeSpan value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, Guid value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, long value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, bool value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, float value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, DateTimeOffset value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, TimeSpan value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, double value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, decimal value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, int value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, long value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, TimeSpan value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, Byte[] value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, Guid value, bool escape);
    [ExtensionAttribute]
public static void AppendQueryDelimited(RequestUriBuilder builder, string name, IEnumerable`1<T> value, string delimiter, bool escape);
    [ExtensionAttribute]
public static void AppendQueryDelimited(RequestUriBuilder builder, string name, IEnumerable`1<T> value, string delimiter, string format, bool escape);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.ResponseHeadersExtensions : object {
    private static String[] KnownFormats;
    private static ResponseHeadersExtensions();
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Byte[]& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, T& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string prefix, IDictionary`2& value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.ResponseWithHeaders : object {
    public static ResponseWithHeaders`2<T, THeaders> FromValue(T value, THeaders headers, Response rawResponse);
    public static ResponseWithHeaders`1<THeaders> FromValue(THeaders headers, Response rawResponse);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.ResponseWithHeaders`1 : object {
    private Response _rawResponse;
    [CompilerGeneratedAttribute]
private THeaders <Headers>k__BackingField;
    public THeaders Headers { get; }
    public ResponseWithHeaders`1(THeaders headers, Response rawResponse);
    public Response GetRawResponse();
    [CompilerGeneratedAttribute]
public THeaders get_Headers();
    public static Response op_Implicit(ResponseWithHeaders`1<THeaders> self);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Core.ResponseWithHeaders`2 : Response`1<T> {
    private Response _rawResponse;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private THeaders <Headers>k__BackingField;
    public T Value { get; }
    public THeaders Headers { get; }
    public ResponseWithHeaders`2(T value, THeaders headers, Response rawResponse);
    public virtual Response GetRawResponse();
    [CompilerGeneratedAttribute]
public virtual T get_Value();
    [CompilerGeneratedAttribute]
public THeaders get_Headers();
    public static Response op_Implicit(ResponseWithHeaders`2<T, THeaders> self);
}
internal class Azure.Core.SequentialDelayStrategy : DelayStrategy {
    [NullableAttribute("1")]
private static TimeSpan[] _pollingSequence;
    private static TimeSpan _maxDelay;
    private static SequentialDelayStrategy();
    [NullableContextAttribute("2")]
protected virtual TimeSpan GetNextDelayCore(Response response, int retryNumber);
}
internal class Azure.Core.StringRequestContent : RequestContent {
    private Byte[] _bytes;
    public StringRequestContent(string value);
    [AsyncStateMachineAttribute("Azure.Core.StringRequestContent/<WriteToAsync>d__2")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.TypeFormatters : object {
    private static string RoundtripZFormat;
    [CompilerGeneratedAttribute]
private static string <DefaultNumberFormat>k__BackingField;
    public static string DefaultNumberFormat { get; }
    private static TypeFormatters();
    [CompilerGeneratedAttribute]
public static string get_DefaultNumberFormat();
    public static string ToString(bool value);
    public static string ToString(DateTime value, string format);
    public static string ToString(DateTimeOffset value, string format);
    public static string ToString(TimeSpan value, string format);
    public static string ToString(Byte[] value, string format);
    public static string ToBase64UrlString(Byte[] value);
    public static Byte[] FromBase64UrlString(string value);
    private static int GetNumBase64PaddingCharsToAddForDecode(int inputLength);
    public static DateTimeOffset ParseDateTimeOffset(string value, string format);
    public static TimeSpan ParseTimeSpan(string value, string format);
    [NullableContextAttribute("2")]
public static string ConvertToString(object value, string format);
}
[IsReadOnlyAttribute]
internal class Azure.Core.VoidValue : ValueType {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.XmlWriterContent : RequestContent {
    private MemoryStream _stream;
    private RequestContent _content;
    [CompilerGeneratedAttribute]
private XmlWriter <XmlWriter>k__BackingField;
    public XmlWriter XmlWriter { get; }
    [CompilerGeneratedAttribute]
public XmlWriter get_XmlWriter();
    [AsyncStateMachineAttribute("Azure.Core.XmlWriterContent/<WriteToAsync>d__6")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
internal class Azure.NoValueResponse`1 : NullableResponse`1<T> {
    private Response _response;
    public bool HasValue { get; }
    public T Value { get; }
    public NoValueResponse`1(Response response);
    public virtual bool get_HasValue();
    public virtual T get_Value();
    public virtual Response GetRawResponse();
    public virtual string ToString();
    internal string GetStatusMessage();
}
internal class Azure.ResourceManager.Models.ManagedServiceIdentityTypeV3Converter : JsonConverter`1<ManagedServiceIdentityType> {
    internal static string SystemAssignedUserAssignedV3Value;
    public virtual void Write(Utf8JsonWriter writer, ManagedServiceIdentityType model, JsonSerializerOptions options);
    public virtual ManagedServiceIdentityType Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
}
internal static class Azure.ResourceManager.PrivateDns.Argument : object {
    public static void AssertNotNull(T value, string name);
    public static void AssertNotNull(Nullable`1<T> value, string name);
    public static void AssertNotNullOrEmpty(IEnumerable`1<T> value, string name);
    public static void AssertNotNullOrEmpty(string value, string name);
    public static void AssertNotNullOrWhiteSpace(string value, string name);
    public static void AssertNotDefault(T& value, string name);
    public static void AssertInRange(T value, T minimum, T maximum, string name);
    public static void AssertEnumDefined(Type enumType, object value, string name);
    public static T CheckNotNull(T value, string name);
    public static string CheckNotNullOrEmpty(string value, string name);
    public static void AssertNull(T value, string name, string message);
}
internal static class Azure.ResourceManager.PrivateDns.BicepSerializationHelpers : object {
    public static void AppendChildObject(StringBuilder stringBuilder, object childObject, ModelReaderWriterOptions options, int spaces, bool indentFirstLine, string formattedPropertyName);
}
[DefaultMemberAttribute("Item")]
internal class Azure.ResourceManager.PrivateDns.ChangeTrackingDictionary`2 : object {
    private IDictionary`2<TKey, TValue> _innerDictionary;
    public bool IsUndefined { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public ICollection`1<TKey> Keys { get; }
    public ICollection`1<TValue> Values { get; }
    public TValue Item { get; public set; }
    private IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys { get; }
    private IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values { get; }
    public ChangeTrackingDictionary`2(IDictionary`2<TKey, TValue> dictionary);
    public ChangeTrackingDictionary`2(IReadOnlyDictionary`2<TKey, TValue> dictionary);
    public bool get_IsUndefined();
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual ICollection`1<TKey> get_Keys();
    public sealed virtual ICollection`1<TValue> get_Values();
    public sealed virtual TValue get_Item(TKey key);
    public sealed virtual void set_Item(TKey key, TValue value);
    private sealed virtual override IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys();
    private sealed virtual override IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values();
    public sealed virtual IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual void Add(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int index);
    public sealed virtual bool Remove(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void Add(TKey key, TValue value);
    public sealed virtual bool ContainsKey(TKey key);
    public sealed virtual bool Remove(TKey key);
    public sealed virtual bool TryGetValue(TKey key, TValue& value);
    public IDictionary`2<TKey, TValue> EnsureDictionary();
    [IteratorStateMachineAttribute("Azure.ResourceManager.PrivateDns.ChangeTrackingDictionary`2/<<GetEnumerator>g__enumerateEmpty|21_0>d")]
[CompilerGeneratedAttribute]
internal static IEnumerator`1<KeyValuePair`2<TKey, TValue>> <GetEnumerator>g__enumerateEmpty|21_0();
}
[DefaultMemberAttribute("Item")]
internal class Azure.ResourceManager.PrivateDns.ChangeTrackingList`1 : object {
    private IList`1<T> _innerList;
    public bool IsUndefined { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public T Item { get; public set; }
    public ChangeTrackingList`1(IList`1<T> innerList);
    public ChangeTrackingList`1(IReadOnlyList`1<T> innerList);
    public bool get_IsUndefined();
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual T get_Item(int index);
    public sealed virtual void set_Item(int index, T value);
    public void Reset();
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual void Add(T item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(T item);
    public sealed virtual void CopyTo(T[] array, int arrayIndex);
    public sealed virtual bool Remove(T item);
    public sealed virtual int IndexOf(T item);
    public sealed virtual void Insert(int index, T item);
    public sealed virtual void RemoveAt(int index);
    public IList`1<T> EnsureList();
    [IteratorStateMachineAttribute("Azure.ResourceManager.PrivateDns.ChangeTrackingList`1/<<GetEnumerator>g__enumerateEmpty|14_0>d")]
[CompilerGeneratedAttribute]
internal static IEnumerator`1<T> <GetEnumerator>g__enumerateEmpty|14_0();
}
public class Azure.ResourceManager.PrivateDns.Mocking.MockablePrivateDnsArmClient : ArmResource {
    internal MockablePrivateDnsArmClient(ArmClient client, ResourceIdentifier id);
    internal MockablePrivateDnsArmClient(ArmClient client);
    private string GetApiVersionOrNull(ResourceType resourceType);
    public virtual PrivateDnsZoneResource GetPrivateDnsZoneResource(ResourceIdentifier id);
    public virtual VirtualNetworkLinkResource GetVirtualNetworkLinkResource(ResourceIdentifier id);
    public virtual PrivateDnsARecordResource GetPrivateDnsARecordResource(ResourceIdentifier id);
    public virtual PrivateDnsAaaaRecordResource GetPrivateDnsAaaaRecordResource(ResourceIdentifier id);
    public virtual PrivateDnsCnameRecordResource GetPrivateDnsCnameRecordResource(ResourceIdentifier id);
    public virtual PrivateDnsMXRecordResource GetPrivateDnsMXRecordResource(ResourceIdentifier id);
    public virtual PrivateDnsPtrRecordResource GetPrivateDnsPtrRecordResource(ResourceIdentifier id);
    public virtual PrivateDnsSoaRecordResource GetPrivateDnsSoaRecordResource(ResourceIdentifier id);
    public virtual PrivateDnsSrvRecordResource GetPrivateDnsSrvRecordResource(ResourceIdentifier id);
    public virtual PrivateDnsTxtRecordResource GetPrivateDnsTxtRecordResource(ResourceIdentifier id);
}
public class Azure.ResourceManager.PrivateDns.Mocking.MockablePrivateDnsResourceGroupResource : ArmResource {
    internal MockablePrivateDnsResourceGroupResource(ArmClient client, ResourceIdentifier id);
    private string GetApiVersionOrNull(ResourceType resourceType);
    public virtual PrivateDnsZoneCollection GetPrivateDnsZones();
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.Mocking.MockablePrivateDnsResourceGroupResource/<GetPrivateDnsZoneAsync>d__4")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<PrivateDnsZoneResource>> GetPrivateDnsZoneAsync(string privateZoneName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<PrivateDnsZoneResource> GetPrivateDnsZone(string privateZoneName, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private PrivateDnsZoneCollection <GetPrivateDnsZones>b__3_0(ArmClient client);
}
public class Azure.ResourceManager.PrivateDns.Mocking.MockablePrivateDnsSubscriptionResource : ArmResource {
    private ClientDiagnostics _privateDnsZonePrivateZonesClientDiagnostics;
    private PrivateZonesRestOperations _privateDnsZonePrivateZonesRestClient;
    private ClientDiagnostics PrivateDnsZonePrivateZonesClientDiagnostics { get; }
    private PrivateZonesRestOperations PrivateDnsZonePrivateZonesRestClient { get; }
    internal MockablePrivateDnsSubscriptionResource(ArmClient client, ResourceIdentifier id);
    private ClientDiagnostics get_PrivateDnsZonePrivateZonesClientDiagnostics();
    private PrivateZonesRestOperations get_PrivateDnsZonePrivateZonesRestClient();
    private string GetApiVersionOrNull(ResourceType resourceType);
    public virtual AsyncPageable`1<PrivateDnsZoneResource> GetPrivateDnsZonesAsync(Nullable`1<int> top, CancellationToken cancellationToken);
    public virtual Pageable`1<PrivateDnsZoneResource> GetPrivateDnsZones(Nullable`1<int> top, CancellationToken cancellationToken);
}
public static class Azure.ResourceManager.PrivateDns.Models.ArmPrivateDnsModelFactory : object {
    public static PrivateDnsZoneData PrivateDnsZoneData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary`2<string, string> tags, AzureLocation location, Nullable`1<ETag> etag, Nullable`1<long> maxNumberOfRecords, Nullable`1<long> numberOfRecords, Nullable`1<long> maxNumberOfVirtualNetworkLinks, Nullable`1<long> numberOfVirtualNetworkLinks, Nullable`1<long> maxNumberOfVirtualNetworkLinksWithRegistration, Nullable`1<long> numberOfVirtualNetworkLinksWithRegistration, Nullable`1<PrivateDnsProvisioningState> privateDnsProvisioningState, string internalId);
    public static VirtualNetworkLinkData VirtualNetworkLinkData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary`2<string, string> tags, AzureLocation location, Nullable`1<ETag> etag, ResourceIdentifier virtualNetworkId, Nullable`1<bool> registrationEnabled, Nullable`1<PrivateDnsResolutionPolicy> privateDnsResolutionPolicy, Nullable`1<VirtualNetworkLinkState> virtualNetworkLinkState, Nullable`1<PrivateDnsProvisioningState> privateDnsProvisioningState);
    [EditorBrowsableAttribute("1")]
public static VirtualNetworkLinkData VirtualNetworkLinkData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary`2<string, string> tags, AzureLocation location, Nullable`1<ETag> etag, ResourceIdentifier virtualNetworkId, Nullable`1<bool> registrationEnabled, Nullable`1<VirtualNetworkLinkState> virtualNetworkLinkState, Nullable`1<PrivateDnsProvisioningState> privateDnsProvisioningState);
}
public class Azure.ResourceManager.PrivateDns.Models.PrivateDnsAaaaRecordInfo : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IPAddress <IPv6Address>k__BackingField;
    [WirePathAttribute("ipv6Address")]
public IPAddress IPv6Address { get; public set; }
    internal PrivateDnsAaaaRecordInfo(IPAddress ipv6Address, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IPAddress get_IPv6Address();
    [CompilerGeneratedAttribute]
public void set_IPv6Address(IPAddress value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsAaaaRecordInfo>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsAaaaRecordInfo System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsAaaaRecordInfo>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsAaaaRecordInfo DeserializePrivateDnsAaaaRecordInfo(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsAaaaRecordInfo>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsAaaaRecordInfo System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsAaaaRecordInfo>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsAaaaRecordInfo>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.PrivateDns.Models.PrivateDnsAaaaRecordListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<PrivateDnsAaaaRecordData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<PrivateDnsAaaaRecordData> Value { get; }
    public string NextLink { get; }
    internal PrivateDnsAaaaRecordListResult(IReadOnlyList`1<PrivateDnsAaaaRecordData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<PrivateDnsAaaaRecordData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsAaaaRecordListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsAaaaRecordListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsAaaaRecordListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsAaaaRecordListResult DeserializePrivateDnsAaaaRecordListResult(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsAaaaRecordListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsAaaaRecordListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsAaaaRecordListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsAaaaRecordListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.PrivateDns.Models.PrivateDnsARecordInfo : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IPAddress <IPv4Address>k__BackingField;
    [WirePathAttribute("ipv4Address")]
public IPAddress IPv4Address { get; public set; }
    internal PrivateDnsARecordInfo(IPAddress ipv4Address, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IPAddress get_IPv4Address();
    [CompilerGeneratedAttribute]
public void set_IPv4Address(IPAddress value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsARecordInfo>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsARecordInfo System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsARecordInfo>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsARecordInfo DeserializePrivateDnsARecordInfo(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsARecordInfo>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsARecordInfo System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsARecordInfo>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsARecordInfo>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.PrivateDns.Models.PrivateDnsARecordListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<PrivateDnsARecordData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<PrivateDnsARecordData> Value { get; }
    public string NextLink { get; }
    internal PrivateDnsARecordListResult(IReadOnlyList`1<PrivateDnsARecordData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<PrivateDnsARecordData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsARecordListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsARecordListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsARecordListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsARecordListResult DeserializePrivateDnsARecordListResult(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsARecordListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsARecordListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsARecordListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsARecordListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.PrivateDns.Models.PrivateDnsCnameRecordInfo : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <Cname>k__BackingField;
    [WirePathAttribute("cname")]
public string Cname { get; public set; }
    internal PrivateDnsCnameRecordInfo(string cname, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_Cname();
    [CompilerGeneratedAttribute]
public void set_Cname(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsCnameRecordInfo>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsCnameRecordInfo System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsCnameRecordInfo>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsCnameRecordInfo DeserializePrivateDnsCnameRecordInfo(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsCnameRecordInfo>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsCnameRecordInfo System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsCnameRecordInfo>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsCnameRecordInfo>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.PrivateDns.Models.PrivateDnsCnameRecordListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<PrivateDnsCnameRecordData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<PrivateDnsCnameRecordData> Value { get; }
    public string NextLink { get; }
    internal PrivateDnsCnameRecordListResult(IReadOnlyList`1<PrivateDnsCnameRecordData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<PrivateDnsCnameRecordData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsCnameRecordListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsCnameRecordListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsCnameRecordListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsCnameRecordListResult DeserializePrivateDnsCnameRecordListResult(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsCnameRecordListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsCnameRecordListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsCnameRecordListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsCnameRecordListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.PrivateDns.Models.PrivateDnsMXRecordInfo : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Preference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Exchange>k__BackingField;
    [WirePathAttribute("preference")]
public Nullable`1<int> Preference { get; public set; }
    [WirePathAttribute("exchange")]
public string Exchange { get; public set; }
    internal PrivateDnsMXRecordInfo(Nullable`1<int> preference, string exchange, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Preference();
    [CompilerGeneratedAttribute]
public void set_Preference(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Exchange();
    [CompilerGeneratedAttribute]
public void set_Exchange(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsMXRecordInfo>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsMXRecordInfo System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsMXRecordInfo>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsMXRecordInfo DeserializePrivateDnsMXRecordInfo(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsMXRecordInfo>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsMXRecordInfo System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsMXRecordInfo>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsMXRecordInfo>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.PrivateDns.Models.PrivateDnsMXRecordListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<PrivateDnsMXRecordData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<PrivateDnsMXRecordData> Value { get; }
    public string NextLink { get; }
    internal PrivateDnsMXRecordListResult(IReadOnlyList`1<PrivateDnsMXRecordData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<PrivateDnsMXRecordData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsMXRecordListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsMXRecordListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsMXRecordListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsMXRecordListResult DeserializePrivateDnsMXRecordListResult(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsMXRecordListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsMXRecordListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsMXRecordListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsMXRecordListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.PrivateDns.Models.PrivateDnsProvisioningState : ValueType {
    private string _value;
    private static string CreatingValue;
    private static string UpdatingValue;
    private static string DeletingValue;
    private static string SucceededValue;
    private static string FailedValue;
    private static string CanceledValue;
    [CompilerGeneratedAttribute]
private static PrivateDnsProvisioningState <Creating>k__BackingField;
    [CompilerGeneratedAttribute]
private static PrivateDnsProvisioningState <Updating>k__BackingField;
    [CompilerGeneratedAttribute]
private static PrivateDnsProvisioningState <Deleting>k__BackingField;
    [CompilerGeneratedAttribute]
private static PrivateDnsProvisioningState <Succeeded>k__BackingField;
    [CompilerGeneratedAttribute]
private static PrivateDnsProvisioningState <Failed>k__BackingField;
    [CompilerGeneratedAttribute]
private static PrivateDnsProvisioningState <Canceled>k__BackingField;
    public static PrivateDnsProvisioningState Creating { get; }
    public static PrivateDnsProvisioningState Updating { get; }
    public static PrivateDnsProvisioningState Deleting { get; }
    public static PrivateDnsProvisioningState Succeeded { get; }
    public static PrivateDnsProvisioningState Failed { get; }
    public static PrivateDnsProvisioningState Canceled { get; }
    public PrivateDnsProvisioningState(string value);
    private static PrivateDnsProvisioningState();
    [CompilerGeneratedAttribute]
public static PrivateDnsProvisioningState get_Creating();
    [CompilerGeneratedAttribute]
public static PrivateDnsProvisioningState get_Updating();
    [CompilerGeneratedAttribute]
public static PrivateDnsProvisioningState get_Deleting();
    [CompilerGeneratedAttribute]
public static PrivateDnsProvisioningState get_Succeeded();
    [CompilerGeneratedAttribute]
public static PrivateDnsProvisioningState get_Failed();
    [CompilerGeneratedAttribute]
public static PrivateDnsProvisioningState get_Canceled();
    public static bool op_Equality(PrivateDnsProvisioningState left, PrivateDnsProvisioningState right);
    public static bool op_Inequality(PrivateDnsProvisioningState left, PrivateDnsProvisioningState right);
    public static PrivateDnsProvisioningState op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(PrivateDnsProvisioningState other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.PrivateDns.Models.PrivateDnsPtrRecordInfo : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <PtrDomainName>k__BackingField;
    [WirePathAttribute("ptrdname")]
public string PtrDomainName { get; public set; }
    internal PrivateDnsPtrRecordInfo(string ptrDomainName, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_PtrDomainName();
    [CompilerGeneratedAttribute]
public void set_PtrDomainName(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsPtrRecordInfo>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsPtrRecordInfo System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsPtrRecordInfo>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsPtrRecordInfo DeserializePrivateDnsPtrRecordInfo(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsPtrRecordInfo>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsPtrRecordInfo System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsPtrRecordInfo>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsPtrRecordInfo>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.PrivateDns.Models.PrivateDnsPtrRecordListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<PrivateDnsPtrRecordData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<PrivateDnsPtrRecordData> Value { get; }
    public string NextLink { get; }
    internal PrivateDnsPtrRecordListResult(IReadOnlyList`1<PrivateDnsPtrRecordData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<PrivateDnsPtrRecordData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsPtrRecordListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsPtrRecordListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsPtrRecordListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsPtrRecordListResult DeserializePrivateDnsPtrRecordListResult(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsPtrRecordListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsPtrRecordListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsPtrRecordListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsPtrRecordListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.PrivateDns.Models.PrivateDnsRecordListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<PrivateDnsRecordData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<PrivateDnsRecordData> Value { get; }
    public string NextLink { get; }
    internal PrivateDnsRecordListResult(IReadOnlyList`1<PrivateDnsRecordData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<PrivateDnsRecordData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsRecordListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsRecordListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsRecordListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsRecordListResult DeserializePrivateDnsRecordListResult(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsRecordListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsRecordListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsRecordListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsRecordListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.PrivateDns.Models.PrivateDnsResolutionPolicy : ValueType {
    private string _value;
    private static string DefaultValue;
    private static string NxDomainRedirectValue;
    [CompilerGeneratedAttribute]
private static PrivateDnsResolutionPolicy <Default>k__BackingField;
    [CompilerGeneratedAttribute]
private static PrivateDnsResolutionPolicy <NxDomainRedirect>k__BackingField;
    public static PrivateDnsResolutionPolicy Default { get; }
    public static PrivateDnsResolutionPolicy NxDomainRedirect { get; }
    public PrivateDnsResolutionPolicy(string value);
    private static PrivateDnsResolutionPolicy();
    [CompilerGeneratedAttribute]
public static PrivateDnsResolutionPolicy get_Default();
    [CompilerGeneratedAttribute]
public static PrivateDnsResolutionPolicy get_NxDomainRedirect();
    public static bool op_Equality(PrivateDnsResolutionPolicy left, PrivateDnsResolutionPolicy right);
    public static bool op_Inequality(PrivateDnsResolutionPolicy left, PrivateDnsResolutionPolicy right);
    public static PrivateDnsResolutionPolicy op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(PrivateDnsResolutionPolicy other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.PrivateDns.Models.PrivateDnsSoaRecordInfo : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <SerialNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <RefreshTimeInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <RetryTimeInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ExpireTimeInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MinimumTtlInSeconds>k__BackingField;
    [WirePathAttribute("host")]
public string Host { get; public set; }
    [WirePathAttribute("email")]
public string Email { get; public set; }
    [WirePathAttribute("serialNumber")]
public Nullable`1<long> SerialNumber { get; public set; }
    [WirePathAttribute("refreshTime")]
public Nullable`1<long> RefreshTimeInSeconds { get; public set; }
    [WirePathAttribute("retryTime")]
public Nullable`1<long> RetryTimeInSeconds { get; public set; }
    [WirePathAttribute("expireTime")]
public Nullable`1<long> ExpireTimeInSeconds { get; public set; }
    [WirePathAttribute("minimumTtl")]
public Nullable`1<long> MinimumTtlInSeconds { get; public set; }
    internal PrivateDnsSoaRecordInfo(string host, string email, Nullable`1<long> serialNumber, Nullable`1<long> refreshTimeInSeconds, Nullable`1<long> retryTimeInSeconds, Nullable`1<long> expireTimeInSeconds, Nullable`1<long> minimumTtlInSeconds, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public string get_Email();
    [CompilerGeneratedAttribute]
public void set_Email(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_SerialNumber();
    [CompilerGeneratedAttribute]
public void set_SerialNumber(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_RefreshTimeInSeconds();
    [CompilerGeneratedAttribute]
public void set_RefreshTimeInSeconds(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_RetryTimeInSeconds();
    [CompilerGeneratedAttribute]
public void set_RetryTimeInSeconds(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ExpireTimeInSeconds();
    [CompilerGeneratedAttribute]
public void set_ExpireTimeInSeconds(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_MinimumTtlInSeconds();
    [CompilerGeneratedAttribute]
public void set_MinimumTtlInSeconds(Nullable`1<long> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsSoaRecordInfo>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsSoaRecordInfo System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsSoaRecordInfo>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsSoaRecordInfo DeserializePrivateDnsSoaRecordInfo(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsSoaRecordInfo>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsSoaRecordInfo System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsSoaRecordInfo>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsSoaRecordInfo>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.PrivateDns.Models.PrivateDnsSoaRecordListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<PrivateDnsSoaRecordData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<PrivateDnsSoaRecordData> Value { get; }
    public string NextLink { get; }
    internal PrivateDnsSoaRecordListResult(IReadOnlyList`1<PrivateDnsSoaRecordData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<PrivateDnsSoaRecordData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsSoaRecordListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsSoaRecordListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsSoaRecordListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsSoaRecordListResult DeserializePrivateDnsSoaRecordListResult(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsSoaRecordListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsSoaRecordListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsSoaRecordListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsSoaRecordListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.PrivateDns.Models.PrivateDnsSrvRecordInfo : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Weight>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [WirePathAttribute("priority")]
public Nullable`1<int> Priority { get; public set; }
    [WirePathAttribute("weight")]
public Nullable`1<int> Weight { get; public set; }
    [WirePathAttribute("port")]
public Nullable`1<int> Port { get; public set; }
    [WirePathAttribute("target")]
public string Target { get; public set; }
    internal PrivateDnsSrvRecordInfo(Nullable`1<int> priority, Nullable`1<int> weight, Nullable`1<int> port, string target, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Priority();
    [CompilerGeneratedAttribute]
public void set_Priority(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Weight();
    [CompilerGeneratedAttribute]
public void set_Weight(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsSrvRecordInfo>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsSrvRecordInfo System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsSrvRecordInfo>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsSrvRecordInfo DeserializePrivateDnsSrvRecordInfo(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsSrvRecordInfo>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsSrvRecordInfo System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsSrvRecordInfo>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsSrvRecordInfo>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.PrivateDns.Models.PrivateDnsSrvRecordListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<PrivateDnsSrvRecordData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<PrivateDnsSrvRecordData> Value { get; }
    public string NextLink { get; }
    internal PrivateDnsSrvRecordListResult(IReadOnlyList`1<PrivateDnsSrvRecordData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<PrivateDnsSrvRecordData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsSrvRecordListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsSrvRecordListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsSrvRecordListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsSrvRecordListResult DeserializePrivateDnsSrvRecordListResult(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsSrvRecordListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsSrvRecordListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsSrvRecordListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsSrvRecordListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.PrivateDns.Models.PrivateDnsTxtRecordInfo : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IList`1<string> <Values>k__BackingField;
    [WirePathAttribute("value")]
public IList`1<string> Values { get; }
    internal PrivateDnsTxtRecordInfo(IList`1<string> values, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Values();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsTxtRecordInfo>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsTxtRecordInfo System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsTxtRecordInfo>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsTxtRecordInfo DeserializePrivateDnsTxtRecordInfo(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsTxtRecordInfo>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsTxtRecordInfo System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsTxtRecordInfo>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsTxtRecordInfo>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.PrivateDns.Models.PrivateDnsTxtRecordListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<PrivateDnsTxtRecordData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<PrivateDnsTxtRecordData> Value { get; }
    public string NextLink { get; }
    internal PrivateDnsTxtRecordListResult(IReadOnlyList`1<PrivateDnsTxtRecordData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<PrivateDnsTxtRecordData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsTxtRecordListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsTxtRecordListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsTxtRecordListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsTxtRecordListResult DeserializePrivateDnsTxtRecordListResult(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsTxtRecordListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsTxtRecordListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsTxtRecordListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateDnsTxtRecordListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.PrivateDns.Models.PrivateZoneListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<PrivateDnsZoneData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<PrivateDnsZoneData> Value { get; }
    public string NextLink { get; }
    internal PrivateZoneListResult(IReadOnlyList`1<PrivateDnsZoneData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<PrivateDnsZoneData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateZoneListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateZoneListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.PrivateZoneListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateZoneListResult DeserializePrivateZoneListResult(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateZoneListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateZoneListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateZoneListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.PrivateZoneListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal enum Azure.ResourceManager.PrivateDns.Models.RecordType : Enum {
    public int value__;
    public static RecordType A;
    public static RecordType Aaaa;
    public static RecordType Cname;
    public static RecordType MX;
    public static RecordType PTR;
    public static RecordType SOA;
    public static RecordType SRV;
    public static RecordType TXT;
}
[ExtensionAttribute]
internal static class Azure.ResourceManager.PrivateDns.Models.RecordTypeExtensions : object {
    [ExtensionAttribute]
public static string ToSerialString(RecordType value);
    [ExtensionAttribute]
public static RecordType ToRecordType(string value);
}
internal class Azure.ResourceManager.PrivateDns.Models.VirtualNetworkLinkListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<VirtualNetworkLinkData> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    public IReadOnlyList`1<VirtualNetworkLinkData> Value { get; }
    public string NextLink { get; }
    internal VirtualNetworkLinkListResult(IReadOnlyList`1<VirtualNetworkLinkData> value, string nextLink, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<VirtualNetworkLinkData> get_Value();
    [CompilerGeneratedAttribute]
public string get_NextLink();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.VirtualNetworkLinkListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override VirtualNetworkLinkListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.Models.VirtualNetworkLinkListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static VirtualNetworkLinkListResult DeserializeVirtualNetworkLinkListResult(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.VirtualNetworkLinkListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override VirtualNetworkLinkListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.VirtualNetworkLinkListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.Models.VirtualNetworkLinkListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.PrivateDns.Models.VirtualNetworkLinkState : ValueType {
    private string _value;
    private static string InProgressValue;
    private static string CompletedValue;
    [CompilerGeneratedAttribute]
private static VirtualNetworkLinkState <InProgress>k__BackingField;
    [CompilerGeneratedAttribute]
private static VirtualNetworkLinkState <Completed>k__BackingField;
    public static VirtualNetworkLinkState InProgress { get; }
    public static VirtualNetworkLinkState Completed { get; }
    public VirtualNetworkLinkState(string value);
    private static VirtualNetworkLinkState();
    [CompilerGeneratedAttribute]
public static VirtualNetworkLinkState get_InProgress();
    [CompilerGeneratedAttribute]
public static VirtualNetworkLinkState get_Completed();
    public static bool op_Equality(VirtualNetworkLinkState left, VirtualNetworkLinkState right);
    public static bool op_Inequality(VirtualNetworkLinkState left, VirtualNetworkLinkState right);
    public static VirtualNetworkLinkState op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(VirtualNetworkLinkState other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[ExtensionAttribute]
internal static class Azure.ResourceManager.PrivateDns.ModelSerializationExtensions : object {
    internal static ModelReaderWriterOptions WireOptions;
    private static ModelSerializationExtensions();
    [ExtensionAttribute]
public static object GetObject(JsonElement element);
    [ExtensionAttribute]
public static Byte[] GetBytesFromBase64(JsonElement element, string format);
    [ExtensionAttribute]
public static DateTimeOffset GetDateTimeOffset(JsonElement element, string format);
    [ExtensionAttribute]
public static TimeSpan GetTimeSpan(JsonElement element, string format);
    [ExtensionAttribute]
public static char GetChar(JsonElement element);
    [ExtensionAttribute]
[ConditionalAttribute("DEBUG")]
public static void ThrowNonNullablePropertyIsNull(JsonProperty property);
    [ExtensionAttribute]
public static string GetRequiredString(JsonElement element);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, DateTime value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, TimeSpan value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, char value);
    [ExtensionAttribute]
public static void WriteBase64StringValue(Utf8JsonWriter writer, Byte[] value, string format);
    [ExtensionAttribute]
public static void WriteNumberValue(Utf8JsonWriter writer, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void WriteObjectValue(Utf8JsonWriter writer, T value, ModelReaderWriterOptions options);
    [ExtensionAttribute]
public static void WriteObjectValue(Utf8JsonWriter writer, object value, ModelReaderWriterOptions options);
}
internal static class Azure.ResourceManager.PrivateDns.Optional : object {
    public static bool IsCollectionDefined(IEnumerable`1<T> collection);
    public static bool IsCollectionDefined(IDictionary`2<TKey, TValue> collection);
    public static bool IsCollectionDefined(IReadOnlyDictionary`2<TKey, TValue> collection);
    public static bool IsDefined(Nullable`1<T> value);
    public static bool IsDefined(object value);
    public static bool IsDefined(JsonElement value);
    public static bool IsDefined(string value);
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordCollection : ArmCollection {
    private ClientDiagnostics _aaaaRecordInfoRecordSetsClientDiagnostics;
    private PrivateDnsAaaaRecordRestOperations _aaaaRecordInfoRecordSetsRestClient;
    internal PrivateDnsAaaaRecordCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<PrivateDnsAaaaRecordResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string aaaaRecordName, PrivateDnsAaaaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public virtual ArmOperation`1<PrivateDnsAaaaRecordResource> CreateOrUpdate(WaitUntil waitUntil, string aaaaRecordName, PrivateDnsAaaaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<PrivateDnsAaaaRecordResource>> GetAsync(string aaaaRecordName, CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsAaaaRecordResource> Get(string aaaaRecordName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<PrivateDnsAaaaRecordResource> GetAllAsync(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public virtual Pageable`1<PrivateDnsAaaaRecordResource> GetAll(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string aaaaRecordName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string aaaaRecordName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<PrivateDnsAaaaRecordResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<PrivateDnsAaaaRecordResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordData : PrivateDnsBaseRecordData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IList`1<PrivateDnsAaaaRecordInfo> <PrivateDnsAaaaRecords>k__BackingField;
    public IList`1<PrivateDnsAaaaRecordInfo> PrivateDnsAaaaRecords { get; }
    internal PrivateDnsAaaaRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, Nullable`1<bool> isAutoRegistered, IList`1<PrivateDnsAaaaRecordInfo> aaaaRecords, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsAaaaRecordData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsAaaaRecordData DeserializePrivateDnsAaaaRecordData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsAaaaRecordData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordData>.GetFormatFromOptions(ModelReaderWriterOptions options);
    [CompilerGeneratedAttribute]
public IList`1<PrivateDnsAaaaRecordInfo> get_PrivateDnsAaaaRecords();
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordResource : ArmResource {
    private ClientDiagnostics _aaaaRecordInfoRecordSetsClientDiagnostics;
    private PrivateDnsAaaaRecordRestOperations _aaaaRecordInfoRecordSetsRestClient;
    private PrivateDnsAaaaRecordData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public PrivateDnsAaaaRecordData Data { get; }
    internal PrivateDnsAaaaRecordResource(ArmClient client, PrivateDnsAaaaRecordData data);
    internal PrivateDnsAaaaRecordResource(ArmClient client, ResourceIdentifier id);
    private static PrivateDnsAaaaRecordResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string privateZoneName, string aaaaRecordName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual PrivateDnsAaaaRecordData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<PrivateDnsAaaaRecordResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsAaaaRecordResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordResource/<UpdateAsync>d__18")]
public virtual Task`1<Response`1<PrivateDnsAaaaRecordResource>> UpdateAsync(PrivateDnsAaaaRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsAaaaRecordResource> Update(PrivateDnsAaaaRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public PrivateDnsAaaaRecordRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsAaaaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordRestOperations/<CreateOrUpdateAsync>d__6")]
public Task`1<Response`1<PrivateDnsAaaaRecordData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsAaaaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public Response`1<PrivateDnsAaaaRecordData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsAaaaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsAaaaRecordData data, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordRestOperations/<UpdateAsync>d__9")]
public Task`1<Response`1<PrivateDnsAaaaRecordData>> UpdateAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsAaaaRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response`1<PrivateDnsAaaaRecordData> Update(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsAaaaRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordRestOperations/<DeleteAsync>d__12")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordRestOperations/<GetAsync>d__15")]
public Task`1<Response`1<PrivateDnsAaaaRecordData>> GetAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, CancellationToken cancellationToken);
    public Response`1<PrivateDnsAaaaRecordData> Get(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordRestOperations/<ListByTypeAsync>d__18")]
public Task`1<Response`1<PrivateDnsAaaaRecordListResult>> ListByTypeAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsAaaaRecordListResult> ListByType(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordRestOperations/<ListAsync>d__21")]
public Task`1<Response`1<PrivateDnsAaaaRecordListResult>> ListAsync(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsAaaaRecordListResult> List(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordRestOperations/<ListByTypeNextPageAsync>d__24")]
public Task`1<Response`1<PrivateDnsAaaaRecordListResult>> ListByTypeNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsAaaaRecordListResult> ListByTypeNextPage(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordRestOperations/<ListNextPageAsync>d__27")]
public Task`1<Response`1<PrivateDnsAaaaRecordListResult>> ListNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsAaaaRecordListResult> ListNextPage(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsARecordCollection : ArmCollection {
    private ClientDiagnostics _aRecordInfoRecordSetsClientDiagnostics;
    private PrivateDnsARecordRestOperations _aRecordInfoRecordSetsRestClient;
    internal PrivateDnsARecordCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsARecordCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<PrivateDnsARecordResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string aRecordName, PrivateDnsARecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public virtual ArmOperation`1<PrivateDnsARecordResource> CreateOrUpdate(WaitUntil waitUntil, string aRecordName, PrivateDnsARecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsARecordCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<PrivateDnsARecordResource>> GetAsync(string aRecordName, CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsARecordResource> Get(string aRecordName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<PrivateDnsARecordResource> GetAllAsync(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public virtual Pageable`1<PrivateDnsARecordResource> GetAll(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsARecordCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string aRecordName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string aRecordName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<PrivateDnsARecordResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.PrivateDns.PrivateDnsARecordResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<PrivateDnsARecordResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.PrivateDns.PrivateDnsARecordResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsARecordData : PrivateDnsBaseRecordData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IList`1<PrivateDnsARecordInfo> <PrivateDnsARecords>k__BackingField;
    public IList`1<PrivateDnsARecordInfo> PrivateDnsARecords { get; }
    internal PrivateDnsARecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, Nullable`1<bool> isAutoRegistered, IList`1<PrivateDnsARecordInfo> aRecords, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.PrivateDnsARecordData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsARecordData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.PrivateDnsARecordData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsARecordData DeserializePrivateDnsARecordData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsARecordData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsARecordData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsARecordData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsARecordData>.GetFormatFromOptions(ModelReaderWriterOptions options);
    [CompilerGeneratedAttribute]
public IList`1<PrivateDnsARecordInfo> get_PrivateDnsARecords();
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsARecordResource : ArmResource {
    private ClientDiagnostics _aRecordInfoRecordSetsClientDiagnostics;
    private PrivateDnsARecordRestOperations _aRecordInfoRecordSetsRestClient;
    private PrivateDnsARecordData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public PrivateDnsARecordData Data { get; }
    internal PrivateDnsARecordResource(ArmClient client, PrivateDnsARecordData data);
    internal PrivateDnsARecordResource(ArmClient client, ResourceIdentifier id);
    private static PrivateDnsARecordResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string privateZoneName, string aRecordName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual PrivateDnsARecordData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsARecordResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<PrivateDnsARecordResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsARecordResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsARecordResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsARecordResource/<UpdateAsync>d__18")]
public virtual Task`1<Response`1<PrivateDnsARecordResource>> UpdateAsync(PrivateDnsARecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsARecordResource> Update(PrivateDnsARecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.PrivateDns.PrivateDnsARecordRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public PrivateDnsARecordRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aRecordName, PrivateDnsARecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsARecordRestOperations/<CreateOrUpdateAsync>d__6")]
public Task`1<Response`1<PrivateDnsARecordData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aRecordName, PrivateDnsARecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public Response`1<PrivateDnsARecordData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aRecordName, PrivateDnsARecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aRecordName, PrivateDnsARecordData data, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsARecordRestOperations/<UpdateAsync>d__9")]
public Task`1<Response`1<PrivateDnsARecordData>> UpdateAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aRecordName, PrivateDnsARecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response`1<PrivateDnsARecordData> Update(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aRecordName, PrivateDnsARecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aRecordName, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsARecordRestOperations/<DeleteAsync>d__12")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aRecordName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aRecordName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aRecordName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsARecordRestOperations/<GetAsync>d__15")]
public Task`1<Response`1<PrivateDnsARecordData>> GetAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aRecordName, CancellationToken cancellationToken);
    public Response`1<PrivateDnsARecordData> Get(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aRecordName, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsARecordRestOperations/<ListByTypeAsync>d__18")]
public Task`1<Response`1<PrivateDnsARecordListResult>> ListByTypeAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsARecordListResult> ListByType(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsARecordRestOperations/<ListAsync>d__21")]
public Task`1<Response`1<PrivateDnsARecordListResult>> ListAsync(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsARecordListResult> List(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsARecordRestOperations/<ListByTypeNextPageAsync>d__24")]
public Task`1<Response`1<PrivateDnsARecordListResult>> ListByTypeNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsARecordListResult> ListByTypeNextPage(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsARecordRestOperations/<ListNextPageAsync>d__27")]
public Task`1<Response`1<PrivateDnsARecordListResult>> ListNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsARecordListResult> ListNextPage(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.PrivateDns.PrivateDnsArmOperation : ArmOperation {
    private OperationInternal _operation;
    private Nullable`1<RehydrationToken> _completeRehydrationToken;
    private NextLinkOperationImplementation _nextLinkOperation;
    private string _operationId;
    public string Id { get; }
    public bool HasCompleted { get; }
    internal PrivateDnsArmOperation(Response response, Nullable`1<RehydrationToken> rehydrationToken);
    internal PrivateDnsArmOperation(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Request request, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    private string GetOperationId(Nullable`1<RehydrationToken> rehydrationToken);
    public virtual string get_Id();
    public virtual Nullable`1<RehydrationToken> GetRehydrationToken();
    public virtual bool get_HasCompleted();
    public virtual Response GetRawResponse();
    public virtual Response UpdateStatus(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public virtual Response WaitForCompletionResponse(CancellationToken cancellationToken);
    public virtual Response WaitForCompletionResponse(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> WaitForCompletionResponseAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> WaitForCompletionResponseAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.PrivateDns.PrivateDnsArmOperation`1 : ArmOperation`1<T> {
    private OperationInternal`1<T> _operation;
    private Nullable`1<RehydrationToken> _completeRehydrationToken;
    private NextLinkOperationImplementation _nextLinkOperation;
    private string _operationId;
    public string Id { get; }
    public T Value { get; }
    public bool HasValue { get; }
    public bool HasCompleted { get; }
    internal PrivateDnsArmOperation`1(Response`1<T> response, Nullable`1<RehydrationToken> rehydrationToken);
    internal PrivateDnsArmOperation`1(IOperationSource`1<T> source, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Request request, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    private string GetOperationId(Nullable`1<RehydrationToken> rehydrationToken);
    public virtual string get_Id();
    public virtual Nullable`1<RehydrationToken> GetRehydrationToken();
    public virtual T get_Value();
    public virtual bool get_HasValue();
    public virtual bool get_HasCompleted();
    public virtual Response GetRawResponse();
    public virtual Response UpdateStatus(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public virtual Response`1<T> WaitForCompletion(CancellationToken cancellationToken);
    public virtual Response`1<T> WaitForCompletion(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsBaseRecordData : ResourceData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private Nullable`1<ETag> <ETag>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <TtlInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Fqdn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsAutoRegistered>k__BackingField;
    public Nullable`1<ETag> ETag { get; public set; }
    public IDictionary`2<string, string> Metadata { get; }
    public Nullable`1<long> TtlInSeconds { get; public set; }
    public string Fqdn { get; }
    public Nullable`1<bool> IsAutoRegistered { get; }
    internal PrivateDnsBaseRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, Nullable`1<bool> isAutoRegistered, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.PrivateDnsBaseRecordData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsBaseRecordData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.PrivateDnsBaseRecordData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsBaseRecordData DeserializeRecordData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsBaseRecordData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsBaseRecordData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsBaseRecordData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsBaseRecordData>.GetFormatFromOptions(ModelReaderWriterOptions options);
    [CompilerGeneratedAttribute]
public Nullable`1<ETag> get_ETag();
    [CompilerGeneratedAttribute]
public void set_ETag(Nullable`1<ETag> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Metadata();
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_TtlInSeconds();
    [CompilerGeneratedAttribute]
public void set_TtlInSeconds(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_Fqdn();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsAutoRegistered();
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordCollection : ArmCollection {
    private ClientDiagnostics _cnameRecordInfoRecordSetsClientDiagnostics;
    private PrivateDnsCnameRecordRestOperations _cnameRecordInfoRecordSetsRestClient;
    internal PrivateDnsCnameRecordCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<PrivateDnsCnameRecordResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string cnameRecordName, PrivateDnsCnameRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public virtual ArmOperation`1<PrivateDnsCnameRecordResource> CreateOrUpdate(WaitUntil waitUntil, string cnameRecordName, PrivateDnsCnameRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<PrivateDnsCnameRecordResource>> GetAsync(string cnameRecordName, CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsCnameRecordResource> Get(string cnameRecordName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<PrivateDnsCnameRecordResource> GetAllAsync(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public virtual Pageable`1<PrivateDnsCnameRecordResource> GetAll(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string cnameRecordName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string cnameRecordName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<PrivateDnsCnameRecordResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<PrivateDnsCnameRecordResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordData : PrivateDnsBaseRecordData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private PrivateDnsCnameRecordInfo <PrivateDnsCnameRecord>k__BackingField;
    internal PrivateDnsCnameRecordInfo PrivateDnsCnameRecord { get; internal set; }
    public string Cname { get; public set; }
    internal PrivateDnsCnameRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, Nullable`1<bool> isAutoRegistered, PrivateDnsCnameRecordInfo cnameRecord, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsCnameRecordData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsCnameRecordData DeserializePrivateDnsCnameRecordData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsCnameRecordData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordData>.GetFormatFromOptions(ModelReaderWriterOptions options);
    [CompilerGeneratedAttribute]
internal PrivateDnsCnameRecordInfo get_PrivateDnsCnameRecord();
    [CompilerGeneratedAttribute]
internal void set_PrivateDnsCnameRecord(PrivateDnsCnameRecordInfo value);
    public string get_Cname();
    public void set_Cname(string value);
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordResource : ArmResource {
    private ClientDiagnostics _cnameRecordInfoRecordSetsClientDiagnostics;
    private PrivateDnsCnameRecordRestOperations _cnameRecordInfoRecordSetsRestClient;
    private PrivateDnsCnameRecordData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public PrivateDnsCnameRecordData Data { get; }
    internal PrivateDnsCnameRecordResource(ArmClient client, PrivateDnsCnameRecordData data);
    internal PrivateDnsCnameRecordResource(ArmClient client, ResourceIdentifier id);
    private static PrivateDnsCnameRecordResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string privateZoneName, string cnameRecordName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual PrivateDnsCnameRecordData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<PrivateDnsCnameRecordResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsCnameRecordResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordResource/<UpdateAsync>d__18")]
public virtual Task`1<Response`1<PrivateDnsCnameRecordResource>> UpdateAsync(PrivateDnsCnameRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsCnameRecordResource> Update(PrivateDnsCnameRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public PrivateDnsCnameRecordRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsCnameRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordRestOperations/<CreateOrUpdateAsync>d__6")]
public Task`1<Response`1<PrivateDnsCnameRecordData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsCnameRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public Response`1<PrivateDnsCnameRecordData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsCnameRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsCnameRecordData data, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordRestOperations/<UpdateAsync>d__9")]
public Task`1<Response`1<PrivateDnsCnameRecordData>> UpdateAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsCnameRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response`1<PrivateDnsCnameRecordData> Update(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsCnameRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordRestOperations/<DeleteAsync>d__12")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordRestOperations/<GetAsync>d__15")]
public Task`1<Response`1<PrivateDnsCnameRecordData>> GetAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, CancellationToken cancellationToken);
    public Response`1<PrivateDnsCnameRecordData> Get(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordRestOperations/<ListByTypeAsync>d__18")]
public Task`1<Response`1<PrivateDnsCnameRecordListResult>> ListByTypeAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsCnameRecordListResult> ListByType(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordRestOperations/<ListAsync>d__21")]
public Task`1<Response`1<PrivateDnsCnameRecordListResult>> ListAsync(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsCnameRecordListResult> List(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordRestOperations/<ListByTypeNextPageAsync>d__24")]
public Task`1<Response`1<PrivateDnsCnameRecordListResult>> ListByTypeNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsCnameRecordListResult> ListByTypeNextPage(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordRestOperations/<ListNextPageAsync>d__27")]
public Task`1<Response`1<PrivateDnsCnameRecordListResult>> ListNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsCnameRecordListResult> ListNextPage(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Azure.ResourceManager.PrivateDns.PrivateDnsExtensions : object {
    private static MockablePrivateDnsArmClient GetMockablePrivateDnsArmClient(ArmClient client);
    private static MockablePrivateDnsResourceGroupResource GetMockablePrivateDnsResourceGroupResource(ArmResource resource);
    private static MockablePrivateDnsSubscriptionResource GetMockablePrivateDnsSubscriptionResource(ArmResource resource);
    [ExtensionAttribute]
public static PrivateDnsZoneResource GetPrivateDnsZoneResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static VirtualNetworkLinkResource GetVirtualNetworkLinkResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static PrivateDnsARecordResource GetPrivateDnsARecordResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static PrivateDnsAaaaRecordResource GetPrivateDnsAaaaRecordResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static PrivateDnsCnameRecordResource GetPrivateDnsCnameRecordResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static PrivateDnsMXRecordResource GetPrivateDnsMXRecordResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static PrivateDnsPtrRecordResource GetPrivateDnsPtrRecordResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static PrivateDnsSoaRecordResource GetPrivateDnsSoaRecordResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static PrivateDnsSrvRecordResource GetPrivateDnsSrvRecordResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static PrivateDnsTxtRecordResource GetPrivateDnsTxtRecordResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static PrivateDnsZoneCollection GetPrivateDnsZones(ResourceGroupResource resourceGroupResource);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsExtensions/<GetPrivateDnsZoneAsync>d__14")]
[ExtensionAttribute]
[ForwardsClientCallsAttribute]
public static Task`1<Response`1<PrivateDnsZoneResource>> GetPrivateDnsZoneAsync(ResourceGroupResource resourceGroupResource, string privateZoneName, CancellationToken cancellationToken);
    [ExtensionAttribute]
[ForwardsClientCallsAttribute]
public static Response`1<PrivateDnsZoneResource> GetPrivateDnsZone(ResourceGroupResource resourceGroupResource, string privateZoneName, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static AsyncPageable`1<PrivateDnsZoneResource> GetPrivateDnsZonesAsync(SubscriptionResource subscriptionResource, Nullable`1<int> top, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Pageable`1<PrivateDnsZoneResource> GetPrivateDnsZones(SubscriptionResource subscriptionResource, Nullable`1<int> top, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordCollection : ArmCollection {
    private ClientDiagnostics _mxRecordRecordSetsClientDiagnostics;
    private PrivateDnsMXRecordRestOperations _mxRecordRecordSetsRestClient;
    internal PrivateDnsMXRecordCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<PrivateDnsMXRecordResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string mxRecordName, PrivateDnsMXRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public virtual ArmOperation`1<PrivateDnsMXRecordResource> CreateOrUpdate(WaitUntil waitUntil, string mxRecordName, PrivateDnsMXRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<PrivateDnsMXRecordResource>> GetAsync(string mxRecordName, CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsMXRecordResource> Get(string mxRecordName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<PrivateDnsMXRecordResource> GetAllAsync(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public virtual Pageable`1<PrivateDnsMXRecordResource> GetAll(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string mxRecordName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string mxRecordName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<PrivateDnsMXRecordResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<PrivateDnsMXRecordResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordData : PrivateDnsBaseRecordData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IList`1<PrivateDnsMXRecordInfo> <PrivateDnsMXRecords>k__BackingField;
    public IList`1<PrivateDnsMXRecordInfo> PrivateDnsMXRecords { get; }
    internal PrivateDnsMXRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, Nullable`1<bool> isAutoRegistered, IList`1<PrivateDnsMXRecordInfo> mxRecords, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsMXRecordData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsMXRecordData DeserializePrivateDnsMXRecordData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsMXRecordData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordData>.GetFormatFromOptions(ModelReaderWriterOptions options);
    [CompilerGeneratedAttribute]
public IList`1<PrivateDnsMXRecordInfo> get_PrivateDnsMXRecords();
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordResource : ArmResource {
    private ClientDiagnostics _mxRecordRecordSetsClientDiagnostics;
    private PrivateDnsMXRecordRestOperations _mxRecordRecordSetsRestClient;
    private PrivateDnsMXRecordData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public PrivateDnsMXRecordData Data { get; }
    internal PrivateDnsMXRecordResource(ArmClient client, PrivateDnsMXRecordData data);
    internal PrivateDnsMXRecordResource(ArmClient client, ResourceIdentifier id);
    private static PrivateDnsMXRecordResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string privateZoneName, string mxRecordName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual PrivateDnsMXRecordData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<PrivateDnsMXRecordResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsMXRecordResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordResource/<UpdateAsync>d__18")]
public virtual Task`1<Response`1<PrivateDnsMXRecordResource>> UpdateAsync(PrivateDnsMXRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsMXRecordResource> Update(PrivateDnsMXRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public PrivateDnsMXRecordRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsMXRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordRestOperations/<CreateOrUpdateAsync>d__6")]
public Task`1<Response`1<PrivateDnsMXRecordData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsMXRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public Response`1<PrivateDnsMXRecordData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsMXRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsMXRecordData data, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordRestOperations/<UpdateAsync>d__9")]
public Task`1<Response`1<PrivateDnsMXRecordData>> UpdateAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsMXRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response`1<PrivateDnsMXRecordData> Update(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsMXRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordRestOperations/<DeleteAsync>d__12")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordRestOperations/<GetAsync>d__15")]
public Task`1<Response`1<PrivateDnsMXRecordData>> GetAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, CancellationToken cancellationToken);
    public Response`1<PrivateDnsMXRecordData> Get(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordRestOperations/<ListByTypeAsync>d__18")]
public Task`1<Response`1<PrivateDnsMXRecordListResult>> ListByTypeAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsMXRecordListResult> ListByType(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordRestOperations/<ListAsync>d__21")]
public Task`1<Response`1<PrivateDnsMXRecordListResult>> ListAsync(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsMXRecordListResult> List(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordRestOperations/<ListByTypeNextPageAsync>d__24")]
public Task`1<Response`1<PrivateDnsMXRecordListResult>> ListByTypeNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsMXRecordListResult> ListByTypeNextPage(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordRestOperations/<ListNextPageAsync>d__27")]
public Task`1<Response`1<PrivateDnsMXRecordListResult>> ListNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsMXRecordListResult> ListNextPage(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordCollection : ArmCollection {
    private ClientDiagnostics _ptrRecordInfoRecordSetsClientDiagnostics;
    private PrivateDnsPtrRecordRestOperations _ptrRecordInfoRecordSetsRestClient;
    internal PrivateDnsPtrRecordCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<PrivateDnsPtrRecordResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string ptrRecordName, PrivateDnsPtrRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public virtual ArmOperation`1<PrivateDnsPtrRecordResource> CreateOrUpdate(WaitUntil waitUntil, string ptrRecordName, PrivateDnsPtrRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<PrivateDnsPtrRecordResource>> GetAsync(string ptrRecordName, CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsPtrRecordResource> Get(string ptrRecordName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<PrivateDnsPtrRecordResource> GetAllAsync(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public virtual Pageable`1<PrivateDnsPtrRecordResource> GetAll(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string ptrRecordName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string ptrRecordName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<PrivateDnsPtrRecordResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<PrivateDnsPtrRecordResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordData : PrivateDnsBaseRecordData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IList`1<PrivateDnsPtrRecordInfo> <PrivateDnsPtrRecords>k__BackingField;
    public IList`1<PrivateDnsPtrRecordInfo> PrivateDnsPtrRecords { get; }
    internal PrivateDnsPtrRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, Nullable`1<bool> isAutoRegistered, IList`1<PrivateDnsPtrRecordInfo> ptrRecords, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsPtrRecordData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsPtrRecordData DeserializePrivateDnsPtrRecordData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsPtrRecordData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordData>.GetFormatFromOptions(ModelReaderWriterOptions options);
    [CompilerGeneratedAttribute]
public IList`1<PrivateDnsPtrRecordInfo> get_PrivateDnsPtrRecords();
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordResource : ArmResource {
    private ClientDiagnostics _ptrRecordInfoRecordSetsClientDiagnostics;
    private PrivateDnsPtrRecordRestOperations _ptrRecordInfoRecordSetsRestClient;
    private PrivateDnsPtrRecordData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public PrivateDnsPtrRecordData Data { get; }
    internal PrivateDnsPtrRecordResource(ArmClient client, PrivateDnsPtrRecordData data);
    internal PrivateDnsPtrRecordResource(ArmClient client, ResourceIdentifier id);
    private static PrivateDnsPtrRecordResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string privateZoneName, string ptrRecordName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual PrivateDnsPtrRecordData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<PrivateDnsPtrRecordResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsPtrRecordResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordResource/<UpdateAsync>d__18")]
public virtual Task`1<Response`1<PrivateDnsPtrRecordResource>> UpdateAsync(PrivateDnsPtrRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsPtrRecordResource> Update(PrivateDnsPtrRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public PrivateDnsPtrRecordRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsPtrRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordRestOperations/<CreateOrUpdateAsync>d__6")]
public Task`1<Response`1<PrivateDnsPtrRecordData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsPtrRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public Response`1<PrivateDnsPtrRecordData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsPtrRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsPtrRecordData data, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordRestOperations/<UpdateAsync>d__9")]
public Task`1<Response`1<PrivateDnsPtrRecordData>> UpdateAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsPtrRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response`1<PrivateDnsPtrRecordData> Update(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsPtrRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordRestOperations/<DeleteAsync>d__12")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordRestOperations/<GetAsync>d__15")]
public Task`1<Response`1<PrivateDnsPtrRecordData>> GetAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, CancellationToken cancellationToken);
    public Response`1<PrivateDnsPtrRecordData> Get(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordRestOperations/<ListByTypeAsync>d__18")]
public Task`1<Response`1<PrivateDnsPtrRecordListResult>> ListByTypeAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsPtrRecordListResult> ListByType(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordRestOperations/<ListAsync>d__21")]
public Task`1<Response`1<PrivateDnsPtrRecordListResult>> ListAsync(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsPtrRecordListResult> List(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordRestOperations/<ListByTypeNextPageAsync>d__24")]
public Task`1<Response`1<PrivateDnsPtrRecordListResult>> ListByTypeNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsPtrRecordListResult> ListByTypeNextPage(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordRestOperations/<ListNextPageAsync>d__27")]
public Task`1<Response`1<PrivateDnsPtrRecordListResult>> ListNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsPtrRecordListResult> ListNextPage(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsRecordData : PrivateDnsBaseRecordData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IList`1<PrivateDnsARecordInfo> <ARecords>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<PrivateDnsAaaaRecordInfo> <AaaaRecords>k__BackingField;
    [CompilerGeneratedAttribute]
private PrivateDnsCnameRecordInfo <PrivateDnsCnameRecordInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<PrivateDnsMXRecordInfo> <MXRecords>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<PrivateDnsPtrRecordInfo> <PtrRecords>k__BackingField;
    [CompilerGeneratedAttribute]
private PrivateDnsSoaRecordInfo <PrivateDnsSoaRecordInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<PrivateDnsSrvRecordInfo> <SrvRecords>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<PrivateDnsTxtRecordInfo> <TxtRecords>k__BackingField;
    public IList`1<PrivateDnsARecordInfo> ARecords { get; }
    public IList`1<PrivateDnsAaaaRecordInfo> AaaaRecords { get; }
    internal PrivateDnsCnameRecordInfo PrivateDnsCnameRecordInfo { get; internal set; }
    public string Cname { get; public set; }
    public IList`1<PrivateDnsMXRecordInfo> MXRecords { get; }
    public IList`1<PrivateDnsPtrRecordInfo> PtrRecords { get; }
    public PrivateDnsSoaRecordInfo PrivateDnsSoaRecordInfo { get; public set; }
    public IList`1<PrivateDnsSrvRecordInfo> SrvRecords { get; }
    public IList`1<PrivateDnsTxtRecordInfo> TxtRecords { get; }
    internal PrivateDnsRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, Nullable`1<bool> isAutoRegistered, IList`1<PrivateDnsARecordInfo> aRecords, IList`1<PrivateDnsAaaaRecordInfo> aaaaRecords, PrivateDnsCnameRecordInfo privateDnsCnameRecordInfo, IList`1<PrivateDnsMXRecordInfo> mxRecords, IList`1<PrivateDnsPtrRecordInfo> ptrRecords, PrivateDnsSoaRecordInfo privateDnsSoaRecordInfo, IList`1<PrivateDnsSrvRecordInfo> srvRecords, IList`1<PrivateDnsTxtRecordInfo> txtRecords, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.PrivateDnsRecordData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsRecordData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.PrivateDnsRecordData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsRecordData DeserializePrivateDnsRecordData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsRecordData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsRecordData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsRecordData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsRecordData>.GetFormatFromOptions(ModelReaderWriterOptions options);
    [CompilerGeneratedAttribute]
public IList`1<PrivateDnsARecordInfo> get_ARecords();
    [CompilerGeneratedAttribute]
public IList`1<PrivateDnsAaaaRecordInfo> get_AaaaRecords();
    [CompilerGeneratedAttribute]
internal PrivateDnsCnameRecordInfo get_PrivateDnsCnameRecordInfo();
    [CompilerGeneratedAttribute]
internal void set_PrivateDnsCnameRecordInfo(PrivateDnsCnameRecordInfo value);
    public string get_Cname();
    public void set_Cname(string value);
    [CompilerGeneratedAttribute]
public IList`1<PrivateDnsMXRecordInfo> get_MXRecords();
    [CompilerGeneratedAttribute]
public IList`1<PrivateDnsPtrRecordInfo> get_PtrRecords();
    [CompilerGeneratedAttribute]
public PrivateDnsSoaRecordInfo get_PrivateDnsSoaRecordInfo();
    [CompilerGeneratedAttribute]
public void set_PrivateDnsSoaRecordInfo(PrivateDnsSoaRecordInfo value);
    [CompilerGeneratedAttribute]
public IList`1<PrivateDnsSrvRecordInfo> get_SrvRecords();
    [CompilerGeneratedAttribute]
public IList`1<PrivateDnsTxtRecordInfo> get_TxtRecords();
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordCollection : ArmCollection {
    private ClientDiagnostics _soaRecordInfoRecordSetsClientDiagnostics;
    private PrivateDnsSoaRecordRestOperations _soaRecordInfoRecordSetsRestClient;
    internal PrivateDnsSoaRecordCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<PrivateDnsSoaRecordResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string soaRecordName, PrivateDnsSoaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public virtual ArmOperation`1<PrivateDnsSoaRecordResource> CreateOrUpdate(WaitUntil waitUntil, string soaRecordName, PrivateDnsSoaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<PrivateDnsSoaRecordResource>> GetAsync(string soaRecordName, CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsSoaRecordResource> Get(string soaRecordName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<PrivateDnsSoaRecordResource> GetAllAsync(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public virtual Pageable`1<PrivateDnsSoaRecordResource> GetAll(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string soaRecordName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string soaRecordName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<PrivateDnsSoaRecordResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<PrivateDnsSoaRecordResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordData : PrivateDnsBaseRecordData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private PrivateDnsSoaRecordInfo <PrivateDnsSoaRecord>k__BackingField;
    public PrivateDnsSoaRecordInfo PrivateDnsSoaRecord { get; public set; }
    internal PrivateDnsSoaRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, Nullable`1<bool> isAutoRegistered, PrivateDnsSoaRecordInfo soaRecord, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsSoaRecordData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsSoaRecordData DeserializePrivateDnsSoaRecordData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsSoaRecordData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordData>.GetFormatFromOptions(ModelReaderWriterOptions options);
    [CompilerGeneratedAttribute]
public PrivateDnsSoaRecordInfo get_PrivateDnsSoaRecord();
    [CompilerGeneratedAttribute]
public void set_PrivateDnsSoaRecord(PrivateDnsSoaRecordInfo value);
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordResource : ArmResource {
    private ClientDiagnostics _soaRecordInfoRecordSetsClientDiagnostics;
    private PrivateDnsSoaRecordRestOperations _soaRecordInfoRecordSetsRestClient;
    private PrivateDnsSoaRecordData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public PrivateDnsSoaRecordData Data { get; }
    internal PrivateDnsSoaRecordResource(ArmClient client, PrivateDnsSoaRecordData data);
    internal PrivateDnsSoaRecordResource(ArmClient client, ResourceIdentifier id);
    private static PrivateDnsSoaRecordResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string privateZoneName, string soaRecordName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual PrivateDnsSoaRecordData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<PrivateDnsSoaRecordResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsSoaRecordResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordResource/<UpdateAsync>d__16")]
public virtual Task`1<Response`1<PrivateDnsSoaRecordResource>> UpdateAsync(PrivateDnsSoaRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsSoaRecordResource> Update(PrivateDnsSoaRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public PrivateDnsSoaRecordRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsSoaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordRestOperations/<CreateOrUpdateAsync>d__6")]
public Task`1<Response`1<PrivateDnsSoaRecordData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsSoaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public Response`1<PrivateDnsSoaRecordData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsSoaRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsSoaRecordData data, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordRestOperations/<UpdateAsync>d__9")]
public Task`1<Response`1<PrivateDnsSoaRecordData>> UpdateAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsSoaRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response`1<PrivateDnsSoaRecordData> Update(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsSoaRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordRestOperations/<GetAsync>d__12")]
public Task`1<Response`1<PrivateDnsSoaRecordData>> GetAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, CancellationToken cancellationToken);
    public Response`1<PrivateDnsSoaRecordData> Get(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordRestOperations/<ListByTypeAsync>d__15")]
public Task`1<Response`1<PrivateDnsSoaRecordListResult>> ListByTypeAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsSoaRecordListResult> ListByType(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordRestOperations/<ListAsync>d__18")]
public Task`1<Response`1<PrivateDnsSoaRecordListResult>> ListAsync(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsSoaRecordListResult> List(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordRestOperations/<ListByTypeNextPageAsync>d__21")]
public Task`1<Response`1<PrivateDnsSoaRecordListResult>> ListByTypeNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsSoaRecordListResult> ListByTypeNextPage(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordRestOperations/<ListNextPageAsync>d__24")]
public Task`1<Response`1<PrivateDnsSoaRecordListResult>> ListNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsSoaRecordListResult> ListNextPage(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordCollection : ArmCollection {
    private ClientDiagnostics _srvRecordInfoRecordSetsClientDiagnostics;
    private PrivateDnsSrvRecordRestOperations _srvRecordInfoRecordSetsRestClient;
    internal PrivateDnsSrvRecordCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<PrivateDnsSrvRecordResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string srvRecordName, PrivateDnsSrvRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public virtual ArmOperation`1<PrivateDnsSrvRecordResource> CreateOrUpdate(WaitUntil waitUntil, string srvRecordName, PrivateDnsSrvRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<PrivateDnsSrvRecordResource>> GetAsync(string srvRecordName, CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsSrvRecordResource> Get(string srvRecordName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<PrivateDnsSrvRecordResource> GetAllAsync(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public virtual Pageable`1<PrivateDnsSrvRecordResource> GetAll(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string srvRecordName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string srvRecordName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<PrivateDnsSrvRecordResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<PrivateDnsSrvRecordResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordData : PrivateDnsBaseRecordData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IList`1<PrivateDnsSrvRecordInfo> <PrivateDnsSrvRecords>k__BackingField;
    public IList`1<PrivateDnsSrvRecordInfo> PrivateDnsSrvRecords { get; }
    internal PrivateDnsSrvRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, Nullable`1<bool> isAutoRegistered, IList`1<PrivateDnsSrvRecordInfo> srvRecords, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsSrvRecordData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsSrvRecordData DeserializePrivateDnsSrvRecordData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsSrvRecordData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordData>.GetFormatFromOptions(ModelReaderWriterOptions options);
    [CompilerGeneratedAttribute]
public IList`1<PrivateDnsSrvRecordInfo> get_PrivateDnsSrvRecords();
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordResource : ArmResource {
    private ClientDiagnostics _srvRecordInfoRecordSetsClientDiagnostics;
    private PrivateDnsSrvRecordRestOperations _srvRecordInfoRecordSetsRestClient;
    private PrivateDnsSrvRecordData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public PrivateDnsSrvRecordData Data { get; }
    internal PrivateDnsSrvRecordResource(ArmClient client, PrivateDnsSrvRecordData data);
    internal PrivateDnsSrvRecordResource(ArmClient client, ResourceIdentifier id);
    private static PrivateDnsSrvRecordResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string privateZoneName, string srvRecordName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual PrivateDnsSrvRecordData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<PrivateDnsSrvRecordResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsSrvRecordResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordResource/<UpdateAsync>d__18")]
public virtual Task`1<Response`1<PrivateDnsSrvRecordResource>> UpdateAsync(PrivateDnsSrvRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsSrvRecordResource> Update(PrivateDnsSrvRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public PrivateDnsSrvRecordRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsSrvRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordRestOperations/<CreateOrUpdateAsync>d__6")]
public Task`1<Response`1<PrivateDnsSrvRecordData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsSrvRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public Response`1<PrivateDnsSrvRecordData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsSrvRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsSrvRecordData data, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordRestOperations/<UpdateAsync>d__9")]
public Task`1<Response`1<PrivateDnsSrvRecordData>> UpdateAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsSrvRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response`1<PrivateDnsSrvRecordData> Update(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsSrvRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordRestOperations/<DeleteAsync>d__12")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordRestOperations/<GetAsync>d__15")]
public Task`1<Response`1<PrivateDnsSrvRecordData>> GetAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, CancellationToken cancellationToken);
    public Response`1<PrivateDnsSrvRecordData> Get(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordRestOperations/<ListByTypeAsync>d__18")]
public Task`1<Response`1<PrivateDnsSrvRecordListResult>> ListByTypeAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsSrvRecordListResult> ListByType(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordRestOperations/<ListAsync>d__21")]
public Task`1<Response`1<PrivateDnsSrvRecordListResult>> ListAsync(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsSrvRecordListResult> List(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordRestOperations/<ListByTypeNextPageAsync>d__24")]
public Task`1<Response`1<PrivateDnsSrvRecordListResult>> ListByTypeNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsSrvRecordListResult> ListByTypeNextPage(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordRestOperations/<ListNextPageAsync>d__27")]
public Task`1<Response`1<PrivateDnsSrvRecordListResult>> ListNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsSrvRecordListResult> ListNextPage(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordCollection : ArmCollection {
    private ClientDiagnostics _txtRecordInfoRecordSetsClientDiagnostics;
    private PrivateDnsTxtRecordRestOperations _txtRecordInfoRecordSetsRestClient;
    internal PrivateDnsTxtRecordCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<PrivateDnsTxtRecordResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string txtRecordName, PrivateDnsTxtRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public virtual ArmOperation`1<PrivateDnsTxtRecordResource> CreateOrUpdate(WaitUntil waitUntil, string txtRecordName, PrivateDnsTxtRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<PrivateDnsTxtRecordResource>> GetAsync(string txtRecordName, CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsTxtRecordResource> Get(string txtRecordName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<PrivateDnsTxtRecordResource> GetAllAsync(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public virtual Pageable`1<PrivateDnsTxtRecordResource> GetAll(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string txtRecordName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string txtRecordName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<PrivateDnsTxtRecordResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<PrivateDnsTxtRecordResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordData : PrivateDnsBaseRecordData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IList`1<PrivateDnsTxtRecordInfo> <PrivateDnsTxtRecords>k__BackingField;
    public IList`1<PrivateDnsTxtRecordInfo> PrivateDnsTxtRecords { get; }
    internal PrivateDnsTxtRecordData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Nullable`1<ETag> etag, IDictionary`2<string, string> metadata, Nullable`1<long> ttl, string fqdn, Nullable`1<bool> isAutoRegistered, IList`1<PrivateDnsTxtRecordInfo> txtRecords, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsTxtRecordData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsTxtRecordData DeserializePrivateDnsTxtRecordData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsTxtRecordData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordData>.GetFormatFromOptions(ModelReaderWriterOptions options);
    [CompilerGeneratedAttribute]
public IList`1<PrivateDnsTxtRecordInfo> get_PrivateDnsTxtRecords();
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordResource : ArmResource {
    private ClientDiagnostics _txtRecordInfoRecordSetsClientDiagnostics;
    private PrivateDnsTxtRecordRestOperations _txtRecordInfoRecordSetsRestClient;
    private PrivateDnsTxtRecordData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public PrivateDnsTxtRecordData Data { get; }
    internal PrivateDnsTxtRecordResource(ArmClient client, PrivateDnsTxtRecordData data);
    internal PrivateDnsTxtRecordResource(ArmClient client, ResourceIdentifier id);
    private static PrivateDnsTxtRecordResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string privateZoneName, string txtRecordName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual PrivateDnsTxtRecordData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<PrivateDnsTxtRecordResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsTxtRecordResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordResource/<UpdateAsync>d__18")]
public virtual Task`1<Response`1<PrivateDnsTxtRecordResource>> UpdateAsync(PrivateDnsTxtRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsTxtRecordResource> Update(PrivateDnsTxtRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public PrivateDnsTxtRecordRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsTxtRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordRestOperations/<CreateOrUpdateAsync>d__6")]
public Task`1<Response`1<PrivateDnsTxtRecordData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsTxtRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public Response`1<PrivateDnsTxtRecordData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsTxtRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsTxtRecordData data, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordRestOperations/<UpdateAsync>d__9")]
public Task`1<Response`1<PrivateDnsTxtRecordData>> UpdateAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsTxtRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response`1<PrivateDnsTxtRecordData> Update(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, PrivateDnsTxtRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordRestOperations/<DeleteAsync>d__12")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordRestOperations/<GetAsync>d__15")]
public Task`1<Response`1<PrivateDnsTxtRecordData>> GetAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, CancellationToken cancellationToken);
    public Response`1<PrivateDnsTxtRecordData> Get(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string aaaaRecordName, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordRestOperations/<ListByTypeAsync>d__18")]
public Task`1<Response`1<PrivateDnsTxtRecordListResult>> ListByTypeAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsTxtRecordListResult> ListByType(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordRestOperations/<ListAsync>d__21")]
public Task`1<Response`1<PrivateDnsTxtRecordListResult>> ListAsync(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsTxtRecordListResult> List(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListByTypeNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordRestOperations/<ListByTypeNextPageAsync>d__24")]
public Task`1<Response`1<PrivateDnsTxtRecordListResult>> ListByTypeNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsTxtRecordListResult> ListByTypeNextPage(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordRestOperations/<ListNextPageAsync>d__27")]
public Task`1<Response`1<PrivateDnsTxtRecordListResult>> ListNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsTxtRecordListResult> ListNextPage(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsZoneCollection : ArmCollection {
    private ClientDiagnostics _privateDnsZonePrivateZonesClientDiagnostics;
    private PrivateZonesRestOperations _privateDnsZonePrivateZonesRestClient;
    internal PrivateDnsZoneCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsZoneCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<PrivateDnsZoneResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string privateZoneName, PrivateDnsZoneData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public virtual ArmOperation`1<PrivateDnsZoneResource> CreateOrUpdate(WaitUntil waitUntil, string privateZoneName, PrivateDnsZoneData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsZoneCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<PrivateDnsZoneResource>> GetAsync(string privateZoneName, CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsZoneResource> Get(string privateZoneName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<PrivateDnsZoneResource> GetAllAsync(Nullable`1<int> top, CancellationToken cancellationToken);
    public virtual Pageable`1<PrivateDnsZoneResource> GetAll(Nullable`1<int> top, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsZoneCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string privateZoneName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string privateZoneName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsZoneCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<PrivateDnsZoneResource>> GetIfExistsAsync(string privateZoneName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<PrivateDnsZoneResource> GetIfExists(string privateZoneName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<PrivateDnsZoneResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<PrivateDnsZoneResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsZoneData : TrackedResourceData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private Nullable`1<ETag> <ETag>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MaxNumberOfRecords>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <NumberOfRecords>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MaxNumberOfVirtualNetworkLinks>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <NumberOfVirtualNetworkLinks>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MaxNumberOfVirtualNetworkLinksWithRegistration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <NumberOfVirtualNetworkLinksWithRegistration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<PrivateDnsProvisioningState> <PrivateDnsProvisioningState>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InternalId>k__BackingField;
    [WirePathAttribute("etag")]
public Nullable`1<ETag> ETag { get; public set; }
    [WirePathAttribute("properties.maxNumberOfRecordSets")]
public Nullable`1<long> MaxNumberOfRecords { get; }
    [WirePathAttribute("properties.numberOfRecordSets")]
public Nullable`1<long> NumberOfRecords { get; }
    [WirePathAttribute("properties.maxNumberOfVirtualNetworkLinks")]
public Nullable`1<long> MaxNumberOfVirtualNetworkLinks { get; }
    [WirePathAttribute("properties.numberOfVirtualNetworkLinks")]
public Nullable`1<long> NumberOfVirtualNetworkLinks { get; }
    [WirePathAttribute("properties.maxNumberOfVirtualNetworkLinksWithRegistration")]
public Nullable`1<long> MaxNumberOfVirtualNetworkLinksWithRegistration { get; }
    [WirePathAttribute("properties.numberOfVirtualNetworkLinksWithRegistration")]
public Nullable`1<long> NumberOfVirtualNetworkLinksWithRegistration { get; }
    [WirePathAttribute("properties.provisioningState")]
public Nullable`1<PrivateDnsProvisioningState> PrivateDnsProvisioningState { get; }
    [WirePathAttribute("properties.internalId")]
public string InternalId { get; }
    public PrivateDnsZoneData(AzureLocation location);
    internal PrivateDnsZoneData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary`2<string, string> tags, AzureLocation location, Nullable`1<ETag> etag, Nullable`1<long> maxNumberOfRecords, Nullable`1<long> numberOfRecords, Nullable`1<long> maxNumberOfVirtualNetworkLinks, Nullable`1<long> numberOfVirtualNetworkLinks, Nullable`1<long> maxNumberOfVirtualNetworkLinksWithRegistration, Nullable`1<long> numberOfVirtualNetworkLinksWithRegistration, Nullable`1<PrivateDnsProvisioningState> privateDnsProvisioningState, string internalId, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public Nullable`1<ETag> get_ETag();
    [CompilerGeneratedAttribute]
public void set_ETag(Nullable`1<ETag> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_MaxNumberOfRecords();
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_NumberOfRecords();
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_MaxNumberOfVirtualNetworkLinks();
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_NumberOfVirtualNetworkLinks();
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_MaxNumberOfVirtualNetworkLinksWithRegistration();
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_NumberOfVirtualNetworkLinksWithRegistration();
    [CompilerGeneratedAttribute]
public Nullable`1<PrivateDnsProvisioningState> get_PrivateDnsProvisioningState();
    [CompilerGeneratedAttribute]
public string get_InternalId();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.PrivateDnsZoneData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsZoneData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.PrivateDnsZoneData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static PrivateDnsZoneData DeserializePrivateDnsZoneData(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsZoneData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override PrivateDnsZoneData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsZoneData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.PrivateDnsZoneData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.PrivateDns.PrivateDnsZoneOperationSource : object {
    private ArmClient _client;
    internal PrivateDnsZoneOperationSource(ArmClient client);
    private sealed virtual override PrivateDnsZoneResource Azure.Core.IOperationSource<Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource>.CreateResult(Response response, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsZoneOperationSource/<Azure-Core-IOperationSource<Azure-ResourceManager-PrivateDns-PrivateDnsZoneResource>-CreateResultAsync>d__3")]
private sealed virtual override ValueTask`1<PrivateDnsZoneResource> Azure.Core.IOperationSource<Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource>.CreateResultAsync(Response response, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource : ArmResource {
    private ClientDiagnostics _PrivateDnsZoneClientDiagnostics;
    private PrivateZonesRestOperations _PrivateDnsZoneRestClient;
    private ClientDiagnostics _recordSetsClientDiagnostics;
    private RecordSetsRestOperations _recordSetsRestClient;
    private PrivateDnsZoneData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public PrivateDnsZoneData Data { get; }
    internal PrivateDnsZoneResource(ArmClient client, PrivateDnsZoneData data);
    internal PrivateDnsZoneResource(ArmClient client, ResourceIdentifier id);
    private static PrivateDnsZoneResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string privateZoneName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual PrivateDnsZoneData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    public virtual VirtualNetworkLinkCollection GetVirtualNetworkLinks();
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource/<GetVirtualNetworkLinkAsync>d__17")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<VirtualNetworkLinkResource>> GetVirtualNetworkLinkAsync(string virtualNetworkLinkName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<VirtualNetworkLinkResource> GetVirtualNetworkLink(string virtualNetworkLinkName, CancellationToken cancellationToken);
    public virtual PrivateDnsARecordCollection GetPrivateDnsARecords();
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource/<GetPrivateDnsARecordAsync>d__20")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<PrivateDnsARecordResource>> GetPrivateDnsARecordAsync(string aRecordName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<PrivateDnsARecordResource> GetPrivateDnsARecord(string aRecordName, CancellationToken cancellationToken);
    public virtual PrivateDnsAaaaRecordCollection GetPrivateDnsAaaaRecords();
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource/<GetPrivateDnsAaaaRecordAsync>d__23")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<PrivateDnsAaaaRecordResource>> GetPrivateDnsAaaaRecordAsync(string aaaaRecordName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<PrivateDnsAaaaRecordResource> GetPrivateDnsAaaaRecord(string aaaaRecordName, CancellationToken cancellationToken);
    public virtual PrivateDnsCnameRecordCollection GetPrivateDnsCnameRecords();
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource/<GetPrivateDnsCnameRecordAsync>d__26")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<PrivateDnsCnameRecordResource>> GetPrivateDnsCnameRecordAsync(string cnameRecordName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<PrivateDnsCnameRecordResource> GetPrivateDnsCnameRecord(string cnameRecordName, CancellationToken cancellationToken);
    public virtual PrivateDnsMXRecordCollection GetPrivateDnsMXRecords();
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource/<GetPrivateDnsMXRecordAsync>d__29")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<PrivateDnsMXRecordResource>> GetPrivateDnsMXRecordAsync(string mxRecordName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<PrivateDnsMXRecordResource> GetPrivateDnsMXRecord(string mxRecordName, CancellationToken cancellationToken);
    public virtual PrivateDnsPtrRecordCollection GetPrivateDnsPtrRecords();
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource/<GetPrivateDnsPtrRecordAsync>d__32")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<PrivateDnsPtrRecordResource>> GetPrivateDnsPtrRecordAsync(string ptrRecordName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<PrivateDnsPtrRecordResource> GetPrivateDnsPtrRecord(string ptrRecordName, CancellationToken cancellationToken);
    public virtual PrivateDnsSoaRecordCollection GetPrivateDnsSoaRecords();
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource/<GetPrivateDnsSoaRecordAsync>d__35")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<PrivateDnsSoaRecordResource>> GetPrivateDnsSoaRecordAsync(string soaRecordName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<PrivateDnsSoaRecordResource> GetPrivateDnsSoaRecord(string soaRecordName, CancellationToken cancellationToken);
    public virtual PrivateDnsSrvRecordCollection GetPrivateDnsSrvRecords();
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource/<GetPrivateDnsSrvRecordAsync>d__38")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<PrivateDnsSrvRecordResource>> GetPrivateDnsSrvRecordAsync(string srvRecordName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<PrivateDnsSrvRecordResource> GetPrivateDnsSrvRecord(string srvRecordName, CancellationToken cancellationToken);
    public virtual PrivateDnsTxtRecordCollection GetPrivateDnsTxtRecords();
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource/<GetPrivateDnsTxtRecordAsync>d__41")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<PrivateDnsTxtRecordResource>> GetPrivateDnsTxtRecordAsync(string txtRecordName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<PrivateDnsTxtRecordResource> GetPrivateDnsTxtRecord(string txtRecordName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource/<GetAsync>d__43")]
public virtual Task`1<Response`1<PrivateDnsZoneResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsZoneResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource/<DeleteAsync>d__45")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource/<UpdateAsync>d__47")]
public virtual Task`1<ArmOperation`1<PrivateDnsZoneResource>> UpdateAsync(WaitUntil waitUntil, PrivateDnsZoneData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual ArmOperation`1<PrivateDnsZoneResource> Update(WaitUntil waitUntil, PrivateDnsZoneData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<PrivateDnsRecordData> GetRecordsAsync(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public virtual Pageable`1<PrivateDnsRecordData> GetRecords(Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource/<AddTagAsync>d__51")]
public virtual Task`1<Response`1<PrivateDnsZoneResource>> AddTagAsync(string key, string value, CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsZoneResource> AddTag(string key, string value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource/<SetTagsAsync>d__53")]
public virtual Task`1<Response`1<PrivateDnsZoneResource>> SetTagsAsync(IDictionary`2<string, string> tags, CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsZoneResource> SetTags(IDictionary`2<string, string> tags, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource/<RemoveTagAsync>d__55")]
public virtual Task`1<Response`1<PrivateDnsZoneResource>> RemoveTagAsync(string key, CancellationToken cancellationToken);
    public virtual Response`1<PrivateDnsZoneResource> RemoveTag(string key, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private VirtualNetworkLinkCollection <GetVirtualNetworkLinks>b__16_0(ArmClient Client);
    [CompilerGeneratedAttribute]
private PrivateDnsARecordCollection <GetPrivateDnsARecords>b__19_0(ArmClient Client);
    [CompilerGeneratedAttribute]
private PrivateDnsAaaaRecordCollection <GetPrivateDnsAaaaRecords>b__22_0(ArmClient Client);
    [CompilerGeneratedAttribute]
private PrivateDnsCnameRecordCollection <GetPrivateDnsCnameRecords>b__25_0(ArmClient Client);
    [CompilerGeneratedAttribute]
private PrivateDnsMXRecordCollection <GetPrivateDnsMXRecords>b__28_0(ArmClient Client);
    [CompilerGeneratedAttribute]
private PrivateDnsPtrRecordCollection <GetPrivateDnsPtrRecords>b__31_0(ArmClient Client);
    [CompilerGeneratedAttribute]
private PrivateDnsSoaRecordCollection <GetPrivateDnsSoaRecords>b__34_0(ArmClient Client);
    [CompilerGeneratedAttribute]
private PrivateDnsSrvRecordCollection <GetPrivateDnsSrvRecords>b__37_0(ArmClient Client);
    [CompilerGeneratedAttribute]
private PrivateDnsTxtRecordCollection <GetPrivateDnsTxtRecords>b__40_0(ArmClient Client);
}
internal class Azure.ResourceManager.PrivateDns.PrivateZonesRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public PrivateZonesRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal RequestUriBuilder CreateCreateOrUpdateRequestUri(string subscriptionId, string resourceGroupName, string privateZoneName, PrivateDnsZoneData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string privateZoneName, PrivateDnsZoneData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateZonesRestOperations/<CreateOrUpdateAsync>d__7")]
public Task`1<Response> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string privateZoneName, PrivateDnsZoneData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public Response CreateOrUpdate(string subscriptionId, string resourceGroupName, string privateZoneName, PrivateDnsZoneData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateUpdateRequestUri(string subscriptionId, string resourceGroupName, string privateZoneName, PrivateDnsZoneData data, Nullable`1<ETag> ifMatch);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string privateZoneName, PrivateDnsZoneData data, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateZonesRestOperations/<UpdateAsync>d__11")]
public Task`1<Response> UpdateAsync(string subscriptionId, string resourceGroupName, string privateZoneName, PrivateDnsZoneData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response Update(string subscriptionId, string resourceGroupName, string privateZoneName, PrivateDnsZoneData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateDeleteRequestUri(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<ETag> ifMatch);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateZonesRestOperations/<DeleteAsync>d__15")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateGetRequestUri(string subscriptionId, string resourceGroupName, string privateZoneName);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string privateZoneName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateZonesRestOperations/<GetAsync>d__19")]
public Task`1<Response`1<PrivateDnsZoneData>> GetAsync(string subscriptionId, string resourceGroupName, string privateZoneName, CancellationToken cancellationToken);
    public Response`1<PrivateDnsZoneData> Get(string subscriptionId, string resourceGroupName, string privateZoneName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListRequestUri(string subscriptionId, Nullable`1<int> top);
    internal HttpMessage CreateListRequest(string subscriptionId, Nullable`1<int> top);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateZonesRestOperations/<ListAsync>d__23")]
public Task`1<Response`1<PrivateZoneListResult>> ListAsync(string subscriptionId, Nullable`1<int> top, CancellationToken cancellationToken);
    public Response`1<PrivateZoneListResult> List(string subscriptionId, Nullable`1<int> top, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListByResourceGroupRequestUri(string subscriptionId, string resourceGroupName, Nullable`1<int> top);
    internal HttpMessage CreateListByResourceGroupRequest(string subscriptionId, string resourceGroupName, Nullable`1<int> top);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateZonesRestOperations/<ListByResourceGroupAsync>d__27")]
public Task`1<Response`1<PrivateZoneListResult>> ListByResourceGroupAsync(string subscriptionId, string resourceGroupName, Nullable`1<int> top, CancellationToken cancellationToken);
    public Response`1<PrivateZoneListResult> ListByResourceGroup(string subscriptionId, string resourceGroupName, Nullable`1<int> top, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListNextPageRequestUri(string nextLink, string subscriptionId, Nullable`1<int> top);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, Nullable`1<int> top);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateZonesRestOperations/<ListNextPageAsync>d__31")]
public Task`1<Response`1<PrivateZoneListResult>> ListNextPageAsync(string nextLink, string subscriptionId, Nullable`1<int> top, CancellationToken cancellationToken);
    public Response`1<PrivateZoneListResult> ListNextPage(string nextLink, string subscriptionId, Nullable`1<int> top, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListByResourceGroupNextPageRequestUri(string nextLink, string subscriptionId, string resourceGroupName, Nullable`1<int> top);
    internal HttpMessage CreateListByResourceGroupNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, Nullable`1<int> top);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.PrivateZonesRestOperations/<ListByResourceGroupNextPageAsync>d__35")]
public Task`1<Response`1<PrivateZoneListResult>> ListByResourceGroupNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, Nullable`1<int> top, CancellationToken cancellationToken);
    public Response`1<PrivateZoneListResult> ListByResourceGroupNextPage(string nextLink, string subscriptionId, string resourceGroupName, Nullable`1<int> top, CancellationToken cancellationToken);
}
internal static class Azure.ResourceManager.PrivateDns.ProviderConstants : object {
    [CompilerGeneratedAttribute]
private static string <DefaultProviderNamespace>k__BackingField;
    public static string DefaultProviderNamespace { get; }
    private static ProviderConstants();
    [CompilerGeneratedAttribute]
public static string get_DefaultProviderNamespace();
}
internal class Azure.ResourceManager.PrivateDns.RecordSetsRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public RecordSetsRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal RequestUriBuilder CreateCreateOrUpdateRequestUri(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string relativeRecordSetName, PrivateDnsRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string relativeRecordSetName, PrivateDnsRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.RecordSetsRestOperations/<CreateOrUpdateAsync>d__7")]
public Task`1<Response`1<PrivateDnsRecordData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string relativeRecordSetName, PrivateDnsRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public Response`1<PrivateDnsRecordData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string relativeRecordSetName, PrivateDnsRecordData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateUpdateRequestUri(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string relativeRecordSetName, PrivateDnsRecordData data, Nullable`1<ETag> ifMatch);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string relativeRecordSetName, PrivateDnsRecordData data, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.RecordSetsRestOperations/<UpdateAsync>d__11")]
public Task`1<Response`1<PrivateDnsRecordData>> UpdateAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string relativeRecordSetName, PrivateDnsRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response`1<PrivateDnsRecordData> Update(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string relativeRecordSetName, PrivateDnsRecordData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateDeleteRequestUri(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.RecordSetsRestOperations/<DeleteAsync>d__15")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string relativeRecordSetName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateGetRequestUri(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string relativeRecordSetName);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string relativeRecordSetName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.RecordSetsRestOperations/<GetAsync>d__19")]
public Task`1<Response`1<PrivateDnsRecordData>> GetAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string relativeRecordSetName, CancellationToken cancellationToken);
    public Response`1<PrivateDnsRecordData> Get(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, string relativeRecordSetName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListByTypeRequestUri(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix);
    internal HttpMessage CreateListByTypeRequest(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.RecordSetsRestOperations/<ListByTypeAsync>d__23")]
public Task`1<Response`1<PrivateDnsRecordListResult>> ListByTypeAsync(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsRecordListResult> ListByType(string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListRequestUri(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.RecordSetsRestOperations/<ListAsync>d__27")]
public Task`1<Response`1<PrivateDnsRecordListResult>> ListAsync(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsRecordListResult> List(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListByTypeNextPageRequestUri(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix);
    internal HttpMessage CreateListByTypeNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.RecordSetsRestOperations/<ListByTypeNextPageAsync>d__31")]
public Task`1<Response`1<PrivateDnsRecordListResult>> ListByTypeNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsRecordListResult> ListByTypeNextPage(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, RecordType recordType, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListNextPageRequestUri(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.RecordSetsRestOperations/<ListNextPageAsync>d__35")]
public Task`1<Response`1<PrivateDnsRecordListResult>> ListNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
    public Response`1<PrivateDnsRecordListResult> ListNextPage(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, string recordsetnamesuffix, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.PrivateDns.Utf8JsonRequestContent : RequestContent {
    private MemoryStream _stream;
    private RequestContent _content;
    [CompilerGeneratedAttribute]
private Utf8JsonWriter <JsonWriter>k__BackingField;
    public Utf8JsonWriter JsonWriter { get; }
    [CompilerGeneratedAttribute]
public Utf8JsonWriter get_JsonWriter();
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.Utf8JsonRequestContent/<WriteToAsync>d__6")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellationToken);
    public virtual void WriteTo(Stream stream, CancellationToken cancellationToken);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
public class Azure.ResourceManager.PrivateDns.VirtualNetworkLinkCollection : ArmCollection {
    private ClientDiagnostics _virtualNetworkLinkClientDiagnostics;
    private VirtualNetworkLinksRestOperations _virtualNetworkLinkRestClient;
    internal VirtualNetworkLinkCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.VirtualNetworkLinkCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<VirtualNetworkLinkResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string virtualNetworkLinkName, VirtualNetworkLinkData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public virtual ArmOperation`1<VirtualNetworkLinkResource> CreateOrUpdate(WaitUntil waitUntil, string virtualNetworkLinkName, VirtualNetworkLinkData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.VirtualNetworkLinkCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<VirtualNetworkLinkResource>> GetAsync(string virtualNetworkLinkName, CancellationToken cancellationToken);
    public virtual Response`1<VirtualNetworkLinkResource> Get(string virtualNetworkLinkName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<VirtualNetworkLinkResource> GetAllAsync(Nullable`1<int> top, CancellationToken cancellationToken);
    public virtual Pageable`1<VirtualNetworkLinkResource> GetAll(Nullable`1<int> top, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.VirtualNetworkLinkCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string virtualNetworkLinkName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string virtualNetworkLinkName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.VirtualNetworkLinkCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<VirtualNetworkLinkResource>> GetIfExistsAsync(string virtualNetworkLinkName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<VirtualNetworkLinkResource> GetIfExists(string virtualNetworkLinkName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<VirtualNetworkLinkResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.PrivateDns.VirtualNetworkLinkResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<VirtualNetworkLinkResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.PrivateDns.VirtualNetworkLinkResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class Azure.ResourceManager.PrivateDns.VirtualNetworkLinkData : TrackedResourceData {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private Nullable`1<ETag> <ETag>k__BackingField;
    [CompilerGeneratedAttribute]
private WritableSubResource <VirtualNetwork>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RegistrationEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<PrivateDnsResolutionPolicy> <PrivateDnsResolutionPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<VirtualNetworkLinkState> <VirtualNetworkLinkState>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<PrivateDnsProvisioningState> <PrivateDnsProvisioningState>k__BackingField;
    [WirePathAttribute("etag")]
public Nullable`1<ETag> ETag { get; public set; }
    internal WritableSubResource VirtualNetwork { get; internal set; }
    [WirePathAttribute("properties.virtualNetwork.id")]
public ResourceIdentifier VirtualNetworkId { get; public set; }
    [WirePathAttribute("properties.registrationEnabled")]
public Nullable`1<bool> RegistrationEnabled { get; public set; }
    [WirePathAttribute("properties.resolutionPolicy")]
public Nullable`1<PrivateDnsResolutionPolicy> PrivateDnsResolutionPolicy { get; public set; }
    [WirePathAttribute("properties.virtualNetworkLinkState")]
public Nullable`1<VirtualNetworkLinkState> VirtualNetworkLinkState { get; }
    [WirePathAttribute("properties.provisioningState")]
public Nullable`1<PrivateDnsProvisioningState> PrivateDnsProvisioningState { get; }
    public VirtualNetworkLinkData(AzureLocation location);
    internal VirtualNetworkLinkData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary`2<string, string> tags, AzureLocation location, Nullable`1<ETag> etag, WritableSubResource virtualNetwork, Nullable`1<bool> registrationEnabled, Nullable`1<PrivateDnsResolutionPolicy> privateDnsResolutionPolicy, Nullable`1<VirtualNetworkLinkState> virtualNetworkLinkState, Nullable`1<PrivateDnsProvisioningState> privateDnsProvisioningState, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public Nullable`1<ETag> get_ETag();
    [CompilerGeneratedAttribute]
public void set_ETag(Nullable`1<ETag> value);
    [CompilerGeneratedAttribute]
internal WritableSubResource get_VirtualNetwork();
    [CompilerGeneratedAttribute]
internal void set_VirtualNetwork(WritableSubResource value);
    public ResourceIdentifier get_VirtualNetworkId();
    public void set_VirtualNetworkId(ResourceIdentifier value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_RegistrationEnabled();
    [CompilerGeneratedAttribute]
public void set_RegistrationEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<PrivateDnsResolutionPolicy> get_PrivateDnsResolutionPolicy();
    [CompilerGeneratedAttribute]
public void set_PrivateDnsResolutionPolicy(Nullable`1<PrivateDnsResolutionPolicy> value);
    [CompilerGeneratedAttribute]
public Nullable`1<VirtualNetworkLinkState> get_VirtualNetworkLinkState();
    [CompilerGeneratedAttribute]
public Nullable`1<PrivateDnsProvisioningState> get_PrivateDnsProvisioningState();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.VirtualNetworkLinkData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override VirtualNetworkLinkData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.VirtualNetworkLinkData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static VirtualNetworkLinkData DeserializeVirtualNetworkLinkData(JsonElement element, ModelReaderWriterOptions options);
    private BinaryData SerializeBicep(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.VirtualNetworkLinkData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override VirtualNetworkLinkData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.VirtualNetworkLinkData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.VirtualNetworkLinkData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.PrivateDns.VirtualNetworkLinkOperationSource : object {
    private ArmClient _client;
    internal VirtualNetworkLinkOperationSource(ArmClient client);
    private sealed virtual override VirtualNetworkLinkResource Azure.Core.IOperationSource<Azure.ResourceManager.PrivateDns.VirtualNetworkLinkResource>.CreateResult(Response response, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.VirtualNetworkLinkOperationSource/<Azure-Core-IOperationSource<Azure-ResourceManager-PrivateDns-VirtualNetworkLinkResource>-CreateResultAsync>d__3")]
private sealed virtual override ValueTask`1<VirtualNetworkLinkResource> Azure.Core.IOperationSource<Azure.ResourceManager.PrivateDns.VirtualNetworkLinkResource>.CreateResultAsync(Response response, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.PrivateDns.VirtualNetworkLinkResource : ArmResource {
    private ClientDiagnostics _virtualNetworkLinkClientDiagnostics;
    private VirtualNetworkLinksRestOperations _virtualNetworkLinkRestClient;
    private VirtualNetworkLinkData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public VirtualNetworkLinkData Data { get; }
    internal VirtualNetworkLinkResource(ArmClient client, VirtualNetworkLinkData data);
    internal VirtualNetworkLinkResource(ArmClient client, ResourceIdentifier id);
    private static VirtualNetworkLinkResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string privateZoneName, string virtualNetworkLinkName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual VirtualNetworkLinkData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.VirtualNetworkLinkResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<VirtualNetworkLinkResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<VirtualNetworkLinkResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.VirtualNetworkLinkResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.VirtualNetworkLinkResource/<UpdateAsync>d__18")]
public virtual Task`1<ArmOperation`1<VirtualNetworkLinkResource>> UpdateAsync(WaitUntil waitUntil, VirtualNetworkLinkData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public virtual ArmOperation`1<VirtualNetworkLinkResource> Update(WaitUntil waitUntil, VirtualNetworkLinkData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.VirtualNetworkLinkResource/<AddTagAsync>d__20")]
public virtual Task`1<Response`1<VirtualNetworkLinkResource>> AddTagAsync(string key, string value, CancellationToken cancellationToken);
    public virtual Response`1<VirtualNetworkLinkResource> AddTag(string key, string value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.VirtualNetworkLinkResource/<SetTagsAsync>d__22")]
public virtual Task`1<Response`1<VirtualNetworkLinkResource>> SetTagsAsync(IDictionary`2<string, string> tags, CancellationToken cancellationToken);
    public virtual Response`1<VirtualNetworkLinkResource> SetTags(IDictionary`2<string, string> tags, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.VirtualNetworkLinkResource/<RemoveTagAsync>d__24")]
public virtual Task`1<Response`1<VirtualNetworkLinkResource>> RemoveTagAsync(string key, CancellationToken cancellationToken);
    public virtual Response`1<VirtualNetworkLinkResource> RemoveTag(string key, CancellationToken cancellationToken);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.VirtualNetworkLinkData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override VirtualNetworkLinkData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.PrivateDns.VirtualNetworkLinkData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.VirtualNetworkLinkData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override VirtualNetworkLinkData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.VirtualNetworkLinkData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.PrivateDns.VirtualNetworkLinkData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.PrivateDns.VirtualNetworkLinksRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public VirtualNetworkLinksRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal RequestUriBuilder CreateCreateOrUpdateRequestUri(string subscriptionId, string resourceGroupName, string privateZoneName, string virtualNetworkLinkName, VirtualNetworkLinkData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string privateZoneName, string virtualNetworkLinkName, VirtualNetworkLinkData data, Nullable`1<ETag> ifMatch, string ifNoneMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.VirtualNetworkLinksRestOperations/<CreateOrUpdateAsync>d__7")]
public Task`1<Response> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string privateZoneName, string virtualNetworkLinkName, VirtualNetworkLinkData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    public Response CreateOrUpdate(string subscriptionId, string resourceGroupName, string privateZoneName, string virtualNetworkLinkName, VirtualNetworkLinkData data, Nullable`1<ETag> ifMatch, string ifNoneMatch, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateUpdateRequestUri(string subscriptionId, string resourceGroupName, string privateZoneName, string virtualNetworkLinkName, VirtualNetworkLinkData data, Nullable`1<ETag> ifMatch);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string privateZoneName, string virtualNetworkLinkName, VirtualNetworkLinkData data, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.VirtualNetworkLinksRestOperations/<UpdateAsync>d__11")]
public Task`1<Response> UpdateAsync(string subscriptionId, string resourceGroupName, string privateZoneName, string virtualNetworkLinkName, VirtualNetworkLinkData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response Update(string subscriptionId, string resourceGroupName, string privateZoneName, string virtualNetworkLinkName, VirtualNetworkLinkData data, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateDeleteRequestUri(string subscriptionId, string resourceGroupName, string privateZoneName, string virtualNetworkLinkName, Nullable`1<ETag> ifMatch);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string privateZoneName, string virtualNetworkLinkName, Nullable`1<ETag> ifMatch);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.VirtualNetworkLinksRestOperations/<DeleteAsync>d__15")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string privateZoneName, string virtualNetworkLinkName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string privateZoneName, string virtualNetworkLinkName, Nullable`1<ETag> ifMatch, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateGetRequestUri(string subscriptionId, string resourceGroupName, string privateZoneName, string virtualNetworkLinkName);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string privateZoneName, string virtualNetworkLinkName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.VirtualNetworkLinksRestOperations/<GetAsync>d__19")]
public Task`1<Response`1<VirtualNetworkLinkData>> GetAsync(string subscriptionId, string resourceGroupName, string privateZoneName, string virtualNetworkLinkName, CancellationToken cancellationToken);
    public Response`1<VirtualNetworkLinkData> Get(string subscriptionId, string resourceGroupName, string privateZoneName, string virtualNetworkLinkName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListRequestUri(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top);
    internal HttpMessage CreateListRequest(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.VirtualNetworkLinksRestOperations/<ListAsync>d__23")]
public Task`1<Response`1<VirtualNetworkLinkListResult>> ListAsync(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, CancellationToken cancellationToken);
    public Response`1<VirtualNetworkLinkListResult> List(string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListNextPageRequestUri(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top);
    internal HttpMessage CreateListNextPageRequest(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top);
    [AsyncStateMachineAttribute("Azure.ResourceManager.PrivateDns.VirtualNetworkLinksRestOperations/<ListNextPageAsync>d__27")]
public Task`1<Response`1<VirtualNetworkLinkListResult>> ListNextPageAsync(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, CancellationToken cancellationToken);
    public Response`1<VirtualNetworkLinkListResult> ListNextPage(string nextLink, string subscriptionId, string resourceGroupName, string privateZoneName, Nullable`1<int> top, CancellationToken cancellationToken);
}
[AttributeUsageAttribute("128")]
internal class Azure.ResourceManager.PrivateDns.WirePathAttribute : Attribute {
    private string _wirePath;
    public WirePathAttribute(string wirePath);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.ResourceManager.SharedExtensions : object {
    [ExtensionAttribute]
public static string SubstringAfterProviderNamespace(ResourceIdentifier resourceId);
    [ExtensionAttribute]
public static IDictionary`2<string, string> ReplaceWith(IDictionary`2<string, string> dest, IDictionary`2<string, string> src);
    [AsyncStateMachineAttribute("Azure.ResourceManager.SharedExtensions/<FirstOrDefaultAsync>d__2`1")]
[ExtensionAttribute]
public static Task`1<TSource> FirstOrDefaultAsync(AsyncPageable`1<TSource> source, Func`2<TSource, bool> predicate, CancellationToken token);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("28108")]
internal class System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute : Attribute {
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public DynamicallyAccessedMembersAttribute(DynamicallyAccessedMemberTypes memberTypes);
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
}
[FlagsAttribute]
internal enum System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes : Enum {
    public int value__;
    public static DynamicallyAccessedMemberTypes None;
    public static DynamicallyAccessedMemberTypes PublicParameterlessConstructor;
    public static DynamicallyAccessedMemberTypes PublicConstructors;
    public static DynamicallyAccessedMemberTypes NonPublicConstructors;
    public static DynamicallyAccessedMemberTypes PublicMethods;
    public static DynamicallyAccessedMemberTypes NonPublicMethods;
    public static DynamicallyAccessedMemberTypes PublicFields;
    public static DynamicallyAccessedMemberTypes NonPublicFields;
    public static DynamicallyAccessedMemberTypes PublicNestedTypes;
    public static DynamicallyAccessedMemberTypes NonPublicNestedTypes;
    public static DynamicallyAccessedMemberTypes PublicProperties;
    public static DynamicallyAccessedMemberTypes NonPublicProperties;
    public static DynamicallyAccessedMemberTypes PublicEvents;
    public static DynamicallyAccessedMemberTypes NonPublicEvents;
    public static DynamicallyAccessedMemberTypes Interfaces;
    public static DynamicallyAccessedMemberTypes All;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("352")]
internal class System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <MemberSignature>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssemblyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Condition>k__BackingField;
    public string MemberSignature { get; }
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public Type Type { get; }
    public string TypeName { get; }
    public string AssemblyName { get; }
    public string Condition { get; public set; }
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature, Type type);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature, string typeName, string assemblyName);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(DynamicallyAccessedMemberTypes memberTypes, Type type);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(DynamicallyAccessedMemberTypes memberTypes, string typeName, string assemblyName);
    [CompilerGeneratedAttribute]
public string get_MemberSignature();
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public string get_AssemblyName();
    [CompilerGeneratedAttribute]
public string get_Condition();
    [CompilerGeneratedAttribute]
public void set_Condition(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("100")]
internal class System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    [NullableAttribute("2")]
public string Url { get; public set; }
    public RequiresDynamicCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Url(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("100")]
internal class System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    [NullableAttribute("2")]
public string Url { get; public set; }
    public RequiresUnreferencedCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Url(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
internal class System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute : Attribute {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <CheckId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Justification>k__BackingField;
    [NullableAttribute("1")]
public string Category { get; }
    [NullableAttribute("1")]
public string CheckId { get; }
    public string Scope { get; public set; }
    public string Target { get; public set; }
    public string MessageId { get; public set; }
    public string Justification { get; public set; }
    [NullableContextAttribute("1")]
public UnconditionalSuppressMessageAttribute(string category, string checkId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Category();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_CheckId();
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public string get_MessageId();
    [CompilerGeneratedAttribute]
public void set_MessageId(string value);
    [CompilerGeneratedAttribute]
public string get_Justification();
    [CompilerGeneratedAttribute]
public void set_Justification(string value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
