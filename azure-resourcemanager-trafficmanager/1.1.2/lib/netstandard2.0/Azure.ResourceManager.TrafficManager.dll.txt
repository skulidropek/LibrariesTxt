[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Autorest.CSharp.Core.GeneratorPageableHelpers : object {
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Autorest.CSharp.Core.GeneratorPageableHelpers/<CreateAsyncPageable>d__8`1")]
public static ValueTask`1<Operation`1<AsyncPageable`1<T>>> CreateAsyncPageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Operation`1<Pageable`1<T>> CreatePageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreateEnumerable(Func`2<Nullable`1<int>, Page`1<T>> firstPageFunc, Func`3<string, Nullable`1<int>, Page`1<T>> nextPageFunc, Nullable`1<int> pageSize);
    public static AsyncPageable`1<T> CreateAsyncEnumerable(Func`2<Nullable`1<int>, Task`1<Page`1<T>>> firstPageFunc, Func`3<string, Nullable`1<int>, Task`1<Page`1<T>>> nextPageFunc, Nullable`1<int> pageSize);
}
internal static class Azure.Core.AppContextSwitchHelper : object {
    [NullableContextAttribute("1")]
public static bool GetConfigValue(string appContexSwitchName, string environmentVariableName);
}
internal class Azure.Core.ArrayBufferWriter`1 : object {
    private T[] _buffer;
    private static int DefaultInitialBufferSize;
    [CompilerGeneratedAttribute]
private int <WrittenCount>k__BackingField;
    public ReadOnlyMemory`1<T> WrittenMemory { get; }
    public ReadOnlySpan`1<T> WrittenSpan { get; }
    public int WrittenCount { get; private set; }
    public int Capacity { get; }
    public int FreeCapacity { get; }
    public ArrayBufferWriter`1(int initialCapacity);
    public ReadOnlyMemory`1<T> get_WrittenMemory();
    public ReadOnlySpan`1<T> get_WrittenSpan();
    [CompilerGeneratedAttribute]
public int get_WrittenCount();
    [CompilerGeneratedAttribute]
private void set_WrittenCount(int value);
    public int get_Capacity();
    public int get_FreeCapacity();
    public void Clear();
    public sealed virtual void Advance(int count);
    public sealed virtual Memory`1<T> GetMemory(int sizeHint);
    public sealed virtual Span`1<T> GetSpan(int sizeHint);
    private void CheckAndResizeBuffer(int sizeHint);
    private static void ThrowInvalidOperationException_AdvancedTooFar(int capacity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.AsyncLockWithValue`1 : object {
    private object _syncObj;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Queue`1<TaskCompletionSource`1<LockOrValue<T>>> _waiters;
    private bool _isLocked;
    private bool _hasValue;
    private long _index;
    [NullableAttribute("2")]
private T _value;
    public bool HasValue { get; }
    public AsyncLockWithValue`1(T value);
    public bool get_HasValue();
    [NullableContextAttribute("2")]
public bool TryGetValue(T& value);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Azure.Core.AsyncLockWithValue`1/<GetLockOrValueAsync>d__11")]
public ValueTask`1<LockOrValue<T>> GetLockOrValueAsync(bool async, CancellationToken cancellationToken);
    private void SetValue(T value, Int64& lockIndex);
    private void Reset(Int64& lockIndex);
    private void UnlockOrGetNextWaiter(Int64& lockIndex, TaskCompletionSource`1& nextWaiter);
}
[AttributeUsageAttribute("1")]
internal class Azure.Core.AzureResourceProviderNamespaceAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ResourceProviderNamespace>k__BackingField;
    public string ResourceProviderNamespace { get; }
    public AzureResourceProviderNamespaceAttribute(string resourceProviderNamespace);
    [CompilerGeneratedAttribute]
public string get_ResourceProviderNamespace();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
internal class Azure.Core.CodeGenClientAttribute : CodeGenTypeAttribute {
    [CompilerGeneratedAttribute]
private Type <ParentClient>k__BackingField;
    public Type ParentClient { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenClientAttribute(string originalName);
    [CompilerGeneratedAttribute]
public Type get_ParentClient();
    [CompilerGeneratedAttribute]
public void set_ParentClient(Type value);
}
[AttributeUsageAttribute("384")]
internal class Azure.Core.CodeGenMemberAttribute : CodeGenTypeAttribute {
    [NullableContextAttribute("1")]
public CodeGenMemberAttribute(string originalName);
}
[AttributeUsageAttribute("28")]
internal class Azure.Core.CodeGenModelAttribute : CodeGenTypeAttribute {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <Usage>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <Formats>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] Usage { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] Formats { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenModelAttribute(string originalName);
    [CompilerGeneratedAttribute]
public String[] get_Usage();
    [CompilerGeneratedAttribute]
public void set_Usage(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_Formats();
    [CompilerGeneratedAttribute]
public void set_Formats(String[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1")]
internal class Azure.Core.CodeGenOverrideServiceVersionsAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Versions>k__BackingField;
    public String[] Versions { get; }
    public CodeGenOverrideServiceVersionsAttribute(String[] versions);
    [CompilerGeneratedAttribute]
public String[] get_Versions();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("12")]
internal class Azure.Core.CodeGenSerializationAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <SerializationPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SerializationValueHook>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeserializationValueHook>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BicepSerializationValueHook>k__BackingField;
    public string PropertyName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] SerializationPath { get; }
    public string SerializationValueHook { get; public set; }
    public string DeserializationValueHook { get; public set; }
    public string BicepSerializationValueHook { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenSerializationAttribute(string propertyName);
    [NullableContextAttribute("1")]
public CodeGenSerializationAttribute(string propertyName, string serializationName);
    [NullableContextAttribute("1")]
public CodeGenSerializationAttribute(string propertyName, String[] serializationPath);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public void set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public String[] get_SerializationPath();
    [CompilerGeneratedAttribute]
public string get_SerializationValueHook();
    [CompilerGeneratedAttribute]
public void set_SerializationValueHook(string value);
    [CompilerGeneratedAttribute]
public string get_DeserializationValueHook();
    [CompilerGeneratedAttribute]
public void set_DeserializationValueHook(string value);
    [CompilerGeneratedAttribute]
public string get_BicepSerializationValueHook();
    [CompilerGeneratedAttribute]
public void set_BicepSerializationValueHook(string value);
}
[AttributeUsageAttribute("28")]
internal class Azure.Core.CodeGenSuppressAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Member>k__BackingField;
    [CompilerGeneratedAttribute]
private Type[] <Parameters>k__BackingField;
    public string Member { get; }
    public Type[] Parameters { get; }
    public CodeGenSuppressAttribute(string member, Type[] parameters);
    [CompilerGeneratedAttribute]
public string get_Member();
    [CompilerGeneratedAttribute]
public Type[] get_Parameters();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1")]
internal class Azure.Core.CodeGenSuppressTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Typename>k__BackingField;
    public string Typename { get; }
    public CodeGenSuppressTypeAttribute(string typename);
    [CompilerGeneratedAttribute]
public string get_Typename();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
internal class Azure.Core.CodeGenTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <OriginalName>k__BackingField;
    public string OriginalName { get; }
    public CodeGenTypeAttribute(string originalName);
    [CompilerGeneratedAttribute]
public string get_OriginalName();
}
internal class Azure.Core.FixedDelayWithNoJitterStrategy : DelayStrategy {
    private static TimeSpan DefaultDelay;
    private TimeSpan _delay;
    public FixedDelayWithNoJitterStrategy(Nullable`1<TimeSpan> suggestedDelay);
    private static FixedDelayWithNoJitterStrategy();
    [NullableContextAttribute("2")]
protected virtual TimeSpan GetNextDelayCore(Response response, int retryNumber);
}
internal class Azure.Core.FormUrlEncodedContent : RequestContent {
    private List`1<KeyValuePair`2<string, string>> _values;
    private Encoding Latin1;
    private Byte[] _bytes;
    public void Add(string parameter, string value);
    private void BuildIfNeeded();
    [AsyncStateMachineAttribute("Azure.Core.FormUrlEncodedContent/<WriteToAsync>d__5")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
    private Byte[] GetContentByteArray(IEnumerable`1<KeyValuePair`2<string, string>> nameValueCollection);
    private static string Encode(string data);
}
[AttributeUsageAttribute("64")]
internal class Azure.Core.ForwardsClientCallsAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <SkipChecks>k__BackingField;
    public bool SkipChecks { get; }
    public ForwardsClientCallsAttribute(bool skipChecks);
    [CompilerGeneratedAttribute]
public bool get_SkipChecks();
}
internal class Azure.Core.HttpMessageSanitizer : object {
    private static string LogAllValue;
    private bool _logAllHeaders;
    private bool _logFullQueries;
    private String[] _allowedQueryParameters;
    private string _redactedPlaceholder;
    private HashSet`1<string> _allowedHeaders;
    internal static HttpMessageSanitizer Default;
    public HttpMessageSanitizer(String[] allowedQueryParameters, String[] allowedHeaders, string redactedPlaceholder);
    private static HttpMessageSanitizer();
    public string SanitizeHeader(string name, string value);
    public string SanitizeUrl(string url);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.HttpPipelineExtensions : object {
    [AsyncStateMachineAttribute("Azure.Core.HttpPipelineExtensions/<ProcessMessageAsync>d__0")]
[ExtensionAttribute]
public static ValueTask`1<Response> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, RequestContext requestContext, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response ProcessMessage(HttpPipeline pipeline, HttpMessage message, RequestContext requestContext, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.HttpPipelineExtensions/<ProcessHeadAsBoolMessageAsync>d__2")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<bool>> ProcessHeadAsBoolMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, RequestContext requestContext);
    [ExtensionAttribute]
public static Response`1<bool> ProcessHeadAsBoolMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, RequestContext requestContext);
    [NullableContextAttribute("0")]
private static ValueTuple`2<CancellationToken, ErrorOptions> ApplyRequestContext(RequestContext requestContext);
}
internal interface Azure.Core.IOperation {
    public abstract virtual ValueTask`1<OperationState> UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("2")]
internal interface Azure.Core.IOperation`1 {
    public abstract virtual ValueTask`1<OperationState`1<T>> UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
internal interface Azure.Core.IOperationSource`1 {
    public abstract virtual T CreateResult(Response response, CancellationToken cancellationToken);
    public abstract virtual ValueTask`1<T> CreateResultAsync(Response response, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Azure.Core.IUtf8JsonSerializable {
    public abstract virtual void Write(Utf8JsonWriter writer);
}
[NullableContextAttribute("1")]
internal interface Azure.Core.IXmlSerializable {
    public abstract virtual void Write(XmlWriter writer, string nameHint);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.NextLinkOperationImplementation : object {
    internal static string NotSet;
    internal static string RehydrationTokenVersion;
    private static string ApiVersionParam;
    private static String[] FailureStates;
    private static String[] SuccessStates;
    private HeaderSource _headerSource;
    private Uri _startRequestUri;
    private OperationFinalStateVia _finalStateVia;
    private HttpPipeline _pipeline;
    [NullableAttribute("2")]
private string _apiVersion;
    [NullableAttribute("2")]
private string _lastKnownLocation;
    private string _nextRequestUri;
    [CompilerGeneratedAttribute]
private string <OperationId>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestMethod <RequestMethod>k__BackingField;
    public string OperationId { get; private set; }
    public RequestMethod RequestMethod { get; }
    private NextLinkOperationImplementation(HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, string nextRequestUri, HeaderSource headerSource, string lastKnownLocation, OperationFinalStateVia finalStateVia, string apiVersion, string operationId);
    private static NextLinkOperationImplementation();
    [CompilerGeneratedAttribute]
public string get_OperationId();
    [CompilerGeneratedAttribute]
private void set_OperationId(string value);
    [CompilerGeneratedAttribute]
public RequestMethod get_RequestMethod();
    public static IOperation Create(HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    public static IOperation`1<T> Create(IOperationSource`1<T> operationSource, HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    public static IOperation`1<T> Create(IOperationSource`1<T> operationSource, IOperation operation);
    public static IOperation Create(HttpPipeline pipeline, RehydrationToken rehydrationToken);
    private static string GetContentFromRehydrationToken(Dictionary`2<string, string> lroDetails, string key);
    private string ParseOperationId(Uri startRequestUri, string nextRequestUri);
    public RehydrationToken GetRehydrationToken();
    public static RehydrationToken GetRehydrationToken(RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia);
    public static RehydrationToken GetRehydrationToken(RequestMethod requestMethod, Uri startRequestUri, string nextRequestUri, string headerSource, string lastKnownLocation, string finalStateVia, string operationId);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Azure.Core.NextLinkOperationImplementation/<UpdateStateAsync>d__29")]
public sealed virtual ValueTask`1<OperationState> UpdateStateAsync(bool async, CancellationToken cancellationToken);
    private static OperationState GetOperationStateFromFinalResponse(RequestMethod requestMethod, Response response);
    private void UpdateNextRequestUri(ResponseHeaders headers);
    internal static string AppendOrReplaceApiVersion(string uri, string apiVersion);
    [NullableContextAttribute("0")]
internal static bool TryGetApiVersion(Uri startRequestUri, ReadOnlySpan`1& apiVersion);
    [NullableContextAttribute("2")]
private string GetFinalUri(string resourceLocation);
    private Response GetResponse(string uri, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.NextLinkOperationImplementation/<GetResponseAsync>d__36")]
private ValueTask`1<Response> GetResponseAsync(string uri, CancellationToken cancellationToken);
    private HttpMessage CreateRequest(string uri);
    private static bool IsFinalState(Response response, HeaderSource headerSource, Nullable`1& failureState, String& resourceLocation);
    private static string GetRequiredString(JsonElement& element);
    private static bool ShouldIgnoreHeader(RequestMethod method, Response response);
    private static HeaderSource GetHeaderSource(RequestMethod requestMethod, Uri requestUri, Response response, string apiVersion, String& nextRequestUri);
    private static void AssertNotNull(T value, string name);
}
internal enum Azure.Core.OperationFinalStateVia : Enum {
    public int value__;
    public static OperationFinalStateVia AzureAsyncOperation;
    public static OperationFinalStateVia Location;
    public static OperationFinalStateVia OriginalUri;
    public static OperationFinalStateVia OperationLocation;
    public static OperationFinalStateVia LocationOverride;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.OperationHelpers : object {
    public static T GetValue(T& value);
    [NullableContextAttribute("0")]
public static T GetValue(Nullable`1& value);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionAsync>d__2`1")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<TResult>> DefaultWaitForCompletionAsync(Operation`1<TResult> operation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionAsync>d__3`1")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<TResult>> DefaultWaitForCompletionAsync(Operation`1<TResult> operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response`1<TResult> DefaultWaitForCompletion(Operation`1<TResult> operation, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response`1<TResult> DefaultWaitForCompletion(Operation`1<TResult> operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionResponseAsync>d__6")]
[ExtensionAttribute]
public static ValueTask`1<Response> DefaultWaitForCompletionResponseAsync(Operation operation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionResponseAsync>d__7")]
[ExtensionAttribute]
public static ValueTask`1<Response> DefaultWaitForCompletionResponseAsync(Operation operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response DefaultWaitForCompletionResponse(Operation operation, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response DefaultWaitForCompletionResponse(Operation operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationInternal : OperationInternalBase {
    private OperationInternal`1<VoidValue> _internalOperation;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public OperationInternal(IOperation operation, ClientDiagnostics clientDiagnostics, Response rawResponse, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    internal OperationInternal(OperationState finalState);
    public static OperationInternal Succeeded(Response rawResponse);
    public static OperationInternal Failed(Response rawResponse, RequestFailedException operationFailedException);
    public virtual Response get_RawResponse();
    public virtual bool get_HasCompleted();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal/<UpdateStatusAsync>d__9")]
protected virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationInternal`1 : OperationInternalBase {
    private IOperation`1<T> _operation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AsyncLockWithValue`1<OperationState`1<T>> _stateLock;
    private Response _rawResponse;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasValue { get; }
    public T Value { get; }
    public OperationInternal`1(IOperation`1<T> operation, ClientDiagnostics clientDiagnostics, Response rawResponse, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    internal OperationInternal`1(OperationState`1<T> finalState);
    public static OperationInternal`1<T> Succeeded(Response rawResponse, T value);
    public static OperationInternal`1<T> Failed(Response rawResponse, RequestFailedException operationFailedException);
    public virtual Response get_RawResponse();
    public virtual bool get_HasCompleted();
    public bool get_HasValue();
    public T get_Value();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__15")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__16")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__19")]
private ValueTask`1<Response`1<T>> WaitForCompletionAsync(bool async, Nullable`1<TimeSpan> pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<UpdateStatusAsync>d__20")]
protected virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
    private static Response GetResponseFromState(OperationState`1<T> state);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Azure.Core.OperationInternalBase : object {
    private ClientDiagnostics _diagnostics;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IReadOnlyDictionary`2<string, string> _scopeAttributes;
    [NullableAttribute("2")]
private DelayStrategy _fallbackStrategy;
    private AsyncLockWithValue`1<Response> _responseLock;
    private string _waitForCompletionResponseScopeName;
    protected string _updateStatusScopeName;
    protected string _waitForCompletionScopeName;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    protected OperationInternalBase(Response rawResponse);
    protected OperationInternalBase(ClientDiagnostics clientDiagnostics, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    public abstract virtual Response get_RawResponse();
    public abstract virtual bool get_HasCompleted();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<UpdateStatusAsync>d__13")]
public ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public Response UpdateStatus(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__15")]
public ValueTask`1<Response> WaitForCompletionResponseAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__16")]
public ValueTask`1<Response> WaitForCompletionResponseAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__19")]
protected ValueTask`1<Response> WaitForCompletionResponseAsync(bool async, Nullable`1<TimeSpan> pollingInterval, string scopeName, CancellationToken cancellationToken);
    protected abstract virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
    protected DiagnosticScope CreateScope(string scopeName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationPoller : object {
    private DelayStrategy _delayStrategy;
    [NullableContextAttribute("2")]
public OperationPoller(DelayStrategy strategy);
    public ValueTask`1<Response> WaitForCompletionResponseAsync(Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public ValueTask`1<Response> WaitForCompletionResponseAsync(OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__6`1")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(Operation`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(Operation`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__8`1")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(OperationInternal`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(OperationInternal`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__10")]
private ValueTask`1<Response> WaitForCompletionAsync(bool async, Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__11")]
private ValueTask`1<Response> WaitForCompletionAsync(bool async, OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<Delay>d__12")]
private static ValueTask Delay(bool async, TimeSpan delay, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.OperationState : ValueType {
    [CompilerGeneratedAttribute]
private Response <RawResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasSucceeded>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private RequestFailedException <OperationFailedException>k__BackingField;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasSucceeded { get; }
    [NullableAttribute("2")]
public RequestFailedException OperationFailedException { get; }
    private OperationState(Response rawResponse, bool hasCompleted, bool hasSucceeded, RequestFailedException operationFailedException);
    [CompilerGeneratedAttribute]
public Response get_RawResponse();
    [CompilerGeneratedAttribute]
public bool get_HasCompleted();
    [CompilerGeneratedAttribute]
public bool get_HasSucceeded();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public RequestFailedException get_OperationFailedException();
    public static OperationState Success(Response rawResponse);
    public static OperationState Failure(Response rawResponse, RequestFailedException operationFailedException);
    public static OperationState Pending(Response rawResponse);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.OperationState`1 : ValueType {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Response <RawResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasSucceeded>k__BackingField;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestFailedException <OperationFailedException>k__BackingField;
    [NullableAttribute("1")]
public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasSucceeded { get; }
    public T Value { get; }
    public RequestFailedException OperationFailedException { get; }
    private OperationState`1(Response rawResponse, bool hasCompleted, bool hasSucceeded, T value, RequestFailedException operationFailedException);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Response get_RawResponse();
    [CompilerGeneratedAttribute]
public bool get_HasCompleted();
    [CompilerGeneratedAttribute]
public bool get_HasSucceeded();
    [CompilerGeneratedAttribute]
public T get_Value();
    [CompilerGeneratedAttribute]
public RequestFailedException get_OperationFailedException();
    [NullableContextAttribute("1")]
public static OperationState`1<T> Success(Response rawResponse, T value);
    [NullableContextAttribute("1")]
public static OperationState`1<T> Failure(Response rawResponse, RequestFailedException operationFailedException);
    [NullableContextAttribute("1")]
public static OperationState`1<T> Pending(Response rawResponse);
}
internal static class Azure.Core.Page : object {
    [NullableContextAttribute("1")]
public static Page`1<T> FromValues(IEnumerable`1<T> values, string continuationToken, Response response);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.PageableHelpers : object {
    private static Byte[] DefaultItemPropertyName;
    private static Byte[] DefaultNextLinkPropertyName;
    private static PageableHelpers();
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.PageableHelpers/<CreateAsyncPageable>d__10`1")]
public static ValueTask`1<Operation`1<AsyncPageable`1<T>>> CreateAsyncPageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Operation`1<Pageable`1<T>> CreatePageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreateEnumerable(Func`2<Nullable`1<int>, Page`1<T>> firstPageFunc, Func`3<string, Nullable`1<int>, Page`1<T>> nextPageFunc, Nullable`1<int> pageSize);
    public static AsyncPageable`1<T> CreateAsyncEnumerable(Func`2<Nullable`1<int>, Task`1<Page`1<T>>> firstPageFunc, Func`3<string, Nullable`1<int>, Task`1<Page`1<T>>> nextPageFunc, Nullable`1<int> pageSize);
    private static ValueTuple`2<List`1<T>, string> ParseResponseForBinaryData(Response response, Byte[] itemPropertyName, Byte[] nextLinkPropertyName);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static object <ParseResponseForBinaryData>g__ReadBinaryData|19_0(Utf8JsonReader& r, ReadOnlyMemory`1& content);
}
internal static class Azure.Core.Pipeline.ActivityExtensions : object {
    [CompilerGeneratedAttribute]
private static bool <SupportsActivitySource>k__BackingField;
    public static bool SupportsActivitySource { get; private set; }
    private static ActivityExtensions();
    [CompilerGeneratedAttribute]
public static bool get_SupportsActivitySource();
    [CompilerGeneratedAttribute]
private static void set_SupportsActivitySource(bool value);
    public static void ResetFeatureSwitch();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.ClientDiagnostics : DiagnosticScopeFactory {
    public ClientDiagnostics(ClientOptions options, Nullable`1<bool> suppressNestedClientActivities);
    public ClientDiagnostics(string optionsNamespace, string providerNamespace, DiagnosticsOptions diagnosticsOptions, Nullable`1<bool> suppressNestedClientActivities);
    internal static HttpMessageSanitizer CreateMessageSanitizer(DiagnosticsOptions diagnostics);
    internal static string GetResourceProviderNamespace(Assembly assembly);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.Pipeline.DiagnosticScope : ValueType {
    private static string AzureSdkScopeLabel;
    internal static string OpenTelemetrySchemaAttribute;
    internal static string OpenTelemetrySchemaVersion;
    private static object AzureSdkScopeValue;
    [NullableAttribute("2")]
private ActivityAdapter _activityAdapter;
    private bool _suppressNestedClientActivities;
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    public bool IsEnabled { get; }
    [RequiresUnreferencedCodeAttribute("The diagnosticSourceArgs are used in a call to DiagnosticSource.Write, all necessary properties need to be preserved on the type being passed in using DynamicDependency attributes.")]
internal DiagnosticScope(string scopeName, DiagnosticListener source, object diagnosticSourceArgs, ActivitySource activitySource, ActivityKind kind, bool suppressNestedClientActivities);
    private static DiagnosticScope();
    [CompilerGeneratedAttribute]
public bool get_IsEnabled();
    public void AddAttribute(string name, string value);
    public void AddIntegerAttribute(string name, int value);
    public void AddLongAttribute(string name, long value);
    public void AddAttribute(string name, T value, Func`2<T, string> format);
    public void AddLink(string traceparent, string tracestate, IDictionary`2<string, object> attributes);
    public void Start();
    public void SetDisplayName(string displayName);
    public void SetStartTime(DateTime dateTime);
    public void SetTraceContext(string traceparent, string tracestate);
    public sealed virtual void Dispose();
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void Failed(Exception exception);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void Failed(string errorCode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.DiagnosticScopeFactory : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Dictionary`2<string, DiagnosticListener> _listeners;
    [NullableAttribute("2")]
private string _resourceProviderNamespace;
    [NullableAttribute("2")]
private DiagnosticListener _source;
    private bool _suppressNestedClientActivities;
    private bool _isStable;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ConcurrentDictionary`2<string, ActivitySource> ActivitySources;
    [CompilerGeneratedAttribute]
private bool <IsActivityEnabled>k__BackingField;
    public bool IsActivityEnabled { get; }
    public DiagnosticScopeFactory(string clientNamespace, string resourceProviderNamespace, bool isActivityEnabled, bool suppressNestedClientActivities, bool isStable);
    private static DiagnosticScopeFactory();
    [CompilerGeneratedAttribute]
public bool get_IsActivityEnabled();
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
public DiagnosticScope CreateScope(string name, ActivityKind kind);
    private ActivitySource GetActivitySource(string ns, string name);
}
[ExtensionAttribute]
internal static class Azure.Core.Pipeline.TaskExtensions : object {
    [ExtensionAttribute]
public static WithCancellationTaskAwaitable AwaitWithCancellation(Task task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static WithCancellationTaskAwaitable`1<T> AwaitWithCancellation(Task`1<T> task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static WithCancellationValueTaskAwaitable`1<T> AwaitWithCancellation(ValueTask`1<T> task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static T EnsureCompleted(Task`1<T> task);
    [ExtensionAttribute]
public static void EnsureCompleted(Task task);
    [ExtensionAttribute]
public static T EnsureCompleted(ValueTask`1<T> task);
    [ExtensionAttribute]
public static void EnsureCompleted(ValueTask task);
    [ExtensionAttribute]
public static Enumerable`1<T> EnsureSyncEnumerable(IAsyncEnumerable`1<T> asyncEnumerable);
    [ExtensionAttribute]
public static ConfiguredValueTaskAwaitable`1<T> EnsureCompleted(ConfiguredValueTaskAwaitable`1<T> awaitable, bool async);
    [ExtensionAttribute]
public static ConfiguredValueTaskAwaitable EnsureCompleted(ConfiguredValueTaskAwaitable awaitable, bool async);
    [ConditionalAttribute("DEBUG")]
private static void VerifyTaskCompleted(bool isCompleted);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Core.ProtocolOperation`1 : Operation`1<T> {
    private Func`2<Response, T> _resultSelector;
    private OperationInternal`1<T> _operation;
    private IOperation _nextLinkOperation;
    public string Id { get; }
    public T Value { get; }
    public bool HasCompleted { get; }
    public bool HasValue { get; }
    internal ProtocolOperation`1(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Request request, Response response, OperationFinalStateVia finalStateVia, string scopeName, Func`2<Response, T> resultSelector);
    public virtual string get_Id();
    public virtual T get_Value();
    public virtual bool get_HasCompleted();
    public virtual bool get_HasValue();
    public virtual Response GetRawResponse();
    public virtual Response UpdateStatus(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.ProtocolOperation`1/<Azure-Core-IOperation<T>-UpdateStateAsync>d__17")]
private sealed virtual override ValueTask`1<OperationState`1<T>> Azure.Core.IOperation<T>.UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.ProtocolOperationHelpers : object {
    public static Operation`1<TTo> Convert(Operation`1<TFrom> operation, Func`2<Response, TTo> convertFunc, ClientDiagnostics diagnostics, string scopeName);
    public static ValueTask`1<Operation`1<VoidValue>> ProcessMessageWithoutResponseValueAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static Operation`1<VoidValue> ProcessMessageWithoutResponseValue(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static ValueTask`1<Operation`1<BinaryData>> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static Operation`1<BinaryData> ProcessMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    [AsyncStateMachineAttribute("Azure.Core.ProtocolOperationHelpers/<ProcessMessageAsync>d__5`1")]
public static ValueTask`1<Operation`1<T>> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil, Func`2<Response, T> resultSelector);
    public static Operation`1<T> ProcessMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil, Func`2<Response, T> resultSelector);
}
internal class Azure.Core.RawRequestUriBuilder : RequestUriBuilder {
    [NullableAttribute("1")]
private static string SchemeSeparator;
    private static char HostSeparator;
    private static char PortSeparator;
    [NullableAttribute("1")]
private static Char[] HostOrPort;
    private static char QueryBeginSeparator;
    private static char QueryContinueSeparator;
    private static char QueryValueSeparator;
    private Nullable`1<RawWritingPosition> _position;
    private static RawRequestUriBuilder();
    private static void GetQueryParts(ReadOnlySpan`1<char> queryUnparsed, ReadOnlySpan`1& name, ReadOnlySpan`1& value);
    [NullableContextAttribute("1")]
public void AppendRaw(string value, bool escape);
    private void AppendRaw(ReadOnlySpan`1<char> value, bool escape);
    [NullableContextAttribute("1")]
public void AppendRawNextLink(string nextLink, bool escape);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.RequestHeaderExtensions : object {
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, bool value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, float value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, double value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, int value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, long value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, TimeSpan value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, Guid value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, Byte[] value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, BinaryData value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string prefix, IDictionary`2<string, string> headersToAdd);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, ETag value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, MatchConditions conditions);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, RequestConditions conditions, string format);
    [ExtensionAttribute]
public static void AddDelimited(RequestHeaders headers, string name, IEnumerable`1<T> value, string delimiter);
    [ExtensionAttribute]
public static void AddDelimited(RequestHeaders headers, string name, IEnumerable`1<T> value, string delimiter, string format);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.RequestUriBuilderExtensions : object {
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, bool value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, float value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, double value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, int value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, Byte[] value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, IEnumerable`1<string> value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, DateTimeOffset value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, TimeSpan value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, Guid value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, long value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, bool value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, float value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, DateTimeOffset value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, TimeSpan value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, double value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, decimal value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, int value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, long value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, TimeSpan value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, Byte[] value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, Guid value, bool escape);
    [ExtensionAttribute]
public static void AppendQueryDelimited(RequestUriBuilder builder, string name, IEnumerable`1<T> value, string delimiter, bool escape);
    [ExtensionAttribute]
public static void AppendQueryDelimited(RequestUriBuilder builder, string name, IEnumerable`1<T> value, string delimiter, string format, bool escape);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.ResponseHeadersExtensions : object {
    private static String[] KnownFormats;
    private static ResponseHeadersExtensions();
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Byte[]& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, T& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string prefix, IDictionary`2& value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.ResponseWithHeaders : object {
    public static ResponseWithHeaders`2<T, THeaders> FromValue(T value, THeaders headers, Response rawResponse);
    public static ResponseWithHeaders`1<THeaders> FromValue(THeaders headers, Response rawResponse);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.ResponseWithHeaders`1 : object {
    private Response _rawResponse;
    [CompilerGeneratedAttribute]
private THeaders <Headers>k__BackingField;
    public THeaders Headers { get; }
    public ResponseWithHeaders`1(THeaders headers, Response rawResponse);
    public Response GetRawResponse();
    [CompilerGeneratedAttribute]
public THeaders get_Headers();
    public static Response op_Implicit(ResponseWithHeaders`1<THeaders> self);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Core.ResponseWithHeaders`2 : Response`1<T> {
    private Response _rawResponse;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private THeaders <Headers>k__BackingField;
    public T Value { get; }
    public THeaders Headers { get; }
    public ResponseWithHeaders`2(T value, THeaders headers, Response rawResponse);
    public virtual Response GetRawResponse();
    [CompilerGeneratedAttribute]
public virtual T get_Value();
    [CompilerGeneratedAttribute]
public THeaders get_Headers();
    public static Response op_Implicit(ResponseWithHeaders`2<T, THeaders> self);
}
internal class Azure.Core.SequentialDelayStrategy : DelayStrategy {
    [NullableAttribute("1")]
private static TimeSpan[] _pollingSequence;
    private static TimeSpan _maxDelay;
    private static SequentialDelayStrategy();
    [NullableContextAttribute("2")]
protected virtual TimeSpan GetNextDelayCore(Response response, int retryNumber);
}
internal class Azure.Core.StringRequestContent : RequestContent {
    private Byte[] _bytes;
    public StringRequestContent(string value);
    [AsyncStateMachineAttribute("Azure.Core.StringRequestContent/<WriteToAsync>d__2")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.TypeFormatters : object {
    private static string RoundtripZFormat;
    [CompilerGeneratedAttribute]
private static string <DefaultNumberFormat>k__BackingField;
    public static string DefaultNumberFormat { get; }
    private static TypeFormatters();
    [CompilerGeneratedAttribute]
public static string get_DefaultNumberFormat();
    public static string ToString(bool value);
    public static string ToString(DateTime value, string format);
    public static string ToString(DateTimeOffset value, string format);
    public static string ToString(TimeSpan value, string format);
    public static string ToString(Byte[] value, string format);
    public static string ToBase64UrlString(Byte[] value);
    public static Byte[] FromBase64UrlString(string value);
    private static int GetNumBase64PaddingCharsToAddForDecode(int inputLength);
    public static DateTimeOffset ParseDateTimeOffset(string value, string format);
    public static TimeSpan ParseTimeSpan(string value, string format);
    [NullableContextAttribute("2")]
public static string ConvertToString(object value, string format);
}
[IsReadOnlyAttribute]
internal class Azure.Core.VoidValue : ValueType {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.XmlWriterContent : RequestContent {
    private MemoryStream _stream;
    private RequestContent _content;
    [CompilerGeneratedAttribute]
private XmlWriter <XmlWriter>k__BackingField;
    public XmlWriter XmlWriter { get; }
    [CompilerGeneratedAttribute]
public XmlWriter get_XmlWriter();
    [AsyncStateMachineAttribute("Azure.Core.XmlWriterContent/<WriteToAsync>d__6")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
internal class Azure.NoValueResponse`1 : NullableResponse`1<T> {
    private Response _response;
    public bool HasValue { get; }
    public T Value { get; }
    public NoValueResponse`1(Response response);
    public virtual bool get_HasValue();
    public virtual T get_Value();
    public virtual Response GetRawResponse();
    public virtual string ToString();
    internal string GetStatusMessage();
}
internal class Azure.ResourceManager.Models.ManagedServiceIdentityTypeV3Converter : JsonConverter`1<ManagedServiceIdentityType> {
    internal static string SystemAssignedUserAssignedV3Value;
    public virtual void Write(Utf8JsonWriter writer, ManagedServiceIdentityType model, JsonSerializerOptions options);
    public virtual ManagedServiceIdentityType Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.ResourceManager.SharedExtensions : object {
    [ExtensionAttribute]
public static string SubstringAfterProviderNamespace(ResourceIdentifier resourceId);
    [ExtensionAttribute]
public static IDictionary`2<string, string> ReplaceWith(IDictionary`2<string, string> dest, IDictionary`2<string, string> src);
    [AsyncStateMachineAttribute("Azure.ResourceManager.SharedExtensions/<FirstOrDefaultAsync>d__2`1")]
[ExtensionAttribute]
public static Task`1<TSource> FirstOrDefaultAsync(AsyncPageable`1<TSource> source, Func`2<TSource, bool> predicate, CancellationToken token);
}
internal static class Azure.ResourceManager.TrafficManager.Argument : object {
    public static void AssertNotNull(T value, string name);
    public static void AssertNotNull(Nullable`1<T> value, string name);
    public static void AssertNotNullOrEmpty(IEnumerable`1<T> value, string name);
    public static void AssertNotNullOrEmpty(string value, string name);
    public static void AssertNotNullOrWhiteSpace(string value, string name);
    public static void AssertNotDefault(T& value, string name);
    public static void AssertInRange(T value, T minimum, T maximum, string name);
    public static void AssertEnumDefined(Type enumType, object value, string name);
    public static T CheckNotNull(T value, string name);
    public static string CheckNotNullOrEmpty(string value, string name);
    public static void AssertNull(T value, string name, string message);
}
[DefaultMemberAttribute("Item")]
internal class Azure.ResourceManager.TrafficManager.ChangeTrackingDictionary`2 : object {
    private IDictionary`2<TKey, TValue> _innerDictionary;
    public bool IsUndefined { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public ICollection`1<TKey> Keys { get; }
    public ICollection`1<TValue> Values { get; }
    public TValue Item { get; public set; }
    private IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys { get; }
    private IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values { get; }
    public ChangeTrackingDictionary`2(IDictionary`2<TKey, TValue> dictionary);
    public ChangeTrackingDictionary`2(IReadOnlyDictionary`2<TKey, TValue> dictionary);
    public bool get_IsUndefined();
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual ICollection`1<TKey> get_Keys();
    public sealed virtual ICollection`1<TValue> get_Values();
    public sealed virtual TValue get_Item(TKey key);
    public sealed virtual void set_Item(TKey key, TValue value);
    private sealed virtual override IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys();
    private sealed virtual override IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values();
    public sealed virtual IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual void Add(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int index);
    public sealed virtual bool Remove(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void Add(TKey key, TValue value);
    public sealed virtual bool ContainsKey(TKey key);
    public sealed virtual bool Remove(TKey key);
    public sealed virtual bool TryGetValue(TKey key, TValue& value);
    public IDictionary`2<TKey, TValue> EnsureDictionary();
    [IteratorStateMachineAttribute("Azure.ResourceManager.TrafficManager.ChangeTrackingDictionary`2/<<GetEnumerator>g__enumerateEmpty|21_0>d")]
[CompilerGeneratedAttribute]
internal static IEnumerator`1<KeyValuePair`2<TKey, TValue>> <GetEnumerator>g__enumerateEmpty|21_0();
}
[DefaultMemberAttribute("Item")]
internal class Azure.ResourceManager.TrafficManager.ChangeTrackingList`1 : object {
    private IList`1<T> _innerList;
    public bool IsUndefined { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public T Item { get; public set; }
    public ChangeTrackingList`1(IList`1<T> innerList);
    public ChangeTrackingList`1(IReadOnlyList`1<T> innerList);
    public bool get_IsUndefined();
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual T get_Item(int index);
    public sealed virtual void set_Item(int index, T value);
    public void Reset();
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual void Add(T item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(T item);
    public sealed virtual void CopyTo(T[] array, int arrayIndex);
    public sealed virtual bool Remove(T item);
    public sealed virtual int IndexOf(T item);
    public sealed virtual void Insert(int index, T item);
    public sealed virtual void RemoveAt(int index);
    public IList`1<T> EnsureList();
    [IteratorStateMachineAttribute("Azure.ResourceManager.TrafficManager.ChangeTrackingList`1/<<GetEnumerator>g__enumerateEmpty|14_0>d")]
[CompilerGeneratedAttribute]
internal static IEnumerator`1<T> <GetEnumerator>g__enumerateEmpty|14_0();
}
internal class Azure.ResourceManager.TrafficManager.EndpointsRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public EndpointsRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal RequestUriBuilder CreateUpdateRequestUri(string subscriptionId, string resourceGroupName, string profileName, string endpointType, string endpointName, TrafficManagerEndpointData data);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string profileName, string endpointType, string endpointName, TrafficManagerEndpointData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.EndpointsRestOperations/<UpdateAsync>d__7")]
public Task`1<Response`1<TrafficManagerEndpointData>> UpdateAsync(string subscriptionId, string resourceGroupName, string profileName, string endpointType, string endpointName, TrafficManagerEndpointData data, CancellationToken cancellationToken);
    public Response`1<TrafficManagerEndpointData> Update(string subscriptionId, string resourceGroupName, string profileName, string endpointType, string endpointName, TrafficManagerEndpointData data, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateGetRequestUri(string subscriptionId, string resourceGroupName, string profileName, string endpointType, string endpointName);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string profileName, string endpointType, string endpointName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.EndpointsRestOperations/<GetAsync>d__11")]
public Task`1<Response`1<TrafficManagerEndpointData>> GetAsync(string subscriptionId, string resourceGroupName, string profileName, string endpointType, string endpointName, CancellationToken cancellationToken);
    public Response`1<TrafficManagerEndpointData> Get(string subscriptionId, string resourceGroupName, string profileName, string endpointType, string endpointName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateCreateOrUpdateRequestUri(string subscriptionId, string resourceGroupName, string profileName, string endpointType, string endpointName, TrafficManagerEndpointData data);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string profileName, string endpointType, string endpointName, TrafficManagerEndpointData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.EndpointsRestOperations/<CreateOrUpdateAsync>d__15")]
public Task`1<Response`1<TrafficManagerEndpointData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string profileName, string endpointType, string endpointName, TrafficManagerEndpointData data, CancellationToken cancellationToken);
    public Response`1<TrafficManagerEndpointData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string profileName, string endpointType, string endpointName, TrafficManagerEndpointData data, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateDeleteRequestUri(string subscriptionId, string resourceGroupName, string profileName, string endpointType, string endpointName);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string profileName, string endpointType, string endpointName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.EndpointsRestOperations/<DeleteAsync>d__19")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string profileName, string endpointType, string endpointName, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string profileName, string endpointType, string endpointName, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.TrafficManager.GeographicHierarchiesRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public GeographicHierarchiesRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal RequestUriBuilder CreateGetDefaultRequestUri();
    internal HttpMessage CreateGetDefaultRequest();
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.GeographicHierarchiesRestOperations/<GetDefaultAsync>d__7")]
public Task`1<Response`1<TrafficManagerGeographicHierarchyData>> GetDefaultAsync(CancellationToken cancellationToken);
    public Response`1<TrafficManagerGeographicHierarchyData> GetDefault(CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.TrafficManager.HeatMapRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public HeatMapRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal RequestUriBuilder CreateGetRequestUri(string subscriptionId, string resourceGroupName, string profileName, TrafficManagerHeatMapType heatMapType, IEnumerable`1<double> topLeft, IEnumerable`1<double> botRight);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string profileName, TrafficManagerHeatMapType heatMapType, IEnumerable`1<double> topLeft, IEnumerable`1<double> botRight);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.HeatMapRestOperations/<GetAsync>d__7")]
public Task`1<Response`1<TrafficManagerHeatMapData>> GetAsync(string subscriptionId, string resourceGroupName, string profileName, TrafficManagerHeatMapType heatMapType, IEnumerable`1<double> topLeft, IEnumerable`1<double> botRight, CancellationToken cancellationToken);
    public Response`1<TrafficManagerHeatMapData> Get(string subscriptionId, string resourceGroupName, string profileName, TrafficManagerHeatMapType heatMapType, IEnumerable`1<double> topLeft, IEnumerable`1<double> botRight, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.TrafficManager.Mocking.MockableTrafficManagerArmClient : ArmResource {
    internal MockableTrafficManagerArmClient(ArmClient client, ResourceIdentifier id);
    internal MockableTrafficManagerArmClient(ArmClient client);
    private string GetApiVersionOrNull(ResourceType resourceType);
    public virtual TrafficManagerEndpointResource GetTrafficManagerEndpointResource(ResourceIdentifier id);
    public virtual TrafficManagerProfileResource GetTrafficManagerProfileResource(ResourceIdentifier id);
    public virtual TrafficManagerGeographicHierarchyResource GetTrafficManagerGeographicHierarchyResource(ResourceIdentifier id);
    public virtual TrafficManagerHeatMapResource GetTrafficManagerHeatMapResource(ResourceIdentifier id);
    public virtual TrafficManagerUserMetricsResource GetTrafficManagerUserMetricsResource(ResourceIdentifier id);
}
public class Azure.ResourceManager.TrafficManager.Mocking.MockableTrafficManagerResourceGroupResource : ArmResource {
    internal MockableTrafficManagerResourceGroupResource(ArmClient client, ResourceIdentifier id);
    private string GetApiVersionOrNull(ResourceType resourceType);
    public virtual TrafficManagerProfileCollection GetTrafficManagerProfiles();
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.Mocking.MockableTrafficManagerResourceGroupResource/<GetTrafficManagerProfileAsync>d__4")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<TrafficManagerProfileResource>> GetTrafficManagerProfileAsync(string profileName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<TrafficManagerProfileResource> GetTrafficManagerProfile(string profileName, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private TrafficManagerProfileCollection <GetTrafficManagerProfiles>b__3_0(ArmClient client);
}
public class Azure.ResourceManager.TrafficManager.Mocking.MockableTrafficManagerSubscriptionResource : ArmResource {
    private ClientDiagnostics _trafficManagerProfileProfilesClientDiagnostics;
    private ProfilesRestOperations _trafficManagerProfileProfilesRestClient;
    private ClientDiagnostics TrafficManagerProfileProfilesClientDiagnostics { get; }
    private ProfilesRestOperations TrafficManagerProfileProfilesRestClient { get; }
    internal MockableTrafficManagerSubscriptionResource(ArmClient client, ResourceIdentifier id);
    private ClientDiagnostics get_TrafficManagerProfileProfilesClientDiagnostics();
    private ProfilesRestOperations get_TrafficManagerProfileProfilesRestClient();
    private string GetApiVersionOrNull(ResourceType resourceType);
    public virtual TrafficManagerUserMetricsResource GetTrafficManagerUserMetrics();
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.Mocking.MockableTrafficManagerSubscriptionResource/<CheckTrafficManagerNameAvailabilityV2Async>d__10")]
public virtual Task`1<Response`1<TrafficManagerNameAvailabilityResult>> CheckTrafficManagerNameAvailabilityV2Async(TrafficManagerRelativeDnsNameAvailabilityContent content, CancellationToken cancellationToken);
    public virtual Response`1<TrafficManagerNameAvailabilityResult> CheckTrafficManagerNameAvailabilityV2(TrafficManagerRelativeDnsNameAvailabilityContent content, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<TrafficManagerProfileResource> GetTrafficManagerProfilesAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<TrafficManagerProfileResource> GetTrafficManagerProfiles(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private HttpMessage <GetTrafficManagerProfilesAsync>g__FirstPageRequest|12_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private TrafficManagerProfileResource <GetTrafficManagerProfilesAsync>b__12_1(JsonElement e);
    [CompilerGeneratedAttribute]
private HttpMessage <GetTrafficManagerProfiles>g__FirstPageRequest|13_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private TrafficManagerProfileResource <GetTrafficManagerProfiles>b__13_1(JsonElement e);
}
public class Azure.ResourceManager.TrafficManager.Mocking.MockableTrafficManagerTenantResource : ArmResource {
    private ClientDiagnostics _trafficManagerProfileProfilesClientDiagnostics;
    private ProfilesRestOperations _trafficManagerProfileProfilesRestClient;
    private ClientDiagnostics TrafficManagerProfileProfilesClientDiagnostics { get; }
    private ProfilesRestOperations TrafficManagerProfileProfilesRestClient { get; }
    internal MockableTrafficManagerTenantResource(ArmClient client, ResourceIdentifier id);
    private ClientDiagnostics get_TrafficManagerProfileProfilesClientDiagnostics();
    private ProfilesRestOperations get_TrafficManagerProfileProfilesRestClient();
    private string GetApiVersionOrNull(ResourceType resourceType);
    public virtual TrafficManagerGeographicHierarchyResource GetTrafficManagerGeographicHierarchy();
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.Mocking.MockableTrafficManagerTenantResource/<CheckTrafficManagerRelativeDnsNameAvailabilityAsync>d__10")]
public virtual Task`1<Response`1<TrafficManagerNameAvailabilityResult>> CheckTrafficManagerRelativeDnsNameAvailabilityAsync(TrafficManagerRelativeDnsNameAvailabilityContent content, CancellationToken cancellationToken);
    public virtual Response`1<TrafficManagerNameAvailabilityResult> CheckTrafficManagerRelativeDnsNameAvailability(TrafficManagerRelativeDnsNameAvailabilityContent content, CancellationToken cancellationToken);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.TrafficManager.Models.AllowedEndpointRecordType : ValueType {
    private string _value;
    private static string DomainNameValue;
    private static string IPv4AddressValue;
    private static string IPv6AddressValue;
    private static string AnyValue;
    [CompilerGeneratedAttribute]
private static AllowedEndpointRecordType <DomainName>k__BackingField;
    [CompilerGeneratedAttribute]
private static AllowedEndpointRecordType <IPv4Address>k__BackingField;
    [CompilerGeneratedAttribute]
private static AllowedEndpointRecordType <IPv6Address>k__BackingField;
    [CompilerGeneratedAttribute]
private static AllowedEndpointRecordType <Any>k__BackingField;
    public static AllowedEndpointRecordType DomainName { get; }
    public static AllowedEndpointRecordType IPv4Address { get; }
    public static AllowedEndpointRecordType IPv6Address { get; }
    public static AllowedEndpointRecordType Any { get; }
    public AllowedEndpointRecordType(string value);
    private static AllowedEndpointRecordType();
    [CompilerGeneratedAttribute]
public static AllowedEndpointRecordType get_DomainName();
    [CompilerGeneratedAttribute]
public static AllowedEndpointRecordType get_IPv4Address();
    [CompilerGeneratedAttribute]
public static AllowedEndpointRecordType get_IPv6Address();
    [CompilerGeneratedAttribute]
public static AllowedEndpointRecordType get_Any();
    public static bool op_Equality(AllowedEndpointRecordType left, AllowedEndpointRecordType right);
    public static bool op_Inequality(AllowedEndpointRecordType left, AllowedEndpointRecordType right);
    public static AllowedEndpointRecordType op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(AllowedEndpointRecordType other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public static class Azure.ResourceManager.TrafficManager.Models.ArmTrafficManagerModelFactory : object {
    public static TrafficManagerNameAvailabilityResult TrafficManagerNameAvailabilityResult(string name, Nullable`1<ResourceType> resourceType, Nullable`1<bool> isNameAvailable, string unavailableReason, string message);
    public static TrafficManagerDnsConfig TrafficManagerDnsConfig(string relativeName, string fqdn, Nullable`1<long> ttl);
}
public class Azure.ResourceManager.TrafficManager.Models.ExpectedStatusCodeRangeInfo : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Min>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Max>k__BackingField;
    public Nullable`1<int> Min { get; public set; }
    public Nullable`1<int> Max { get; public set; }
    internal ExpectedStatusCodeRangeInfo(Nullable`1<int> min, Nullable`1<int> max, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Min();
    [CompilerGeneratedAttribute]
public void set_Min(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Max();
    [CompilerGeneratedAttribute]
public void set_Max(Nullable`1<int> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.ExpectedStatusCodeRangeInfo>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override ExpectedStatusCodeRangeInfo System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.ExpectedStatusCodeRangeInfo>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static ExpectedStatusCodeRangeInfo DeserializeExpectedStatusCodeRangeInfo(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.ExpectedStatusCodeRangeInfo>.Write(ModelReaderWriterOptions options);
    private sealed virtual override ExpectedStatusCodeRangeInfo System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.ExpectedStatusCodeRangeInfo>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.ExpectedStatusCodeRangeInfo>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.TrafficManager.Models.TrafficManagerDnsConfig : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <RelativeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Fqdn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Ttl>k__BackingField;
    public string RelativeName { get; public set; }
    public string Fqdn { get; }
    public Nullable`1<long> Ttl { get; public set; }
    internal TrafficManagerDnsConfig(string relativeName, string fqdn, Nullable`1<long> ttl, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_RelativeName();
    [CompilerGeneratedAttribute]
public void set_RelativeName(string value);
    [CompilerGeneratedAttribute]
public string get_Fqdn();
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Ttl();
    [CompilerGeneratedAttribute]
public void set_Ttl(Nullable`1<long> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerDnsConfig>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerDnsConfig System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerDnsConfig>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static TrafficManagerDnsConfig DeserializeTrafficManagerDnsConfig(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerDnsConfig>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerDnsConfig System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerDnsConfig>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerDnsConfig>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.TrafficManager.Models.TrafficManagerEndpointAlwaysServeStatus : ValueType {
    private string _value;
    private static string EnabledValue;
    private static string DisabledValue;
    [CompilerGeneratedAttribute]
private static TrafficManagerEndpointAlwaysServeStatus <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrafficManagerEndpointAlwaysServeStatus <Disabled>k__BackingField;
    public static TrafficManagerEndpointAlwaysServeStatus Enabled { get; }
    public static TrafficManagerEndpointAlwaysServeStatus Disabled { get; }
    public TrafficManagerEndpointAlwaysServeStatus(string value);
    private static TrafficManagerEndpointAlwaysServeStatus();
    [CompilerGeneratedAttribute]
public static TrafficManagerEndpointAlwaysServeStatus get_Enabled();
    [CompilerGeneratedAttribute]
public static TrafficManagerEndpointAlwaysServeStatus get_Disabled();
    public static bool op_Equality(TrafficManagerEndpointAlwaysServeStatus left, TrafficManagerEndpointAlwaysServeStatus right);
    public static bool op_Inequality(TrafficManagerEndpointAlwaysServeStatus left, TrafficManagerEndpointAlwaysServeStatus right);
    public static TrafficManagerEndpointAlwaysServeStatus op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(TrafficManagerEndpointAlwaysServeStatus other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.TrafficManager.Models.TrafficManagerEndpointCustomHeaderInfo : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Name { get; public set; }
    public string Value { get; public set; }
    internal TrafficManagerEndpointCustomHeaderInfo(string name, string value, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerEndpointCustomHeaderInfo>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerEndpointCustomHeaderInfo System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerEndpointCustomHeaderInfo>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static TrafficManagerEndpointCustomHeaderInfo DeserializeTrafficManagerEndpointCustomHeaderInfo(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerEndpointCustomHeaderInfo>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerEndpointCustomHeaderInfo System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerEndpointCustomHeaderInfo>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerEndpointCustomHeaderInfo>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.TrafficManager.Models.TrafficManagerEndpointMonitorStatus : ValueType {
    private string _value;
    private static string CheckingEndpointValue;
    private static string OnlineValue;
    private static string DegradedValue;
    private static string DisabledValue;
    private static string InactiveValue;
    private static string StoppedValue;
    private static string UnmonitoredValue;
    [CompilerGeneratedAttribute]
private static TrafficManagerEndpointMonitorStatus <CheckingEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrafficManagerEndpointMonitorStatus <Online>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrafficManagerEndpointMonitorStatus <Degraded>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrafficManagerEndpointMonitorStatus <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrafficManagerEndpointMonitorStatus <Inactive>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrafficManagerEndpointMonitorStatus <Stopped>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrafficManagerEndpointMonitorStatus <Unmonitored>k__BackingField;
    public static TrafficManagerEndpointMonitorStatus CheckingEndpoint { get; }
    public static TrafficManagerEndpointMonitorStatus Online { get; }
    public static TrafficManagerEndpointMonitorStatus Degraded { get; }
    public static TrafficManagerEndpointMonitorStatus Disabled { get; }
    public static TrafficManagerEndpointMonitorStatus Inactive { get; }
    public static TrafficManagerEndpointMonitorStatus Stopped { get; }
    public static TrafficManagerEndpointMonitorStatus Unmonitored { get; }
    public TrafficManagerEndpointMonitorStatus(string value);
    private static TrafficManagerEndpointMonitorStatus();
    [CompilerGeneratedAttribute]
public static TrafficManagerEndpointMonitorStatus get_CheckingEndpoint();
    [CompilerGeneratedAttribute]
public static TrafficManagerEndpointMonitorStatus get_Online();
    [CompilerGeneratedAttribute]
public static TrafficManagerEndpointMonitorStatus get_Degraded();
    [CompilerGeneratedAttribute]
public static TrafficManagerEndpointMonitorStatus get_Disabled();
    [CompilerGeneratedAttribute]
public static TrafficManagerEndpointMonitorStatus get_Inactive();
    [CompilerGeneratedAttribute]
public static TrafficManagerEndpointMonitorStatus get_Stopped();
    [CompilerGeneratedAttribute]
public static TrafficManagerEndpointMonitorStatus get_Unmonitored();
    public static bool op_Equality(TrafficManagerEndpointMonitorStatus left, TrafficManagerEndpointMonitorStatus right);
    public static bool op_Inequality(TrafficManagerEndpointMonitorStatus left, TrafficManagerEndpointMonitorStatus right);
    public static TrafficManagerEndpointMonitorStatus op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(TrafficManagerEndpointMonitorStatus other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.TrafficManager.Models.TrafficManagerEndpointStatus : ValueType {
    private string _value;
    private static string EnabledValue;
    private static string DisabledValue;
    [CompilerGeneratedAttribute]
private static TrafficManagerEndpointStatus <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrafficManagerEndpointStatus <Disabled>k__BackingField;
    public static TrafficManagerEndpointStatus Enabled { get; }
    public static TrafficManagerEndpointStatus Disabled { get; }
    public TrafficManagerEndpointStatus(string value);
    private static TrafficManagerEndpointStatus();
    [CompilerGeneratedAttribute]
public static TrafficManagerEndpointStatus get_Enabled();
    [CompilerGeneratedAttribute]
public static TrafficManagerEndpointStatus get_Disabled();
    public static bool op_Equality(TrafficManagerEndpointStatus left, TrafficManagerEndpointStatus right);
    public static bool op_Inequality(TrafficManagerEndpointStatus left, TrafficManagerEndpointStatus right);
    public static TrafficManagerEndpointStatus op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(TrafficManagerEndpointStatus other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.TrafficManager.Models.TrafficManagerEndpointSubnetInfo : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IPAddress <First>k__BackingField;
    [CompilerGeneratedAttribute]
private IPAddress <Last>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Scope>k__BackingField;
    public IPAddress First { get; public set; }
    public IPAddress Last { get; public set; }
    public Nullable`1<int> Scope { get; public set; }
    internal TrafficManagerEndpointSubnetInfo(IPAddress first, IPAddress last, Nullable`1<int> scope, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IPAddress get_First();
    [CompilerGeneratedAttribute]
public void set_First(IPAddress value);
    [CompilerGeneratedAttribute]
public IPAddress get_Last();
    [CompilerGeneratedAttribute]
public void set_Last(IPAddress value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(Nullable`1<int> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerEndpointSubnetInfo>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerEndpointSubnetInfo System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerEndpointSubnetInfo>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static TrafficManagerEndpointSubnetInfo DeserializeTrafficManagerEndpointSubnetInfo(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerEndpointSubnetInfo>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerEndpointSubnetInfo System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerEndpointSubnetInfo>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerEndpointSubnetInfo>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.TrafficManager.Models.TrafficManagerHeatMapEndpoint : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private ResourceIdentifier <ResourceId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <EndpointId>k__BackingField;
    public ResourceIdentifier ResourceId { get; public set; }
    public Nullable`1<int> EndpointId { get; public set; }
    internal TrafficManagerHeatMapEndpoint(ResourceIdentifier resourceId, Nullable`1<int> endpointId, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public ResourceIdentifier get_ResourceId();
    [CompilerGeneratedAttribute]
public void set_ResourceId(ResourceIdentifier value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_EndpointId();
    [CompilerGeneratedAttribute]
public void set_EndpointId(Nullable`1<int> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerHeatMapEndpoint>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerHeatMapEndpoint System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerHeatMapEndpoint>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static TrafficManagerHeatMapEndpoint DeserializeTrafficManagerHeatMapEndpoint(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerHeatMapEndpoint>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerHeatMapEndpoint System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerHeatMapEndpoint>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerHeatMapEndpoint>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.TrafficManager.Models.TrafficManagerHeatMapQueryExperience : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private int <EndpointId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <QueryCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Latency>k__BackingField;
    public int EndpointId { get; public set; }
    public int QueryCount { get; public set; }
    public Nullable`1<double> Latency { get; public set; }
    public TrafficManagerHeatMapQueryExperience(int endpointId, int queryCount);
    internal TrafficManagerHeatMapQueryExperience(int endpointId, int queryCount, Nullable`1<double> latency, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public int get_EndpointId();
    [CompilerGeneratedAttribute]
public void set_EndpointId(int value);
    [CompilerGeneratedAttribute]
public int get_QueryCount();
    [CompilerGeneratedAttribute]
public void set_QueryCount(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Latency();
    [CompilerGeneratedAttribute]
public void set_Latency(Nullable`1<double> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerHeatMapQueryExperience>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerHeatMapQueryExperience System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerHeatMapQueryExperience>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static TrafficManagerHeatMapQueryExperience DeserializeTrafficManagerHeatMapQueryExperience(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerHeatMapQueryExperience>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerHeatMapQueryExperience System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerHeatMapQueryExperience>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerHeatMapQueryExperience>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.TrafficManager.Models.TrafficManagerHeatMapTrafficFlow : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IPAddress <SourceIP>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Latitude>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Longitude>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<TrafficManagerHeatMapQueryExperience> <QueryExperiences>k__BackingField;
    public IPAddress SourceIP { get; public set; }
    public Nullable`1<double> Latitude { get; public set; }
    public Nullable`1<double> Longitude { get; public set; }
    public IList`1<TrafficManagerHeatMapQueryExperience> QueryExperiences { get; }
    internal TrafficManagerHeatMapTrafficFlow(IPAddress sourceIP, Nullable`1<double> latitude, Nullable`1<double> longitude, IList`1<TrafficManagerHeatMapQueryExperience> queryExperiences, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IPAddress get_SourceIP();
    [CompilerGeneratedAttribute]
public void set_SourceIP(IPAddress value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Latitude();
    [CompilerGeneratedAttribute]
public void set_Latitude(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Longitude();
    [CompilerGeneratedAttribute]
public void set_Longitude(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public IList`1<TrafficManagerHeatMapQueryExperience> get_QueryExperiences();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerHeatMapTrafficFlow>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerHeatMapTrafficFlow System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerHeatMapTrafficFlow>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static TrafficManagerHeatMapTrafficFlow DeserializeTrafficManagerHeatMapTrafficFlow(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerHeatMapTrafficFlow>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerHeatMapTrafficFlow System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerHeatMapTrafficFlow>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerHeatMapTrafficFlow>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.TrafficManager.Models.TrafficManagerHeatMapType : ValueType {
    private string _value;
    private static string DefaultValue;
    [CompilerGeneratedAttribute]
private static TrafficManagerHeatMapType <Default>k__BackingField;
    public static TrafficManagerHeatMapType Default { get; }
    public TrafficManagerHeatMapType(string value);
    private static TrafficManagerHeatMapType();
    [CompilerGeneratedAttribute]
public static TrafficManagerHeatMapType get_Default();
    public static bool op_Equality(TrafficManagerHeatMapType left, TrafficManagerHeatMapType right);
    public static bool op_Inequality(TrafficManagerHeatMapType left, TrafficManagerHeatMapType right);
    public static TrafficManagerHeatMapType op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(TrafficManagerHeatMapType other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.TrafficManager.Models.TrafficManagerMonitorConfig : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private Nullable`1<TrafficManagerProfileMonitorStatus> <ProfileMonitorStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TrafficManagerMonitorProtocol> <Protocol>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IntervalInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <TimeoutInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ToleratedNumberOfFailures>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<TrafficManagerMonitorConfigCustomHeaderInfo> <CustomHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ExpectedStatusCodeRangeInfo> <ExpectedStatusCodeRanges>k__BackingField;
    public Nullable`1<TrafficManagerProfileMonitorStatus> ProfileMonitorStatus { get; public set; }
    public Nullable`1<TrafficManagerMonitorProtocol> Protocol { get; public set; }
    public Nullable`1<long> Port { get; public set; }
    public string Path { get; public set; }
    public Nullable`1<long> IntervalInSeconds { get; public set; }
    public Nullable`1<long> TimeoutInSeconds { get; public set; }
    public Nullable`1<long> ToleratedNumberOfFailures { get; public set; }
    public IList`1<TrafficManagerMonitorConfigCustomHeaderInfo> CustomHeaders { get; }
    public IList`1<ExpectedStatusCodeRangeInfo> ExpectedStatusCodeRanges { get; }
    internal TrafficManagerMonitorConfig(Nullable`1<TrafficManagerProfileMonitorStatus> profileMonitorStatus, Nullable`1<TrafficManagerMonitorProtocol> protocol, Nullable`1<long> port, string path, Nullable`1<long> intervalInSeconds, Nullable`1<long> timeoutInSeconds, Nullable`1<long> toleratedNumberOfFailures, IList`1<TrafficManagerMonitorConfigCustomHeaderInfo> customHeaders, IList`1<ExpectedStatusCodeRangeInfo> expectedStatusCodeRanges, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public Nullable`1<TrafficManagerProfileMonitorStatus> get_ProfileMonitorStatus();
    [CompilerGeneratedAttribute]
public void set_ProfileMonitorStatus(Nullable`1<TrafficManagerProfileMonitorStatus> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TrafficManagerMonitorProtocol> get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(Nullable`1<TrafficManagerMonitorProtocol> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IntervalInSeconds();
    [CompilerGeneratedAttribute]
public void set_IntervalInSeconds(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_TimeoutInSeconds();
    [CompilerGeneratedAttribute]
public void set_TimeoutInSeconds(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ToleratedNumberOfFailures();
    [CompilerGeneratedAttribute]
public void set_ToleratedNumberOfFailures(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public IList`1<TrafficManagerMonitorConfigCustomHeaderInfo> get_CustomHeaders();
    [CompilerGeneratedAttribute]
public IList`1<ExpectedStatusCodeRangeInfo> get_ExpectedStatusCodeRanges();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerMonitorConfig>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerMonitorConfig System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerMonitorConfig>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static TrafficManagerMonitorConfig DeserializeTrafficManagerMonitorConfig(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerMonitorConfig>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerMonitorConfig System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerMonitorConfig>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerMonitorConfig>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.TrafficManager.Models.TrafficManagerMonitorConfigCustomHeaderInfo : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Name { get; public set; }
    public string Value { get; public set; }
    internal TrafficManagerMonitorConfigCustomHeaderInfo(string name, string value, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerMonitorConfigCustomHeaderInfo>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerMonitorConfigCustomHeaderInfo System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerMonitorConfigCustomHeaderInfo>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static TrafficManagerMonitorConfigCustomHeaderInfo DeserializeTrafficManagerMonitorConfigCustomHeaderInfo(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerMonitorConfigCustomHeaderInfo>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerMonitorConfigCustomHeaderInfo System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerMonitorConfigCustomHeaderInfo>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerMonitorConfigCustomHeaderInfo>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.TrafficManager.Models.TrafficManagerMonitorProtocol : ValueType {
    private string _value;
    private static string HttpValue;
    private static string HttpsValue;
    private static string TcpValue;
    [CompilerGeneratedAttribute]
private static TrafficManagerMonitorProtocol <Http>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrafficManagerMonitorProtocol <Https>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrafficManagerMonitorProtocol <Tcp>k__BackingField;
    public static TrafficManagerMonitorProtocol Http { get; }
    public static TrafficManagerMonitorProtocol Https { get; }
    public static TrafficManagerMonitorProtocol Tcp { get; }
    public TrafficManagerMonitorProtocol(string value);
    private static TrafficManagerMonitorProtocol();
    [CompilerGeneratedAttribute]
public static TrafficManagerMonitorProtocol get_Http();
    [CompilerGeneratedAttribute]
public static TrafficManagerMonitorProtocol get_Https();
    [CompilerGeneratedAttribute]
public static TrafficManagerMonitorProtocol get_Tcp();
    public static bool op_Equality(TrafficManagerMonitorProtocol left, TrafficManagerMonitorProtocol right);
    public static bool op_Inequality(TrafficManagerMonitorProtocol left, TrafficManagerMonitorProtocol right);
    public static TrafficManagerMonitorProtocol op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(TrafficManagerMonitorProtocol other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.TrafficManager.Models.TrafficManagerNameAvailabilityResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ResourceType> <ResourceType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsNameAvailable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UnavailableReason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public string Name { get; }
    public Nullable`1<ResourceType> ResourceType { get; }
    public Nullable`1<bool> IsNameAvailable { get; }
    public string UnavailableReason { get; }
    public string Message { get; }
    internal TrafficManagerNameAvailabilityResult(string name, Nullable`1<ResourceType> resourceType, Nullable`1<bool> isNameAvailable, string unavailableReason, string message, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Nullable`1<ResourceType> get_ResourceType();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsNameAvailable();
    [CompilerGeneratedAttribute]
public string get_UnavailableReason();
    [CompilerGeneratedAttribute]
public string get_Message();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerNameAvailabilityResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerNameAvailabilityResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerNameAvailabilityResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static TrafficManagerNameAvailabilityResult DeserializeTrafficManagerNameAvailabilityResult(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerNameAvailabilityResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerNameAvailabilityResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerNameAvailabilityResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerNameAvailabilityResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.TrafficManager.Models.TrafficManagerProfileListResult : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<TrafficManagerProfileData> <Value>k__BackingField;
    public IReadOnlyList`1<TrafficManagerProfileData> Value { get; }
    internal TrafficManagerProfileListResult(IReadOnlyList`1<TrafficManagerProfileData> value, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<TrafficManagerProfileData> get_Value();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerProfileListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerProfileListResult System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerProfileListResult>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static TrafficManagerProfileListResult DeserializeTrafficManagerProfileListResult(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerProfileListResult>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerProfileListResult System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerProfileListResult>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerProfileListResult>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.TrafficManager.Models.TrafficManagerProfileMonitorStatus : ValueType {
    private string _value;
    private static string CheckingEndpointsValue;
    private static string OnlineValue;
    private static string DegradedValue;
    private static string DisabledValue;
    private static string InactiveValue;
    [CompilerGeneratedAttribute]
private static TrafficManagerProfileMonitorStatus <CheckingEndpoints>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrafficManagerProfileMonitorStatus <Online>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrafficManagerProfileMonitorStatus <Degraded>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrafficManagerProfileMonitorStatus <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrafficManagerProfileMonitorStatus <Inactive>k__BackingField;
    public static TrafficManagerProfileMonitorStatus CheckingEndpoints { get; }
    public static TrafficManagerProfileMonitorStatus Online { get; }
    public static TrafficManagerProfileMonitorStatus Degraded { get; }
    public static TrafficManagerProfileMonitorStatus Disabled { get; }
    public static TrafficManagerProfileMonitorStatus Inactive { get; }
    public TrafficManagerProfileMonitorStatus(string value);
    private static TrafficManagerProfileMonitorStatus();
    [CompilerGeneratedAttribute]
public static TrafficManagerProfileMonitorStatus get_CheckingEndpoints();
    [CompilerGeneratedAttribute]
public static TrafficManagerProfileMonitorStatus get_Online();
    [CompilerGeneratedAttribute]
public static TrafficManagerProfileMonitorStatus get_Degraded();
    [CompilerGeneratedAttribute]
public static TrafficManagerProfileMonitorStatus get_Disabled();
    [CompilerGeneratedAttribute]
public static TrafficManagerProfileMonitorStatus get_Inactive();
    public static bool op_Equality(TrafficManagerProfileMonitorStatus left, TrafficManagerProfileMonitorStatus right);
    public static bool op_Inequality(TrafficManagerProfileMonitorStatus left, TrafficManagerProfileMonitorStatus right);
    public static TrafficManagerProfileMonitorStatus op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(TrafficManagerProfileMonitorStatus other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.TrafficManager.Models.TrafficManagerProfileStatus : ValueType {
    private string _value;
    private static string EnabledValue;
    private static string DisabledValue;
    [CompilerGeneratedAttribute]
private static TrafficManagerProfileStatus <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrafficManagerProfileStatus <Disabled>k__BackingField;
    public static TrafficManagerProfileStatus Enabled { get; }
    public static TrafficManagerProfileStatus Disabled { get; }
    public TrafficManagerProfileStatus(string value);
    private static TrafficManagerProfileStatus();
    [CompilerGeneratedAttribute]
public static TrafficManagerProfileStatus get_Enabled();
    [CompilerGeneratedAttribute]
public static TrafficManagerProfileStatus get_Disabled();
    public static bool op_Equality(TrafficManagerProfileStatus left, TrafficManagerProfileStatus right);
    public static bool op_Inequality(TrafficManagerProfileStatus left, TrafficManagerProfileStatus right);
    public static TrafficManagerProfileStatus op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(TrafficManagerProfileStatus other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
public class Azure.ResourceManager.TrafficManager.Models.TrafficManagerProxyResourceData : TrafficManagerResourceData {
    internal TrafficManagerProxyResourceData(ResourceIdentifier id, string name, Nullable`1<ResourceType> resourceType, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerProxyResourceData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerProxyResourceData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerProxyResourceData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static TrafficManagerProxyResourceData DeserializeTrafficManagerProxyResourceData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerProxyResourceData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerProxyResourceData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerProxyResourceData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerProxyResourceData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.TrafficManager.Models.TrafficManagerRegion : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<TrafficManagerRegion> <Regions>k__BackingField;
    public string Code { get; public set; }
    public string Name { get; public set; }
    public IList`1<TrafficManagerRegion> Regions { get; }
    internal TrafficManagerRegion(string code, string name, IList`1<TrafficManagerRegion> regions, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public IList`1<TrafficManagerRegion> get_Regions();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerRegion>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerRegion System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerRegion>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static TrafficManagerRegion DeserializeTrafficManagerRegion(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerRegion>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerRegion System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerRegion>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerRegion>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.TrafficManager.Models.TrafficManagerRelativeDnsNameAvailabilityContent : object {
    private IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ResourceType> <ResourceType>k__BackingField;
    public string Name { get; public set; }
    public Nullable`1<ResourceType> ResourceType { get; public set; }
    internal TrafficManagerRelativeDnsNameAvailabilityContent(string name, Nullable`1<ResourceType> resourceType, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<ResourceType> get_ResourceType();
    [CompilerGeneratedAttribute]
public void set_ResourceType(Nullable`1<ResourceType> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerRelativeDnsNameAvailabilityContent>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerRelativeDnsNameAvailabilityContent System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerRelativeDnsNameAvailabilityContent>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static TrafficManagerRelativeDnsNameAvailabilityContent DeserializeTrafficManagerRelativeDnsNameAvailabilityContent(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerRelativeDnsNameAvailabilityContent>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerRelativeDnsNameAvailabilityContent System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerRelativeDnsNameAvailabilityContent>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerRelativeDnsNameAvailabilityContent>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.TrafficManager.Models.TrafficManagerResourceData : object {
    private protected IDictionary`2<string, BinaryData> _serializedAdditionalRawData;
    [CompilerGeneratedAttribute]
private ResourceIdentifier <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ResourceType> <ResourceType>k__BackingField;
    public ResourceIdentifier Id { get; public set; }
    public string Name { get; public set; }
    public Nullable`1<ResourceType> ResourceType { get; public set; }
    internal TrafficManagerResourceData(ResourceIdentifier id, string name, Nullable`1<ResourceType> resourceType, IDictionary`2<string, BinaryData> serializedAdditionalRawData);
    [CompilerGeneratedAttribute]
public ResourceIdentifier get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(ResourceIdentifier value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<ResourceType> get_ResourceType();
    [CompilerGeneratedAttribute]
public void set_ResourceType(Nullable`1<ResourceType> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerResourceData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerResourceData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerResourceData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static TrafficManagerResourceData DeserializeTrafficManagerResourceData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerResourceData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerResourceData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerResourceData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerResourceData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.TrafficManager.Models.TrafficManagerTrackedResourceData : TrafficManagerResourceData {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<AzureLocation> <Location>k__BackingField;
    public IDictionary`2<string, string> Tags { get; }
    public Nullable`1<AzureLocation> Location { get; public set; }
    internal TrafficManagerTrackedResourceData(ResourceIdentifier id, string name, Nullable`1<ResourceType> resourceType, IDictionary`2<string, BinaryData> serializedAdditionalRawData, IDictionary`2<string, string> tags, Nullable`1<AzureLocation> location);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Tags();
    [CompilerGeneratedAttribute]
public Nullable`1<AzureLocation> get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(Nullable`1<AzureLocation> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerTrackedResourceData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerTrackedResourceData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerTrackedResourceData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static TrafficManagerTrackedResourceData DeserializeTrafficManagerTrackedResourceData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerTrackedResourceData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerTrackedResourceData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerTrackedResourceData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.Models.TrafficManagerTrackedResourceData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.TrafficManager.Models.TrafficRoutingMethod : ValueType {
    private string _value;
    private static string PerformanceValue;
    private static string PriorityValue;
    private static string WeightedValue;
    private static string GeographicValue;
    private static string MultiValueValue;
    private static string SubnetValue;
    [CompilerGeneratedAttribute]
private static TrafficRoutingMethod <Performance>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrafficRoutingMethod <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrafficRoutingMethod <Weighted>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrafficRoutingMethod <Geographic>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrafficRoutingMethod <MultiValue>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrafficRoutingMethod <Subnet>k__BackingField;
    public static TrafficRoutingMethod Performance { get; }
    public static TrafficRoutingMethod Priority { get; }
    public static TrafficRoutingMethod Weighted { get; }
    public static TrafficRoutingMethod Geographic { get; }
    public static TrafficRoutingMethod MultiValue { get; }
    public static TrafficRoutingMethod Subnet { get; }
    public TrafficRoutingMethod(string value);
    private static TrafficRoutingMethod();
    [CompilerGeneratedAttribute]
public static TrafficRoutingMethod get_Performance();
    [CompilerGeneratedAttribute]
public static TrafficRoutingMethod get_Priority();
    [CompilerGeneratedAttribute]
public static TrafficRoutingMethod get_Weighted();
    [CompilerGeneratedAttribute]
public static TrafficRoutingMethod get_Geographic();
    [CompilerGeneratedAttribute]
public static TrafficRoutingMethod get_MultiValue();
    [CompilerGeneratedAttribute]
public static TrafficRoutingMethod get_Subnet();
    public static bool op_Equality(TrafficRoutingMethod left, TrafficRoutingMethod right);
    public static bool op_Inequality(TrafficRoutingMethod left, TrafficRoutingMethod right);
    public static TrafficRoutingMethod op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(TrafficRoutingMethod other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.ResourceManager.TrafficManager.Models.TrafficViewEnrollmentStatus : ValueType {
    private string _value;
    private static string EnabledValue;
    private static string DisabledValue;
    [CompilerGeneratedAttribute]
private static TrafficViewEnrollmentStatus <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static TrafficViewEnrollmentStatus <Disabled>k__BackingField;
    public static TrafficViewEnrollmentStatus Enabled { get; }
    public static TrafficViewEnrollmentStatus Disabled { get; }
    public TrafficViewEnrollmentStatus(string value);
    private static TrafficViewEnrollmentStatus();
    [CompilerGeneratedAttribute]
public static TrafficViewEnrollmentStatus get_Enabled();
    [CompilerGeneratedAttribute]
public static TrafficViewEnrollmentStatus get_Disabled();
    public static bool op_Equality(TrafficViewEnrollmentStatus left, TrafficViewEnrollmentStatus right);
    public static bool op_Inequality(TrafficViewEnrollmentStatus left, TrafficViewEnrollmentStatus right);
    public static TrafficViewEnrollmentStatus op_Implicit(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(TrafficViewEnrollmentStatus other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[ExtensionAttribute]
internal static class Azure.ResourceManager.TrafficManager.ModelSerializationExtensions : object {
    internal static ModelReaderWriterOptions WireOptions;
    private static ModelSerializationExtensions();
    [ExtensionAttribute]
public static object GetObject(JsonElement element);
    [ExtensionAttribute]
public static Byte[] GetBytesFromBase64(JsonElement element, string format);
    [ExtensionAttribute]
public static DateTimeOffset GetDateTimeOffset(JsonElement element, string format);
    [ExtensionAttribute]
public static TimeSpan GetTimeSpan(JsonElement element, string format);
    [ExtensionAttribute]
public static char GetChar(JsonElement element);
    [ExtensionAttribute]
[ConditionalAttribute("DEBUG")]
public static void ThrowNonNullablePropertyIsNull(JsonProperty property);
    [ExtensionAttribute]
public static string GetRequiredString(JsonElement element);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, DateTime value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, TimeSpan value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, char value);
    [ExtensionAttribute]
public static void WriteBase64StringValue(Utf8JsonWriter writer, Byte[] value, string format);
    [ExtensionAttribute]
public static void WriteNumberValue(Utf8JsonWriter writer, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void WriteObjectValue(Utf8JsonWriter writer, T value, ModelReaderWriterOptions options);
    [ExtensionAttribute]
public static void WriteObjectValue(Utf8JsonWriter writer, object value, ModelReaderWriterOptions options);
}
internal static class Azure.ResourceManager.TrafficManager.Optional : object {
    public static bool IsCollectionDefined(IEnumerable`1<T> collection);
    public static bool IsCollectionDefined(IDictionary`2<TKey, TValue> collection);
    public static bool IsCollectionDefined(IReadOnlyDictionary`2<TKey, TValue> collection);
    public static bool IsDefined(Nullable`1<T> value);
    public static bool IsDefined(object value);
    public static bool IsDefined(JsonElement value);
    public static bool IsDefined(string value);
}
internal class Azure.ResourceManager.TrafficManager.ProfilesRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public ProfilesRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal RequestUriBuilder CreateCheckTrafficManagerRelativeDnsNameAvailabilityRequestUri(TrafficManagerRelativeDnsNameAvailabilityContent content);
    internal HttpMessage CreateCheckTrafficManagerRelativeDnsNameAvailabilityRequest(TrafficManagerRelativeDnsNameAvailabilityContent content);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.ProfilesRestOperations/<CheckTrafficManagerRelativeDnsNameAvailabilityAsync>d__7")]
public Task`1<Response`1<TrafficManagerNameAvailabilityResult>> CheckTrafficManagerRelativeDnsNameAvailabilityAsync(TrafficManagerRelativeDnsNameAvailabilityContent content, CancellationToken cancellationToken);
    public Response`1<TrafficManagerNameAvailabilityResult> CheckTrafficManagerRelativeDnsNameAvailability(TrafficManagerRelativeDnsNameAvailabilityContent content, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateCheckTrafficManagerNameAvailabilityV2RequestUri(string subscriptionId, TrafficManagerRelativeDnsNameAvailabilityContent content);
    internal HttpMessage CreateCheckTrafficManagerNameAvailabilityV2Request(string subscriptionId, TrafficManagerRelativeDnsNameAvailabilityContent content);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.ProfilesRestOperations/<CheckTrafficManagerNameAvailabilityV2Async>d__11")]
public Task`1<Response`1<TrafficManagerNameAvailabilityResult>> CheckTrafficManagerNameAvailabilityV2Async(string subscriptionId, TrafficManagerRelativeDnsNameAvailabilityContent content, CancellationToken cancellationToken);
    public Response`1<TrafficManagerNameAvailabilityResult> CheckTrafficManagerNameAvailabilityV2(string subscriptionId, TrafficManagerRelativeDnsNameAvailabilityContent content, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListByResourceGroupRequestUri(string subscriptionId, string resourceGroupName);
    internal HttpMessage CreateListByResourceGroupRequest(string subscriptionId, string resourceGroupName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.ProfilesRestOperations/<ListByResourceGroupAsync>d__15")]
public Task`1<Response`1<TrafficManagerProfileListResult>> ListByResourceGroupAsync(string subscriptionId, string resourceGroupName, CancellationToken cancellationToken);
    public Response`1<TrafficManagerProfileListResult> ListByResourceGroup(string subscriptionId, string resourceGroupName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateListBySubscriptionRequestUri(string subscriptionId);
    internal HttpMessage CreateListBySubscriptionRequest(string subscriptionId);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.ProfilesRestOperations/<ListBySubscriptionAsync>d__19")]
public Task`1<Response`1<TrafficManagerProfileListResult>> ListBySubscriptionAsync(string subscriptionId, CancellationToken cancellationToken);
    public Response`1<TrafficManagerProfileListResult> ListBySubscription(string subscriptionId, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateGetRequestUri(string subscriptionId, string resourceGroupName, string profileName);
    internal HttpMessage CreateGetRequest(string subscriptionId, string resourceGroupName, string profileName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.ProfilesRestOperations/<GetAsync>d__23")]
public Task`1<Response`1<TrafficManagerProfileData>> GetAsync(string subscriptionId, string resourceGroupName, string profileName, CancellationToken cancellationToken);
    public Response`1<TrafficManagerProfileData> Get(string subscriptionId, string resourceGroupName, string profileName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateCreateOrUpdateRequestUri(string subscriptionId, string resourceGroupName, string profileName, TrafficManagerProfileData data);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId, string resourceGroupName, string profileName, TrafficManagerProfileData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.ProfilesRestOperations/<CreateOrUpdateAsync>d__27")]
public Task`1<Response`1<TrafficManagerProfileData>> CreateOrUpdateAsync(string subscriptionId, string resourceGroupName, string profileName, TrafficManagerProfileData data, CancellationToken cancellationToken);
    public Response`1<TrafficManagerProfileData> CreateOrUpdate(string subscriptionId, string resourceGroupName, string profileName, TrafficManagerProfileData data, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateDeleteRequestUri(string subscriptionId, string resourceGroupName, string profileName);
    internal HttpMessage CreateDeleteRequest(string subscriptionId, string resourceGroupName, string profileName);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.ProfilesRestOperations/<DeleteAsync>d__31")]
public Task`1<Response> DeleteAsync(string subscriptionId, string resourceGroupName, string profileName, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, string resourceGroupName, string profileName, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateUpdateRequestUri(string subscriptionId, string resourceGroupName, string profileName, TrafficManagerProfileData data);
    internal HttpMessage CreateUpdateRequest(string subscriptionId, string resourceGroupName, string profileName, TrafficManagerProfileData data);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.ProfilesRestOperations/<UpdateAsync>d__35")]
public Task`1<Response`1<TrafficManagerProfileData>> UpdateAsync(string subscriptionId, string resourceGroupName, string profileName, TrafficManagerProfileData data, CancellationToken cancellationToken);
    public Response`1<TrafficManagerProfileData> Update(string subscriptionId, string resourceGroupName, string profileName, TrafficManagerProfileData data, CancellationToken cancellationToken);
}
internal static class Azure.ResourceManager.TrafficManager.ProviderConstants : object {
    [CompilerGeneratedAttribute]
private static string <DefaultProviderNamespace>k__BackingField;
    public static string DefaultProviderNamespace { get; }
    private static ProviderConstants();
    [CompilerGeneratedAttribute]
public static string get_DefaultProviderNamespace();
}
internal class Azure.ResourceManager.TrafficManager.TrafficManagerArmOperation : ArmOperation {
    private OperationInternal _operation;
    private Nullable`1<RehydrationToken> _completeRehydrationToken;
    private NextLinkOperationImplementation _nextLinkOperation;
    private string _operationId;
    public string Id { get; }
    public bool HasCompleted { get; }
    internal TrafficManagerArmOperation(Response response, Nullable`1<RehydrationToken> rehydrationToken);
    internal TrafficManagerArmOperation(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Request request, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    private string GetOperationId(Nullable`1<RehydrationToken> rehydrationToken);
    public virtual string get_Id();
    public virtual Nullable`1<RehydrationToken> GetRehydrationToken();
    public virtual bool get_HasCompleted();
    public virtual Response GetRawResponse();
    public virtual Response UpdateStatus(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public virtual Response WaitForCompletionResponse(CancellationToken cancellationToken);
    public virtual Response WaitForCompletionResponse(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> WaitForCompletionResponseAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> WaitForCompletionResponseAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
}
internal class Azure.ResourceManager.TrafficManager.TrafficManagerArmOperation`1 : ArmOperation`1<T> {
    private OperationInternal`1<T> _operation;
    private Nullable`1<RehydrationToken> _completeRehydrationToken;
    private NextLinkOperationImplementation _nextLinkOperation;
    private string _operationId;
    public string Id { get; }
    public T Value { get; }
    public bool HasValue { get; }
    public bool HasCompleted { get; }
    internal TrafficManagerArmOperation`1(Response`1<T> response, Nullable`1<RehydrationToken> rehydrationToken);
    internal TrafficManagerArmOperation`1(IOperationSource`1<T> source, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Request request, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    private string GetOperationId(Nullable`1<RehydrationToken> rehydrationToken);
    public virtual string get_Id();
    public virtual Nullable`1<RehydrationToken> GetRehydrationToken();
    public virtual T get_Value();
    public virtual bool get_HasValue();
    public virtual bool get_HasCompleted();
    public virtual Response GetRawResponse();
    public virtual Response UpdateStatus(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public virtual Response`1<T> WaitForCompletion(CancellationToken cancellationToken);
    public virtual Response`1<T> WaitForCompletion(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.TrafficManager.TrafficManagerEndpointCollection : ArmCollection {
    private TrafficManagerProfileData _profileData;
    private ClientDiagnostics _trafficManagerEndpointEndpointsClientDiagnostics;
    private EndpointsRestOperations _trafficManagerEndpointEndpointsRestClient;
    internal TrafficManagerEndpointCollection(ArmClient client, ResourceIdentifier id, TrafficManagerProfileData profileData);
    internal TrafficManagerEndpointCollection(ArmClient client, ResourceIdentifier id);
    public virtual AsyncPageable`1<TrafficManagerEndpointData> GetAllAsync();
    public virtual Pageable`1<TrafficManagerEndpointData> GetAll();
    private sealed virtual override IEnumerator`1<TrafficManagerEndpointData> System.Collections.Generic.IEnumerable<Azure.ResourceManager.TrafficManager.TrafficManagerEndpointData>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<TrafficManagerEndpointData> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.TrafficManager.TrafficManagerEndpointData>.GetAsyncEnumerator(CancellationToken cancellationToken);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerEndpointCollection/<CreateOrUpdateAsync>d__12")]
public virtual Task`1<ArmOperation`1<TrafficManagerEndpointResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string endpointType, string endpointName, TrafficManagerEndpointData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<TrafficManagerEndpointResource> CreateOrUpdate(WaitUntil waitUntil, string endpointType, string endpointName, TrafficManagerEndpointData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerEndpointCollection/<GetAsync>d__14")]
public virtual Task`1<Response`1<TrafficManagerEndpointResource>> GetAsync(string endpointType, string endpointName, CancellationToken cancellationToken);
    public virtual Response`1<TrafficManagerEndpointResource> Get(string endpointType, string endpointName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerEndpointCollection/<ExistsAsync>d__16")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string endpointType, string endpointName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string endpointType, string endpointName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerEndpointCollection/<GetIfExistsAsync>d__18")]
public virtual Task`1<NullableResponse`1<TrafficManagerEndpointResource>> GetIfExistsAsync(string endpointType, string endpointName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<TrafficManagerEndpointResource> GetIfExists(string endpointType, string endpointName, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private Task`1<Page`1<TrafficManagerEndpointData>> <GetAllAsync>b__2_0(Nullable`1<int> _);
    [CompilerGeneratedAttribute]
private Page`1<TrafficManagerEndpointData> <GetAll>b__3_0(Nullable`1<int> _);
}
public class Azure.ResourceManager.TrafficManager.TrafficManagerEndpointData : TrafficManagerProxyResourceData {
    [CompilerGeneratedAttribute]
private ResourceIdentifier <TargetResourceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TrafficManagerEndpointStatus> <EndpointStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Weight>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EndpointLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TrafficManagerEndpointMonitorStatus> <EndpointMonitorStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MinChildEndpoints>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MinChildEndpointsIPv4>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MinChildEndpointsIPv6>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <GeoMapping>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<TrafficManagerEndpointSubnetInfo> <Subnets>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<TrafficManagerEndpointCustomHeaderInfo> <CustomHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TrafficManagerEndpointAlwaysServeStatus> <AlwaysServe>k__BackingField;
    public ResourceIdentifier TargetResourceId { get; public set; }
    public string Target { get; public set; }
    public Nullable`1<TrafficManagerEndpointStatus> EndpointStatus { get; public set; }
    public Nullable`1<long> Weight { get; public set; }
    public Nullable`1<long> Priority { get; public set; }
    public string EndpointLocation { get; public set; }
    public Nullable`1<TrafficManagerEndpointMonitorStatus> EndpointMonitorStatus { get; public set; }
    public Nullable`1<long> MinChildEndpoints { get; public set; }
    public Nullable`1<long> MinChildEndpointsIPv4 { get; public set; }
    public Nullable`1<long> MinChildEndpointsIPv6 { get; public set; }
    public IList`1<string> GeoMapping { get; }
    public IList`1<TrafficManagerEndpointSubnetInfo> Subnets { get; }
    public IList`1<TrafficManagerEndpointCustomHeaderInfo> CustomHeaders { get; }
    public Nullable`1<TrafficManagerEndpointAlwaysServeStatus> AlwaysServe { get; public set; }
    internal TrafficManagerEndpointData(ResourceIdentifier id, string name, Nullable`1<ResourceType> resourceType, IDictionary`2<string, BinaryData> serializedAdditionalRawData, ResourceIdentifier targetResourceId, string target, Nullable`1<TrafficManagerEndpointStatus> endpointStatus, Nullable`1<long> weight, Nullable`1<long> priority, string endpointLocation, Nullable`1<TrafficManagerEndpointMonitorStatus> endpointMonitorStatus, Nullable`1<long> minChildEndpoints, Nullable`1<long> minChildEndpointsIPv4, Nullable`1<long> minChildEndpointsIPv6, IList`1<string> geoMapping, IList`1<TrafficManagerEndpointSubnetInfo> subnets, IList`1<TrafficManagerEndpointCustomHeaderInfo> customHeaders, Nullable`1<TrafficManagerEndpointAlwaysServeStatus> alwaysServe);
    [CompilerGeneratedAttribute]
public ResourceIdentifier get_TargetResourceId();
    [CompilerGeneratedAttribute]
public void set_TargetResourceId(ResourceIdentifier value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<TrafficManagerEndpointStatus> get_EndpointStatus();
    [CompilerGeneratedAttribute]
public void set_EndpointStatus(Nullable`1<TrafficManagerEndpointStatus> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Weight();
    [CompilerGeneratedAttribute]
public void set_Weight(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Priority();
    [CompilerGeneratedAttribute]
public void set_Priority(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_EndpointLocation();
    [CompilerGeneratedAttribute]
public void set_EndpointLocation(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<TrafficManagerEndpointMonitorStatus> get_EndpointMonitorStatus();
    [CompilerGeneratedAttribute]
public void set_EndpointMonitorStatus(Nullable`1<TrafficManagerEndpointMonitorStatus> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_MinChildEndpoints();
    [CompilerGeneratedAttribute]
public void set_MinChildEndpoints(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_MinChildEndpointsIPv4();
    [CompilerGeneratedAttribute]
public void set_MinChildEndpointsIPv4(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_MinChildEndpointsIPv6();
    [CompilerGeneratedAttribute]
public void set_MinChildEndpointsIPv6(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_GeoMapping();
    [CompilerGeneratedAttribute]
public IList`1<TrafficManagerEndpointSubnetInfo> get_Subnets();
    [CompilerGeneratedAttribute]
public IList`1<TrafficManagerEndpointCustomHeaderInfo> get_CustomHeaders();
    [CompilerGeneratedAttribute]
public Nullable`1<TrafficManagerEndpointAlwaysServeStatus> get_AlwaysServe();
    [CompilerGeneratedAttribute]
public void set_AlwaysServe(Nullable`1<TrafficManagerEndpointAlwaysServeStatus> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.TrafficManagerEndpointData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerEndpointData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.TrafficManagerEndpointData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static TrafficManagerEndpointData DeserializeTrafficManagerEndpointData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerEndpointData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerEndpointData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerEndpointData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerEndpointData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.TrafficManager.TrafficManagerEndpointResource : ArmResource {
    private ClientDiagnostics _trafficManagerEndpointEndpointsClientDiagnostics;
    private EndpointsRestOperations _trafficManagerEndpointEndpointsRestClient;
    private TrafficManagerEndpointData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public TrafficManagerEndpointData Data { get; }
    internal TrafficManagerEndpointResource(ArmClient client, TrafficManagerEndpointData data);
    internal TrafficManagerEndpointResource(ArmClient client, ResourceIdentifier id);
    private static TrafficManagerEndpointResource();
    internal static void ValidateResourceId(ResourceIdentifier id);
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string profileName, string endpointType, string endpointName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual TrafficManagerEndpointData get_Data();
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerEndpointResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<TrafficManagerEndpointResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<TrafficManagerEndpointResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerEndpointResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerEndpointResource/<UpdateAsync>d__18")]
public virtual Task`1<Response`1<TrafficManagerEndpointResource>> UpdateAsync(TrafficManagerEndpointData data, CancellationToken cancellationToken);
    public virtual Response`1<TrafficManagerEndpointResource> Update(TrafficManagerEndpointData data, CancellationToken cancellationToken);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.TrafficManagerEndpointData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerEndpointData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.TrafficManagerEndpointData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerEndpointData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerEndpointData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerEndpointData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerEndpointData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
[ExtensionAttribute]
public static class Azure.ResourceManager.TrafficManager.TrafficManagerExtensions : object {
    private static MockableTrafficManagerArmClient GetMockableTrafficManagerArmClient(ArmClient client);
    private static MockableTrafficManagerResourceGroupResource GetMockableTrafficManagerResourceGroupResource(ArmResource resource);
    private static MockableTrafficManagerSubscriptionResource GetMockableTrafficManagerSubscriptionResource(ArmResource resource);
    private static MockableTrafficManagerTenantResource GetMockableTrafficManagerTenantResource(ArmResource resource);
    [ExtensionAttribute]
public static TrafficManagerEndpointResource GetTrafficManagerEndpointResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static TrafficManagerProfileResource GetTrafficManagerProfileResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static TrafficManagerGeographicHierarchyResource GetTrafficManagerGeographicHierarchyResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static TrafficManagerHeatMapResource GetTrafficManagerHeatMapResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static TrafficManagerUserMetricsResource GetTrafficManagerUserMetricsResource(ArmClient client, ResourceIdentifier id);
    [ExtensionAttribute]
public static TrafficManagerProfileCollection GetTrafficManagerProfiles(ResourceGroupResource resourceGroupResource);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerExtensions/<GetTrafficManagerProfileAsync>d__10")]
[ExtensionAttribute]
[ForwardsClientCallsAttribute]
public static Task`1<Response`1<TrafficManagerProfileResource>> GetTrafficManagerProfileAsync(ResourceGroupResource resourceGroupResource, string profileName, CancellationToken cancellationToken);
    [ExtensionAttribute]
[ForwardsClientCallsAttribute]
public static Response`1<TrafficManagerProfileResource> GetTrafficManagerProfile(ResourceGroupResource resourceGroupResource, string profileName, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static TrafficManagerUserMetricsResource GetTrafficManagerUserMetrics(SubscriptionResource subscriptionResource);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerExtensions/<CheckTrafficManagerNameAvailabilityV2Async>d__13")]
[ExtensionAttribute]
public static Task`1<Response`1<TrafficManagerNameAvailabilityResult>> CheckTrafficManagerNameAvailabilityV2Async(SubscriptionResource subscriptionResource, TrafficManagerRelativeDnsNameAvailabilityContent content, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response`1<TrafficManagerNameAvailabilityResult> CheckTrafficManagerNameAvailabilityV2(SubscriptionResource subscriptionResource, TrafficManagerRelativeDnsNameAvailabilityContent content, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static AsyncPageable`1<TrafficManagerProfileResource> GetTrafficManagerProfilesAsync(SubscriptionResource subscriptionResource, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Pageable`1<TrafficManagerProfileResource> GetTrafficManagerProfiles(SubscriptionResource subscriptionResource, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static TrafficManagerGeographicHierarchyResource GetTrafficManagerGeographicHierarchy(TenantResource tenantResource);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerExtensions/<CheckTrafficManagerRelativeDnsNameAvailabilityAsync>d__18")]
[ExtensionAttribute]
public static Task`1<Response`1<TrafficManagerNameAvailabilityResult>> CheckTrafficManagerRelativeDnsNameAvailabilityAsync(TenantResource tenantResource, TrafficManagerRelativeDnsNameAvailabilityContent content, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response`1<TrafficManagerNameAvailabilityResult> CheckTrafficManagerRelativeDnsNameAvailability(TenantResource tenantResource, TrafficManagerRelativeDnsNameAvailabilityContent content, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.TrafficManager.TrafficManagerGeographicHierarchyData : TrafficManagerProxyResourceData {
    [CompilerGeneratedAttribute]
private TrafficManagerRegion <GeographicHierarchy>k__BackingField;
    public TrafficManagerRegion GeographicHierarchy { get; public set; }
    internal TrafficManagerGeographicHierarchyData(ResourceIdentifier id, string name, Nullable`1<ResourceType> resourceType, IDictionary`2<string, BinaryData> serializedAdditionalRawData, TrafficManagerRegion geographicHierarchy);
    [CompilerGeneratedAttribute]
public TrafficManagerRegion get_GeographicHierarchy();
    [CompilerGeneratedAttribute]
public void set_GeographicHierarchy(TrafficManagerRegion value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.TrafficManagerGeographicHierarchyData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerGeographicHierarchyData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.TrafficManagerGeographicHierarchyData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static TrafficManagerGeographicHierarchyData DeserializeTrafficManagerGeographicHierarchyData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerGeographicHierarchyData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerGeographicHierarchyData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerGeographicHierarchyData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerGeographicHierarchyData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.TrafficManager.TrafficManagerGeographicHierarchyResource : ArmResource {
    private ClientDiagnostics _trafficManagerGeographicHierarchyGeographicHierarchiesClientDiagnostics;
    private GeographicHierarchiesRestOperations _trafficManagerGeographicHierarchyGeographicHierarchiesRestClient;
    private TrafficManagerGeographicHierarchyData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public TrafficManagerGeographicHierarchyData Data { get; }
    internal TrafficManagerGeographicHierarchyResource(ArmClient client, TrafficManagerGeographicHierarchyData data);
    internal TrafficManagerGeographicHierarchyResource(ArmClient client, ResourceIdentifier id);
    private static TrafficManagerGeographicHierarchyResource();
    public static ResourceIdentifier CreateResourceIdentifier();
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual TrafficManagerGeographicHierarchyData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerGeographicHierarchyResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<TrafficManagerGeographicHierarchyResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<TrafficManagerGeographicHierarchyResource> Get(CancellationToken cancellationToken);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.TrafficManagerGeographicHierarchyData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerGeographicHierarchyData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.TrafficManagerGeographicHierarchyData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerGeographicHierarchyData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerGeographicHierarchyData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerGeographicHierarchyData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerGeographicHierarchyData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapCollection : ArmCollection {
    private ClientDiagnostics _trafficManagerHeatMapHeatMapClientDiagnostics;
    private HeatMapRestOperations _trafficManagerHeatMapHeatMapRestClient;
    internal TrafficManagerHeatMapCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapCollection/<GetAsync>d__5")]
public virtual Task`1<Response`1<TrafficManagerHeatMapResource>> GetAsync(TrafficManagerHeatMapType heatMapType, IEnumerable`1<double> topLeft, IEnumerable`1<double> botRight, CancellationToken cancellationToken);
    public virtual Response`1<TrafficManagerHeatMapResource> Get(TrafficManagerHeatMapType heatMapType, IEnumerable`1<double> topLeft, IEnumerable`1<double> botRight, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapCollection/<ExistsAsync>d__7")]
public virtual Task`1<Response`1<bool>> ExistsAsync(TrafficManagerHeatMapType heatMapType, IEnumerable`1<double> topLeft, IEnumerable`1<double> botRight, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(TrafficManagerHeatMapType heatMapType, IEnumerable`1<double> topLeft, IEnumerable`1<double> botRight, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapCollection/<GetIfExistsAsync>d__9")]
public virtual Task`1<NullableResponse`1<TrafficManagerHeatMapResource>> GetIfExistsAsync(TrafficManagerHeatMapType heatMapType, IEnumerable`1<double> topLeft, IEnumerable`1<double> botRight, CancellationToken cancellationToken);
    public virtual NullableResponse`1<TrafficManagerHeatMapResource> GetIfExists(TrafficManagerHeatMapType heatMapType, IEnumerable`1<double> topLeft, IEnumerable`1<double> botRight, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapData : TrafficManagerProxyResourceData {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <StartOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <EndOn>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<TrafficManagerHeatMapEndpoint> <Endpoints>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<TrafficManagerHeatMapTrafficFlow> <TrafficFlows>k__BackingField;
    public Nullable`1<DateTimeOffset> StartOn { get; public set; }
    public Nullable`1<DateTimeOffset> EndOn { get; public set; }
    public IList`1<TrafficManagerHeatMapEndpoint> Endpoints { get; }
    public IList`1<TrafficManagerHeatMapTrafficFlow> TrafficFlows { get; }
    internal TrafficManagerHeatMapData(ResourceIdentifier id, string name, Nullable`1<ResourceType> resourceType, IDictionary`2<string, BinaryData> serializedAdditionalRawData, Nullable`1<DateTimeOffset> startOn, Nullable`1<DateTimeOffset> endOn, IList`1<TrafficManagerHeatMapEndpoint> endpoints, IList`1<TrafficManagerHeatMapTrafficFlow> trafficFlows);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_StartOn();
    [CompilerGeneratedAttribute]
public void set_StartOn(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_EndOn();
    [CompilerGeneratedAttribute]
public void set_EndOn(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public IList`1<TrafficManagerHeatMapEndpoint> get_Endpoints();
    [CompilerGeneratedAttribute]
public IList`1<TrafficManagerHeatMapTrafficFlow> get_TrafficFlows();
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerHeatMapData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static TrafficManagerHeatMapData DeserializeTrafficManagerHeatMapData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerHeatMapData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapResource : ArmResource {
    private ClientDiagnostics _trafficManagerHeatMapHeatMapClientDiagnostics;
    private HeatMapRestOperations _trafficManagerHeatMapHeatMapRestClient;
    private TrafficManagerHeatMapData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public TrafficManagerHeatMapData Data { get; }
    internal TrafficManagerHeatMapResource(ArmClient client, TrafficManagerHeatMapData data);
    internal TrafficManagerHeatMapResource(ArmClient client, ResourceIdentifier id);
    private static TrafficManagerHeatMapResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string profileName, TrafficManagerHeatMapType heatMapType);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual TrafficManagerHeatMapData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapResource/<GetAsync>d__14")]
public virtual Task`1<Response`1<TrafficManagerHeatMapResource>> GetAsync(IEnumerable`1<double> topLeft, IEnumerable`1<double> botRight, CancellationToken cancellationToken);
    public virtual Response`1<TrafficManagerHeatMapResource> Get(IEnumerable`1<double> topLeft, IEnumerable`1<double> botRight, CancellationToken cancellationToken);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerHeatMapData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerHeatMapData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.TrafficManager.TrafficManagerProfileCollection : ArmCollection {
    private ClientDiagnostics _trafficManagerProfileProfilesClientDiagnostics;
    private ProfilesRestOperations _trafficManagerProfileProfilesRestClient;
    internal TrafficManagerProfileCollection(ArmClient client, ResourceIdentifier id);
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerProfileCollection/<CreateOrUpdateAsync>d__5")]
public virtual Task`1<ArmOperation`1<TrafficManagerProfileResource>> CreateOrUpdateAsync(WaitUntil waitUntil, string profileName, TrafficManagerProfileData data, CancellationToken cancellationToken);
    public virtual ArmOperation`1<TrafficManagerProfileResource> CreateOrUpdate(WaitUntil waitUntil, string profileName, TrafficManagerProfileData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerProfileCollection/<GetAsync>d__7")]
public virtual Task`1<Response`1<TrafficManagerProfileResource>> GetAsync(string profileName, CancellationToken cancellationToken);
    public virtual Response`1<TrafficManagerProfileResource> Get(string profileName, CancellationToken cancellationToken);
    public virtual AsyncPageable`1<TrafficManagerProfileResource> GetAllAsync(CancellationToken cancellationToken);
    public virtual Pageable`1<TrafficManagerProfileResource> GetAll(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerProfileCollection/<ExistsAsync>d__11")]
public virtual Task`1<Response`1<bool>> ExistsAsync(string profileName, CancellationToken cancellationToken);
    public virtual Response`1<bool> Exists(string profileName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerProfileCollection/<GetIfExistsAsync>d__13")]
public virtual Task`1<NullableResponse`1<TrafficManagerProfileResource>> GetIfExistsAsync(string profileName, CancellationToken cancellationToken);
    public virtual NullableResponse`1<TrafficManagerProfileResource> GetIfExists(string profileName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerator`1<TrafficManagerProfileResource> System.Collections.Generic.IEnumerable<Azure.ResourceManager.TrafficManager.TrafficManagerProfileResource>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IAsyncEnumerator`1<TrafficManagerProfileResource> System.Collections.Generic.IAsyncEnumerable<Azure.ResourceManager.TrafficManager.TrafficManagerProfileResource>.GetAsyncEnumerator(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAllAsync>g__FirstPageRequest|9_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private TrafficManagerProfileResource <GetAllAsync>b__9_1(JsonElement e);
    [CompilerGeneratedAttribute]
private HttpMessage <GetAll>g__FirstPageRequest|10_0(Nullable`1<int> pageSizeHint);
    [CompilerGeneratedAttribute]
private TrafficManagerProfileResource <GetAll>b__10_1(JsonElement e);
}
public class Azure.ResourceManager.TrafficManager.TrafficManagerProfileData : TrafficManagerTrackedResourceData {
    [CompilerGeneratedAttribute]
private Nullable`1<TrafficManagerProfileStatus> <ProfileStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TrafficRoutingMethod> <TrafficRoutingMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private TrafficManagerDnsConfig <DnsConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private TrafficManagerMonitorConfig <MonitorConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<TrafficManagerEndpointData> <Endpoints>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TrafficViewEnrollmentStatus> <TrafficViewEnrollmentStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<AllowedEndpointRecordType> <AllowedEndpointRecordTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MaxReturn>k__BackingField;
    public Nullable`1<TrafficManagerProfileStatus> ProfileStatus { get; public set; }
    public Nullable`1<TrafficRoutingMethod> TrafficRoutingMethod { get; public set; }
    public TrafficManagerDnsConfig DnsConfig { get; public set; }
    public TrafficManagerMonitorConfig MonitorConfig { get; public set; }
    public IList`1<TrafficManagerEndpointData> Endpoints { get; }
    public Nullable`1<TrafficViewEnrollmentStatus> TrafficViewEnrollmentStatus { get; public set; }
    public IList`1<AllowedEndpointRecordType> AllowedEndpointRecordTypes { get; }
    public Nullable`1<long> MaxReturn { get; public set; }
    internal TrafficManagerProfileData(ResourceIdentifier id, string name, Nullable`1<ResourceType> resourceType, IDictionary`2<string, BinaryData> serializedAdditionalRawData, IDictionary`2<string, string> tags, Nullable`1<AzureLocation> location, Nullable`1<TrafficManagerProfileStatus> profileStatus, Nullable`1<TrafficRoutingMethod> trafficRoutingMethod, TrafficManagerDnsConfig dnsConfig, TrafficManagerMonitorConfig monitorConfig, IList`1<TrafficManagerEndpointData> endpoints, Nullable`1<TrafficViewEnrollmentStatus> trafficViewEnrollmentStatus, IList`1<AllowedEndpointRecordType> allowedEndpointRecordTypes, Nullable`1<long> maxReturn);
    [CompilerGeneratedAttribute]
public Nullable`1<TrafficManagerProfileStatus> get_ProfileStatus();
    [CompilerGeneratedAttribute]
public void set_ProfileStatus(Nullable`1<TrafficManagerProfileStatus> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TrafficRoutingMethod> get_TrafficRoutingMethod();
    [CompilerGeneratedAttribute]
public void set_TrafficRoutingMethod(Nullable`1<TrafficRoutingMethod> value);
    [CompilerGeneratedAttribute]
public TrafficManagerDnsConfig get_DnsConfig();
    [CompilerGeneratedAttribute]
public void set_DnsConfig(TrafficManagerDnsConfig value);
    [CompilerGeneratedAttribute]
public TrafficManagerMonitorConfig get_MonitorConfig();
    [CompilerGeneratedAttribute]
public void set_MonitorConfig(TrafficManagerMonitorConfig value);
    [CompilerGeneratedAttribute]
public IList`1<TrafficManagerEndpointData> get_Endpoints();
    [CompilerGeneratedAttribute]
public Nullable`1<TrafficViewEnrollmentStatus> get_TrafficViewEnrollmentStatus();
    [CompilerGeneratedAttribute]
public void set_TrafficViewEnrollmentStatus(Nullable`1<TrafficViewEnrollmentStatus> value);
    [CompilerGeneratedAttribute]
public IList`1<AllowedEndpointRecordType> get_AllowedEndpointRecordTypes();
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_MaxReturn();
    [CompilerGeneratedAttribute]
public void set_MaxReturn(Nullable`1<long> value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.TrafficManagerProfileData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerProfileData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.TrafficManagerProfileData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static TrafficManagerProfileData DeserializeTrafficManagerProfileData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerProfileData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerProfileData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerProfileData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerProfileData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
public class Azure.ResourceManager.TrafficManager.TrafficManagerProfileResource : ArmResource {
    private ClientDiagnostics _trafficManagerProfileProfilesClientDiagnostics;
    private ProfilesRestOperations _trafficManagerProfileProfilesRestClient;
    private TrafficManagerProfileData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public TrafficManagerProfileData Data { get; }
    internal TrafficManagerProfileResource(ArmClient client, TrafficManagerProfileData data);
    internal TrafficManagerProfileResource(ArmClient client, ResourceIdentifier id);
    private static TrafficManagerProfileResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string profileName);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual TrafficManagerProfileData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    public virtual TrafficManagerEndpointCollection GetTrafficManagerEndpoints();
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerProfileResource/<GetTrafficManagerEndpointAsync>d__15")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<TrafficManagerEndpointResource>> GetTrafficManagerEndpointAsync(string endpointType, string endpointName, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<TrafficManagerEndpointResource> GetTrafficManagerEndpoint(string endpointType, string endpointName, CancellationToken cancellationToken);
    public virtual TrafficManagerHeatMapCollection GetTrafficManagerHeatMaps();
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerProfileResource/<GetTrafficManagerHeatMapAsync>d__18")]
[ForwardsClientCallsAttribute]
public virtual Task`1<Response`1<TrafficManagerHeatMapResource>> GetTrafficManagerHeatMapAsync(TrafficManagerHeatMapType heatMapType, IEnumerable`1<double> topLeft, IEnumerable`1<double> botRight, CancellationToken cancellationToken);
    [ForwardsClientCallsAttribute]
public virtual Response`1<TrafficManagerHeatMapResource> GetTrafficManagerHeatMap(TrafficManagerHeatMapType heatMapType, IEnumerable`1<double> topLeft, IEnumerable`1<double> botRight, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerProfileResource/<GetAsync>d__20")]
public virtual Task`1<Response`1<TrafficManagerProfileResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<TrafficManagerProfileResource> Get(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerProfileResource/<DeleteAsync>d__22")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerProfileResource/<UpdateAsync>d__24")]
public virtual Task`1<Response`1<TrafficManagerProfileResource>> UpdateAsync(TrafficManagerProfileData data, CancellationToken cancellationToken);
    public virtual Response`1<TrafficManagerProfileResource> Update(TrafficManagerProfileData data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerProfileResource/<AddTagAsync>d__26")]
public virtual Task`1<Response`1<TrafficManagerProfileResource>> AddTagAsync(string key, string value, CancellationToken cancellationToken);
    public virtual Response`1<TrafficManagerProfileResource> AddTag(string key, string value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerProfileResource/<SetTagsAsync>d__28")]
public virtual Task`1<Response`1<TrafficManagerProfileResource>> SetTagsAsync(IDictionary`2<string, string> tags, CancellationToken cancellationToken);
    public virtual Response`1<TrafficManagerProfileResource> SetTags(IDictionary`2<string, string> tags, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerProfileResource/<RemoveTagAsync>d__30")]
public virtual Task`1<Response`1<TrafficManagerProfileResource>> RemoveTagAsync(string key, CancellationToken cancellationToken);
    public virtual Response`1<TrafficManagerProfileResource> RemoveTag(string key, CancellationToken cancellationToken);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.TrafficManagerProfileData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerProfileData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.TrafficManagerProfileData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerProfileData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerProfileData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerProfileData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerProfileData>.GetFormatFromOptions(ModelReaderWriterOptions options);
    [CompilerGeneratedAttribute]
private TrafficManagerEndpointCollection <GetTrafficManagerEndpoints>b__14_0(ArmClient client);
    [CompilerGeneratedAttribute]
private TrafficManagerHeatMapCollection <GetTrafficManagerHeatMaps>b__17_0(ArmClient client);
}
public class Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricData : TrafficManagerProxyResourceData {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    public string Key { get; public set; }
    internal TrafficManagerUserMetricData(ResourceIdentifier id, string name, Nullable`1<ResourceType> resourceType, IDictionary`2<string, BinaryData> serializedAdditionalRawData, string key);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerUserMetricData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    internal static TrafficManagerUserMetricData DeserializeTrafficManagerUserMetricData(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerUserMetricData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricsKeysRestOperations : object {
    private TelemetryDetails _userAgent;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    public TrafficManagerUserMetricsKeysRestOperations(HttpPipeline pipeline, string applicationId, Uri endpoint, string apiVersion);
    internal HttpMessage CreateGetRequest(string subscriptionId);
    internal HttpMessage CreateCreateOrUpdateRequest(string subscriptionId);
    internal HttpMessage CreateDeleteRequest(string subscriptionId);
    internal RequestUriBuilder CreateGetRequestUri(string subscriptionId);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricsKeysRestOperations/<GetAsync>d__9")]
public Task`1<Response`1<TrafficManagerUserMetricData>> GetAsync(string subscriptionId, CancellationToken cancellationToken);
    public Response`1<TrafficManagerUserMetricData> Get(string subscriptionId, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateCreateOrUpdateRequestUri(string subscriptionId);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricsKeysRestOperations/<CreateOrUpdateAsync>d__12")]
public Task`1<Response`1<TrafficManagerUserMetricData>> CreateOrUpdateAsync(string subscriptionId, CancellationToken cancellationToken);
    public Response`1<TrafficManagerUserMetricData> CreateOrUpdate(string subscriptionId, CancellationToken cancellationToken);
    internal RequestUriBuilder CreateDeleteRequestUri(string subscriptionId);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricsKeysRestOperations/<DeleteAsync>d__15")]
public Task`1<Response> DeleteAsync(string subscriptionId, CancellationToken cancellationToken);
    public Response Delete(string subscriptionId, CancellationToken cancellationToken);
}
public class Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricsResource : ArmResource {
    private ClientDiagnostics _trafficManagerUserMetricsTrafficManagerUserMetricsKeysClientDiagnostics;
    private TrafficManagerUserMetricsKeysRestOperations _trafficManagerUserMetricsTrafficManagerUserMetricsKeysRestClient;
    private TrafficManagerUserMetricData _data;
    public static ResourceType ResourceType;
    [CompilerGeneratedAttribute]
private bool <HasData>k__BackingField;
    public bool HasData { get; }
    public TrafficManagerUserMetricData Data { get; }
    internal TrafficManagerUserMetricsResource(ArmClient client, TrafficManagerUserMetricData data);
    internal TrafficManagerUserMetricsResource(ArmClient client, ResourceIdentifier id);
    private static TrafficManagerUserMetricsResource();
    public static ResourceIdentifier CreateResourceIdentifier(string subscriptionId);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricsResource/<GetAsync>d__1")]
public virtual Task`1<Response`1<TrafficManagerUserMetricsResource>> GetAsync(CancellationToken cancellationToken);
    public virtual Response`1<TrafficManagerUserMetricsResource> Get(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
public virtual bool get_HasData();
    public virtual TrafficManagerUserMetricData get_Data();
    internal static void ValidateResourceId(ResourceIdentifier id);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricsResource/<DeleteAsync>d__16")]
public virtual Task`1<ArmOperation> DeleteAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation Delete(WaitUntil waitUntil, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricsResource/<CreateOrUpdateAsync>d__18")]
public virtual Task`1<ArmOperation`1<TrafficManagerUserMetricsResource>> CreateOrUpdateAsync(WaitUntil waitUntil, CancellationToken cancellationToken);
    public virtual ArmOperation`1<TrafficManagerUserMetricsResource> CreateOrUpdate(WaitUntil waitUntil, CancellationToken cancellationToken);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerUserMetricData System.ClientModel.Primitives.IJsonModel<Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricData>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricData>.Write(ModelReaderWriterOptions options);
    private sealed virtual override TrafficManagerUserMetricData System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricData>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricData>.GetFormatFromOptions(ModelReaderWriterOptions options);
}
internal class Azure.ResourceManager.TrafficManager.Utf8JsonRequestContent : RequestContent {
    private MemoryStream _stream;
    private RequestContent _content;
    [CompilerGeneratedAttribute]
private Utf8JsonWriter <JsonWriter>k__BackingField;
    public Utf8JsonWriter JsonWriter { get; }
    [CompilerGeneratedAttribute]
public Utf8JsonWriter get_JsonWriter();
    [AsyncStateMachineAttribute("Azure.ResourceManager.TrafficManager.Utf8JsonRequestContent/<WriteToAsync>d__6")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellationToken);
    public virtual void WriteTo(Stream stream, CancellationToken cancellationToken);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("28108")]
internal class System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute : Attribute {
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public DynamicallyAccessedMembersAttribute(DynamicallyAccessedMemberTypes memberTypes);
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
}
[FlagsAttribute]
internal enum System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes : Enum {
    public int value__;
    public static DynamicallyAccessedMemberTypes None;
    public static DynamicallyAccessedMemberTypes PublicParameterlessConstructor;
    public static DynamicallyAccessedMemberTypes PublicConstructors;
    public static DynamicallyAccessedMemberTypes NonPublicConstructors;
    public static DynamicallyAccessedMemberTypes PublicMethods;
    public static DynamicallyAccessedMemberTypes NonPublicMethods;
    public static DynamicallyAccessedMemberTypes PublicFields;
    public static DynamicallyAccessedMemberTypes NonPublicFields;
    public static DynamicallyAccessedMemberTypes PublicNestedTypes;
    public static DynamicallyAccessedMemberTypes NonPublicNestedTypes;
    public static DynamicallyAccessedMemberTypes PublicProperties;
    public static DynamicallyAccessedMemberTypes NonPublicProperties;
    public static DynamicallyAccessedMemberTypes PublicEvents;
    public static DynamicallyAccessedMemberTypes NonPublicEvents;
    public static DynamicallyAccessedMemberTypes Interfaces;
    public static DynamicallyAccessedMemberTypes All;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("352")]
internal class System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <MemberSignature>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssemblyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Condition>k__BackingField;
    public string MemberSignature { get; }
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public Type Type { get; }
    public string TypeName { get; }
    public string AssemblyName { get; }
    public string Condition { get; public set; }
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature, Type type);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature, string typeName, string assemblyName);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(DynamicallyAccessedMemberTypes memberTypes, Type type);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(DynamicallyAccessedMemberTypes memberTypes, string typeName, string assemblyName);
    [CompilerGeneratedAttribute]
public string get_MemberSignature();
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public string get_AssemblyName();
    [CompilerGeneratedAttribute]
public string get_Condition();
    [CompilerGeneratedAttribute]
public void set_Condition(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("100")]
internal class System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    [NullableAttribute("2")]
public string Url { get; public set; }
    public RequiresDynamicCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Url(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("100")]
internal class System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    [NullableAttribute("2")]
public string Url { get; public set; }
    public RequiresUnreferencedCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Url(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
internal class System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute : Attribute {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <CheckId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Justification>k__BackingField;
    [NullableAttribute("1")]
public string Category { get; }
    [NullableAttribute("1")]
public string CheckId { get; }
    public string Scope { get; public set; }
    public string Target { get; public set; }
    public string MessageId { get; public set; }
    public string Justification { get; public set; }
    [NullableContextAttribute("1")]
public UnconditionalSuppressMessageAttribute(string category, string checkId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Category();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_CheckId();
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public string get_MessageId();
    [CompilerGeneratedAttribute]
public void set_MessageId(string value);
    [CompilerGeneratedAttribute]
public string get_Justification();
    [CompilerGeneratedAttribute]
public void set_Justification(string value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
