internal class Azure.AI.OpenAI.AsyncAutoResetEvent : object {
    private static Task s_completed;
    private Queue`1<TaskCompletionSource`1<bool>> _waits;
    private bool _signaled;
    private static AsyncAutoResetEvent();
    public Task WaitAsync(CancellationToken cancellationToken);
    public void Set();
}
public class Azure.AI.OpenAI.ChatChoice : object {
    [CompilerGeneratedAttribute]
private ChatMessage <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FinishReason>k__BackingField;
    [CompilerGeneratedAttribute]
private ChatMessage <StreamingDeltaMessage>k__BackingField;
    public ChatMessage Message { get; }
    public Nullable`1<int> Index { get; }
    public string FinishReason { get; }
    internal ChatMessage StreamingDeltaMessage { get; internal set; }
    internal ChatChoice(ChatMessage message, ChatMessage streamingDeltaMessage, Nullable`1<int> index, string finishReason);
    [CompilerGeneratedAttribute]
public ChatMessage get_Message();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Index();
    [CompilerGeneratedAttribute]
public string get_FinishReason();
    [CompilerGeneratedAttribute]
internal ChatMessage get_StreamingDeltaMessage();
    [CompilerGeneratedAttribute]
internal void set_StreamingDeltaMessage(ChatMessage value);
    internal static ChatChoice DeserializeChatChoice(JsonElement element);
}
public class Azure.AI.OpenAI.ChatCompletions : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Created>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<ChatChoice> <Choices>k__BackingField;
    [CompilerGeneratedAttribute]
private CompletionsUsage <Usage>k__BackingField;
    public string Id { get; }
    public DateTime Created { get; }
    public IReadOnlyList`1<ChatChoice> Choices { get; }
    public CompletionsUsage Usage { get; }
    internal ChatCompletions(string id, Nullable`1<int> created, IReadOnlyList`1<ChatChoice> choices, CompletionsUsage usage);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public DateTime get_Created();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<ChatChoice> get_Choices();
    [CompilerGeneratedAttribute]
public CompletionsUsage get_Usage();
    internal static ChatCompletions DeserializeChatCompletions(JsonElement element);
    internal static ChatCompletions FromResponse(Response response);
}
[CodeGenSuppressAttribute("global::Azure.Core.IUtf8JsonSerializable.Write", "Mono.Cecil.CustomAttributeArgument[]")]
public class Azure.AI.OpenAI.ChatCompletionsOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ChoicesPerPrompt>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <FrequencyPenalty>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<int, int> <TokenSelectionBiases>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxTokens>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ChatMessage> <Messages>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <NucleusSamplingFactor>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <PresencePenalty>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <StopSequences>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <Temperature>k__BackingField;
    [CompilerGeneratedAttribute]
private string <User>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NonAzureModel>k__BackingField;
    [CodeGenMemberAttribute("N")]
public Nullable`1<int> ChoicesPerPrompt { get; public set; }
    public Nullable`1<float> FrequencyPenalty { get; public set; }
    public IDictionary`2<int, int> TokenSelectionBiases { get; }
    public Nullable`1<int> MaxTokens { get; public set; }
    public IList`1<ChatMessage> Messages { get; }
    [CodeGenMemberAttribute("TopP")]
public Nullable`1<float> NucleusSamplingFactor { get; public set; }
    public Nullable`1<float> PresencePenalty { get; public set; }
    public IList`1<string> StopSequences { get; }
    public Nullable`1<float> Temperature { get; public set; }
    public string User { get; public set; }
    internal string NonAzureModel { get; internal set; }
    internal ChatCompletionsOptions(IList`1<ChatMessage> messages, Nullable`1<int> maxTokens, Nullable`1<float> temperature, Nullable`1<float> nucleusSamplingFactor, IDictionary`2<int, int> tokenSelectionBiases, string user, Nullable`1<int> choicesPerPrompt, IList`1<string> stopSequences, Nullable`1<float> presencePenalty, Nullable`1<float> frequencyPenalty);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ChoicesPerPrompt();
    [CompilerGeneratedAttribute]
public void set_ChoicesPerPrompt(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<float> get_FrequencyPenalty();
    [CompilerGeneratedAttribute]
public void set_FrequencyPenalty(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<int, int> get_TokenSelectionBiases();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxTokens();
    [CompilerGeneratedAttribute]
public void set_MaxTokens(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public IList`1<ChatMessage> get_Messages();
    [CompilerGeneratedAttribute]
public Nullable`1<float> get_NucleusSamplingFactor();
    [CompilerGeneratedAttribute]
public void set_NucleusSamplingFactor(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public Nullable`1<float> get_PresencePenalty();
    [CompilerGeneratedAttribute]
public void set_PresencePenalty(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_StopSequences();
    [CompilerGeneratedAttribute]
public Nullable`1<float> get_Temperature();
    [CompilerGeneratedAttribute]
public void set_Temperature(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public string get_User();
    [CompilerGeneratedAttribute]
public void set_User(string value);
    [CompilerGeneratedAttribute]
internal string get_NonAzureModel();
    [CompilerGeneratedAttribute]
internal void set_NonAzureModel(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal virtual RequestContent ToRequestContent();
}
[CodeGenSuppressAttribute("global::Azure.Core.IUtf8JsonSerializable.Write", "Mono.Cecil.CustomAttributeArgument[]")]
public class Azure.AI.OpenAI.ChatMessage : object {
    [CompilerGeneratedAttribute]
private ChatRole <Role>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    public ChatRole Role { get; internal set; }
    public string Content { get; internal set; }
    public ChatMessage(ChatRole role, string content);
    [CompilerGeneratedAttribute]
public ChatRole get_Role();
    [CompilerGeneratedAttribute]
internal void set_Role(ChatRole value);
    [CompilerGeneratedAttribute]
public string get_Content();
    [CompilerGeneratedAttribute]
internal void set_Content(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static ChatMessage DeserializeChatMessage(JsonElement element);
}
[IsReadOnlyAttribute]
public class Azure.AI.OpenAI.ChatRole : ValueType {
    public static ChatRole System;
    public static ChatRole Assistant;
    public static ChatRole User;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    public string Label { get; }
    public ChatRole(string label);
    private static ChatRole();
    [CompilerGeneratedAttribute]
public string get_Label();
    public static ChatRole op_Implicit(string label);
    public static bool op_Equality(ChatRole left, ChatRole right);
    public static bool op_Inequality(ChatRole left, ChatRole right);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public sealed virtual bool Equals(ChatRole other);
    public virtual string ToString();
}
public class Azure.AI.OpenAI.Choice : object {
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private CompletionsLogProbability <Logprobs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FinishReason>k__BackingField;
    public string Text { get; }
    public Nullable`1<int> Index { get; }
    public CompletionsLogProbability Logprobs { get; }
    public string FinishReason { get; }
    internal Choice(string text, Nullable`1<int> index, CompletionsLogProbability logprobs, string finishReason);
    internal static Choice DeserializeChoice(JsonElement element);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Index();
    [CompilerGeneratedAttribute]
public CompletionsLogProbability get_Logprobs();
    [CompilerGeneratedAttribute]
public string get_FinishReason();
    internal static Choice FromResponse(Response response);
}
public class Azure.AI.OpenAI.Completions : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Object>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Created>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Model>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<Choice> <Choices>k__BackingField;
    [CompilerGeneratedAttribute]
private CompletionsUsage <Usage>k__BackingField;
    public string Id { get; }
    internal string Object { get; }
    public Nullable`1<int> Created { get; }
    public string Model { get; }
    public IReadOnlyList`1<Choice> Choices { get; }
    public CompletionsUsage Usage { get; }
    internal Completions(CompletionsUsage usage);
    internal Completions(string id, Nullable`1<int> created, string model, IReadOnlyList`1<Choice> choices, CompletionsUsage usage);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
internal string get_Object();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Created();
    [CompilerGeneratedAttribute]
public string get_Model();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<Choice> get_Choices();
    [CompilerGeneratedAttribute]
public CompletionsUsage get_Usage();
    internal static Completions DeserializeCompletions(JsonElement element);
    internal static Completions FromResponse(Response response);
}
[CodeGenModelAttribute("CompletionsLogProbs")]
public class Azure.AI.OpenAI.CompletionsLogProbability : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<Nullable`1<float>> <TokenLogProbability>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<IDictionary`2<string, float>> <TopLogProbability>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <Tokens>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<int> <TextOffset>k__BackingField;
    [CodeGenMemberAttribute("TokenLogprobs")]
public IReadOnlyList`1<Nullable`1<float>> TokenLogProbability { get; }
    [CodeGenMemberAttribute("TopLogprobs")]
public IReadOnlyList`1<IDictionary`2<string, float>> TopLogProbability { get; }
    public IReadOnlyList`1<string> Tokens { get; }
    public IReadOnlyList`1<int> TextOffset { get; }
    internal CompletionsLogProbability(IReadOnlyList`1<string> tokens, IReadOnlyList`1<Nullable`1<float>> tokenLogProbability, IReadOnlyList`1<IDictionary`2<string, float>> topLogProbability, IReadOnlyList`1<int> textOffset);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<Nullable`1<float>> get_TokenLogProbability();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<IDictionary`2<string, float>> get_TopLogProbability();
    internal static CompletionsLogProbability DeserializeCompletionsLogProbability(JsonElement element);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_Tokens();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<int> get_TextOffset();
    internal static CompletionsLogProbability FromResponse(Response response);
}
[CodeGenSuppressAttribute("global::Azure.Core.IUtf8JsonSerializable.Write", "Mono.Cecil.CustomAttributeArgument[]")]
public class Azure.AI.OpenAI.CompletionsOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ChoicesPerPrompt>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Echo>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <FrequencyPenalty>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <GenerationSampleCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <LogProbabilityCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxTokens>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <NucleusSamplingFactor>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <PresencePenalty>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Prompts>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <StopSequences>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <Temperature>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<int, int> <TokenSelectionBiases>k__BackingField;
    [CompilerGeneratedAttribute]
private string <User>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NonAzureModel>k__BackingField;
    [CodeGenMemberAttribute("CacheLevel")]
private Nullable`1<int> _cacheLevel;
    [CodeGenMemberAttribute("CompletionConfig")]
private string _completionConfig;
    [CodeGenMemberAttribute("N")]
public Nullable`1<int> ChoicesPerPrompt { get; public set; }
    public Nullable`1<bool> Echo { get; public set; }
    public Nullable`1<float> FrequencyPenalty { get; public set; }
    [CodeGenMemberAttribute("BestOf")]
public Nullable`1<int> GenerationSampleCount { get; public set; }
    [CodeGenMemberAttribute("Logprobs")]
public Nullable`1<int> LogProbabilityCount { get; public set; }
    public Nullable`1<int> MaxTokens { get; public set; }
    [CodeGenMemberAttribute("TopP")]
public Nullable`1<float> NucleusSamplingFactor { get; public set; }
    public Nullable`1<float> PresencePenalty { get; public set; }
    [CodeGenMemberAttribute("Prompt")]
public IList`1<string> Prompts { get; }
    [CodeGenMemberAttribute("Stop")]
public IList`1<string> StopSequences { get; }
    public Nullable`1<float> Temperature { get; public set; }
    [CodeGenMemberAttribute("LogitBias")]
public IDictionary`2<int, int> TokenSelectionBiases { get; }
    public string User { get; public set; }
    [CodeGenMemberAttribute("Model")]
internal string NonAzureModel { get; internal set; }
    internal CompletionsOptions(IList`1<string> prompts, Nullable`1<int> maxTokens, Nullable`1<float> temperature, Nullable`1<float> nucleusSamplingFactor, IDictionary`2<int, int> tokenSelectionBiases, string user, Nullable`1<int> choicesPerPrompt, Nullable`1<int> logProbabilityCount, string nonAzureModel, Nullable`1<bool> echo, IList`1<string> stopSequences, string completionConfig, Nullable`1<int> cacheLevel, Nullable`1<float> presencePenalty, Nullable`1<float> frequencyPenalty, Nullable`1<int> generationSampleCount);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ChoicesPerPrompt();
    [CompilerGeneratedAttribute]
public void set_ChoicesPerPrompt(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Echo();
    [CompilerGeneratedAttribute]
public void set_Echo(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<float> get_FrequencyPenalty();
    [CompilerGeneratedAttribute]
public void set_FrequencyPenalty(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_GenerationSampleCount();
    [CompilerGeneratedAttribute]
public void set_GenerationSampleCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_LogProbabilityCount();
    [CompilerGeneratedAttribute]
public void set_LogProbabilityCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxTokens();
    [CompilerGeneratedAttribute]
public void set_MaxTokens(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<float> get_NucleusSamplingFactor();
    [CompilerGeneratedAttribute]
public void set_NucleusSamplingFactor(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public Nullable`1<float> get_PresencePenalty();
    [CompilerGeneratedAttribute]
public void set_PresencePenalty(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Prompts();
    [CompilerGeneratedAttribute]
public IList`1<string> get_StopSequences();
    [CompilerGeneratedAttribute]
public Nullable`1<float> get_Temperature();
    [CompilerGeneratedAttribute]
public void set_Temperature(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<int, int> get_TokenSelectionBiases();
    [CompilerGeneratedAttribute]
public string get_User();
    [CompilerGeneratedAttribute]
public void set_User(string value);
    [CompilerGeneratedAttribute]
internal string get_NonAzureModel();
    [CompilerGeneratedAttribute]
internal void set_NonAzureModel(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static CompletionsOptions DeserializeCompletionsOptions(JsonElement element);
    internal static CompletionsOptions FromResponse(Response response);
    internal virtual RequestContent ToRequestContent();
}
public class Azure.AI.OpenAI.CompletionsUsage : object {
    [CompilerGeneratedAttribute]
private int <CompletionTokens>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PromptTokens>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalTokens>k__BackingField;
    public int CompletionTokens { get; }
    public int PromptTokens { get; }
    public int TotalTokens { get; }
    internal CompletionsUsage(int completionTokens, int promptTokens, int totalTokens);
    internal static CompletionsUsage DeserializeCompletionsUsage(JsonElement element);
    [CompilerGeneratedAttribute]
public int get_CompletionTokens();
    [CompilerGeneratedAttribute]
public int get_PromptTokens();
    [CompilerGeneratedAttribute]
public int get_TotalTokens();
    internal static CompletionsUsage FromResponse(Response response);
}
public class Azure.AI.OpenAI.EmbeddingItem : object {
    [CompilerGeneratedAttribute]
private string <Object>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<float> <Embedding>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Index>k__BackingField;
    internal string Object { get; }
    public IReadOnlyList`1<float> Embedding { get; }
    public int Index { get; }
    internal EmbeddingItem(IEnumerable`1<float> embedding, int index);
    internal EmbeddingItem(IReadOnlyList`1<float> embedding, int index);
    [CompilerGeneratedAttribute]
internal string get_Object();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<float> get_Embedding();
    [CompilerGeneratedAttribute]
public int get_Index();
    internal static EmbeddingItem DeserializeEmbeddingItem(JsonElement element);
    internal static EmbeddingItem FromResponse(Response response);
}
public class Azure.AI.OpenAI.Embeddings : object {
    [CompilerGeneratedAttribute]
private string <Object>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<EmbeddingItem> <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Model>k__BackingField;
    [CompilerGeneratedAttribute]
private EmbeddingsUsage <Usage>k__BackingField;
    internal string Object { get; }
    public IReadOnlyList`1<EmbeddingItem> Data { get; }
    public string Model { get; }
    public EmbeddingsUsage Usage { get; }
    internal Embeddings(IEnumerable`1<EmbeddingItem> data, EmbeddingsUsage usage);
    internal Embeddings(IReadOnlyList`1<EmbeddingItem> data, string model, EmbeddingsUsage usage);
    [CompilerGeneratedAttribute]
internal string get_Object();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<EmbeddingItem> get_Data();
    [CompilerGeneratedAttribute]
public string get_Model();
    [CompilerGeneratedAttribute]
public EmbeddingsUsage get_Usage();
    internal static Embeddings DeserializeEmbeddings(JsonElement element);
    internal static Embeddings FromResponse(Response response);
}
[CodeGenSuppressAttribute("global::Azure.Core.IUtf8JsonSerializable.Write", "Mono.Cecil.CustomAttributeArgument[]")]
public class Azure.AI.OpenAI.EmbeddingsOptions : object {
    [CompilerGeneratedAttribute]
private string <User>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InputType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Input>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NonAzureModel>k__BackingField;
    public string User { get; public set; }
    public string InputType { get; public set; }
    public string Input { get; public set; }
    [CodeGenMemberAttribute("Model")]
internal string NonAzureModel { get; internal set; }
    public EmbeddingsOptions(string input);
    internal EmbeddingsOptions(string user, string inputType, string nonAzureModel, string input);
    [CompilerGeneratedAttribute]
public string get_User();
    [CompilerGeneratedAttribute]
public void set_User(string value);
    [CompilerGeneratedAttribute]
public string get_InputType();
    [CompilerGeneratedAttribute]
public void set_InputType(string value);
    [CompilerGeneratedAttribute]
public string get_Input();
    [CompilerGeneratedAttribute]
public void set_Input(string value);
    [CompilerGeneratedAttribute]
internal string get_NonAzureModel();
    [CompilerGeneratedAttribute]
internal void set_NonAzureModel(string value);
    private sealed virtual override void Azure.Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer);
    internal static EmbeddingsOptions DeserializeEmbeddingsOptions(JsonElement element);
    internal static EmbeddingsOptions FromResponse(Response response);
    internal virtual RequestContent ToRequestContent();
}
public class Azure.AI.OpenAI.EmbeddingsUsage : object {
    [CompilerGeneratedAttribute]
private int <PromptTokens>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalTokens>k__BackingField;
    public int PromptTokens { get; }
    public int TotalTokens { get; }
    internal EmbeddingsUsage(int promptTokens, int totalTokens);
    [CompilerGeneratedAttribute]
public int get_PromptTokens();
    [CompilerGeneratedAttribute]
public int get_TotalTokens();
    internal static EmbeddingsUsage DeserializeEmbeddingsUsage(JsonElement element);
    internal static EmbeddingsUsage FromResponse(Response response);
}
[CodeGenSuppressAttribute("GetCompletions", "Mono.Cecil.CustomAttributeArgument[]")]
[CodeGenSuppressAttribute("GetCompletionsAsync", "Mono.Cecil.CustomAttributeArgument[]")]
[CodeGenSuppressAttribute("GetEmbeddings", "Mono.Cecil.CustomAttributeArgument[]")]
[CodeGenSuppressAttribute("GetEmbeddingsAsync", "Mono.Cecil.CustomAttributeArgument[]")]
[CodeGenSuppressAttribute("CreateGetCompletionsRequest", "Mono.Cecil.CustomAttributeArgument[]")]
[CodeGenSuppressAttribute("CreateGetEmbeddingsRequest", "Mono.Cecil.CustomAttributeArgument[]")]
public class Azure.AI.OpenAI.OpenAIClient : object {
    private static int DefaultMaxCompletionsTokens;
    private static string PublicOpenAIApiVersion;
    private static string PublicOpenAIEndpoint;
    private string _nonAzureOpenAIApiKey;
    private static string AuthorizationHeader;
    private AzureKeyCredential _keyCredential;
    private static String[] AuthorizationScopes;
    private TokenCredential _tokenCredential;
    private HttpPipeline _pipeline;
    private Uri _endpoint;
    private string _apiVersion;
    [CompilerGeneratedAttribute]
private ClientDiagnostics <ClientDiagnostics>k__BackingField;
    private static RequestContext DefaultRequestContext;
    private static ResponseClassifier _responseClassifier200;
    internal ClientDiagnostics ClientDiagnostics { get; }
    public HttpPipeline Pipeline { get; }
    private static ResponseClassifier ResponseClassifier200 { get; }
    public OpenAIClient(Uri endpoint, AzureKeyCredential keyCredential, OpenAIClientOptions options);
    public OpenAIClient(Uri endpoint, AzureKeyCredential keyCredential);
    public OpenAIClient(Uri endpoint, TokenCredential tokenCredential, OpenAIClientOptions options);
    public OpenAIClient(Uri endpoint, TokenCredential tokenCredential);
    public OpenAIClient(string openAIApiKey, OpenAIClientOptions options);
    public OpenAIClient(string openAIApiKey);
    private static OpenAIClient();
    public virtual Response`1<Completions> GetCompletions(string deploymentOrModelName, CompletionsOptions completionsOptions, CancellationToken cancellationToken);
    public virtual Response`1<Completions> GetCompletions(string deploymentOrModelName, string prompt, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.AI.OpenAI.OpenAIClient/<GetCompletionsAsync>d__12")]
public virtual Task`1<Response`1<Completions>> GetCompletionsAsync(string deploymentOrModelName, CompletionsOptions completionsOptions, CancellationToken cancellationToken);
    public virtual Task`1<Response`1<Completions>> GetCompletionsAsync(string deploymentOrModelName, string prompt, CancellationToken cancellationToken);
    public virtual Response`1<StreamingCompletions> GetCompletionsStreaming(string deploymentOrModelName, CompletionsOptions completionsOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.AI.OpenAI.OpenAIClient/<GetCompletionsStreamingAsync>d__15")]
public virtual Task`1<Response`1<StreamingCompletions>> GetCompletionsStreamingAsync(string deploymentOrModelName, CompletionsOptions completionsOptions, CancellationToken cancellationToken);
    public virtual Response`1<ChatCompletions> GetChatCompletions(string deploymentOrModelName, ChatCompletionsOptions chatCompletionsOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.AI.OpenAI.OpenAIClient/<GetChatCompletionsAsync>d__17")]
public virtual Task`1<Response`1<ChatCompletions>> GetChatCompletionsAsync(string deploymentOrModelName, ChatCompletionsOptions chatCompletionsOptions, CancellationToken cancellationToken);
    public virtual Response`1<StreamingChatCompletions> GetChatCompletionsStreaming(string deploymentOrModelName, ChatCompletionsOptions chatCompletionsOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.AI.OpenAI.OpenAIClient/<GetChatCompletionsStreamingAsync>d__19")]
public virtual Task`1<Response`1<StreamingChatCompletions>> GetChatCompletionsStreamingAsync(string deploymentOrModelName, ChatCompletionsOptions chatCompletionsOptions, CancellationToken cancellationToken);
    public virtual Response`1<Embeddings> GetEmbeddings(string deploymentOrModelName, EmbeddingsOptions embeddingsOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.AI.OpenAI.OpenAIClient/<GetEmbeddingsAsync>d__21")]
public virtual Task`1<Response`1<Embeddings>> GetEmbeddingsAsync(string deploymentOrModelName, EmbeddingsOptions embeddingsOptions, CancellationToken cancellationToken);
    private static RequestContent GetStreamingEnabledRequestContent(RequestContent originalRequestContent);
    internal RequestUriBuilder GetUri(string deploymentOrModelName, string operationPath);
    internal HttpMessage CreatePostRequestMessage(string deploymentOrModelName, string operationPath, RequestContent content, RequestContext context);
    private static TokenCredential CreateDelegatedToken(string token);
    private static CompletionsOptions GetDefaultCompletionsOptions(string prompt);
    [CompilerGeneratedAttribute]
internal ClientDiagnostics get_ClientDiagnostics();
    public virtual HttpPipeline get_Pipeline();
    internal static RequestContext FromCancellationToken(CancellationToken cancellationToken);
    private static ResponseClassifier get_ResponseClassifier200();
}
public class Azure.AI.OpenAI.OpenAIClientOptions : ClientOptions {
    private static ServiceVersion LatestVersion;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    internal string Version { get; }
    public OpenAIClientOptions(ServiceVersion version);
    [CompilerGeneratedAttribute]
internal string get_Version();
}
public class Azure.AI.OpenAI.StreamingChatChoice : object {
    private IList`1<ChatChoice> _baseChoices;
    private object _baseChoicesLock;
    private AsyncAutoResetEvent _updateAvailableEvent;
    [CompilerGeneratedAttribute]
private ChatMessage <StreamingDeltaMessage>k__BackingField;
    private bool _streamingDoneSignalReceived;
    public Nullable`1<int> Index { get; }
    public string FinishReason { get; }
    internal ChatMessage StreamingDeltaMessage { get; internal set; }
    internal bool StreamingDoneSignalReceived { get; internal set; }
    internal StreamingChatChoice(ChatChoice originalBaseChoice);
    public Nullable`1<int> get_Index();
    public string get_FinishReason();
    [CompilerGeneratedAttribute]
internal ChatMessage get_StreamingDeltaMessage();
    [CompilerGeneratedAttribute]
internal void set_StreamingDeltaMessage(ChatMessage value);
    internal bool get_StreamingDoneSignalReceived();
    internal void set_StreamingDoneSignalReceived(bool value);
    internal void UpdateFromEventStreamChatChoice(ChatChoice streamingChatChoice);
    [AsyncIteratorStateMachineAttribute("Azure.AI.OpenAI.StreamingChatChoice/<GetMessageStreaming>d__17")]
public IAsyncEnumerable`1<ChatMessage> GetMessageStreaming(CancellationToken cancellationToken);
    private T GetLocked(Func`1<T> func);
    [CompilerGeneratedAttribute]
private Nullable`1<int> <get_Index>b__4_0();
    [CompilerGeneratedAttribute]
private string <get_FinishReason>b__6_0();
}
public class Azure.AI.OpenAI.StreamingChatCompletions : object {
    private Response _baseResponse;
    private SseReader _baseResponseReader;
    private IList`1<ChatCompletions> _baseChatCompletions;
    private object _baseCompletionsLock;
    private IList`1<StreamingChatChoice> _streamingChatChoices;
    private object _streamingChoicesLock;
    private AsyncAutoResetEvent _updateAvailableEvent;
    private bool _streamingTaskComplete;
    private bool _disposedValue;
    public DateTime Created { get; }
    public string Id { get; }
    internal StreamingChatCompletions(Response response);
    public DateTime get_Created();
    public string get_Id();
    [AsyncIteratorStateMachineAttribute("Azure.AI.OpenAI.StreamingChatCompletions/<GetChoicesStreaming>d__14")]
public IAsyncEnumerable`1<StreamingChatChoice> GetChoicesStreaming(CancellationToken cancellationToken);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    private T GetLocked(Func`1<T> func);
    [CompilerGeneratedAttribute]
private DateTime <get_Created>b__10_0();
    [CompilerGeneratedAttribute]
private string <get_Id>b__12_0();
    [AsyncStateMachineAttribute("Azure.AI.OpenAI.StreamingChatCompletions/<<-ctor>b__13_0>d")]
[CompilerGeneratedAttribute]
private Task <.ctor>b__13_0();
}
public class Azure.AI.OpenAI.StreamingChoice : object {
    private IList`1<Choice> _baseChoices;
    private object _baseChoicesLock;
    private AsyncAutoResetEvent _updateAvailableEvent;
    private bool _streamingDoneSignalReceived;
    public Nullable`1<int> Index { get; }
    public string FinishReason { get; }
    internal bool StreamingDoneSignalReceived { get; internal set; }
    public CompletionsLogProbability Logprobs { get; }
    internal StreamingChoice(Choice originalBaseChoice);
    public Nullable`1<int> get_Index();
    public string get_FinishReason();
    internal bool get_StreamingDoneSignalReceived();
    internal void set_StreamingDoneSignalReceived(bool value);
    public CompletionsLogProbability get_Logprobs();
    internal void UpdateFromEventStreamChoice(Choice streamingChoice);
    [AsyncIteratorStateMachineAttribute("Azure.AI.OpenAI.StreamingChoice/<GetTextStreaming>d__15")]
public IAsyncEnumerable`1<string> GetTextStreaming(CancellationToken cancellationToken);
    private T GetLocked(Func`1<T> func);
    [CompilerGeneratedAttribute]
private Nullable`1<int> <get_Index>b__4_0();
    [CompilerGeneratedAttribute]
private string <get_FinishReason>b__6_0();
    [CompilerGeneratedAttribute]
private CompletionsLogProbability <get_Logprobs>b__12_0();
}
public class Azure.AI.OpenAI.StreamingCompletions : object {
    private Response _baseResponse;
    private SseReader _baseResponseReader;
    private IList`1<Completions> _baseCompletions;
    private object _baseCompletionsLock;
    private IList`1<StreamingChoice> _streamingChoices;
    private object _streamingChoicesLock;
    private AsyncAutoResetEvent _updateAvailableEvent;
    private bool _streamingTaskComplete;
    private bool _disposedValue;
    public DateTime Created { get; }
    public string Id { get; }
    internal StreamingCompletions(Response response);
    public DateTime get_Created();
    public string get_Id();
    [AsyncIteratorStateMachineAttribute("Azure.AI.OpenAI.StreamingCompletions/<GetChoicesStreaming>d__14")]
public IAsyncEnumerable`1<StreamingChoice> GetChoicesStreaming(CancellationToken cancellationToken);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    private T GetLocked(Func`1<T> func);
    [CompilerGeneratedAttribute]
private int <get_Created>b__10_0();
    [CompilerGeneratedAttribute]
private string <get_Id>b__12_0();
    [AsyncStateMachineAttribute("Azure.AI.OpenAI.StreamingCompletions/<<-ctor>b__13_0>d")]
[CompilerGeneratedAttribute]
private Task <.ctor>b__13_0();
}
internal class Azure.AI.OpenAI.TimeConverters : object {
    private static DateTime s_epochStartUtc;
    private static TimeConverters();
    internal static DateTime DateTimeFromUnixEpoch(long secondsAfterUnixEpoch);
}
internal static class Azure.Core.AppContextSwitchHelper : object {
    [NullableContextAttribute("1")]
public static bool GetConfigValue(string appContexSwitchName, string environmentVariableName);
}
internal static class Azure.Core.Argument : object {
    public static void AssertNotNull(T value, string name);
    public static void AssertNotNull(Nullable`1<T> value, string name);
    public static void AssertNotNullOrEmpty(IEnumerable`1<T> value, string name);
    public static void AssertNotNullOrEmpty(string value, string name);
    public static void AssertNotNullOrWhiteSpace(string value, string name);
    public static void AssertNotDefault(T& value, string name);
    public static void AssertInRange(T value, T minimum, T maximum, string name);
    public static void AssertEnumDefined(Type enumType, object value, string name);
    public static T CheckNotNull(T value, string name);
    public static string CheckNotNullOrEmpty(string value, string name);
    [NullableContextAttribute("1")]
public static void AssertNull(T value, string name, string message);
}
internal class Azure.Core.ArrayBufferWriter`1 : object {
    private T[] _buffer;
    private static int DefaultInitialBufferSize;
    [CompilerGeneratedAttribute]
private int <WrittenCount>k__BackingField;
    public ReadOnlyMemory`1<T> WrittenMemory { get; }
    public ReadOnlySpan`1<T> WrittenSpan { get; }
    public int WrittenCount { get; private set; }
    public int Capacity { get; }
    public int FreeCapacity { get; }
    public ArrayBufferWriter`1(int initialCapacity);
    public ReadOnlyMemory`1<T> get_WrittenMemory();
    public ReadOnlySpan`1<T> get_WrittenSpan();
    [CompilerGeneratedAttribute]
public int get_WrittenCount();
    [CompilerGeneratedAttribute]
private void set_WrittenCount(int value);
    public int get_Capacity();
    public int get_FreeCapacity();
    public void Clear();
    public sealed virtual void Advance(int count);
    public sealed virtual Memory`1<T> GetMemory(int sizeHint);
    public sealed virtual Span`1<T> GetSpan(int sizeHint);
    private void CheckAndResizeBuffer(int sizeHint);
    private static void ThrowInvalidOperationException_AdvancedTooFar(int capacity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.AsyncLockWithValue`1 : object {
    private object _syncObj;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Queue`1<TaskCompletionSource`1<LockOrValue<T>>> _waiters;
    private bool _isLocked;
    private bool _hasValue;
    private long _index;
    [NullableAttribute("2")]
private T _value;
    public bool HasValue { get; }
    public AsyncLockWithValue`1(T value);
    public bool get_HasValue();
    [NullableContextAttribute("2")]
public bool TryGetValue(T& value);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Azure.Core.AsyncLockWithValue`1/<GetLockOrValueAsync>d__11")]
public ValueTask`1<LockOrValue<T>> GetLockOrValueAsync(bool async, CancellationToken cancellationToken);
    private void SetValue(T value, Int64& lockIndex);
    private void Reset(Int64& lockIndex);
    private void UnlockOrGetNextWaiter(Int64& lockIndex, TaskCompletionSource`1& nextWaiter);
}
internal class Azure.Core.AzureKeyCredentialPolicy : HttpPipelineSynchronousPolicy {
    private string _name;
    private AzureKeyCredential _credential;
    public AzureKeyCredentialPolicy(AzureKeyCredential credential, string name);
    public virtual void OnSendingRequest(HttpMessage message);
}
[AttributeUsageAttribute("1")]
internal class Azure.Core.AzureResourceProviderNamespaceAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ResourceProviderNamespace>k__BackingField;
    public string ResourceProviderNamespace { get; }
    public AzureResourceProviderNamespaceAttribute(string resourceProviderNamespace);
    [CompilerGeneratedAttribute]
public string get_ResourceProviderNamespace();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
internal class Azure.Core.ChangeTrackingDictionary`2 : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IDictionary`2<TKey, TValue> _innerDictionary;
    public bool IsUndefined { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public TValue Item { get; public set; }
    private IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys { get; }
    private IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values { get; }
    public ICollection`1<TKey> Keys { get; }
    public ICollection`1<TValue> Values { get; }
    public ChangeTrackingDictionary`2(Optional`1<IReadOnlyDictionary`2<TKey, TValue>> optionalDictionary);
    public ChangeTrackingDictionary`2(Optional`1<IDictionary`2<TKey, TValue>> optionalDictionary);
    private ChangeTrackingDictionary`2(IDictionary`2<TKey, TValue> dictionary);
    private ChangeTrackingDictionary`2(IReadOnlyDictionary`2<TKey, TValue> dictionary);
    public bool get_IsUndefined();
    public sealed virtual IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual void Add(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int arrayIndex);
    public sealed virtual bool Remove(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual void Add(TKey key, TValue value);
    public sealed virtual bool ContainsKey(TKey key);
    public sealed virtual bool Remove(TKey key);
    public sealed virtual bool TryGetValue(TKey key, TValue& value);
    public sealed virtual TValue get_Item(TKey key);
    public sealed virtual void set_Item(TKey key, TValue value);
    private sealed virtual override IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys();
    private sealed virtual override IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values();
    public sealed virtual ICollection`1<TKey> get_Keys();
    public sealed virtual ICollection`1<TValue> get_Values();
    private IDictionary`2<TKey, TValue> EnsureDictionary();
    [IteratorStateMachineAttribute("Azure.Core.ChangeTrackingDictionary`2/<<GetEnumerator>g__GetEmptyEnumerator|8_0>d")]
[CompilerGeneratedAttribute]
internal static IEnumerator`1<KeyValuePair`2<TKey, TValue>> <GetEnumerator>g__GetEmptyEnumerator|8_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
internal class Azure.Core.ChangeTrackingList`1 : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IList`1<T> _innerList;
    public bool IsUndefined { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public T Item { get; public set; }
    public ChangeTrackingList`1(Optional`1<IList`1<T>> optionalList);
    public ChangeTrackingList`1(Optional`1<IReadOnlyList`1<T>> optionalList);
    private ChangeTrackingList`1(IEnumerable`1<T> innerList);
    private ChangeTrackingList`1(IList`1<T> innerList);
    public bool get_IsUndefined();
    public void Reset();
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual void Add(T item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(T item);
    public sealed virtual void CopyTo(T[] array, int arrayIndex);
    public sealed virtual bool Remove(T item);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual int IndexOf(T item);
    public sealed virtual void Insert(int index, T item);
    public sealed virtual void RemoveAt(int index);
    public sealed virtual T get_Item(int index);
    public sealed virtual void set_Item(int index, T value);
    private IList`1<T> EnsureList();
    [IteratorStateMachineAttribute("Azure.Core.ChangeTrackingList`1/<<GetEnumerator>g__EnumerateEmpty|9_0>d")]
[CompilerGeneratedAttribute]
internal static IEnumerator`1<T> <GetEnumerator>g__EnumerateEmpty|9_0();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
internal class Azure.Core.CodeGenClientAttribute : CodeGenTypeAttribute {
    [CompilerGeneratedAttribute]
private Type <ParentClient>k__BackingField;
    public Type ParentClient { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenClientAttribute(string originalName);
    [CompilerGeneratedAttribute]
public Type get_ParentClient();
    [CompilerGeneratedAttribute]
public void set_ParentClient(Type value);
}
[AttributeUsageAttribute("384")]
internal class Azure.Core.CodeGenMemberAttribute : CodeGenTypeAttribute {
    [NullableContextAttribute("1")]
public CodeGenMemberAttribute(string originalName);
}
[AttributeUsageAttribute("28")]
internal class Azure.Core.CodeGenModelAttribute : CodeGenTypeAttribute {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <Usage>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <Formats>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] Usage { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] Formats { get; public set; }
    [NullableContextAttribute("1")]
public CodeGenModelAttribute(string originalName);
    [CompilerGeneratedAttribute]
public String[] get_Usage();
    [CompilerGeneratedAttribute]
public void set_Usage(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_Formats();
    [CompilerGeneratedAttribute]
public void set_Formats(String[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1")]
internal class Azure.Core.CodeGenOverrideServiceVersionsAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Versions>k__BackingField;
    public String[] Versions { get; }
    public CodeGenOverrideServiceVersionsAttribute(String[] versions);
    [CompilerGeneratedAttribute]
public String[] get_Versions();
}
[AttributeUsageAttribute("28")]
internal class Azure.Core.CodeGenSuppressAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Member>k__BackingField;
    [CompilerGeneratedAttribute]
private Type[] <Parameters>k__BackingField;
    public string Member { get; }
    public Type[] Parameters { get; }
    public CodeGenSuppressAttribute(string member, Type[] parameters);
    [CompilerGeneratedAttribute]
public string get_Member();
    [CompilerGeneratedAttribute]
public Type[] get_Parameters();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1")]
internal class Azure.Core.CodeGenSuppressTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Typename>k__BackingField;
    public string Typename { get; }
    public CodeGenSuppressTypeAttribute(string typename);
    [CompilerGeneratedAttribute]
public string get_Typename();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
internal class Azure.Core.CodeGenTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <OriginalName>k__BackingField;
    public string OriginalName { get; }
    public CodeGenTypeAttribute(string originalName);
    [CompilerGeneratedAttribute]
public string get_OriginalName();
}
internal class Azure.Core.ConstantDelayStrategy : DelayStrategy {
    internal static TimeSpan DefaultPollingInterval;
    private static ConstantDelayStrategy();
    [NullableContextAttribute("1")]
public virtual TimeSpan GetNextDelay(Response response, Nullable`1<TimeSpan> suggestedInterval);
}
internal abstract class Azure.Core.DelayStrategy : object {
    [NullableContextAttribute("1")]
public abstract virtual TimeSpan GetNextDelay(Response response, Nullable`1<TimeSpan> suggestedInterval);
    protected static TimeSpan Max(TimeSpan t1, TimeSpan t2);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Core.ErrorResponse`1 : Response`1<T> {
    private Response _response;
    private RequestFailedException _exception;
    public T Value { get; }
    public ErrorResponse`1(Response response, RequestFailedException exception);
    public virtual T get_Value();
    public virtual Response GetRawResponse();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.ExponentialDelayStrategy : DelayStrategy {
    private static TimeSpan[] _pollingSequence;
    private static TimeSpan _maxDelay;
    private int _index;
    private static ExponentialDelayStrategy();
    public virtual TimeSpan GetNextDelay(Response response, Nullable`1<TimeSpan> suggestedInterval);
}
internal class Azure.Core.FormUrlEncodedContent : RequestContent {
    private List`1<KeyValuePair`2<string, string>> _values;
    private Encoding Latin1;
    private Byte[] _bytes;
    public void Add(string parameter, string value);
    private void BuildIfNeeded();
    [AsyncStateMachineAttribute("Azure.Core.FormUrlEncodedContent/<WriteToAsync>d__5")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
    private Byte[] GetContentByteArray(IEnumerable`1<KeyValuePair`2<string, string>> nameValueCollection);
    private static string Encode(string data);
}
internal class Azure.Core.HttpMessageSanitizer : object {
    private static string LogAllValue;
    private bool _logAllHeaders;
    private bool _logFullQueries;
    private String[] _allowedQueryParameters;
    private string _redactedPlaceholder;
    private HashSet`1<string> _allowedHeaders;
    internal static HttpMessageSanitizer Default;
    public HttpMessageSanitizer(String[] allowedQueryParameters, String[] allowedHeaders, string redactedPlaceholder);
    private static HttpMessageSanitizer();
    public string SanitizeHeader(string name, string value);
    public string SanitizeUrl(string url);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.HttpPipelineExtensions : object {
    [AsyncStateMachineAttribute("Azure.Core.HttpPipelineExtensions/<ProcessMessageAsync>d__0")]
[ExtensionAttribute]
public static ValueTask`1<Response> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, RequestContext requestContext, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response ProcessMessage(HttpPipeline pipeline, HttpMessage message, RequestContext requestContext, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.HttpPipelineExtensions/<ProcessHeadAsBoolMessageAsync>d__2")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<bool>> ProcessHeadAsBoolMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, RequestContext requestContext);
    [ExtensionAttribute]
public static Response`1<bool> ProcessHeadAsBoolMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, RequestContext requestContext);
    [NullableContextAttribute("0")]
private static ValueTuple`2<CancellationToken, ErrorOptions> ApplyRequestContext(RequestContext requestContext);
}
internal interface Azure.Core.IOperation {
    public abstract virtual ValueTask`1<OperationState> UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("2")]
internal interface Azure.Core.IOperation`1 {
    public abstract virtual ValueTask`1<OperationState`1<T>> UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
internal interface Azure.Core.IOperationSource`1 {
    public abstract virtual T CreateResult(Response response, CancellationToken cancellationToken);
    public abstract virtual ValueTask`1<T> CreateResultAsync(Response response, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Azure.Core.IUtf8JsonSerializable {
    public abstract virtual void Write(Utf8JsonWriter writer);
}
[NullableContextAttribute("1")]
internal interface Azure.Core.IXmlSerializable {
    public abstract virtual void Write(XmlWriter writer, string nameHint);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.JsonElementExtensions : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static object GetObject(JsonElement& element);
    [ExtensionAttribute]
public static Byte[] GetBytesFromBase64(JsonElement& element, string format);
    [ExtensionAttribute]
public static DateTimeOffset GetDateTimeOffset(JsonElement& element, string format);
    [ExtensionAttribute]
public static TimeSpan GetTimeSpan(JsonElement& element, string format);
    [ExtensionAttribute]
public static char GetChar(JsonElement& element);
    [ExtensionAttribute]
[ConditionalAttribute("DEBUG")]
public static void ThrowNonNullablePropertyIsNull(JsonProperty property);
    [ExtensionAttribute]
public static string GetRequiredString(JsonElement& element);
}
internal static class Azure.Core.LowLevelPageableHelpers : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.NextLinkOperationImplementation : object {
    private static string ApiVersionParam;
    private static String[] FailureStates;
    private static String[] SuccessStates;
    private HeaderSource _headerSource;
    private bool _originalResponseHasLocation;
    private Uri _startRequestUri;
    private OperationFinalStateVia _finalStateVia;
    private RequestMethod _requestMethod;
    private HttpPipeline _pipeline;
    [NullableAttribute("2")]
private string _apiVersion;
    [NullableAttribute("2")]
private string _lastKnownLocation;
    private string _nextRequestUri;
    private NextLinkOperationImplementation(HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, string nextRequestUri, HeaderSource headerSource, bool originalResponseHasLocation, string lastKnownLocation, OperationFinalStateVia finalStateVia, string apiVersion);
    private static NextLinkOperationImplementation();
    public static IOperation Create(HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia, string apiVersionOverride);
    public static IOperation`1<T> Create(IOperationSource`1<T> operationSource, HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia, string apiVersionOverride);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Azure.Core.NextLinkOperationImplementation/<UpdateStateAsync>d__15")]
public sealed virtual ValueTask`1<OperationState> UpdateStateAsync(bool async, CancellationToken cancellationToken);
    private static OperationState GetOperationStateFromFinalResponse(RequestMethod requestMethod, Response response);
    private void UpdateNextRequestUri(ResponseHeaders headers);
    internal static string AppendOrReplaceApiVersion(string uri, string apiVersion);
    [NullableContextAttribute("0")]
internal static bool TryGetApiVersion(Uri startRequestUri, ReadOnlySpan`1& apiVersion);
    [NullableContextAttribute("2")]
private string GetFinalUri(string resourceLocation);
    [AsyncStateMachineAttribute("Azure.Core.NextLinkOperationImplementation/<GetResponseAsync>d__21")]
private ValueTask`1<Response> GetResponseAsync(bool async, string uri, CancellationToken cancellationToken);
    private HttpMessage CreateRequest(string uri);
    private static bool IsFinalState(Response response, HeaderSource headerSource, Nullable`1& failureState, String& resourceLocation);
    private static bool ShouldIgnoreHeader(RequestMethod method, Response response);
    private static HeaderSource GetHeaderSource(RequestMethod requestMethod, Uri requestUri, Response response, string apiVersion, String& nextRequestUri);
}
internal enum Azure.Core.OperationFinalStateVia : Enum {
    public int value__;
    public static OperationFinalStateVia AzureAsyncOperation;
    public static OperationFinalStateVia Location;
    public static OperationFinalStateVia OriginalUri;
    public static OperationFinalStateVia OperationLocation;
    public static OperationFinalStateVia LocationOverride;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.OperationHelpers : object {
    public static T GetValue(T& value);
    [NullableContextAttribute("0")]
public static T GetValue(Nullable`1& value);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionAsync>d__2`1")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<TResult>> DefaultWaitForCompletionAsync(Operation`1<TResult> operation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionAsync>d__3`1")]
[ExtensionAttribute]
public static ValueTask`1<Response`1<TResult>> DefaultWaitForCompletionAsync(Operation`1<TResult> operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response`1<TResult> DefaultWaitForCompletion(Operation`1<TResult> operation, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response`1<TResult> DefaultWaitForCompletion(Operation`1<TResult> operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionResponseAsync>d__6")]
[ExtensionAttribute]
public static ValueTask`1<Response> DefaultWaitForCompletionResponseAsync(Operation operation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationHelpers/<DefaultWaitForCompletionResponseAsync>d__7")]
[ExtensionAttribute]
public static ValueTask`1<Response> DefaultWaitForCompletionResponseAsync(Operation operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response DefaultWaitForCompletionResponse(Operation operation, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Response DefaultWaitForCompletionResponse(Operation operation, TimeSpan pollingInterval, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationInternal : OperationInternalBase {
    private OperationInternal`1<VoidValue> _internalOperation;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public OperationInternal(ClientDiagnostics clientDiagnostics, IOperation operation, Response rawResponse, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    private OperationInternal(OperationState finalState);
    public static OperationInternal Succeeded(Response rawResponse);
    public static OperationInternal Failed(Response rawResponse, RequestFailedException operationFailedException);
    public virtual Response get_RawResponse();
    public virtual bool get_HasCompleted();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal/<UpdateStatusAsync>d__9")]
protected virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationInternal`1 : OperationInternalBase {
    private IOperation`1<T> _operation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AsyncLockWithValue`1<OperationState`1<T>> _stateLock;
    private Response _rawResponse;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasValue { get; }
    public T Value { get; }
    public OperationInternal`1(ClientDiagnostics clientDiagnostics, IOperation`1<T> operation, Response rawResponse, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    private OperationInternal`1(OperationState`1<T> finalState);
    public static OperationInternal`1<T> Succeeded(Response rawResponse, T value);
    public static OperationInternal`1<T> Failed(Response rawResponse, RequestFailedException operationFailedException);
    public virtual Response get_RawResponse();
    public virtual bool get_HasCompleted();
    public bool get_HasValue();
    public T get_Value();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__15")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__16")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__19")]
private ValueTask`1<Response`1<T>> WaitForCompletionAsync(bool async, Nullable`1<TimeSpan> pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<UpdateStatusAsync>d__20")]
protected virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
    private static Response GetResponseFromState(OperationState`1<T> state);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Azure.Core.OperationInternalBase : object {
    private ClientDiagnostics _diagnostics;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IReadOnlyDictionary`2<string, string> _scopeAttributes;
    [NullableAttribute("2")]
private DelayStrategy _fallbackStrategy;
    private AsyncLockWithValue`1<Response> _responseLock;
    private string _waitForCompletionResponseScopeName;
    protected string _updateStatusScopeName;
    protected string _waitForCompletionScopeName;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    protected OperationInternalBase(Response rawResponse);
    protected OperationInternalBase(ClientDiagnostics clientDiagnostics, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    public abstract virtual Response get_RawResponse();
    public abstract virtual bool get_HasCompleted();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<UpdateStatusAsync>d__13")]
public ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public Response UpdateStatus(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__15")]
public ValueTask`1<Response> WaitForCompletionResponseAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__16")]
public ValueTask`1<Response> WaitForCompletionResponseAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__19")]
protected ValueTask`1<Response> WaitForCompletionResponseAsync(bool async, Nullable`1<TimeSpan> pollingInterval, string scopeName, CancellationToken cancellationToken);
    protected abstract virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
    protected DiagnosticScope CreateScope(string scopeName);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<CreateException>d__22")]
protected ValueTask`1<RequestFailedException> CreateException(bool async, Response response);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationPoller : object {
    private DelayStrategy _delayStrategy;
    [NullableContextAttribute("2")]
public OperationPoller(DelayStrategy fallbackStrategy);
    public ValueTask`1<Response> WaitForCompletionResponseAsync(Operation operation, Nullable`1<TimeSpan> suggestedInterval, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(Operation operation, Nullable`1<TimeSpan> suggestedInterval, CancellationToken cancellationToken);
    public ValueTask`1<Response> WaitForCompletionResponseAsync(OperationInternalBase operation, Nullable`1<TimeSpan> suggestedInterval, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(OperationInternalBase operation, Nullable`1<TimeSpan> suggestedInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__6`1")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(Operation`1<T> operation, Nullable`1<TimeSpan> suggestedInterval, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(Operation`1<T> operation, Nullable`1<TimeSpan> suggestedInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__8`1")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(OperationInternal`1<T> operation, Nullable`1<TimeSpan> suggestedInterval, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(OperationInternal`1<T> operation, Nullable`1<TimeSpan> suggestedInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__10")]
private ValueTask`1<Response> WaitForCompletionAsync(bool async, Operation operation, Nullable`1<TimeSpan> suggestedInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__11")]
private ValueTask`1<Response> WaitForCompletionAsync(bool async, OperationInternalBase operation, Nullable`1<TimeSpan> suggestedInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<Delay>d__12")]
private static ValueTask Delay(bool async, TimeSpan delay, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.OperationState : ValueType {
    [CompilerGeneratedAttribute]
private Response <RawResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasSucceeded>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private RequestFailedException <OperationFailedException>k__BackingField;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasSucceeded { get; }
    [NullableAttribute("2")]
public RequestFailedException OperationFailedException { get; }
    private OperationState(Response rawResponse, bool hasCompleted, bool hasSucceeded, RequestFailedException operationFailedException);
    [CompilerGeneratedAttribute]
public Response get_RawResponse();
    [CompilerGeneratedAttribute]
public bool get_HasCompleted();
    [CompilerGeneratedAttribute]
public bool get_HasSucceeded();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public RequestFailedException get_OperationFailedException();
    public static OperationState Success(Response rawResponse);
    public static OperationState Failure(Response rawResponse, RequestFailedException operationFailedException);
    public static OperationState Pending(Response rawResponse);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.OperationState`1 : ValueType {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Response <RawResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasSucceeded>k__BackingField;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestFailedException <OperationFailedException>k__BackingField;
    [NullableAttribute("1")]
public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasSucceeded { get; }
    public T Value { get; }
    public RequestFailedException OperationFailedException { get; }
    private OperationState`1(Response rawResponse, bool hasCompleted, bool hasSucceeded, T value, RequestFailedException operationFailedException);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Response get_RawResponse();
    [CompilerGeneratedAttribute]
public bool get_HasCompleted();
    [CompilerGeneratedAttribute]
public bool get_HasSucceeded();
    [CompilerGeneratedAttribute]
public T get_Value();
    [CompilerGeneratedAttribute]
public RequestFailedException get_OperationFailedException();
    [NullableContextAttribute("1")]
public static OperationState`1<T> Success(Response rawResponse, T value);
    [NullableContextAttribute("1")]
public static OperationState`1<T> Failure(Response rawResponse, RequestFailedException operationFailedException);
    [NullableContextAttribute("1")]
public static OperationState`1<T> Pending(Response rawResponse);
}
internal static class Azure.Core.Optional : object {
    public static bool IsCollectionDefined(IEnumerable`1<T> collection);
    public static bool IsCollectionDefined(IReadOnlyDictionary`2<TKey, TValue> collection);
    public static bool IsCollectionDefined(IDictionary`2<TKey, TValue> collection);
    public static bool IsDefined(Nullable`1<T> value);
    public static bool IsDefined(object value);
    public static bool IsDefined(string value);
    public static bool IsDefined(JsonElement value);
    public static IReadOnlyDictionary`2<TKey, TValue> ToDictionary(Optional`1<IReadOnlyDictionary`2<TKey, TValue>> optional);
    public static IDictionary`2<TKey, TValue> ToDictionary(Optional`1<IDictionary`2<TKey, TValue>> optional);
    public static IReadOnlyList`1<T> ToList(Optional`1<IReadOnlyList`1<T>> optional);
    public static IList`1<T> ToList(Optional`1<IList`1<T>> optional);
    public static Nullable`1<T> ToNullable(Optional`1<T> optional);
    public static Nullable`1<T> ToNullable(Optional`1<Nullable`1<T>> optional);
}
[IsReadOnlyAttribute]
internal class Azure.Core.Optional`1 : ValueType {
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasValue>k__BackingField;
    public T Value { get; }
    public bool HasValue { get; }
    public Optional`1(T value);
    [CompilerGeneratedAttribute]
public T get_Value();
    [CompilerGeneratedAttribute]
public bool get_HasValue();
    public static Optional`1<T> op_Implicit(T value);
    public static T op_Implicit(Optional`1<T> optional);
}
internal static class Azure.Core.Page : object {
    [NullableContextAttribute("1")]
public static Page`1<T> FromValues(IEnumerable`1<T> values, string continuationToken, Response response);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.PageableHelpers : object {
    private static Byte[] DefaultItemPropertyName;
    private static Byte[] DefaultNextLinkPropertyName;
    private static PageableHelpers();
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static AsyncPageable`1<T> CreateAsyncPageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static AsyncPageable`1<T> CreateAsyncPageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<Response, ValueTuple`2<List`1<T>, string>> responseParser, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    public static Pageable`1<T> CreatePageable(Func`2<Nullable`1<int>, HttpMessage> createFirstPageRequest, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreatePageable(Response initialResponse, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageRequest, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string scopeName, string itemPropertyName, string nextLinkPropertyName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.PageableHelpers/<CreateAsyncPageable>d__10`1")]
public static ValueTask`1<Operation`1<AsyncPageable`1<T>>> CreateAsyncPageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Operation`1<Pageable`1<T>> CreatePageable(WaitUntil waitUntil, HttpMessage message, Func`3<Nullable`1<int>, string, HttpMessage> createNextPageMethod, Func`2<JsonElement, T> valueFactory, ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, OperationFinalStateVia finalStateVia, string scopeName, string itemPropertyName, string nextLinkPropertyName, RequestContext requestContext);
    public static Pageable`1<T> CreateEnumerable(Func`2<Nullable`1<int>, Page`1<T>> firstPageFunc, Func`3<string, Nullable`1<int>, Page`1<T>> nextPageFunc, Nullable`1<int> pageSize);
    public static AsyncPageable`1<T> CreateAsyncEnumerable(Func`2<Nullable`1<int>, Task`1<Page`1<T>>> firstPageFunc, Func`3<string, Nullable`1<int>, Task`1<Page`1<T>>> nextPageFunc, Nullable`1<int> pageSize);
    private static ValueTuple`2<List`1<T>, string> ParseResponseForBinaryData(Response response, Byte[] itemPropertyName, Byte[] nextLinkPropertyName);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static object <ParseResponseForBinaryData>g__ReadBinaryData|19_0(Utf8JsonReader& r, ReadOnlyMemory`1& content);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.Pipeline.ActivityExtensions : object {
    private static bool SupportsActivitySourceSwitch;
    [NullableAttribute("2")]
private static Type ActivitySourceType;
    [NullableAttribute("2")]
private static Type ActivityKindType;
    [NullableAttribute("2")]
private static Type ActivityTagsCollectionType;
    [NullableAttribute("2")]
private static Type ActivityLinkType;
    [NullableAttribute("2")]
private static Type ActivityContextType;
    [NullableAttribute("2")]
private static Type ActivityStatusCodeType;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`2<Activity, int> SetIdFormatMethod;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Func`2<Activity, string> GetTraceStateStringMethod;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`2<Activity, string> SetTraceStateStringMethod;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`3<Activity, int, string> SetErrorStatusMethod;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Func`2<Activity, int> GetIdFormatMethod;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`3<Activity, string, object> ActivityAddTagMethod;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Func`8<object, string, int, object, ICollection`1<KeyValuePair`2<string, object>>, IList, DateTimeOffset, Activity> ActivitySourceStartActivityMethod;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Func`2<object, bool> ActivitySourceHasListenersMethod;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Func`4<string, string, ICollection`1<KeyValuePair`2<string, object>>, object> CreateActivityLinkMethod;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Func`1<ICollection`1<KeyValuePair`2<string, object>>> CreateTagsCollectionMethod;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Func`3<Activity, string, object> GetCustomPropertyMethod;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`3<Activity, string, object> SetCustomPropertyMethod;
    private static ParameterExpression ActivityParameter;
    [NullableAttribute("2")]
private static MethodInfo ParseActivityContextMethod;
    private static ActivityExtensions();
    [ExtensionAttribute]
public static object GetCustomProperty(Activity activity, string propertyName);
    [ExtensionAttribute]
public static void SetCustomProperty(Activity activity, string propertyName, object propertyValue);
    [ExtensionAttribute]
public static void SetW3CFormat(Activity activity);
    [ExtensionAttribute]
public static bool IsW3CFormat(Activity activity);
    [ExtensionAttribute]
public static string GetTraceState(Activity activity);
    [ExtensionAttribute]
public static void SetTraceState(Activity activity, string tracestate);
    [ExtensionAttribute]
public static void SetErrorStatus(Activity activity, string errorDescription);
    [ExtensionAttribute]
public static void AddObjectTag(Activity activity, string name, object value);
    public static bool SupportsActivitySource();
    public static ICollection`1<KeyValuePair`2<string, object>> CreateTagsCollection();
    [NullableContextAttribute("2")]
public static object CreateActivityLink(string traceparent, string tracestate, ICollection`1<KeyValuePair`2<string, object>> tags);
    [NullableContextAttribute("2")]
public static bool ActivitySourceHasListeners(object activitySource);
    [NullableContextAttribute("2")]
public static Activity ActivitySourceStartActivity(object activitySource, string activityName, int kind, DateTimeOffset startTime, ICollection`1<KeyValuePair`2<string, object>> tags, IList links, string traceparent, string tracestate);
    public static object CreateActivitySource(string name);
    [NullableContextAttribute("2")]
public static IList CreateLinkCollection();
    [ExtensionAttribute]
public static bool TryDispose(Activity activity);
    public static void ResetFeatureSwitch();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.ClientDiagnostics : DiagnosticScopeFactory {
    private static string DefaultMessage;
    private HttpMessageSanitizer _sanitizer;
    public ClientDiagnostics(ClientOptions options, Nullable`1<bool> suppressNestedClientActivities);
    public ClientDiagnostics(string optionsNamespace, string providerNamespace, DiagnosticsOptions diagnosticsOptions, Nullable`1<bool> suppressNestedClientActivities);
    internal static HttpMessageSanitizer CreateMessageSanitizer(DiagnosticsOptions diagnostics);
    [NullableContextAttribute("2")]
internal static ResponseError ExtractAzureErrorContent(string content);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Azure.Core.Pipeline.ClientDiagnostics/<CreateRequestFailedExceptionAsync>d__6")]
public ValueTask`1<RequestFailedException> CreateRequestFailedExceptionAsync(Response response, ResponseError error, IDictionary`2<string, string> additionalInfo, Exception innerException);
    public RequestFailedException CreateRequestFailedException(Response response, ResponseError error, IDictionary`2<string, string> additionalInfo, Exception innerException);
    [NullableContextAttribute("2")]
private RequestFailedException CreateRequestFailedExceptionWithContent(Response response, ResponseError error, string content, IDictionary`2<string, string> additionalInfo, Exception innerException);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.ClientDiagnostics/<CreateRequestFailedMessageAsync>d__9")]
public ValueTask`1<string> CreateRequestFailedMessageAsync(Response response, ResponseError error, IDictionary`2<string, string> additionalInfo, bool async);
    internal static string CreateRequestFailedMessageWithContent(Response response, ResponseError error, string content, IDictionary`2<string, string> additionalInfo, HttpMessageSanitizer sanitizer);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.ClientDiagnostics/<ReadContentAsync>d__11")]
internal static ValueTask`1<string> ReadContentAsync(Response response, bool async);
    internal static string GetResourceProviderNamespace(Assembly assembly);
}
internal static class Azure.Core.Pipeline.ContentTypeUtilities : object {
    public static bool TryGetTextEncoding(string contentType, Encoding& encoding);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.Pipeline.DiagnosticScope : ValueType {
    private static string AzureSdkScopeLabel;
    internal static string OpenTelemetrySchemaAttribute;
    internal static string OpenTelemetrySchemaVersion;
    private static object AzureSdkScopeValue;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ConcurrentDictionary`2<string, object> ActivitySources;
    [NullableAttribute("2")]
private ActivityAdapter _activityAdapter;
    private bool _suppressNestedClientActivities;
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    public bool IsEnabled { get; }
    internal DiagnosticScope(string ns, string scopeName, DiagnosticListener source, ActivityKind kind, bool suppressNestedClientActivities);
    internal DiagnosticScope(string scopeName, DiagnosticListener source, object diagnosticSourceArgs, object activitySource, ActivityKind kind, bool suppressNestedClientActivities);
    private static DiagnosticScope();
    [CompilerGeneratedAttribute]
public bool get_IsEnabled();
    private static object GetActivitySource(string ns, string name);
    public void AddAttribute(string name, string value);
    public void AddIntegerAttribute(string name, int value);
    public void AddAttribute(string name, T value);
    public void AddAttribute(string name, T value, Func`2<T, string> format);
    public void AddLink(string traceparent, string tracestate, IDictionary`2<string, string> attributes);
    public void Start();
    public void SetStartTime(DateTime dateTime);
    public void SetTraceContext(string traceparent, string tracestate);
    public sealed virtual void Dispose();
    [NullableContextAttribute("2")]
public void Failed(Exception exception);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.DiagnosticScopeFactory : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Dictionary`2<string, DiagnosticListener> _listeners;
    [NullableAttribute("2")]
private string _resourceProviderNamespace;
    [NullableAttribute("2")]
private DiagnosticListener _source;
    private bool _suppressNestedClientActivities;
    [CompilerGeneratedAttribute]
private bool <IsActivityEnabled>k__BackingField;
    public bool IsActivityEnabled { get; }
    public DiagnosticScopeFactory(string clientNamespace, string resourceProviderNamespace, bool isActivityEnabled, bool suppressNestedClientActivities);
    [CompilerGeneratedAttribute]
public bool get_IsActivityEnabled();
    public DiagnosticScope CreateScope(string name, ActivityKind kind);
}
[ExtensionAttribute]
internal static class Azure.Core.Pipeline.TaskExtensions : object {
    [ExtensionAttribute]
public static WithCancellationTaskAwaitable AwaitWithCancellation(Task task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static WithCancellationTaskAwaitable`1<T> AwaitWithCancellation(Task`1<T> task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static WithCancellationValueTaskAwaitable`1<T> AwaitWithCancellation(ValueTask`1<T> task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static T EnsureCompleted(Task`1<T> task);
    [ExtensionAttribute]
public static void EnsureCompleted(Task task);
    [ExtensionAttribute]
public static T EnsureCompleted(ValueTask`1<T> task);
    [ExtensionAttribute]
public static void EnsureCompleted(ValueTask task);
    [ExtensionAttribute]
public static Enumerable`1<T> EnsureSyncEnumerable(IAsyncEnumerable`1<T> asyncEnumerable);
    [ExtensionAttribute]
public static ConfiguredValueTaskAwaitable`1<T> EnsureCompleted(ConfiguredValueTaskAwaitable`1<T> awaitable, bool async);
    [ExtensionAttribute]
public static ConfiguredValueTaskAwaitable EnsureCompleted(ConfiguredValueTaskAwaitable awaitable, bool async);
    [ConditionalAttribute("DEBUG")]
private static void VerifyTaskCompleted(bool isCompleted);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Core.ProtocolOperation`1 : Operation`1<T> {
    private Func`2<Response, T> _resultSelector;
    private OperationInternal`1<T> _operation;
    private IOperation _nextLinkOperation;
    public string Id { get; }
    public T Value { get; }
    public bool HasCompleted { get; }
    public bool HasValue { get; }
    internal ProtocolOperation`1(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Request request, Response response, OperationFinalStateVia finalStateVia, string scopeName, Func`2<Response, T> resultSelector);
    public virtual string get_Id();
    public virtual T get_Value();
    public virtual bool get_HasCompleted();
    public virtual bool get_HasValue();
    public virtual Response GetRawResponse();
    public virtual Response UpdateStatus(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.ProtocolOperation`1/<Azure-Core-IOperation<T>-UpdateStateAsync>d__17")]
private sealed virtual override ValueTask`1<OperationState`1<T>> Azure.Core.IOperation<T>.UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.ProtocolOperationHelpers : object {
    public static Operation`1<TTo> Convert(Operation`1<TFrom> operation, Func`2<Response, TTo> convertFunc, ClientDiagnostics diagnostics, string scopeName);
    public static ValueTask`1<Operation`1<VoidValue>> ProcessMessageWithoutResponseValueAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static Operation`1<VoidValue> ProcessMessageWithoutResponseValue(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static ValueTask`1<Operation`1<BinaryData>> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    public static Operation`1<BinaryData> ProcessMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil);
    [AsyncStateMachineAttribute("Azure.Core.ProtocolOperationHelpers/<ProcessMessageAsync>d__5`1")]
public static ValueTask`1<Operation`1<T>> ProcessMessageAsync(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil, Func`2<Response, T> resultSelector);
    public static Operation`1<T> ProcessMessage(HttpPipeline pipeline, HttpMessage message, ClientDiagnostics clientDiagnostics, string scopeName, OperationFinalStateVia finalStateVia, RequestContext requestContext, WaitUntil waitUntil, Func`2<Response, T> resultSelector);
}
internal class Azure.Core.RawRequestUriBuilder : RequestUriBuilder {
    [NullableAttribute("1")]
private static string SchemeSeparator;
    private static char HostSeparator;
    private static char PortSeparator;
    [NullableAttribute("1")]
private static Char[] HostOrPort;
    private static char QueryBeginSeparator;
    private static char QueryContinueSeparator;
    private static char QueryValueSeparator;
    private Nullable`1<RawWritingPosition> _position;
    private static RawRequestUriBuilder();
    private static void GetQueryParts(ReadOnlySpan`1<char> queryUnparsed, ReadOnlySpan`1& name, ReadOnlySpan`1& value);
    [NullableContextAttribute("1")]
public void AppendRaw(string value, bool escape);
    private void AppendRaw(ReadOnlySpan`1<char> value, bool escape);
    [NullableContextAttribute("1")]
public void AppendRawNextLink(string nextLink, bool escape);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.RequestHeaderExtensions : object {
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, bool value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, float value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, double value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, int value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, long value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, TimeSpan value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, Guid value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, Byte[] value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, BinaryData value, string format);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string prefix, IDictionary`2<string, string> headersToAdd);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, string name, ETag value);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, MatchConditions conditions);
    [ExtensionAttribute]
public static void Add(RequestHeaders headers, RequestConditions conditions, string format);
    [ExtensionAttribute]
public static void AddDelimited(RequestHeaders headers, string name, IEnumerable`1<T> value, string delimiter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.RequestUriBuilderExtensions : object {
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, bool value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, float value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, double value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, int value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, Byte[] value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, IEnumerable`1<string> value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, DateTimeOffset value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, TimeSpan value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, Guid value, bool escape);
    [ExtensionAttribute]
public static void AppendPath(RequestUriBuilder builder, long value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, bool value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, float value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, DateTimeOffset value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, TimeSpan value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, double value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, decimal value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, int value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, long value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, TimeSpan value, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, Byte[] value, string format, bool escape);
    [ExtensionAttribute]
public static void AppendQuery(RequestUriBuilder builder, string name, Guid value, bool escape);
    [ExtensionAttribute]
public static void AppendQueryDelimited(RequestUriBuilder builder, string name, IEnumerable`1<T> value, string delimiter, bool escape);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.ResponseHeadersExtensions : object {
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Byte[]& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, Nullable`1& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string name, T& value);
    [ExtensionAttribute]
public static bool TryGetValue(ResponseHeaders headers, string prefix, IDictionary`2& value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.ResponseWithHeaders : object {
    public static ResponseWithHeaders`2<T, THeaders> FromValue(T value, THeaders headers, Response rawResponse);
    public static ResponseWithHeaders`1<THeaders> FromValue(THeaders headers, Response rawResponse);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.ResponseWithHeaders`1 : object {
    private Response _rawResponse;
    [CompilerGeneratedAttribute]
private THeaders <Headers>k__BackingField;
    public THeaders Headers { get; }
    public ResponseWithHeaders`1(THeaders headers, Response rawResponse);
    public Response GetRawResponse();
    [CompilerGeneratedAttribute]
public THeaders get_Headers();
    public static Response op_Implicit(ResponseWithHeaders`1<THeaders> self);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Core.ResponseWithHeaders`2 : Response`1<T> {
    private Response _rawResponse;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private THeaders <Headers>k__BackingField;
    public T Value { get; }
    public THeaders Headers { get; }
    public ResponseWithHeaders`2(T value, THeaders headers, Response rawResponse);
    public virtual Response GetRawResponse();
    [CompilerGeneratedAttribute]
public virtual T get_Value();
    [CompilerGeneratedAttribute]
public THeaders get_Headers();
    public static Response op_Implicit(ResponseWithHeaders`2<T, THeaders> self);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.RetryAfterDelayStrategy : DelayStrategy {
    protected static string RetryAfterHeaderName;
    protected static string RetryAfterMsHeaderName;
    protected static string XRetryAfterMsHeaderName;
    private DelayStrategy _fallbackStrategy;
    [NullableContextAttribute("2")]
public RetryAfterDelayStrategy(DelayStrategy fallbackStrategy);
    public virtual TimeSpan GetNextDelay(Response response, Nullable`1<TimeSpan> suggestedInterval);
}
[IsReadOnlyAttribute]
internal class Azure.Core.Sse.SseLine : ValueType {
    private string _original;
    private int _colonIndex;
    private int _valueIndex;
    [CompilerGeneratedAttribute]
private static SseLine <Empty>k__BackingField;
    public static SseLine Empty { get; }
    public bool IsEmpty { get; }
    public bool IsComment { get; }
    public ReadOnlyMemory`1<char> FieldName { get; }
    public ReadOnlyMemory`1<char> FieldValue { get; }
    internal SseLine(string original, int colonIndex, bool hasSpaceAfterColon);
    private static SseLine();
    [CompilerGeneratedAttribute]
public static SseLine get_Empty();
    public bool get_IsEmpty();
    public bool get_IsComment();
    public ReadOnlyMemory`1<char> get_FieldName();
    public ReadOnlyMemory`1<char> get_FieldValue();
    public virtual string ToString();
}
internal class Azure.Core.Sse.SseReader : object {
    private Stream _stream;
    private StreamReader _reader;
    private bool _disposedValue;
    public SseReader(Stream stream);
    public Nullable`1<SseLine> TryReadSingleFieldEvent();
    [AsyncStateMachineAttribute("Azure.Core.Sse.SseReader/<TryReadSingleFieldEventAsync>d__5")]
public Task`1<Nullable`1<SseLine>> TryReadSingleFieldEventAsync();
    public Nullable`1<SseLine> TryReadLine();
    [AsyncStateMachineAttribute("Azure.Core.Sse.SseReader/<TryReadLineAsync>d__7")]
public Task`1<Nullable`1<SseLine>> TryReadLineAsync();
    private static bool TryParseLine(string lineText, SseLine& line);
    private void Dispose(bool disposing);
    public sealed virtual void Dispose();
}
internal class Azure.Core.StringRequestContent : RequestContent {
    private Byte[] _bytes;
    public StringRequestContent(string value);
    [AsyncStateMachineAttribute("Azure.Core.StringRequestContent/<WriteToAsync>d__2")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.TypeFormatters : object {
    private static string RoundtripZFormat;
    [CompilerGeneratedAttribute]
private static string <DefaultNumberFormat>k__BackingField;
    public static string DefaultNumberFormat { get; }
    private static TypeFormatters();
    [CompilerGeneratedAttribute]
public static string get_DefaultNumberFormat();
    public static string ToString(bool value);
    public static string ToString(DateTime value, string format);
    public static string ToString(DateTimeOffset value, string format);
    public static string ToString(TimeSpan value, string format);
    public static string ToString(Byte[] value, string format);
    public static string ToBase64UrlString(Byte[] value);
    public static Byte[] FromBase64UrlString(string value);
    private static int GetNumBase64PaddingCharsToAddForDecode(int inputLength);
    public static DateTimeOffset ParseDateTimeOffset(string value, string format);
    public static TimeSpan ParseTimeSpan(string value, string format);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Utf8JsonRequestContent : RequestContent {
    private MemoryStream _stream;
    private RequestContent _content;
    [CompilerGeneratedAttribute]
private Utf8JsonWriter <JsonWriter>k__BackingField;
    public Utf8JsonWriter JsonWriter { get; }
    [CompilerGeneratedAttribute]
public Utf8JsonWriter get_JsonWriter();
    [AsyncStateMachineAttribute("Azure.Core.Utf8JsonRequestContent/<WriteToAsync>d__6")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.Utf8JsonWriterExtensions : object {
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, DateTime value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, TimeSpan value, string format);
    [ExtensionAttribute]
public static void WriteStringValue(Utf8JsonWriter writer, char value);
    [ExtensionAttribute]
public static void WriteNonEmptyArray(Utf8JsonWriter writer, string name, IReadOnlyList`1<string> values);
    [ExtensionAttribute]
public static void WriteBase64StringValue(Utf8JsonWriter writer, Byte[] value, string format);
    [ExtensionAttribute]
public static void WriteNumberValue(Utf8JsonWriter writer, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void WriteObjectValue(Utf8JsonWriter writer, object value);
}
[IsReadOnlyAttribute]
internal class Azure.Core.VoidValue : ValueType {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.XElementExtensions : object {
    [ExtensionAttribute]
public static Byte[] GetBytesFromBase64Value(XElement element, string format);
    [ExtensionAttribute]
public static DateTimeOffset GetDateTimeOffsetValue(XElement element, string format);
    [ExtensionAttribute]
public static TimeSpan GetTimeSpanValue(XElement element, string format);
    [ExtensionAttribute]
public static object GetObjectValue(XElement element, string format);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.XmlWriterContent : RequestContent {
    private MemoryStream _stream;
    private RequestContent _content;
    [CompilerGeneratedAttribute]
private XmlWriter <XmlWriter>k__BackingField;
    public XmlWriter XmlWriter { get; }
    [CompilerGeneratedAttribute]
public XmlWriter get_XmlWriter();
    [AsyncStateMachineAttribute("Azure.Core.XmlWriterContent/<WriteToAsync>d__6")]
public virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public virtual bool TryComputeLength(Int64& length);
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.XmlWriterExtensions : object {
    [ExtensionAttribute]
public static void WriteObjectValue(XmlWriter writer, object value, string nameHint);
    [ExtensionAttribute]
public static void WriteValue(XmlWriter writer, DateTimeOffset value, string format);
    [ExtensionAttribute]
public static void WriteValue(XmlWriter writer, TimeSpan value, string format);
    [ExtensionAttribute]
public static void WriteValue(XmlWriter writer, Byte[] value, string format);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[ExtensionAttribute]
public static class Microsoft.Extensions.Azure.AzureOpenAIClientBuilderExtensions : object {
    [ExtensionAttribute]
public static IAzureClientBuilder`2<OpenAIClient, OpenAIClientOptions> AddOpenAIClient(TBuilder builder, Uri endpoint, AzureKeyCredential credential);
    [ExtensionAttribute]
public static IAzureClientBuilder`2<OpenAIClient, OpenAIClientOptions> AddOpenAIClient(TBuilder builder, Uri endpoint);
    [ExtensionAttribute]
public static IAzureClientBuilder`2<OpenAIClient, OpenAIClientOptions> AddOpenAIClient(TBuilder builder, TConfiguration configuration);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
