[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.AsyncPageable`1 : object {
    [CompilerGeneratedAttribute]
private CancellationToken <CancellationToken>k__BackingField;
    protected CancellationToken CancellationToken { get; }
    protected AsyncPageable`1(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
protected virtual CancellationToken get_CancellationToken();
    public abstract virtual IAsyncEnumerable`1<Page`1<T>> AsPages(string continuationToken, Nullable`1<int> pageSizeHint);
    [AsyncIteratorStateMachineAttribute("Azure.AsyncPageable`1/<GetAsyncEnumerator>d__6")]
public virtual IAsyncEnumerator`1<T> GetAsyncEnumerator(CancellationToken cancellationToken);
    public static AsyncPageable`1<T> FromPages(IEnumerable`1<Page`1<T>> pages);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Azure.AzureCoreExtensions : object {
    [ExtensionAttribute]
public static T ToObject(BinaryData data, ObjectSerializer serializer, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.AzureCoreExtensions/<ToObjectAsync>d__1`1")]
[ExtensionAttribute]
public static ValueTask`1<T> ToObjectAsync(BinaryData data, ObjectSerializer serializer, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object ToObjectFromJson(BinaryData data);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
private static object GetObject(JsonElement& element);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.AzureKeyCredential : object {
    private string _key;
    [EditorBrowsableAttribute("1")]
public string Key { get; private set; }
    public AzureKeyCredential(string key);
    public string get_Key();
    private void set_Key(string value);
    public void Update(string key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.AzureNamedKeyCredential : object {
    private Tuple`2<string, string> _namedKey;
    public string Name { get; }
    public AzureNamedKeyCredential(string name, string key);
    public string get_Name();
    public void Update(string name, string key);
    [EditorBrowsableAttribute("1")]
public void Deconstruct(String& name, String& key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.AzureSasCredential : object {
    private string _signature;
    [EditorBrowsableAttribute("1")]
public string Signature { get; private set; }
    public AzureSasCredential(string signature);
    public string get_Signature();
    private void set_Signature(string value);
    public void Update(string signature);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.AccessToken : ValueType {
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <ExpiresOn>k__BackingField;
    public string Token { get; }
    public DateTimeOffset ExpiresOn { get; }
    public AccessToken(string accessToken, DateTimeOffset expiresOn);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Token();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public DateTimeOffset get_ExpiresOn();
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
internal static class Azure.Core.AppContextSwitchHelper : object {
    [NullableContextAttribute("1")]
public static bool GetConfigValue(string appContexSwitchName, string environmentVariableName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.Argument : object {
    public static void AssertNotNull(T value, string name);
    [NullableContextAttribute("0")]
public static void AssertNotNull(Nullable`1<T> value, string name);
    public static void AssertNotNullOrEmpty(IEnumerable`1<T> value, string name);
    public static void AssertNotNullOrEmpty(string value, string name);
    public static void AssertNotNullOrWhiteSpace(string value, string name);
    [NullableContextAttribute("0")]
public static void AssertNotDefault(T& value, string name);
    public static void AssertInRange(T value, T minimum, T maximum, string name);
    public static T CheckNotNull(T value, string name);
    public static string CheckNotNullOrEmpty(string value, string name);
    public static void AssertNull(T value, string name, string message);
}
internal static class Azure.Core.AuthorizationChallengeParser : object {
    [NullableContextAttribute("1")]
public static string GetChallengeParameterFromResponse(Response response, string challengeScheme, string challengeParameter);
    internal static bool TryGetNextChallenge(ReadOnlySpan`1& headerValue, ReadOnlySpan`1& challengeKey);
    internal static bool TryGetNextParameter(ReadOnlySpan`1& headerValue, ReadOnlySpan`1& paramKey, ReadOnlySpan`1& paramValue, char separator);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.AzureKeyCredentialPolicy : HttpPipelineSynchronousPolicy {
    private string _name;
    private AzureKeyCredential _credential;
    public AzureKeyCredentialPolicy(AzureKeyCredential credential, string name);
    public virtual void OnSendingRequest(HttpMessage message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Azure.Core.AzureLocation : ValueType {
    private static char Space;
    [CompilerGeneratedAttribute]
private static Dictionary`2<string, AzureLocation> <PublicCloudLocations>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <EastAsia>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <SoutheastAsia>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <CentralUS>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <EastUS>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <EastUS2>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <WestUS>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <NorthCentralUS>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <SouthCentralUS>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <NorthEurope>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <WestEurope>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <JapanWest>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <JapanEast>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <BrazilSouth>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <AustraliaEast>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <AustraliaSoutheast>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <SouthIndia>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <CentralIndia>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <WestIndia>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <CanadaCentral>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <CanadaEast>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <UKSouth>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <UKWest>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <WestCentralUS>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <WestUS2>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <KoreaCentral>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <KoreaSouth>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <FranceCentral>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <FranceSouth>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <AustraliaCentral>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <AustraliaCentral2>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <UAECentral>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <UAENorth>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <SouthAfricaNorth>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <SouthAfricaWest>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <SwitzerlandNorth>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <SwitzerlandWest>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <GermanyNorth>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <GermanyWestCentral>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <GermanyCentral>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <GermanyNorthEast>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <NorwayWest>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <NorwayEast>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <BrazilSoutheast>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <ChinaNorth>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <ChinaEast>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <ChinaNorth2>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <ChinaEast2>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <USDoDCentral>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <USDoDEast>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <USGovArizona>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <USGovTexas>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <USGovVirginia>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <USGovIowa>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    private static Dictionary`2<string, AzureLocation> PublicCloudLocations { get; }
    public static AzureLocation EastAsia { get; }
    public static AzureLocation SoutheastAsia { get; }
    public static AzureLocation CentralUS { get; }
    public static AzureLocation EastUS { get; }
    public static AzureLocation EastUS2 { get; }
    public static AzureLocation WestUS { get; }
    public static AzureLocation NorthCentralUS { get; }
    public static AzureLocation SouthCentralUS { get; }
    public static AzureLocation NorthEurope { get; }
    public static AzureLocation WestEurope { get; }
    public static AzureLocation JapanWest { get; }
    public static AzureLocation JapanEast { get; }
    public static AzureLocation BrazilSouth { get; }
    public static AzureLocation AustraliaEast { get; }
    public static AzureLocation AustraliaSoutheast { get; }
    public static AzureLocation SouthIndia { get; }
    public static AzureLocation CentralIndia { get; }
    public static AzureLocation WestIndia { get; }
    public static AzureLocation CanadaCentral { get; }
    public static AzureLocation CanadaEast { get; }
    public static AzureLocation UKSouth { get; }
    public static AzureLocation UKWest { get; }
    public static AzureLocation WestCentralUS { get; }
    public static AzureLocation WestUS2 { get; }
    public static AzureLocation KoreaCentral { get; }
    public static AzureLocation KoreaSouth { get; }
    public static AzureLocation FranceCentral { get; }
    public static AzureLocation FranceSouth { get; }
    public static AzureLocation AustraliaCentral { get; }
    public static AzureLocation AustraliaCentral2 { get; }
    public static AzureLocation UAECentral { get; }
    public static AzureLocation UAENorth { get; }
    public static AzureLocation SouthAfricaNorth { get; }
    public static AzureLocation SouthAfricaWest { get; }
    public static AzureLocation SwitzerlandNorth { get; }
    public static AzureLocation SwitzerlandWest { get; }
    public static AzureLocation GermanyNorth { get; }
    public static AzureLocation GermanyWestCentral { get; }
    public static AzureLocation GermanyCentral { get; }
    public static AzureLocation GermanyNorthEast { get; }
    public static AzureLocation NorwayWest { get; }
    public static AzureLocation NorwayEast { get; }
    public static AzureLocation BrazilSoutheast { get; }
    public static AzureLocation ChinaNorth { get; }
    public static AzureLocation ChinaEast { get; }
    public static AzureLocation ChinaNorth2 { get; }
    public static AzureLocation ChinaEast2 { get; }
    public static AzureLocation USDoDCentral { get; }
    public static AzureLocation USDoDEast { get; }
    public static AzureLocation USGovArizona { get; }
    public static AzureLocation USGovTexas { get; }
    public static AzureLocation USGovVirginia { get; }
    public static AzureLocation USGovIowa { get; }
    public string Name { get; }
    [NullableAttribute("2")]
public string DisplayName { get; }
    public AzureLocation(string location);
    public AzureLocation(string name, string displayName);
    private static AzureLocation();
    [CompilerGeneratedAttribute]
private static Dictionary`2<string, AzureLocation> get_PublicCloudLocations();
    [CompilerGeneratedAttribute]
public static AzureLocation get_EastAsia();
    [CompilerGeneratedAttribute]
public static AzureLocation get_SoutheastAsia();
    [CompilerGeneratedAttribute]
public static AzureLocation get_CentralUS();
    [CompilerGeneratedAttribute]
public static AzureLocation get_EastUS();
    [CompilerGeneratedAttribute]
public static AzureLocation get_EastUS2();
    [CompilerGeneratedAttribute]
public static AzureLocation get_WestUS();
    [CompilerGeneratedAttribute]
public static AzureLocation get_NorthCentralUS();
    [CompilerGeneratedAttribute]
public static AzureLocation get_SouthCentralUS();
    [CompilerGeneratedAttribute]
public static AzureLocation get_NorthEurope();
    [CompilerGeneratedAttribute]
public static AzureLocation get_WestEurope();
    [CompilerGeneratedAttribute]
public static AzureLocation get_JapanWest();
    [CompilerGeneratedAttribute]
public static AzureLocation get_JapanEast();
    [CompilerGeneratedAttribute]
public static AzureLocation get_BrazilSouth();
    [CompilerGeneratedAttribute]
public static AzureLocation get_AustraliaEast();
    [CompilerGeneratedAttribute]
public static AzureLocation get_AustraliaSoutheast();
    [CompilerGeneratedAttribute]
public static AzureLocation get_SouthIndia();
    [CompilerGeneratedAttribute]
public static AzureLocation get_CentralIndia();
    [CompilerGeneratedAttribute]
public static AzureLocation get_WestIndia();
    [CompilerGeneratedAttribute]
public static AzureLocation get_CanadaCentral();
    [CompilerGeneratedAttribute]
public static AzureLocation get_CanadaEast();
    [CompilerGeneratedAttribute]
public static AzureLocation get_UKSouth();
    [CompilerGeneratedAttribute]
public static AzureLocation get_UKWest();
    [CompilerGeneratedAttribute]
public static AzureLocation get_WestCentralUS();
    [CompilerGeneratedAttribute]
public static AzureLocation get_WestUS2();
    [CompilerGeneratedAttribute]
public static AzureLocation get_KoreaCentral();
    [CompilerGeneratedAttribute]
public static AzureLocation get_KoreaSouth();
    [CompilerGeneratedAttribute]
public static AzureLocation get_FranceCentral();
    [CompilerGeneratedAttribute]
public static AzureLocation get_FranceSouth();
    [CompilerGeneratedAttribute]
public static AzureLocation get_AustraliaCentral();
    [CompilerGeneratedAttribute]
public static AzureLocation get_AustraliaCentral2();
    [CompilerGeneratedAttribute]
public static AzureLocation get_UAECentral();
    [CompilerGeneratedAttribute]
public static AzureLocation get_UAENorth();
    [CompilerGeneratedAttribute]
public static AzureLocation get_SouthAfricaNorth();
    [CompilerGeneratedAttribute]
public static AzureLocation get_SouthAfricaWest();
    [CompilerGeneratedAttribute]
public static AzureLocation get_SwitzerlandNorth();
    [CompilerGeneratedAttribute]
public static AzureLocation get_SwitzerlandWest();
    [CompilerGeneratedAttribute]
public static AzureLocation get_GermanyNorth();
    [CompilerGeneratedAttribute]
public static AzureLocation get_GermanyWestCentral();
    [CompilerGeneratedAttribute]
public static AzureLocation get_GermanyCentral();
    [CompilerGeneratedAttribute]
public static AzureLocation get_GermanyNorthEast();
    [CompilerGeneratedAttribute]
public static AzureLocation get_NorwayWest();
    [CompilerGeneratedAttribute]
public static AzureLocation get_NorwayEast();
    [CompilerGeneratedAttribute]
public static AzureLocation get_BrazilSoutheast();
    [CompilerGeneratedAttribute]
public static AzureLocation get_ChinaNorth();
    [CompilerGeneratedAttribute]
public static AzureLocation get_ChinaEast();
    [CompilerGeneratedAttribute]
public static AzureLocation get_ChinaNorth2();
    [CompilerGeneratedAttribute]
public static AzureLocation get_ChinaEast2();
    [CompilerGeneratedAttribute]
public static AzureLocation get_USDoDCentral();
    [CompilerGeneratedAttribute]
public static AzureLocation get_USDoDEast();
    [CompilerGeneratedAttribute]
public static AzureLocation get_USGovArizona();
    [CompilerGeneratedAttribute]
public static AzureLocation get_USGovTexas();
    [CompilerGeneratedAttribute]
public static AzureLocation get_USGovVirginia();
    [CompilerGeneratedAttribute]
public static AzureLocation get_USGovIowa();
    private static string GetNameFromDisplayName(string name, Boolean& foundSpace);
    [CompilerGeneratedAttribute]
public string get_Name();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_DisplayName();
    private static AzureLocation CreateStaticReference(string name, string displayName);
    public virtual string ToString();
    public static AzureLocation op_Implicit(string location);
    public sealed virtual bool Equals(AzureLocation other);
    public static string op_Implicit(AzureLocation location);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public static bool op_Equality(AzureLocation left, AzureLocation right);
    public static bool op_Inequality(AzureLocation left, AzureLocation right);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.AzureSasCredentialSynchronousPolicy : HttpPipelineSynchronousPolicy {
    private AzureSasCredential _credential;
    public AzureSasCredentialSynchronousPolicy(AzureSasCredential credential);
    public virtual void OnSendingRequest(HttpMessage message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.Base64Url : object {
    public static Byte[] Decode(string encoded);
    public static string Encode(Byte[] bytes);
    internal static string DecodeString(string encoded);
    internal static string EncodeString(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.Buffers.AzureBaseBuffersExtensions : object {
    [AsyncStateMachineAttribute("Azure.Core.Buffers.AzureBaseBuffersExtensions/<WriteAsync>d__0")]
[ExtensionAttribute]
public static Task WriteAsync(Stream stream, ReadOnlyMemory`1<byte> buffer, CancellationToken cancellation);
    [AsyncStateMachineAttribute("Azure.Core.Buffers.AzureBaseBuffersExtensions/<WriteAsync>d__1")]
[ExtensionAttribute]
public static Task WriteAsync(Stream stream, ReadOnlySequence`1<byte> buffer, CancellationToken cancellation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.CancellationHelper : object {
    private static string s_cancellationMessage;
    private static CancellationHelper();
    internal static bool ShouldWrapInOperationCanceledException(Exception exception, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
internal static Exception CreateOperationCanceledException(Exception innerException, CancellationToken cancellationToken, string message);
    [NullableContextAttribute("2")]
private static void ThrowOperationCanceledException(Exception innerException, CancellationToken cancellationToken);
    internal static void ThrowIfCancellationRequested(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.ChainingClassifier : ResponseClassifier {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ResponseClassificationHandler[] _handlers;
    private ResponseClassifier _endOfChain;
    public ChainingClassifier(ValueTuple`2[] statusCodes, ResponseClassificationHandler[] handlers, ResponseClassifier endOfChain);
    public virtual bool IsErrorResponse(HttpMessage message);
    private void AddClassifiers(ReadOnlySpan`1<ResponseClassificationHandler> handlers);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.Core.ClientOptions : object {
    private HttpPipelineTransport _transport;
    [CompilerGeneratedAttribute]
private bool <IsCustomTransportSet>k__BackingField;
    [CompilerGeneratedAttribute]
private static ClientOptions <Default>k__BackingField;
    [CompilerGeneratedAttribute]
private DiagnosticsOptions <Diagnostics>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <Retry>k__BackingField;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> <Policies>k__BackingField;
    internal bool IsCustomTransportSet { get; private set; }
    public static ClientOptions Default { get; private set; }
    public HttpPipelineTransport Transport { get; public set; }
    public DiagnosticsOptions Diagnostics { get; }
    public RetryOptions Retry { get; }
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> Policies { get; private set; }
    [NullableContextAttribute("2")]
protected ClientOptions(DiagnosticsOptions diagnostics);
    [NullableContextAttribute("2")]
internal ClientOptions(ClientOptions clientOptions, DiagnosticsOptions diagnostics);
    private static ClientOptions();
    [CompilerGeneratedAttribute]
internal bool get_IsCustomTransportSet();
    [CompilerGeneratedAttribute]
private void set_IsCustomTransportSet(bool value);
    [CompilerGeneratedAttribute]
public static ClientOptions get_Default();
    [CompilerGeneratedAttribute]
private static void set_Default(ClientOptions value);
    internal static void ResetDefaultOptions();
    public HttpPipelineTransport get_Transport();
    public void set_Transport(HttpPipelineTransport value);
    [CompilerGeneratedAttribute]
public DiagnosticsOptions get_Diagnostics();
    [CompilerGeneratedAttribute]
public RetryOptions get_Retry();
    public void AddPolicy(HttpPipelinePolicy policy, HttpPipelinePosition position);
    [CompilerGeneratedAttribute]
internal List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> get_Policies();
    [CompilerGeneratedAttribute]
private void set_Policies(List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> value);
    private static HttpPipelineTransport GetDefaultTransport();
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual string ToString();
}
internal class Azure.Core.ConstantDelayStrategy : DelayStrategy {
    internal static TimeSpan DefaultPollingInterval;
    private static ConstantDelayStrategy();
    [NullableContextAttribute("1")]
public virtual TimeSpan GetNextDelay(Response response, Nullable`1<TimeSpan> suggestedInterval);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Azure.Core.ContentType : ValueType {
    private string _contentType;
    [CompilerGeneratedAttribute]
private static ContentType <ApplicationJson>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContentType <ApplicationOctetStream>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContentType <TextPlain>k__BackingField;
    public static ContentType ApplicationJson { get; }
    public static ContentType ApplicationOctetStream { get; }
    public static ContentType TextPlain { get; }
    public ContentType(string contentType);
    private static ContentType();
    [CompilerGeneratedAttribute]
public static ContentType get_ApplicationJson();
    [CompilerGeneratedAttribute]
public static ContentType get_ApplicationOctetStream();
    [CompilerGeneratedAttribute]
public static ContentType get_TextPlain();
    public static ContentType op_Implicit(string contentType);
    public sealed virtual bool Equals(ContentType other);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(string other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(ContentType left, ContentType right);
    public static bool op_Inequality(ContentType left, ContentType right);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
public interface Azure.Core.Cryptography.IKeyEncryptionKey {
    public string KeyId { get; }
    public abstract virtual string get_KeyId();
    public abstract virtual Byte[] WrapKey(string algorithm, ReadOnlyMemory`1<byte> key, CancellationToken cancellationToken);
    public abstract virtual Task`1<Byte[]> WrapKeyAsync(string algorithm, ReadOnlyMemory`1<byte> key, CancellationToken cancellationToken);
    public abstract virtual Byte[] UnwrapKey(string algorithm, ReadOnlyMemory`1<byte> encryptedKey, CancellationToken cancellationToken);
    public abstract virtual Task`1<Byte[]> UnwrapKeyAsync(string algorithm, ReadOnlyMemory`1<byte> encryptedKey, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Azure.Core.Cryptography.IKeyEncryptionKeyResolver {
    public abstract virtual IKeyEncryptionKey Resolve(string keyId, CancellationToken cancellationToken);
    public abstract virtual Task`1<IKeyEncryptionKey> ResolveAsync(string keyId, CancellationToken cancellationToken);
}
internal class Azure.Core.DefaultClientOptions : ClientOptions {
    [NullableContextAttribute("2")]
private static Nullable`1<bool> EnvironmentVariableToBool(string value);
}
internal abstract class Azure.Core.DelayStrategy : object {
    [NullableContextAttribute("1")]
public abstract virtual TimeSpan GetNextDelay(Response response, Nullable`1<TimeSpan> suggestedInterval);
    protected static TimeSpan Max(TimeSpan t1, TimeSpan t2);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Azure.Core.DelegatedTokenCredential : object {
    public static TokenCredential Create(Func`3<TokenRequestContext, CancellationToken, AccessToken> getToken, Func`3<TokenRequestContext, CancellationToken, ValueTask`1<AccessToken>> getTokenAsync);
    public static TokenCredential Create(Func`3<TokenRequestContext, CancellationToken, AccessToken> getToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[EventSourceAttribute]
internal class Azure.Core.Diagnostics.AzureCoreEventSource : AzureEventSource {
    private static string EventSourceName;
    private static int RequestEvent;
    private static int RequestContentEvent;
    private static int ResponseEvent;
    private static int ResponseContentEvent;
    private static int ResponseDelayEvent;
    private static int ErrorResponseEvent;
    private static int ErrorResponseContentEvent;
    private static int RequestRetryingEvent;
    private static int ResponseContentBlockEvent;
    private static int ErrorResponseContentBlockEvent;
    private static int ResponseContentTextEvent;
    private static int ErrorResponseContentTextEvent;
    private static int ResponseContentTextBlockEvent;
    private static int ErrorResponseContentTextBlockEvent;
    private static int RequestContentTextEvent;
    private static int ExceptionResponseEvent;
    private static int BackgroundRefreshFailedEvent;
    private static int RequestRedirectEvent;
    private static int RequestRedirectBlockedEvent;
    private static int RequestRedirectCountExceededEvent;
    private static int PipelineTransportOptionsNotAppliedEvent;
    [CompilerGeneratedAttribute]
private static AzureCoreEventSource <Singleton>k__BackingField;
    public static AzureCoreEventSource Singleton { get; }
    private static AzureCoreEventSource();
    [CompilerGeneratedAttribute]
public static AzureCoreEventSource get_Singleton();
    [EventAttribute("19")]
public void BackgroundRefreshFailed(string requestId, string exception);
    [EventAttribute("1")]
public void Request(string requestId, string method, string uri, string headers, string clientAssembly);
    [EventAttribute("2")]
public void RequestContent(string requestId, Byte[] content);
    [EventAttribute("17")]
public void RequestContentText(string requestId, string content);
    [EventAttribute("5")]
public void Response(string requestId, int status, string reasonPhrase, string headers, double seconds);
    [EventAttribute("6")]
public void ResponseContent(string requestId, Byte[] content);
    [EventAttribute("11")]
public void ResponseContentBlock(string requestId, int blockNumber, Byte[] content);
    [EventAttribute("13")]
public void ResponseContentText(string requestId, string content);
    [EventAttribute("15")]
public void ResponseContentTextBlock(string requestId, int blockNumber, string content);
    [EventAttribute("8")]
public void ErrorResponse(string requestId, int status, string reasonPhrase, string headers, double seconds);
    [EventAttribute("9")]
public void ErrorResponseContent(string requestId, Byte[] content);
    [EventAttribute("12")]
public void ErrorResponseContentBlock(string requestId, int blockNumber, Byte[] content);
    [EventAttribute("14")]
public void ErrorResponseContentText(string requestId, string content);
    [EventAttribute("16")]
public void ErrorResponseContentTextBlock(string requestId, int blockNumber, string content);
    [EventAttribute("10")]
public void RequestRetrying(string requestId, int retryNumber, double seconds);
    [EventAttribute("7")]
public void ResponseDelay(string requestId, double seconds);
    [EventAttribute("18")]
public void ExceptionResponse(string requestId, string exception);
    [EventAttribute("20")]
public void RequestRedirect(string requestId, string from, string to, int status);
    [EventAttribute("21")]
public void RequestRedirectBlocked(string requestId, string from, string to);
    [EventAttribute("22")]
public void RequestRedirectCountExceeded(string requestId, string from, string to);
    [EventAttribute("23")]
public void PipelineTransportOptionsNotApplied(string optionsType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Azure.Core.Diagnostics.AzureEventSource : EventSource {
    private static string SharedDataKey;
    private static HashSet`1<string> NamesInUse;
    private static String[] MainEventSourceTraits;
    private static AzureEventSource();
    protected AzureEventSource(string eventSourceName);
    private static string DeduplicateName(string eventSourceName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.Diagnostics.AzureEventSourceListener : EventListener {
    public static string TraitName;
    public static string TraitValue;
    private List`1<EventSource> _eventSources;
    private Action`2<EventWrittenEventArgs, string> _log;
    private EventLevel _level;
    public AzureEventSourceListener(Action`2<EventWrittenEventArgs, string> log, EventLevel level);
    protected sealed virtual void OnEventSourceCreated(EventSource eventSource);
    protected sealed virtual void OnEventWritten(EventWrittenEventArgs eventData);
    public static AzureEventSourceListener CreateConsoleLogger(EventLevel level);
    public static AzureEventSourceListener CreateTraceLogger(EventLevel level);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Azure.Core.DiagnosticsOptions : object {
    private static int MaxApplicationIdLength;
    private string _applicationId;
    [CompilerGeneratedAttribute]
private bool <IsLoggingEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDistributedTracingEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsTelemetryEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsLoggingContentEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LoggedContentSizeLimit>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IList`1<string> <LoggedHeaderNames>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IList`1<string> <LoggedQueryParameters>k__BackingField;
    public bool IsLoggingEnabled { get; public set; }
    public bool IsDistributedTracingEnabled { get; public set; }
    public bool IsTelemetryEnabled { get; public set; }
    public bool IsLoggingContentEnabled { get; public set; }
    public int LoggedContentSizeLimit { get; public set; }
    [NullableAttribute("1")]
public IList`1<string> LoggedHeaderNames { get; internal set; }
    [NullableAttribute("1")]
public IList`1<string> LoggedQueryParameters { get; internal set; }
    public string ApplicationId { get; public set; }
    public static string DefaultApplicationId { get; public set; }
    internal DiagnosticsOptions(DiagnosticsOptions diagnosticsOptions);
    [CompilerGeneratedAttribute]
public bool get_IsLoggingEnabled();
    [CompilerGeneratedAttribute]
public void set_IsLoggingEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsDistributedTracingEnabled();
    [CompilerGeneratedAttribute]
public void set_IsDistributedTracingEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsTelemetryEnabled();
    [CompilerGeneratedAttribute]
public void set_IsTelemetryEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsLoggingContentEnabled();
    [CompilerGeneratedAttribute]
public void set_IsLoggingContentEnabled(bool value);
    [CompilerGeneratedAttribute]
public int get_LoggedContentSizeLimit();
    [CompilerGeneratedAttribute]
public void set_LoggedContentSizeLimit(int value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IList`1<string> get_LoggedHeaderNames();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal void set_LoggedHeaderNames(IList`1<string> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IList`1<string> get_LoggedQueryParameters();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal void set_LoggedQueryParameters(IList`1<string> value);
    public string get_ApplicationId();
    public void set_ApplicationId(string value);
    public static string get_DefaultApplicationId();
    public static void set_DefaultApplicationId(string value);
    private static Nullable`1<bool> EnvironmentVariableToBool(string value);
}
internal class Azure.Core.DictionaryHeaders : object {
    private Dictionary`2<string, object> _headers;
    public void AddHeader(string name, string value);
    public bool TryGetHeader(string name, String& value);
    public bool TryGetHeaderValues(string name, IEnumerable`1& values);
    public bool ContainsHeader(string name);
    public void SetHeader(string name, string value);
    public bool RemoveHeader(string name);
    public IEnumerable`1<HttpHeader> EnumerateHeaders();
    private static string JoinHeaderValue(IEnumerable`1<string> values);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.ExponentialDelayStrategy : DelayStrategy {
    private static TimeSpan[] _pollingSequence;
    private static TimeSpan _maxDelay;
    private int _index;
    private static ExponentialDelayStrategy();
    public virtual TimeSpan GetNextDelay(Response response, Nullable`1<TimeSpan> suggestedInterval);
}
[NullableContextAttribute("1")]
public interface Azure.Core.Extensions.IAzureClientBuilder`2 {
}
[NullableContextAttribute("1")]
public interface Azure.Core.Extensions.IAzureClientFactoryBuilder {
    public abstract virtual IAzureClientBuilder`2<TClient, TOptions> RegisterClientFactory(Func`2<TOptions, TClient> clientFactory);
}
public interface Azure.Core.Extensions.IAzureClientFactoryBuilderWithConfiguration`1 {
    [NullableContextAttribute("1")]
public abstract virtual IAzureClientBuilder`2<TClient, TOptions> RegisterClientFactory(TConfiguration configuration);
}
[NullableContextAttribute("1")]
public interface Azure.Core.Extensions.IAzureClientFactoryBuilderWithCredential {
    public abstract virtual IAzureClientBuilder`2<TClient, TOptions> RegisterClientFactory(Func`3<TOptions, TokenCredential, TClient> clientFactory, bool requiresCredential);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
[DefaultMemberAttribute("Item")]
public class Azure.Core.GeoJson.GeoArray`1 : ValueType {
    private object _container;
    public T Item { get; }
    public int Count { get; }
    internal GeoArray`1(object container);
    public sealed virtual T get_Item(int index);
    public sealed virtual int get_Count();
    [NullableContextAttribute("0")]
public Enumerator<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class Azure.Core.GeoJson.GeoBoundingBox : object {
    [CompilerGeneratedAttribute]
private double <West>k__BackingField;
    [CompilerGeneratedAttribute]
private double <South>k__BackingField;
    [CompilerGeneratedAttribute]
private double <East>k__BackingField;
    [CompilerGeneratedAttribute]
private double <North>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <MinAltitude>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <MaxAltitude>k__BackingField;
    public double West { get; }
    public double South { get; }
    public double East { get; }
    public double North { get; }
    public Nullable`1<double> MinAltitude { get; }
    public Nullable`1<double> MaxAltitude { get; }
    public double Item { get; }
    public GeoBoundingBox(double west, double south, double east, double north);
    public GeoBoundingBox(double west, double south, double east, double north, Nullable`1<double> minAltitude, Nullable`1<double> maxAltitude);
    [CompilerGeneratedAttribute]
public double get_West();
    [CompilerGeneratedAttribute]
public double get_South();
    [CompilerGeneratedAttribute]
public double get_East();
    [CompilerGeneratedAttribute]
public double get_North();
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_MinAltitude();
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_MaxAltitude();
    public sealed virtual bool Equals(GeoBoundingBox other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public double get_Item(int index);
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[JsonConverterAttribute("Azure.Core.GeoJson.GeoJsonConverter")]
public class Azure.Core.GeoJson.GeoCollection : GeoObject {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<GeoObject> <Geometries>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoObjectType <Type>k__BackingField;
    internal IReadOnlyList`1<GeoObject> Geometries { get; }
    public int Count { get; }
    public GeoObject Item { get; }
    public GeoObjectType Type { get; }
    public GeoCollection(IEnumerable`1<GeoObject> geometries);
    public GeoCollection(IEnumerable`1<GeoObject> geometries, GeoBoundingBox boundingBox, IReadOnlyDictionary`2<string, object> customProperties);
    [CompilerGeneratedAttribute]
internal IReadOnlyList`1<GeoObject> get_Geometries();
    public sealed virtual IEnumerator`1<GeoObject> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual int get_Count();
    public sealed virtual GeoObject get_Item(int index);
    [CompilerGeneratedAttribute]
public virtual GeoObjectType get_Type();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Core.GeoJson.GeoJsonConverter : JsonConverter`1<GeoObject> {
    private static string PointType;
    private static string LineStringType;
    private static string MultiPointType;
    private static string PolygonType;
    private static string MultiLineStringType;
    private static string MultiPolygonType;
    private static string GeometryCollectionType;
    private static string TypeProperty;
    private static string GeometriesProperty;
    private static string CoordinatesProperty;
    private static string BBoxProperty;
    public virtual bool CanConvert(Type typeToConvert);
    public virtual GeoObject Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, GeoObject value, JsonSerializerOptions options);
    internal static GeoObject Read(JsonElement element);
    [NullableContextAttribute("2")]
private static GeoBoundingBox ReadBoundingBox(JsonElement& element);
    private static IReadOnlyDictionary`2<string, object> ReadAdditionalProperties(JsonElement& element, string knownProperty);
    [NullableContextAttribute("2")]
private static object ReadAdditionalPropertyValue(JsonElement& element);
    private static IReadOnlyList`1<GeoPosition> ReadCoordinates(JsonElement coordinatesElement);
    private static GeoPosition ReadCoordinate(JsonElement coordinate);
    internal static void Write(Utf8JsonWriter writer, GeoObject value);
    private static void WriteAdditionalPropertyValue(Utf8JsonWriter writer, object value);
    private static JsonElement GetRequiredProperty(JsonElement element, string name);
    [CompilerGeneratedAttribute]
internal static void <Write>g__WritePositionValues|20_0(GeoPosition type, <>c__DisplayClass20_0& );
    [CompilerGeneratedAttribute]
internal static void <Write>g__WriteType|20_1(string type, <>c__DisplayClass20_0& );
    [CompilerGeneratedAttribute]
internal static void <Write>g__WritePosition|20_2(GeoPosition type, <>c__DisplayClass20_0& );
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static void <Write>g__WritePositions|20_3(GeoArray`1<GeoPosition> positions, <>c__DisplayClass20_0& );
}
public class Azure.Core.GeoJson.GeoLinearRing : object {
    [CompilerGeneratedAttribute]
private GeoArray`1<GeoPosition> <Coordinates>k__BackingField;
    public GeoArray`1<GeoPosition> Coordinates { get; }
    [NullableContextAttribute("1")]
public GeoLinearRing(IEnumerable`1<GeoPosition> coordinates);
    [CompilerGeneratedAttribute]
public GeoArray`1<GeoPosition> get_Coordinates();
}
[JsonConverterAttribute("Azure.Core.GeoJson.GeoJsonConverter")]
public class Azure.Core.GeoJson.GeoLineString : GeoObject {
    [CompilerGeneratedAttribute]
private GeoArray`1<GeoPosition> <Coordinates>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoObjectType <Type>k__BackingField;
    public GeoArray`1<GeoPosition> Coordinates { get; }
    public GeoObjectType Type { get; }
    [NullableContextAttribute("1")]
public GeoLineString(IEnumerable`1<GeoPosition> coordinates);
    [NullableContextAttribute("1")]
public GeoLineString(IEnumerable`1<GeoPosition> coordinates, GeoBoundingBox boundingBox, IReadOnlyDictionary`2<string, object> customProperties);
    [CompilerGeneratedAttribute]
public GeoArray`1<GeoPosition> get_Coordinates();
    [CompilerGeneratedAttribute]
public virtual GeoObjectType get_Type();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[JsonConverterAttribute("Azure.Core.GeoJson.GeoJsonConverter")]
public class Azure.Core.GeoJson.GeoLineStringCollection : GeoObject {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<GeoLineString> <Lines>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoObjectType <Type>k__BackingField;
    internal IReadOnlyList`1<GeoLineString> Lines { get; }
    public int Count { get; }
    public GeoLineString Item { get; }
    [NullableAttribute("0")]
public GeoArray`1<GeoArray`1<GeoPosition>> Coordinates { get; }
    public GeoObjectType Type { get; }
    public GeoLineStringCollection(IEnumerable`1<GeoLineString> lines);
    public GeoLineStringCollection(IEnumerable`1<GeoLineString> lines, GeoBoundingBox boundingBox, IReadOnlyDictionary`2<string, object> customProperties);
    [CompilerGeneratedAttribute]
internal IReadOnlyList`1<GeoLineString> get_Lines();
    public sealed virtual IEnumerator`1<GeoLineString> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual int get_Count();
    public sealed virtual GeoLineString get_Item(int index);
    [NullableContextAttribute("0")]
public GeoArray`1<GeoArray`1<GeoPosition>> get_Coordinates();
    [CompilerGeneratedAttribute]
public virtual GeoObjectType get_Type();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[JsonConverterAttribute("Azure.Core.GeoJson.GeoJsonConverter")]
public abstract class Azure.Core.GeoJson.GeoObject : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal static IReadOnlyDictionary`2<string, object> DefaultProperties;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, object> <CustomProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoBoundingBox <BoundingBox>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal IReadOnlyDictionary`2<string, object> CustomProperties { get; }
    public GeoObjectType Type { get; }
    public GeoBoundingBox BoundingBox { get; }
    internal GeoObject(GeoBoundingBox boundingBox, IReadOnlyDictionary`2<string, object> customProperties);
    private static GeoObject();
    [CompilerGeneratedAttribute]
internal IReadOnlyDictionary`2<string, object> get_CustomProperties();
    public abstract virtual GeoObjectType get_Type();
    [CompilerGeneratedAttribute]
public GeoBoundingBox get_BoundingBox();
    [NullableContextAttribute("1")]
public bool TryGetCustomProperty(string name, Object& value);
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
public static GeoObject Parse(string json);
}
public enum Azure.Core.GeoJson.GeoObjectType : Enum {
    public int value__;
    public static GeoObjectType Point;
    public static GeoObjectType MultiPoint;
    public static GeoObjectType Polygon;
    public static GeoObjectType MultiPolygon;
    public static GeoObjectType LineString;
    public static GeoObjectType MultiLineString;
    public static GeoObjectType GeometryCollection;
}
[JsonConverterAttribute("Azure.Core.GeoJson.GeoJsonConverter")]
public class Azure.Core.GeoJson.GeoPoint : GeoObject {
    [CompilerGeneratedAttribute]
private GeoPosition <Coordinates>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoObjectType <Type>k__BackingField;
    public GeoPosition Coordinates { get; }
    public GeoObjectType Type { get; }
    public GeoPoint(double longitude, double latitude);
    public GeoPoint(double longitude, double latitude, Nullable`1<double> altitude);
    public GeoPoint(GeoPosition position);
    [NullableContextAttribute("2")]
public GeoPoint(GeoPosition position, GeoBoundingBox boundingBox, IReadOnlyDictionary`2<string, object> customProperties);
    [CompilerGeneratedAttribute]
public GeoPosition get_Coordinates();
    [CompilerGeneratedAttribute]
public virtual GeoObjectType get_Type();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[JsonConverterAttribute("Azure.Core.GeoJson.GeoJsonConverter")]
public class Azure.Core.GeoJson.GeoPointCollection : GeoObject {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<GeoPoint> <Points>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoObjectType <Type>k__BackingField;
    internal IReadOnlyList`1<GeoPoint> Points { get; }
    public int Count { get; }
    public GeoPoint Item { get; }
    [NullableAttribute("0")]
public GeoArray`1<GeoPosition> Coordinates { get; }
    public GeoObjectType Type { get; }
    public GeoPointCollection(IEnumerable`1<GeoPoint> points);
    public GeoPointCollection(IEnumerable`1<GeoPoint> points, GeoBoundingBox boundingBox, IReadOnlyDictionary`2<string, object> customProperties);
    [CompilerGeneratedAttribute]
internal IReadOnlyList`1<GeoPoint> get_Points();
    public sealed virtual IEnumerator`1<GeoPoint> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual int get_Count();
    public sealed virtual GeoPoint get_Item(int index);
    [NullableContextAttribute("0")]
public GeoArray`1<GeoPosition> get_Coordinates();
    [CompilerGeneratedAttribute]
public virtual GeoObjectType get_Type();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonConverterAttribute("Azure.Core.GeoJson.GeoJsonConverter")]
public class Azure.Core.GeoJson.GeoPolygon : GeoObject {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<GeoLinearRing> <Rings>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoObjectType <Type>k__BackingField;
    public IReadOnlyList`1<GeoLinearRing> Rings { get; }
    public GeoLinearRing OuterRing { get; }
    [NullableAttribute("0")]
public GeoArray`1<GeoArray`1<GeoPosition>> Coordinates { get; }
    public GeoObjectType Type { get; }
    public GeoPolygon(IEnumerable`1<GeoPosition> positions);
    public GeoPolygon(IEnumerable`1<GeoLinearRing> rings);
    public GeoPolygon(IEnumerable`1<GeoLinearRing> rings, GeoBoundingBox boundingBox, IReadOnlyDictionary`2<string, object> customProperties);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<GeoLinearRing> get_Rings();
    public GeoLinearRing get_OuterRing();
    [NullableContextAttribute("0")]
public GeoArray`1<GeoArray`1<GeoPosition>> get_Coordinates();
    [CompilerGeneratedAttribute]
public virtual GeoObjectType get_Type();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[JsonConverterAttribute("Azure.Core.GeoJson.GeoJsonConverter")]
public class Azure.Core.GeoJson.GeoPolygonCollection : GeoObject {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<GeoPolygon> <Polygons>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoObjectType <Type>k__BackingField;
    internal IReadOnlyList`1<GeoPolygon> Polygons { get; }
    public int Count { get; }
    public GeoPolygon Item { get; }
    [NullableAttribute("0")]
public GeoArray`1<GeoArray`1<GeoArray`1<GeoPosition>>> Coordinates { get; }
    public GeoObjectType Type { get; }
    public GeoPolygonCollection(IEnumerable`1<GeoPolygon> polygons);
    public GeoPolygonCollection(IEnumerable`1<GeoPolygon> polygons, GeoBoundingBox boundingBox, IReadOnlyDictionary`2<string, object> customProperties);
    [CompilerGeneratedAttribute]
internal IReadOnlyList`1<GeoPolygon> get_Polygons();
    public sealed virtual IEnumerator`1<GeoPolygon> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual int get_Count();
    public sealed virtual GeoPolygon get_Item(int index);
    [NullableContextAttribute("0")]
public GeoArray`1<GeoArray`1<GeoArray`1<GeoPosition>>> get_Coordinates();
    [CompilerGeneratedAttribute]
public virtual GeoObjectType get_Type();
}
[IsReadOnlyAttribute]
[DefaultMemberAttribute("Item")]
public class Azure.Core.GeoJson.GeoPosition : ValueType {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Altitude>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Longitude>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Latitude>k__BackingField;
    public Nullable`1<double> Altitude { get; }
    public double Longitude { get; }
    public double Latitude { get; }
    public double Item { get; }
    public int Count { get; }
    public GeoPosition(double longitude, double latitude);
    public GeoPosition(double longitude, double latitude, Nullable`1<double> altitude);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Altitude();
    [CompilerGeneratedAttribute]
public double get_Longitude();
    [CompilerGeneratedAttribute]
public double get_Latitude();
    public sealed virtual bool Equals(GeoPosition other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(GeoPosition left, GeoPosition right);
    public static bool op_Inequality(GeoPosition left, GeoPosition right);
    [NullableContextAttribute("1")]
public virtual string ToString();
    public double get_Item(int index);
    public int get_Count();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.HashCodeBuilder : ValueType {
    private static UInt32 s_seed;
    private static UInt32 Prime1;
    private static UInt32 Prime2;
    private static UInt32 Prime3;
    private static UInt32 Prime4;
    private static UInt32 Prime5;
    private UInt32 _v1;
    private UInt32 _v2;
    private UInt32 _v3;
    private UInt32 _v4;
    private UInt32 _queue1;
    private UInt32 _queue2;
    private UInt32 _queue3;
    private UInt32 _length;
    private static HashCodeBuilder();
    private static UInt32 GenerateGlobalSeed();
    public static int Combine(T1 value1);
    public static int Combine(T1 value1, T2 value2);
    public static int Combine(T1 value1, T2 value2, T3 value3);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7, T8 value8);
    private static void Initialize(UInt32& v1, UInt32& v2, UInt32& v3, UInt32& v4);
    private static UInt32 Round(UInt32 hash, UInt32 input);
    private static UInt32 QueueRound(UInt32 hash, UInt32 queuedValue);
    private static UInt32 MixState(UInt32 v1, UInt32 v2, UInt32 v3, UInt32 v4);
    public static UInt32 RotateLeft(UInt32 value, int offset);
    private static UInt32 MixEmptyState();
    private static UInt32 MixFinal(UInt32 hash);
    public void Add(T value);
    public void Add(T value, IEqualityComparer`1<T> comparer);
    private void Add(int value);
    public int ToHashCode();
    [ObsoleteAttribute("HashCode is a mutable struct and should not be compared with other HashCodes. Use ToHashCode to retrieve the computed hash code.", "True")]
[EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("HashCode is a mutable struct and should not be compared with other HashCodes.", "True")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Azure.Core.HttpHeader : ValueType {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Name { get; }
    public string Value { get; }
    public HttpHeader(string name, string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_Value();
    public virtual int GetHashCode();
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual string ToString();
    public sealed virtual bool Equals(HttpHeader other);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.HttpMessage : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<Type, object> _typeProperties;
    [NullableAttribute("2")]
private Response _response;
    [CompilerGeneratedAttribute]
private Request <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <CancellationToken>k__BackingField;
    [CompilerGeneratedAttribute]
private ResponseClassifier <ResponseClassifier>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <BufferResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <NetworkTimeout>k__BackingField;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> <Policies>k__BackingField;
    public Request Request { get; }
    public Response Response { get; public set; }
    public bool HasResponse { get; }
    public CancellationToken CancellationToken { get; internal set; }
    public ResponseClassifier ResponseClassifier { get; public set; }
    public bool BufferResponse { get; public set; }
    public Nullable`1<TimeSpan> NetworkTimeout { get; public set; }
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> Policies { get; internal set; }
    public HttpMessage(Request request, ResponseClassifier responseClassifier);
    [CompilerGeneratedAttribute]
public Request get_Request();
    public Response get_Response();
    public void set_Response(Response value);
    public bool get_HasResponse();
    [CompilerGeneratedAttribute]
public CancellationToken get_CancellationToken();
    [CompilerGeneratedAttribute]
internal void set_CancellationToken(CancellationToken value);
    [CompilerGeneratedAttribute]
public ResponseClassifier get_ResponseClassifier();
    [CompilerGeneratedAttribute]
public void set_ResponseClassifier(ResponseClassifier value);
    [CompilerGeneratedAttribute]
public bool get_BufferResponse();
    [CompilerGeneratedAttribute]
public void set_BufferResponse(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_NetworkTimeout();
    [CompilerGeneratedAttribute]
public void set_NetworkTimeout(Nullable`1<TimeSpan> value);
    [NullableContextAttribute("2")]
internal void ApplyRequestContext(RequestContext context, ResponseClassifier classifier);
    [CompilerGeneratedAttribute]
internal List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> get_Policies();
    [CompilerGeneratedAttribute]
internal void set_Policies(List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> value);
    public bool TryGetProperty(string name, Object& value);
    public void SetProperty(string name, object value);
    internal bool TryGetInternalProperty(Type type, Object& value);
    internal void SetInternalProperty(Type type, object value);
    [NullableContextAttribute("2")]
public Stream ExtractResponseContent();
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.HttpMessageSanitizer : object {
    private static string LogAllValue;
    private bool _logAllHeaders;
    private bool _logFullQueries;
    private String[] _allowedQueryParameters;
    private string _redactedPlaceholder;
    private HashSet`1<string> _allowedHeaders;
    internal static HttpMessageSanitizer Default;
    public HttpMessageSanitizer(String[] allowedQueryParameters, String[] allowedHeaders, string redactedPlaceholder);
    private static HttpMessageSanitizer();
    public string SanitizeHeader(string name, string value);
    public string SanitizeUrl(string url);
}
public enum Azure.Core.HttpPipelinePosition : Enum {
    public int value__;
    public static HttpPipelinePosition PerCall;
    public static HttpPipelinePosition PerRetry;
    public static HttpPipelinePosition BeforeTransport;
}
[AttributeUsageAttribute("32")]
internal class Azure.Core.InitializationConstructorAttribute : Attribute {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.JsonPatch.JsonPatchOperation : ValueType {
    [CompilerGeneratedAttribute]
private JsonPatchOperationKind <Kind>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <From>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RawJsonValue>k__BackingField;
    public JsonPatchOperationKind Kind { get; }
    [NullableAttribute("1")]
public string Path { get; }
    public string From { get; }
    public string RawJsonValue { get; }
    public JsonPatchOperation(JsonPatchOperationKind kind, string path, string from, string rawJsonValue);
    [CompilerGeneratedAttribute]
public JsonPatchOperationKind get_Kind();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public string get_From();
    [CompilerGeneratedAttribute]
public string get_RawJsonValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.JsonPatch.JsonPatchOperationKind : ValueType {
    private string _operation;
    [CompilerGeneratedAttribute]
private static JsonPatchOperationKind <Add>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonPatchOperationKind <Remove>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonPatchOperationKind <Replace>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonPatchOperationKind <Move>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonPatchOperationKind <Copy>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonPatchOperationKind <Test>k__BackingField;
    public static JsonPatchOperationKind Add { get; }
    public static JsonPatchOperationKind Remove { get; }
    public static JsonPatchOperationKind Replace { get; }
    public static JsonPatchOperationKind Move { get; }
    public static JsonPatchOperationKind Copy { get; }
    public static JsonPatchOperationKind Test { get; }
    private JsonPatchOperationKind(string operation);
    private static JsonPatchOperationKind();
    [CompilerGeneratedAttribute]
public static JsonPatchOperationKind get_Add();
    [CompilerGeneratedAttribute]
public static JsonPatchOperationKind get_Remove();
    [CompilerGeneratedAttribute]
public static JsonPatchOperationKind get_Replace();
    [CompilerGeneratedAttribute]
public static JsonPatchOperationKind get_Move();
    [CompilerGeneratedAttribute]
public static JsonPatchOperationKind get_Copy();
    [CompilerGeneratedAttribute]
public static JsonPatchOperationKind get_Test();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationPoller : object {
    private DelayStrategy _delayStrategy;
    [NullableContextAttribute("2")]
public OperationPoller(DelayStrategy fallbackStrategy);
    public virtual ValueTask`1<Response> WaitForCompletionResponseAsync(Operation operation, Nullable`1<TimeSpan> suggestedInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionResponseAsync>d__8")]
public virtual ValueTask`1<Response> WaitForCompletionResponseAsync(UpdateStatusAsync updateStatusAsync, HasCompleted hasCompleted, GetRawResponse getRawResponse, Nullable`1<TimeSpan> suggestedInterval, CancellationToken cancellationToken);
    public virtual Response WaitForCompletionResponse(Operation operation, Nullable`1<TimeSpan> suggestedInterval, CancellationToken cancellationToken);
    public virtual Response WaitForCompletionResponse(UpdateStatus updateStatus, HasCompleted hasCompleted, GetRawResponse getRawResponse, Nullable`1<TimeSpan> suggestedInterval, CancellationToken cancellationToken);
    public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(Operation`1<T> operation, Nullable`1<TimeSpan> suggestedInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__12`1")]
public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(UpdateStatusAsync updateStatusAsync, HasCompleted hasCompleted, Value`1<T> value, GetRawResponse getRawResponse, Nullable`1<TimeSpan> suggestedInterval, CancellationToken cancellationToken);
    public virtual Response`1<T> WaitForCompletion(Operation`1<T> operation, Nullable`1<TimeSpan> suggestedInterval, CancellationToken cancellationToken);
    public virtual Response`1<T> WaitForCompletion(UpdateStatus updateStatus, HasCompleted hasCompleted, Value`1<T> value, GetRawResponse getRawResponse, Nullable`1<TimeSpan> suggestedInterval, CancellationToken cancellationToken);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.Pipeline.ActivityExtensions : object {
    private static bool SupportsActivitySourceSwitch;
    private static Type ActivitySourceType;
    private static Type ActivityKindType;
    private static Type ActivityTagsCollectionType;
    private static Type ActivityLinkType;
    private static Type ActivityContextType;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`2<Activity, int> SetIdFormatMethod;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Func`2<Activity, string> GetTraceStateStringMethod;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Func`2<Activity, int> GetIdFormatMethod;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`3<Activity, string, object> ActivityAddTagMethod;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Func`7<object, string, int, ICollection`1<KeyValuePair`2<string, object>>, IList, DateTimeOffset, Activity> ActivitySourceStartActivityMethod;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Func`2<object, bool> ActivitySourceHasListenersMethod;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Func`4<string, string, ICollection`1<KeyValuePair`2<string, object>>, object> CreateActivityLinkMethod;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Func`1<ICollection`1<KeyValuePair`2<string, object>>> CreateTagsCollectionMethod;
    [NullableAttribute("1")]
private static ParameterExpression ActivityParameter;
    private static ActivityExtensions();
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void SetW3CFormat(Activity activity);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool IsW3CFormat(Activity activity);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static string GetTraceState(Activity activity);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void AddObjectTag(Activity activity, string name, object value);
    public static bool SupportsActivitySource();
    public static ICollection`1<KeyValuePair`2<string, object>> CreateTagsCollection();
    public static object CreateActivityLink(string traceparent, string tracestate, ICollection`1<KeyValuePair`2<string, object>> tags);
    public static bool ActivitySourceHasListeners(object activitySource);
    public static Activity ActivitySourceStartActivity(object activitySource, string activityName, int kind, DateTimeOffset startTime, ICollection`1<KeyValuePair`2<string, object>> tags, IList links);
    [NullableContextAttribute("1")]
public static object CreateActivitySource(string name);
    public static IList CreateLinkCollection();
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool TryDispose(Activity activity);
    public static void ResetFeatureSwitch();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.Pipeline.BearerTokenAuthenticationPolicy : HttpPipelinePolicy {
    private String[] _scopes;
    private AccessTokenCache _accessTokenCache;
    public BearerTokenAuthenticationPolicy(TokenCredential credential, string scope);
    public BearerTokenAuthenticationPolicy(TokenCredential credential, IEnumerable`1<string> scopes);
    internal BearerTokenAuthenticationPolicy(TokenCredential credential, IEnumerable`1<string> scopes, TimeSpan tokenRefreshOffset, TimeSpan tokenRefreshRetryDelay);
    public virtual ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    public virtual void Process(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    protected virtual ValueTask AuthorizeRequestAsync(HttpMessage message);
    protected virtual void AuthorizeRequest(HttpMessage message);
    [NullableContextAttribute("0")]
protected virtual ValueTask`1<bool> AuthorizeRequestOnChallengeAsync(HttpMessage message);
    protected virtual bool AuthorizeRequestOnChallenge(HttpMessage message);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.BearerTokenAuthenticationPolicy/<ProcessAsync>d__11")]
private ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline, bool async);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.BearerTokenAuthenticationPolicy/<AuthenticateAndAuthorizeRequestAsync>d__12")]
protected ValueTask AuthenticateAndAuthorizeRequestAsync(HttpMessage message, TokenRequestContext context);
    protected void AuthenticateAndAuthorizeRequest(HttpMessage message, TokenRequestContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.ClientDiagnostics : DiagnosticScopeFactory {
    private static string DefaultMessage;
    private HttpMessageSanitizer _sanitizer;
    public ClientDiagnostics(ClientOptions options);
    public ClientDiagnostics(string optionsNamespace, string providerNamespace, DiagnosticsOptions diagnosticsOptions);
    internal static HttpMessageSanitizer CreateMessageSanitizer(DiagnosticsOptions diagnostics);
    [NullableContextAttribute("2")]
protected virtual ResponseError ExtractFailureContent(string content, ResponseHeaders responseHeaders, IDictionary`2& additionalInfo);
    [NullableContextAttribute("2")]
internal static ResponseError ExtractAzureErrorContent(string content);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Azure.Core.Pipeline.ClientDiagnostics/<CreateRequestFailedExceptionAsync>d__7")]
public ValueTask`1<RequestFailedException> CreateRequestFailedExceptionAsync(Response response, ResponseError error, IDictionary`2<string, string> additionalInfo, Exception innerException);
    public RequestFailedException CreateRequestFailedException(Response response, ResponseError error, IDictionary`2<string, string> additionalInfo, Exception innerException);
    [NullableContextAttribute("2")]
private RequestFailedException CreateRequestFailedExceptionWithContent(Response response, ResponseError error, string content, IDictionary`2<string, string> additionalInfo, Exception innerException);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.ClientDiagnostics/<CreateRequestFailedMessageAsync>d__10")]
public ValueTask`1<string> CreateRequestFailedMessageAsync(Response response, ResponseError error, IDictionary`2<string, string> additionalInfo, bool async);
    internal static string CreateRequestFailedMessageWithContent(Response response, ResponseError error, string content, IDictionary`2<string, string> additionalInfo, HttpMessageSanitizer sanitizer);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.ClientDiagnostics/<ReadContentAsync>d__12")]
internal static ValueTask`1<string> ReadContentAsync(Response response, bool async);
    internal static string GetResourceProviderNamespace(Assembly assembly);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.ClientRequestIdPolicy : HttpPipelineSynchronousPolicy {
    internal static string ClientRequestIdHeader;
    internal static string EchoClientRequestId;
    [CompilerGeneratedAttribute]
private static ClientRequestIdPolicy <Shared>k__BackingField;
    public static ClientRequestIdPolicy Shared { get; }
    private static ClientRequestIdPolicy();
    [CompilerGeneratedAttribute]
public static ClientRequestIdPolicy get_Shared();
    public virtual void OnSendingRequest(HttpMessage message);
}
internal static class Azure.Core.Pipeline.ContentTypeUtilities : object {
    public static bool TryGetTextEncoding(string contentType, Encoding& encoding);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.Pipeline.DiagnosticScope : ValueType {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ConcurrentDictionary`2<string, object> ActivitySources;
    [NullableAttribute("2")]
private ActivityAdapter _activityAdapter;
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    public bool IsEnabled { get; }
    internal DiagnosticScope(string ns, string scopeName, DiagnosticListener source, ActivityKind kind);
    internal DiagnosticScope(string scopeName, DiagnosticListener source, object diagnosticSourceArgs, object activitySource, ActivityKind kind);
    private static DiagnosticScope();
    [CompilerGeneratedAttribute]
public bool get_IsEnabled();
    private static object GetActivitySource(string ns, string name);
    public void AddAttribute(string name, string value);
    public void AddAttribute(string name, T value);
    public void AddAttribute(string name, T value, Func`2<T, string> format);
    public void AddLink(string traceparent, string tracestate, IDictionary`2<string, string> attributes);
    public void Start();
    public void SetStartTime(DateTime dateTime);
    public sealed virtual void Dispose();
    public void Failed(Exception e);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.DiagnosticScopeFactory : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Dictionary`2<string, DiagnosticListener> _listeners;
    [NullableAttribute("2")]
private string _resourceProviderNamespace;
    [NullableAttribute("2")]
private DiagnosticListener _source;
    [CompilerGeneratedAttribute]
private bool <IsActivityEnabled>k__BackingField;
    public bool IsActivityEnabled { get; }
    public DiagnosticScopeFactory(string clientNamespace, string resourceProviderNamespace, bool isActivityEnabled);
    [CompilerGeneratedAttribute]
public bool get_IsActivityEnabled();
    public DiagnosticScope CreateScope(string name, ActivityKind kind);
}
public class Azure.Core.Pipeline.DisposableHttpPipeline : HttpPipeline {
    private bool isTransportOwnedInternally;
    [NullableContextAttribute("1")]
internal DisposableHttpPipeline(HttpPipelineTransport transport, int perCallIndex, int perRetryIndex, HttpPipelinePolicy[] policies, ResponseClassifier responseClassifier, bool isTransportOwnedInternally);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.Pipeline.HttpClientTransport : HttpPipelineTransport {
    internal static string MessageForServerCertificateCallback;
    [CompilerGeneratedAttribute]
private HttpClient <Client>k__BackingField;
    public static HttpClientTransport Shared;
    internal HttpClient Client { get; }
    [NullableContextAttribute("2")]
internal HttpClientTransport(HttpPipelineTransportOptions options);
    public HttpClientTransport(HttpMessageHandler messageHandler);
    public HttpClientTransport(HttpClient client);
    private static HttpClientTransport();
    [CompilerGeneratedAttribute]
internal HttpClient get_Client();
    public sealed virtual Request CreateRequest();
    public virtual void Process(HttpMessage message);
    public virtual ValueTask ProcessAsync(HttpMessage message);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.HttpClientTransport/<ProcessAsync>d__12")]
private ValueTask ProcessAsync(HttpMessage message, bool async);
    private static HttpClient CreateDefaultClient(HttpPipelineTransportOptions options);
    private static HttpMessageHandler CreateDefaultHandler(HttpPipelineTransportOptions options);
    private static void SetProxySettings(HttpMessageHandler messageHandler);
    private static HttpRequestMessage BuildRequestMessage(HttpMessage message);
    internal static bool TryGetHeader(HttpHeaders headers, HttpContent content, string name, String& value);
    internal static bool TryGetHeader(HttpHeaders headers, HttpContent content, string name, IEnumerable`1& values);
    [IteratorStateMachineAttribute("Azure.Core.Pipeline.HttpClientTransport/<GetHeaders>d__19")]
internal static IEnumerable`1<HttpHeader> GetHeaders(HttpHeaders headers, HttpContent content);
    internal static bool RemoveHeader(HttpHeaders headers, HttpContent content, string name);
    internal static bool ContainsHeader(HttpHeaders headers, HttpContent content, string name);
    internal static void CopyHeaders(HttpHeaders from, HttpHeaders to);
    private static string JoinHeaderValues(IEnumerable`1<string> values);
    private static SocketsHttpHandler ApplyOptionsToHandler(SocketsHttpHandler httpHandler, HttpPipelineTransportOptions options);
    private static HttpClientHandler ApplyOptionsToHandler(HttpClientHandler httpHandler, HttpPipelineTransportOptions options);
    public sealed virtual void Dispose();
    private static void SetPropertiesOrOptions(HttpRequestMessage httpRequest, string name, T value);
    private static bool UseCookies();
}
internal class Azure.Core.Pipeline.HttpEnvironmentProxy : object {
    private static string EnvAllProxyUC;
    private static string EnvAllProxyLC;
    private static string EnvHttpProxyLC;
    private static string EnvHttpProxyUC;
    private static string EnvHttpsProxyLC;
    private static string EnvHttpsProxyUC;
    private static string EnvNoProxyLC;
    private static string EnvNoProxyUC;
    private static string EnvCGI;
    private Uri _httpProxyUri;
    private Uri _httpsProxyUri;
    private String[] _bypass;
    private ICredentials _credentials;
    public ICredentials Credentials { get; public set; }
    private HttpEnvironmentProxy(Uri httpProxy, Uri httpsProxy, string bypassList);
    public static bool TryCreate(IWebProxy& proxy);
    private static Uri GetUriFromString(string value);
    private bool IsMatchInBypassList(Uri input);
    public sealed virtual Uri GetProxy(Uri uri);
    public sealed virtual bool IsBypassed(Uri uri);
    public sealed virtual ICredentials get_Credentials();
    public sealed virtual void set_Credentials(ICredentials value);
}
internal class Azure.Core.Pipeline.HttpEnvironmentProxyCredentials : object {
    private NetworkCredential _httpCred;
    private NetworkCredential _httpsCred;
    private Uri _httpProxy;
    private Uri _httpsProxy;
    public HttpEnvironmentProxyCredentials(Uri httpProxy, NetworkCredential httpCred, Uri httpsProxy, NetworkCredential httpsCred);
    public sealed virtual NetworkCredential GetCredential(Uri uri, string authType);
    public static HttpEnvironmentProxyCredentials TryCreate(Uri httpProxy, Uri httpsProxy);
    private static NetworkCredential GetCredentialsFromString(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.Pipeline.HttpPipeline : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static AsyncLocal`1<HttpMessagePropertiesScope> CurrentHttpMessagePropertiesScope;
    private protected HttpPipelineTransport _transport;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ReadOnlyMemory`1<HttpPipelinePolicy> _pipeline;
    private bool _internallyConstructed;
    private int _perCallIndex;
    private int _perRetryIndex;
    [CompilerGeneratedAttribute]
private ResponseClassifier <ResponseClassifier>k__BackingField;
    public ResponseClassifier ResponseClassifier { get; }
    public HttpPipeline(HttpPipelineTransport transport, HttpPipelinePolicy[] policies, ResponseClassifier responseClassifier);
    internal HttpPipeline(HttpPipelineTransport transport, int perCallIndex, int perRetryIndex, HttpPipelinePolicy[] pipeline, ResponseClassifier responseClassifier);
    private static HttpPipeline();
    public Request CreateRequest();
    public HttpMessage CreateMessage();
    public HttpMessage CreateMessage(RequestContext context);
    [NullableContextAttribute("2")]
public HttpMessage CreateMessage(RequestContext context, ResponseClassifier classifier);
    [CompilerGeneratedAttribute]
public ResponseClassifier get_ResponseClassifier();
    public ValueTask SendAsync(HttpMessage message, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.HttpPipeline/<SendAsync>d__16")]
private ValueTask SendAsync(HttpMessage message);
    public void Send(HttpMessage message, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.HttpPipeline/<SendRequestAsync>d__18")]
public ValueTask`1<Response> SendRequestAsync(Request request, CancellationToken cancellationToken);
    public Response SendRequest(Request request, CancellationToken cancellationToken);
    public static IDisposable CreateClientRequestIdScope(string clientRequestId);
    public static IDisposable CreateHttpMessagePropertiesScope(IDictionary`2<string, object> messageProperties);
    private ReadOnlyMemory`1<HttpPipelinePolicy> CreateRequestPipeline(HttpPipelinePolicy[] policies, List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> customPolicies);
    private static int AddCustomPolicies(List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> source, HttpPipelinePolicy[] target, HttpPipelinePosition position, int start);
    private static void AddHttpMessageProperties(HttpMessage message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Azure.Core.Pipeline.HttpPipelineBuilder : object {
    public static HttpPipeline Build(ClientOptions options, HttpPipelinePolicy[] perRetryPolicies);
    public static HttpPipeline Build(ClientOptions options, HttpPipelinePolicy[] perCallPolicies, HttpPipelinePolicy[] perRetryPolicies, ResponseClassifier responseClassifier);
    public static DisposableHttpPipeline Build(ClientOptions options, HttpPipelinePolicy[] perCallPolicies, HttpPipelinePolicy[] perRetryPolicies, HttpPipelineTransportOptions transportOptions, ResponseClassifier responseClassifier);
    internal static ValueTuple`6<ResponseClassifier, HttpPipelineTransport, int, int, HttpPipelinePolicy[], bool> BuildInternal(ClientOptions options, HttpPipelinePolicy[] perCallPolicies, HttpPipelinePolicy[] perRetryPolicies, HttpPipelineTransportOptions defaultTransportOptions, ResponseClassifier responseClassifier);
    internal static TelemetryPolicy CreateTelemetryPolicy(ClientOptions options);
    [CompilerGeneratedAttribute]
internal static void <BuildInternal>g__AddCustomerPolicies|3_0(HttpPipelinePosition position, <>c__DisplayClass3_0& );
    [CompilerGeneratedAttribute]
internal static void <BuildInternal>g__AddNonNullPolicies|3_1(HttpPipelinePolicy[] policiesToAdd, <>c__DisplayClass3_0& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.Core.Pipeline.HttpPipelinePolicy : object {
    public abstract virtual ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    public abstract virtual void Process(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    protected static ValueTask ProcessNextAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    protected static void ProcessNext(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.Core.Pipeline.HttpPipelineSynchronousPolicy : HttpPipelinePolicy {
    private static Type[] _onReceivedResponseParameters;
    private bool _hasOnReceivedResponse;
    private static HttpPipelineSynchronousPolicy();
    public virtual void Process(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    public virtual ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    public virtual void OnSendingRequest(HttpMessage message);
    public virtual void OnReceivedResponse(HttpMessage message);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.HttpPipelineSynchronousPolicy/<<ProcessAsync>g__ProcessAsyncInner|4_0>d")]
[CompilerGeneratedAttribute]
private ValueTask <ProcessAsync>g__ProcessAsyncInner|4_0(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.Core.Pipeline.HttpPipelineTransport : object {
    public abstract virtual void Process(HttpMessage message);
    public abstract virtual ValueTask ProcessAsync(HttpMessage message);
    public abstract virtual Request CreateRequest();
    internal static HttpPipelineTransport Create(HttpPipelineTransportOptions options);
}
public class Azure.Core.Pipeline.HttpPipelineTransportOptions : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<ServerCertificateCustomValidationArgs, bool> <ServerCertificateCustomValidationCallback>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<ServerCertificateCustomValidationArgs, bool> ServerCertificateCustomValidationCallback { get; public set; }
    [CompilerGeneratedAttribute]
public Func`2<ServerCertificateCustomValidationArgs, bool> get_ServerCertificateCustomValidationCallback();
    [CompilerGeneratedAttribute]
public void set_ServerCertificateCustomValidationCallback(Func`2<ServerCertificateCustomValidationArgs, bool> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.HttpPipelineTransportPolicy : HttpPipelinePolicy {
    private HttpPipelineTransport _transport;
    private HttpMessageSanitizer _sanitizer;
    public HttpPipelineTransportPolicy(HttpPipelineTransport transport, HttpMessageSanitizer sanitizer);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.HttpPipelineTransportPolicy/<ProcessAsync>d__3")]
public virtual ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    public virtual void Process(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.LoggingPolicy : HttpPipelinePolicy {
    private static double RequestTooLongTime;
    private static AzureCoreEventSource s_eventSource;
    private bool _logContent;
    private int _maxLength;
    private HttpMessageSanitizer _sanitizer;
    [NullableAttribute("2")]
private string _assemblyName;
    public LoggingPolicy(bool logContent, int maxLength, HttpMessageSanitizer sanitizer, string assemblyName);
    private static LoggingPolicy();
    public virtual void Process(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    public virtual ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.LoggingPolicy/<ProcessAsync>d__9")]
private ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline, bool async);
    private string FormatUri(RequestUriBuilder requestUri);
    private string FormatHeaders(IEnumerable`1<HttpHeader> headers);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.ReadClientRequestIdPolicy : HttpPipelineSynchronousPolicy {
    public static string MessagePropertyKey;
    [CompilerGeneratedAttribute]
private static ReadClientRequestIdPolicy <Shared>k__BackingField;
    public static ReadClientRequestIdPolicy Shared { get; }
    private static ReadClientRequestIdPolicy();
    [CompilerGeneratedAttribute]
public static ReadClientRequestIdPolicy get_Shared();
    public virtual void OnSendingRequest(HttpMessage message);
}
internal abstract class Azure.Core.Pipeline.ReadOnlyStream : Stream {
    public bool CanWrite { get; }
    public virtual bool get_CanWrite();
    [NullableContextAttribute("1")]
public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual void SetLength(long value);
    public virtual void Flush();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.ReadTimeoutStream : ReadOnlyStream {
    private Stream _stream;
    private TimeSpan _readTimeout;
    private CancellationTokenSource _cancellationTokenSource;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public int ReadTimeout { get; public set; }
    public ReadTimeoutStream(Stream stream, TimeSpan readTimeout);
    public virtual int Read(Byte[] buffer, int offset, int count);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.ReadTimeoutStream/<ReadAsync>d__5")]
public virtual Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    private CancellationTokenSource StartTimeout(CancellationToken additionalToken, Boolean& dispose);
    private void InitializeTokenSource();
    private void DisposeStream();
    private void StopTimeout(CancellationTokenSource source, bool dispose);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual int get_ReadTimeout();
    public virtual void set_ReadTimeout(int value);
    private void UpdateReadTimeout();
    public virtual void Close();
    protected virtual void Dispose(bool disposing);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.RedirectPolicy : HttpPipelinePolicy {
    private int _maxAutomaticRedirections;
    [CompilerGeneratedAttribute]
private static RedirectPolicy <Shared>k__BackingField;
    public static RedirectPolicy Shared { get; }
    private static RedirectPolicy();
    [CompilerGeneratedAttribute]
public static RedirectPolicy get_Shared();
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.RedirectPolicy/<ProcessAsync>d__5")]
internal ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline, bool async);
    private static Uri GetUriForRedirect(Request request, Response response);
    private static bool RequestRequiresForceGet(int statusCode, RequestMethod requestMethod);
    internal static bool IsSupportedSecureScheme(string scheme);
    internal static bool IsSecureWebSocketScheme(string scheme);
    public virtual ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    public virtual void Process(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    [NullableContextAttribute("2")]
private static bool TryParseValue(string value, Uri& parsedValue);
    private static string DecodeUtf8FromString(string input);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.RequestActivityPolicy : HttpPipelinePolicy {
    private bool _isDistributedTracingEnabled;
    [NullableAttribute("2")]
private string _resourceProviderNamespace;
    private HttpMessageSanitizer _sanitizer;
    private static string TraceParentHeaderName;
    private static string TraceStateHeaderName;
    private static string RequestIdHeaderName;
    private static DiagnosticListener s_diagnosticSource;
    [NullableAttribute("2")]
private static object s_activitySource;
    private bool ShouldCreateActivity { get; }
    public RequestActivityPolicy(bool isDistributedTracingEnabled, string resourceProviderNamespace, HttpMessageSanitizer httpMessageSanitizer);
    private static RequestActivityPolicy();
    public virtual ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    public virtual void Process(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.RequestActivityPolicy/<ProcessAsync>d__11")]
private ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline, bool async);
    private static ValueTask ProcessNextAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline, bool async);
    private bool get_ShouldCreateActivity();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.ResponseBodyPolicy : HttpPipelinePolicy {
    private static int DefaultCopyBufferSize;
    private TimeSpan _networkTimeout;
    public ResponseBodyPolicy(TimeSpan networkTimeout);
    public virtual ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    public virtual void Process(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.ResponseBodyPolicy/<ProcessAsync>d__5")]
private ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline, bool async);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.ResponseBodyPolicy/<CopyToAsync>d__6")]
private Task CopyToAsync(Stream source, Stream destination, CancellationTokenSource cancellationTokenSource);
    private void CopyTo(Stream source, Stream destination, CancellationTokenSource cancellationTokenSource);
    [NullableContextAttribute("2")]
internal static void ThrowIfCancellationRequestedOrTimeout(CancellationToken originalToken, CancellationToken timeoutToken, Exception inner, TimeSpan timeout);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.RetryPolicy : HttpPipelinePolicy {
    private RetryMode _mode;
    private TimeSpan _delay;
    private TimeSpan _maxDelay;
    private int _maxRetries;
    private Random _random;
    private static string RetryAfterHeaderName;
    private static string RetryAfterMsHeaderName;
    private static string XRetryAfterMsHeaderName;
    public RetryPolicy(RetryMode mode, TimeSpan delay, TimeSpan maxDelay, int maxRetries);
    public virtual void Process(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    public virtual ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.RetryPolicy/<ProcessAsync>d__11")]
private ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline, bool async);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.RetryPolicy/<WaitAsync>d__12")]
internal virtual Task WaitAsync(TimeSpan time, CancellationToken cancellationToken);
    internal virtual void Wait(TimeSpan time, CancellationToken cancellationToken);
    protected virtual TimeSpan GetServerDelay(HttpMessage message);
    private void GetDelay(HttpMessage message, int attempted, TimeSpan& delay);
    private void GetDelay(int attempted, TimeSpan& delay);
    private TimeSpan CalculateExponentialDelay(int attempted);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Azure.Core.Pipeline.ServerCertificateCustomValidationArgs : object {
    [CompilerGeneratedAttribute]
private X509Certificate2 <Certificate>k__BackingField;
    [CompilerGeneratedAttribute]
private X509Chain <CertificateAuthorityChain>k__BackingField;
    [CompilerGeneratedAttribute]
private SslPolicyErrors <SslPolicyErrors>k__BackingField;
    public X509Certificate2 Certificate { get; }
    public X509Chain CertificateAuthorityChain { get; }
    public SslPolicyErrors SslPolicyErrors { get; }
    public ServerCertificateCustomValidationArgs(X509Certificate2 certificate, X509Chain certificateAuthorityChain, SslPolicyErrors sslPolicyErrors);
    [CompilerGeneratedAttribute]
public X509Certificate2 get_Certificate();
    [CompilerGeneratedAttribute]
public X509Chain get_CertificateAuthorityChain();
    [CompilerGeneratedAttribute]
public SslPolicyErrors get_SslPolicyErrors();
}
internal static class Azure.Core.Pipeline.ServicePointHelpers : object {
    private static int RuntimeDefaultConnectionLimit;
    private static int IncreasedConnectionLimit;
    private static int IncreasedConnectionLeaseTimeout;
    private static TimeSpan DefaultConnectionLeaseTimeoutTimeSpan;
    private static TimeSpan IncreasedConnectionLeaseTimeoutTimeSpan;
    private static ServicePointHelpers();
    [NullableContextAttribute("1")]
public static void SetLimits(HttpMessageHandler messageHandler);
}
[ExtensionAttribute]
internal static class Azure.Core.Pipeline.TaskExtensions : object {
    [ExtensionAttribute]
public static WithCancellationTaskAwaitable AwaitWithCancellation(Task task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static WithCancellationTaskAwaitable`1<T> AwaitWithCancellation(Task`1<T> task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static WithCancellationValueTaskAwaitable`1<T> AwaitWithCancellation(ValueTask`1<T> task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static T EnsureCompleted(Task`1<T> task);
    [ExtensionAttribute]
public static void EnsureCompleted(Task task);
    [ExtensionAttribute]
public static T EnsureCompleted(ValueTask`1<T> task);
    [ExtensionAttribute]
public static void EnsureCompleted(ValueTask task);
    [ExtensionAttribute]
public static Enumerable`1<T> EnsureSyncEnumerable(IAsyncEnumerable`1<T> asyncEnumerable);
    [ExtensionAttribute]
public static ConfiguredValueTaskAwaitable`1<T> EnsureCompleted(ConfiguredValueTaskAwaitable`1<T> awaitable, bool async);
    [ExtensionAttribute]
public static ConfiguredValueTaskAwaitable EnsureCompleted(ConfiguredValueTaskAwaitable awaitable, bool async);
    [ConditionalAttribute("DEBUG")]
private static void VerifyTaskCompleted(bool isCompleted);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.TelemetryPolicy : HttpPipelineSynchronousPolicy {
    private string _defaultHeader;
    public TelemetryPolicy(TelemetryDetails telemetryDetails);
    public virtual void OnSendingRequest(HttpMessage message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.ThreadSafeRandom : Random {
    private Random _random;
    public virtual int Next();
    public virtual int Next(int minValue, int maxValue);
    public virtual int Next(int maxValue);
    public virtual double NextDouble();
    public virtual void NextBytes(Byte[] buffer);
}
internal class Azure.Core.Pipeline.UserAgentValueKey : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.Core.Request : object {
    [NullableAttribute("2")]
private RequestUriBuilder _uri;
    [CompilerGeneratedAttribute]
private RequestMethod <Method>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private RequestContent <Content>k__BackingField;
    public RequestUriBuilder Uri { get; public set; }
    public RequestMethod Method { get; public set; }
    [NullableAttribute("2")]
public RequestContent Content { get; public set; }
    public string ClientRequestId { get; public set; }
    public RequestHeaders Headers { get; }
    public virtual RequestUriBuilder get_Uri();
    public virtual void set_Uri(RequestUriBuilder value);
    [CompilerGeneratedAttribute]
public virtual RequestMethod get_Method();
    [CompilerGeneratedAttribute]
public virtual void set_Method(RequestMethod value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual RequestContent get_Content();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual void set_Content(RequestContent value);
    protected internal abstract virtual void AddHeader(string name, string value);
    protected internal abstract virtual bool TryGetHeader(string name, String& value);
    protected internal abstract virtual bool TryGetHeaderValues(string name, IEnumerable`1& values);
    protected internal abstract virtual bool ContainsHeader(string name);
    protected internal virtual void SetHeader(string name, string value);
    protected internal abstract virtual bool RemoveHeader(string name);
    protected internal abstract virtual IEnumerable`1<HttpHeader> EnumerateHeaders();
    public abstract virtual string get_ClientRequestId();
    public abstract virtual void set_ClientRequestId(string value);
    public RequestHeaders get_Headers();
    public abstract virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.Core.RequestContent : object {
    private static Encoding s_UTF8NoBomEncoding;
    private static RequestContent();
    public static RequestContent Create(Stream stream);
    public static RequestContent Create(Byte[] bytes);
    public static RequestContent Create(Byte[] bytes, int index, int length);
    [NullableContextAttribute("0")]
public static RequestContent Create(ReadOnlyMemory`1<byte> bytes);
    [NullableContextAttribute("0")]
public static RequestContent Create(ReadOnlySequence`1<byte> bytes);
    public static RequestContent Create(string content);
    public static RequestContent Create(BinaryData content);
    public static RequestContent Create(object serializable, ObjectSerializer serializer);
    public static RequestContent op_Implicit(string content);
    public static RequestContent op_Implicit(BinaryData content);
    public abstract virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public abstract virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public abstract virtual bool TryComputeLength(Int64& length);
    public abstract virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Azure.Core.RequestHeaders : ValueType {
    private Request _request;
    internal RequestHeaders(Request request);
    public sealed virtual IEnumerator`1<HttpHeader> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public void Add(HttpHeader header);
    public void Add(string name, string value);
    public bool TryGetValue(string name, String& value);
    public bool TryGetValues(string name, IEnumerable`1& values);
    public bool Contains(string name);
    public void SetValue(string name, string value);
    public bool Remove(string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Azure.Core.RequestMethod : ValueType {
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private static RequestMethod <Get>k__BackingField;
    [CompilerGeneratedAttribute]
private static RequestMethod <Post>k__BackingField;
    [CompilerGeneratedAttribute]
private static RequestMethod <Put>k__BackingField;
    [CompilerGeneratedAttribute]
private static RequestMethod <Patch>k__BackingField;
    [CompilerGeneratedAttribute]
private static RequestMethod <Delete>k__BackingField;
    [CompilerGeneratedAttribute]
private static RequestMethod <Head>k__BackingField;
    [CompilerGeneratedAttribute]
private static RequestMethod <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private static RequestMethod <Trace>k__BackingField;
    public string Method { get; }
    public static RequestMethod Get { get; }
    public static RequestMethod Post { get; }
    public static RequestMethod Put { get; }
    public static RequestMethod Patch { get; }
    public static RequestMethod Delete { get; }
    public static RequestMethod Head { get; }
    public static RequestMethod Options { get; }
    public static RequestMethod Trace { get; }
    public RequestMethod(string method);
    private static RequestMethod();
    [CompilerGeneratedAttribute]
public string get_Method();
    [CompilerGeneratedAttribute]
public static RequestMethod get_Get();
    [CompilerGeneratedAttribute]
public static RequestMethod get_Post();
    [CompilerGeneratedAttribute]
public static RequestMethod get_Put();
    [CompilerGeneratedAttribute]
public static RequestMethod get_Patch();
    [CompilerGeneratedAttribute]
public static RequestMethod get_Delete();
    [CompilerGeneratedAttribute]
public static RequestMethod get_Head();
    [CompilerGeneratedAttribute]
public static RequestMethod get_Options();
    [CompilerGeneratedAttribute]
public static RequestMethod get_Trace();
    public static RequestMethod Parse(string method);
    public sealed virtual bool Equals(RequestMethod other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(RequestMethod left, RequestMethod right);
    public static bool op_Inequality(RequestMethod left, RequestMethod right);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.RequestUriBuilder : object {
    private static char QuerySeparator;
    private static char PathSeparator;
    private StringBuilder _pathAndQuery;
    private int _queryIndex;
    [NullableAttribute("2")]
private Uri _uri;
    private int _port;
    [NullableAttribute("2")]
private string _host;
    [NullableAttribute("2")]
private string _scheme;
    [NullableAttribute("2")]
public string Scheme { get; public set; }
    [NullableAttribute("2")]
public string Host { get; public set; }
    public int Port { get; public set; }
    public string Query { get; public set; }
    public string Path { get; public set; }
    private bool HasQuery { get; }
    private int QueryLength { get; }
    private int PathLength { get; }
    public string PathAndQuery { get; }
    private bool HasDefaultPortForScheme { get; }
    [NullableContextAttribute("2")]
public string get_Scheme();
    [NullableContextAttribute("2")]
public void set_Scheme(string value);
    [NullableContextAttribute("2")]
public string get_Host();
    [NullableContextAttribute("2")]
public void set_Host(string value);
    public int get_Port();
    public void set_Port(int value);
    public string get_Query();
    public void set_Query(string value);
    public string get_Path();
    public void set_Path(string value);
    private bool get_HasQuery();
    private int get_QueryLength();
    private int get_PathLength();
    public string get_PathAndQuery();
    public void Reset(Uri value);
    public Uri ToUri();
    public void AppendQuery(string name, string value);
    public void AppendQuery(string name, string value, bool escapeValue);
    public void AppendPath(string value);
    public void AppendPath(string value, bool escape);
    public virtual string ToString();
    private bool get_HasDefaultPortForScheme();
    private void ResetUri();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.ResourceIdentifier : object {
    internal static char Separator;
    private static string RootStringValue;
    private static string ProvidersKey;
    private static string SubscriptionsKey;
    private static string LocationsKey;
    private static string ResourceGroupKey;
    private static string SubscriptionStart;
    private static string ProviderStart;
    private bool _initialized;
    [NullableAttribute("2")]
private string _stringValue;
    private ResourceType _resourceType;
    private string _name;
    [NullableAttribute("2")]
private ResourceIdentifier _parent;
    private bool _isProviderResource;
    [NullableAttribute("2")]
private string _subscriptionId;
    [NullableAttribute("2")]
private string _provider;
    private Nullable`1<AzureLocation> _location;
    [NullableAttribute("2")]
private string _resourceGroupName;
    public static ResourceIdentifier Root;
    private string StringValue { get; }
    public ResourceType ResourceType { get; }
    public string Name { get; }
    [NullableAttribute("2")]
public ResourceIdentifier Parent { get; }
    internal bool IsProviderResource { get; }
    [NullableAttribute("2")]
public string SubscriptionId { get; }
    [NullableAttribute("2")]
public string Provider { get; }
    public Nullable`1<AzureLocation> Location { get; }
    [NullableAttribute("2")]
public string ResourceGroupName { get; }
    public ResourceIdentifier(string resourceId);
    private ResourceIdentifier(ResourceIdentifier parent, ResourceType resourceType, string resourceName, bool isProviderResource, SpecialType specialType);
    private static ResourceIdentifier();
    private void Init(ResourceIdentifier parent, ResourceType resourceType, string resourceName, bool isProviderResource, SpecialType specialType);
    private void Init();
    private T GetValue(T& value);
    [NullableContextAttribute("0")]
private static ResourceType ChooseResourceType(ReadOnlySpan`1<char> resourceTypeName, ResourceIdentifier parent, SpecialType& specialType);
    [NullableContextAttribute("0")]
private static ResourceIdentifierParts GetNextParts(ResourceIdentifier parent, ReadOnlySpan`1& remaining, ReadOnlySpan`1& nextWord);
    [NullableContextAttribute("0")]
private static ReadOnlySpan`1<char> PopNextWord(ReadOnlySpan`1& remaining);
    private string get_StringValue();
    public ResourceType get_ResourceType();
    public string get_Name();
    [NullableContextAttribute("2")]
public ResourceIdentifier get_Parent();
    internal bool get_IsProviderResource();
    [NullableContextAttribute("2")]
public string get_SubscriptionId();
    [NullableContextAttribute("2")]
public string get_Provider();
    public Nullable`1<AzureLocation> get_Location();
    [NullableContextAttribute("2")]
public string get_ResourceGroupName();
    private string ToResourceString();
    public virtual string ToString();
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(ResourceIdentifier other);
    [NullableContextAttribute("2")]
public sealed virtual int CompareTo(ResourceIdentifier other);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public static string op_Implicit(ResourceIdentifier id);
    public static bool op_Equality(ResourceIdentifier left, ResourceIdentifier right);
    public static bool op_Inequality(ResourceIdentifier left, ResourceIdentifier right);
    public static bool op_LessThan(ResourceIdentifier left, ResourceIdentifier right);
    public static bool op_LessThanOrEqual(ResourceIdentifier left, ResourceIdentifier right);
    public static bool op_GreaterThan(ResourceIdentifier left, ResourceIdentifier right);
    public static bool op_GreaterThanOrEqual(ResourceIdentifier left, ResourceIdentifier right);
    [EditorBrowsableAttribute("1")]
public ResourceIdentifier AppendProviderResource(string providerNamespace, string resourceType, string resourceName);
    [EditorBrowsableAttribute("1")]
public ResourceIdentifier AppendChildResource(string childResourceType, string childResourceName);
    private static void ValidateProviderResourceParameters(string providerNamespace, string resourceType, string resourceName);
    private static void ValidateChildResourceParameters(string childResourceType, string childResourceName);
    private static void ValidatePathSegment(string segment, string parameterName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Azure.Core.ResourceType : ValueType {
    internal static ResourceType Tenant;
    internal static ResourceType Subscription;
    internal static ResourceType ResourceGroup;
    internal static ResourceType Provider;
    internal static string ResourceNamespace;
    private string _stringValue;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    public string Namespace { get; }
    public string Type { get; }
    public ResourceType(string resourceType);
    internal ResourceType(string providerNamespace, string name);
    private ResourceType(string providerNamespace, string name, string fullName);
    private static ResourceType();
    internal ResourceType AppendChild(string childType);
    [EditorBrowsableAttribute("1")]
public string GetLastType();
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public string get_Type();
    public static ResourceType op_Implicit(string resourceType);
    public static string op_Implicit(ResourceType resourceType);
    public static bool op_Equality(ResourceType left, ResourceType right);
    public static bool op_Inequality(ResourceType left, ResourceType right);
    public sealed virtual bool Equals(ResourceType other);
    public virtual string ToString();
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
}
public abstract class Azure.Core.ResponseClassificationHandler : object {
    [NullableContextAttribute("1")]
public abstract virtual bool TryClassify(HttpMessage message, Boolean& isError);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.ResponseClassifier : object {
    [CompilerGeneratedAttribute]
private static ResponseClassifier <Shared>k__BackingField;
    internal static ResponseClassifier Shared { get; }
    private static ResponseClassifier();
    [CompilerGeneratedAttribute]
internal static ResponseClassifier get_Shared();
    public virtual bool IsRetriableResponse(HttpMessage message);
    public virtual bool IsRetriableException(Exception exception);
    public virtual bool IsRetriable(HttpMessage message, Exception exception);
    public virtual bool IsErrorResponse(HttpMessage message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Azure.Core.ResponseHeaders : ValueType {
    private Response _response;
    public Nullable`1<DateTimeOffset> Date { get; }
    [NullableAttribute("2")]
public string ContentType { get; }
    public Nullable`1<int> ContentLength { get; }
    public Nullable`1<ETag> ETag { get; }
    [NullableAttribute("2")]
public string RequestId { get; }
    internal ResponseHeaders(Response response);
    public Nullable`1<DateTimeOffset> get_Date();
    [NullableContextAttribute("2")]
public string get_ContentType();
    public Nullable`1<int> get_ContentLength();
    public Nullable`1<ETag> get_ETag();
    [NullableContextAttribute("2")]
public string get_RequestId();
    public sealed virtual IEnumerator`1<HttpHeader> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public bool TryGetValue(string name, String& value);
    public bool TryGetValues(string name, IEnumerable`1& values);
    public bool Contains(string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.RetryAfterDelayStrategy : DelayStrategy {
    protected static string RetryAfterHeaderName;
    protected static string RetryAfterMsHeaderName;
    protected static string XRetryAfterMsHeaderName;
    private DelayStrategy _fallbackStrategy;
    [NullableContextAttribute("2")]
public RetryAfterDelayStrategy(DelayStrategy fallbackStrategy);
    public virtual TimeSpan GetNextDelay(Response response, Nullable`1<TimeSpan> suggestedInterval);
}
public enum Azure.Core.RetryMode : Enum {
    public int value__;
    public static RetryMode Fixed;
    public static RetryMode Exponential;
}
public class Azure.Core.RetryOptions : object {
    [CompilerGeneratedAttribute]
private int <MaxRetries>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Delay>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <MaxDelay>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryMode <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <NetworkTimeout>k__BackingField;
    public int MaxRetries { get; public set; }
    public TimeSpan Delay { get; public set; }
    public TimeSpan MaxDelay { get; public set; }
    public RetryMode Mode { get; public set; }
    public TimeSpan NetworkTimeout { get; public set; }
    [NullableContextAttribute("2")]
internal RetryOptions(RetryOptions retryOptions);
    [CompilerGeneratedAttribute]
public int get_MaxRetries();
    [CompilerGeneratedAttribute]
public void set_MaxRetries(int value);
    [CompilerGeneratedAttribute]
public TimeSpan get_Delay();
    [CompilerGeneratedAttribute]
public void set_Delay(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_MaxDelay();
    [CompilerGeneratedAttribute]
public void set_MaxDelay(TimeSpan value);
    [CompilerGeneratedAttribute]
public RetryMode get_Mode();
    [CompilerGeneratedAttribute]
public void set_Mode(RetryMode value);
    [CompilerGeneratedAttribute]
public TimeSpan get_NetworkTimeout();
    [CompilerGeneratedAttribute]
public void set_NetworkTimeout(TimeSpan value);
}
[NullableContextAttribute("1")]
public interface Azure.Core.Serialization.IMemberNameConverter {
    public abstract virtual string ConvertMemberName(MemberInfo member);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.Serialization.JsonObjectSerializer : ObjectSerializer {
    private static int JsonIgnoreConditionAlways;
    [NullableAttribute("2")]
private static PropertyInfo s_jsonIgnoreAttributeCondition;
    private static bool s_jsonIgnoreAttributeConditionInitialized;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<MemberInfo, string> _cache;
    private JsonSerializerOptions _options;
    [CompilerGeneratedAttribute]
private static JsonObjectSerializer <Default>k__BackingField;
    public static JsonObjectSerializer Default { get; }
    public JsonObjectSerializer(JsonSerializerOptions options);
    private static JsonObjectSerializer();
    [CompilerGeneratedAttribute]
public static JsonObjectSerializer get_Default();
    public virtual void Serialize(Stream stream, object value, Type inputType, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.Serialization.JsonObjectSerializer/<SerializeAsync>d__11")]
public virtual ValueTask SerializeAsync(Stream stream, object value, Type inputType, CancellationToken cancellationToken);
    public virtual object Deserialize(Stream stream, Type returnType, CancellationToken cancellationToken);
    public virtual ValueTask`1<object> DeserializeAsync(Stream stream, Type returnType, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public virtual BinaryData Serialize(object value, Type inputType, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public virtual ValueTask`1<BinaryData> SerializeAsync(object value, Type inputType, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
private BinaryData SerializeToBinaryDataInternal(object value, Type inputType);
    private sealed virtual override string Azure.Core.Serialization.IMemberNameConverter.ConvertMemberName(MemberInfo member);
    private static int GetCondition(JsonIgnoreAttribute attribute);
    private string GetPropertyName(MemberInfo memberInfo);
    [CompilerGeneratedAttribute]
private string <Azure.Core.Serialization.IMemberNameConverter.ConvertMemberName>b__17_0(MemberInfo m);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.Core.Serialization.ObjectSerializer : object {
    public abstract virtual void Serialize(Stream stream, object value, Type inputType, CancellationToken cancellationToken);
    public abstract virtual ValueTask SerializeAsync(Stream stream, object value, Type inputType, CancellationToken cancellationToken);
    public abstract virtual object Deserialize(Stream stream, Type returnType, CancellationToken cancellationToken);
    public abstract virtual ValueTask`1<object> DeserializeAsync(Stream stream, Type returnType, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public virtual BinaryData Serialize(object value, Type inputType, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Azure.Core.Serialization.ObjectSerializer/<SerializeAsync>d__5")]
public virtual ValueTask`1<BinaryData> SerializeAsync(object value, Type inputType, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Azure.Core.Serialization.ObjectSerializer/<SerializeToBinaryDataInternalAsync>d__6")]
private ValueTask`1<BinaryData> SerializeToBinaryDataInternalAsync(object value, Type inputType, bool async, CancellationToken cancellationToken);
}
[AttributeUsageAttribute("32")]
internal class Azure.Core.SerializationConstructorAttribute : Attribute {
}
internal static class Azure.Core.Shared.EventSourceEventFormatting : object {
    [NullableContextAttribute("1")]
public static string Format(EventWrittenEventArgs eventData);
    private static void ProcessPayloadArray(Object[] payloadArray);
    [NullableContextAttribute("2")]
private static object FormatValue(object o);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.StatusCodeClassifier : ResponseClassifier {
    private static int Length;
    private UInt64[] _successCodes;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ResponseClassificationHandler[] <Handlers>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal ResponseClassificationHandler[] Handlers { get; internal set; }
    [NullableContextAttribute("0")]
public StatusCodeClassifier(ReadOnlySpan`1<ushort> successStatusCodes);
    private StatusCodeClassifier(UInt64[] successCodes, ResponseClassificationHandler[] handlers);
    [CompilerGeneratedAttribute]
internal ResponseClassificationHandler[] get_Handlers();
    [CompilerGeneratedAttribute]
internal void set_Handlers(ResponseClassificationHandler[] value);
    public virtual bool IsErrorResponse(HttpMessage message);
    internal virtual StatusCodeClassifier Clone();
    internal void AddClassifier(int statusCode, bool isError);
    private bool IsSuccessCode(int statusCode);
}
[ExtensionAttribute]
internal static class Azure.Core.StringExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static int IndexOfOrdinal(string s, char c);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static int GetHashCodeOrdinal(string s);
}
public class Azure.Core.SyncAsyncEventHandler`1 : MulticastDelegate {
    public SyncAsyncEventHandler`1(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual Task Invoke(T e);
    public virtual IAsyncResult BeginInvoke(T e, AsyncCallback callback, object object);
    public virtual Task EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.TelemetryDetails : object {
    private static int MaxApplicationIdLength;
    private string _userAgent;
    [CompilerGeneratedAttribute]
private Assembly <Assembly>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ApplicationId>k__BackingField;
    public Assembly Assembly { get; }
    [NullableAttribute("2")]
public string ApplicationId { get; }
    public TelemetryDetails(Assembly assembly, string applicationId);
    [CompilerGeneratedAttribute]
public Assembly get_Assembly();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ApplicationId();
    public void Apply(HttpMessage message);
    internal static string GenerateUserAgentString(Assembly clientAssembly, string applicationId);
    public virtual string ToString();
}
public abstract class Azure.Core.TokenCredential : object {
    public abstract virtual ValueTask`1<AccessToken> GetTokenAsync(TokenRequestContext requestContext, CancellationToken cancellationToken);
    public abstract virtual AccessToken GetToken(TokenRequestContext requestContext, CancellationToken cancellationToken);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Azure.Core.TokenRequestContext : ValueType {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private String[] <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParentRequestId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Claims>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [NullableAttribute("1")]
public String[] Scopes { get; }
    public string ParentRequestId { get; }
    public string Claims { get; }
    public string TenantId { get; }
    [NullableContextAttribute("1")]
public TokenRequestContext(String[] scopes, string parentRequestId);
    public TokenRequestContext(String[] scopes, string parentRequestId, string claims);
    public TokenRequestContext(String[] scopes, string parentRequestId, string claims, string tenantId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public String[] get_Scopes();
    [CompilerGeneratedAttribute]
public string get_ParentRequestId();
    [CompilerGeneratedAttribute]
public string get_Claims();
    [CompilerGeneratedAttribute]
public string get_TenantId();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
internal class Azure.Core.TypeReferenceTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <IgnoreExtraProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <InternalPropertiesToInclude>k__BackingField;
    public bool IgnoreExtraProperties { get; }
    public String[] InternalPropertiesToInclude { get; }
    public TypeReferenceTypeAttribute(bool ignoreExtraProperties, String[] internalPropertiesToInclude);
    [CompilerGeneratedAttribute]
public bool get_IgnoreExtraProperties();
    [CompilerGeneratedAttribute]
public String[] get_InternalPropertiesToInclude();
}
[FlagsAttribute]
public enum Azure.ErrorOptions : Enum {
    public int value__;
    public static ErrorOptions Default;
    public static ErrorOptions NoThrow;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
[JsonConverterAttribute("Azure.ETagConverter")]
public class Azure.ETag : ValueType {
    private static char QuoteCharacter;
    private static string QuoteString;
    private static string WeakETagPrefix;
    private static string DefaultFormat;
    private static string HeaderFormat;
    [NullableAttribute("2")]
private string _value;
    public static ETag All;
    public ETag(string etag);
    private static ETag();
    public static bool op_Equality(ETag left, ETag right);
    public static bool op_Inequality(ETag left, ETag right);
    public sealed virtual bool Equals(ETag other);
    [NullableContextAttribute("2")]
public bool Equals(string other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [EditorBrowsableAttribute("1")]
public virtual string ToString();
    public string ToString(string format);
    internal static ETag Parse(string value);
    private static bool IsValidQuotedFormat(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.ETagConverter : JsonConverter`1<ETag> {
    public virtual ETag Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, ETag value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.HttpAuthorization : object {
    [CompilerGeneratedAttribute]
private string <Scheme>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Parameter>k__BackingField;
    public string Scheme { get; }
    public string Parameter { get; }
    public HttpAuthorization(string scheme, string parameter);
    [CompilerGeneratedAttribute]
public string get_Scheme();
    [CompilerGeneratedAttribute]
public string get_Parameter();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.HttpRange : ValueType {
    [NullableAttribute("1")]
private static string Unit;
    [CompilerGeneratedAttribute]
private long <Offset>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Length>k__BackingField;
    public long Offset { get; }
    public Nullable`1<long> Length { get; }
    public HttpRange(long offset, Nullable`1<long> length);
    [CompilerGeneratedAttribute]
public long get_Offset();
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Length();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static bool op_Equality(HttpRange left, HttpRange right);
    public static bool op_Inequality(HttpRange left, HttpRange right);
    public sealed virtual bool Equals(HttpRange other);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.JsonPatchDocument : object {
    [NullableAttribute("0")]
private ReadOnlyMemory`1<byte> _rawDocument;
    private ObjectSerializer _serializer;
    private Collection`1<JsonPatchOperation> _operations;
    public JsonPatchDocument(ObjectSerializer serializer);
    [NullableContextAttribute("0")]
public JsonPatchDocument(ReadOnlyMemory`1<byte> rawDocument);
    [NullableContextAttribute("0")]
public JsonPatchDocument(ReadOnlyMemory`1<byte> rawDocument, ObjectSerializer serializer);
    public void AppendAddRaw(string path, string rawJsonValue);
    public void AppendAdd(string path, T value);
    public void AppendReplaceRaw(string path, string rawJsonValue);
    public void AppendReplace(string path, T value);
    public void AppendCopy(string from, string path);
    public void AppendMove(string from, string path);
    public void AppendRemove(string path);
    public void AppendTestRaw(string path, string rawJsonValue);
    public void AppendTest(string path, T value);
    [NullableContextAttribute("0")]
public ReadOnlyMemory`1<byte> ToBytes();
    public virtual string ToString();
    private void WriteTo(Utf8JsonWriter writer);
    private string Serialize(T value);
}
public class Azure.MatchConditions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<ETag> <IfMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ETag> <IfNoneMatch>k__BackingField;
    public Nullable`1<ETag> IfMatch { get; public set; }
    public Nullable`1<ETag> IfNoneMatch { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<ETag> get_IfMatch();
    [CompilerGeneratedAttribute]
public void set_IfMatch(Nullable`1<ETag> value);
    [CompilerGeneratedAttribute]
public Nullable`1<ETag> get_IfNoneMatch();
    [CompilerGeneratedAttribute]
public void set_IfNoneMatch(Nullable`1<ETag> value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[JsonConverterAttribute("Azure.Messaging.CloudEventConverter")]
public class Azure.Messaging.CloudEvent : object {
    [CompilerGeneratedAttribute]
private BinaryData <Data>k__BackingField;
    private string _id;
    [CompilerGeneratedAttribute]
private CloudEventDataFormat <DataFormat>k__BackingField;
    private string _source;
    private string _type;
    [CompilerGeneratedAttribute]
private string <SpecVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <Time>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataSchema>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <DataSerializationType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Subject>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, object> <ExtensionAttributes>k__BackingField;
    public BinaryData Data { get; public set; }
    [NullableAttribute("1")]
public string Id { get; public set; }
    internal CloudEventDataFormat DataFormat { get; internal set; }
    [NullableAttribute("1")]
public string Source { get; public set; }
    [NullableAttribute("1")]
public string Type { get; public set; }
    internal string SpecVersion { get; internal set; }
    public Nullable`1<DateTimeOffset> Time { get; public set; }
    public string DataSchema { get; public set; }
    public string DataContentType { get; public set; }
    internal Type DataSerializationType { get; }
    public string Subject { get; public set; }
    [NullableAttribute("1")]
public IDictionary`2<string, object> ExtensionAttributes { get; }
    [NullableContextAttribute("1")]
public CloudEvent(string source, string type, object jsonSerializableData, Type dataSerializationType);
    [NullableContextAttribute("1")]
public CloudEvent(string source, string type, BinaryData data, string dataContentType, CloudEventDataFormat dataFormat);
    [CompilerGeneratedAttribute]
public BinaryData get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(BinaryData value);
    [NullableContextAttribute("1")]
public string get_Id();
    [NullableContextAttribute("1")]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
internal CloudEventDataFormat get_DataFormat();
    [CompilerGeneratedAttribute]
internal void set_DataFormat(CloudEventDataFormat value);
    [NullableContextAttribute("1")]
public string get_Source();
    [NullableContextAttribute("1")]
public void set_Source(string value);
    [NullableContextAttribute("1")]
public string get_Type();
    [NullableContextAttribute("1")]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
internal string get_SpecVersion();
    [CompilerGeneratedAttribute]
internal void set_SpecVersion(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_Time();
    [CompilerGeneratedAttribute]
public void set_Time(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public string get_DataSchema();
    [CompilerGeneratedAttribute]
public void set_DataSchema(string value);
    [CompilerGeneratedAttribute]
public string get_DataContentType();
    [CompilerGeneratedAttribute]
public void set_DataContentType(string value);
    [CompilerGeneratedAttribute]
internal Type get_DataSerializationType();
    [CompilerGeneratedAttribute]
public string get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_ExtensionAttributes();
    [NullableContextAttribute("1")]
public static CloudEvent[] ParseMany(BinaryData json, bool skipValidation);
    [NullableContextAttribute("1")]
public static CloudEvent Parse(BinaryData json, bool skipValidation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Messaging.CloudEventConstants : object {
    public static string SpecVersion;
    public static string Id;
    public static string Source;
    public static string Type;
    public static string DataContentType;
    public static string DataSchema;
    public static string Subject;
    public static string Time;
    public static string Data;
    public static string DataBase64;
    public static string ErrorSkipValidationSuggestion;
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Messaging.CloudEventConverter : JsonConverter`1<CloudEvent> {
    public virtual CloudEvent Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    internal static CloudEvent DeserializeCloudEvent(JsonElement element, bool skipValidation);
    public virtual void Write(Utf8JsonWriter writer, CloudEvent value, JsonSerializerOptions options);
    private static void WriteObjectValue(Utf8JsonWriter writer, object value);
    [NullableContextAttribute("2")]
private static object GetObject(JsonElement& element);
}
public enum Azure.Messaging.CloudEventDataFormat : Enum {
    public int value__;
    public static CloudEventDataFormat Binary;
    public static CloudEventDataFormat Json;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
internal class Azure.Messaging.CloudEventExtensionAttributes`2 : object {
    private Dictionary`2<TKey, TValue> _backingDictionary;
    private static HashSet`1<string> s_reservedAttributes;
    public TValue Item { get; public set; }
    public ICollection`1<TKey> Keys { get; }
    public ICollection`1<TValue> Values { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    private static CloudEventExtensionAttributes`2();
    public sealed virtual TValue get_Item(TKey key);
    public sealed virtual void set_Item(TKey key, TValue value);
    public sealed virtual ICollection`1<TKey> get_Keys();
    public sealed virtual ICollection`1<TValue> get_Values();
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual void Add(TKey key, TValue value);
    public void AddWithoutValidation(TKey key, TValue value);
    public sealed virtual void Add(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual bool ContainsKey(TKey key);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int arrayIndex);
    public sealed virtual IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator();
    public sealed virtual bool Remove(TKey key);
    public sealed virtual bool Remove(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual bool TryGetValue(TKey key, TValue& value);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [NullableContextAttribute("2")]
private static void ValidateAttribute(string name, object value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Azure.Messaging.MessageContent : object {
    [CompilerGeneratedAttribute]
private BinaryData <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ContentType> <ContentTypeCore>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsReadOnly>k__BackingField;
    public BinaryData Data { get; public set; }
    public Nullable`1<ContentType> ContentType { get; public set; }
    [EditorBrowsableAttribute("1")]
protected Nullable`1<ContentType> ContentTypeCore { get; protected set; }
    public bool IsReadOnly { get; }
    [CompilerGeneratedAttribute]
public virtual BinaryData get_Data();
    [CompilerGeneratedAttribute]
public virtual void set_Data(BinaryData value);
    public virtual Nullable`1<ContentType> get_ContentType();
    public virtual void set_ContentType(Nullable`1<ContentType> value);
    [CompilerGeneratedAttribute]
protected virtual Nullable`1<ContentType> get_ContentTypeCore();
    [CompilerGeneratedAttribute]
protected virtual void set_ContentTypeCore(Nullable`1<ContentType> value);
    [CompilerGeneratedAttribute]
public virtual bool get_IsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.Operation : object {
    public string Id { get; }
    public bool HasCompleted { get; }
    public abstract virtual string get_Id();
    public abstract virtual Response GetRawResponse();
    public abstract virtual bool get_HasCompleted();
    public abstract virtual ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public abstract virtual Response UpdateStatus(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Operation/<WaitForCompletionResponseAsync>d__7")]
public virtual ValueTask`1<Response> WaitForCompletionResponseAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Operation/<WaitForCompletionResponseAsync>d__8")]
public virtual ValueTask`1<Response> WaitForCompletionResponseAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public virtual Response WaitForCompletionResponse(CancellationToken cancellationToken);
    public virtual Response WaitForCompletionResponse(TimeSpan pollingInterval, CancellationToken cancellationToken);
    internal static T GetValue(T& value);
    [NullableContextAttribute("0")]
internal static T GetValue(Nullable`1& value);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.Operation`1 : Operation {
    public T Value { get; }
    public bool HasValue { get; }
    public abstract virtual T get_Value();
    public abstract virtual bool get_HasValue();
    public virtual Response`1<T> WaitForCompletion(CancellationToken cancellationToken);
    public virtual Response`1<T> WaitForCompletion(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Operation`1/<WaitForCompletionAsync>d__6")]
public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Operation`1/<WaitForCompletionAsync>d__7")]
public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Operation`1/<WaitForCompletionResponseAsync>d__8")]
[EditorBrowsableAttribute("1")]
public virtual ValueTask`1<Response> WaitForCompletionResponseAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Operation`1/<WaitForCompletionResponseAsync>d__9")]
[EditorBrowsableAttribute("1")]
public virtual ValueTask`1<Response> WaitForCompletionResponseAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.Page`1 : object {
    public IReadOnlyList`1<T> Values { get; }
    [NullableAttribute("2")]
public string ContinuationToken { get; }
    public abstract virtual IReadOnlyList`1<T> get_Values();
    [NullableContextAttribute("2")]
public abstract virtual string get_ContinuationToken();
    public abstract virtual Response GetRawResponse();
    public static Page`1<T> FromValues(IReadOnlyList`1<T> values, string continuationToken, Response response);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.Pageable`1 : object {
    [CompilerGeneratedAttribute]
private CancellationToken <CancellationToken>k__BackingField;
    protected CancellationToken CancellationToken { get; }
    protected Pageable`1(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
protected virtual CancellationToken get_CancellationToken();
    public abstract virtual IEnumerable`1<Page`1<T>> AsPages(string continuationToken, Nullable`1<int> pageSizeHint);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual string ToString();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [IteratorStateMachineAttribute("Azure.Pageable`1/<GetEnumerator>d__8")]
public virtual IEnumerator`1<T> GetEnumerator();
    public static Pageable`1<T> FromPages(IEnumerable`1<Page`1<T>> pages);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Azure.PageableOperation`1 : Operation`1<AsyncPageable`1<T>> {
    [EditorBrowsableAttribute("1")]
public AsyncPageable`1<T> Value { get; }
    public virtual AsyncPageable`1<T> get_Value();
    public abstract virtual AsyncPageable`1<T> GetValuesAsync(CancellationToken cancellationToken);
    public abstract virtual Pageable`1<T> GetValues(CancellationToken cancellationToken);
}
public class Azure.RequestConditions : MatchConditions {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <IfModifiedSince>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <IfUnmodifiedSince>k__BackingField;
    public Nullable`1<DateTimeOffset> IfModifiedSince { get; public set; }
    public Nullable`1<DateTimeOffset> IfUnmodifiedSince { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_IfModifiedSince();
    [CompilerGeneratedAttribute]
public void set_IfModifiedSince(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_IfUnmodifiedSince();
    [CompilerGeneratedAttribute]
public void set_IfUnmodifiedSince(Nullable`1<DateTimeOffset> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.RequestContext : object {
    private bool _frozen;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ValueTuple`2[] _statusCodes;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ResponseClassificationHandler[] _handlers;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> <Policies>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorOptions <ErrorOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <CancellationToken>k__BackingField;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal ValueTuple`2[] StatusCodes { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal ResponseClassificationHandler[] Handlers { get; }
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> Policies { get; private set; }
    public ErrorOptions ErrorOptions { get; public set; }
    public CancellationToken CancellationToken { get; public set; }
    internal ValueTuple`2[] get_StatusCodes();
    internal ResponseClassificationHandler[] get_Handlers();
    [CompilerGeneratedAttribute]
internal List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> get_Policies();
    [CompilerGeneratedAttribute]
private void set_Policies(List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> value);
    [CompilerGeneratedAttribute]
public ErrorOptions get_ErrorOptions();
    [CompilerGeneratedAttribute]
public void set_ErrorOptions(ErrorOptions value);
    [CompilerGeneratedAttribute]
public CancellationToken get_CancellationToken();
    [CompilerGeneratedAttribute]
public void set_CancellationToken(CancellationToken value);
    public static RequestContext op_Implicit(ErrorOptions options);
    public void AddPolicy(HttpPipelinePolicy policy, HttpPipelinePosition position);
    public void AddClassifier(int statusCode, bool isError);
    public void AddClassifier(ResponseClassificationHandler classifier);
    internal void Freeze();
    internal ResponseClassifier Apply(ResponseClassifier classifier);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.RequestFailedException : Exception {
    [CompilerGeneratedAttribute]
private int <Status>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ErrorCode>k__BackingField;
    public int Status { get; }
    [NullableAttribute("2")]
public string ErrorCode { get; }
    public RequestFailedException(string message);
    public RequestFailedException(string message, Exception innerException);
    public RequestFailedException(int status, string message);
    public RequestFailedException(int status, string message, Exception innerException);
    [NullableContextAttribute("2")]
public RequestFailedException(int status, string message, string errorCode, Exception innerException);
    internal RequestFailedException(int status, ValueTuple`2<string, ResponseError> details);
    public RequestFailedException(Response response);
    protected RequestFailedException(SerializationInfo info, StreamingContext context);
    [CompilerGeneratedAttribute]
public int get_Status();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ErrorCode();
    private static ValueTuple`2<string, ResponseError> GetErrorDetails(Response response);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.Response : object {
    private static BinaryData s_EmptyBinaryData;
    [CompilerGeneratedAttribute]
private bool <IsError>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpMessageSanitizer <Sanitizer>k__BackingField;
    public int Status { get; }
    public string ReasonPhrase { get; }
    [NullableAttribute("2")]
public Stream ContentStream { get; public set; }
    public string ClientRequestId { get; public set; }
    public ResponseHeaders Headers { get; }
    public BinaryData Content { get; }
    public bool IsError { get; internal set; }
    internal HttpMessageSanitizer Sanitizer { get; internal set; }
    private static Response();
    public abstract virtual int get_Status();
    public abstract virtual string get_ReasonPhrase();
    [NullableContextAttribute("2")]
public abstract virtual Stream get_ContentStream();
    [NullableContextAttribute("2")]
public abstract virtual void set_ContentStream(Stream value);
    public abstract virtual string get_ClientRequestId();
    public abstract virtual void set_ClientRequestId(string value);
    public virtual ResponseHeaders get_Headers();
    public virtual BinaryData get_Content();
    public abstract virtual void Dispose();
    [CompilerGeneratedAttribute]
public virtual bool get_IsError();
    [CompilerGeneratedAttribute]
internal virtual void set_IsError(bool value);
    [CompilerGeneratedAttribute]
internal HttpMessageSanitizer get_Sanitizer();
    [CompilerGeneratedAttribute]
internal void set_Sanitizer(HttpMessageSanitizer value);
    protected internal abstract virtual bool TryGetHeader(string name, String& value);
    protected internal abstract virtual bool TryGetHeaderValues(string name, IEnumerable`1& values);
    protected internal abstract virtual bool ContainsHeader(string name);
    protected internal abstract virtual IEnumerable`1<HttpHeader> EnumerateHeaders();
    public static Response`1<T> FromValue(T value, Response response);
    public virtual string ToString();
    [NullableContextAttribute("2")]
internal static void DisposeStreamIfNotBuffered(Stream& stream);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerTypeProxyAttribute("Azure.ResponseDebugView`1")]
public abstract class Azure.Response`1 : object {
    public T Value { get; }
    public abstract virtual Response GetRawResponse();
    public abstract virtual T get_Value();
    public static T op_Implicit(Response`1<T> response);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.ResponseDebugView`1 : object {
    private Response`1<T> _response;
    public Response GetRawResponse { get; }
    public T Value { get; }
    public ResponseDebugView`1(Response`1<T> response);
    public Response get_GetRawResponse();
    public T get_Value();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[JsonConverterAttribute("Azure.ResponseError/Converter")]
[TypeReferenceTypeAttribute("True", "Mono.Cecil.CustomAttributeArgument[]")]
public class Azure.ResponseError : object {
    private JsonElement _element;
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private ResponseInnerError <InnerError>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IReadOnlyList`1<ResponseError> <Details>k__BackingField;
    public string Code { get; }
    public string Message { get; }
    internal ResponseInnerError InnerError { get; }
    internal string Target { get; }
    [NullableAttribute("1")]
internal IReadOnlyList`1<ResponseError> Details { get; }
    [InitializationConstructorAttribute]
public ResponseError(string code, string message);
    [SerializationConstructorAttribute]
internal ResponseError(string code, string message, string target, JsonElement element, ResponseInnerError innerError, IReadOnlyList`1<ResponseError> details);
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
internal ResponseInnerError get_InnerError();
    [CompilerGeneratedAttribute]
internal string get_Target();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal IReadOnlyList`1<ResponseError> get_Details();
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
internal void Append(StringBuilder builder, bool includeRaw);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[JsonConverterAttribute("Azure.ResponseInnerError/Converter")]
internal class Azure.ResponseInnerError : object {
    private JsonElement _innerErrorElement;
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private ResponseInnerError <InnerError>k__BackingField;
    public string Code { get; }
    public ResponseInnerError InnerError { get; }
    internal ResponseInnerError(string code, ResponseInnerError innerError, JsonElement innerErrorElement);
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public ResponseInnerError get_InnerError();
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
internal void Append(StringBuilder builder);
}
public class Azure.SyncAsyncEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private bool <IsRunningSynchronously>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <CancellationToken>k__BackingField;
    public bool IsRunningSynchronously { get; }
    public CancellationToken CancellationToken { get; }
    public SyncAsyncEventArgs(bool isRunningSynchronously, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
public bool get_IsRunningSynchronously();
    [CompilerGeneratedAttribute]
public CancellationToken get_CancellationToken();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.ValueResponse`1 : Response`1<T> {
    private Response _response;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    public T Value { get; }
    public ValueResponse`1(Response response, T value);
    [CompilerGeneratedAttribute]
public virtual T get_Value();
    public virtual Response GetRawResponse();
}
public enum Azure.WaitUntil : Enum {
    public int value__;
    public static WaitUntil Completed;
    public static WaitUntil Started;
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
