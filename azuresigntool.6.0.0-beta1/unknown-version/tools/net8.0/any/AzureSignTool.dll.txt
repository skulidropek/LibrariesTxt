internal class AzureSignTool.AboutCommand : Command {
    private static ValueTask`1<int> Run(CommandRunContext context, String[] arguments);
}
internal class AzureSignTool.AccessTokenCredential : TokenCredential {
    private AccessToken accessToken;
    public AccessTokenCredential(string token, DateTimeOffset expiresOn);
    public AccessTokenCredential(string token);
    public virtual AccessToken GetToken(TokenRequestContext requestContext, CancellationToken cancellationToken);
    public virtual ValueTask`1<AccessToken> GetTokenAsync(TokenRequestContext requestContext, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class AzureSignTool.AuthorityHostNames : object {
    private static ImmutableDictionary`2<string, Uri> _map;
    public static IEnumerable`1<string> Keys { get; }
    private static AuthorityHostNames();
    public static IEnumerable`1<string> get_Keys();
    public static Uri GetUriForAzureAuthorityIdentifier(string identifier);
}
public class AzureSignTool.AzureKeyVaultMaterializedConfiguration : object {
    [CompilerGeneratedAttribute]
private TokenCredential <TokenCredential>k__BackingField;
    [CompilerGeneratedAttribute]
private X509Certificate2 <PublicCertificate>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <KeyId>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public TokenCredential TokenCredential { get; public set; }
    public X509Certificate2 PublicCertificate { get; public set; }
    public Uri KeyId { get; public set; }
    public AzureKeyVaultMaterializedConfiguration(TokenCredential TokenCredential, X509Certificate2 PublicCertificate, Uri KeyId);
    [CompilerGeneratedAttribute]
private AzureKeyVaultMaterializedConfiguration(AzureKeyVaultMaterializedConfiguration original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public TokenCredential get_TokenCredential();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TokenCredential(TokenCredential value);
    [CompilerGeneratedAttribute]
public X509Certificate2 get_PublicCertificate();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PublicCertificate(X509Certificate2 value);
    [CompilerGeneratedAttribute]
public Uri get_KeyId();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_KeyId(Uri value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(AzureKeyVaultMaterializedConfiguration left, AzureKeyVaultMaterializedConfiguration right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(AzureKeyVaultMaterializedConfiguration left, AzureKeyVaultMaterializedConfiguration right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(AzureKeyVaultMaterializedConfiguration other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public AzureKeyVaultMaterializedConfiguration <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(TokenCredential& TokenCredential, X509Certificate2& PublicCertificate, Uri& KeyId);
}
public class AzureSignTool.AzureKeyVaultSignConfigurationSet : object {
    [CompilerGeneratedAttribute]
private bool <ManagedIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AzureClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AzureClientSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AzureTenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <AzureKeyVaultUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AzureKeyVaultCertificateName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AzureKeyVaultCertificateVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AzureAccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AzureAuthority>k__BackingField;
    public bool ManagedIdentity { get; public set; }
    public string AzureClientId { get; public set; }
    public string AzureClientSecret { get; public set; }
    public string AzureTenantId { get; public set; }
    public Uri AzureKeyVaultUrl { get; public set; }
    public string AzureKeyVaultCertificateName { get; public set; }
    public string AzureKeyVaultCertificateVersion { get; public set; }
    public string AzureAccessToken { get; public set; }
    public string AzureAuthority { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_ManagedIdentity();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ManagedIdentity(bool value);
    [CompilerGeneratedAttribute]
public string get_AzureClientId();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AzureClientId(string value);
    [CompilerGeneratedAttribute]
public string get_AzureClientSecret();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AzureClientSecret(string value);
    [CompilerGeneratedAttribute]
public string get_AzureTenantId();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AzureTenantId(string value);
    [CompilerGeneratedAttribute]
public Uri get_AzureKeyVaultUrl();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AzureKeyVaultUrl(Uri value);
    [CompilerGeneratedAttribute]
public string get_AzureKeyVaultCertificateName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AzureKeyVaultCertificateName(string value);
    [CompilerGeneratedAttribute]
public string get_AzureKeyVaultCertificateVersion();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AzureKeyVaultCertificateVersion(string value);
    [CompilerGeneratedAttribute]
public string get_AzureAccessToken();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AzureAccessToken(string value);
    [CompilerGeneratedAttribute]
public string get_AzureAuthority();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AzureAuthority(string value);
}
public abstract class AzureSignTool.ErrorOr`1 : object {
    private TValue _value;
    private Exception _error;
    private ErrorOr`1(TValue value);
    private ErrorOr`1(Exception ex);
    public static ErrorOr`1<TValue> op_Implicit(TValue value);
    public static ErrorOr`1<TValue> op_Implicit(Exception ex);
}
internal static class AzureSignTool.HRESULT : object {
    public static int S_OK;
    public static int E_INVALIDARG;
    public static int COR_E_BADIMAGEFORMAT;
    public static int E_FILE_NOT_FOUND;
    public static int E_PLATFORMNOTSUPPORTED;
    public static int S_SOME_SUCCESS;
    public static int E_ALL_FAILED;
    public static int TRUST_E_SUBJECT_FORM_UNKNOWN;
}
internal class AzureSignTool.KeyVaultConfigurationDiscoverer : object {
    private ILogger _logger;
    public KeyVaultConfigurationDiscoverer(ILogger logger);
    [AsyncStateMachineAttribute("AzureSignTool.KeyVaultConfigurationDiscoverer/<Materialize>d__2")]
public Task`1<ErrorOr`1<AzureKeyVaultMaterializedConfiguration>> Materialize(AzureKeyVaultSignConfigurationSet configuration);
}
public class AzureSignTool.Program : object {
    [NullableContextAttribute("1")]
public static Task`1<int> Main(String[] args);
    private static int <Main>(String[] args);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static string <Main>g__GetVersion|0_0();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class AzureSignTool.SignCommand : Command {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private HashSet`1<string> _allFiles;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private List`1<string> <Files>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeyVaultUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeyVaultClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeyVaultClientSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeyVaultTenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeyVaultCertificate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeyVaultCertificateVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeyVaultAccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseManagedIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SignDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SignDescriptionUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Rfc3161TimestampUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TimestampDigestAlgorithm>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileDigestAlgorithm>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthenticodeTimestampUrl>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private List`1<string> <AdditionalCertificates>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Verbose>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Quiet>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PageHashing>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <NoPageHashing>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ContinueOnError>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InputFileList>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxDegreeOfParallelism>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Colors>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SkipSignedFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AppendSignature>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AzureAuthority>k__BackingField;
    [NullableAttribute("1")]
private static String[] s_hashAlgorithm;
    [NullableAttribute("1")]
private List`1<string> Files { get; private set; }
    internal string KeyVaultUrl { get; internal set; }
    internal string KeyVaultClientId { get; internal set; }
    internal string KeyVaultClientSecret { get; internal set; }
    internal string KeyVaultTenantId { get; internal set; }
    internal string KeyVaultCertificate { get; internal set; }
    internal string KeyVaultCertificateVersion { get; internal set; }
    internal string KeyVaultAccessToken { get; internal set; }
    internal bool UseManagedIdentity { get; internal set; }
    internal string SignDescription { get; internal set; }
    internal string SignDescriptionUrl { get; internal set; }
    internal string Rfc3161TimestampUrl { get; internal set; }
    internal string TimestampDigestAlgorithm { get; internal set; }
    internal string FileDigestAlgorithm { get; internal set; }
    internal string AuthenticodeTimestampUrl { get; internal set; }
    [NullableAttribute("1")]
internal List`1<string> AdditionalCertificates { get; }
    internal bool Verbose { get; internal set; }
    internal bool Quiet { get; internal set; }
    internal bool PageHashing { get; internal set; }
    internal bool NoPageHashing { get; internal set; }
    internal bool ContinueOnError { get; internal set; }
    internal string InputFileList { get; internal set; }
    internal int MaxDegreeOfParallelism { get; internal set; }
    internal bool Colors { get; internal set; }
    internal bool SkipSignedFiles { get; internal set; }
    internal bool AppendSignature { get; internal set; }
    internal string AzureAuthority { get; internal set; }
    [NullableAttribute("1")]
internal HashSet`1<string> AllFiles { get; }
    private LogLevel LogLevel { get; }
    private static SignCommand();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private List`1<string> get_Files();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private void set_Files(List`1<string> value);
    [CompilerGeneratedAttribute]
internal string get_KeyVaultUrl();
    [CompilerGeneratedAttribute]
internal void set_KeyVaultUrl(string value);
    [CompilerGeneratedAttribute]
internal string get_KeyVaultClientId();
    [CompilerGeneratedAttribute]
internal void set_KeyVaultClientId(string value);
    [CompilerGeneratedAttribute]
internal string get_KeyVaultClientSecret();
    [CompilerGeneratedAttribute]
internal void set_KeyVaultClientSecret(string value);
    [CompilerGeneratedAttribute]
internal string get_KeyVaultTenantId();
    [CompilerGeneratedAttribute]
internal void set_KeyVaultTenantId(string value);
    [CompilerGeneratedAttribute]
internal string get_KeyVaultCertificate();
    [CompilerGeneratedAttribute]
internal void set_KeyVaultCertificate(string value);
    [CompilerGeneratedAttribute]
internal string get_KeyVaultCertificateVersion();
    [CompilerGeneratedAttribute]
internal void set_KeyVaultCertificateVersion(string value);
    [CompilerGeneratedAttribute]
internal string get_KeyVaultAccessToken();
    [CompilerGeneratedAttribute]
internal void set_KeyVaultAccessToken(string value);
    [CompilerGeneratedAttribute]
internal bool get_UseManagedIdentity();
    [CompilerGeneratedAttribute]
internal void set_UseManagedIdentity(bool value);
    [CompilerGeneratedAttribute]
internal string get_SignDescription();
    [CompilerGeneratedAttribute]
internal void set_SignDescription(string value);
    [CompilerGeneratedAttribute]
internal string get_SignDescriptionUrl();
    [CompilerGeneratedAttribute]
internal void set_SignDescriptionUrl(string value);
    [CompilerGeneratedAttribute]
internal string get_Rfc3161TimestampUrl();
    [CompilerGeneratedAttribute]
internal void set_Rfc3161TimestampUrl(string value);
    [CompilerGeneratedAttribute]
internal string get_TimestampDigestAlgorithm();
    [CompilerGeneratedAttribute]
internal void set_TimestampDigestAlgorithm(string value);
    [CompilerGeneratedAttribute]
internal string get_FileDigestAlgorithm();
    [CompilerGeneratedAttribute]
internal void set_FileDigestAlgorithm(string value);
    [CompilerGeneratedAttribute]
internal string get_AuthenticodeTimestampUrl();
    [CompilerGeneratedAttribute]
internal void set_AuthenticodeTimestampUrl(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal List`1<string> get_AdditionalCertificates();
    [CompilerGeneratedAttribute]
internal bool get_Verbose();
    [CompilerGeneratedAttribute]
internal void set_Verbose(bool value);
    [CompilerGeneratedAttribute]
internal bool get_Quiet();
    [CompilerGeneratedAttribute]
internal void set_Quiet(bool value);
    [CompilerGeneratedAttribute]
internal bool get_PageHashing();
    [CompilerGeneratedAttribute]
internal void set_PageHashing(bool value);
    [CompilerGeneratedAttribute]
internal bool get_NoPageHashing();
    [CompilerGeneratedAttribute]
internal void set_NoPageHashing(bool value);
    [CompilerGeneratedAttribute]
internal bool get_ContinueOnError();
    [CompilerGeneratedAttribute]
internal void set_ContinueOnError(bool value);
    [CompilerGeneratedAttribute]
internal string get_InputFileList();
    [CompilerGeneratedAttribute]
internal void set_InputFileList(string value);
    [CompilerGeneratedAttribute]
internal int get_MaxDegreeOfParallelism();
    [CompilerGeneratedAttribute]
internal void set_MaxDegreeOfParallelism(int value);
    [CompilerGeneratedAttribute]
internal bool get_Colors();
    [CompilerGeneratedAttribute]
internal void set_Colors(bool value);
    [CompilerGeneratedAttribute]
internal bool get_SkipSignedFiles();
    [CompilerGeneratedAttribute]
internal void set_SkipSignedFiles(bool value);
    [CompilerGeneratedAttribute]
internal bool get_AppendSignature();
    [CompilerGeneratedAttribute]
internal void set_AppendSignature(bool value);
    [CompilerGeneratedAttribute]
internal string get_AzureAuthority();
    [CompilerGeneratedAttribute]
internal void set_AzureAuthority(string value);
    [NullableContextAttribute("1")]
internal HashSet`1<string> get_AllFiles();
    [NullableContextAttribute("1")]
private ValueTask`1<int> Run(CommandRunContext context, String[] arguments);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("AzureSignTool.SignCommand/<RunSign>d__112")]
private ValueTask`1<int> RunSign();
    [NullableContextAttribute("1")]
private static bool IsSigned(string filePath);
    [NullableContextAttribute("1")]
private bool ValidateArguments(CommandRunContext context);
    [NullableContextAttribute("1")]
private static bool ValidateHashAlgorithm(CommandRunContext context, string input, string optionName);
    [NullableContextAttribute("1")]
private void ConfigureLogging(ILoggingBuilder builder);
    private LogLevel get_LogLevel();
    [NullableContextAttribute("1")]
private static ErrorOr`1<X509Certificate2Collection> GetAdditionalCertificates(IEnumerable`1<string> paths, ILogger logger);
    private static HashAlgorithmName ParseHashAlgorithm(string hashAlgorithm);
    [NullableContextAttribute("1")]
private static bool OneTrue(Boolean[] values);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static void <get_AllFiles>g__Add|109_0(HashSet`1<string> collection, Matcher matcher, string item);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_0(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_1(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_2(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_3(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_4(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_5(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_6(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_7(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_8(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_9(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_10(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_11(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_12(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_13(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_14(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_15(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_16(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_17(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_18(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_19(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_20(int v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_21(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_22(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_23(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__110_24(string v);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private void <ConfigureLogging>b__116_0(SimpleConsoleFormatterOptions console);
}
