[ExtensionAttribute]
internal static class BananaCakePop.Middleware.<BananaCakePopConfiguration>F31E673ECB2B46FA20AEC128E57F388342EB318EBA2599BA44EC6AA56700FF6E1__Extensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IDictionary`2<string, string> GetHttpHeadersDictionary(BananaCakePopOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class BananaCakePop.Middleware.ApplicationBuilderBananaCakePopExtensions : object {
    [ExtensionAttribute]
public static IApplicationBuilder UseBananaCakePop(IApplicationBuilder requestPipeline, PathString path);
    [ExtensionAttribute]
internal static IApplicationBuilder UseCancellation(IApplicationBuilder builder);
    private static IFileProvider CreateFileProvider();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class BananaCakePop.Middleware.BananaCakePopCdnMiddleware : BananaCakePopMiddlewareBase {
    private static HttpMessageInvoker _messageInvoker;
    private static ForwarderRequestConfig _requestConfig;
    private PathString _matchUrl;
    private RequestDelegate _next;
    private IHttpForwarderAccessor _forwarder;
    public BananaCakePopCdnMiddleware(RequestDelegate next, PathString matchUrl, IHttpForwarderAccessor forwarder);
    private static BananaCakePopCdnMiddleware();
    [AsyncStateMachineAttribute("BananaCakePop.Middleware.BananaCakePopCdnMiddleware/<Invoke>d__6")]
public Task Invoke(HttpContext context);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class BananaCakePop.Middleware.BananaCakePopConfiguration : object {
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseBrowserUrlAsEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GraphQLDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeCookies>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, string> <HttpHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseGet>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GaTrackingId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DisableTelemetry>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InstanceUrl>k__BackingField;
    public string Title { get; public set; }
    public bool UseBrowserUrlAsEndpoint { get; public set; }
    public string Endpoint { get; public set; }
    public string GraphQLDocument { get; public set; }
    public Nullable`1<bool> IncludeCookies { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, string> HttpHeaders { get; public set; }
    public Nullable`1<bool> UseGet { get; public set; }
    public string GaTrackingId { get; public set; }
    public Nullable`1<bool> DisableTelemetry { get; public set; }
    public string InstanceUrl { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public bool get_UseBrowserUrlAsEndpoint();
    [CompilerGeneratedAttribute]
public void set_UseBrowserUrlAsEndpoint(bool value);
    [CompilerGeneratedAttribute]
public string get_Endpoint();
    [CompilerGeneratedAttribute]
public void set_Endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_GraphQLDocument();
    [CompilerGeneratedAttribute]
public void set_GraphQLDocument(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IncludeCookies();
    [CompilerGeneratedAttribute]
public void set_IncludeCookies(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_HttpHeaders();
    [CompilerGeneratedAttribute]
public void set_HttpHeaders(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UseGet();
    [CompilerGeneratedAttribute]
public void set_UseGet(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_GaTrackingId();
    [CompilerGeneratedAttribute]
public void set_GaTrackingId(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DisableTelemetry();
    [CompilerGeneratedAttribute]
public void set_DisableTelemetry(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_InstanceUrl();
    [CompilerGeneratedAttribute]
public void set_InstanceUrl(string value);
    [NullableContextAttribute("1")]
public Byte[] Format();
    [NullableContextAttribute("1")]
public static BananaCakePopConfiguration From(BananaCakePopOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class BananaCakePop.Middleware.BananaCakePopDefaultFileMiddleware : BananaCakePopMiddlewareBase {
    private static string _defaultFile;
    private IFileProvider _fileProvider;
    private PathString _matchUrl;
    private RequestDelegate _next;
    public BananaCakePopDefaultFileMiddleware(RequestDelegate next, IFileProvider fileProvider, PathString matchUrl);
    public Task Invoke(HttpContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class BananaCakePop.Middleware.BananaCakePopMiddlewareBase : object {
    [NullableAttribute("2")]
private BananaCakePopOptions _options;
    protected BananaCakePopOptions GetOptions(HttpContext context);
    private static BananaCakePopOptions GetGraphQLToolOptionsFromMetadata(HttpContext context);
    private static BananaCakePopOptions GetGraphQLToolOptionsFromItems(HttpContext context);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class BananaCakePop.Middleware.BananaCakePopOptions : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ServeMode <ServeMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Document>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GraphQLEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseBrowserUrlAsGraphQLEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeCookies>k__BackingField;
    [CompilerGeneratedAttribute]
private IHeaderDictionary <HttpHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseGet>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Enable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GaTrackingId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DisableTelemetry>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InstanceUrl>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private static BananaCakePopOptions <Default>k__BackingField;
    [NullableAttribute("1")]
public ServeMode ServeMode { get; public set; }
    public string Title { get; public set; }
    public string Document { get; public set; }
    public string GraphQLEndpoint { get; public set; }
    public bool UseBrowserUrlAsGraphQLEndpoint { get; public set; }
    public Nullable`1<bool> IncludeCookies { get; public set; }
    public IHeaderDictionary HttpHeaders { get; public set; }
    public bool UseGet { get; public set; }
    public bool Enable { get; public set; }
    public string GaTrackingId { get; public set; }
    public Nullable`1<bool> DisableTelemetry { get; public set; }
    public string InstanceUrl { get; public set; }
    [NullableAttribute("1")]
internal static BananaCakePopOptions Default { get; }
    [NullableContextAttribute("1")]
public BananaCakePopOptions(ServeMode serveMode);
    private static BananaCakePopOptions();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public ServeMode get_ServeMode();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_ServeMode(ServeMode value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Document();
    [CompilerGeneratedAttribute]
public void set_Document(string value);
    [CompilerGeneratedAttribute]
public string get_GraphQLEndpoint();
    [CompilerGeneratedAttribute]
public void set_GraphQLEndpoint(string value);
    [CompilerGeneratedAttribute]
public bool get_UseBrowserUrlAsGraphQLEndpoint();
    [CompilerGeneratedAttribute]
public void set_UseBrowserUrlAsGraphQLEndpoint(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IncludeCookies();
    [CompilerGeneratedAttribute]
public void set_IncludeCookies(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IHeaderDictionary get_HttpHeaders();
    [CompilerGeneratedAttribute]
public void set_HttpHeaders(IHeaderDictionary value);
    [CompilerGeneratedAttribute]
public bool get_UseGet();
    [CompilerGeneratedAttribute]
public void set_UseGet(bool value);
    [CompilerGeneratedAttribute]
public bool get_Enable();
    [CompilerGeneratedAttribute]
public void set_Enable(bool value);
    [CompilerGeneratedAttribute]
public string get_GaTrackingId();
    [CompilerGeneratedAttribute]
public void set_GaTrackingId(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DisableTelemetry();
    [CompilerGeneratedAttribute]
public void set_DisableTelemetry(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_InstanceUrl();
    [CompilerGeneratedAttribute]
public void set_InstanceUrl(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static BananaCakePopOptions get_Default();
    [NullableContextAttribute("1")]
internal void CopyTo(BananaCakePopOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class BananaCakePop.Middleware.BananaCakePopOptionsFileMiddleware : BananaCakePopMiddlewareBase {
    private static string _configFile;
    private RequestDelegate _next;
    private PathString _matchUrl;
    [NullableAttribute("2")]
private Byte[] _config;
    public BananaCakePopOptionsFileMiddleware(RequestDelegate next, PathString matchUrl);
    [AsyncStateMachineAttribute("BananaCakePop.Middleware.BananaCakePopOptionsFileMiddleware/<Invoke>d__5")]
public Task Invoke(HttpContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonSerializableAttribute("BananaCakePop.Middleware.BananaCakePopConfiguration")]
[GeneratedCodeAttribute("System.Text.Json.SourceGeneration", "8.0.10.31311")]
internal class BananaCakePop.Middleware.BananaCakePopPopSerializationContext : JsonSerializerContext {
    private static JsonSerializerOptions _options;
    [CompilerGeneratedAttribute]
private static BananaCakePopPopSerializationContext <Instance>k__BackingField;
    [NullableAttribute("2")]
private JsonTypeInfo`1<bool> _Boolean;
    [NullableAttribute("2")]
private JsonTypeInfo`1<Nullable`1<bool>> _NullableBoolean;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<BananaCakePopConfiguration> _BananaCakePopConfiguration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IDictionary`2<string, string>> _IDictionaryStringString;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<string> _String;
    private static JsonSerializerOptions s_defaultOptions;
    [CompilerGeneratedAttribute]
private static BananaCakePopPopSerializationContext <Default>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JsonSerializerOptions <GeneratedSerializerOptions>k__BackingField;
    private static JsonEncodedText PropName_Title;
    private static JsonEncodedText PropName_UseBrowserUrlAsEndpoint;
    private static JsonEncodedText PropName_Endpoint;
    private static JsonEncodedText PropName_GraphQLDocument;
    private static JsonEncodedText PropName_IncludeCookies;
    private static JsonEncodedText PropName_HttpHeaders;
    private static JsonEncodedText PropName_UseGet;
    private static JsonEncodedText PropName_GaTrackingId;
    private static JsonEncodedText PropName_DisableTelemetry;
    private static JsonEncodedText PropName_InstanceUrl;
    public static BananaCakePopPopSerializationContext Instance { get; }
    public JsonTypeInfo`1<bool> Boolean { get; }
    public JsonTypeInfo`1<Nullable`1<bool>> NullableBoolean { get; }
    public JsonTypeInfo`1<BananaCakePopConfiguration> BananaCakePopConfiguration { get; }
    public JsonTypeInfo`1<IDictionary`2<string, string>> IDictionaryStringString { get; }
    public JsonTypeInfo`1<string> String { get; }
    public static BananaCakePopPopSerializationContext Default { get; }
    [NullableAttribute("2")]
protected JsonSerializerOptions GeneratedSerializerOptions { get; }
    public BananaCakePopPopSerializationContext(JsonSerializerOptions options);
    private static BananaCakePopPopSerializationContext();
    [CompilerGeneratedAttribute]
public static BananaCakePopPopSerializationContext get_Instance();
    public JsonTypeInfo`1<bool> get_Boolean();
    private JsonTypeInfo`1<bool> Create_Boolean(JsonSerializerOptions options);
    public JsonTypeInfo`1<Nullable`1<bool>> get_NullableBoolean();
    private JsonTypeInfo`1<Nullable`1<bool>> Create_NullableBoolean(JsonSerializerOptions options);
    public JsonTypeInfo`1<BananaCakePopConfiguration> get_BananaCakePopConfiguration();
    private JsonTypeInfo`1<BananaCakePopConfiguration> Create_BananaCakePopConfiguration(JsonSerializerOptions options);
    private static JsonPropertyInfo[] BananaCakePopConfigurationPropInit(JsonSerializerOptions options);
    private void BananaCakePopConfigurationSerializeHandler(Utf8JsonWriter writer, BananaCakePopConfiguration value);
    public JsonTypeInfo`1<IDictionary`2<string, string>> get_IDictionaryStringString();
    private JsonTypeInfo`1<IDictionary`2<string, string>> Create_IDictionaryStringString(JsonSerializerOptions options);
    private void IDictionaryStringStringSerializeHandler(Utf8JsonWriter writer, IDictionary`2<string, string> value);
    public JsonTypeInfo`1<string> get_String();
    private JsonTypeInfo`1<string> Create_String(JsonSerializerOptions options);
    [CompilerGeneratedAttribute]
public static BananaCakePopPopSerializationContext get_Default();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual JsonSerializerOptions get_GeneratedSerializerOptions();
    private static bool TryGetTypeInfoForRuntimeCustomConverter(JsonSerializerOptions options, JsonTypeInfo`1& jsonTypeInfo);
    private static JsonConverter GetRuntimeConverterForType(Type type, JsonSerializerOptions options);
    private static JsonConverter ExpandConverter(Type type, JsonConverter converter, JsonSerializerOptions options, bool validateCanConvert);
    public virtual JsonTypeInfo GetTypeInfo(Type type);
    private sealed virtual override JsonTypeInfo global::System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver.GetTypeInfo(Type type, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class BananaCakePop.Middleware.BananaCakePopStaticFileMiddleware : BananaCakePopMiddlewareBase {
    private IContentTypeProvider _contentTypeProvider;
    private IFileProvider _fileProvider;
    private PathString _matchUrl;
    private RequestDelegate _next;
    public BananaCakePopStaticFileMiddleware(RequestDelegate next, IFileProvider fileProvider, PathString matchUrl);
    public Task Invoke(HttpContext context);
    private Task TryServeStaticFile(HttpContext context, string contentType, PathString subPath);
    private bool LookupFileInfo(PathString subPath, string contentType, StaticFileInfo& staticFileInfo);
    [AsyncStateMachineAttribute("BananaCakePop.Middleware.BananaCakePopStaticFileMiddleware/<SendAsync>d__8")]
private static Task SendAsync(HttpContext context, StaticFileInfo fileInfo);
    private static void SetCompressionMode(HttpContext context);
}
internal static class BananaCakePop.Middleware.ContentType : object {
}
internal class BananaCakePop.Middleware.HttpForwarderAccessor : object {
    [NullableAttribute("2")]
private IHttpForwarder _forwarder;
    [NullableContextAttribute("1")]
public sealed virtual IHttpForwarder GetOrCreateForwarder(IServiceProvider services);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class BananaCakePop.Middleware.HttpRequestExtensions : object {
    private static string _slash;
    private static PathString _slashPath;
    private static HttpRequestExtensions();
    [ExtensionAttribute]
internal static bool AcceptHeaderContainsHtml(HttpRequest request);
    [ExtensionAttribute]
internal static bool IsGetOrHeadMethod(HttpRequest request);
    [ExtensionAttribute]
internal static bool PathEndsInSlash(HttpRequest request);
    [ExtensionAttribute]
internal static bool TryMatchPath(HttpRequest request, PathString matchUrl, bool forDirectory, PathString& subPath);
}
[NullableContextAttribute("1")]
internal interface BananaCakePop.Middleware.IHttpForwarderAccessor {
    public abstract virtual IHttpForwarder GetOrCreateForwarder(IServiceProvider services);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class BananaCakePop.Middleware.ServeMode : object {
    [CompilerGeneratedAttribute]
private string <Mode>k__BackingField;
    public static ServeMode Latest;
    public static ServeMode Insider;
    public static ServeMode Embedded;
    internal string Mode { get; }
    private ServeMode(string mode);
    private static ServeMode();
    [CompilerGeneratedAttribute]
internal string get_Mode();
    public static ServeMode Version(string version);
}
