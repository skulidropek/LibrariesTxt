public class BCrypt.Net.BCrypt : object {
    private static int GensaltDefaultLog2Rounds;
    private static int BcryptSaltLen;
    private static int BlowfishNumRounds;
    private static UInt32[] POrig;
    private static UInt32[] SOrig;
    private static UInt32[] BfCryptCiphertext;
    private static Char[] Base64Code;
    private static Int32[] Index64;
    private UInt32[] _p;
    private UInt32[] _s;
    private static BCrypt();
    public static string HashString(string source, SaltRevision saltSaltRevision);
    public static string HashString(string source, int workFactor, SaltRevision saltSaltRevision);
    public static string HashPassword(string input, SaltRevision saltSaltRevision);
    public static string HashPassword(string input, int workFactor, SaltRevision saltSaltRevision);
    public static string HashPassword(string input, string salt);
    public static string GenerateSalt(int workFactor, SaltRevision saltSaltRevision);
    public static string GenerateSalt(SaltRevision saltSaltRevision);
    public static bool Verify(string text, string hash);
    public static int GetPasswordWorkFactor(string hashedPassword);
    private static string EncodeBase64(Byte[] byteArray, int length);
    private static Byte[] DecodeBase64(string encodedstring, int maximumBytes);
    private static int Char64(char character);
    private void Encipher(UInt32[] blockArray, int offset);
    private static UInt32 StreamToWord(Byte[] data, Int32& offset);
    private void InitializeKey();
    private void Key(Byte[] keyBytes);
    private void EksKey(Byte[] saltBytes, Byte[] inputBytes);
    private Byte[] CryptRaw(Byte[] inputBytes, Byte[] saltBytes, int logRounds);
    private static bool SafeEquals(string a, string b);
    private static string GetSaltRevisionString(SaltRevision saltSaltRevision);
    private static int GetWorkFactorStartIndex(string hash);
}
public class BCrypt.Net.SaltParseException : Exception {
    public SaltParseException(string message);
    public SaltParseException(string message, Exception innerException);
}
public enum BCrypt.Net.SaltRevision : Enum {
    public int value__;
    public static SaltRevision Revision2;
    public static SaltRevision Revision2A;
    public static SaltRevision Revision2B;
    public static SaltRevision Revision2X;
    public static SaltRevision Revision2Y;
}
