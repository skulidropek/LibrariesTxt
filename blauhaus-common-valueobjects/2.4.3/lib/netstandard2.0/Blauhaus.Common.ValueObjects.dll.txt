[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Blauhaus.Common.ValueObjects.Base.BaseDecimalValueObject`1 : BaseValueObject`2<T, decimal> {
    [JsonIgnoreAttribute]
public static T Zero;
    [CompilerGeneratedAttribute]
private double <CalculationValue>k__BackingField;
    [JsonIgnoreAttribute]
public double CalculationValue { get; }
    protected BaseDecimalValueObject`1(decimal value);
    private static BaseDecimalValueObject`1();
    [CompilerGeneratedAttribute]
public double get_CalculationValue();
    public static T Create(decimal value);
    public static T FromDouble(double calculationValue);
    public string Serialize();
    public static T Deserialize(string serialized);
    public static bool TryDeserialize(string serialized, T& parsed);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Blauhaus.Common.ValueObjects.Base.BaseDoubleValueObject`1 : BaseValueObject`2<T, double> {
    [JsonIgnoreAttribute]
public static T Zero;
    protected BaseDoubleValueObject`1(double value);
    private static BaseDoubleValueObject`1();
    public static T Create(double value);
    public static T Create(decimal value);
    public static T Create(float value);
    public static T Create(int value);
    public string Serialize();
    public static T Deserialize(string serialized);
    public static bool TryDeserialize(string serialized, T& parsed);
    public T Add(T[] others);
    public T Add(Double[] others);
    public T Subtract(T[] others);
    public T Subtract(Double[] others);
    public T Multiply(T[] others);
    public bool IsGreaterThan(T other);
    public bool IsGreaterThanOrEqualTo(T other);
    public bool IsLessThan(T other);
    public bool IsLessThanOrEqualTo(T other);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Blauhaus.Common.ValueObjects.Base.BaseIdValueObject`1 : BaseValueObject`1<T> {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    public string Name { get; }
    public Guid Id { get; }
    protected BaseIdValueObject`1(string name, Guid id);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Guid get_Id();
    protected virtual int GetHashCodeCore();
    protected virtual bool EqualsCore(T other);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Blauhaus.Common.ValueObjects.Base.BaseNamedValueObject`1 : BaseValueObject`1<T> {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; }
    protected BaseNamedValueObject`1(string name);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    protected virtual int GetHashCodeCore();
    protected virtual bool EqualsCore(T other);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Blauhaus.Common.ValueObjects.Base.BaseValueObject`1 : object {
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(TValueObject other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    protected abstract virtual int GetHashCodeCore();
    protected abstract virtual bool EqualsCore(TValueObject other);
    public static bool op_Equality(BaseValueObject`1<TValueObject> a, BaseValueObject`1<TValueObject> b);
    public static bool op_Inequality(BaseValueObject`1<TValueObject> a, BaseValueObject`1<TValueObject> b);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.Base.BaseValueObject`2 : BaseValueObject`1<TValueObject> {
    [CompilerGeneratedAttribute]
private TValue <Value>k__BackingField;
    public TValue Value { get; }
    protected BaseValueObject`2(TValue value);
    [CompilerGeneratedAttribute]
public sealed virtual TValue get_Value();
    protected virtual int GetHashCodeCore();
    protected virtual bool EqualsCore(TValueObject other);
    public virtual string ToString();
}
[NullableContextAttribute("2")]
public interface Blauhaus.Common.ValueObjects.Base.IValueObject`1 {
}
[NullableContextAttribute("1")]
public interface Blauhaus.Common.ValueObjects.Base.IValueObject`2 {
    public TValue Value { get; }
    public abstract virtual TValue get_Value();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.BuildConfigs.BuildConfig : BaseValueObject`2<IBuildConfig, string> {
    public static BuildConfig Debug { get; }
    public static BuildConfig Test { get; }
    public static BuildConfig Staging { get; }
    public static BuildConfig Release { get; }
    private BuildConfig(string value);
    public static BuildConfig get_Debug();
    public static BuildConfig get_Test();
    public static BuildConfig get_Staging();
    public static BuildConfig get_Release();
    public static BuildConfig FromString(string value);
}
public interface Blauhaus.Common.ValueObjects.BuildConfigs.IBuildConfig {
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.DeviceType.DeviceType : BaseValueObject`2<IDeviceType, string> {
    public static DeviceType Unknown { get; }
    public static DeviceType Phone { get; }
    public static DeviceType Tablet { get; }
    public static DeviceType PC { get; }
    public static DeviceType TV { get; }
    public static DeviceType Watch { get; }
    public static DeviceType Server { get; }
    protected DeviceType(string value);
    public static DeviceType get_Unknown();
    public static DeviceType get_Phone();
    public static DeviceType get_Tablet();
    public static DeviceType get_PC();
    public static DeviceType get_TV();
    public static DeviceType get_Watch();
    public static DeviceType get_Server();
}
public interface Blauhaus.Common.ValueObjects.DeviceType.IDeviceType {
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Blauhaus.Common.ValueObjects.Identities.BaseTypedIdentity`1 : BaseValueObject`1<TIdentity> {
    private string _serialized;
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <TypeId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <SubTypeId>k__BackingField;
    public static TIdentity Empty;
    public Guid Id { get; }
    public Guid TypeId { get; }
    public Nullable`1<Guid> SubTypeId { get; }
    protected BaseTypedIdentity`1(Guid id, Guid typeId, Nullable`1<Guid> subTypeId);
    private static BaseTypedIdentity`1();
    [CompilerGeneratedAttribute]
public sealed virtual Guid get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual Guid get_TypeId();
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_SubTypeId();
    public string Serialize();
    public static TIdentity Deserialize(string serialized);
    public virtual string ToString();
    protected virtual int GetHashCodeCore();
    protected virtual bool EqualsCore(TIdentity other);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.Measures.Acceleration : BaseDoubleValueObject`1<Acceleration> {
    public double MetresPerSecondSquared { get; }
    public Acceleration(double value);
    public double get_MetresPerSecondSquared();
    public static Acceleration FromMetresPerSecondSquared(double metresPerSecondSquared);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.Measures.Angle : BaseDoubleValueObject`1<Angle> {
    [JsonIgnoreAttribute]
public double Degrees { get; }
    [JsonIgnoreAttribute]
public double Radians { get; }
    public Angle(double value);
    public double get_Degrees();
    public double get_Radians();
    public static Angle FromDegrees(double degrees);
    public static Angle FromRadians(double radians);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.Measures.Area : BaseDoubleValueObject`1<Area> {
    [JsonIgnoreAttribute]
public double MillimetresSquared { get; }
    [JsonIgnoreAttribute]
public double CentimetresSquared { get; }
    [JsonIgnoreAttribute]
public double MetresSquared { get; }
    [JsonIgnoreAttribute]
public double KilometresSquared { get; }
    [JsonConstructorAttribute]
public Area(double value);
    public double get_MillimetresSquared();
    public double get_CentimetresSquared();
    public double get_MetresSquared();
    public double get_KilometresSquared();
    public static Area FromMetresSquared(double metresSquared);
    public static Area OfCircle(Distance radius);
    public static Area OfSphere(Distance radius);
    public static Area OfSquare(Distance side);
    public static Area OfQuad(Distance width, Distance length);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.Measures.Current : BaseDoubleValueObject`1<Current> {
    public double Amps { get; }
    public Current(double value);
    public static Current FromAmps(double amps);
    public double get_Amps();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.Measures.Distance : BaseDoubleValueObject`1<Distance> {
    [JsonIgnoreAttribute]
public double Millimetres { get; }
    [JsonIgnoreAttribute]
public double Centimetres { get; }
    [JsonIgnoreAttribute]
public double Metres { get; }
    [JsonIgnoreAttribute]
public double Kilometres { get; }
    public Distance(double value);
    public double get_Millimetres();
    public double get_Centimetres();
    public double get_Metres();
    public double get_Kilometres();
    public static Distance FromMetres(double m);
    public static Distance FromKilometres(double km);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.Measures.Duration : BaseDoubleValueObject`1<Duration> {
    [JsonIgnoreAttribute]
public long Ticks { get; }
    [JsonIgnoreAttribute]
public double Nanoseconds { get; }
    [JsonIgnoreAttribute]
public double Microseconds { get; }
    [JsonIgnoreAttribute]
public double Milliseconds { get; }
    [JsonIgnoreAttribute]
public double Seconds { get; }
    [JsonIgnoreAttribute]
public double Minutes { get; }
    [JsonIgnoreAttribute]
public double Hours { get; }
    [JsonIgnoreAttribute]
public double Days { get; }
    public TimeSpan ToTimeSpan { get; }
    public Duration(double value);
    public long get_Ticks();
    public double get_Nanoseconds();
    public double get_Microseconds();
    public double get_Milliseconds();
    public double get_Seconds();
    public double get_Minutes();
    public double get_Hours();
    public double get_Days();
    public static Duration FromTimespan(TimeSpan t);
    public static Duration FromTicks(long ticks);
    public static Duration FromNanoseconds(double nanseconds);
    public static Duration FromMicroseconds(double microseconds);
    public static Duration FromMilliseconds(double milliseconds);
    public static Duration FromSeconds(double seconds);
    public static Duration FromMinutes(double minutes);
    public static Duration FromHours(double hours);
    public static Duration FromDays(double days);
    public TimeSpan get_ToTimeSpan();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.Measures.Energy : BaseDoubleValueObject`1<Energy> {
    [JsonIgnoreAttribute]
public double MilliWattHours { get; }
    [JsonIgnoreAttribute]
public double WattHours { get; }
    [JsonIgnoreAttribute]
public double KiloWattHours { get; }
    [JsonIgnoreAttribute]
public double MegaWattHours { get; }
    [JsonIgnoreAttribute]
public double GigaWattHours { get; }
    [JsonIgnoreAttribute]
public double WattSeconds { get; }
    [JsonIgnoreAttribute]
public double Joules { get; }
    [JsonConstructorAttribute]
public Energy(double value);
    public double get_MilliWattHours();
    public double get_WattHours();
    public double get_KiloWattHours();
    public double get_MegaWattHours();
    public double get_GigaWattHours();
    public double get_WattSeconds();
    public double get_Joules();
    public static Energy FromWattHours(double wattHours);
    public static Energy FromWattSeconds(double wattSeconds);
    public double CalculateAmpHours(Voltage voltage);
    public static Energy Min(Energy first, Energy second);
    public Energy Min(Energy second);
    public static Energy Max(Energy first, Energy second);
    public Energy Max(Energy second);
    public Power ToPower(TimeSpan elapsedTime);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.Measures.Force : BaseDoubleValueObject`1<Force> {
    public double Newtons { get; }
    public Force(double value);
    public double get_Newtons();
    public static Force FromNewtons(double newtons);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.Measures.Frequency : BaseDoubleValueObject`1<Frequency> {
    [JsonIgnoreAttribute]
public double Hertz { get; }
    [JsonIgnoreAttribute]
public double KiloHertz { get; }
    [JsonIgnoreAttribute]
public double MegaHertz { get; }
    [JsonIgnoreAttribute]
public double GigaHertz { get; }
    [JsonConstructorAttribute]
public Frequency(double value);
    public double get_Hertz();
    public double get_KiloHertz();
    public double get_MegaHertz();
    public double get_GigaHertz();
    public static Frequency FromHertz(double value);
    public static Frequency FromKiloHertz(double value);
    public static Frequency FromMegaHertz(double value);
    public static Frequency FromGigaHertz(double value);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.Measures.GlobalPosition : BaseValueObject`1<GlobalPosition> {
    [CompilerGeneratedAttribute]
private Angle <Latitude>k__BackingField;
    [CompilerGeneratedAttribute]
private Angle <Longitude>k__BackingField;
    [CompilerGeneratedAttribute]
private Distance <Altitude>k__BackingField;
    [CompilerGeneratedAttribute]
private Distance <GlobeRadius>k__BackingField;
    public static GlobalPosition NullIsland;
    public Angle Latitude { get; }
    public Angle Longitude { get; }
    public Distance Altitude { get; }
    public Distance GlobeRadius { get; }
    public GlobalPosition(Distance globeRadius, Angle latitude, Angle longitude, Distance altitude);
    private static GlobalPosition();
    [CompilerGeneratedAttribute]
public Angle get_Latitude();
    [CompilerGeneratedAttribute]
public Angle get_Longitude();
    [CompilerGeneratedAttribute]
public Distance get_Altitude();
    [CompilerGeneratedAttribute]
public Distance get_GlobeRadius();
    public static GlobalPosition Create(double latitudeDegrees, double longitudeDegrees, double globeRadiusKm, double altitudeM);
    public string Serialize();
    public static GlobalPosition Deserialize(string serialized);
    public double DistanceFrom(GlobalPosition other);
    public Vector3 ToPositionVector();
    public DistanceVector ToDistanceVector();
    public static GlobalPosition FromPositionVector(Vector3 positionVector, float radius);
    protected virtual int GetHashCodeCore();
    protected virtual bool EqualsCore(GlobalPosition other);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.Measures.Mass : BaseDoubleValueObject`1<Mass> {
    [JsonIgnoreAttribute]
public double Kilograms { get; }
    [JsonConstructorAttribute]
public Mass(double value);
    public double get_Kilograms();
    public static Mass FromKilograms(double kilograms);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.Measures.Power : BaseDoubleValueObject`1<Power> {
    [JsonIgnoreAttribute]
public double MilliWatts { get; }
    [JsonIgnoreAttribute]
public double Watts { get; }
    [JsonIgnoreAttribute]
public double KiloWatts { get; }
    [JsonIgnoreAttribute]
public double MegaWatts { get; }
    [JsonIgnoreAttribute]
public double GigaWatts { get; }
    public Power(double value);
    public double get_MilliWatts();
    public double get_Watts();
    public double get_KiloWatts();
    public double get_MegaWatts();
    public double get_GigaWatts();
    public static Power FromWatts(double watts);
    public static Power FromEnergy(Energy energy, TimeSpan elapsedTime);
    public Energy ToEnergy(TimeSpan elapsedTime);
    public Power Add(double otherWatts);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.Measures.Ratio : BaseDoubleValueObject`1<Ratio> {
    public double Decibels { get; }
    [JsonConstructorAttribute]
public Ratio(double value);
    public double get_Decibels();
    public static Ratio FromValues(double numerator, double denominator);
    public static Ratio FromDecibels(double decibels);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.Measures.Speed : BaseDoubleValueObject`1<Speed> {
    public double MetresPerSecond { get; }
    public double KilometresPerHour { get; }
    public Speed(double value);
    public double get_MetresPerSecond();
    public double get_KilometresPerHour();
    public static Speed FromMetresPerSecond(double metresPerSecond);
    public static Speed FromKilometresPerHour(double kilometresPerHour);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.Measures.Temperature : BaseDoubleValueObject`1<Temperature> {
    public double Kelvin { get; }
    public Temperature(double value);
    public double get_Kelvin();
    public static Temperature FromKelvin(double kelvin);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.Measures.Vectors.AccelerationVector : BaseVectorValueObject`2<AccelerationVector, Acceleration> {
    public AccelerationVector(Acceleration x, Acceleration y, Acceleration z);
    public AccelerationVector(double x, double y, double z);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Blauhaus.Common.ValueObjects.Measures.Vectors.Base.BaseVectorValueObject`2 : BaseValueObject`1<TValueObject> {
    [CompilerGeneratedAttribute]
private TVector <X>k__BackingField;
    [CompilerGeneratedAttribute]
private TVector <Y>k__BackingField;
    [CompilerGeneratedAttribute]
private TVector <Z>k__BackingField;
    public TVector X { get; }
    public TVector Y { get; }
    public TVector Z { get; }
    protected BaseVectorValueObject`2(TVector x, TVector y, TVector z);
    protected BaseVectorValueObject`2(double x, double y, double z);
    [CompilerGeneratedAttribute]
public TVector get_X();
    [CompilerGeneratedAttribute]
public TVector get_Y();
    [CompilerGeneratedAttribute]
public TVector get_Z();
    public Vector3 ToVector3();
    public static TValueObject Create(TVector x, TVector y, TVector z);
    public static TValueObject Create(Vector3 vector3);
    public static TValueObject Create(double x, double y, double z);
    public string Serialize();
    public static TValueObject Deserialize(string serialized);
    protected virtual int GetHashCodeCore();
    protected virtual bool EqualsCore(TValueObject other);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.Measures.Vectors.DistanceVector : BaseVectorValueObject`2<DistanceVector, Distance> {
    public Distance Distance { get; }
    public DistanceVector(Distance x, Distance y, Distance z);
    public DistanceVector(double x, double y, double z);
    public Distance get_Distance();
    public static DistanceVector FromMetres(double x, double y, double z);
    public static DistanceVector FromDistanceVectors(DistanceVector source, DistanceVector target);
    public static DistanceVector FromGlobalPositions(GlobalPosition source, GlobalPosition target);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.Measures.Vectors.ForceVector : BaseVectorValueObject`2<ForceVector, Force> {
    public ForceVector(Force x, Force y, Force z);
    public ForceVector(double x, double y, double z);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.Measures.Vectors.VelocityVector : BaseVectorValueObject`2<VelocityVector, Speed> {
    public VelocityVector(Speed x, Speed y, Speed z);
    public VelocityVector(double x, double y, double z);
    public static VelocityVector Relative(VelocityVector ownVelocity, VelocityVector targetVelocity);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.Measures.Voltage : BaseDoubleValueObject`1<Voltage> {
    public double Volts { get; }
    public Voltage(double value);
    public static Voltage FromVolts(double volts);
    public double get_Volts();
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.Measures.Volume : BaseDoubleValueObject`1<Volume> {
    public double GramsPerCentimetreCubed { get; }
    public Volume(double value);
    public double get_GramsPerCentimetreCubed();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.Measures.Weight : BaseDoubleValueObject`1<Weight> {
    public double Newtons { get; }
    public Weight(double value);
    public double get_Newtons();
    public static Weight FromNewtons(double newtons);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.Navigation.ViewIdentifier : BaseValueObject`1<ViewIdentifier> {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Properties>k__BackingField;
    public string Name { get; }
    public Dictionary`2<string, string> Properties { get; }
    public ViewIdentifier(string name, Dictionary`2<string, string> properties);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual Dictionary`2<string, string> get_Properties();
    public static ViewIdentifier Create(string name);
    public string Serialize();
    public static ViewIdentifier Deserialize(string serialized);
    public virtual string ToString();
    protected virtual int GetHashCodeCore();
    protected virtual bool EqualsCore(ViewIdentifier other);
}
public interface Blauhaus.Common.ValueObjects.RuntimePlatforms.IRuntimePlatform {
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.RuntimePlatforms.RuntimePlatform : BaseValueObject`2<IRuntimePlatform, string> {
    [ObsoleteAttribute("Use Windows instead")]
public static RuntimePlatform UWP { get; }
    public static RuntimePlatform Unknown { get; }
    public static RuntimePlatform Android { get; }
    public static RuntimePlatform iOS { get; }
    public static RuntimePlatform Windows { get; }
    public static RuntimePlatform Mac { get; }
    public static RuntimePlatform DotNetCore { get; }
    private RuntimePlatform(string value);
    public static RuntimePlatform get_UWP();
    public static RuntimePlatform get_Unknown();
    public static RuntimePlatform get_Android();
    public static RuntimePlatform get_iOS();
    public static RuntimePlatform get_Windows();
    public static RuntimePlatform get_Mac();
    public static RuntimePlatform get_DotNetCore();
    public static RuntimePlatform FromString(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Blauhaus.Common.ValueObjects.StringValueObject : BaseValueObject`2<StringValueObject, string> {
    public StringValueObject(string value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
