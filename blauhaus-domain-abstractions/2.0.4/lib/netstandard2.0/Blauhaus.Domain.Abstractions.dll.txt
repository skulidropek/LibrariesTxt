public interface Blauhaus.Domain.Abstractions.Actors.IActor`1 {
}
public interface Blauhaus.Domain.Abstractions.Actors.IDtoActor`2 {
}
public interface Blauhaus.Domain.Abstractions.Actors.IDtoModelActor`3 {
}
public interface Blauhaus.Domain.Abstractions.Actors.IModelActor`2 {
}
public interface Blauhaus.Domain.Abstractions.CommandHandlers.IAdminCommandHandler`1 {
}
public interface Blauhaus.Domain.Abstractions.CommandHandlers.IAdminCommandHandler`2 {
}
[NullableContextAttribute("1")]
public interface Blauhaus.Domain.Abstractions.CommandHandlers.IAuthenticatedCommandHandler`3 {
    public abstract virtual Task`1<Response`1<TPayload>> HandleAsync(TCommand command, TUser user);
}
[NullableContextAttribute("1")]
public interface Blauhaus.Domain.Abstractions.CommandHandlers.ICommandHandler`2 {
    public abstract virtual Task`1<Response`1<TPayload>> HandleAsync(TCommand command);
}
public interface Blauhaus.Domain.Abstractions.CommandHandlers.IEntityLifecycleHandler {
}
[NullableContextAttribute("1")]
public interface Blauhaus.Domain.Abstractions.CommandHandlers.IGenericCommandHandler {
    public abstract virtual Task`1<Response`1<TResponse>> HandleCommandAsync(TCommand command);
}
[NullableContextAttribute("1")]
public interface Blauhaus.Domain.Abstractions.CommandHandlers.IGenericCommandHandler`1 {
    public abstract virtual Task`1<Response`1<TResponse>> HandleCommandAsync(TCommand command);
}
[NullableContextAttribute("2")]
public interface Blauhaus.Domain.Abstractions.CommandHandlers.IHandler`1 {
    public abstract virtual Task`1<Response`1<TPayload>> HandleAsync();
}
[NullableContextAttribute("1")]
public interface Blauhaus.Domain.Abstractions.CommandHandlers.IVoidAuthenticatedCommandHandler`1 {
}
[NullableContextAttribute("1")]
public interface Blauhaus.Domain.Abstractions.CommandHandlers.IVoidAuthenticatedCommandHandler`2 {
    public abstract virtual Task`1<Response> HandleAsync(TCommand command, TUser user);
}
[NullableContextAttribute("1")]
public interface Blauhaus.Domain.Abstractions.CommandHandlers.IVoidCommandHandler`1 {
    public abstract virtual Task`1<Response> HandleAsync(TCommand command);
}
public class Blauhaus.Domain.Abstractions.Commands.ActivateCommand : object {
}
public class Blauhaus.Domain.Abstractions.Commands.ArchiveCommand : object {
}
public class Blauhaus.Domain.Abstractions.Commands.DeleteCommand : object {
}
public interface Blauhaus.Domain.Abstractions.Commands.IAdminCommand {
}
public interface Blauhaus.Domain.Abstractions.Commands.ITransactionCommand {
    public Guid TransactionId { get; public set; }
    public abstract virtual Guid get_TransactionId();
    public abstract virtual void set_TransactionId(Guid value);
}
public class Blauhaus.Domain.Abstractions.Commands.RemoveCommand : object {
}
[NullableContextAttribute("1")]
public interface Blauhaus.Domain.Abstractions.DtoCaches.IDtoCache`2 {
    public abstract virtual Task DeleteOneAsync(TId id);
    public abstract virtual Task DeleteAllAsync();
}
[NullableContextAttribute("1")]
public interface Blauhaus.Domain.Abstractions.DtoCaches.IDtoLoader`2 {
    public abstract virtual Task`1<TDto> GetOneAsync(TId id);
    public abstract virtual Task`1<TDto> TryGetOneAsync(TId id);
    public abstract virtual Task`1<IReadOnlyList`1<TDto>> GetAllAsync();
}
[NullableContextAttribute("1")]
public interface Blauhaus.Domain.Abstractions.DtoCaches.IEntityDtoLoader`3 {
    public abstract virtual Task`1<IReadOnlyList`1<TDto>> GetWhereAsync(Func`2<TEntity, bool> filter);
    public abstract virtual Task`1<IReadOnlyList`1<TId>> GetIdsWhereAsync(Func`2<TEntity, bool> filter);
}
[NullableContextAttribute("1")]
public interface Blauhaus.Domain.Abstractions.DtoHandlers.IDtoHandler`1 {
    public abstract virtual Task HandleAsync(TDto dto);
}
[NullableContextAttribute("1")]
public interface Blauhaus.Domain.Abstractions.DtoHandlers.IDtoOwner`1 {
    public abstract virtual Task`1<TDto> GetDtoAsync();
}
[NullableContextAttribute("1")]
public interface Blauhaus.Domain.Abstractions.DtoHandlers.IModelOwner`1 {
    public abstract virtual Task`1<TModel> GetModelAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Blauhaus.Domain.Abstractions.Dtos.GetResultDto`1 : object {
    [CompilerGeneratedAttribute]
private List`1<TDto> <CurrentBatch>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalPageCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CurrentPage>k__BackingField;
    public List`1<TDto> CurrentBatch { get; public set; }
    public int TotalCount { get; public set; }
    public int TotalPageCount { get; public set; }
    public int CurrentPage { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<TDto> get_CurrentBatch();
    [CompilerGeneratedAttribute]
public void set_CurrentBatch(List`1<TDto> value);
    [CompilerGeneratedAttribute]
public int get_TotalCount();
    [CompilerGeneratedAttribute]
public void set_TotalCount(int value);
    [CompilerGeneratedAttribute]
public int get_TotalPageCount();
    [CompilerGeneratedAttribute]
public void set_TotalPageCount(int value);
    [CompilerGeneratedAttribute]
public int get_CurrentPage();
    [CompilerGeneratedAttribute]
public void set_CurrentPage(int value);
}
public enum Blauhaus.Domain.Abstractions.Entities.EntityState : Enum {
    public int value__;
    public static EntityState Active;
    public static EntityState Draft;
    public static EntityState Archived;
    public static EntityState Deleted;
}
public interface Blauhaus.Domain.Abstractions.Entities.IClientEntity {
}
[NullableContextAttribute("2")]
public interface Blauhaus.Domain.Abstractions.Entities.IClientEntity`1 {
    public long ModifiedAtTicks { get; }
    public abstract virtual long get_ModifiedAtTicks();
}
public interface Blauhaus.Domain.Abstractions.Entities.IEntity {
}
[NullableContextAttribute("2")]
public interface Blauhaus.Domain.Abstractions.Entities.IEntity`1 {
    public EntityState EntityState { get; }
    public abstract virtual EntityState get_EntityState();
}
public interface Blauhaus.Domain.Abstractions.Entities.IServerEntity {
    public DateTime CreatedAt { get; }
    public DateTime ModifiedAt { get; }
    public abstract virtual DateTime get_CreatedAt();
    public abstract virtual DateTime get_ModifiedAt();
}
[NullableContextAttribute("2")]
public interface Blauhaus.Domain.Abstractions.Entities.ISyncClientEntity`1 {
    public SyncState SyncState { get; public set; }
    public abstract virtual SyncState get_SyncState();
    public abstract virtual void set_SyncState(SyncState value);
}
public enum Blauhaus.Domain.Abstractions.Entities.SyncState : Enum {
    public int value__;
    public static SyncState OutOfSync;
    public static SyncState InSync;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Blauhaus.Domain.Abstractions.Errors.DomainErrors : object {
    public static Error InvalidDateFormat;
    private static DomainErrors();
    [ObsoleteAttribute("Moved to Blauhaus.Error")]
public static Error NotFound();
    [ObsoleteAttribute("Moved to Blauhaus.Error")]
public static Error NotFound(string name);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("Moved to Blauhaus.Error")]
public static Error NotFound();
    public static Error Duplicate();
    public static Error Duplicate(string objectName, string propertyName);
    public static Error Duplicate(string objectName, string propertyName, object value);
    public static Error Duplicate(Expression`1<Func`2<T, object>> expression);
    public static Error Duplicate(Expression`1<Func`2<T, object>> expression, object value);
    public static Error InvalidEntityState();
    public static Error InvalidEntityState(EntityState state);
}
[ExtensionAttribute]
public static class Blauhaus.Domain.Abstractions.Extensions.ClientEntityExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool IsNewerThan(IClientEntity`1<T> entity, long modifiedAtTicks);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Blauhaus.Domain.Abstractions.Extensions.EntityExtensions : object {
    [ExtensionAttribute]
public static bool IsActive(IEntity entity);
    [ExtensionAttribute]
public static bool IsArchived(IEntity entity);
    [ExtensionAttribute]
public static bool IsDeleted(IEntity entity);
    [ExtensionAttribute]
public static bool IsDraft(IEntity entity);
}
[ExtensionAttribute]
public static class Blauhaus.Domain.Abstractions.Extensions.LongExtensions : object {
    [ExtensionAttribute]
public static DateTime ToUtcDateTime(long ticks);
    [ExtensionAttribute]
public static Nullable`1<DateTime> ToUtcDateTime(Nullable`1<long> ticks);
    [ExtensionAttribute]
public static DateTimeOffset ToDateTimeOffset(long ticks);
    [ExtensionAttribute]
public static Nullable`1<DateTimeOffset> ToDateTimeOffset(Nullable`1<long> ticks);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
