[ExtensionAttribute]
public static class Blauhaus.Responses.Extensions.ErrorResponseExtensions : object {
    [ExtensionAttribute]
public static Response ToResponse(Error error);
    [ExtensionAttribute]
public static Response`1<T> ToResponse(Error error);
}
[ExtensionAttribute]
public static class Blauhaus.Responses.Extensions.ResponseErrorExtensions : object {
    [ExtensionAttribute]
public static bool IsError(Response result, Error error);
    [ExtensionAttribute]
public static bool IsError(Response`1<T> result, Error error);
}
public interface Blauhaus.Responses.IResponse {
    public bool IsSuccess { get; }
    public bool IsFailure { get; }
    public Error Error { get; }
    public abstract virtual bool get_IsSuccess();
    public abstract virtual bool get_IsFailure();
    public abstract virtual Error get_Error();
}
public interface Blauhaus.Responses.IResponse`1 {
    public T Value { get; }
    public abstract virtual T get_Value();
}
[IsReadOnlyAttribute]
public class Blauhaus.Responses.Response : ValueType {
    private static Response _success;
    private static Task`1<Response> _successTask;
    [CompilerGeneratedAttribute]
private bool <IsSuccess>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsFailure>k__BackingField;
    [CompilerGeneratedAttribute]
private Error <Error>k__BackingField;
    public bool IsSuccess { get; }
    public bool IsFailure { get; }
    public Error Error { get; }
    [JsonConstructorAttribute]
public Response(bool isSuccess, bool isFailure, Error error);
    public Response(bool isSuccess, Error error);
    private static Response();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsSuccess();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsFailure();
    [CompilerGeneratedAttribute]
public sealed virtual Error get_Error();
    public static Response Success();
    public static Task`1<Response> SuccessTask();
    public static Response Failure(string errorText);
    public static Response Failure(Error error);
    public static Response Failure(IResponse response);
    public static Task`1<Response> FailureTask(Error error);
    public static Task`1<Response> FailureTask(IResponse response);
    public static Response`1<T> Failure(string errorText);
    public static Response`1<T> Failure(Error error);
    public static Response`1<T> Failure(IResponse response);
    public static Task`1<Response`1<T>> FailureTask(Error error);
    public static Task`1<Response`1<T>> FailureTask(IResponse response);
    public static Response`1<T> Success(T value);
    public static Response`1<T> Success(IResponse`1<T> response);
    public static Task`1<Response`1<T>> SuccessTask(T value);
    public static Task`1<Response`1<T>> SuccessTask(IResponse`1<T> response);
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Blauhaus.Responses.Response`1 : ValueType {
    [CompilerGeneratedAttribute]
private bool <IsSuccess>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsFailure>k__BackingField;
    [CompilerGeneratedAttribute]
private Error <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    public bool IsSuccess { get; }
    public bool IsFailure { get; }
    public Error Error { get; }
    public T Value { get; }
    [JsonConstructorAttribute]
public Response`1(bool isSuccess, bool isFailure, Error error, T value);
    public Response`1(bool isSuccess, Error error, T value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsSuccess();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsFailure();
    [CompilerGeneratedAttribute]
public sealed virtual Error get_Error();
    [CompilerGeneratedAttribute]
public sealed virtual T get_Value();
    public virtual string ToString();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
