[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Blazored.LocalStorage.BrowserStorageProvider : object {
    private static string StorageNotAvailableMessage;
    private IJSRuntime _jSRuntime;
    [NullableAttribute("2")]
private IJSInProcessRuntime _jSInProcessRuntime;
    public BrowserStorageProvider(IJSRuntime jSRuntime);
    [AsyncStateMachineAttribute("Blazored.LocalStorage.BrowserStorageProvider/<ClearAsync>d__4")]
public sealed virtual ValueTask ClearAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Blazored.LocalStorage.BrowserStorageProvider/<GetItemAsync>d__5")]
public sealed virtual ValueTask`1<string> GetItemAsync(string key, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Blazored.LocalStorage.BrowserStorageProvider/<KeyAsync>d__6")]
public sealed virtual ValueTask`1<string> KeyAsync(int index, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Blazored.LocalStorage.BrowserStorageProvider/<ContainKeyAsync>d__7")]
public sealed virtual ValueTask`1<bool> ContainKeyAsync(string key, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Blazored.LocalStorage.BrowserStorageProvider/<LengthAsync>d__8")]
public sealed virtual ValueTask`1<int> LengthAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Blazored.LocalStorage.BrowserStorageProvider/<RemoveItemAsync>d__9")]
public sealed virtual ValueTask RemoveItemAsync(string key, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Blazored.LocalStorage.BrowserStorageProvider/<SetItemAsync>d__10")]
public sealed virtual ValueTask SetItemAsync(string key, string data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Blazored.LocalStorage.BrowserStorageProvider/<KeysAsync>d__11")]
public sealed virtual ValueTask`1<IEnumerable`1<string>> KeysAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Blazored.LocalStorage.BrowserStorageProvider/<RemoveItemsAsync>d__12")]
public sealed virtual ValueTask RemoveItemsAsync(IEnumerable`1<string> keys, CancellationToken cancellationToken);
    public sealed virtual void Clear();
    public sealed virtual string GetItem(string key);
    public sealed virtual string Key(int index);
    public sealed virtual bool ContainKey(string key);
    public sealed virtual int Length();
    public sealed virtual void RemoveItem(string key);
    public sealed virtual void RemoveItems(IEnumerable`1<string> keys);
    public sealed virtual void SetItem(string key, string data);
    public sealed virtual IEnumerable`1<string> Keys();
    [MemberNotNullAttribute("_jSInProcessRuntime")]
private void CheckForInProcessRuntime();
    private static bool IsStorageDisabledException(Exception exception);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[ExcludeFromCodeCoverageAttribute]
public class Blazored.LocalStorage.ChangedEventArgs : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private object <OldValue>k__BackingField;
    [CompilerGeneratedAttribute]
private object <NewValue>k__BackingField;
    [NullableAttribute("1")]
public string Key { get; public set; }
    public object OldValue { get; public set; }
    public object NewValue { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Key();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public object get_OldValue();
    [CompilerGeneratedAttribute]
public void set_OldValue(object value);
    [CompilerGeneratedAttribute]
public object get_NewValue();
    [CompilerGeneratedAttribute]
public void set_NewValue(object value);
}
[ExcludeFromCodeCoverageAttribute]
public class Blazored.LocalStorage.ChangingEventArgs : ChangedEventArgs {
    [CompilerGeneratedAttribute]
private bool <Cancel>k__BackingField;
    public bool Cancel { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Cancel();
    [CompilerGeneratedAttribute]
public void set_Cancel(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Blazored.LocalStorage.Exceptions.BrowserStorageDisabledException : Exception {
    public BrowserStorageDisabledException(string message);
    public BrowserStorageDisabledException(string message, Exception inner);
}
[NullableContextAttribute("1")]
public interface Blazored.LocalStorage.ILocalStorageService {
    public abstract virtual ValueTask ClearAsync(CancellationToken cancellationToken);
    public abstract virtual ValueTask`1<T> GetItemAsync(string key, CancellationToken cancellationToken);
    public abstract virtual ValueTask`1<string> GetItemAsStringAsync(string key, CancellationToken cancellationToken);
    public abstract virtual ValueTask`1<string> KeyAsync(int index, CancellationToken cancellationToken);
    public abstract virtual ValueTask`1<IEnumerable`1<string>> KeysAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public abstract virtual ValueTask`1<bool> ContainKeyAsync(string key, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public abstract virtual ValueTask`1<int> LengthAsync(CancellationToken cancellationToken);
    public abstract virtual ValueTask RemoveItemAsync(string key, CancellationToken cancellationToken);
    public abstract virtual ValueTask RemoveItemsAsync(IEnumerable`1<string> keys, CancellationToken cancellationToken);
    public abstract virtual ValueTask SetItemAsync(string key, T data, CancellationToken cancellationToken);
    public abstract virtual ValueTask SetItemAsStringAsync(string key, string data, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
public abstract virtual void add_Changing(EventHandler`1<ChangingEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_Changing(EventHandler`1<ChangingEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_Changed(EventHandler`1<ChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_Changed(EventHandler`1<ChangedEventArgs> value);
}
[NullableContextAttribute("1")]
internal interface Blazored.LocalStorage.IStorageProvider {
    public abstract virtual void Clear();
    public abstract virtual ValueTask ClearAsync(CancellationToken cancellationToken);
    public abstract virtual bool ContainKey(string key);
    [NullableContextAttribute("0")]
public abstract virtual ValueTask`1<bool> ContainKeyAsync(string key, CancellationToken cancellationToken);
    public abstract virtual string GetItem(string key);
    public abstract virtual ValueTask`1<string> GetItemAsync(string key, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public abstract virtual string Key(int index);
    public abstract virtual ValueTask`1<string> KeyAsync(int index, CancellationToken cancellationToken);
    public abstract virtual IEnumerable`1<string> Keys();
    public abstract virtual ValueTask`1<IEnumerable`1<string>> KeysAsync(CancellationToken cancellationToken);
    public abstract virtual int Length();
    [NullableContextAttribute("0")]
public abstract virtual ValueTask`1<int> LengthAsync(CancellationToken cancellationToken);
    public abstract virtual void RemoveItem(string key);
    public abstract virtual ValueTask RemoveItemAsync(string key, CancellationToken cancellationToken);
    public abstract virtual void RemoveItems(IEnumerable`1<string> keys);
    public abstract virtual ValueTask RemoveItemsAsync(IEnumerable`1<string> keys, CancellationToken cancellationToken);
    public abstract virtual void SetItem(string key, string data);
    public abstract virtual ValueTask SetItemAsync(string key, string data, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Blazored.LocalStorage.ISyncLocalStorageService {
    public abstract virtual void Clear();
    [NullableContextAttribute("2")]
public abstract virtual T GetItem(string key);
    public abstract virtual string GetItemAsString(string key);
    [NullableContextAttribute("2")]
public abstract virtual string Key(int index);
    public abstract virtual bool ContainKey(string key);
    public abstract virtual int Length();
    public abstract virtual IEnumerable`1<string> Keys();
    public abstract virtual void RemoveItem(string key);
    public abstract virtual void RemoveItems(IEnumerable`1<string> keys);
    public abstract virtual void SetItem(string key, T data);
    public abstract virtual void SetItemAsString(string key, string data);
    [CompilerGeneratedAttribute]
public abstract virtual void add_Changing(EventHandler`1<ChangingEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_Changing(EventHandler`1<ChangingEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_Changed(EventHandler`1<ChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_Changed(EventHandler`1<ChangedEventArgs> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Blazored.LocalStorage.JsonConverters.TimespanJsonConverter : JsonConverter`1<TimeSpan> {
    public static string TimeSpanFormatString;
    public virtual TimeSpan Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, TimeSpan value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Blazored.LocalStorage.LocalStorageService : object {
    private IStorageProvider _storageProvider;
    private IJsonSerializer _serializer;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EventHandler`1<ChangingEventArgs> Changing;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EventHandler`1<ChangedEventArgs> Changed;
    public LocalStorageService(IStorageProvider storageProvider, IJsonSerializer serializer);
    [AsyncStateMachineAttribute("Blazored.LocalStorage.LocalStorageService/<SetItemAsync>d__3`1")]
public sealed virtual ValueTask SetItemAsync(string key, T data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Blazored.LocalStorage.LocalStorageService/<SetItemAsStringAsync>d__4")]
public sealed virtual ValueTask SetItemAsStringAsync(string key, string data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Blazored.LocalStorage.LocalStorageService/<GetItemAsync>d__5`1")]
public sealed virtual ValueTask`1<T> GetItemAsync(string key, CancellationToken cancellationToken);
    public sealed virtual ValueTask`1<string> GetItemAsStringAsync(string key, CancellationToken cancellationToken);
    public sealed virtual ValueTask RemoveItemAsync(string key, CancellationToken cancellationToken);
    public sealed virtual ValueTask ClearAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public sealed virtual ValueTask`1<int> LengthAsync(CancellationToken cancellationToken);
    public sealed virtual ValueTask`1<string> KeyAsync(int index, CancellationToken cancellationToken);
    public sealed virtual ValueTask`1<IEnumerable`1<string>> KeysAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public sealed virtual ValueTask`1<bool> ContainKeyAsync(string key, CancellationToken cancellationToken);
    public sealed virtual ValueTask RemoveItemsAsync(IEnumerable`1<string> keys, CancellationToken cancellationToken);
    public sealed virtual IEnumerable`1<string> Keys();
    public sealed virtual void SetItem(string key, T data);
    public sealed virtual void SetItemAsString(string key, string data);
    [NullableContextAttribute("2")]
public sealed virtual T GetItem(string key);
    public sealed virtual string GetItemAsString(string key);
    public sealed virtual void RemoveItem(string key);
    public sealed virtual void RemoveItems(IEnumerable`1<string> keys);
    public sealed virtual void Clear();
    public sealed virtual int Length();
    [NullableContextAttribute("2")]
public sealed virtual string Key(int index);
    public sealed virtual bool ContainKey(string key);
    [CompilerGeneratedAttribute]
public sealed virtual void add_Changing(EventHandler`1<ChangingEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_Changing(EventHandler`1<ChangingEventArgs> value);
    [AsyncStateMachineAttribute("Blazored.LocalStorage.LocalStorageService/<RaiseOnChangingAsync>d__28")]
private Task`1<ChangingEventArgs> RaiseOnChangingAsync(string key, object data);
    private ChangingEventArgs RaiseOnChangingSync(string key, object data);
    [AsyncStateMachineAttribute("Blazored.LocalStorage.LocalStorageService/<GetItemInternalAsync>d__30`1")]
private Task`1<T> GetItemInternalAsync(string key, CancellationToken cancellationToken);
    private object GetItemInternal(string key);
    [CompilerGeneratedAttribute]
public sealed virtual void add_Changed(EventHandler`1<ChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_Changed(EventHandler`1<ChangedEventArgs> value);
    [NullableContextAttribute("2")]
private void RaiseOnChanged(string key, object oldValue, object data);
}
[NullableContextAttribute("1")]
public interface Blazored.LocalStorage.Serialization.IJsonSerializer {
    public abstract virtual string Serialize(T obj);
    [NullableContextAttribute("2")]
public abstract virtual T Deserialize(string text);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Blazored.LocalStorage.Serialization.SystemTextJsonSerializer : object {
    private JsonSerializerOptions _options;
    public SystemTextJsonSerializer(IOptions`1<LocalStorageOptions> options);
    public SystemTextJsonSerializer(LocalStorageOptions localStorageOptions);
    [NullableContextAttribute("2")]
public sealed virtual T Deserialize(string data);
    public sealed virtual string Serialize(T data);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
[ExcludeFromCodeCoverageAttribute]
public static class Blazored.LocalStorage.ServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddBlazoredLocalStorage(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection AddBlazoredLocalStorage(IServiceCollection services, Action`1<LocalStorageOptions> configure);
    [ExtensionAttribute]
public static IServiceCollection AddBlazoredLocalStorageAsSingleton(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection AddBlazoredLocalStorageAsSingleton(IServiceCollection services, Action`1<LocalStorageOptions> configure);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Blazored.LocalStorage.StorageOptions.LocalStorageOptions : object {
    [CompilerGeneratedAttribute]
private JsonSerializerOptions <JsonSerializerOptions>k__BackingField;
    public JsonSerializerOptions JsonSerializerOptions { get; public set; }
    [CompilerGeneratedAttribute]
public JsonSerializerOptions get_JsonSerializerOptions();
    [CompilerGeneratedAttribute]
public void set_JsonSerializerOptions(JsonSerializerOptions value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
