[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class BigTed.BTProgressHUD : object {
    public static bool IsVisible { get; }
    [NullableContextAttribute("2")]
public static void Show(string status, float progress, MaskType maskType);
    public static void Show(string cancelCaption, Action cancelCallback, string status, float progress, MaskType maskType);
    [NullableContextAttribute("2")]
public static void ShowContinuousProgress(string status, MaskType maskType);
    public static void ShowToast(string status, bool showToastCentered, double timeoutMs);
    public static void ShowToast(string status, ToastPosition toastPosition, double timeoutMs);
    public static void ShowToast(string status, MaskType maskType, bool showToastCentered, double timeoutMs);
    public static void SetStatus(string status);
    public static void ShowSuccessWithStatus(string status, MaskType maskType, double timeoutMs, ImageStyle imageStyle);
    public static void ShowErrorWithStatus(string status, MaskType maskType, double timeoutMs, ImageStyle imageStyle);
    public static void ShowInfoWithStatus(string status, MaskType maskType, double timeoutMs, ImageStyle imageStyle);
    public static void ShowImage(UIImage image, string status, MaskType maskType, double timeoutMs);
    public static void Dismiss();
    public static bool get_IsVisible();
    public static void Show(UIWindow forWindow, string status, float progress, MaskType maskType);
    public static void Show(UIWindow forWindow, string cancelCaption, Action cancelCallback, string status, float progress, MaskType maskType);
    public static void ShowContinuousProgress(UIWindow forWindow, string status, MaskType maskType);
    public static void ShowToast(UIWindow forWindow, string status, bool showToastCentered, double timeoutMs);
    public static void ShowToast(UIWindow forWindow, string status, ToastPosition toastPosition, double timeoutMs);
    public static void ShowToast(UIWindow forWindow, string status, MaskType maskType, bool showToastCentered, double timeoutMs);
    public static void SetStatus(UIWindow forWindow, string status);
    public static void ShowSuccessWithStatus(UIWindow forWindow, string status, MaskType maskType, double timeoutMs, ImageStyle imageStyle);
    public static void ShowErrorWithStatus(UIWindow forWindow, string status, MaskType maskType, double timeoutMs, ImageStyle imageStyle);
    public static void ShowInfoWithStatus(UIWindow forWindow, string status, MaskType maskType, double timeoutMs, ImageStyle imageStyle);
    public static void ShowImage(UIWindow forWindow, UIImage image, string status, MaskType maskType, double timeoutMs);
    public static void Dismiss(UIWindow forWindow);
    public static bool GetIsVisible(UIWindow forWindow);
}
[ExtensionAttribute]
public static class BigTed.ImageHelper : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private static Lazy`1<UIImage> <ErrorImage>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private static Lazy`1<UIImage> <ErrorOutlineImage>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private static Lazy`1<UIImage> <ErrorOutlineFullImage>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private static Lazy`1<UIImage> <SuccessImage>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private static Lazy`1<UIImage> <SuccessOutlineImage>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private static Lazy`1<UIImage> <SuccessOutlineFullImage>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private static Lazy`1<UIImage> <InfoImage>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private static Lazy`1<UIImage> <InfoOutlineImage>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private static Lazy`1<UIImage> <InfoOutlineFullImage>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Lazy`1<UIImage> ErrorImage { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Lazy`1<UIImage> ErrorOutlineImage { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Lazy`1<UIImage> ErrorOutlineFullImage { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Lazy`1<UIImage> SuccessImage { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Lazy`1<UIImage> SuccessOutlineImage { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Lazy`1<UIImage> SuccessOutlineFullImage { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Lazy`1<UIImage> InfoImage { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Lazy`1<UIImage> InfoOutlineImage { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Lazy`1<UIImage> InfoOutlineFullImage { get; }
    private static ImageHelper();
    [CompilerGeneratedAttribute]
public static Lazy`1<UIImage> get_ErrorImage();
    [CompilerGeneratedAttribute]
public static Lazy`1<UIImage> get_ErrorOutlineImage();
    [CompilerGeneratedAttribute]
public static Lazy`1<UIImage> get_ErrorOutlineFullImage();
    [CompilerGeneratedAttribute]
public static Lazy`1<UIImage> get_SuccessImage();
    [CompilerGeneratedAttribute]
public static Lazy`1<UIImage> get_SuccessOutlineImage();
    [CompilerGeneratedAttribute]
public static Lazy`1<UIImage> get_SuccessOutlineFullImage();
    [CompilerGeneratedAttribute]
public static Lazy`1<UIImage> get_InfoImage();
    [CompilerGeneratedAttribute]
public static Lazy`1<UIImage> get_InfoOutlineImage();
    [CompilerGeneratedAttribute]
public static Lazy`1<UIImage> get_InfoOutlineFullImage();
    [NullableContextAttribute("1")]
[ExtensionAttribute]
private static UIImage ToUIImage(string base64String);
}
public enum BigTed.ImageStyle : Enum {
    public int value__;
    public static ImageStyle Default;
    public static ImageStyle Outline;
    public static ImageStyle OutlineFull;
}
public enum BigTed.MaskType : Enum {
    public int value__;
    public static MaskType None;
    public static MaskType Clear;
    public static MaskType Black;
    public static MaskType Gradient;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BigTed.ProgressHUD : UIView {
    [NullableAttribute("2")]
private static Class ClsUIPeripheralHostView;
    [NullableAttribute("2")]
private static Class ClsUIKeyboard;
    [NullableAttribute("2")]
private static Class ClsUIInputSetContainerView;
    [NullableAttribute("2")]
private static Class ClsUIInputSetHostView;
    private static NSObject obj;
    [NullableAttribute("2")]
private UIImage _errorImage;
    [NullableAttribute("2")]
private UIImage _successImage;
    [NullableAttribute("2")]
private UIImage _infoImage;
    [NullableAttribute("2")]
private UIImage _errorOutlineImage;
    [NullableAttribute("2")]
private UIImage _successOutlineImage;
    [NullableAttribute("2")]
private UIImage _infoOutlineImage;
    [NullableAttribute("2")]
private UIImage _errorOutlineFullImage;
    [NullableAttribute("2")]
private UIImage _successOutlineFullImage;
    [NullableAttribute("2")]
private UIImage _infoOutlineFullImage;
    private MaskType _maskType;
    [NullableAttribute("2")]
private NSTimer _fadeoutTimer;
    [NullableAttribute("2")]
private UIView _overlayView;
    [NullableAttribute("2")]
private UIView _hudView;
    [NullableAttribute("2")]
private UILabel _stringLabel;
    [NullableAttribute("2")]
private UIImageView _imageView;
    [NullableAttribute("2")]
private UIActivityIndicatorView _spinnerView;
    [NullableAttribute("2")]
private UIButton _cancelHud;
    [NullableAttribute("2")]
private NSTimer _progressTimer;
    private float _progress;
    [NullableAttribute("2")]
private CAShapeLayer _backgroundRingLayer;
    [NullableAttribute("2")]
private CAShapeLayer _ringLayer;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<NSObject> _eventListeners;
    private bool _displayContinuousImage;
    private ToastPosition _toastPosition;
    [CompilerGeneratedAttribute]
private UIWindow <HudWindow>k__BackingField;
    [CompilerGeneratedAttribute]
private static CGRect <KeyboardSize>k__BackingField;
    private static Dictionary`2<NativeHandle, ProgressHUD> windowHuds;
    public UIWindow HudWindow { get; private set; }
    public static CGRect KeyboardSize { get; private set; }
    public UIImage ErrorImage { get; public set; }
    public UIImage SuccessImage { get; public set; }
    public UIImage InfoImage { get; public set; }
    public UIImage ErrorOutlineImage { get; public set; }
    public UIImage SuccessOutlineImage { get; public set; }
    public UIImage InfoOutlineImage { get; public set; }
    public UIImage ErrorOutlineFullImage { get; public set; }
    public UIImage SuccessOutlineFullImage { get; public set; }
    public UIImage InfoOutlineFullImage { get; public set; }
    public bool IsVisible { get; }
    private CAShapeLayer RingLayer { get; }
    [NullableAttribute("2")]
private CAShapeLayer BackgroundRingLayer { get; }
    private bool IsClear { get; }
    private UIView OverlayView { get; }
    private UIView HudView { get; }
    private UILabel StringLabel { get; }
    private UIButton CancelHudButton { get; }
    private UIImageView ImageView { get; }
    private UIActivityIndicatorView SpinnerView { get; }
    private static ProgressHUD();
    public ProgressHUD(UIWindow window);
    public static void Initialize();
    [CompilerGeneratedAttribute]
public UIWindow get_HudWindow();
    [CompilerGeneratedAttribute]
private void set_HudWindow(UIWindow value);
    [CompilerGeneratedAttribute]
public static CGRect get_KeyboardSize();
    [CompilerGeneratedAttribute]
private static void set_KeyboardSize(CGRect value);
    public UIImage get_ErrorImage();
    public void set_ErrorImage(UIImage value);
    public UIImage get_SuccessImage();
    public void set_SuccessImage(UIImage value);
    public UIImage get_InfoImage();
    public void set_InfoImage(UIImage value);
    public UIImage get_ErrorOutlineImage();
    public void set_ErrorOutlineImage(UIImage value);
    public UIImage get_SuccessOutlineImage();
    public void set_SuccessOutlineImage(UIImage value);
    public UIImage get_InfoOutlineImage();
    public void set_InfoOutlineImage(UIImage value);
    public UIImage get_ErrorOutlineFullImage();
    public void set_ErrorOutlineFullImage(UIImage value);
    public UIImage get_SuccessOutlineFullImage();
    public void set_SuccessOutlineFullImage(UIImage value);
    public UIImage get_InfoOutlineFullImage();
    public void set_InfoOutlineFullImage(UIImage value);
    public bool get_IsVisible();
    [NullableContextAttribute("2")]
public static ProgressHUD For(UIWindow window);
    [NullableContextAttribute("2")]
public static ProgressHUD ForDefaultWindow();
    private CAShapeLayer get_RingLayer();
    [NullableContextAttribute("2")]
private CAShapeLayer get_BackgroundRingLayer();
    private bool get_IsClear();
    private UIView get_OverlayView();
    private UIView get_HudView();
    private UILabel get_StringLabel();
    private UIButton get_CancelHudButton();
    private UIImageView get_ImageView();
    private UIActivityIndicatorView get_SpinnerView();
    [NullableContextAttribute("2")]
public void Show(string status, float progress, MaskType maskType, double timeoutMs);
    public void Show(string cancelCaption, Action cancelCallback, string status, float progress, MaskType maskType, double timeoutMs);
    [NullableContextAttribute("2")]
public void ShowContinuousProgress(string status, MaskType maskType, double timeoutMs, UIImage img);
    [NullableContextAttribute("2")]
public void ShowContinuousProgressTest(string status, MaskType maskType, double timeoutMs);
    public void ShowToast(string status, MaskType maskType, ToastPosition toastPosition, double timeoutMs);
    public void SetStatus(string status);
    public void ShowSuccessWithStatus(string status, MaskType maskType, double timeoutMs, ImageStyle imageStyle);
    public void ShowErrorWithStatus(string status, MaskType maskType, double timeoutMs, ImageStyle imageStyle);
    public void ShowInfoWithStatus(string status, MaskType maskType, double timeoutMs, ImageStyle imageStyle);
    public void ShowImage(UIImage image, string status, MaskType maskType, double timeoutMs);
    public void Dismiss();
    public virtual void Draw(CGRect rect);
    [NullableContextAttribute("2")]
private void ShowProgressWorker(float progress, string status, MaskType maskType, bool textOnly, ToastPosition toastPosition, string cancelCaption, Action cancelCallback, double timeoutMs, bool showContinuousProgress, UIImage displayContinuousImage);
    private void ShowImageWorker(UIImage image, string status, MaskType maskType, TimeSpan duration);
    private void StartDismissTimer(TimeSpan duration);
    private void StartProgressTimer(TimeSpan duration);
    private void StopProgressTimer();
    private void UpdateProgress();
    private void CancelRingLayerAnimation();
    private void DismissWorker();
    private void RemoveHud();
    private void SetStatusWorker(string status);
    private void RegisterNotifications();
    private void UnRegisterNotifications();
    private void MoveToPoint(CGPoint newCenter, float angle);
    [NullableContextAttribute("2")]
private void PositionHUD(NSNotification notification);
    private static float GetActiveHeight(bool ignoreOrientation, UIInterfaceOrientation orientation, CGRect orientationFrame, float keyboardHeight);
    [NullableContextAttribute("2")]
private float GetKeyboardHeightFromNotification(NSNotification notification, bool ignoreOrientation, UIInterfaceOrientation orientation, Double& animationDuration);
    [NullableContextAttribute("2")]
private void SetFadeoutTimer(NSTimer newTimer);
    [NullableContextAttribute("2")]
private void SetProgressTimer(NSTimer newTimer);
    private void UpdatePosition(bool textOnly);
    [NullableContextAttribute("2")]
private float AdjustSizesForText(string text, float hudHeight, bool imageUsed, Single& hudWidth, CGRect& labelRect);
    private static float GetDefaultHudHeight(bool textOnly, bool imageUsed, float stringAndImageHeightBuffer, float stringHeight, float stringHeightBuffer);
    public static bool IsLandscape(UIInterfaceOrientation orientation);
    public static bool IsPortrait(UIInterfaceOrientation orientation);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <StartDismissTimer>b__104_0(NSTimer _);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <StartProgressTimer>b__105_0(NSTimer _);
    [CompilerGeneratedAttribute]
private void <UpdateProgress>b__107_0();
    [CompilerGeneratedAttribute]
private void <DismissWorker>b__109_0();
    [CompilerGeneratedAttribute]
private void <DismissWorker>b__109_1();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class BigTed.ProgressHUDAppearance : object {
    [CompilerGeneratedAttribute]
private static UIColor <DefaultHudBackgroundColor>k__BackingField;
    [CompilerGeneratedAttribute]
private static UIColor <DefaultForegroundColor>k__BackingField;
    [CompilerGeneratedAttribute]
private static UIColor <DefaultHudToastBackgroundColor>k__BackingField;
    [CompilerGeneratedAttribute]
private static UIFont <DefaultHudFont>k__BackingField;
    [CompilerGeneratedAttribute]
private static UITextAlignment <DefaultHudTextAlignment>k__BackingField;
    public static UIColor DefaultRingColor;
    public static UIColor DefaultRingBackgroundColor;
    public static float DefaultRingRadius;
    public static float DefaultRingThickness;
    public static float DefaultHudCornerRadius;
    public static double DefaultProgressUpdateInterval;
    [CompilerGeneratedAttribute]
private static float <RingRadius>k__BackingField;
    [CompilerGeneratedAttribute]
private static float <RingThickness>k__BackingField;
    [CompilerGeneratedAttribute]
private static double <RingProgressUpdateInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private static UIColor <RingColor>k__BackingField;
    [CompilerGeneratedAttribute]
private static UIColor <RingBackgroundColor>k__BackingField;
    [CompilerGeneratedAttribute]
private static float <HudCornerRadius>k__BackingField;
    [CompilerGeneratedAttribute]
private static UIColor <HudBackgroundColor>k__BackingField;
    [CompilerGeneratedAttribute]
private static UIColor <HudImageTintColor>k__BackingField;
    [CompilerGeneratedAttribute]
private static UIColor <HudToastBackgroundColor>k__BackingField;
    [CompilerGeneratedAttribute]
private static UIFont <HudFont>k__BackingField;
    [CompilerGeneratedAttribute]
private static UIColor <HudTextColor>k__BackingField;
    [CompilerGeneratedAttribute]
private static UIFont <HudButtonFont>k__BackingField;
    [CompilerGeneratedAttribute]
private static UIColor <HudButtonTextColor>k__BackingField;
    [CompilerGeneratedAttribute]
private static UITextAlignment <HudTextAlignment>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private static UIImage <ErrorImage>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private static UIImage <SuccessImage>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private static UIImage <InfoImage>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private static UIImage <ErrorOutlineImage>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private static UIImage <SuccessOutlineImage>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private static UIImage <InfoOutlineImage>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private static UIImage <ErrorOutlineFullImage>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private static UIImage <SuccessOutlineFullImage>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private static UIImage <InfoOutlineFullImage>k__BackingField;
    public static UIColor DefaultHudBackgroundColor { get; }
    public static UIColor DefaultForegroundColor { get; }
    public static UIColor DefaultHudToastBackgroundColor { get; }
    public static UIFont DefaultHudFont { get; }
    public static UITextAlignment DefaultHudTextAlignment { get; }
    public static float RingRadius { get; public set; }
    public static float RingThickness { get; public set; }
    public static double RingProgressUpdateInterval { get; public set; }
    public static UIColor RingColor { get; public set; }
    public static UIColor RingBackgroundColor { get; public set; }
    public static float HudCornerRadius { get; public set; }
    public static UIColor HudBackgroundColor { get; public set; }
    public static UIColor HudImageTintColor { get; public set; }
    public static UIColor HudToastBackgroundColor { get; public set; }
    public static UIFont HudFont { get; public set; }
    public static UIColor HudTextColor { get; public set; }
    public static UIFont HudButtonFont { get; public set; }
    public static UIColor HudButtonTextColor { get; public set; }
    public static UITextAlignment HudTextAlignment { get; public set; }
    [NullableAttribute("2")]
public static UIImage ErrorImage { get; public set; }
    [NullableAttribute("2")]
public static UIImage SuccessImage { get; public set; }
    [NullableAttribute("2")]
public static UIImage InfoImage { get; public set; }
    [NullableAttribute("2")]
public static UIImage ErrorOutlineImage { get; public set; }
    [NullableAttribute("2")]
public static UIImage SuccessOutlineImage { get; public set; }
    [NullableAttribute("2")]
public static UIImage InfoOutlineImage { get; public set; }
    [NullableAttribute("2")]
public static UIImage ErrorOutlineFullImage { get; public set; }
    [NullableAttribute("2")]
public static UIImage SuccessOutlineFullImage { get; public set; }
    [NullableAttribute("2")]
public static UIImage InfoOutlineFullImage { get; public set; }
    private static ProgressHUDAppearance();
    [CompilerGeneratedAttribute]
public static UIColor get_DefaultHudBackgroundColor();
    [CompilerGeneratedAttribute]
public static UIColor get_DefaultForegroundColor();
    [CompilerGeneratedAttribute]
public static UIColor get_DefaultHudToastBackgroundColor();
    [CompilerGeneratedAttribute]
public static UIFont get_DefaultHudFont();
    [CompilerGeneratedAttribute]
public static UITextAlignment get_DefaultHudTextAlignment();
    [CompilerGeneratedAttribute]
public static float get_RingRadius();
    [CompilerGeneratedAttribute]
public static void set_RingRadius(float value);
    [CompilerGeneratedAttribute]
public static float get_RingThickness();
    [CompilerGeneratedAttribute]
public static void set_RingThickness(float value);
    [CompilerGeneratedAttribute]
public static double get_RingProgressUpdateInterval();
    [CompilerGeneratedAttribute]
public static void set_RingProgressUpdateInterval(double value);
    [CompilerGeneratedAttribute]
public static UIColor get_RingColor();
    [CompilerGeneratedAttribute]
public static void set_RingColor(UIColor value);
    [CompilerGeneratedAttribute]
public static UIColor get_RingBackgroundColor();
    [CompilerGeneratedAttribute]
public static void set_RingBackgroundColor(UIColor value);
    [CompilerGeneratedAttribute]
public static float get_HudCornerRadius();
    [CompilerGeneratedAttribute]
public static void set_HudCornerRadius(float value);
    [CompilerGeneratedAttribute]
public static UIColor get_HudBackgroundColor();
    [CompilerGeneratedAttribute]
public static void set_HudBackgroundColor(UIColor value);
    [CompilerGeneratedAttribute]
public static UIColor get_HudImageTintColor();
    [CompilerGeneratedAttribute]
public static void set_HudImageTintColor(UIColor value);
    [CompilerGeneratedAttribute]
public static UIColor get_HudToastBackgroundColor();
    [CompilerGeneratedAttribute]
public static void set_HudToastBackgroundColor(UIColor value);
    [CompilerGeneratedAttribute]
public static UIFont get_HudFont();
    [CompilerGeneratedAttribute]
public static void set_HudFont(UIFont value);
    [CompilerGeneratedAttribute]
public static UIColor get_HudTextColor();
    [CompilerGeneratedAttribute]
public static void set_HudTextColor(UIColor value);
    [CompilerGeneratedAttribute]
public static UIFont get_HudButtonFont();
    [CompilerGeneratedAttribute]
public static void set_HudButtonFont(UIFont value);
    [CompilerGeneratedAttribute]
public static UIColor get_HudButtonTextColor();
    [CompilerGeneratedAttribute]
public static void set_HudButtonTextColor(UIColor value);
    [CompilerGeneratedAttribute]
public static UITextAlignment get_HudTextAlignment();
    [CompilerGeneratedAttribute]
public static void set_HudTextAlignment(UITextAlignment value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static UIImage get_ErrorImage();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static void set_ErrorImage(UIImage value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static UIImage get_SuccessImage();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static void set_SuccessImage(UIImage value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static UIImage get_InfoImage();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static void set_InfoImage(UIImage value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static UIImage get_ErrorOutlineImage();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static void set_ErrorOutlineImage(UIImage value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static UIImage get_SuccessOutlineImage();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static void set_SuccessOutlineImage(UIImage value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static UIImage get_InfoOutlineImage();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static void set_InfoOutlineImage(UIImage value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static UIImage get_ErrorOutlineFullImage();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static void set_ErrorOutlineFullImage(UIImage value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static UIImage get_SuccessOutlineFullImage();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static void set_SuccessOutlineFullImage(UIImage value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static UIImage get_InfoOutlineFullImage();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static void set_InfoOutlineFullImage(UIImage value);
    public static void ResetToDefaults();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class BigTed.ShapeHelper : object {
    private static CGPoint PointOnCircle(float radius, float angleInDegrees);
    private static UIBezierPath CreateCirclePath(float radius, int sampleCount);
    public static CAShapeLayer CreateRingLayer(CGPoint center, float radius, float lineWidth, UIColor color);
}
public enum BigTed.ToastPosition : Enum {
    public int value__;
    public static ToastPosition Bottom;
    public static ToastPosition Center;
    public static ToastPosition Top;
}
