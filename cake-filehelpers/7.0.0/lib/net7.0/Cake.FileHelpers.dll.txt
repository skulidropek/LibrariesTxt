[ExtensionAttribute]
[CakeAliasCategoryAttribute("File Helpers")]
public static class Cake.FileHelpers.FileHelperAliases : object {
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static string FileReadText(ICakeContext context, FilePath file);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static string FileReadText(ICakeContext context, FilePath file, Encoding encoding);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static String[] FileReadLines(ICakeContext context, FilePath file);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static String[] FileReadLines(ICakeContext context, FilePath file, Encoding encoding);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static void FileWriteText(ICakeContext context, FilePath file, string text);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static void FileWriteText(ICakeContext context, FilePath file, Encoding encoding, string text);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static void FileWriteLines(ICakeContext context, FilePath file, String[] lines);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static void FileWriteLines(ICakeContext context, FilePath file, Encoding encoding, String[] lines);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static void FileAppendText(ICakeContext context, FilePath file, string text);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static void FileAppendText(ICakeContext context, FilePath file, Encoding encoding, string text);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static void FileAppendLines(ICakeContext context, FilePath file, String[] lines);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static void FileAppendLines(ICakeContext context, FilePath file, Encoding encoding, String[] lines);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static void FileTouch(ICakeContext context, FilePath file);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static FilePath[] ReplaceTextInFiles(ICakeContext context, string globberPattern, string findText, string replaceText);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static FilePath[] ReplaceTextInFiles(ICakeContext context, string globberPattern, Encoding encoding, string findText, string replaceText);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static FilePath[] ReplaceRegexInFiles(ICakeContext context, string globberPattern, string rxFindPattern, string replaceText);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static FilePath[] ReplaceRegexInFiles(ICakeContext context, string globberPattern, Encoding encoding, string rxFindPattern, string replaceText);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static FilePath[] ReplaceRegexInFiles(ICakeContext context, string globberPattern, string rxFindPattern, string replaceText, RegexOptions rxOptions);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static FilePath[] ReplaceRegexInFiles(ICakeContext context, string globberPattern, Encoding encoding, string rxFindPattern, string replaceText, RegexOptions rxOptions);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static FilePath[] FindRegexInFiles(ICakeContext context, string globberPattern, string rxFindPattern);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static FilePath[] FindRegexInFiles(ICakeContext context, string globberPattern, Encoding encoding, string rxFindPattern);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static FilePath[] FindRegexInFiles(ICakeContext context, string globberPattern, string rxFindPattern, RegexOptions rxOptions);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static FilePath[] FindRegexInFiles(ICakeContext context, string globberPattern, Encoding encoding, string rxFindPattern, RegexOptions rxOptions);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static FilePath[] FindTextInFiles(ICakeContext context, string globberPattern, string substring);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static FilePath[] FindTextInFiles(ICakeContext context, string globberPattern, Encoding encoding, string findPattern);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static FilePath[] FindTextInFiles(ICakeContext context, IEnumerable`1<FilePath> files, string substring);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static FilePath[] FindTextInFiles(ICakeContext context, IEnumerable`1<FilePath> files, Encoding encoding, string substring);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static List`1<string> FindRegexMatchesInFile(ICakeContext context, FilePath file, string rxFindPattern, RegexOptions rxOptions);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static List`1<string> FindRegexMatchesInFile(ICakeContext context, FilePath file, Encoding encoding, string rxFindPattern, RegexOptions rxOptions);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static string FindRegexMatchInFile(ICakeContext context, FilePath file, string rxFindPattern, RegexOptions rxOptions);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static string FindRegexMatchInFile(ICakeContext context, FilePath file, Encoding encoding, string rxFindPattern, RegexOptions rxOptions);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static List`1<List`1<Group>> FindRegexMatchesGroupsInFile(ICakeContext context, FilePath file, string rxFindPattern, RegexOptions rxOptions);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static List`1<List`1<Group>> FindRegexMatchesGroupsInFile(ICakeContext context, FilePath file, Encoding encoding, string rxFindPattern, RegexOptions rxOptions);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static List`1<Group> FindRegexMatchGroupsInFile(ICakeContext context, FilePath file, string rxFindPattern, RegexOptions rxOptions);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static List`1<Group> FindRegexMatchGroupsInFile(ICakeContext context, FilePath file, Encoding encoding, string rxFindPattern, RegexOptions rxOptions);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static Group FindRegexMatchGroupInFile(ICakeContext context, FilePath file, string rxFindPattern, int groupIndex, RegexOptions rxOptions);
    [ExtensionAttribute]
[CakeMethodAliasAttribute]
public static Group FindRegexMatchGroupInFile(ICakeContext context, FilePath file, Encoding encoding, string rxFindPattern, int groupIndex, RegexOptions rxOptions);
    private static StreamReader CreateStreamReader(ICakeContext context, FilePath file, Encoding encoding);
    private static StreamWriter CreateStreamWriter(ICakeContext context, FilePath file, FileMode mode, Encoding encoding);
    private static String[] ReadLines(StreamReader streamReader);
    private static void WriteLines(StreamWriter streamWriter, String[] lines);
}
[CompilerGeneratedAttribute]
internal class Cake.FileHelpers.NamespaceDoc : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
