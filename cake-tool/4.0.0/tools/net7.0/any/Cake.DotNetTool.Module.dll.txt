public class Cake.DotNetTool.Module.DotNetToolContentResolver : object {
    private IFileSystem _fileSystem;
    private ICakeEnvironment _environment;
    private IGlobber _globber;
    private ICakeLog _log;
    private ICakeConfiguration _config;
    public DotNetToolContentResolver(IFileSystem fileSystem, ICakeEnvironment environment, IGlobber globber, ICakeLog log, ICakeConfiguration config);
    public sealed virtual IReadOnlyCollection`1<IFile> GetFiles(PackageReference package, PackageType type);
    private IReadOnlyCollection`1<IFile> GetToolFiles(DirectoryPath installationLocation, PackageReference package);
    private IEnumerable`1<IFile> GetFiles(DirectoryPath path, PackageReference package, String[] patterns);
    [CompilerGeneratedAttribute]
private IFile <GetFiles>b__8_0(FilePath p);
}
public class Cake.DotNetTool.Module.DotNetToolModule : object {
    public sealed virtual void Register(ICakeContainerRegistrar registrar);
}
public enum Cake.DotNetTool.Module.DotNetToolOperation : Enum {
    public int value__;
    public static DotNetToolOperation Install;
    public static DotNetToolOperation Uninstall;
    public static DotNetToolOperation Update;
}
public class Cake.DotNetTool.Module.DotNetToolPackage : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ShortCode>k__BackingField;
    public string Id { get; public set; }
    public string Version { get; public set; }
    public string ShortCode { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_ShortCode();
    [CompilerGeneratedAttribute]
public void set_ShortCode(string value);
}
public class Cake.DotNetTool.Module.DotNetToolPackageInstaller : object {
    private ICakeEnvironment _environment;
    private IProcessRunner _processRunner;
    private ICakeLog _log;
    private IDotNetToolContentResolver _contentResolver;
    private ICakeConfiguration _config;
    private IFileSystem _fileSystem;
    public DotNetToolPackageInstaller(ICakeEnvironment environment, IProcessRunner processRunner, ICakeLog log, IDotNetToolContentResolver contentResolver, ICakeConfiguration config, IFileSystem fileSystem);
    public sealed virtual bool CanInstall(PackageReference package, PackageType type);
    public sealed virtual IReadOnlyCollection`1<IFile> Install(PackageReference package, PackageType type, DirectoryPath path);
    private List`1<DotNetToolPackage> GetInstalledTools(string toolLocation);
    private void RunDotNetTool(PackageReference package, DirectoryPath toolsFolderDirectoryPath, DotNetToolOperation operation);
    private static ProcessArgumentBuilder GetArguments(PackageReference definition, DotNetToolOperation operation, ICakeLog log, DirectoryPath toolDirectoryPath);
}
public interface Cake.DotNetTool.Module.IDotNetToolContentResolver {
    public abstract virtual IReadOnlyCollection`1<IFile> GetFiles(PackageReference package, PackageType type);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
