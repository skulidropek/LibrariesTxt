[ExtensionAttribute]
internal static class Wcwidth.IntegerExtensions : object {
    [ExtensionAttribute]
public static bool Exist(UInt32[0...,0...] table, UInt32 value);
    [ExtensionAttribute]
public static int Find(UInt32[0...,0...] table, UInt32 value);
}
public enum Wcwidth.Unicode : Enum {
    public int value__;
    [DescriptionAttribute("4.1.0")]
public static Unicode Version_4_1_0;
    [DescriptionAttribute("5.0.0")]
public static Unicode Version_5_0_0;
    [DescriptionAttribute("5.1.0")]
public static Unicode Version_5_1_0;
    [DescriptionAttribute("5.2.0")]
public static Unicode Version_5_2_0;
    [DescriptionAttribute("6.0.0")]
public static Unicode Version_6_0_0;
    [DescriptionAttribute("6.1.0")]
public static Unicode Version_6_1_0;
    [DescriptionAttribute("6.2.0")]
public static Unicode Version_6_2_0;
    [DescriptionAttribute("6.3.0")]
public static Unicode Version_6_3_0;
    [DescriptionAttribute("7.0.0")]
public static Unicode Version_7_0_0;
    [DescriptionAttribute("8.0.0")]
public static Unicode Version_8_0_0;
    [DescriptionAttribute("9.0.0")]
public static Unicode Version_9_0_0;
    [DescriptionAttribute("10.0.0")]
public static Unicode Version_10_0_0;
    [DescriptionAttribute("11.0.0")]
public static Unicode Version_11_0_0;
    [DescriptionAttribute("12.0.0")]
public static Unicode Version_12_0_0;
    [DescriptionAttribute("12.1.0")]
public static Unicode Version_12_1_0;
    [DescriptionAttribute("13.0.0")]
public static Unicode Version_13_0_0;
}
public static class Wcwidth.UnicodeCalculator : object {
    private static Unicode Latest;
    private static HashSet`1<UInt32> _zeroWidthCf;
    private static UnicodeCalculator();
    public static int GetWidth(char value, Nullable`1<Unicode> version);
}
internal static class Wcwidth.WideTable : object {
    private static Dictionary`2<Unicode, UInt32[0...,0...]> _lookup;
    private static object _lock;
    private static WideTable();
    public static UInt32[0...,0...] GetTable(Unicode version);
    private static UInt32[0...,0...] GenerateTable(Unicode version);
    private static UInt32[0...,0...] Unicode_4_1_0();
    private static UInt32[0...,0...] Unicode_5_0_0();
    private static UInt32[0...,0...] Unicode_5_1_0();
    private static UInt32[0...,0...] Unicode_5_2_0();
    private static UInt32[0...,0...] Unicode_6_0_0();
    private static UInt32[0...,0...] Unicode_6_1_0();
    private static UInt32[0...,0...] Unicode_6_2_0();
    private static UInt32[0...,0...] Unicode_6_3_0();
    private static UInt32[0...,0...] Unicode_7_0_0();
    private static UInt32[0...,0...] Unicode_8_0_0();
    private static UInt32[0...,0...] Unicode_9_0_0();
    private static UInt32[0...,0...] Unicode_10_0_0();
    private static UInt32[0...,0...] Unicode_11_0_0();
    private static UInt32[0...,0...] Unicode_12_0_0();
    private static UInt32[0...,0...] Unicode_12_1_0();
    private static UInt32[0...,0...] Unicode_13_0_0();
}
internal static class Wcwidth.ZeroTable : object {
    private static Dictionary`2<Unicode, UInt32[0...,0...]> _lookup;
    private static object _lock;
    private static ZeroTable();
    public static UInt32[0...,0...] GetTable(Unicode version);
    private static UInt32[0...,0...] GenerateTable(Unicode version);
    private static UInt32[0...,0...] Unicode_4_1_0();
    private static UInt32[0...,0...] Unicode_5_0_0();
    private static UInt32[0...,0...] Unicode_5_1_0();
    private static UInt32[0...,0...] Unicode_5_2_0();
    private static UInt32[0...,0...] Unicode_6_0_0();
    private static UInt32[0...,0...] Unicode_6_1_0();
    private static UInt32[0...,0...] Unicode_6_2_0();
    private static UInt32[0...,0...] Unicode_6_3_0();
    private static UInt32[0...,0...] Unicode_7_0_0();
    private static UInt32[0...,0...] Unicode_8_0_0();
    private static UInt32[0...,0...] Unicode_9_0_0();
    private static UInt32[0...,0...] Unicode_10_0_0();
    private static UInt32[0...,0...] Unicode_11_0_0();
    private static UInt32[0...,0...] Unicode_12_0_0();
    private static UInt32[0...,0...] Unicode_12_1_0();
    private static UInt32[0...,0...] Unicode_13_0_0();
}
