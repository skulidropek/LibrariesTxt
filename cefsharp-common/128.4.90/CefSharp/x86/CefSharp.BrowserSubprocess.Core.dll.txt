[NativeCppClassAttribute]
internal class __crt_fast_encoded_nullptr_t : ValueType {
}
[NativeCppClassAttribute]
internal class __crt_locale_data_public : ValueType {
}
[NativeCppClassAttribute]
internal class __crt_locale_pointers : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class __m128 : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class __m64 : ValueType {
}
[NativeCppClassAttribute]
internal enum __MIDL___MIDL_itf_gchost_0000_0000_0001 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL___MIDL_itf_gchost_0000_0000_0002 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL___MIDL_itf_mscoree_0000_0000_0001 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL___MIDL_itf_mscoree_0000_0000_0002 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL___MIDL_itf_mscoree_0000_0000_0003 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL___MIDL_itf_mscoree_0000_0000_0004 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL___MIDL_itf_mscoree_0000_0000_0005 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL___MIDL_itf_mscoree_0000_0009_0001 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL___MIDL_itf_mscoree_0000_0009_0002 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL___MIDL_itf_mscoree_0000_0009_0003 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL___MIDL_itf_mscoree_0000_0011_0001 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL___MIDL_itf_mscoree_0000_0020_0001 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL___MIDL_itf_mscoree_0000_0021_0001 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL___MIDL_itf_mscoree_0000_0021_0002 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL___MIDL_itf_mscoree_0000_0028_0001 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL___MIDL_itf_mscoree_0000_0028_0002 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL___MIDL_itf_mscoree_0000_0028_0003 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL___MIDL_itf_mscoree_0000_0028_0004 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL___MIDL_itf_mscoree_0000_0030_0001 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL___MIDL_itf_mscoree_0000_0030_0002 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL___MIDL_itf_mscoree_0000_0040_0001 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL___MIDL_itf_mscoree_0000_0045_0001 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL___MIDL_itf_mscoree_0000_0046_0001 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL___MIDL_itf_mscoree_0000_0048_0001 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL_IAuthenticateEx_0001 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL_IBindStatusCallback_0001 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL_IBindStatusCallback_0002 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL_IBindStatusCallback_0003 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL_IBindStatusCallback_0004 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL_IBindStatusCallback_0005 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL_IBindStatusCallback_0006 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL_IBindStatusCallbackEx_0001 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL_ICodeInstall_0001 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL_IGetBindHandle_0001 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL_IInternetSecurityManager_0001 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL_IInternetSecurityManager_0002 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL_IInternetSecurityManager_0003 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL_IInternetZoneManager_0001 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL_IInternetZoneManager_0002 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL_IMonikerProp_0001 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL_IUri_0001 : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __MIDL_IUri_0002 : Enum {
    public int value__;
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class __s_GUID : ValueType {
}
[NativeCppClassAttribute]
internal enum __scrt_module_type : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum __scrt_native_startup_state : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class __std_exception_data : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class __std_type_info_data : ValueType {
}
[NativeCppClassAttribute]
internal class __type_info_node : ValueType {
}
[NativeCppClassAttribute]
internal enum __vcrt_lock_id : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _ACCESS_REASON_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _ACL_INFORMATION_CLASS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _ACTIVATION_CONTEXT_INFO_CLASS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class _AMD64_MXCSR_REG : ValueType {
}
[NativeCppClassAttribute]
internal enum _APTTYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _APTTYPEQUALIFIER : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class _ARM64_FPCR_REG : ValueType {
}
[NativeCppClassAttribute]
internal class _ARM64_FPSR_REG : ValueType {
}
[NativeCppClassAttribute]
internal enum _AUDIT_EVENT_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _BIN_TYPES : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class _cef_accelerated_paint_info_t : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class _cef_audio_parameters_t : ValueType {
}
[NativeCppClassAttribute]
internal class _cef_basetime_t : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class _cef_box_layout_settings_t : ValueType {
}
[NativeCppClassAttribute]
internal class _cef_browser_settings_t : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class _cef_composition_underline_t : ValueType {
}
[NativeCppClassAttribute]
internal class _cef_cookie_t : ValueType {
}
[NativeCppClassAttribute]
internal class _cef_cursor_info_t : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class _cef_draggable_region_t : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class _cef_insets_t : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class _cef_key_event_t : ValueType {
}
[NativeCppClassAttribute]
internal class _cef_linux_window_properties_t : ValueType {
}
[NativeCppClassAttribute]
internal class _cef_main_args_t : ValueType {
}
[NativeCppClassAttribute]
internal class _cef_media_sink_device_info_t : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class _cef_mouse_event_t : ValueType {
}
[NativeCppClassAttribute]
internal class _cef_pdf_print_settings_t : ValueType {
}
[NativeCppClassAttribute]
internal class _cef_point_t : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class _cef_popup_features_t : ValueType {
}
[NativeCppClassAttribute]
internal class _cef_range_t : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class _cef_rect_t : ValueType {
}
[NativeCppClassAttribute]
internal class _cef_request_context_settings_t : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class _cef_screen_info_t : ValueType {
}
[NativeCppClassAttribute]
internal class _cef_settings_t : ValueType {
}
[NativeCppClassAttribute]
internal class _cef_size_t : ValueType {
}
[NativeCppClassAttribute]
internal class _cef_string_utf16_t : ValueType {
}
[NativeCppClassAttribute]
internal class _cef_string_utf8_t : ValueType {
}
[NativeCppClassAttribute]
internal class _cef_string_wide_t : ValueType {
}
[NativeCppClassAttribute]
internal class _cef_task_info_t : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class _cef_time_t : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class _cef_touch_event_t : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class _cef_touch_handle_state_t : ValueType {
}
[NativeCppClassAttribute]
internal class _cef_urlparts_t : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class _cef_window_info_t : ValueType {
}
[NativeCppClassAttribute]
internal enum _CHANGER_DEVICE_PROBLEM_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _CLRAssemblyIdentityFlags : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _CM_ERROR_CONTROL_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _CM_SERVICE_LOAD_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _CM_SERVICE_NODE_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class _Collvec : ValueType {
}
[NativeCppClassAttribute]
internal enum _COMPUTER_NAME_FORMAT : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _COPYFILE2_COPY_PHASE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _COPYFILE2_MESSAGE_ACTION : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _COPYFILE2_MESSAGE_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _CPU_SET_INFORMATION_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _crt_app_type : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _crt_argv_mode : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _crt_exit_cleanup_mode : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _crt_exit_return_mode : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _CSV_CONTROL_OP : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _CSVFS_DISK_CONNECTIVITY : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class _Ctypevec : ValueType {
}
[NativeCppClassAttribute]
internal class _CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class _Cvtvec : ValueType {
}
[NativeCppClassAttribute]
internal enum _DEP_SYSTEM_POLICY_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _DETECTION_TYPE : Enum {
    public int value__;
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class _DEVICE_DATA_SET_RANGE : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class _DEVICE_DSM_DEFINITION : ValueType {
}
[NativeCppClassAttribute]
internal enum _DEVICE_INTERNAL_STATUS_DATA_REQUEST_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _DEVICE_INTERNAL_STATUS_DATA_SET : Enum {
    public int value__;
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class _DEVICE_MANAGE_DATA_SET_ATTRIBUTES : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT : ValueType {
}
[NativeCppClassAttribute]
internal enum _DEVICE_POWER_STATE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _DEVICEDUMP_COLLECTION_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _DISPLAYCONFIG_COLOR_ENCODING : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _DUPLICATE_EXTENTS_STATE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _ELEMENT_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _ENLISTMENT_INFORMATION_CLASS : Enum {
    public int value__;
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class _EVENT_DATA_DESCRIPTOR : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class _EVENT_DESCRIPTOR : ValueType {
}
[NativeCppClassAttribute]
internal enum _EVENT_INFO_CLASS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _EXCEPTION_DISPOSITION : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class _EXCEPTION_POINTERS : ValueType {
}
[NativeCppClassAttribute]
internal enum _FILE_ID_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _FILE_INFO_BY_HANDLE_CLASS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _FILE_STORAGE_TIER_CLASS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _FILE_STORAGE_TIER_MEDIA_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _FINDEX_INFO_LEVELS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _FINDEX_SEARCH_OPS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _FIRMWARE_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _FS_BPIO_INFLAGS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _FS_BPIO_OPERATIONS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _FS_BPIO_OUTFLAGS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _GET_FILEEX_INFO_LEVELS : Enum {
    public int value__;
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class _GUID : ValueType {
}
[NativeCppClassAttribute]
internal enum _HARDWARE_COUNTER_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _HEAP_INFORMATION_CLASS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _HIBERFILE_BUCKET_SIZE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _HostApplicationPolicy : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _hostBiningPolicyModifyFlags : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _IDL_CS_CONVERT : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _IMAGE_POLICY_ENTRY_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _IMAGE_POLICY_ID : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class _iobuf : ValueType {
}
[NativeCppClassAttribute]
internal enum _JOBOBJECT_RATE_CONTROL_TOLERANCE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _JOBOBJECTINFOCLASS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _KTMOBJECT_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class _ldiv_t : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class _lldiv_t : ValueType {
}
[NativeCppClassAttribute]
internal enum _LMR_QUERY_INFO_CLASS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _LOGICAL_PROCESSOR_RELATIONSHIP : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _LRPC_SYSTEM_HANDLE_MARSHAL_DIRECTION : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _MACHINE_ATTRIBUTES : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _MANDATORY_LEVEL : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class _Mbstatet : ValueType {
}
[NativeCppClassAttribute]
internal enum _MEDIA_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _MEM_DEDICATED_ATTRIBUTE_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _MEMORY_RESOURCE_NOTIFICATION_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _MONITOR_DISPLAY_STATE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _NORM_FORM : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _OS_DEPLOYEMENT_STATE_VALUES : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _PARTITION_STYLE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _POWER_MONITOR_REQUEST_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _POWER_PLATFORM_ROLE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _POWER_REQUEST_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _PRINTER_OPTION_FLAGS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _PRIORITY_HINT : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _PROC_THREAD_ATTRIBUTE_NUM : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _PROCESS_INFORMATION_CLASS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _PROCESS_MEMORY_EXHAUSTION_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _PROCESS_MITIGATION_POLICY : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _PROCESSOR_CACHE_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _QUERY_FILE_LAYOUT_FILTER_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _QUEUE_USER_APC_FLAGS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _READ_DIRECTORY_NOTIFY_INFORMATION_CLASS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _REFS_SMR_VOLUME_GC_ACTION : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _REFS_SMR_VOLUME_GC_METHOD : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _REFS_SMR_VOLUME_GC_STATE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _RESOURCEMANAGER_INFORMATION_CLASS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _RPC_ASYNC_EVENT : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _RPC_HTTP_REDIRECTOR_STAGE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _RPC_NOTIFICATION_TYPES : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _RPC_NOTIFICATIONS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _RTL_SYSTEM_GLOBAL_DATA_ID : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _RTL_UMS_SCHEDULER_REASON : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _RTL_UMS_THREAD_INFO_CLASS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class _s__CatchableType : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class _s__RTTIBaseClassDescriptor : ValueType {
}
[NativeCppClassAttribute]
internal class _s__RTTIClassHierarchyDescriptor : ValueType {
}
[NativeCppClassAttribute]
internal class _s__RTTICompleteObjectLocator : ValueType {
}
[NativeCppClassAttribute]
internal class _s__ThrowInfo : ValueType {
}
[NativeCppClassAttribute]
internal enum _SC_ACTION_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SC_ENUM_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SC_EVENT_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SC_STATUS_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SCM_BUS_FIRMWARE_ACTIVATION_STATE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SCM_BUS_PROPERTY_ID : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SCM_BUS_QUERY_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SCM_BUS_SET_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SCM_PD_FIRMWARE_ACTIVATION_STATE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SCM_PD_HEALTH_STATUS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SCM_PD_LAST_FW_ACTIVATION_STATUS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SCM_PD_MEDIA_REINITIALIZATION_STATUS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SCM_PD_OPERATIONAL_STATUS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SCM_PD_OPERATIONAL_STATUS_REASON : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SCM_PD_PROPERTY_ID : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SCM_PD_QUERY_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SCM_PD_SET_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SCM_REGION_FLAG : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SE_IMAGE_SIGNATURE_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SE_LEARNING_MODE_DATA_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class _SECURITY_ATTRIBUTES : ValueType {
}
[NativeCppClassAttribute]
internal enum _SECURITY_IMPERSONATION_LEVEL : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SERVERSILO_STATE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SharedVirtualDiskHandleState : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SharedVirtualDiskSupportType : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SHRINK_VOLUME_REQUEST_TYPES : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SID_NAME_USE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class _stat64i32 : ValueType {
}
[NativeCppClassAttribute]
internal enum _STORAGE_ASSOCIATION_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_ATTRIBUTE_MGMT_ACTION : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_BUS_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_COMPONENT_HEALTH_STATUS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_COUNTER_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_CRYPTO_ALGORITHM_ID : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_CRYPTO_KEY_SIZE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_DEVICE_FORM_FACTOR : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_DEVICE_POWER_CAP_UNITS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_DIAGNOSTIC_LEVEL : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_DIAGNOSTIC_TARGET_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_DISK_HEALTH_STATUS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_DISK_OPERATIONAL_STATUS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_ID_NAA_FORMAT : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_IDENTIFIER_CODE_SET : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_IDENTIFIER_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_MEDIA_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_OPERATIONAL_STATUS_REASON : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_PORT_CODE_SET : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_POWERUP_REASON_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_PROPERTY_ID : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_PROTOCOL_ATA_DATA_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_PROTOCOL_NVME_DATA_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_PROTOCOL_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_PROTOCOL_UFS_DATA_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_QUERY_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_RESERVE_ID : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_RPMB_COMMAND_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_RPMB_FRAME_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_SANITIZE_METHOD : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_SET_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_TIER_CLASS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_TIER_MEDIA_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_ZONE_CONDITION : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_ZONE_TYPES : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_ZONED_DEVICE_TYPES : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STORAGE_ZONES_ATTRIBUTES : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _STREAM_INFO_LEVELS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _system_handle_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _SYSTEM_POWER_STATE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _tagINTERNETFEATURELIST : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _tagOIBDG_FLAGS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _tagPARSEACTION : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _tagPI_FLAGS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _tagPSUACTION : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _tagQUERYOPTION : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _TAPE_DRIVE_PROBLEM_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _THDTYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _THREAD_INFORMATION_CLASS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class _timespec64 : ValueType {
}
[NativeCppClassAttribute]
internal enum _TOKEN_ELEVATION_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _TOKEN_INFORMATION_CLASS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _TOKEN_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class _TP_CALLBACK_ENVIRON_V3 : ValueType {
}
[NativeCppClassAttribute]
internal enum _TP_CALLBACK_PRIORITY : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _TRANSACTION_INFORMATION_CLASS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _TRANSACTION_OUTCOME : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _TRANSACTION_STATE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _TRANSACTIONMANAGER_INFORMATION_CLASS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _URLZONEREG : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _USER_ACTIVITY_PRESENCE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _USER_MARSHAL_CB_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _VIRTUAL_STORAGE_BEHAVIOR_CODE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _WRITE_CACHE_CHANGE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _WRITE_CACHE_ENABLE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _WRITE_CACHE_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum _WRITE_THROUGH : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class ?A0x04cf1074.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0x05f6a86b.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0x0ccaec30.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0x132e52f9.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0x2753dede.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0x2755e490.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0x2b154904.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0x2ec6277e.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0x6664aca7.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0x674cc114.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0x7eb2d2ff.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0x7f1e7d62.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0x816a1f35.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0x8449c9b1.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0x8a46f9c6.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0x92df7cd6.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0x939f73c7.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0x98947fd2.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0x98e4ed7a.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0x9a252db5.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0x9c669bbe.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0xa32e286f.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0xa97034ba.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0xaa0ad302.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0xb1769e14.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0xc8a16fd1.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0xe77b36a1.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0xf2edcac0.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0xf5a9ca9c.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class ?A0xff01732d.__clr_placement_new_t : ValueType {
}
[NativeCppClassAttribute]
internal class $_s__CatchableTypeArray$_extraBytes_12 : ValueType {
}
[NativeCppClassAttribute]
internal class $_s__CatchableTypeArray$_extraBytes_16 : ValueType {
}
[NativeCppClassAttribute]
internal class $_s__CatchableTypeArray$_extraBytes_20 : ValueType {
}
[NativeCppClassAttribute]
internal class $_s__CatchableTypeArray$_extraBytes_4 : ValueType {
}
[NativeCppClassAttribute]
internal class $_s__CatchableTypeArray$_extraBytes_8 : ValueType {
}
[NativeCppClassAttribute]
internal class $_s__RTTIBaseClassArray$_extraBytes_12 : ValueType {
}
[NativeCppClassAttribute]
internal class $_s__RTTIBaseClassArray$_extraBytes_16 : ValueType {
}
[NativeCppClassAttribute]
internal class $_s__RTTIBaseClassArray$_extraBytes_20 : ValueType {
}
[NativeCppClassAttribute]
internal class $_s__RTTIBaseClassArray$_extraBytes_24 : ValueType {
}
[NativeCppClassAttribute]
internal class $_s__RTTIBaseClassArray$_extraBytes_36 : ValueType {
}
[NativeCppClassAttribute]
internal class $_s__RTTIBaseClassArray$_extraBytes_4 : ValueType {
}
[NativeCppClassAttribute]
internal class $_s__RTTIBaseClassArray$_extraBytes_40 : ValueType {
}
[NativeCppClassAttribute]
internal class $_s__RTTIBaseClassArray$_extraBytes_8 : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class $_TypeDescriptor$_extraBytes_13 : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class $_TypeDescriptor$_extraBytes_19 : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class $_TypeDescriptor$_extraBytes_20 : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class $_TypeDescriptor$_extraBytes_21 : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class $_TypeDescriptor$_extraBytes_22 : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class $_TypeDescriptor$_extraBytes_23 : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class $_TypeDescriptor$_extraBytes_24 : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class $_TypeDescriptor$_extraBytes_25 : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class $_TypeDescriptor$_extraBytes_26 : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class $_TypeDescriptor$_extraBytes_27 : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class $_TypeDescriptor$_extraBytes_28 : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class $_TypeDescriptor$_extraBytes_30 : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class $_TypeDescriptor$_extraBytes_31 : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class $_TypeDescriptor$_extraBytes_33 : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class $_TypeDescriptor$_extraBytes_34 : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class $_TypeDescriptor$_extraBytes_35 : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class $_TypeDescriptor$_extraBytes_36 : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class $_TypeDescriptor$_extraBytes_45 : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class $_TypeDescriptor$_extraBytes_46 : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class $_TypeDescriptor$_extraBytes_47 : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class $_TypeDescriptor$_extraBytes_48 : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class $_TypeDescriptor$_extraBytes_50 : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class $_TypeDescriptor$_extraBytes_52 : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class $_TypeDescriptor$_extraBytes_53 : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class $_TypeDescriptor$_extraBytes_54 : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class $_TypeDescriptor$_extraBytes_56 : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class $_TypeDescriptor$_extraBytes_57 : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class $_TypeDescriptor$_extraBytes_58 : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class $_TypeDescriptor$_extraBytes_59 : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class $_TypeDescriptor$_extraBytes_60 : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class $_TypeDescriptor$_extraBytes_62 : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class $_TypeDescriptor$_extraBytes_63 : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class $_TypeDescriptor$_extraBytes_64 : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class $_TypeDescriptor$_extraBytes_68 : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class $_TypeDescriptor$_extraBytes_69 : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class $_TypeDescriptor$_extraBytes_72 : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class $_TypeDescriptor$_extraBytes_73 : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class $_TypeDescriptor$_extraBytes_74 : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class $_TypeDescriptor$_extraBytes_75 : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class $_TypeDescriptor$_extraBytes_77 : ValueType {
}
[NativeCppClassAttribute]
internal enum AgileReferenceOptions : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum ARM64_FNPDATA_CR : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum ARM64_FNPDATA_FLAGS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum ASSOCCLASS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class base.AtomicRefCount : ValueType {
}
[NativeCppClassAttribute]
internal class base.cef_internal.AutoLock : ValueType {
}
[NativeCppClassAttribute]
internal class base.cef_internal.AutoUnlock : ValueType {
}
[NativeCppClassAttribute]
internal class base.cef_internal.Lock : ValueType {
}
[NativeCppClassAttribute]
internal class base.cef_internal.LockImpl : ValueType {
}
[NativeCppClassAttribute]
internal class base.cef_internal.ThreadCheckerDoNothing : ValueType {
}
[NativeCppClassAttribute]
internal enum base.cef_subtle.AdoptRefTag : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class base.cef_subtle.RefCountedBase : ValueType {
}
[NativeCppClassAttribute]
internal class base.cef_subtle.RefCountedThreadSafeBase : ValueType {
}
[NativeCppClassAttribute]
internal class base.cef_subtle.ScopedAllowCrossThreadRefCountAccess : ValueType {
}
[NativeCppClassAttribute]
internal enum base.cef_subtle.StartRefCountFromOneTag : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum base.cef_subtle.StartRefCountFromZeroTag : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class base.PlatformThreadRef : ValueType {
}
[NativeCppClassAttribute]
internal enum cef_chrome_page_action_icon_type_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum cef_chrome_toolbar_button_type_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum cef_cursor_type_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum cef_drag_operations_mask_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum cef_errorcode_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum cef_event_flags_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum cef_file_dialog_mode_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum cef_focus_source_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum cef_horizontal_alignment_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum cef_jsdialog_type_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum cef_log_severity_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum cef_paint_element_type_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum cef_permission_request_result_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum cef_preferences_type_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum cef_process_id_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum cef_quick_menu_edit_state_flags_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum cef_return_value_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum cef_termination_status_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum cef_text_input_mode_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum cef_transition_type_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum cef_urlrequest_status_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum cef_v8_propertyattribute_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum cef_value_type_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum cef_window_open_disposition_t : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class cef.logging.LogMessage : ValueType {
}
[NativeCppClassAttribute]
internal class cef.logging.LogMessageVoidify : ValueType {
}
[NativeCppClassAttribute]
internal class cef.logging.Win32ErrorLogMessage : ValueType {
}
[NativeCppClassAttribute]
internal class CefAcceleratedPaintInfo : ValueType {
}
[NativeCppClassAttribute]
internal static class CefAccessibilityHandler : ValueType {
}
[NativeCppClassAttribute]
internal static class CefApp : ValueType {
}
[NativeCppClassAttribute]
internal static class CefAudioHandler : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class CefAudioParameters : ValueType {
}
[NativeCppClassAttribute]
internal static class CefAuthCallback : ValueType {
}
[NativeCppClassAttribute]
internal static class CefBaseRefCounted : ValueType {
}
[NativeCppClassAttribute]
internal class CefBaseScoped : ValueType {
}
[NativeCppClassAttribute]
internal class CefBaseTime : ValueType {
}
[NativeCppClassAttribute]
internal static class CefBeforeDownloadCallback : ValueType {
}
[NativeCppClassAttribute]
internal static class CefBinaryValue : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class CefBoxLayoutSettings : ValueType {
}
[NativeCppClassAttribute]
internal static class CefBrowser : ValueType {
}
[NativeCppClassAttribute]
internal static class CefBrowserProcessHandler : ValueType {
}
[NativeCppClassAttribute]
internal static class CefCallback : ValueType {
}
[NativeCppClassAttribute]
internal static class CefClient : ValueType {
}
[NativeCppClassAttribute]
internal static class CefCommandHandler : ValueType {
}
[NativeCppClassAttribute]
internal static class CefCommandLine : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class CefCompositionUnderline : ValueType {
}
[NativeCppClassAttribute]
internal static class CefContextMenuHandler : ValueType {
}
[NativeCppClassAttribute]
internal static class CefContextMenuParams : ValueType {
}
[NativeCppClassAttribute]
internal static class CefCookieAccessFilter : ValueType {
}
[NativeCppClassAttribute]
internal class CefCursorInfo : ValueType {
}
[NativeCppClassAttribute]
internal static class CefDevToolsMessageObserver : ValueType {
}
[NativeCppClassAttribute]
internal static class CefDialogHandler : ValueType {
}
[NativeCppClassAttribute]
internal static class CefDictionaryValue : ValueType {
}
[NativeCppClassAttribute]
internal static class CefDisplayHandler : ValueType {
}
[NativeCppClassAttribute]
internal static class CefDOMNode : ValueType {
}
[NativeCppClassAttribute]
internal static class CefDownloadHandler : ValueType {
}
[NativeCppClassAttribute]
internal static class CefDownloadItem : ValueType {
}
[NativeCppClassAttribute]
internal static class CefDownloadItemCallback : ValueType {
}
[NativeCppClassAttribute]
internal static class CefDragData : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class CefDraggableRegion : ValueType {
}
[NativeCppClassAttribute]
internal static class CefDragHandler : ValueType {
}
[NativeCppClassAttribute]
internal static class CefFileDialogCallback : ValueType {
}
[NativeCppClassAttribute]
internal static class CefFindHandler : ValueType {
}
[NativeCppClassAttribute]
internal static class CefFocusHandler : ValueType {
}
[NativeCppClassAttribute]
internal static class CefFrame : ValueType {
}
[NativeCppClassAttribute]
internal static class CefFrameHandler : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class CefInsets : ValueType {
}
[NativeCppClassAttribute]
internal static class CefJSDialogCallback : ValueType {
}
[NativeCppClassAttribute]
internal static class CefJSDialogHandler : ValueType {
}
[NativeCppClassAttribute]
internal static class CefKeyboardHandler : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class CefKeyEvent : ValueType {
}
[NativeCppClassAttribute]
internal static class CefLifeSpanHandler : ValueType {
}
[NativeCppClassAttribute]
internal static class CefListValue : ValueType {
}
[NativeCppClassAttribute]
internal static class CefLoadHandler : ValueType {
}
[NativeCppClassAttribute]
internal class CefMainArgs : ValueType {
}
[NativeCppClassAttribute]
internal static class CefMediaAccessCallback : ValueType {
}
[NativeCppClassAttribute]
internal static class CefMenuModel : ValueType {
}
[NativeCppClassAttribute]
internal static class CefMenuModelDelegate : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class CefMouseEvent : ValueType {
}
[NativeCppClassAttribute]
internal static class CefPermissionHandler : ValueType {
}
[NativeCppClassAttribute]
internal static class CefPermissionPromptCallback : ValueType {
}
[NativeCppClassAttribute]
internal class CefPoint : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class CefPopupFeatures : ValueType {
}
[NativeCppClassAttribute]
internal static class CefPreferenceRegistrar : ValueType {
}
[NativeCppClassAttribute]
internal static class CefPrintHandler : ValueType {
}
[NativeCppClassAttribute]
internal static class CefProcessMessage : ValueType {
}
[NativeCppClassAttribute]
internal class CefRange : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class CefRect : ValueType {
}
[NativeCppClassAttribute]
internal class CefRefCount : ValueType {
}
[NativeCppClassAttribute]
internal class CefRefCountManaged : ValueType {
}
[NativeCppClassAttribute]
internal static class CefRenderHandler : ValueType {
}
[NativeCppClassAttribute]
internal static class CefRenderProcessHandler : ValueType {
}
[NativeCppClassAttribute]
internal static class CefRequest : ValueType {
}
[NativeCppClassAttribute]
internal static class CefRequestContext : ValueType {
}
[NativeCppClassAttribute]
internal static class CefRequestContextHandler : ValueType {
}
[NativeCppClassAttribute]
internal static class CefRequestHandler : ValueType {
}
[NativeCppClassAttribute]
internal static class CefResourceBundleHandler : ValueType {
}
[NativeCppClassAttribute]
internal static class CefResourceHandler : ValueType {
}
[NativeCppClassAttribute]
internal static class CefResourceReadCallback : ValueType {
}
[NativeCppClassAttribute]
internal static class CefResourceRequestHandler : ValueType {
}
[NativeCppClassAttribute]
internal static class CefResourceSkipCallback : ValueType {
}
[NativeCppClassAttribute]
internal static class CefResponse : ValueType {
}
[NativeCppClassAttribute]
internal static class CefResponseFilter : ValueType {
}
[NativeCppClassAttribute]
internal static class CefRunContextMenuCallback : ValueType {
}
[NativeCppClassAttribute]
internal static class CefRunQuickMenuCallback : ValueType {
}
[NativeCppClassAttribute]
internal static class CefSchemeRegistrar : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class CefScreenInfo : ValueType {
}
[NativeCppClassAttribute]
internal static class CefSelectClientCertificateCallback : ValueType {
}
internal class CefSharp.BrowserSubprocess.Async.JavascriptAsyncMethodCallback : object {
    private MCefRefPtr<CefV8Context> modreq(System.Runtime.CompilerServices.IsByValue) _context;
    private MCefRefPtr<CefV8Value> modreq(System.Runtime.CompilerServices.IsByValue) _resolve;
    private MCefRefPtr<CefV8Value> modreq(System.Runtime.CompilerServices.IsByValue) _reject;
    public JavascriptAsyncMethodCallback(scoped_refptr<CefV8Context> modreq(System.Runtime.CompilerServices.IsCopyConstructed)* context, scoped_refptr<CefV8Value> modreq(System.Runtime.CompilerServices.IsCopyConstructed)* resolve, scoped_refptr<CefV8Value> modreq(System.Runtime.CompilerServices.IsCopyConstructed)* reject);
    private void !JavascriptAsyncMethodCallback();
    private void ~JavascriptAsyncMethodCallback();
    public void Success(scoped_refptr<CefV8Value> modopt(System.Runtime.CompilerServices.IsConst)* modopt(System.Runtime.CompilerServices.IsImplicitlyDereferenced) result);
    public void Fail(CefStringBase<CefStringTraitsUTF16> modopt(System.Runtime.CompilerServices.IsConst)* modopt(System.Runtime.CompilerServices.IsImplicitlyDereferenced) exception);
    [HandleProcessCorruptedStateExceptionsAttribute]
protected virtual void Dispose(bool A_0);
    public sealed virtual void Dispose();
    protected virtual void Finalize();
}
[NativeCppClassAttribute]
internal class CefSharp.BrowserSubprocess.Async.JavascriptAsyncMethodHandler : ValueType {
}
internal class CefSharp.BrowserSubprocess.Async.JavascriptAsyncMethodWrapper : object {
    private MCefRefPtr<CefSharp::BrowserSubprocess::Async::JavascriptAsyncMethodHandler> modreq(System.Runtime.CompilerServices.IsByValue) _javascriptMethodHandler;
    public JavascriptAsyncMethodWrapper(long ownerId, JavascriptCallbackRegistry callbackRegistry, Func`2<JavascriptAsyncMethodCallback, long> methodCallbackSave);
    public void Bind(JavascriptMethod method, scoped_refptr<CefV8Value> modopt(System.Runtime.CompilerServices.IsConst)* modopt(System.Runtime.CompilerServices.IsImplicitlyDereferenced) value);
    public void ~JavascriptAsyncMethodWrapper();
    [HandleProcessCorruptedStateExceptionsAttribute]
protected virtual void Dispose(bool A_0);
    public sealed virtual void Dispose();
}
internal class CefSharp.BrowserSubprocess.Async.JavascriptAsyncObjectWrapper : object {
    private List`1<JavascriptAsyncMethodWrapper> _wrappedMethods;
    private Func`2<JavascriptAsyncMethodCallback, long> _methodCallbackSave;
    private JavascriptCallbackRegistry _callbackRegistry;
    public JavascriptAsyncObjectWrapper(JavascriptCallbackRegistry callbackRegistry, Func`2<JavascriptAsyncMethodCallback, long> saveMethod);
    private void ~JavascriptAsyncObjectWrapper();
    public void Bind(JavascriptObject object, scoped_refptr<CefV8Value> modopt(System.Runtime.CompilerServices.IsConst)* modopt(System.Runtime.CompilerServices.IsImplicitlyDereferenced) value);
    protected virtual void Dispose(bool A_0);
    public sealed virtual void Dispose();
}
[NativeCppClassAttribute]
internal class CefSharp.BrowserSubprocess.BindObjectAsyncHandler : ValueType {
}
internal class CefSharp.BrowserSubprocess.Browser : object {
    private MCefRefPtr<CefBrowser> modreq(System.Runtime.CompilerServices.IsByValue) _browser;
    private bool _disposed;
    public bool IsDisposed { get; }
    public IFrame FocusedFrame { get; }
    public IFrame MainFrame { get; }
    public bool HasDocument { get; }
    public bool IsPopup { get; }
    public int Identifier { get; }
    public bool IsLoading { get; }
    public bool CanGoForward { get; }
    public bool CanGoBack { get; }
    public bool IsValid { get; }
    internal Browser(scoped_refptr<CefBrowser>* modopt(System.Runtime.CompilerServices.IsImplicitlyDereferenced) browser);
    private void !Browser();
    private void ~Browser();
    public virtual bool get_IsValid();
    public virtual IBrowserHost GetHost();
    public virtual bool get_CanGoBack();
    public virtual void GoBack();
    public virtual bool get_CanGoForward();
    public virtual void GoForward();
    public virtual bool get_IsLoading();
    public virtual void CloseBrowser(bool forceClose);
    public virtual void Reload(bool ignoreCache);
    public virtual void StopLoad();
    public virtual int get_Identifier();
    public virtual bool IsSame(IBrowser that);
    public virtual bool get_IsPopup();
    public virtual bool get_HasDocument();
    public virtual IFrame get_MainFrame();
    public virtual IFrame get_FocusedFrame();
    public virtual IFrame GetFrameByIdentifier(string identifier);
    public virtual IFrame GetFrameByName(string name);
    public virtual int GetFrameCount();
    public virtual List`1<string> GetFrameIdentifiers();
    public virtual List`1<string> GetFrameNames();
    public virtual IReadOnlyCollection`1<IFrame> GetAllFrames();
    public virtual bool get_IsDisposed();
    [HandleProcessCorruptedStateExceptionsAttribute]
protected virtual void Dispose(bool A_0);
    public sealed virtual void Dispose();
    protected virtual void Finalize();
}
public class CefSharp.BrowserSubprocess.BrowserSubprocessExecutable : object {
    public static int MainNetCore(IntPtr arg, int argLength);
    public int Main(IEnumerable`1<string> args, IRenderProcessHandler handler);
    public int Main(IEnumerable`1<string> args);
    protected virtual SubProcess GetSubprocess(IEnumerable`1<string> args, int parentProcessId, IRenderProcessHandler handler);
}
public class CefSharp.BrowserSubprocess.Cef : object {
    public static void RegisterExtension(string name, string javascriptCode);
}
[NativeCppClassAttribute]
internal class CefSharp.BrowserSubprocess.CefAppUnmanagedWrapper : ValueType {
}
public class CefSharp.BrowserSubprocess.CefBrowserWrapper : object {
    private MCefRefPtr<CefBrowser> modreq(System.Runtime.CompilerServices.IsByValue) _cefBrowser;
    private ConcurrentDictionary`2<string, JavascriptRootObjectWrapper> <backing_store>JavascriptRootObjectWrappers;
    private int <backing_store>BrowserId;
    private bool <backing_store>IsPopup;
    private ChannelFactory`1<IBrowserProcess> <backing_store>ChannelFactory;
    private IBrowserProcess <backing_store>BrowserProcess;
    public IBrowserProcess BrowserProcess { get; public set; }
    public ChannelFactory`1<IBrowserProcess> ChannelFactory { get; public set; }
    public bool IsPopup { get; public set; }
    public int BrowserId { get; public set; }
    internal ConcurrentDictionary`2<string, JavascriptRootObjectWrapper> JavascriptRootObjectWrappers { get; internal set; }
    public CefBrowserWrapper(scoped_refptr<CefBrowser> modreq(System.Runtime.CompilerServices.IsCopyConstructed)* cefBrowser);
    internal ConcurrentDictionary`2<string, JavascriptRootObjectWrapper> get_JavascriptRootObjectWrappers();
    internal void set_JavascriptRootObjectWrappers(ConcurrentDictionary`2<string, JavascriptRootObjectWrapper> __set_formal);
    private void !CefBrowserWrapper();
    private void ~CefBrowserWrapper();
    public int get_BrowserId();
    public void set_BrowserId(int __set_formal);
    public bool get_IsPopup();
    public void set_IsPopup(bool __set_formal);
    public ChannelFactory`1<IBrowserProcess> get_ChannelFactory();
    public void set_ChannelFactory(ChannelFactory`1<IBrowserProcess> __set_formal);
    public IBrowserProcess get_BrowserProcess();
    public void set_BrowserProcess(IBrowserProcess __set_formal);
    [HandleProcessCorruptedStateExceptionsAttribute]
protected virtual void Dispose(bool A_0);
    public sealed virtual void Dispose();
    protected virtual void Finalize();
}
internal class CefSharp.BrowserSubprocess.Frame : object {
    private MCefRefPtr<CefFrame> modreq(System.Runtime.CompilerServices.IsByValue) _frame;
    private IFrame _parentFrame;
    private IBrowser _owningBrowser;
    private object _syncRoot;
    private bool _disposed;
    public bool IsDisposed { get; }
    public IBrowser Browser { get; }
    public string Url { get; }
    public IFrame Parent { get; }
    public string Identifier { get; }
    public string Name { get; }
    public bool IsFocused { get; }
    public bool IsMain { get; }
    public bool IsValid { get; }
    internal Frame(scoped_refptr<CefFrame>* modopt(System.Runtime.CompilerServices.IsImplicitlyDereferenced) frame);
    private void !Frame();
    private void ~Frame();
    public virtual bool get_IsValid();
    public virtual void Undo();
    public virtual void Redo();
    public virtual void Cut();
    public virtual void Copy();
    public virtual void Paste();
    public virtual void Delete();
    public virtual void SelectAll();
    public virtual void ViewSource();
    public virtual Task`1<string> GetSourceAsync();
    public virtual void GetSource(IStringVisitor visitor);
    public virtual Task`1<string> GetTextAsync();
    public virtual void GetText(IStringVisitor visitor);
    public virtual void LoadRequest(IRequest request);
    public virtual void LoadUrl(string url);
    public virtual void ExecuteJavaScriptAsync(string code, string scriptUrl, int startLine);
    public virtual Task`1<JavascriptResponse> EvaluateScriptAsync(string script, string scriptUrl, int startLine, Nullable`1<TimeSpan> timeout, bool useImmediatelyInvokedFuncExpression);
    public virtual bool get_IsMain();
    public virtual bool get_IsFocused();
    public virtual string get_Name();
    public virtual string get_Identifier();
    public virtual IFrame get_Parent();
    public virtual string get_Url();
    public virtual IBrowser get_Browser();
    public virtual IRequest CreateRequest(bool initializePostData);
    public virtual IUrlRequest CreateUrlRequest(IRequest request, IUrlRequestClient client);
    public virtual bool get_IsDisposed();
    [HandleProcessCorruptedStateExceptionsAttribute]
protected virtual void Dispose(bool A_0);
    public sealed virtual void Dispose();
    protected virtual void Finalize();
}
internal class CefSharp.BrowserSubprocess.JavascriptCallbackRegistry : object {
    private static long _lastId;
    private int _browserId;
    private ConcurrentDictionary`2<long, JavascriptCallbackWrapper> _callbacks;
    public JavascriptCallbackRegistry(int browserId);
    private static JavascriptCallbackRegistry();
    internal JavascriptCallbackWrapper FindWrapper(long id);
    private void ~JavascriptCallbackRegistry();
    public JavascriptCallback Register(scoped_refptr<CefV8Context> modopt(System.Runtime.CompilerServices.IsConst)* modopt(System.Runtime.CompilerServices.IsImplicitlyDereferenced) context, scoped_refptr<CefV8Value> modopt(System.Runtime.CompilerServices.IsConst)* modopt(System.Runtime.CompilerServices.IsImplicitlyDereferenced) value);
    public void Deregister(long id);
    protected virtual void Dispose(bool A_0);
    public sealed virtual void Dispose();
}
internal class CefSharp.BrowserSubprocess.JavascriptCallbackWrapper : object {
    private MCefRefPtr<CefV8Value> modreq(System.Runtime.CompilerServices.IsByValue) _value;
    private MCefRefPtr<CefV8Context> modreq(System.Runtime.CompilerServices.IsByValue) _context;
    public JavascriptCallbackWrapper(scoped_refptr<CefV8Value> modreq(System.Runtime.CompilerServices.IsCopyConstructed)* value, scoped_refptr<CefV8Context> modreq(System.Runtime.CompilerServices.IsCopyConstructed)* context);
    internal scoped_refptr<CefV8Value>* modreq(System.Runtime.CompilerServices.IsUdtReturn) GetValue(scoped_refptr<CefV8Value>* );
    internal scoped_refptr<CefV8Context>* modreq(System.Runtime.CompilerServices.IsUdtReturn) GetContext(scoped_refptr<CefV8Context>* );
    private void !JavascriptCallbackWrapper();
    private void ~JavascriptCallbackWrapper();
    [HandleProcessCorruptedStateExceptionsAttribute]
protected virtual void Dispose(bool A_0);
    public sealed virtual void Dispose();
    protected virtual void Finalize();
}
[NativeCppClassAttribute]
internal class CefSharp.BrowserSubprocess.JavascriptMethodHandler : ValueType {
}
internal class CefSharp.BrowserSubprocess.JavascriptMethodWrapper : object {
    private MCefRefPtr<CefSharp::BrowserSubprocess::JavascriptMethodHandler> modreq(System.Runtime.CompilerServices.IsByValue) _javascriptMethodHandler;
    private long _ownerId;
    private string _javascriptMethodName;
    private IBrowserProcess _browserProcess;
    public JavascriptMethodWrapper(long ownerId, IBrowserProcess browserProcess, JavascriptCallbackRegistry callbackRegistry);
    private void !JavascriptMethodWrapper();
    private void ~JavascriptMethodWrapper();
    public void Bind(JavascriptMethod javascriptMethod, scoped_refptr<CefV8Value> modopt(System.Runtime.CompilerServices.IsConst)* modopt(System.Runtime.CompilerServices.IsImplicitlyDereferenced) v8Value);
    public BrowserProcessResponse Execute(Object[] parameters);
    [HandleProcessCorruptedStateExceptionsAttribute]
protected virtual void Dispose(bool A_0);
    public sealed virtual void Dispose();
    protected virtual void Finalize();
}
internal class CefSharp.BrowserSubprocess.JavascriptObjectWrapper : object {
    private List`1<JavascriptMethodWrapper> _wrappedMethods;
    private List`1<JavascriptPropertyWrapper> _wrappedProperties;
    private IBrowserProcess _browserProcess;
    private MCefRefPtr<CefSharp::BrowserSubprocess::JavascriptPropertyHandler> modreq(System.Runtime.CompilerServices.IsByValue) _jsPropertyHandler;
    private long _objectId;
    public JavascriptObjectWrapper(IBrowserProcess browserProcess);
    private void !JavascriptObjectWrapper();
    private void ~JavascriptObjectWrapper();
    public void Bind(JavascriptObject object, scoped_refptr<CefV8Value> modopt(System.Runtime.CompilerServices.IsConst)* modopt(System.Runtime.CompilerServices.IsImplicitlyDereferenced) v8Value, JavascriptCallbackRegistry callbackRegistry);
    public BrowserProcessResponse GetProperty(string memberName);
    public BrowserProcessResponse SetProperty(string memberName, object value);
    [HandleProcessCorruptedStateExceptionsAttribute]
protected virtual void Dispose(bool A_0);
    public sealed virtual void Dispose();
    protected virtual void Finalize();
}
[NativeCppClassAttribute]
internal class CefSharp.BrowserSubprocess.JavascriptPostMessageHandler : ValueType {
}
[NativeCppClassAttribute]
internal class CefSharp.BrowserSubprocess.JavascriptPromiseHandler : ValueType {
}
[NativeCppClassAttribute]
internal class CefSharp.BrowserSubprocess.JavascriptPromiseResolverCatch : ValueType {
}
[NativeCppClassAttribute]
internal class CefSharp.BrowserSubprocess.JavascriptPromiseResolverThen : ValueType {
}
[NativeCppClassAttribute]
internal class CefSharp.BrowserSubprocess.JavascriptPropertyHandler : ValueType {
}
internal class CefSharp.BrowserSubprocess.JavascriptPropertyWrapper : object {
    private long _ownerId;
    private IBrowserProcess _browserProcess;
    private object _javascriptObjectWrapper;
    public JavascriptPropertyWrapper(long ownerId, IBrowserProcess browserProcess);
    private void ~JavascriptPropertyWrapper();
    public void Bind(JavascriptProperty javascriptProperty, scoped_refptr<CefV8Value> modopt(System.Runtime.CompilerServices.IsConst)* modopt(System.Runtime.CompilerServices.IsImplicitlyDereferenced) v8Value, JavascriptCallbackRegistry callbackRegistry);
    protected virtual void Dispose(bool A_0);
    public sealed virtual void Dispose();
}
internal class CefSharp.BrowserSubprocess.JavascriptRootObjectWrapper : object {
    private static long _lastCallback;
    private List`1<JavascriptObjectWrapper> _wrappedObjects;
    private List`1<JavascriptAsyncObjectWrapper> _wrappedAsyncObjects;
    private Dictionary`2<long, JavascriptAsyncMethodCallback> _methodCallbacks;
    private IBrowserProcess _browserProcess;
    private JavascriptCallbackRegistry _callbackRegistry;
    internal JavascriptCallbackRegistry CallbackRegistry { get; }
    public JavascriptRootObjectWrapper(int browserId, IBrowserProcess browserProcess);
    private static JavascriptRootObjectWrapper();
    private long SaveMethodCallback(JavascriptAsyncMethodCallback callback);
    internal JavascriptCallbackRegistry get_CallbackRegistry();
    private void ~JavascriptRootObjectWrapper();
    public bool TryGetAndRemoveMethodCallback(long id, JavascriptAsyncMethodCallback& callback);
    public void Bind(ICollection`1<JavascriptObject> objects, scoped_refptr<CefV8Value> modopt(System.Runtime.CompilerServices.IsConst)* modopt(System.Runtime.CompilerServices.IsImplicitlyDereferenced) v8Value);
    protected virtual void Dispose(bool A_0);
    public sealed virtual void Dispose();
}
[NativeCppClassAttribute]
internal class CefSharp.BrowserSubprocess.RegisterBoundObjectHandler : ValueType {
}
internal class CefSharp.BrowserSubprocess.RegisterBoundObjectRegistry : object {
    private static long _lastCallback;
    private Dictionary`2<long, JavascriptAsyncMethodCallback> _methodCallbacks;
    private static RegisterBoundObjectRegistry();
    private void ~RegisterBoundObjectRegistry();
    public long SaveMethodCallback(JavascriptAsyncMethodCallback callback);
    public bool TryGetAndRemoveMethodCallback(long id, JavascriptAsyncMethodCallback& callback);
    protected virtual void Dispose(bool A_0);
    public sealed virtual void Dispose();
}
public class CefSharp.BrowserSubprocess.SubProcess : object {
    private MCefRefPtr<CefSharp::BrowserSubprocess::CefAppUnmanagedWrapper> modreq(System.Runtime.CompilerServices.IsByValue) _cefApp;
    public SubProcess(IRenderProcessHandler handler, IEnumerable`1<string> args);
    private void !SubProcess();
    private void ~SubProcess();
    public int Run();
    public virtual void OnBrowserCreated(CefBrowserWrapper cefBrowserWrapper);
    public virtual void OnBrowserDestroyed(CefBrowserWrapper cefBrowserWrapper);
    public static int ExecuteProcess(IEnumerable`1<string> args);
    [HandleProcessCorruptedStateExceptionsAttribute]
protected virtual void Dispose(bool A_0);
    public sealed virtual void Dispose();
    protected virtual void Finalize();
}
[NativeCppClassAttribute]
[CLSCompliantAttribute("False")]
public class CefSharp.BrowserSubprocess.SubProcessApp : ValueType {
}
[NativeCppClassAttribute]
internal class CefSharp.BrowserSubprocess.TypeUtils : ValueType {
}
internal class CefSharp.BrowserSubprocess.V8Context : object {
    private MCefRefPtr<CefV8Context> modreq(System.Runtime.CompilerServices.IsByValue) _context;
    public V8Context(scoped_refptr<CefV8Context>* modopt(System.Runtime.CompilerServices.IsImplicitlyDereferenced) context);
    private void !V8Context();
    private void ~V8Context();
    public virtual bool Execute(string code, string scriptUrl, int startLine, V8Exception& exception);
    [HandleProcessCorruptedStateExceptionsAttribute]
protected virtual void Dispose(bool A_0);
    public sealed virtual void Dispose();
    protected virtual void Finalize();
}
public class CefSharp.BrowserSubprocess.WcfBrowserSubprocessExecutable : BrowserSubprocessExecutable {
    public static int MainSelfHost(String[] args);
    protected virtual SubProcess GetSubprocess(IEnumerable`1<string> args, int parentProcessId, IRenderProcessHandler handler);
}
public class CefSharp.BrowserSubprocess.WcfEnabledSubProcess : SubProcess {
    private Nullable`1<int> _parentBrowserId;
    private int _parentProcessId;
    public WcfEnabledSubProcess(int parentProcessId, IRenderProcessHandler handler, IEnumerable`1<string> args);
    public virtual void OnBrowserCreated(CefBrowserWrapper browser);
    public virtual void OnBrowserDestroyed(CefBrowserWrapper browser);
}
internal class CefSharp.Internals.MCefRefPtr<CefBrowser> : object {
    private CefBrowser* _ptr;
    public MCefRefPtr<CefBrowser>(scoped_refptr<CefBrowser> modopt(System.Runtime.CompilerServices.IsConst)* modopt(System.Runtime.CompilerServices.IsImplicitlyDereferenced) r);
    private void !MCefRefPtr<CefBrowser>();
    private void ~MCefRefPtr<CefBrowser>();
    public MCefRefPtr<CefBrowser> modreq(System.Runtime.CompilerServices.IsImplicitlyDereferenced) op_Assign(CefBrowser* p);
    public sealed virtual bool Equals(object obj);
    public sealed virtual int GetHashCode();
    [HandleProcessCorruptedStateExceptionsAttribute]
protected sealed virtual void Dispose(bool A_0);
    public sealed virtual void Dispose();
    protected sealed virtual void Finalize();
    public CefBrowser* get();
    public CefBrowser* op_MemberSelection();
}
internal class CefSharp.Internals.MCefRefPtr<CefFrame> : object {
    private CefFrame* _ptr;
    public MCefRefPtr<CefFrame>(scoped_refptr<CefFrame> modopt(System.Runtime.CompilerServices.IsConst)* modopt(System.Runtime.CompilerServices.IsImplicitlyDereferenced) r);
    private void !MCefRefPtr<CefFrame>();
    private void ~MCefRefPtr<CefFrame>();
    public MCefRefPtr<CefFrame> modreq(System.Runtime.CompilerServices.IsImplicitlyDereferenced) op_Assign(CefFrame* p);
    public sealed virtual bool Equals(object obj);
    public sealed virtual int GetHashCode();
    [HandleProcessCorruptedStateExceptionsAttribute]
protected sealed virtual void Dispose(bool A_0);
    public sealed virtual void Dispose();
    protected sealed virtual void Finalize();
    public CefFrame* op_MemberSelection();
}
internal class CefSharp.Internals.MCefRefPtr<CefSharp::BrowserSubprocess::Async::JavascriptAsyncMethodHandler> : object {
    private JavascriptAsyncMethodHandler* _ptr;
    public MCefRefPtr<CefSharp::BrowserSubprocess::Async::JavascriptAsyncMethodHandler>(JavascriptAsyncMethodHandler* p);
    private void !MCefRefPtr<CefSharp::BrowserSubprocess::Async::JavascriptAsyncMethodHandler>();
    private void ~MCefRefPtr<CefSharp::BrowserSubprocess::Async::JavascriptAsyncMethodHandler>();
    public sealed virtual bool Equals(object obj);
    public sealed virtual int GetHashCode();
    [HandleProcessCorruptedStateExceptionsAttribute]
protected sealed virtual void Dispose(bool A_0);
    public sealed virtual void Dispose();
    protected sealed virtual void Finalize();
    public JavascriptAsyncMethodHandler* get();
}
internal class CefSharp.Internals.MCefRefPtr<CefSharp::BrowserSubprocess::CefAppUnmanagedWrapper> : object {
    private CefAppUnmanagedWrapper* _ptr;
    private void !MCefRefPtr<CefSharp::BrowserSubprocess::CefAppUnmanagedWrapper>();
    private void ~MCefRefPtr<CefSharp::BrowserSubprocess::CefAppUnmanagedWrapper>();
    public CefAppUnmanagedWrapper* get();
    public MCefRefPtr<CefSharp::BrowserSubprocess::CefAppUnmanagedWrapper> modreq(System.Runtime.CompilerServices.IsImplicitlyDereferenced) op_Assign(CefAppUnmanagedWrapper* p);
    public sealed virtual bool Equals(object obj);
    public sealed virtual int GetHashCode();
    [HandleProcessCorruptedStateExceptionsAttribute]
protected sealed virtual void Dispose(bool A_0);
    public sealed virtual void Dispose();
    protected sealed virtual void Finalize();
}
internal class CefSharp.Internals.MCefRefPtr<CefSharp::BrowserSubprocess::JavascriptMethodHandler> : object {
    private JavascriptMethodHandler* _ptr;
    private void !MCefRefPtr<CefSharp::BrowserSubprocess::JavascriptMethodHandler>();
    private void ~MCefRefPtr<CefSharp::BrowserSubprocess::JavascriptMethodHandler>();
    public MCefRefPtr<CefSharp::BrowserSubprocess::JavascriptMethodHandler> modreq(System.Runtime.CompilerServices.IsImplicitlyDereferenced) op_Assign(JavascriptMethodHandler* p);
    public sealed virtual bool Equals(object obj);
    public sealed virtual int GetHashCode();
    [HandleProcessCorruptedStateExceptionsAttribute]
protected sealed virtual void Dispose(bool A_0);
    public sealed virtual void Dispose();
    protected sealed virtual void Finalize();
    public JavascriptMethodHandler* get();
}
internal class CefSharp.Internals.MCefRefPtr<CefSharp::BrowserSubprocess::JavascriptPropertyHandler> : object {
    private JavascriptPropertyHandler* _ptr;
    private void !MCefRefPtr<CefSharp::BrowserSubprocess::JavascriptPropertyHandler>();
    private void ~MCefRefPtr<CefSharp::BrowserSubprocess::JavascriptPropertyHandler>();
    public MCefRefPtr<CefSharp::BrowserSubprocess::JavascriptPropertyHandler> modreq(System.Runtime.CompilerServices.IsImplicitlyDereferenced) op_Assign(JavascriptPropertyHandler* p);
    public sealed virtual bool Equals(object obj);
    public sealed virtual int GetHashCode();
    [HandleProcessCorruptedStateExceptionsAttribute]
protected sealed virtual void Dispose(bool A_0);
    public sealed virtual void Dispose();
    protected sealed virtual void Finalize();
    public JavascriptPropertyHandler* get();
}
internal class CefSharp.Internals.MCefRefPtr<CefV8Context> : object {
    private CefV8Context* _ptr;
    public MCefRefPtr<CefV8Context>(scoped_refptr<CefV8Context> modopt(System.Runtime.CompilerServices.IsConst)* modopt(System.Runtime.CompilerServices.IsImplicitlyDereferenced) r);
    private void !MCefRefPtr<CefV8Context>();
    private void ~MCefRefPtr<CefV8Context>();
    public CefV8Context* get();
    public MCefRefPtr<CefV8Context> modreq(System.Runtime.CompilerServices.IsImplicitlyDereferenced) op_Assign(CefV8Context* p);
    public sealed virtual bool Equals(object obj);
    public sealed virtual int GetHashCode();
    [HandleProcessCorruptedStateExceptionsAttribute]
protected sealed virtual void Dispose(bool A_0);
    public sealed virtual void Dispose();
    protected sealed virtual void Finalize();
    public CefV8Context* op_MemberSelection();
}
internal class CefSharp.Internals.MCefRefPtr<CefV8Value> : object {
    private CefV8Value* _ptr;
    public MCefRefPtr<CefV8Value>(scoped_refptr<CefV8Value> modopt(System.Runtime.CompilerServices.IsConst)* modopt(System.Runtime.CompilerServices.IsImplicitlyDereferenced) r);
    public MCefRefPtr<CefV8Value>(CefV8Value* p);
    private void !MCefRefPtr<CefV8Value>();
    private void ~MCefRefPtr<CefV8Value>();
    public CefV8Value* get();
    public MCefRefPtr<CefV8Value> modreq(System.Runtime.CompilerServices.IsImplicitlyDereferenced) op_Assign(CefV8Value* p);
    public sealed virtual bool Equals(object obj);
    public sealed virtual int GetHashCode();
    [HandleProcessCorruptedStateExceptionsAttribute]
protected sealed virtual void Dispose(bool A_0);
    public sealed virtual void Dispose();
    protected sealed virtual void Finalize();
    public CefV8Value* op_MemberSelection();
}
[NativeCppClassAttribute]
internal enum CefSharp.Internals.Serialization.PrimitiveType : Enum {
    public byte value__;
}
[NativeCppClassAttribute]
internal class CefSharp.Internals.StringUtils : ValueType {
}
[NativeCppClassAttribute]
internal class CefSize : ValueType {
}
[NativeCppClassAttribute]
internal static class CefSSLInfo : ValueType {
}
[NativeCppClassAttribute]
internal class CefStringBase<CefStringTraitsUTF16> : ValueType {
    public static void <MarshalCopy>(CefStringBase<CefStringTraitsUTF16>* A_0, CefStringBase<CefStringTraitsUTF16>* A_1);
    public static void <MarshalDestroy>(CefStringBase<CefStringTraitsUTF16>* A_0);
}
[NativeCppClassAttribute]
internal class CefStringTraitsUTF16 : ValueType {
}
[NativeCppClassAttribute]
internal class CefStringTraitsUTF8 : ValueType {
}
[NativeCppClassAttribute]
internal class CefStringTraitsWide : ValueType {
}
[NativeCppClassAttribute]
internal class CefStructBase<CefBrowserSettingsTraits> : ValueType {
}
[NativeCppClassAttribute]
internal class CefStructBase<CefCookieTraits> : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class CefStructBase<CefWindowInfoTraits> : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class CefTime : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class CefTouchEvent : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class CefTouchHandleState : ValueType {
}
[NativeCppClassAttribute]
internal static class CefUnresponsiveProcessCallback : ValueType {
}
[NativeCppClassAttribute]
internal static class CefV8Accessor : ValueType {
}
[NativeCppClassAttribute]
internal static class CefV8Context : ValueType {
}
[NativeCppClassAttribute]
internal static class CefV8Exception : ValueType {
}
[NativeCppClassAttribute]
internal static class CefV8Handler : ValueType {
}
[NativeCppClassAttribute]
internal static class CefV8Interceptor : ValueType {
}
[NativeCppClassAttribute]
internal static class CefV8StackFrame : ValueType {
}
[NativeCppClassAttribute]
internal static class CefV8StackTrace : ValueType {
}
[NativeCppClassAttribute]
internal static class CefV8Value : ValueType {
}
[NativeCppClassAttribute]
internal static class CefValue : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class CefWindowInfo : ValueType {
}
[NativeCppClassAttribute]
internal class CefWindowInfoTraits : ValueType {
}
[NativeCppClassAttribute]
internal enum CertKeyType : Enum {
    public UInt32 modopt(System.Runtime.CompilerServices.IsLong) value__;
}
[NativeCppClassAttribute]
internal enum CO_MARSHALING_CONTEXT_ATTRIBUTES : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum CWMO_FLAGS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum DIALOG_DPI_CHANGE_BEHAVIORS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum DISPLAYCONFIG_TOPOLOGY_ID : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum DPI_AWARENESS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum DPI_HOSTING_BEHAVIOR : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class EHExceptionRecord : ValueType {
}
[NativeCppClassAttribute]
internal enum ETaskType : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class gcroot<CefSharp::BrowserSubprocess::CefBrowserWrapper ^> : ValueType {
}
[NativeCppClassAttribute]
internal class gcroot<CefSharp::BrowserSubprocess::JavascriptCallbackRegistry ^> : ValueType {
}
[NativeCppClassAttribute]
internal class gcroot<CefSharp::BrowserSubprocess::RegisterBoundObjectRegistry ^> : ValueType {
}
[NativeCppClassAttribute]
internal class gcroot<CefSharp::RenderProcess::IRenderProcessHandler ^> : ValueType {
}
[NativeCppClassAttribute]
internal class gcroot<System::Action<CefSharp::BrowserSubprocess::CefBrowserWrapper ^> ^> : ValueType {
}
[NativeCppClassAttribute]
internal class gcroot<System::Collections::Concurrent::ConcurrentDictionary<int,CefSharp::BrowserSubprocess::CefBrowserWrapper ^> ^> : ValueType {
}
[NativeCppClassAttribute]
internal class gcroot<System::Collections::Generic::Dictionary<System::String ^,CefSharp::Internals::JavascriptObject ^> ^> : ValueType {
}
[NativeCppClassAttribute]
internal class gcroot<System::Collections::Generic::List<CefSharp::CefCustomScheme ^> ^> : ValueType {
}
[NativeCppClassAttribute]
internal class gcroot<System::Func<CefSharp::BrowserSubprocess::Async::JavascriptAsyncMethodCallback ^,__int64> ^> : ValueType {
}
[NativeCppClassAttribute]
internal class gcroot<System::Func<cli::array<System::Object ^ >^,CefSharp::Internals::Wcf::BrowserProcessResponse ^> ^> : ValueType {
}
[NativeCppClassAttribute]
internal class gcroot<System::Func<System::String ^,CefSharp::Internals::Wcf::BrowserProcessResponse ^> ^> : ValueType {
}
[NativeCppClassAttribute]
internal class gcroot<System::Func<System::String ^,System::Object ^,CefSharp::Internals::Wcf::BrowserProcessResponse ^> ^> : ValueType {
}
[NativeCppClassAttribute]
internal class gcroot<System::String ^> : ValueType {
}
[NativeCppClassAttribute]
internal class HDC__ : ValueType {
}
[NativeCppClassAttribute]
internal class HICON__ : ValueType {
}
[NativeCppClassAttribute]
internal class HINSTANCE__ : ValueType {
}
[NativeCppClassAttribute]
internal class HWND__ : ValueType {
}
[NativeCppClassAttribute]
internal static class ICLRRuntimeHost : ValueType {
}
[NativeCppClassAttribute]
internal static class ICorRuntimeHost : ValueType {
}
[NativeCppClassAttribute]
internal enum IEObjectType : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum IMAGE_AUX_SYMBOL_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum IMPORT_OBJECT_NAME_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum IMPORT_OBJECT_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum ISA_AVAILABILITY : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal static class IUnknown : ValueType {
}
[NativeCppClassAttribute]
internal enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum JOBOBJECT_IO_ATTRIBUTION_CONTROL_FLAGS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class lconv : ValueType {
}
[NativeCppClassAttribute]
internal enum MEM_EXTENDED_PARAMETER_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum MEM_SECTION_EXTENDED_PARAMETER_TYPE : Enum {
    public int value__;
}
internal class msclr._detail_class : ValueType {
    public static String modopt(System.Runtime.CompilerServices.IsConst) _safe_true;
    public static String modopt(System.Runtime.CompilerServices.IsConst) _safe_false;
    private static _detail_class();
}
internal class msclr.lock : object {
    private object m_object;
    private bool m_locked;
    public lock(object _object);
    private void ~lock();
    public bool is_locked();
    public string op_Implicit();
    public void acquire(TimeSpan _timeout);
    public void acquire();
    public void acquire(int _timeout);
    public bool try_acquire(TimeSpan _timeout);
    public bool try_acquire(int _timeout);
    public void release();
    protected virtual void Dispose(bool A_0);
    public sealed virtual void Dispose();
}
[NativeCppClassAttribute]
internal enum msclr.lock_when : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum OFFER_PRIORITY : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum ORIENTATION_PREFERENCE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum PIDMSI_STATUS_VALUE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum POWER_SETTING_ALTITUDE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum ReplacesCorHdrNumericDefines : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum RPC_ADDRESS_CHANGE_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum RpcProxyPerfCounters : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefAccessibilityHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefApp> : ValueType {
    public static void <MarshalCopy>(scoped_refptr<CefApp>* A_0, scoped_refptr<CefApp>* A_1);
    public static void <MarshalDestroy>(scoped_refptr<CefApp>* A_0);
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefAudioHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefAuthCallback> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefBeforeDownloadCallback> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefBinaryValue> : ValueType {
    public static void <MarshalCopy>(scoped_refptr<CefBinaryValue>* A_0, scoped_refptr<CefBinaryValue>* A_1);
    public static void <MarshalDestroy>(scoped_refptr<CefBinaryValue>* A_0);
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefBrowser> : ValueType {
    public static void <MarshalCopy>(scoped_refptr<CefBrowser>* A_0, scoped_refptr<CefBrowser>* A_1);
    public static void <MarshalDestroy>(scoped_refptr<CefBrowser>* A_0);
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefBrowserProcessHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefCallback> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefClient> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefCommandHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefCommandLine> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefContextMenuHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefContextMenuParams> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefCookieAccessFilter> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefDialogHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefDictionaryValue> : ValueType {
    public static void <MarshalCopy>(scoped_refptr<CefDictionaryValue>* A_0, scoped_refptr<CefDictionaryValue>* A_1);
    public static void <MarshalDestroy>(scoped_refptr<CefDictionaryValue>* A_0);
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefDisplayHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefDOMNode> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefDownloadHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefDownloadItem> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefDownloadItemCallback> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefDragData> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefDragHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefFileDialogCallback> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefFindHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefFocusHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefFrame> : ValueType {
    public static void <MarshalCopy>(scoped_refptr<CefFrame>* A_0, scoped_refptr<CefFrame>* A_1);
    public static void <MarshalDestroy>(scoped_refptr<CefFrame>* A_0);
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefFrameHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefJSDialogCallback> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefJSDialogHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefKeyboardHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefLifeSpanHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefListValue> : ValueType {
    public static void <MarshalCopy>(scoped_refptr<CefListValue>* A_0, scoped_refptr<CefListValue>* A_1);
    public static void <MarshalDestroy>(scoped_refptr<CefListValue>* A_0);
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefLoadHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefMediaAccessCallback> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefMenuModel> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefPermissionHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefPermissionPromptCallback> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefPrintHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefProcessMessage> : ValueType {
    public static void <MarshalCopy>(scoped_refptr<CefProcessMessage>* A_0, scoped_refptr<CefProcessMessage>* A_1);
    public static void <MarshalDestroy>(scoped_refptr<CefProcessMessage>* A_0);
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefRenderHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefRenderProcessHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefRequest> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefRequestContext> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefRequestContextHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefRequestHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefResourceBundleHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefResourceHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefResourceReadCallback> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefResourceRequestHandler> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefResourceSkipCallback> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefResponse> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefResponseFilter> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefRunContextMenuCallback> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefRunQuickMenuCallback> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefSelectClientCertificateCallback> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefSSLInfo> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefUnresponsiveProcessCallback> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefV8Accessor> : ValueType {
    public static void <MarshalCopy>(scoped_refptr<CefV8Accessor>* A_0, scoped_refptr<CefV8Accessor>* A_1);
    public static void <MarshalDestroy>(scoped_refptr<CefV8Accessor>* A_0);
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefV8Context> : ValueType {
    public static void <MarshalCopy>(scoped_refptr<CefV8Context>* A_0, scoped_refptr<CefV8Context>* A_1);
    public static void <MarshalDestroy>(scoped_refptr<CefV8Context>* A_0);
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefV8Exception> : ValueType {
    public static void <MarshalCopy>(scoped_refptr<CefV8Exception>* A_0, scoped_refptr<CefV8Exception>* A_1);
    public static void <MarshalDestroy>(scoped_refptr<CefV8Exception>* A_0);
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefV8Handler> : ValueType {
    public static void <MarshalCopy>(scoped_refptr<CefV8Handler>* A_0, scoped_refptr<CefV8Handler>* A_1);
    public static void <MarshalDestroy>(scoped_refptr<CefV8Handler>* A_0);
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefV8Interceptor> : ValueType {
    public static void <MarshalCopy>(scoped_refptr<CefV8Interceptor>* A_0, scoped_refptr<CefV8Interceptor>* A_1);
    public static void <MarshalDestroy>(scoped_refptr<CefV8Interceptor>* A_0);
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefV8StackFrame> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefV8StackTrace> : ValueType {
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefV8Value> : ValueType {
    public static void <MarshalCopy>(scoped_refptr<CefV8Value>* A_0, scoped_refptr<CefV8Value>* A_1);
    public static void <MarshalDestroy>(scoped_refptr<CefV8Value>* A_0);
}
[NativeCppClassAttribute]
internal class scoped_refptr<CefValue> : ValueType {
    public static void <MarshalCopy>(scoped_refptr<CefValue>* A_0, scoped_refptr<CefValue>* A_1);
    public static void <MarshalDestroy>(scoped_refptr<CefValue>* A_0);
}
[NativeCppClassAttribute]
internal enum SERVICE_DIRECTORY_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum SERVICE_REGISTRY_STATE_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum SERVICE_SHARED_DIRECTORY_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum SERVICE_SHARED_REGISTRY_STATE_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum SHSTOCKICONID : Enum {
    public int value__;
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class stat : ValueType {
}
[NativeCppClassAttribute]
internal class std.__non_rtti_object : ValueType {
}
[NativeCppClassAttribute]
internal class std._Atomic_integral_facade<int> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Atomic_integral<int,4> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Atomic_padded<int> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Atomic_padded<long> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Atomic_padded<unsigned int> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Atomic_storage<int,4> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Atomic_storage<long,4> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Atomic_storage<unsigned int,4> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Basic_container_proxy_ptr12 : ValueType {
}
[NativeCppClassAttribute]
internal enum std._Case_sensitive : Enum {
    public bool value__;
}
[NativeCppClassAttribute]
internal class std._Char_traits<char,int> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Char_traits<char16_t,unsigned short> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Char_traits<char32_t,unsigned int> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Char_traits<wchar_t,unsigned short> : ValueType {
}
[NativeCppClassAttribute]
internal enum std._Codecvt_mode : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class std._Compressed_pair<std::allocator<CefStringBase<CefStringTraitsUTF16> >,std::_Vector_val<std::_Simple_types<CefStringBase<CefStringTraitsUTF16> > >,1> : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class std._Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1> : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class std._Compressed_pair<std::allocator<char16_t>,std::_String_val<std::_Simple_types<char16_t> >,1> : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class std._Compressed_pair<std::allocator<char32_t>,std::_String_val<std::_Simple_types<char32_t> >,1> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Compressed_pair<std::allocator<scoped_refptr<CefV8Value> >,std::_Deque_val<std::_Deque_simple_types<scoped_refptr<CefV8Value> > >,1> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Compressed_pair<std::allocator<scoped_refptr<CefV8Value> >,std::_Vector_val<std::_Simple_types<scoped_refptr<CefV8Value> > >,1> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Compressed_pair<std::allocator<std::_Tree_node<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> > > >,1> : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class std._Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Compressed_pair<std::less<CefStringBase<CefStringTraitsUTF16> >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> > > >,1>,1> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Conditionally_enabled_hash<int,1> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Container_base0 : ValueType {
}
[NativeCppClassAttribute]
internal class std._Container_base12 : ValueType {
}
[NativeCppClassAttribute]
internal class std._Container_proxy : ValueType {
}
[NativeCppClassAttribute]
internal class std._Default_allocate_traits : ValueType {
}
[NativeCppClassAttribute]
internal class std._Default_allocator_traits<std::allocator<CefStringBase<CefStringTraitsUTF16> > > : ValueType {
}
[NativeCppClassAttribute]
internal class std._Default_allocator_traits<std::allocator<char> > : ValueType {
}
[NativeCppClassAttribute]
internal class std._Default_allocator_traits<std::allocator<char16_t> > : ValueType {
}
[NativeCppClassAttribute]
internal class std._Default_allocator_traits<std::allocator<char32_t> > : ValueType {
}
[NativeCppClassAttribute]
internal class std._Default_allocator_traits<std::allocator<scoped_refptr<CefV8Value> > > : ValueType {
}
[NativeCppClassAttribute]
internal class std._Default_allocator_traits<std::allocator<std::_Container_proxy> > : ValueType {
}
[NativeCppClassAttribute]
internal class std._Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> >,void *> > > : ValueType {
}
[NativeCppClassAttribute]
internal class std._Default_allocator_traits<std::allocator<wchar_t> > : ValueType {
}
[NativeCppClassAttribute]
internal class std._Default_sentinel : ValueType {
}
[NativeCppClassAttribute]
internal class std._Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<scoped_refptr<CefV8Value> > > > : ValueType {
}
[NativeCppClassAttribute]
internal class std._Deque_iterator<std::_Deque_val<std::_Deque_simple_types<scoped_refptr<CefV8Value> > > > : ValueType {
}
[NativeCppClassAttribute]
internal class std._Deque_val<std::_Deque_simple_types<scoped_refptr<CefV8Value> > > : ValueType {
}
[NativeCppClassAttribute]
internal class std._Distance_unknown : ValueType {
}
[NativeCppClassAttribute]
internal class std._Equal_allocators : ValueType {
}
[NativeCppClassAttribute]
internal static class std._Facet_base : ValueType {
}
[NativeCppClassAttribute]
internal class std._Fake_allocator : ValueType {
}
[NativeCppClassAttribute]
internal class std._Fake_proxy_ptr_impl : ValueType {
}
[NativeCppClassAttribute]
internal class std._Generic_error_category : ValueType {
}
[NativeCppClassAttribute]
internal enum std._Invoker_strategy : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class std._Iosb<int> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Iostream_error_category2 : ValueType {
}
[NativeCppClassAttribute]
internal class std._Iterator_base0 : ValueType {
}
[NativeCppClassAttribute]
internal class std._Iterator_base12 : ValueType {
}
[NativeCppClassAttribute]
internal class std._Leave_proxy_unbound : ValueType {
}
[NativeCppClassAttribute]
internal class std._Locinfo : ValueType {
}
[NativeCppClassAttribute]
internal class std._Lockit : ValueType {
}
[NativeCppClassAttribute]
internal class std._Narrow_char_traits<char,int> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Nontrivial_dummy_type : ValueType {
}
[NativeCppClassAttribute]
internal class std._One_then_variadic_args_t : ValueType {
}
[NativeCppClassAttribute]
internal static class std._Ref_count_base : ValueType {
}
[NativeCppClassAttribute]
internal class std._Shared_ptr_spin_lock : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class std._String_val<std::_Simple_types<char> > : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class std._String_val<std::_Simple_types<char16_t> > : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class std._String_val<std::_Simple_types<char32_t> > : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class std._String_val<std::_Simple_types<wchar_t> > : ValueType {
}
[NativeCppClassAttribute]
internal class std._System_error : ValueType {
}
[NativeCppClassAttribute]
internal class std._System_error_category : ValueType {
}
[NativeCppClassAttribute]
internal class std._System_error_message : ValueType {
}
[NativeCppClassAttribute]
internal class std._Tidy_guard<std::numpunct<char> > : ValueType {
}
[NativeCppClassAttribute]
internal class std._Tidy_guard<std::numpunct<wchar_t> > : ValueType {
}
[NativeCppClassAttribute]
internal class std._Timevec : ValueType {
}
[NativeCppClassAttribute]
internal enum std._Tree_child : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class std._Tree_node<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> >,void *> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> > > >,std::_Iterator_base0> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> > > > > : ValueType {
}
[NativeCppClassAttribute]
internal class std._Tree_val<std::_Tree_simple_types<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> > > > : ValueType {
}
[NativeCppClassAttribute]
internal class std._Tree<std::_Tmap_traits<CefStringBase<CefStringTraitsUTF16>,CefStringBase<CefStringTraitsUTF16>,std::less<CefStringBase<CefStringTraitsUTF16> >,std::allocator<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> > >,0> > : ValueType {
}
[NativeCppClassAttribute]
internal enum std._Uninitialized : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class std._Uninitialized_backout_al<std::allocator<CefStringBase<CefStringTraitsUTF16> > > : ValueType {
}
[NativeCppClassAttribute]
internal class std._Uninitialized_backout_al<std::allocator<scoped_refptr<CefV8Value> > > : ValueType {
}
[NativeCppClassAttribute]
internal class std._Uninitialized_backout<scoped_refptr<CefV8Value> * *> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Unused_parameter : ValueType {
}
[NativeCppClassAttribute]
internal class std._Vector_const_iterator<std::_Vector_val<std::_Simple_types<CefStringBase<CefStringTraitsUTF16> > > > : ValueType {
}
[NativeCppClassAttribute]
internal class std._Vector_val<std::_Simple_types<CefStringBase<CefStringTraitsUTF16> > > : ValueType {
}
[NativeCppClassAttribute]
internal class std._Vector_val<std::_Simple_types<scoped_refptr<CefV8Value> > > : ValueType {
}
[NativeCppClassAttribute]
internal class std._WChar_traits<char16_t> : ValueType {
}
[NativeCppClassAttribute]
internal class std._WChar_traits<wchar_t> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Yarn<char> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Yarn<wchar_t> : ValueType {
}
[NativeCppClassAttribute]
internal class std._Zero_then_variadic_args_t : ValueType {
}
[NativeCppClassAttribute]
internal class std.?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$$FQAEAAV12@QB_WI@Z.__l2.<lambda_81024737dbc355ceadab6de384f2d3f0> : ValueType {
}
[NativeCppClassAttribute]
internal class std.?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$FQAEAAV12@ID@Z.__l2.<lambda_b520e6e7dd2c85f4b83ca9ec1210796f> : ValueType {
}
[NativeCppClassAttribute]
internal class std.?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$FQAEAAV12@QBDI@Z.__l2.<lambda_4c04651f1675f62dd3603168f157397a> : ValueType {
}
[NativeCppClassAttribute]
internal class std.?assign@?$basic_string@_SU?$char_traits@_S@std@@V?$allocator@_S@2@@std@@$$FQAEAAV12@QB_SI@Z.__l2.<lambda_e8146e699ad3d19085b95d1601c4900f> : ValueType {
}
[NativeCppClassAttribute]
internal class std.?assign@?$basic_string@_UU?$char_traits@_U@std@@V?$allocator@_U@2@@std@@$$FQAEAAV12@QB_UI@Z.__l2.<lambda_336b60ed8ece25612a4e239a3ad2963a> : ValueType {
}
[NativeCppClassAttribute]
internal class std.?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$$FQAEAAV12@I_W@Z.__l2.<lambda_0504f7258912048d76197aad5a051a15> : ValueType {
}
[NativeCppClassAttribute]
internal class std.?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$$FQAEAAV12@QB_WI@Z.__l2.<lambda_dedddf4a6a87ceff87c95d2861c9e684> : ValueType {
}
[NativeCppClassAttribute]
internal class std.?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$FQAEAAV12@ID@Z.__l2.<lambda_2e531c9f1bfece438b11d7a687d3ac9c> : ValueType {
}
[NativeCppClassAttribute]
internal class std.?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$FQAEAAV12@QBDI@Z.__l2.<lambda_88acb98cb1d3e807ff08d7ebe077788e> : ValueType {
}
[NativeCppClassAttribute]
internal class std.?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$$FQAEAAV12@II_W@Z.__l2.<lambda_33207f5e511f75d4236841966d7be680> : ValueType {
}
[NativeCppClassAttribute]
internal class std.?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$FQAEAAV12@IID@Z.__l2.<lambda_6f15b3f3d520a31cb8e9581fa19a29aa> : ValueType {
}
[NativeCppClassAttribute]
internal class std.?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$FQAEAAV12@IQBDI@Z.__l2.<lambda_15d7271538433f1955d737765e78953a> : ValueType {
}
[NativeCppClassAttribute]
internal class std.?push_back@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$$FQAEX_W@Z.__l2.<lambda_000a440560208bdbd8b15cb5b1a8b6b3> : ValueType {
}
[NativeCppClassAttribute]
internal class std.?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$FQAEXD@Z.__l2.<lambda_6f04b3841c6ace20ee4fd1b3dbc592d0> : ValueType {
}
[NativeCppClassAttribute]
internal enum std.align_val_t : Enum {
    public UInt32 value__;
}
[NativeCppClassAttribute]
internal class std.allocator<CefStringBase<CefStringTraitsUTF16> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.allocator<char> : ValueType {
}
[NativeCppClassAttribute]
internal class std.allocator<char16_t> : ValueType {
}
[NativeCppClassAttribute]
internal class std.allocator<char32_t> : ValueType {
}
[NativeCppClassAttribute]
internal class std.allocator<scoped_refptr<CefV8Value> *> : ValueType {
}
[NativeCppClassAttribute]
internal class std.allocator<scoped_refptr<CefV8Value> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.allocator<std::_Container_proxy> : ValueType {
}
[NativeCppClassAttribute]
internal class std.allocator<std::_Tree_node<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> >,void *> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.allocator<wchar_t> : ValueType {
}
[NativeCppClassAttribute]
internal class std.atomic_flag : ValueType {
}
[NativeCppClassAttribute]
internal class std.atomic<int> : ValueType {
}
[NativeCppClassAttribute]
internal class std.atomic<long> : ValueType {
}
[NativeCppClassAttribute]
internal class std.atomic<unsigned int> : ValueType {
}
[NativeCppClassAttribute]
internal class std.bad_alloc : ValueType {
}
[NativeCppClassAttribute]
internal class std.bad_array_new_length : ValueType {
}
[NativeCppClassAttribute]
internal class std.bad_cast : ValueType {
}
[NativeCppClassAttribute]
internal class std.bad_exception : ValueType {
}
[NativeCppClassAttribute]
internal class std.bad_typeid : ValueType {
}
[NativeCppClassAttribute]
internal class std.bad_weak_ptr : ValueType {
}
[NativeCppClassAttribute]
internal class std.basic_ios<char,std::char_traits<char> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.basic_ios<wchar_t,std::char_traits<wchar_t> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.basic_iostream<char,std::char_traits<char> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.basic_iostream<wchar_t,std::char_traits<wchar_t> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.basic_istream<char,std::char_traits<char> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.basic_istream<wchar_t,std::char_traits<wchar_t> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.basic_ostream<char,std::char_traits<char> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.basic_ostream<wchar_t,std::char_traits<wchar_t> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.basic_ostringstream<char,std::char_traits<char>,std::allocator<char> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.basic_streambuf<char,std::char_traits<char> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.basic_streambuf<wchar_t,std::char_traits<wchar_t> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.basic_string_view<char,std::char_traits<char> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.basic_string_view<char16_t,std::char_traits<char16_t> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.basic_string_view<char32_t,std::char_traits<char32_t> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.basic_string_view<wchar_t,std::char_traits<wchar_t> > : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class std.basic_string<char,std::char_traits<char>,std::allocator<char> > : ValueType {
    public static void <MarshalCopy>(basic_string<char,std::char_traits<char>,std::allocator<char> >* A_0, basic_string<char,std::char_traits<char>,std::allocator<char> >* A_1);
    public static void <MarshalDestroy>(basic_string<char,std::char_traits<char>,std::allocator<char> >* A_0);
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class std.basic_string<char16_t,std::char_traits<char16_t>,std::allocator<char16_t> > : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class std.basic_string<char32_t,std::char_traits<char32_t>,std::allocator<char32_t> > : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class std.basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > : ValueType {
}
[NativeCppClassAttribute]
internal enum std.byte : Enum {
    public byte value__;
}
[NativeCppClassAttribute]
internal class std.codecvt_base : ValueType {
}
[NativeCppClassAttribute]
internal class std.codecvt<char,char,_Mbstatet> : ValueType {
}
[NativeCppClassAttribute]
internal class std.codecvt<char16_t,char,_Mbstatet> : ValueType {
}
[NativeCppClassAttribute]
internal class std.codecvt<char32_t,char,_Mbstatet> : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class std.codecvt<unsigned short,char,_Mbstatet> : ValueType {
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class std.codecvt<wchar_t,char,_Mbstatet> : ValueType {
}
[NativeCppClassAttribute]
internal class std.ctype_base : ValueType {
}
[NativeCppClassAttribute]
internal class std.ctype<char> : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class std.ctype<unsigned short> : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class std.ctype<wchar_t> : ValueType {
}
[NativeCppClassAttribute]
internal class std.default_delete<std::_Facet_base> : ValueType {
}
[NativeCppClassAttribute]
internal class std.deque<scoped_refptr<CefV8Value>,std::allocator<scoped_refptr<CefV8Value> > > : ValueType {
}
[NativeCppClassAttribute]
internal class std.domain_error : ValueType {
}
[NativeCppClassAttribute]
internal enum std.errc : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal static class std.error_category : ValueType {
}
[NativeCppClassAttribute]
internal class std.error_code : ValueType {
}
[NativeCppClassAttribute]
internal class std.error_condition : ValueType {
}
[NativeCppClassAttribute]
internal class std.exception : ValueType {
}
[NativeCppClassAttribute]
internal class std.exception_ptr : ValueType {
    public static void <MarshalCopy>(exception_ptr* A_0, exception_ptr* A_1);
    public static void <MarshalDestroy>(exception_ptr* A_0);
}
[NativeCppClassAttribute]
internal enum std.float_denorm_style : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum std.float_round_style : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class std.fpos<_Mbstatet> : ValueType {
}
[NativeCppClassAttribute]
internal class std.hash<double> : ValueType {
}
[NativeCppClassAttribute]
internal class std.hash<float> : ValueType {
}
[NativeCppClassAttribute]
internal class std.hash<int> : ValueType {
}
[NativeCppClassAttribute]
internal class std.hash<long double> : ValueType {
}
[NativeCppClassAttribute]
internal class std.hash<std::error_code> : ValueType {
}
[NativeCppClassAttribute]
internal class std.hash<std::error_condition> : ValueType {
}
[NativeCppClassAttribute]
internal class std.hash<std::nullptr_t> : ValueType {
}
[NativeCppClassAttribute]
internal class std.integral_constant<bool,0> : ValueType {
}
[NativeCppClassAttribute]
internal class std.integral_constant<bool,1> : ValueType {
}
[NativeCppClassAttribute]
internal class std.invalid_argument : ValueType {
}
[NativeCppClassAttribute]
internal enum std.io_errc : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class std.ios_base : ValueType {
}
[NativeCppClassAttribute]
internal class std.istreambuf_iterator<char,std::char_traits<char> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.length_error : ValueType {
}
[NativeCppClassAttribute]
internal class std.less<CefStringBase<CefStringTraitsUTF16> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.locale : ValueType {
}
[NativeCppClassAttribute]
internal class std.logic_error : ValueType {
}
[NativeCppClassAttribute]
internal class std.map<CefStringBase<CefStringTraitsUTF16>,CefStringBase<CefStringTraitsUTF16>,std::less<CefStringBase<CefStringTraitsUTF16> >,std::allocator<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> > > > : ValueType {
}
[NativeCppClassAttribute]
internal enum std.memory_order : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class std.nested_exception : ValueType {
}
[NativeCppClassAttribute]
internal class std.num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > > : ValueType {
}
[NativeCppClassAttribute]
internal class std.num_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > : ValueType {
}
[NativeCppClassAttribute]
internal class std.num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > : ValueType {
}
[NativeCppClassAttribute]
internal class std.num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > : ValueType {
}
[NativeCppClassAttribute]
internal class std.numeric_limits<__int64> : ValueType {
}
[NativeCppClassAttribute]
internal class std.numeric_limits<bool> : ValueType {
}
[NativeCppClassAttribute]
internal class std.numeric_limits<char> : ValueType {
}
[NativeCppClassAttribute]
internal class std.numeric_limits<char16_t> : ValueType {
}
[NativeCppClassAttribute]
internal class std.numeric_limits<char32_t> : ValueType {
}
[NativeCppClassAttribute]
internal class std.numeric_limits<double> : ValueType {
}
[NativeCppClassAttribute]
internal class std.numeric_limits<float> : ValueType {
}
[NativeCppClassAttribute]
internal class std.numeric_limits<int> : ValueType {
}
[NativeCppClassAttribute]
internal class std.numeric_limits<long double> : ValueType {
}
[NativeCppClassAttribute]
internal class std.numeric_limits<long> : ValueType {
}
[NativeCppClassAttribute]
internal class std.numeric_limits<short> : ValueType {
}
[NativeCppClassAttribute]
internal class std.numeric_limits<signed char> : ValueType {
}
[NativeCppClassAttribute]
internal class std.numeric_limits<unsigned __int64> : ValueType {
}
[NativeCppClassAttribute]
internal class std.numeric_limits<unsigned char> : ValueType {
}
[NativeCppClassAttribute]
internal class std.numeric_limits<unsigned int> : ValueType {
}
[NativeCppClassAttribute]
internal class std.numeric_limits<unsigned long> : ValueType {
}
[NativeCppClassAttribute]
internal class std.numeric_limits<unsigned short> : ValueType {
}
[NativeCppClassAttribute]
internal class std.numeric_limits<wchar_t> : ValueType {
}
[NativeCppClassAttribute]
internal class std.numpunct<char> : ValueType {
}
[NativeCppClassAttribute]
internal class std.numpunct<wchar_t> : ValueType {
}
[NativeCppClassAttribute]
internal class std.once_flag : ValueType {
}
[NativeCppClassAttribute]
internal class std.ostreambuf_iterator<char,std::char_traits<char> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.out_of_range : ValueType {
}
[NativeCppClassAttribute]
internal class std.overflow_error : ValueType {
}
[NativeCppClassAttribute]
internal class std.pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> > : ValueType {
}
[NativeCppClassAttribute]
internal static class std.pmr.memory_resource : ValueType {
}
[NativeCppClassAttribute]
internal enum std.pointer_safety : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class std.pointer_traits<char *> : ValueType {
}
[NativeCppClassAttribute]
internal class std.pointer_traits<wchar_t *> : ValueType {
}
[NativeCppClassAttribute]
internal class std.random_access_iterator_tag : ValueType {
}
[NativeCppClassAttribute]
internal class std.range_error : ValueType {
}
[NativeCppClassAttribute]
internal class std.runtime_error : ValueType {
}
[NativeCppClassAttribute]
internal class std.system_error : ValueType {
}
[NativeCppClassAttribute]
internal class std.underflow_error : ValueType {
}
[NativeCppClassAttribute]
internal class std.unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.vector<CefDraggableRegion,std::allocator<CefDraggableRegion> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.vector<CefRect,std::allocator<CefRect> > : ValueType {
}
[NativeCppClassAttribute]
internal class std.vector<CefStringBase<CefStringTraitsUTF16>,std::allocator<CefStringBase<CefStringTraitsUTF16> > > : ValueType {
}
[NativeCppClassAttribute]
internal class std.vector<scoped_refptr<CefV8Value>,std::allocator<scoped_refptr<CefV8Value> > > : ValueType {
}
[NativeCppClassAttribute]
internal class std.vector<scoped_refptr<CefX509Certificate>,std::allocator<scoped_refptr<CefX509Certificate> > > : ValueType {
}
[NativeCppClassAttribute]
internal enum SYSGEOCLASS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum SYSGEOTYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum SYSNLS_FUNCTION : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagACTIVATIONTYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagADVF : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagApplicationType : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagAR_STATE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagBIND_FLAGS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagBINDSPEED : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagBINDSTATUS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagBINDSTRING : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagCALLCONV : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagCALLTYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagCHANGEKIND : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagCLSCTX : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagCOINIT : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagCOINITBASE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagCOMSD : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagCOWAIT_FLAGS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagDATADIR : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagDCOM_CALL_STATE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagDESCKIND : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagDISCARDCACHE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagDOMNodeType : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagDVASPECT : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagEOLE_AUTHENTICATION_CAPABILITIES : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagEXTCONN : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagExtendedErrorParamTypes : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagFEEDBACK_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagFUNCFLAGS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagFUNCKIND : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagGLOBALOPT_EH_VALUES : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagGLOBALOPT_PROPERTIES : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagGLOBALOPT_RO_FLAGS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagGLOBALOPT_RPCTP_VALUES : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagGLOBALOPT_UNMARSHALING_POLICY_VALUES : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagHANDEDNESS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagINPUT_MESSAGE_DEVICE_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagINPUT_MESSAGE_ORIGIN_ID : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagINVOKEKIND : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagLIBFLAGS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagLOCKTYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagMEMCTX : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagMKREDUCE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagMKSYS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class tagMSG : ValueType {
}
[NativeCppClassAttribute]
internal enum tagMSHCTX : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagMSHLFLAGS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagOLECLOSE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagOLECONTF : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagOLEGETMONIKER : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagOLELINKBIND : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagOLEMISC : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagOLERENDER : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagOLEUPDATE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagOLEVERBATTRIB : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagOLEWHICHMK : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagPENDINGMSG : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagPENDINGTYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagPOINTER_BUTTON_CHANGE_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagPOINTER_DEVICE_CURSOR_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagPOINTER_DEVICE_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagPOINTER_INPUT_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class tagPROPVARIANT : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class tagRECT : ValueType {
}
[NativeCppClassAttribute]
internal enum tagREGCLS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagREGKIND : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagRpcCallClientLocality : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagRpcCallType : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagRpcLocalAddressFormat : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagRPCOPT_PROPERTIES : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagRPCOPT_SERVER_LOCALITY_VALUES : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagSERVERCALL : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagSF_TYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagShutdownType : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagSTATFLAG : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagSTDMSHLFLAGS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagSTGC : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagSTGMOVE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagSTGTY : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagSTREAM_SEEK : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagSYSKIND : Enum {
    public int value__;
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class tagTEXTMETRICA : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class tagTEXTMETRICW : ValueType {
}
[NativeCppClassAttribute]
internal enum tagTYMED : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagTYPEFLAGS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagTYPEKIND : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagTYSPEC : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagURLTEMPLATE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagURLZONE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagUSERCLASSTYPE : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagVARFLAGS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal class tagVARIANT : ValueType {
}
[NativeCppClassAttribute]
internal enum tagVARKIND : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum tagXMLEMEM_TYPE : Enum {
    public int value__;
}
[UnsafeValueTypeAttribute]
[NativeCppClassAttribute]
internal class timespec : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class tm : ValueType {
}
[NativeCppClassAttribute]
[UnsafeValueTypeAttribute]
internal class type_info : ValueType {
}
[NativeCppClassAttribute]
internal enum ValidatorFlags : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum VARENUM : Enum {
    public int value__;
}
[AttributeUsageAttribute("1")]
internal class vc.cppcli.attributes.?A0x132e52f9.CppInlineNamespaceAttribute : Attribute {
    public CppInlineNamespaceAttribute(string A_0);
}
[AttributeUsageAttribute("1")]
internal class vc.cppcli.attributes.?A0x2753dede.CppInlineNamespaceAttribute : Attribute {
    public CppInlineNamespaceAttribute(string A_0);
}
[AttributeUsageAttribute("1")]
internal class vc.cppcli.attributes.?A0x7f1e7d62.CppInlineNamespaceAttribute : Attribute {
    public CppInlineNamespaceAttribute(string A_0);
}
[AttributeUsageAttribute("1")]
internal class vc.cppcli.attributes.?A0x92df7cd6.CppInlineNamespaceAttribute : Attribute {
    public CppInlineNamespaceAttribute(string A_0);
}
[AttributeUsageAttribute("1")]
internal class vc.cppcli.attributes.?A0xb1769e14.CppInlineNamespaceAttribute : Attribute {
    public CppInlineNamespaceAttribute(string A_0);
}
[AttributeUsageAttribute("1")]
internal class vc.cppcli.attributes.?A0xf2edcac0.CppInlineNamespaceAttribute : Attribute {
    public CppInlineNamespaceAttribute(string A_0);
}
[AttributeUsageAttribute("1")]
internal class vc.cppcli.attributes.?A0xff01732d.CppInlineNamespaceAttribute : Attribute {
    public CppInlineNamespaceAttribute(string A_0);
}
[NativeCppClassAttribute]
internal enum WIN32_MEMORY_INFORMATION_CLASS : Enum {
    public int value__;
}
[NativeCppClassAttribute]
internal enum WIN32_MEMORY_PARTITION_INFORMATION_CLASS : Enum {
    public int value__;
}
