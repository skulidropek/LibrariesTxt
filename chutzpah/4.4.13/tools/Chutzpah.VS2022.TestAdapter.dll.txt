public class Chutzpah.VS2022.TestAdapter.ChutzpahAdapterSettings : TestRunSettings {
    private static XmlSerializer serializer;
    private ChutzpahSettingsFileEnvironments environmentsWrapper;
    [CompilerGeneratedAttribute]
private int <MaxDegreeOfParallelism>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnabledTracing>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OpenInBrowser>k__BackingField;
    [CompilerGeneratedAttribute]
private Collection`1<ChutzpahSettingsFileEnvironment> <ChutzpahSettingsFileEnvironments>k__BackingField;
    public int MaxDegreeOfParallelism { get; public set; }
    public bool EnabledTracing { get; public set; }
    public bool OpenInBrowser { get; public set; }
    public Collection`1<ChutzpahSettingsFileEnvironment> ChutzpahSettingsFileEnvironments { get; public set; }
    [XmlIgnoreAttribute]
public ChutzpahSettingsFileEnvironments ChutzpahSettingsFileEnvironmentsWrapper { get; }
    private static ChutzpahAdapterSettings();
    [CompilerGeneratedAttribute]
public int get_MaxDegreeOfParallelism();
    [CompilerGeneratedAttribute]
public void set_MaxDegreeOfParallelism(int value);
    [CompilerGeneratedAttribute]
public bool get_EnabledTracing();
    [CompilerGeneratedAttribute]
public void set_EnabledTracing(bool value);
    [CompilerGeneratedAttribute]
public bool get_OpenInBrowser();
    [CompilerGeneratedAttribute]
public void set_OpenInBrowser(bool value);
    [CompilerGeneratedAttribute]
public Collection`1<ChutzpahSettingsFileEnvironment> get_ChutzpahSettingsFileEnvironments();
    [CompilerGeneratedAttribute]
public void set_ChutzpahSettingsFileEnvironments(Collection`1<ChutzpahSettingsFileEnvironment> value);
    public ChutzpahSettingsFileEnvironments get_ChutzpahSettingsFileEnvironmentsWrapper();
    public virtual XmlElement ToXml();
}
[ExportAttribute("Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ISettingsProvider")]
[SettingsNameAttribute("ChutzpahAdapterSettings")]
public class Chutzpah.VS2022.TestAdapter.ChutzpahAdapterSettingsProvider : object {
    protected XmlSerializer serializer;
    [CompilerGeneratedAttribute]
private ChutzpahAdapterSettings <Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public ChutzpahAdapterSettings Settings { get; private set; }
    public string Name { get; private set; }
    [CompilerGeneratedAttribute]
public ChutzpahAdapterSettings get_Settings();
    [CompilerGeneratedAttribute]
private void set_Settings(ChutzpahAdapterSettings value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    public sealed virtual void Load(XmlReader reader);
}
[ExtensionAttribute]
public static class Chutzpah.VS2022.TestAdapter.ChutzpahExtensionMethods : object {
    [ExtensionAttribute]
public static TestCase ToVsTestCase(TestCase test);
    [ExtensionAttribute]
public static TestResult ToVsTestResult(TestCase test);
    public static TestOutcome ToVsTestOutcome(TestOutcome outcome);
    private static string BuildFullyQualifiedName(TestCase testCase);
    private static string GetTestDisplayText(TestCase testCase);
    private static string GetTestFailureMessage(TestResult result);
    private static string BuildVirtualStackTrace(TestCase testCase);
}
[FileExtensionAttribute(".coffee")]
[FileExtensionAttribute(".tsx")]
[FileExtensionAttribute(".ts")]
[FileExtensionAttribute(".jsx")]
[FileExtensionAttribute(".js")]
[FileExtensionAttribute(".html")]
[FileExtensionAttribute(".htm")]
[FileExtensionAttribute(".json")]
[DefaultExecutorUriAttribute("executor://chutzpah-js")]
public class Chutzpah.VS2022.TestAdapter.ChutzpahTestDiscoverer : object {
    private ITestRunner testRunner;
    public sealed virtual void DiscoverTests(IEnumerable`1<string> sources, IDiscoveryContext discoveryContext, IMessageLogger logger, ITestCaseDiscoverySink discoverySink);
}
[ExtensionUriAttribute("executor://chutzpah-js")]
public class Chutzpah.VS2022.TestAdapter.ChutzpahTestExecutor : object {
    private ITestRunner testRunner;
    public sealed virtual void Cancel();
    public sealed virtual void RunTests(IEnumerable`1<string> sources, IRunContext runContext, IFrameworkHandle frameworkHandle);
    public sealed virtual void RunTests(IEnumerable`1<TestCase> tests, IRunContext runContext, IFrameworkHandle frameworkHandle);
}
public class Chutzpah.VS2022.TestAdapter.DiscoveryCallback : RunnerCallback {
    private IMessageLogger logger;
    private ITestCaseDiscoverySink discoverySink;
    public DiscoveryCallback(IMessageLogger logger, ITestCaseDiscoverySink discoverySink);
    public virtual void FileError(TestContext context, TestError error);
    public virtual void ExceptionThrown(Exception exception, string fileName);
    public virtual void TestFinished(TestContext context, TestCase test);
}
public class Chutzpah.VS2022.TestAdapter.ExecutionCallback : RunnerCallback {
    private IFrameworkHandle frameworkHandle;
    private IRunContext runContext;
    public ExecutionCallback(IFrameworkHandle frameworkHandle, IRunContext runContext);
    public virtual void FileError(TestContext context, TestError error);
    public virtual void FileLog(TestContext context, TestLog log);
    public virtual void ExceptionThrown(Exception exception, string fileName);
    public virtual void TestStarted(TestContext context, TestCase test);
    public virtual void TestFinished(TestContext context, TestCase test);
    public virtual void TestSuiteFinished(TestContext context, TestCaseSummary testResultsSummary);
}
public interface Chutzpah.VS2022.TestAdapter.IChutzpahSettingsMapper {
    public ChutzpahAdapterSettings Settings { get; }
    public abstract virtual void MapSettings(ChutzpahUTESettings settings);
    public abstract virtual ChutzpahAdapterSettings get_Settings();
}
