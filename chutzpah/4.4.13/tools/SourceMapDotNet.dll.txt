public interface SourceMapDotNet.ISourceMapConsumer {
    public abstract virtual SourceReference[] OriginalPositionsFor(int line);
}
internal class SourceMapDotNet.Model.MappingGroup : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<MappingSegment> <Segments>k__BackingField;
    public IEnumerable`1<MappingSegment> Segments { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<MappingSegment> get_Segments();
    [CompilerGeneratedAttribute]
public void set_Segments(IEnumerable`1<MappingSegment> value);
}
internal class SourceMapDotNet.Model.MappingSegment : object {
    [CompilerGeneratedAttribute]
private int <GeneratedLineIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private int <GeneratedColumnIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <SourcesIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <SourceLineIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <SourceColumnIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NamesIndex>k__BackingField;
    public int GeneratedLineIndex { get; public set; }
    public int GeneratedColumnIndex { get; public set; }
    public Nullable`1<int> SourcesIndex { get; public set; }
    public Nullable`1<int> SourceLineIndex { get; public set; }
    public Nullable`1<int> SourceColumnIndex { get; public set; }
    public Nullable`1<int> NamesIndex { get; public set; }
    public MappingSegment(int generatedLineIndex, string encodedFields);
    [CompilerGeneratedAttribute]
public int get_GeneratedLineIndex();
    [CompilerGeneratedAttribute]
public void set_GeneratedLineIndex(int value);
    [CompilerGeneratedAttribute]
public int get_GeneratedColumnIndex();
    [CompilerGeneratedAttribute]
public void set_GeneratedColumnIndex(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_SourcesIndex();
    [CompilerGeneratedAttribute]
public void set_SourcesIndex(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_SourceLineIndex();
    [CompilerGeneratedAttribute]
public void set_SourceLineIndex(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_SourceColumnIndex();
    [CompilerGeneratedAttribute]
public void set_SourceColumnIndex(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_NamesIndex();
    [CompilerGeneratedAttribute]
public void set_NamesIndex(Nullable`1<int> value);
    private static Nullable`1<int> GetNextValue(String& encoded);
}
public class SourceMapDotNet.Model.SourceMapFile : object {
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <File>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SourceRoot>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Sources>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <SourcesContent>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Names>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Mappings>k__BackingField;
    public int Version { get; public set; }
    public string File { get; public set; }
    public string SourceRoot { get; public set; }
    public IList`1<string> Sources { get; public set; }
    public IList`1<string> SourcesContent { get; public set; }
    public IList`1<string> Names { get; public set; }
    public string Mappings { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(int value);
    [CompilerGeneratedAttribute]
public string get_File();
    [CompilerGeneratedAttribute]
public void set_File(string value);
    [CompilerGeneratedAttribute]
public string get_SourceRoot();
    [CompilerGeneratedAttribute]
public void set_SourceRoot(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Sources();
    [CompilerGeneratedAttribute]
public void set_Sources(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_SourcesContent();
    [CompilerGeneratedAttribute]
public void set_SourcesContent(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Names();
    [CompilerGeneratedAttribute]
public void set_Names(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Mappings();
    [CompilerGeneratedAttribute]
public void set_Mappings(string value);
}
public class SourceMapDotNet.Model.SourceReference : ValueType {
    [CompilerGeneratedAttribute]
private string <File>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LineNumber>k__BackingField;
    public string File { get; public set; }
    public int LineNumber { get; public set; }
    [CompilerGeneratedAttribute]
public string get_File();
    [CompilerGeneratedAttribute]
public void set_File(string value);
    [CompilerGeneratedAttribute]
public int get_LineNumber();
    [CompilerGeneratedAttribute]
public void set_LineNumber(int value);
    public virtual string ToString();
}
public class SourceMapDotNet.SourceMapConsumer : object {
    private SourceMapFile _file;
    private IList`1<MappingGroup> _mappingGroups;
    [CompilerGeneratedAttribute]
private static Func`2<MappingSegment, bool> CS$<>9__CachedAnonymousMethodDelegate3;
    public SourceMapConsumer(string sourceMapJson);
    public SourceMapConsumer(SourceMapFile file);
    public sealed virtual SourceReference[] OriginalPositionsFor(int line);
    [CompilerGeneratedAttribute]
private static bool <OriginalPositionsFor>b__1(MappingSegment x);
    [CompilerGeneratedAttribute]
private SourceReference <OriginalPositionsFor>b__2(MappingSegment x);
}
internal static class SourceMapDotNet.Util.Base64 : object {
    private static string BASE64_ALPHABET;
    private static Dictionary`2<char, byte> _decodeTable;
    private static Base64();
    private static Dictionary`2<char, byte> GetDecodeTable();
    public static byte Decode(char value);
    public static char Encode(byte value);
}
internal class SourceMapDotNet.Util.MappingDecoder : object {
    private static MappingDecoder _defaultDecoder;
    [CompilerGeneratedAttribute]
private static Func`2<MappingGroup, bool> CS$<>9__CachedAnonymousMethodDelegate5;
    public static MappingDecoder Default { get; internal set; }
    public static MappingDecoder get_Default();
    internal static void set_Default(MappingDecoder value);
    public virtual IList`1<MappingGroup> GetMappingGroups(string encoded);
    internal virtual MappingGroup GetMappingGroup(int generatedLineIndex, string encoded);
    internal virtual IList`1<MappingSegment> GetMappingSegments(int generatedLineIndex, string encoded);
    internal virtual MappingSegment GetMappingSegment(int generatedLineIndex, string encoded);
    internal static void FixUpGroupSegmentOffsets(List`1<MappingGroup> groups);
    [CompilerGeneratedAttribute]
private static bool <FixUpGroupSegmentOffsets>b__4(MappingGroup x);
}
internal class SourceMapDotNet.Util.SourceReferenceEqualityComparer : object {
    public sealed virtual bool Equals(SourceReference x, SourceReference y);
    public sealed virtual int GetHashCode(SourceReference obj);
}
internal static class SourceMapDotNet.Util.VlqDecoder : object {
    private static byte VLQ_BASE_SHIFT;
    private static byte VLQ_BASE;
    private static byte VLQ_BASE_MASK;
    private static byte VLQ_CONTINUATION_BIT;
    public static int Decode(String& encoded);
    private static int FromVlqSigned(int signedValue);
}
