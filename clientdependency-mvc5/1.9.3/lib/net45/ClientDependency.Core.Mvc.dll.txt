public class ClientDependency.Core.Mvc.CdfRazorView : RazorView {
    public CdfRazorView(ControllerContext controllerContext, string viewPath, string layoutPath, bool runViewStartPages, IEnumerable`1<string> viewStartFileExtensions);
    public CdfRazorView(ControllerContext controllerContext, string viewPath, string layoutPath, bool runViewStartPages, IEnumerable`1<string> viewStartFileExtensions, IViewPageActivator viewPageActivator);
    protected virtual void RenderView(ViewContext viewContext, TextWriter writer, object instance);
}
public class ClientDependency.Core.Mvc.CdfRazorViewEngine : RazorViewEngine {
    protected virtual IView CreatePartialView(ControllerContext controllerContext, string partialPath);
    protected virtual IView CreateView(ControllerContext controllerContext, string viewPath, string masterPath);
}
public class ClientDependency.Core.Mvc.DependencyRenderer : BaseLoader {
    public static string ContextKey;
    private static string JsMarkupRegex;
    private static string CssMarkupRegex;
    private static object Locker;
    private List`1<RendererOutput> _output;
    private DependencyRenderer(HttpContextBase ctx);
    private static DependencyRenderer();
    public static DependencyRenderer GetInstance(HttpContextBase ctx);
    internal static DependencyRenderer TryCreate(HttpContextBase ctx, Boolean& isNew);
    public string ParseHtmlPlaceholders(string html);
    internal string RenderPlaceholder(ClientDependencyType type, IEnumerable`1<IClientDependencyPath> paths);
    internal string RenderPlaceholder(ClientDependencyType type, string rendererName, IEnumerable`1<IClientDependencyPath> paths);
    private void GenerateOutput();
}
[ExtensionAttribute]
public static class ClientDependency.Core.Mvc.DependencyRendererExtensions : object {
    [ExtensionAttribute]
public static DependencyRenderer GetLoader(ViewContext vc);
    [ExtensionAttribute]
public static DependencyRenderer GetLoader(ControllerContext cc);
    [ExtensionAttribute]
public static DependencyRenderer GetLoader(HttpContextBase http);
}
[ExtensionAttribute]
public static class ClientDependency.Core.Mvc.HtmlHelperExtensions : object {
    [ExtensionAttribute]
public static void RegisterPathAlias(HtmlHelper html, string pathAlias, string virtualPath);
    [ExtensionAttribute]
public static void RegisterPathAlias(HtmlHelper html, IClientDependencyPath path);
    [ExtensionAttribute]
public static HtmlHelper RequiresJsResource(HtmlHelper html, Type resourceType, string resourcePath, int priority, int group);
    [ExtensionAttribute]
public static HtmlHelper RequiresJsResource(HtmlHelper html, Type resourceType, string resourcePath, int priority);
    [ExtensionAttribute]
public static HtmlHelper RequiresJsResource(HtmlHelper html, Type resourceType, string resourcePath);
    [ExtensionAttribute]
public static HtmlHelper RequiresCssResource(HtmlHelper html, Type resourceType, string resourcePath, int priority, int group);
    [ExtensionAttribute]
public static HtmlHelper RequiresCssResource(HtmlHelper html, Type resourceType, string resourcePath, int priority);
    [ExtensionAttribute]
public static HtmlHelper RequiresCssResource(HtmlHelper html, Type resourceType, string resourcePath);
    [ExtensionAttribute]
public static HtmlHelper RequiresJsBundle(HtmlHelper html, string bundleName);
    [ExtensionAttribute]
public static HtmlHelper RequiresJs(HtmlHelper html, IClientDependencyFile file, object htmlAttributes);
    [ExtensionAttribute]
public static HtmlHelper RequiresJs(HtmlHelper html, string filePath);
    [ExtensionAttribute]
public static HtmlHelper RequiresJs(HtmlHelper html, string filePath, string pathNameAlias);
    [ExtensionAttribute]
public static HtmlHelper RequiresJs(HtmlHelper html, string filePath, string pathNameAlias, int priority);
    [ExtensionAttribute]
public static HtmlHelper RequiresJs(HtmlHelper html, string filePath, string pathNameAlias, int priority, int group);
    [ExtensionAttribute]
public static HtmlHelper RequiresJs(HtmlHelper html, string filePath, int priority);
    [ExtensionAttribute]
public static HtmlHelper RequiresJs(HtmlHelper html, string filePath, int priority, int group);
    [ExtensionAttribute]
public static HtmlHelper RequiresJs(HtmlHelper html, string filePath, object htmlAttributes);
    [ExtensionAttribute]
public static HtmlHelper RequiresJs(HtmlHelper html, string filePath, string pathNameAlias, object htmlAttributes);
    [ExtensionAttribute]
public static HtmlHelper RequiresJs(HtmlHelper html, string filePath, string pathNameAlias, int priority, object htmlAttributes);
    [ExtensionAttribute]
public static HtmlHelper RequiresJs(HtmlHelper html, string filePath, string pathNameAlias, int priority, int group, object htmlAttributes);
    [ExtensionAttribute]
public static HtmlHelper RequiresJs(HtmlHelper html, string filePath, int priority, object htmlAttributes);
    [ExtensionAttribute]
public static HtmlHelper RequiresJs(HtmlHelper html, string filePath, int priority, int group, object htmlAttributes);
    [ExtensionAttribute]
public static HtmlHelper RequiresCssBundle(HtmlHelper html, string bundleName);
    [ExtensionAttribute]
public static HtmlHelper RequiresCss(HtmlHelper html, IClientDependencyFile file, object htmlAttributes);
    [ExtensionAttribute]
public static HtmlHelper RequiresCss(HtmlHelper html, string filePath);
    [ExtensionAttribute]
public static HtmlHelper RequiresCss(HtmlHelper html, string filePath, string pathNameAlias);
    [ExtensionAttribute]
public static HtmlHelper RequiresCss(HtmlHelper html, string filePath, string pathNameAlias, int priority);
    [ExtensionAttribute]
public static HtmlHelper RequiresCss(HtmlHelper html, string filePath, string pathNameAlias, int priority, int group);
    [ExtensionAttribute]
public static HtmlHelper RequiresCss(HtmlHelper html, string filePath, int priority);
    [ExtensionAttribute]
public static HtmlHelper RequiresCss(HtmlHelper html, string filePath, int priority, int group);
    [ExtensionAttribute]
public static HtmlHelper RequiresCss(HtmlHelper html, string filePath, object htmlAttributes);
    [ExtensionAttribute]
public static HtmlHelper RequiresCss(HtmlHelper html, string filePath, string pathNameAlias, object htmlAttributes);
    [ExtensionAttribute]
public static HtmlHelper RequiresCss(HtmlHelper html, string filePath, string pathNameAlias, int priority, object htmlAttributes);
    [ExtensionAttribute]
public static HtmlHelper RequiresCss(HtmlHelper html, string filePath, string pathNameAlias, int priority, int group, object htmlAttributes);
    [ExtensionAttribute]
public static HtmlHelper RequiresCss(HtmlHelper html, string filePath, int priority, object htmlAttributes);
    [ExtensionAttribute]
public static HtmlHelper RequiresCss(HtmlHelper html, string filePath, int priority, int group, object htmlAttributes);
    [ExtensionAttribute]
public static IHtmlString RenderJsHere(HtmlHelper html);
    [ExtensionAttribute]
public static IHtmlString RenderJsHere(HtmlHelper html, IClientDependencyPath[] path);
    [ExtensionAttribute]
public static IHtmlString RenderJsHere(HtmlHelper html, IEnumerable`1<IClientDependencyPath> paths);
    [ExtensionAttribute]
public static IHtmlString RenderJsHere(HtmlHelper html, string rendererName, IEnumerable`1<IClientDependencyPath> paths);
    [ExtensionAttribute]
public static IHtmlString RenderJsHere(HtmlHelper html, string rendererName);
    [ExtensionAttribute]
public static IHtmlString RenderCssHere(HtmlHelper html);
    [ExtensionAttribute]
public static IHtmlString RenderCssHere(HtmlHelper html, IClientDependencyPath[] path);
    [ExtensionAttribute]
public static IHtmlString RenderCssHere(HtmlHelper html, IEnumerable`1<IClientDependencyPath> paths);
    [ExtensionAttribute]
public static IHtmlString RenderCssHere(HtmlHelper html, string rendererName, IEnumerable`1<IClientDependencyPath> paths);
    [ExtensionAttribute]
public static IHtmlString RenderCssHere(HtmlHelper html, string rendererName, IClientDependencyPath[] paths);
    [ExtensionAttribute]
public static HtmlHelper RequiresJsFolder(HtmlHelper html, string folderPath, string searchFilter);
    [ExtensionAttribute]
public static HtmlHelper RequiresJsFolder(HtmlHelper html, string folderPath, string searchFilter, int priority);
    [ExtensionAttribute]
public static HtmlHelper RequiresJsFolder(HtmlHelper html, string folderPath, string searchFilter, int priority, int group);
    [ExtensionAttribute]
public static HtmlHelper RequiresJsFolder(HtmlHelper html, string folderPath, string searchFilter, int priority, int group, object htmlAttributes);
    [ExtensionAttribute]
public static HtmlHelper RequiresJsFolder(HtmlHelper html, string folderPath, string searchFilter, int priority, int group, object htmlAttributes, string forcedProvider);
    [ExtensionAttribute]
public static HtmlHelper RequiresJsFolder(HtmlHelper html, string folderPath, string searchFilter, int priority, object htmlAttributes);
    [ExtensionAttribute]
public static HtmlHelper RequiresJsFolder(HtmlHelper html, string folderPath, string searchFilter, object htmlAttributes);
    [ExtensionAttribute]
public static HtmlHelper RequiresJsFolder(HtmlHelper html, string folderPath);
    [ExtensionAttribute]
public static HtmlHelper RequiresJsFolder(HtmlHelper html, string folderPath, int priority);
    [ExtensionAttribute]
public static HtmlHelper RequiresJsFolder(HtmlHelper html, string folderPath, int priority, int group);
    [ExtensionAttribute]
public static HtmlHelper RequiresJsFolder(HtmlHelper html, string folderPath, int priority, int group, object htmlAttributes);
    [ExtensionAttribute]
public static HtmlHelper RequiresJsFolder(HtmlHelper html, string folderPath, int priority, object htmlAttributes);
    [ExtensionAttribute]
public static HtmlHelper RequiresJsFolder(HtmlHelper html, string folderPath, object htmlAttributes);
    [ExtensionAttribute]
public static HtmlHelper RequiresCssFolder(HtmlHelper html, string folderPath, string searchFilter);
    [ExtensionAttribute]
public static HtmlHelper RequiresCssFolder(HtmlHelper html, string folderPath, string searchFilter, int priority);
    [ExtensionAttribute]
public static HtmlHelper RequiresCssFolder(HtmlHelper html, string folderPath, string searchFilter, int priority, int group);
    [ExtensionAttribute]
public static HtmlHelper RequiresCssFolder(HtmlHelper html, string folderPath, string searchFilter, int priority, int group, object htmlAttributes);
    [ExtensionAttribute]
public static HtmlHelper RequiresCssFolder(HtmlHelper html, string folderPath, string searchFilter, int priority, int group, object htmlAttributes, string forcedProvider);
    [ExtensionAttribute]
public static HtmlHelper RequiresCssFolder(HtmlHelper html, string folderPath, string searchFilter, int priority, object htmlAttributes);
    [ExtensionAttribute]
public static HtmlHelper RequiresCssFolder(HtmlHelper html, string folderPath, string searchFilter, object htmlAttributes);
    [ExtensionAttribute]
public static HtmlHelper RequiresCssFolder(HtmlHelper html, string folderPath);
    [ExtensionAttribute]
public static HtmlHelper RequiresCssFolder(HtmlHelper html, string folderPath, int priority);
    [ExtensionAttribute]
public static HtmlHelper RequiresCssFolder(HtmlHelper html, string folderPath, int priority, int group);
    [ExtensionAttribute]
public static HtmlHelper RequiresCssFolder(HtmlHelper html, string folderPath, int priority, int group, object htmlAttributes);
    [ExtensionAttribute]
public static HtmlHelper RequiresCssFolder(HtmlHelper html, string folderPath, int priority, object htmlAttributes);
    [ExtensionAttribute]
public static HtmlHelper RequiresCssFolder(HtmlHelper html, string folderPath, object htmlAttributes);
    [ExtensionAttribute]
private static HtmlHelper RequiresFolder(HtmlHelper html, string folderPath, string fileSearch, Action`1<string> requiresAction);
}
public class ClientDependency.Core.Mvc.MvcFilter : object {
    private MvcRogueFileFilter _rogueFileFilter;
    [CompilerGeneratedAttribute]
private HttpContextBase <CurrentContext>k__BackingField;
    public HttpContextBase CurrentContext { get; private set; }
    public sealed virtual void SetHttpContext(HttpContextBase ctx);
    public virtual bool CanExecute();
    public virtual bool ValidateCurrentHandler();
    public sealed virtual string UpdateOutputHtml(string html);
    [CompilerGeneratedAttribute]
public sealed virtual HttpContextBase get_CurrentContext();
    [CompilerGeneratedAttribute]
private void set_CurrentContext(HttpContextBase value);
    protected virtual bool IsCompressibleContentType(HttpResponseBase response);
}
internal class ClientDependency.Core.Mvc.MvcRogueFileFilter : RogueFileFilter {
    public virtual bool ValidateCurrentHandler();
}
public class ClientDependency.Core.Mvc.PlaceholderReplacer : object {
    private TextWriter _originalWriter;
    private HttpContextBase _httpContext;
    private StringWriter _writer;
    public TextWriter Writer { get; }
    public PlaceholderReplacer(TextWriter originalWriter, HttpContextBase httpContext);
    public TextWriter get_Writer();
    private void PerformReplacements();
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
}
[ExtensionAttribute]
public static class ClientDependency.Core.Mvc.ViewEnginesExtensions : object {
    [ExtensionAttribute]
public static void ReplaceDefaultRazorEngine(ViewEngineCollection engines, IViewEngine replacement);
    [ExtensionAttribute]
public static void ReplaceEngine(ViewEngineCollection engines, IViewEngine replacement);
}
