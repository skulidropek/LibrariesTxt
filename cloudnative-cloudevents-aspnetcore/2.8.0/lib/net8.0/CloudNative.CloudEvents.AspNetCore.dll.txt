[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class CloudNative.CloudEvents.AspNetCore.HttpRequestExtensions : object {
    [ExtensionAttribute]
public static bool IsCloudEvent(HttpRequest httpRequest);
    [ExtensionAttribute]
public static bool IsCloudEventBatch(HttpRequest httpRequest);
    [ExtensionAttribute]
public static Task`1<CloudEvent> ToCloudEventAsync(HttpRequest httpRequest, CloudEventFormatter formatter, CloudEventAttribute[] extensionAttributes);
    [AsyncStateMachineAttribute("CloudNative.CloudEvents.AspNetCore.HttpRequestExtensions/<ToCloudEventAsync>d__3")]
[ExtensionAttribute]
public static Task`1<CloudEvent> ToCloudEventAsync(HttpRequest httpRequest, CloudEventFormatter formatter, IEnumerable`1<CloudEventAttribute> extensionAttributes);
    [ExtensionAttribute]
public static Task`1<IReadOnlyList`1<CloudEvent>> ToCloudEventBatchAsync(HttpRequest httpRequest, CloudEventFormatter formatter, CloudEventAttribute[] extensionAttributes);
    [AsyncStateMachineAttribute("CloudNative.CloudEvents.AspNetCore.HttpRequestExtensions/<ToCloudEventBatchAsync>d__5")]
[ExtensionAttribute]
public static Task`1<IReadOnlyList`1<CloudEvent>> ToCloudEventBatchAsync(HttpRequest httpRequest, CloudEventFormatter formatter, IEnumerable`1<CloudEventAttribute> extensionAttributes);
    private static bool HasCloudEventsContentType(HttpRequest request);
    private static bool HasCloudEventsBatchContentType(HttpRequest request);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class CloudNative.CloudEvents.AspNetCore.HttpResponseExtensions : object {
    [AsyncStateMachineAttribute("CloudNative.CloudEvents.AspNetCore.HttpResponseExtensions/<CopyToHttpResponseAsync>d__0")]
[ExtensionAttribute]
public static Task CopyToHttpResponseAsync(CloudEvent cloudEvent, HttpResponse destination, ContentMode contentMode, CloudEventFormatter formatter);
    [AsyncStateMachineAttribute("CloudNative.CloudEvents.AspNetCore.HttpResponseExtensions/<CopyToHttpResponseAsync>d__1")]
[ExtensionAttribute]
public static Task CopyToHttpResponseAsync(IReadOnlyList`1<CloudEvent> cloudEvents, HttpResponse destination, CloudEventFormatter formatter);
}
