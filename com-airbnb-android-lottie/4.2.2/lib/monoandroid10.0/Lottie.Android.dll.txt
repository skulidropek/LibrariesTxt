internal class _JniMarshal_PP_D : MulticastDelegate {
    public _JniMarshal_PP_D(object object, IntPtr method);
    public virtual double Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual double EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_F : MulticastDelegate {
    public _JniMarshal_PP_F(object object, IntPtr method);
    public virtual float Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual float EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_I : MulticastDelegate {
    public _JniMarshal_PP_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_J : MulticastDelegate {
    public _JniMarshal_PP_J(object object, IntPtr method);
    public virtual long Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual long EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_L : MulticastDelegate {
    public _JniMarshal_PP_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_V : MulticastDelegate {
    public _JniMarshal_PP_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_Z : MulticastDelegate {
    public _JniMarshal_PP_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPF_L : MulticastDelegate {
    public _JniMarshal_PPF_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, float p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, float p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPF_V : MulticastDelegate {
    public _JniMarshal_PPF_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, float p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, float p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPF_Z : MulticastDelegate {
    public _JniMarshal_PPF_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, float p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, float p0, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPFF_V : MulticastDelegate {
    public _JniMarshal_PPFF_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, float p0, float p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, float p0, float p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPFF_Z : MulticastDelegate {
    public _JniMarshal_PPFF_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, float p0, float p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, float p0, float p1, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPFFLLFFF_L : MulticastDelegate {
    public _JniMarshal_PPFFLLFFF_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, float p0, float p1, IntPtr p2, IntPtr p3, float p4, float p5, float p6);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, float p0, float p1, IntPtr p2, IntPtr p3, float p4, float p5, float p6, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPI_V : MulticastDelegate {
    public _JniMarshal_PPI_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPII_V : MulticastDelegate {
    public _JniMarshal_PPII_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPJ_L : MulticastDelegate {
    public _JniMarshal_PPJ_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, long p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, long p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPJ_V : MulticastDelegate {
    public _JniMarshal_PPJ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, long p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, long p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_I : MulticastDelegate {
    public _JniMarshal_PPL_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_L : MulticastDelegate {
    public _JniMarshal_PPL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_V : MulticastDelegate {
    public _JniMarshal_PPL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_Z : MulticastDelegate {
    public _JniMarshal_PPL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLF_V : MulticastDelegate {
    public _JniMarshal_PPLF_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, float p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, float p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLFFFLLLLLLL_V : MulticastDelegate {
    public _JniMarshal_PPLFFFLLLLLLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, float p1, float p2, float p3, IntPtr p4, IntPtr p5, IntPtr p6, IntPtr p7, IntPtr p8, IntPtr p9, IntPtr p10);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, float p1, float p2, float p3, IntPtr p4, IntPtr p5, IntPtr p6, IntPtr p7, IntPtr p8, IntPtr p9, IntPtr p10, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLI_I : MulticastDelegate {
    public _JniMarshal_PPLI_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLI_Z : MulticastDelegate {
    public _JniMarshal_PPLI_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLILL_V : MulticastDelegate {
    public _JniMarshal_PPLILL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, IntPtr p2, IntPtr p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, IntPtr p2, IntPtr p3, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLL_L : MulticastDelegate {
    public _JniMarshal_PPLL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLL_V : MulticastDelegate {
    public _JniMarshal_PPLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLL_Z : MulticastDelegate {
    public _JniMarshal_PPLL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLF_V : MulticastDelegate {
    public _JniMarshal_PPLLF_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, float p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, float p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLI_V : MulticastDelegate {
    public _JniMarshal_PPLLI_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, int p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, int p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLJ_V : MulticastDelegate {
    public _JniMarshal_PPLLJ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, long p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, long p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLL_V : MulticastDelegate {
    public _JniMarshal_PPLLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLZ_V : MulticastDelegate {
    public _JniMarshal_PPLLZ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, bool p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, bool p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPZ_V : MulticastDelegate {
    public _JniMarshal_PPZ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, bool p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, bool p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[RegisterAttribute("com/airbnb/lottie/animation/content/BaseStrokeContent")]
public abstract class Com.Airbnb.Lottie.Animation.Content.BaseStrokeContent : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_addValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_;
    private static Delegate cb_draw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_I;
    private static Delegate cb_getBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_Z;
    private static Delegate cb_onValueChanged;
    private static Delegate cb_resolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_;
    private static Delegate cb_setContents_Ljava_util_List_Ljava_util_List_;
    private static Delegate cb_getName;
    [RegisterAttribute("layer")]
protected BaseLayer Layer { get; protected set; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Name { get; }
    protected BaseStrokeContent(IntPtr javaReference, JniHandleOwnership transfer);
    private static BaseStrokeContent();
    protected BaseLayer get_Layer();
    protected void set_Layer(BaseLayer value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler();
    private static void n_AddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_property, IntPtr native__callback);
    [RegisterAttribute("addValueCallback", "(Ljava/lang/Object;Lcom/airbnb/lottie/value/LottieValueCallback;)V", "GetAddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void AddValueCallback(Object property, LottieValueCallback callback);
    private static Delegate GetDraw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_IHandler();
    private static void n_Draw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_I(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas, IntPtr native_parentMatrix, int parentAlpha);
    [RegisterAttribute("draw", "(Landroid/graphics/Canvas;Landroid/graphics/Matrix;I)V", "GetDraw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_IHandler")]
public virtual void Draw(Canvas canvas, Matrix parentMatrix, int parentAlpha);
    private static Delegate GetGetBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_ZHandler();
    private static void n_GetBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_outBounds, IntPtr native_parentMatrix, bool applyParents);
    [RegisterAttribute("getBounds", "(Landroid/graphics/RectF;Landroid/graphics/Matrix;Z)V", "GetGetBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_ZHandler")]
public virtual void GetBounds(RectF outBounds, Matrix parentMatrix, bool applyParents);
    private static Delegate GetOnValueChangedHandler();
    private static void n_OnValueChanged(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onValueChanged", "()V", "GetOnValueChangedHandler")]
public virtual void OnValueChanged();
    private static Delegate GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler();
    private static void n_ResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_(IntPtr jnienv, IntPtr native__this, IntPtr native_keyPath, int depth, IntPtr native_accumulator, IntPtr native_currentPartialKeyPath);
    [RegisterAttribute("resolveKeyPath", "(Lcom/airbnb/lottie/model/KeyPath;ILjava/util/List;Lcom/airbnb/lottie/model/KeyPath;)V", "GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler")]
public virtual void ResolveKeyPath(KeyPath keyPath, int depth, IList`1<KeyPath> accumulator, KeyPath currentPartialKeyPath);
    private static Delegate GetSetContents_Ljava_util_List_Ljava_util_List_Handler();
    private static void n_SetContents_Ljava_util_List_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_contentsBefore, IntPtr native_contentsAfter);
    [RegisterAttribute("setContents", "(Ljava/util/List;Ljava/util/List;)V", "GetSetContents_Ljava_util_List_Ljava_util_List_Handler")]
public virtual void SetContents(IList`1<IContent> contentsBefore, IList`1<IContent> contentsAfter);
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public abstract virtual string get_Name();
}
[RegisterAttribute("com/airbnb/lottie/animation/content/BaseStrokeContent")]
internal class Com.Airbnb.Lottie.Animation.Content.BaseStrokeContentInvoker : BaseStrokeContent {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Name { get; }
    public BaseStrokeContentInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static BaseStrokeContentInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
}
[RegisterAttribute("com/airbnb/lottie/animation/content/CompoundTrimPathContent")]
public class Com.Airbnb.Lottie.Animation.Content.CompoundTrimPathContent : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_apply_Landroid_graphics_Path_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected CompoundTrimPathContent(IntPtr javaReference, JniHandleOwnership transfer);
    private static CompoundTrimPathContent();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetApply_Landroid_graphics_Path_Handler();
    private static void n_Apply_Landroid_graphics_Path_(IntPtr jnienv, IntPtr native__this, IntPtr native_path);
    [RegisterAttribute("apply", "(Landroid/graphics/Path;)V", "GetApply_Landroid_graphics_Path_Handler")]
public virtual void Apply(Path path);
}
[RegisterAttribute("com/airbnb/lottie/animation/content/ContentGroup")]
public class Com.Airbnb.Lottie.Animation.Content.ContentGroup : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getName;
    private static Delegate cb_getPath;
    private static Delegate cb_addValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_;
    private static Delegate cb_draw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_I;
    private static Delegate cb_getBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_Z;
    private static Delegate cb_onValueChanged;
    private static Delegate cb_resolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_;
    private static Delegate cb_setContents_Ljava_util_List_Ljava_util_List_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Name { get; }
    public Path Path { get; }
    protected ContentGroup(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;Lcom/airbnb/lottie/model/content/ShapeGroup;)V", "")]
public ContentGroup(LottieDrawable lottieDrawable, BaseLayer layer, ShapeGroup shapeGroup);
    private static ContentGroup();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    private static Delegate GetGetPathHandler();
    private static IntPtr n_GetPath(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getPath", "()Landroid/graphics/Path;", "GetGetPathHandler")]
public virtual Path get_Path();
    private static Delegate GetAddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler();
    private static void n_AddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_property, IntPtr native__callback);
    [RegisterAttribute("addValueCallback", "(Ljava/lang/Object;Lcom/airbnb/lottie/value/LottieValueCallback;)V", "GetAddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void AddValueCallback(Object property, LottieValueCallback callback);
    private static Delegate GetDraw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_IHandler();
    private static void n_Draw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_I(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas, IntPtr native_parentMatrix, int parentAlpha);
    [RegisterAttribute("draw", "(Landroid/graphics/Canvas;Landroid/graphics/Matrix;I)V", "GetDraw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_IHandler")]
public virtual void Draw(Canvas canvas, Matrix parentMatrix, int parentAlpha);
    private static Delegate GetGetBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_ZHandler();
    private static void n_GetBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_outBounds, IntPtr native_parentMatrix, bool applyParents);
    [RegisterAttribute("getBounds", "(Landroid/graphics/RectF;Landroid/graphics/Matrix;Z)V", "GetGetBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_ZHandler")]
public virtual void GetBounds(RectF outBounds, Matrix parentMatrix, bool applyParents);
    private static Delegate GetOnValueChangedHandler();
    private static void n_OnValueChanged(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onValueChanged", "()V", "GetOnValueChangedHandler")]
public virtual void OnValueChanged();
    private static Delegate GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler();
    private static void n_ResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_(IntPtr jnienv, IntPtr native__this, IntPtr native_keyPath, int depth, IntPtr native_accumulator, IntPtr native_currentPartialKeyPath);
    [RegisterAttribute("resolveKeyPath", "(Lcom/airbnb/lottie/model/KeyPath;ILjava/util/List;Lcom/airbnb/lottie/model/KeyPath;)V", "GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler")]
public virtual void ResolveKeyPath(KeyPath keyPath, int depth, IList`1<KeyPath> accumulator, KeyPath currentPartialKeyPath);
    private static Delegate GetSetContents_Ljava_util_List_Ljava_util_List_Handler();
    private static void n_SetContents_Ljava_util_List_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_contentsBefore, IntPtr native_contentsAfter);
    [RegisterAttribute("setContents", "(Ljava/util/List;Ljava/util/List;)V", "GetSetContents_Ljava_util_List_Ljava_util_List_Handler")]
public virtual void SetContents(IList`1<IContent> contentsBefore, IList`1<IContent> contentsAfter);
}
[RegisterAttribute("com/airbnb/lottie/animation/content/EllipseContent")]
public class Com.Airbnb.Lottie.Animation.Content.EllipseContent : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getName;
    private static Delegate cb_getPath;
    private static Delegate cb_addValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_;
    private static Delegate cb_onValueChanged;
    private static Delegate cb_resolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_;
    private static Delegate cb_setContents_Ljava_util_List_Ljava_util_List_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Name { get; }
    public Path Path { get; }
    protected EllipseContent(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;Lcom/airbnb/lottie/model/content/CircleShape;)V", "")]
public EllipseContent(LottieDrawable lottieDrawable, BaseLayer layer, CircleShape circleShape);
    private static EllipseContent();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    private static Delegate GetGetPathHandler();
    private static IntPtr n_GetPath(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getPath", "()Landroid/graphics/Path;", "GetGetPathHandler")]
public virtual Path get_Path();
    private static Delegate GetAddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler();
    private static void n_AddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_property, IntPtr native__callback);
    [RegisterAttribute("addValueCallback", "(Ljava/lang/Object;Lcom/airbnb/lottie/value/LottieValueCallback;)V", "GetAddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void AddValueCallback(Object property, LottieValueCallback callback);
    private static Delegate GetOnValueChangedHandler();
    private static void n_OnValueChanged(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onValueChanged", "()V", "GetOnValueChangedHandler")]
public virtual void OnValueChanged();
    private static Delegate GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler();
    private static void n_ResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_(IntPtr jnienv, IntPtr native__this, IntPtr native_keyPath, int depth, IntPtr native_accumulator, IntPtr native_currentPartialKeyPath);
    [RegisterAttribute("resolveKeyPath", "(Lcom/airbnb/lottie/model/KeyPath;ILjava/util/List;Lcom/airbnb/lottie/model/KeyPath;)V", "GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler")]
public virtual void ResolveKeyPath(KeyPath keyPath, int depth, IList`1<KeyPath> accumulator, KeyPath currentPartialKeyPath);
    private static Delegate GetSetContents_Ljava_util_List_Ljava_util_List_Handler();
    private static void n_SetContents_Ljava_util_List_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_contentsBefore, IntPtr native_contentsAfter);
    [RegisterAttribute("setContents", "(Ljava/util/List;Ljava/util/List;)V", "GetSetContents_Ljava_util_List_Ljava_util_List_Handler")]
public virtual void SetContents(IList`1<IContent> contentsBefore, IList`1<IContent> contentsAfter);
}
[RegisterAttribute("com/airbnb/lottie/animation/content/FillContent")]
public class Com.Airbnb.Lottie.Animation.Content.FillContent : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getName;
    private static Delegate cb_addValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_;
    private static Delegate cb_draw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_I;
    private static Delegate cb_getBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_Z;
    private static Delegate cb_onValueChanged;
    private static Delegate cb_resolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_;
    private static Delegate cb_setContents_Ljava_util_List_Ljava_util_List_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Name { get; }
    protected FillContent(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;Lcom/airbnb/lottie/model/content/ShapeFill;)V", "")]
public FillContent(LottieDrawable lottieDrawable, BaseLayer layer, ShapeFill fill);
    private static FillContent();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    private static Delegate GetAddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler();
    private static void n_AddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_property, IntPtr native__callback);
    [RegisterAttribute("addValueCallback", "(Ljava/lang/Object;Lcom/airbnb/lottie/value/LottieValueCallback;)V", "GetAddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void AddValueCallback(Object property, LottieValueCallback callback);
    private static Delegate GetDraw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_IHandler();
    private static void n_Draw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_I(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas, IntPtr native_parentMatrix, int parentAlpha);
    [RegisterAttribute("draw", "(Landroid/graphics/Canvas;Landroid/graphics/Matrix;I)V", "GetDraw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_IHandler")]
public virtual void Draw(Canvas canvas, Matrix parentMatrix, int parentAlpha);
    private static Delegate GetGetBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_ZHandler();
    private static void n_GetBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_outBounds, IntPtr native_parentMatrix, bool applyParents);
    [RegisterAttribute("getBounds", "(Landroid/graphics/RectF;Landroid/graphics/Matrix;Z)V", "GetGetBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_ZHandler")]
public virtual void GetBounds(RectF outBounds, Matrix parentMatrix, bool applyParents);
    private static Delegate GetOnValueChangedHandler();
    private static void n_OnValueChanged(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onValueChanged", "()V", "GetOnValueChangedHandler")]
public virtual void OnValueChanged();
    private static Delegate GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler();
    private static void n_ResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_(IntPtr jnienv, IntPtr native__this, IntPtr native_keyPath, int depth, IntPtr native_accumulator, IntPtr native_currentPartialKeyPath);
    [RegisterAttribute("resolveKeyPath", "(Lcom/airbnb/lottie/model/KeyPath;ILjava/util/List;Lcom/airbnb/lottie/model/KeyPath;)V", "GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler")]
public virtual void ResolveKeyPath(KeyPath keyPath, int depth, IList`1<KeyPath> accumulator, KeyPath currentPartialKeyPath);
    private static Delegate GetSetContents_Ljava_util_List_Ljava_util_List_Handler();
    private static void n_SetContents_Ljava_util_List_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_contentsBefore, IntPtr native_contentsAfter);
    [RegisterAttribute("setContents", "(Ljava/util/List;Ljava/util/List;)V", "GetSetContents_Ljava_util_List_Ljava_util_List_Handler")]
public virtual void SetContents(IList`1<IContent> contentsBefore, IList`1<IContent> contentsAfter);
}
[RegisterAttribute("com/airbnb/lottie/animation/content/GradientFillContent")]
public class Com.Airbnb.Lottie.Animation.Content.GradientFillContent : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getName;
    private static Delegate cb_addValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_;
    private static Delegate cb_draw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_I;
    private static Delegate cb_getBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_Z;
    private static Delegate cb_onValueChanged;
    private static Delegate cb_resolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_;
    private static Delegate cb_setContents_Ljava_util_List_Ljava_util_List_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Name { get; }
    protected GradientFillContent(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;Lcom/airbnb/lottie/model/content/GradientFill;)V", "")]
public GradientFillContent(LottieDrawable lottieDrawable, BaseLayer layer, GradientFill fill);
    private static GradientFillContent();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    private static Delegate GetAddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler();
    private static void n_AddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_property, IntPtr native__callback);
    [RegisterAttribute("addValueCallback", "(Ljava/lang/Object;Lcom/airbnb/lottie/value/LottieValueCallback;)V", "GetAddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void AddValueCallback(Object property, LottieValueCallback callback);
    private static Delegate GetDraw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_IHandler();
    private static void n_Draw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_I(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas, IntPtr native_parentMatrix, int parentAlpha);
    [RegisterAttribute("draw", "(Landroid/graphics/Canvas;Landroid/graphics/Matrix;I)V", "GetDraw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_IHandler")]
public virtual void Draw(Canvas canvas, Matrix parentMatrix, int parentAlpha);
    private static Delegate GetGetBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_ZHandler();
    private static void n_GetBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_outBounds, IntPtr native_parentMatrix, bool applyParents);
    [RegisterAttribute("getBounds", "(Landroid/graphics/RectF;Landroid/graphics/Matrix;Z)V", "GetGetBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_ZHandler")]
public virtual void GetBounds(RectF outBounds, Matrix parentMatrix, bool applyParents);
    private static Delegate GetOnValueChangedHandler();
    private static void n_OnValueChanged(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onValueChanged", "()V", "GetOnValueChangedHandler")]
public virtual void OnValueChanged();
    private static Delegate GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler();
    private static void n_ResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_(IntPtr jnienv, IntPtr native__this, IntPtr native_keyPath, int depth, IntPtr native_accumulator, IntPtr native_currentPartialKeyPath);
    [RegisterAttribute("resolveKeyPath", "(Lcom/airbnb/lottie/model/KeyPath;ILjava/util/List;Lcom/airbnb/lottie/model/KeyPath;)V", "GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler")]
public virtual void ResolveKeyPath(KeyPath keyPath, int depth, IList`1<KeyPath> accumulator, KeyPath currentPartialKeyPath);
    private static Delegate GetSetContents_Ljava_util_List_Ljava_util_List_Handler();
    private static void n_SetContents_Ljava_util_List_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_contentsBefore, IntPtr native_contentsAfter);
    [RegisterAttribute("setContents", "(Ljava/util/List;Ljava/util/List;)V", "GetSetContents_Ljava_util_List_Ljava_util_List_Handler")]
public virtual void SetContents(IList`1<IContent> contentsBefore, IList`1<IContent> contentsAfter);
}
[RegisterAttribute("com/airbnb/lottie/animation/content/GradientStrokeContent")]
public class Com.Airbnb.Lottie.Animation.Content.GradientStrokeContent : BaseStrokeContent {
    private static JniPeerMembers _members;
    private static Delegate cb_getName;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Name { get; }
    protected GradientStrokeContent(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;Lcom/airbnb/lottie/model/content/GradientStroke;)V", "")]
public GradientStrokeContent(LottieDrawable lottieDrawable, BaseLayer layer, GradientStroke stroke);
    private static GradientStrokeContent();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
}
[RegisterAttribute("com/airbnb/lottie/animation/content/Content", "", "Com.Airbnb.Lottie.Animation.Content.IContentInvoker")]
public interface Com.Airbnb.Lottie.Animation.Content.IContent {
    public string Name { get; }
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler:Com.Airbnb.Lottie.Animation.Content.IContentInvoker, Lottie.Android")]
public abstract virtual string get_Name();
    [RegisterAttribute("setContents", "(Ljava/util/List;Ljava/util/List;)V", "GetSetContents_Ljava_util_List_Ljava_util_List_Handler:Com.Airbnb.Lottie.Animation.Content.IContentInvoker, Lottie.Android")]
public abstract virtual void SetContents(IList`1<IContent> contentsBefore, IList`1<IContent> contentsAfter);
}
[RegisterAttribute("com/airbnb/lottie/animation/content/Content")]
internal class Com.Airbnb.Lottie.Animation.Content.IContentInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_getName;
    private IntPtr id_getName;
    private static Delegate cb_setContents_Ljava_util_List_Ljava_util_List_;
    private IntPtr id_setContents_Ljava_util_List_Ljava_util_List_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Name { get; }
    public IContentInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IContentInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IContent GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    public sealed virtual string get_Name();
    private static Delegate GetSetContents_Ljava_util_List_Ljava_util_List_Handler();
    private static void n_SetContents_Ljava_util_List_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_contentsBefore, IntPtr native_contentsAfter);
    public sealed virtual void SetContents(IList`1<IContent> contentsBefore, IList`1<IContent> contentsAfter);
}
[RegisterAttribute("com/airbnb/lottie/animation/content/DrawingContent", "", "Com.Airbnb.Lottie.Animation.Content.IDrawingContentInvoker")]
public interface Com.Airbnb.Lottie.Animation.Content.IDrawingContent {
    [RegisterAttribute("draw", "(Landroid/graphics/Canvas;Landroid/graphics/Matrix;I)V", "GetDraw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_IHandler:Com.Airbnb.Lottie.Animation.Content.IDrawingContentInvoker, Lottie.Android")]
public abstract virtual void Draw(Canvas canvas, Matrix parentMatrix, int alpha);
    [RegisterAttribute("getBounds", "(Landroid/graphics/RectF;Landroid/graphics/Matrix;Z)V", "GetGetBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_ZHandler:Com.Airbnb.Lottie.Animation.Content.IDrawingContentInvoker, Lottie.Android")]
public abstract virtual void GetBounds(RectF outBounds, Matrix parentMatrix, bool applyParents);
}
[RegisterAttribute("com/airbnb/lottie/animation/content/DrawingContent")]
internal class Com.Airbnb.Lottie.Animation.Content.IDrawingContentInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_draw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_I;
    private IntPtr id_draw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_I;
    private static Delegate cb_getBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_Z;
    private IntPtr id_getBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_Z;
    private static Delegate cb_getName;
    private IntPtr id_getName;
    private static Delegate cb_setContents_Ljava_util_List_Ljava_util_List_;
    private IntPtr id_setContents_Ljava_util_List_Ljava_util_List_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Name { get; }
    public IDrawingContentInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IDrawingContentInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IDrawingContent GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetDraw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_IHandler();
    private static void n_Draw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_I(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas, IntPtr native_parentMatrix, int alpha);
    public sealed virtual void Draw(Canvas canvas, Matrix parentMatrix, int alpha);
    private static Delegate GetGetBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_ZHandler();
    private static void n_GetBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_outBounds, IntPtr native_parentMatrix, bool applyParents);
    public sealed virtual void GetBounds(RectF outBounds, Matrix parentMatrix, bool applyParents);
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    public sealed virtual string get_Name();
    private static Delegate GetSetContents_Ljava_util_List_Ljava_util_List_Handler();
    private static void n_SetContents_Ljava_util_List_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_contentsBefore, IntPtr native_contentsAfter);
    public sealed virtual void SetContents(IList`1<IContent> contentsBefore, IList`1<IContent> contentsAfter);
}
[RegisterAttribute("com/airbnb/lottie/animation/content/KeyPathElementContent", "", "Com.Airbnb.Lottie.Animation.Content.IKeyPathElementContentInvoker")]
public interface Com.Airbnb.Lottie.Animation.Content.IKeyPathElementContent {
}
[RegisterAttribute("com/airbnb/lottie/animation/content/KeyPathElementContent")]
internal class Com.Airbnb.Lottie.Animation.Content.IKeyPathElementContentInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_getName;
    private IntPtr id_getName;
    private static Delegate cb_setContents_Ljava_util_List_Ljava_util_List_;
    private IntPtr id_setContents_Ljava_util_List_Ljava_util_List_;
    private static Delegate cb_addValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_;
    private IntPtr id_addValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_;
    private static Delegate cb_resolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_;
    private IntPtr id_resolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Name { get; }
    public IKeyPathElementContentInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IKeyPathElementContentInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IKeyPathElementContent GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    public sealed virtual string get_Name();
    private static Delegate GetSetContents_Ljava_util_List_Ljava_util_List_Handler();
    private static void n_SetContents_Ljava_util_List_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_contentsBefore, IntPtr native_contentsAfter);
    public sealed virtual void SetContents(IList`1<IContent> contentsBefore, IList`1<IContent> contentsAfter);
    private static Delegate GetAddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler();
    private static void n_AddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_property, IntPtr native__callback);
    public sealed virtual void AddValueCallback(Object property, LottieValueCallback callback);
    private static Delegate GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler();
    private static void n_ResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_(IntPtr jnienv, IntPtr native__this, IntPtr native_keyPath, int depth, IntPtr native_accumulator, IntPtr native_currentPartialKeyPath);
    public sealed virtual void ResolveKeyPath(KeyPath keyPath, int depth, IList`1<KeyPath> accumulator, KeyPath currentPartialKeyPath);
}
[RegisterAttribute("com/airbnb/lottie/animation/content/ModifierContent", "", "Com.Airbnb.Lottie.Animation.Content.IModifierContentInvoker")]
public interface Com.Airbnb.Lottie.Animation.Content.IModifierContent {
}
[RegisterAttribute("com/airbnb/lottie/animation/content/ModifierContent")]
internal class Com.Airbnb.Lottie.Animation.Content.IModifierContentInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IModifierContentInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IModifierContentInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IModifierContent GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
}
[RegisterAttribute("com/airbnb/lottie/animation/content/MergePathsContent")]
public class Com.Airbnb.Lottie.Animation.Content.MergePathsContent : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getName;
    private static Delegate cb_getPath;
    private static Delegate cb_absorbContent_Ljava_util_ListIterator_;
    private static Delegate cb_setContents_Ljava_util_List_Ljava_util_List_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Name { get; }
    public Path Path { get; }
    protected MergePathsContent(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/model/content/MergePaths;)V", "")]
public MergePathsContent(MergePaths mergePaths);
    private static MergePathsContent();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    private static Delegate GetGetPathHandler();
    private static IntPtr n_GetPath(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getPath", "()Landroid/graphics/Path;", "GetGetPathHandler")]
public virtual Path get_Path();
    private static Delegate GetAbsorbContent_Ljava_util_ListIterator_Handler();
    private static void n_AbsorbContent_Ljava_util_ListIterator_(IntPtr jnienv, IntPtr native__this, IntPtr native_contents);
    [RegisterAttribute("absorbContent", "(Ljava/util/ListIterator;)V", "GetAbsorbContent_Ljava_util_ListIterator_Handler")]
public virtual void AbsorbContent(IListIterator contents);
    private static Delegate GetSetContents_Ljava_util_List_Ljava_util_List_Handler();
    private static void n_SetContents_Ljava_util_List_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_contentsBefore, IntPtr native_contentsAfter);
    [RegisterAttribute("setContents", "(Ljava/util/List;Ljava/util/List;)V", "GetSetContents_Ljava_util_List_Ljava_util_List_Handler")]
public virtual void SetContents(IList`1<IContent> contentsBefore, IList`1<IContent> contentsAfter);
}
[RegisterAttribute("com/airbnb/lottie/animation/content/PolystarContent")]
public class Com.Airbnb.Lottie.Animation.Content.PolystarContent : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getName;
    private static Delegate cb_getPath;
    private static Delegate cb_addValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_;
    private static Delegate cb_onValueChanged;
    private static Delegate cb_resolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_;
    private static Delegate cb_setContents_Ljava_util_List_Ljava_util_List_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Name { get; }
    public Path Path { get; }
    protected PolystarContent(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;Lcom/airbnb/lottie/model/content/PolystarShape;)V", "")]
public PolystarContent(LottieDrawable lottieDrawable, BaseLayer layer, PolystarShape polystarShape);
    private static PolystarContent();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    private static Delegate GetGetPathHandler();
    private static IntPtr n_GetPath(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getPath", "()Landroid/graphics/Path;", "GetGetPathHandler")]
public virtual Path get_Path();
    private static Delegate GetAddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler();
    private static void n_AddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_property, IntPtr native__callback);
    [RegisterAttribute("addValueCallback", "(Ljava/lang/Object;Lcom/airbnb/lottie/value/LottieValueCallback;)V", "GetAddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void AddValueCallback(Object property, LottieValueCallback callback);
    private static Delegate GetOnValueChangedHandler();
    private static void n_OnValueChanged(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onValueChanged", "()V", "GetOnValueChangedHandler")]
public virtual void OnValueChanged();
    private static Delegate GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler();
    private static void n_ResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_(IntPtr jnienv, IntPtr native__this, IntPtr native_keyPath, int depth, IntPtr native_accumulator, IntPtr native_currentPartialKeyPath);
    [RegisterAttribute("resolveKeyPath", "(Lcom/airbnb/lottie/model/KeyPath;ILjava/util/List;Lcom/airbnb/lottie/model/KeyPath;)V", "GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler")]
public virtual void ResolveKeyPath(KeyPath keyPath, int depth, IList`1<KeyPath> accumulator, KeyPath currentPartialKeyPath);
    private static Delegate GetSetContents_Ljava_util_List_Ljava_util_List_Handler();
    private static void n_SetContents_Ljava_util_List_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_contentsBefore, IntPtr native_contentsAfter);
    [RegisterAttribute("setContents", "(Ljava/util/List;Ljava/util/List;)V", "GetSetContents_Ljava_util_List_Ljava_util_List_Handler")]
public virtual void SetContents(IList`1<IContent> contentsBefore, IList`1<IContent> contentsAfter);
}
[RegisterAttribute("com/airbnb/lottie/animation/content/RectangleContent")]
public class Com.Airbnb.Lottie.Animation.Content.RectangleContent : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getName;
    private static Delegate cb_getPath;
    private static Delegate cb_addValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_;
    private static Delegate cb_onValueChanged;
    private static Delegate cb_resolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_;
    private static Delegate cb_setContents_Ljava_util_List_Ljava_util_List_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Name { get; }
    public Path Path { get; }
    protected RectangleContent(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;Lcom/airbnb/lottie/model/content/RectangleShape;)V", "")]
public RectangleContent(LottieDrawable lottieDrawable, BaseLayer layer, RectangleShape rectShape);
    private static RectangleContent();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    private static Delegate GetGetPathHandler();
    private static IntPtr n_GetPath(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getPath", "()Landroid/graphics/Path;", "GetGetPathHandler")]
public virtual Path get_Path();
    private static Delegate GetAddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler();
    private static void n_AddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_property, IntPtr native__callback);
    [RegisterAttribute("addValueCallback", "(Ljava/lang/Object;Lcom/airbnb/lottie/value/LottieValueCallback;)V", "GetAddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void AddValueCallback(Object property, LottieValueCallback callback);
    private static Delegate GetOnValueChangedHandler();
    private static void n_OnValueChanged(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onValueChanged", "()V", "GetOnValueChangedHandler")]
public virtual void OnValueChanged();
    private static Delegate GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler();
    private static void n_ResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_(IntPtr jnienv, IntPtr native__this, IntPtr native_keyPath, int depth, IntPtr native_accumulator, IntPtr native_currentPartialKeyPath);
    [RegisterAttribute("resolveKeyPath", "(Lcom/airbnb/lottie/model/KeyPath;ILjava/util/List;Lcom/airbnb/lottie/model/KeyPath;)V", "GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler")]
public virtual void ResolveKeyPath(KeyPath keyPath, int depth, IList`1<KeyPath> accumulator, KeyPath currentPartialKeyPath);
    private static Delegate GetSetContents_Ljava_util_List_Ljava_util_List_Handler();
    private static void n_SetContents_Ljava_util_List_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_contentsBefore, IntPtr native_contentsAfter);
    [RegisterAttribute("setContents", "(Ljava/util/List;Ljava/util/List;)V", "GetSetContents_Ljava_util_List_Ljava_util_List_Handler")]
public virtual void SetContents(IList`1<IContent> contentsBefore, IList`1<IContent> contentsAfter);
}
[RegisterAttribute("com/airbnb/lottie/animation/content/RepeaterContent")]
public class Com.Airbnb.Lottie.Animation.Content.RepeaterContent : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getName;
    private static Delegate cb_getPath;
    private static Delegate cb_absorbContent_Ljava_util_ListIterator_;
    private static Delegate cb_addValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_;
    private static Delegate cb_draw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_I;
    private static Delegate cb_getBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_Z;
    private static Delegate cb_onValueChanged;
    private static Delegate cb_resolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_;
    private static Delegate cb_setContents_Ljava_util_List_Ljava_util_List_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Name { get; }
    public Path Path { get; }
    protected RepeaterContent(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;Lcom/airbnb/lottie/model/content/Repeater;)V", "")]
public RepeaterContent(LottieDrawable lottieDrawable, BaseLayer layer, Repeater repeater);
    private static RepeaterContent();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    private static Delegate GetGetPathHandler();
    private static IntPtr n_GetPath(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getPath", "()Landroid/graphics/Path;", "GetGetPathHandler")]
public virtual Path get_Path();
    private static Delegate GetAbsorbContent_Ljava_util_ListIterator_Handler();
    private static void n_AbsorbContent_Ljava_util_ListIterator_(IntPtr jnienv, IntPtr native__this, IntPtr native_contentsIter);
    [RegisterAttribute("absorbContent", "(Ljava/util/ListIterator;)V", "GetAbsorbContent_Ljava_util_ListIterator_Handler")]
public virtual void AbsorbContent(IListIterator contentsIter);
    private static Delegate GetAddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler();
    private static void n_AddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_property, IntPtr native__callback);
    [RegisterAttribute("addValueCallback", "(Ljava/lang/Object;Lcom/airbnb/lottie/value/LottieValueCallback;)V", "GetAddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void AddValueCallback(Object property, LottieValueCallback callback);
    private static Delegate GetDraw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_IHandler();
    private static void n_Draw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_I(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas, IntPtr native_parentMatrix, int alpha);
    [RegisterAttribute("draw", "(Landroid/graphics/Canvas;Landroid/graphics/Matrix;I)V", "GetDraw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_IHandler")]
public virtual void Draw(Canvas canvas, Matrix parentMatrix, int alpha);
    private static Delegate GetGetBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_ZHandler();
    private static void n_GetBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_outBounds, IntPtr native_parentMatrix, bool applyParents);
    [RegisterAttribute("getBounds", "(Landroid/graphics/RectF;Landroid/graphics/Matrix;Z)V", "GetGetBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_ZHandler")]
public virtual void GetBounds(RectF outBounds, Matrix parentMatrix, bool applyParents);
    private static Delegate GetOnValueChangedHandler();
    private static void n_OnValueChanged(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onValueChanged", "()V", "GetOnValueChangedHandler")]
public virtual void OnValueChanged();
    private static Delegate GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler();
    private static void n_ResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_(IntPtr jnienv, IntPtr native__this, IntPtr native_keyPath, int depth, IntPtr native_accumulator, IntPtr native_currentPartialKeyPath);
    [RegisterAttribute("resolveKeyPath", "(Lcom/airbnb/lottie/model/KeyPath;ILjava/util/List;Lcom/airbnb/lottie/model/KeyPath;)V", "GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler")]
public virtual void ResolveKeyPath(KeyPath keyPath, int depth, IList`1<KeyPath> accumulator, KeyPath currentPartialKeyPath);
    private static Delegate GetSetContents_Ljava_util_List_Ljava_util_List_Handler();
    private static void n_SetContents_Ljava_util_List_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_contentsBefore, IntPtr native_contentsAfter);
    [RegisterAttribute("setContents", "(Ljava/util/List;Ljava/util/List;)V", "GetSetContents_Ljava_util_List_Ljava_util_List_Handler")]
public virtual void SetContents(IList`1<IContent> contentsBefore, IList`1<IContent> contentsAfter);
}
[RegisterAttribute("com/airbnb/lottie/animation/content/ShapeContent")]
public class Com.Airbnb.Lottie.Animation.Content.ShapeContent : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getName;
    private static Delegate cb_getPath;
    private static Delegate cb_onValueChanged;
    private static Delegate cb_setContents_Ljava_util_List_Ljava_util_List_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Name { get; }
    public Path Path { get; }
    protected ShapeContent(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;Lcom/airbnb/lottie/model/content/ShapePath;)V", "")]
public ShapeContent(LottieDrawable lottieDrawable, BaseLayer layer, ShapePath shape);
    private static ShapeContent();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    private static Delegate GetGetPathHandler();
    private static IntPtr n_GetPath(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getPath", "()Landroid/graphics/Path;", "GetGetPathHandler")]
public virtual Path get_Path();
    private static Delegate GetOnValueChangedHandler();
    private static void n_OnValueChanged(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onValueChanged", "()V", "GetOnValueChangedHandler")]
public virtual void OnValueChanged();
    private static Delegate GetSetContents_Ljava_util_List_Ljava_util_List_Handler();
    private static void n_SetContents_Ljava_util_List_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_contentsBefore, IntPtr native_contentsAfter);
    [RegisterAttribute("setContents", "(Ljava/util/List;Ljava/util/List;)V", "GetSetContents_Ljava_util_List_Ljava_util_List_Handler")]
public virtual void SetContents(IList`1<IContent> contentsBefore, IList`1<IContent> contentsAfter);
}
[RegisterAttribute("com/airbnb/lottie/animation/content/StrokeContent")]
public class Com.Airbnb.Lottie.Animation.Content.StrokeContent : BaseStrokeContent {
    private static JniPeerMembers _members;
    private static Delegate cb_getName;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Name { get; }
    protected StrokeContent(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;Lcom/airbnb/lottie/model/content/ShapeStroke;)V", "")]
public StrokeContent(LottieDrawable lottieDrawable, BaseLayer layer, ShapeStroke stroke);
    private static StrokeContent();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
}
[RegisterAttribute("com/airbnb/lottie/animation/content/TrimPathContent")]
public class Com.Airbnb.Lottie.Animation.Content.TrimPathContent : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_isHidden;
    private static Delegate cb_getName;
    private static Delegate cb_onValueChanged;
    private static Delegate cb_setContents_Ljava_util_List_Ljava_util_List_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsHidden { get; }
    public string Name { get; }
    protected TrimPathContent(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/model/layer/BaseLayer;Lcom/airbnb/lottie/model/content/ShapeTrimPath;)V", "")]
public TrimPathContent(BaseLayer layer, ShapeTrimPath trimPath);
    private static TrimPathContent();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsHiddenHandler();
    private static bool n_IsHidden(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isHidden", "()Z", "GetIsHiddenHandler")]
public virtual bool get_IsHidden();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    private static Delegate GetOnValueChangedHandler();
    private static void n_OnValueChanged(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onValueChanged", "()V", "GetOnValueChangedHandler")]
public virtual void OnValueChanged();
    private static Delegate GetSetContents_Ljava_util_List_Ljava_util_List_Handler();
    private static void n_SetContents_Ljava_util_List_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_contentsBefore, IntPtr native_contentsAfter);
    [RegisterAttribute("setContents", "(Ljava/util/List;Ljava/util/List;)V", "GetSetContents_Ljava_util_List_Ljava_util_List_Handler")]
public virtual void SetContents(IList`1<IContent> contentsBefore, IList`1<IContent> contentsAfter);
}
[RegisterAttribute("com/airbnb/lottie/animation/keyframe/MaskKeyframeAnimation")]
public class Com.Airbnb.Lottie.Animation.Keyframe.MaskKeyframeAnimation : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getMasks;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IList`1<Mask> Masks { get; }
    protected MaskKeyframeAnimation(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/util/List;)V", "")]
public MaskKeyframeAnimation(IList`1<Mask> masks);
    private static MaskKeyframeAnimation();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetMasksHandler();
    private static IntPtr n_GetMasks(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMasks", "()Ljava/util/List;", "GetGetMasksHandler")]
public virtual IList`1<Mask> get_Masks();
}
[RegisterAttribute("com/airbnb/lottie/animation/keyframe/PathKeyframe")]
public class Com.Airbnb.Lottie.Animation.Keyframe.PathKeyframe : Keyframe {
    private static JniPeerMembers _members;
    private static Delegate cb_createPath;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected PathKeyframe(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/LottieComposition;Lcom/airbnb/lottie/value/Keyframe;)V", "")]
public PathKeyframe(LottieComposition composition, Keyframe keyframe);
    private static PathKeyframe();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetCreatePathHandler();
    private static void n_CreatePath(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("createPath", "()V", "GetCreatePathHandler")]
public virtual void CreatePath();
}
[RegisterAttribute("com/airbnb/lottie/animation/keyframe/TransformKeyframeAnimation")]
public class Com.Airbnb.Lottie.Animation.Keyframe.TransformKeyframeAnimation : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getMatrix;
    private static Delegate cb_addAnimationsToLayer_Lcom_airbnb_lottie_model_layer_BaseLayer_;
    private static Delegate cb_applyValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_;
    private static Delegate cb_getMatrixForRepeater_F;
    private static Delegate cb_setProgress_F;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Matrix Matrix { get; }
    protected TransformKeyframeAnimation(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/model/animatable/AnimatableTransform;)V", "")]
public TransformKeyframeAnimation(AnimatableTransform animatableTransform);
    private static TransformKeyframeAnimation();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetMatrixHandler();
    private static IntPtr n_GetMatrix(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMatrix", "()Landroid/graphics/Matrix;", "GetGetMatrixHandler")]
public virtual Matrix get_Matrix();
    private static Delegate GetAddAnimationsToLayer_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler();
    private static void n_AddAnimationsToLayer_Lcom_airbnb_lottie_model_layer_BaseLayer_(IntPtr jnienv, IntPtr native__this, IntPtr native_layer);
    [RegisterAttribute("addAnimationsToLayer", "(Lcom/airbnb/lottie/model/layer/BaseLayer;)V", "GetAddAnimationsToLayer_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler")]
public virtual void AddAnimationsToLayer(BaseLayer layer);
    private static Delegate GetApplyValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler();
    private static bool n_ApplyValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_property, IntPtr native__callback);
    [RegisterAttribute("applyValueCallback", "(Ljava/lang/Object;Lcom/airbnb/lottie/value/LottieValueCallback;)Z", "GetApplyValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual bool ApplyValueCallback(Object property, LottieValueCallback callback);
    private static Delegate GetGetMatrixForRepeater_FHandler();
    private static IntPtr n_GetMatrixForRepeater_F(IntPtr jnienv, IntPtr native__this, float amount);
    [RegisterAttribute("getMatrixForRepeater", "(F)Landroid/graphics/Matrix;", "GetGetMatrixForRepeater_FHandler")]
public virtual Matrix GetMatrixForRepeater(float amount);
    private static Delegate GetSetProgress_FHandler();
    private static void n_SetProgress_F(IntPtr jnienv, IntPtr native__this, float progress);
    [RegisterAttribute("setProgress", "(F)V", "GetSetProgress_FHandler")]
public virtual void SetProgress(float progress);
}
[RegisterAttribute("com/airbnb/lottie/animation/LPaint")]
public class Com.Airbnb.Lottie.Animation.LPaint : Paint {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected LPaint(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/graphics/PorterDuff$Mode;)V", "")]
public LPaint(Mode porterDuffMode);
    [RegisterAttribute(".ctor", "(I)V", "")]
public LPaint(int flags);
    [RegisterAttribute(".ctor", "(ILandroid/graphics/PorterDuff$Mode;)V", "")]
public LPaint(int flags, Mode porterDuffMode);
    private static LPaint();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
public class Com.Airbnb.Lottie.CompositionLoadedEventArgs : EventArgs {
    private LottieComposition composition;
    public LottieComposition Composition { get; }
    public CompositionLoadedEventArgs(LottieComposition composition);
    public LottieComposition get_Composition();
}
[RegisterAttribute("com/airbnb/lottie/FontAssetDelegate")]
public class Com.Airbnb.Lottie.FontAssetDelegate : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_fetchFont_Ljava_lang_String_;
    private static Delegate cb_getFontPath_Ljava_lang_String_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected FontAssetDelegate(IntPtr javaReference, JniHandleOwnership transfer);
    private static FontAssetDelegate();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetFetchFont_Ljava_lang_String_Handler();
    private static IntPtr n_FetchFont_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_fontFamily);
    [RegisterAttribute("fetchFont", "(Ljava/lang/String;)Landroid/graphics/Typeface;", "GetFetchFont_Ljava_lang_String_Handler")]
public virtual Typeface FetchFont(string fontFamily);
    private static Delegate GetGetFontPath_Ljava_lang_String_Handler();
    private static IntPtr n_GetFontPath_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_fontFamily);
    [RegisterAttribute("getFontPath", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetFontPath_Ljava_lang_String_Handler")]
public virtual string GetFontPath(string fontFamily);
}
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("com/airbnb/lottie/Cancellable", "", "Com.Airbnb.Lottie.ICancellableInvoker")]
public interface Com.Airbnb.Lottie.ICancellable {
    [RegisterAttribute("cancel", "()V", "GetCancelHandler:Com.Airbnb.Lottie.ICancellableInvoker, Lottie.Android")]
public abstract virtual void Cancel();
}
[RegisterAttribute("com/airbnb/lottie/Cancellable")]
internal class Com.Airbnb.Lottie.ICancellableInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_cancel;
    private IntPtr id_cancel;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ICancellableInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ICancellableInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static ICancellable GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetCancelHandler();
    private static void n_Cancel(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Cancel();
}
[RegisterAttribute("com/airbnb/lottie/ImageAssetDelegate", "", "Com.Airbnb.Lottie.IImageAssetDelegateInvoker")]
public interface Com.Airbnb.Lottie.IImageAssetDelegate {
    [RegisterAttribute("fetchBitmap", "(Lcom/airbnb/lottie/LottieImageAsset;)Landroid/graphics/Bitmap;", "GetFetchBitmap_Lcom_airbnb_lottie_LottieImageAsset_Handler:Com.Airbnb.Lottie.IImageAssetDelegateInvoker, Lottie.Android")]
public abstract virtual Bitmap FetchBitmap(LottieImageAsset asset);
}
[RegisterAttribute("com/airbnb/lottie/ImageAssetDelegate")]
internal class Com.Airbnb.Lottie.IImageAssetDelegateInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_fetchBitmap_Lcom_airbnb_lottie_LottieImageAsset_;
    private IntPtr id_fetchBitmap_Lcom_airbnb_lottie_LottieImageAsset_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IImageAssetDelegateInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IImageAssetDelegateInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IImageAssetDelegate GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetFetchBitmap_Lcom_airbnb_lottie_LottieImageAsset_Handler();
    private static IntPtr n_FetchBitmap_Lcom_airbnb_lottie_LottieImageAsset_(IntPtr jnienv, IntPtr native__this, IntPtr native_asset);
    public sealed virtual Bitmap FetchBitmap(LottieImageAsset asset);
}
[RegisterAttribute("com/airbnb/lottie/LottieListener", "", "Com.Airbnb.Lottie.ILottieListenerInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Com.Airbnb.Lottie.ILottieListener {
    [RegisterAttribute("onResult", "(Ljava/lang/Object;)V", "GetOnResult_Ljava_lang_Object_Handler:Com.Airbnb.Lottie.ILottieListenerInvoker, Lottie.Android")]
public abstract virtual void OnResult(Object p0);
}
[RegisterAttribute("mono/com/airbnb/lottie/LottieListenerImplementor")]
internal class Com.Airbnb.Lottie.ILottieListenerImplementor : Object {
    private object sender;
    public EventHandler`1<LottieEventArgs> Handler;
    public ILottieListenerImplementor(object sender);
    public sealed virtual void OnResult(Object p0);
    internal static bool __IsEmpty(ILottieListenerImplementor value);
}
[RegisterAttribute("com/airbnb/lottie/LottieListener")]
internal class Com.Airbnb.Lottie.ILottieListenerInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_onResult_Ljava_lang_Object_;
    private IntPtr id_onResult_Ljava_lang_Object_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ILottieListenerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ILottieListenerInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static ILottieListener GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnResult_Ljava_lang_Object_Handler();
    private static void n_OnResult_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnResult(Object p0);
}
[RegisterAttribute("com/airbnb/lottie/LottieLogger", "", "Com.Airbnb.Lottie.ILottieLoggerInvoker")]
public interface Com.Airbnb.Lottie.ILottieLogger {
    [RegisterAttribute("debug", "(Ljava/lang/String;)V", "GetDebug_Ljava_lang_String_Handler:Com.Airbnb.Lottie.ILottieLoggerInvoker, Lottie.Android")]
public abstract virtual void Debug(string p0);
    [RegisterAttribute("debug", "(Ljava/lang/String;Ljava/lang/Throwable;)V", "GetDebug_Ljava_lang_String_Ljava_lang_Throwable_Handler:Com.Airbnb.Lottie.ILottieLoggerInvoker, Lottie.Android")]
public abstract virtual void Debug(string p0, Throwable p1);
    [RegisterAttribute("error", "(Ljava/lang/String;Ljava/lang/Throwable;)V", "GetError_Ljava_lang_String_Ljava_lang_Throwable_Handler:Com.Airbnb.Lottie.ILottieLoggerInvoker, Lottie.Android")]
public abstract virtual void Error(string p0, Throwable p1);
    [RegisterAttribute("warning", "(Ljava/lang/String;)V", "GetWarning_Ljava_lang_String_Handler:Com.Airbnb.Lottie.ILottieLoggerInvoker, Lottie.Android")]
public abstract virtual void Warning(string p0);
    [RegisterAttribute("warning", "(Ljava/lang/String;Ljava/lang/Throwable;)V", "GetWarning_Ljava_lang_String_Ljava_lang_Throwable_Handler:Com.Airbnb.Lottie.ILottieLoggerInvoker, Lottie.Android")]
public abstract virtual void Warning(string p0, Throwable p1);
}
[RegisterAttribute("com/airbnb/lottie/LottieLogger")]
internal class Com.Airbnb.Lottie.ILottieLoggerInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_debug_Ljava_lang_String_;
    private IntPtr id_debug_Ljava_lang_String_;
    private static Delegate cb_debug_Ljava_lang_String_Ljava_lang_Throwable_;
    private IntPtr id_debug_Ljava_lang_String_Ljava_lang_Throwable_;
    private static Delegate cb_error_Ljava_lang_String_Ljava_lang_Throwable_;
    private IntPtr id_error_Ljava_lang_String_Ljava_lang_Throwable_;
    private static Delegate cb_warning_Ljava_lang_String_;
    private IntPtr id_warning_Ljava_lang_String_;
    private static Delegate cb_warning_Ljava_lang_String_Ljava_lang_Throwable_;
    private IntPtr id_warning_Ljava_lang_String_Ljava_lang_Throwable_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ILottieLoggerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ILottieLoggerInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static ILottieLogger GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetDebug_Ljava_lang_String_Handler();
    private static void n_Debug_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void Debug(string p0);
    private static Delegate GetDebug_Ljava_lang_String_Ljava_lang_Throwable_Handler();
    private static void n_Debug_Ljava_lang_String_Ljava_lang_Throwable_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void Debug(string p0, Throwable p1);
    private static Delegate GetError_Ljava_lang_String_Ljava_lang_Throwable_Handler();
    private static void n_Error_Ljava_lang_String_Ljava_lang_Throwable_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void Error(string p0, Throwable p1);
    private static Delegate GetWarning_Ljava_lang_String_Handler();
    private static void n_Warning_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void Warning(string p0);
    private static Delegate GetWarning_Ljava_lang_String_Ljava_lang_Throwable_Handler();
    private static void n_Warning_Ljava_lang_String_Ljava_lang_Throwable_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void Warning(string p0, Throwable p1);
}
[RegisterAttribute("com/airbnb/lottie/LottieOnCompositionLoadedListener", "", "Com.Airbnb.Lottie.ILottieOnCompositionLoadedListenerInvoker")]
public interface Com.Airbnb.Lottie.ILottieOnCompositionLoadedListener {
    [RegisterAttribute("onCompositionLoaded", "(Lcom/airbnb/lottie/LottieComposition;)V", "GetOnCompositionLoaded_Lcom_airbnb_lottie_LottieComposition_Handler:Com.Airbnb.Lottie.ILottieOnCompositionLoadedListenerInvoker, Lottie.Android")]
public abstract virtual void OnCompositionLoaded(LottieComposition p0);
}
[RegisterAttribute("mono/com/airbnb/lottie/LottieOnCompositionLoadedListenerImplementor")]
internal class Com.Airbnb.Lottie.ILottieOnCompositionLoadedListenerImplementor : Object {
    private object sender;
    public EventHandler`1<LottieOnCompositionLoadedEventArgs> Handler;
    public ILottieOnCompositionLoadedListenerImplementor(object sender);
    public sealed virtual void OnCompositionLoaded(LottieComposition p0);
    internal static bool __IsEmpty(ILottieOnCompositionLoadedListenerImplementor value);
}
[RegisterAttribute("com/airbnb/lottie/LottieOnCompositionLoadedListener")]
internal class Com.Airbnb.Lottie.ILottieOnCompositionLoadedListenerInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_onCompositionLoaded_Lcom_airbnb_lottie_LottieComposition_;
    private IntPtr id_onCompositionLoaded_Lcom_airbnb_lottie_LottieComposition_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ILottieOnCompositionLoadedListenerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ILottieOnCompositionLoadedListenerInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static ILottieOnCompositionLoadedListener GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnCompositionLoaded_Lcom_airbnb_lottie_LottieComposition_Handler();
    private static void n_OnCompositionLoaded_Lcom_airbnb_lottie_LottieComposition_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnCompositionLoaded(LottieComposition p0);
}
[RegisterAttribute("com/airbnb/lottie/LottieProperty", "", "Com.Airbnb.Lottie.ILottiePropertyInvoker")]
public interface Com.Airbnb.Lottie.ILottieProperty {
    private static JniPeerMembers _members;
    [RegisterAttribute("COLOR")]
public static Integer Color { get; }
    [RegisterAttribute("COLOR_FILTER")]
public static ColorFilter ColorFilter { get; }
    [RegisterAttribute("CORNER_RADIUS")]
public static Float CornerRadius { get; }
    [RegisterAttribute("ELLIPSE_SIZE")]
public static PointF EllipseSize { get; }
    [RegisterAttribute("GRADIENT_COLOR")]
public static IList`1<Integer> GradientColor { get; }
    [RegisterAttribute("OPACITY")]
public static Integer Opacity { get; }
    [RegisterAttribute("POLYSTAR_INNER_RADIUS")]
public static Float PolystarInnerRadius { get; }
    [RegisterAttribute("POLYSTAR_INNER_ROUNDEDNESS")]
public static Float PolystarInnerRoundedness { get; }
    [RegisterAttribute("POLYSTAR_OUTER_RADIUS")]
public static Float PolystarOuterRadius { get; }
    [RegisterAttribute("POLYSTAR_OUTER_ROUNDEDNESS")]
public static Float PolystarOuterRoundedness { get; }
    [RegisterAttribute("POLYSTAR_POINTS")]
public static Float PolystarPoints { get; }
    [RegisterAttribute("POLYSTAR_ROTATION")]
public static Float PolystarRotation { get; }
    [RegisterAttribute("POSITION")]
public static PointF Position { get; }
    [RegisterAttribute("RECTANGLE_SIZE")]
public static PointF RectangleSize { get; }
    [RegisterAttribute("REPEATER_COPIES")]
public static Float RepeaterCopies { get; }
    [RegisterAttribute("REPEATER_OFFSET")]
public static Float RepeaterOffset { get; }
    [RegisterAttribute("STROKE_COLOR")]
public static Integer StrokeColor { get; }
    [RegisterAttribute("STROKE_WIDTH")]
public static Float StrokeWidth { get; }
    [RegisterAttribute("TEXT_SIZE")]
public static Float TextSize { get; }
    [RegisterAttribute("TEXT_TRACKING")]
public static Float TextTracking { get; }
    [RegisterAttribute("TIME_REMAP")]
public static Float TimeRemap { get; }
    [RegisterAttribute("TRANSFORM_ANCHOR_POINT")]
public static PointF TransformAnchorPoint { get; }
    [RegisterAttribute("TRANSFORM_END_OPACITY")]
public static Float TransformEndOpacity { get; }
    [RegisterAttribute("TRANSFORM_OPACITY")]
public static Integer TransformOpacity { get; }
    [RegisterAttribute("TRANSFORM_POSITION")]
public static PointF TransformPosition { get; }
    [RegisterAttribute("TRANSFORM_POSITION_X")]
public static Float TransformPositionX { get; }
    [RegisterAttribute("TRANSFORM_POSITION_Y")]
public static Float TransformPositionY { get; }
    [RegisterAttribute("TRANSFORM_ROTATION")]
public static Float TransformRotation { get; }
    [RegisterAttribute("TRANSFORM_SCALE")]
public static ScaleXY TransformScale { get; }
    [RegisterAttribute("TRANSFORM_SKEW")]
public static Float TransformSkew { get; }
    [RegisterAttribute("TRANSFORM_SKEW_ANGLE")]
public static Float TransformSkewAngle { get; }
    [RegisterAttribute("TRANSFORM_START_OPACITY")]
public static Float TransformStartOpacity { get; }
    private static ILottieProperty();
    public static Integer get_Color();
    public static ColorFilter get_ColorFilter();
    public static Float get_CornerRadius();
    public static PointF get_EllipseSize();
    public static IList`1<Integer> get_GradientColor();
    public static Integer get_Opacity();
    public static Float get_PolystarInnerRadius();
    public static Float get_PolystarInnerRoundedness();
    public static Float get_PolystarOuterRadius();
    public static Float get_PolystarOuterRoundedness();
    public static Float get_PolystarPoints();
    public static Float get_PolystarRotation();
    public static PointF get_Position();
    public static PointF get_RectangleSize();
    public static Float get_RepeaterCopies();
    public static Float get_RepeaterOffset();
    public static Integer get_StrokeColor();
    public static Float get_StrokeWidth();
    public static Float get_TextSize();
    public static Float get_TextTracking();
    public static Float get_TimeRemap();
    public static PointF get_TransformAnchorPoint();
    public static Float get_TransformEndOpacity();
    public static Integer get_TransformOpacity();
    public static PointF get_TransformPosition();
    public static Float get_TransformPositionX();
    public static Float get_TransformPositionY();
    public static Float get_TransformRotation();
    public static ScaleXY get_TransformScale();
    public static Float get_TransformSkew();
    public static Float get_TransformSkewAngle();
    public static Float get_TransformStartOpacity();
}
[RegisterAttribute("com/airbnb/lottie/LottieProperty")]
internal class Com.Airbnb.Lottie.ILottiePropertyInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ILottiePropertyInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ILottiePropertyInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static ILottieProperty GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
}
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("com/airbnb/lottie/OnCompositionLoadedListener", "", "Com.Airbnb.Lottie.IOnCompositionLoadedListenerInvoker")]
public interface Com.Airbnb.Lottie.IOnCompositionLoadedListener {
    [RegisterAttribute("onCompositionLoaded", "(Lcom/airbnb/lottie/LottieComposition;)V", "GetOnCompositionLoaded_Lcom_airbnb_lottie_LottieComposition_Handler:Com.Airbnb.Lottie.IOnCompositionLoadedListenerInvoker, Lottie.Android")]
public abstract virtual void OnCompositionLoaded(LottieComposition composition);
}
[RegisterAttribute("mono/com/airbnb/lottie/OnCompositionLoadedListenerImplementor")]
internal class Com.Airbnb.Lottie.IOnCompositionLoadedListenerImplementor : Object {
    private object sender;
    public EventHandler`1<CompositionLoadedEventArgs> Handler;
    public IOnCompositionLoadedListenerImplementor(object sender);
    public sealed virtual void OnCompositionLoaded(LottieComposition composition);
    internal static bool __IsEmpty(IOnCompositionLoadedListenerImplementor value);
}
[RegisterAttribute("com/airbnb/lottie/OnCompositionLoadedListener")]
internal class Com.Airbnb.Lottie.IOnCompositionLoadedListenerInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_onCompositionLoaded_Lcom_airbnb_lottie_LottieComposition_;
    private IntPtr id_onCompositionLoaded_Lcom_airbnb_lottie_LottieComposition_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IOnCompositionLoadedListenerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IOnCompositionLoadedListenerInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IOnCompositionLoadedListener GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnCompositionLoaded_Lcom_airbnb_lottie_LottieComposition_Handler();
    private static void n_OnCompositionLoaded_Lcom_airbnb_lottie_LottieComposition_(IntPtr jnienv, IntPtr native__this, IntPtr native_composition);
    public sealed virtual void OnCompositionLoaded(LottieComposition composition);
}
[RegisterAttribute("com/airbnb/lottie/Lottie")]
public class Com.Airbnb.Lottie.Lottie : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected Lottie(IntPtr javaReference, JniHandleOwnership transfer);
    private static Lottie();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("initialize", "(Lcom/airbnb/lottie/LottieConfig;)V", "")]
public static void Initialize(LottieConfig lottieConfig);
}
[RegisterAttribute("com/airbnb/lottie/LottieAnimationView")]
public class Com.Airbnb.Lottie.LottieAnimationView : AppCompatImageView {
    private static JniPeerMembers _members;
    private static Delegate cb_getComposition;
    private static Delegate cb_setComposition_Lcom_airbnb_lottie_LottieComposition_;
    private static Delegate cb_getDuration;
    private static Delegate cb_getFrame;
    private static Delegate cb_setFrame_I;
    private static Delegate cb_hasMasks;
    private static Delegate cb_hasMatte;
    private static Delegate cb_getImageAssetsFolder;
    private static Delegate cb_setImageAssetsFolder_Ljava_lang_String_;
    private static Delegate cb_isAnimating;
    private static Delegate cb_isMergePathsEnabledForKitKatAndAbove;
    private static Delegate cb_getMaxFrame;
    private static Delegate cb_getMinFrame;
    private static Delegate cb_getPerformanceTracker;
    private static Delegate cb_getProgress;
    private static Delegate cb_setProgress_F;
    private static Delegate cb_getRepeatCount;
    private static Delegate cb_setRepeatCount_I;
    private static Delegate cb_getRepeatMode;
    private static Delegate cb_setRepeatMode_I;
    private static Delegate cb_getScale;
    private static Delegate cb_setScale_F;
    private static Delegate cb_getSpeed;
    private static Delegate cb_setSpeed_F;
    private static Delegate cb_addAnimatorListener_Landroid_animation_Animator_AnimatorListener_;
    private static Delegate cb_addAnimatorPauseListener_Landroid_animation_Animator_AnimatorPauseListener_;
    private static Delegate cb_addAnimatorUpdateListener_Landroid_animation_ValueAnimator_AnimatorUpdateListener_;
    private static Delegate cb_addLottieOnCompositionLoadedListener_Lcom_airbnb_lottie_LottieOnCompositionLoadedListener_;
    private static Delegate cb_addValueCallback_Lcom_airbnb_lottie_model_KeyPath_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_;
    private static Delegate cb_addValueCallback_Lcom_airbnb_lottie_model_KeyPath_Ljava_lang_Object_Lcom_airbnb_lottie_value_SimpleLottieValueCallback_;
    private static Delegate cb_cancelAnimation;
    private static Delegate cb_disableExtraScaleModeInFitXY;
    private static Delegate cb_enableMergePathsForKitKatAndAbove_Z;
    private static Delegate cb_loop_Z;
    private static Delegate cb_pauseAnimation;
    private static Delegate cb_playAnimation;
    private static Delegate cb_removeAllAnimatorListeners;
    private static Delegate cb_removeAllLottieOnCompositionLoadedListener;
    private static Delegate cb_removeAllUpdateListeners;
    private static Delegate cb_removeAnimatorListener_Landroid_animation_Animator_AnimatorListener_;
    private static Delegate cb_removeAnimatorPauseListener_Landroid_animation_Animator_AnimatorPauseListener_;
    private static Delegate cb_removeLottieOnCompositionLoadedListener_Lcom_airbnb_lottie_LottieOnCompositionLoadedListener_;
    private static Delegate cb_removeUpdateListener_Landroid_animation_ValueAnimator_AnimatorUpdateListener_;
    private static Delegate cb_resolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_;
    private static Delegate cb_resumeAnimation;
    private static Delegate cb_reverseAnimationSpeed;
    private static Delegate cb_setAnimation_I;
    private static Delegate cb_setAnimation_Ljava_io_InputStream_Ljava_lang_String_;
    private static Delegate cb_setAnimation_Ljava_lang_String_;
    private static Delegate cb_setAnimationFromJson_Ljava_lang_String_;
    private static Delegate cb_setAnimationFromJson_Ljava_lang_String_Ljava_lang_String_;
    private static Delegate cb_setAnimationFromUrl_Ljava_lang_String_;
    private static Delegate cb_setAnimationFromUrl_Ljava_lang_String_Ljava_lang_String_;
    private static Delegate cb_setApplyingOpacityToLayersEnabled_Z;
    private static Delegate cb_setCacheComposition_Z;
    private static Delegate cb_setFailureListener_Lcom_airbnb_lottie_LottieListener_;
    private static Delegate cb_setFallbackResource_I;
    private static Delegate cb_setFontAssetDelegate_Lcom_airbnb_lottie_FontAssetDelegate_;
    private static Delegate cb_setIgnoreDisabledSystemAnimations_Z;
    private static Delegate cb_setImageAssetDelegate_Lcom_airbnb_lottie_ImageAssetDelegate_;
    private static Delegate cb_setMaxFrame_I;
    private static Delegate cb_setMaxFrame_Ljava_lang_String_;
    private static Delegate cb_setMaxProgress_F;
    private static Delegate cb_setMinAndMaxFrame_II;
    private static Delegate cb_setMinAndMaxFrame_Ljava_lang_String_;
    private static Delegate cb_setMinAndMaxFrame_Ljava_lang_String_Ljava_lang_String_Z;
    private static Delegate cb_setMinAndMaxProgress_FF;
    private static Delegate cb_setMinFrame_I;
    private static Delegate cb_setMinFrame_Ljava_lang_String_;
    private static Delegate cb_setMinProgress_F;
    private static Delegate cb_setOutlineMasksAndMattes_Z;
    private static Delegate cb_setPerformanceTrackingEnabled_Z;
    private static Delegate cb_setRenderMode_Lcom_airbnb_lottie_RenderMode_;
    private static Delegate cb_setSafeMode_Z;
    private static Delegate cb_setTextDelegate_Lcom_airbnb_lottie_TextDelegate_;
    private static Delegate cb_updateBitmap_Ljava_lang_String_Landroid_graphics_Bitmap_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public LottieComposition Composition { get; public set; }
    public long Duration { get; }
    public int Frame { get; public set; }
    public bool HasMasks { get; }
    public bool HasMatte { get; }
    public string ImageAssetsFolder { get; public set; }
    public bool IsAnimating { get; }
    public bool IsMergePathsEnabledForKitKatAndAbove { get; }
    public float MaxFrame { get; }
    public float MinFrame { get; }
    public PerformanceTracker PerformanceTracker { get; }
    public float Progress { get; public set; }
    public int RepeatCount { get; public set; }
    public int RepeatMode { get; public set; }
    public float Scale { get; public set; }
    public float Speed { get; public set; }
    protected LottieAnimationView(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public LottieAnimationView(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public LottieAnimationView(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public LottieAnimationView(Context context, IAttributeSet attrs, int defStyleAttr);
    private static LottieAnimationView();
    public void SetImageAssetDelegate(Func`2<LottieImageAsset, Bitmap> funcAssetLoad);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCompositionHandler();
    private static IntPtr n_GetComposition(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetComposition_Lcom_airbnb_lottie_LottieComposition_Handler();
    private static void n_SetComposition_Lcom_airbnb_lottie_LottieComposition_(IntPtr jnienv, IntPtr native__this, IntPtr native_composition);
    [RegisterAttribute("getComposition", "()Lcom/airbnb/lottie/LottieComposition;", "GetGetCompositionHandler")]
public virtual LottieComposition get_Composition();
    [RegisterAttribute("setComposition", "(Lcom/airbnb/lottie/LottieComposition;)V", "GetSetComposition_Lcom_airbnb_lottie_LottieComposition_Handler")]
public virtual void set_Composition(LottieComposition value);
    private static Delegate GetGetDurationHandler();
    private static long n_GetDuration(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDuration", "()J", "GetGetDurationHandler")]
public virtual long get_Duration();
    private static Delegate GetGetFrameHandler();
    private static int n_GetFrame(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetFrame_IHandler();
    private static void n_SetFrame_I(IntPtr jnienv, IntPtr native__this, int frame);
    [RegisterAttribute("getFrame", "()I", "GetGetFrameHandler")]
public virtual int get_Frame();
    [RegisterAttribute("setFrame", "(I)V", "GetSetFrame_IHandler")]
public virtual void set_Frame(int value);
    private static Delegate GetHasMasksHandler();
    private static bool n_HasMasks(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasMasks", "()Z", "GetHasMasksHandler")]
public virtual bool get_HasMasks();
    private static Delegate GetHasMatteHandler();
    private static bool n_HasMatte(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasMatte", "()Z", "GetHasMatteHandler")]
public virtual bool get_HasMatte();
    private static Delegate GetGetImageAssetsFolderHandler();
    private static IntPtr n_GetImageAssetsFolder(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetImageAssetsFolder_Ljava_lang_String_Handler();
    private static void n_SetImageAssetsFolder_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_imageAssetsFolder);
    [RegisterAttribute("getImageAssetsFolder", "()Ljava/lang/String;", "GetGetImageAssetsFolderHandler")]
public virtual string get_ImageAssetsFolder();
    [RegisterAttribute("setImageAssetsFolder", "(Ljava/lang/String;)V", "GetSetImageAssetsFolder_Ljava_lang_String_Handler")]
public virtual void set_ImageAssetsFolder(string value);
    private static Delegate GetIsAnimatingHandler();
    private static bool n_IsAnimating(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isAnimating", "()Z", "GetIsAnimatingHandler")]
public virtual bool get_IsAnimating();
    private static Delegate GetIsMergePathsEnabledForKitKatAndAboveHandler();
    private static bool n_IsMergePathsEnabledForKitKatAndAbove(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isMergePathsEnabledForKitKatAndAbove", "()Z", "GetIsMergePathsEnabledForKitKatAndAboveHandler")]
public virtual bool get_IsMergePathsEnabledForKitKatAndAbove();
    private static Delegate GetGetMaxFrameHandler();
    private static float n_GetMaxFrame(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMaxFrame", "()F", "GetGetMaxFrameHandler")]
public virtual float get_MaxFrame();
    private static Delegate GetGetMinFrameHandler();
    private static float n_GetMinFrame(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMinFrame", "()F", "GetGetMinFrameHandler")]
public virtual float get_MinFrame();
    private static Delegate GetGetPerformanceTrackerHandler();
    private static IntPtr n_GetPerformanceTracker(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getPerformanceTracker", "()Lcom/airbnb/lottie/PerformanceTracker;", "GetGetPerformanceTrackerHandler")]
public virtual PerformanceTracker get_PerformanceTracker();
    private static Delegate GetGetProgressHandler();
    private static float n_GetProgress(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetProgress_FHandler();
    private static void n_SetProgress_F(IntPtr jnienv, IntPtr native__this, float progress);
    [RegisterAttribute("getProgress", "()F", "GetGetProgressHandler")]
public virtual float get_Progress();
    [RegisterAttribute("setProgress", "(F)V", "GetSetProgress_FHandler")]
public virtual void set_Progress(float value);
    private static Delegate GetGetRepeatCountHandler();
    private static int n_GetRepeatCount(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRepeatCount_IHandler();
    private static void n_SetRepeatCount_I(IntPtr jnienv, IntPtr native__this, int count);
    [RegisterAttribute("getRepeatCount", "()I", "GetGetRepeatCountHandler")]
public virtual int get_RepeatCount();
    [RegisterAttribute("setRepeatCount", "(I)V", "GetSetRepeatCount_IHandler")]
public virtual void set_RepeatCount(int value);
    private static Delegate GetGetRepeatModeHandler();
    private static int n_GetRepeatMode(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRepeatMode_IHandler();
    private static void n_SetRepeatMode_I(IntPtr jnienv, IntPtr native__this, int mode);
    [RegisterAttribute("getRepeatMode", "()I", "GetGetRepeatModeHandler")]
public virtual int get_RepeatMode();
    [RegisterAttribute("setRepeatMode", "(I)V", "GetSetRepeatMode_IHandler")]
public virtual void set_RepeatMode(int value);
    private static Delegate GetGetScaleHandler();
    private static float n_GetScale(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetScale_FHandler();
    private static void n_SetScale_F(IntPtr jnienv, IntPtr native__this, float scale);
    [RegisterAttribute("getScale", "()F", "GetGetScaleHandler")]
public virtual float get_Scale();
    [RegisterAttribute("setScale", "(F)V", "GetSetScale_FHandler")]
public virtual void set_Scale(float value);
    private static Delegate GetGetSpeedHandler();
    private static float n_GetSpeed(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSpeed_FHandler();
    private static void n_SetSpeed_F(IntPtr jnienv, IntPtr native__this, float speed);
    [RegisterAttribute("getSpeed", "()F", "GetGetSpeedHandler")]
public virtual float get_Speed();
    [RegisterAttribute("setSpeed", "(F)V", "GetSetSpeed_FHandler")]
public virtual void set_Speed(float value);
    private static Delegate GetAddAnimatorListener_Landroid_animation_Animator_AnimatorListener_Handler();
    private static void n_AddAnimatorListener_Landroid_animation_Animator_AnimatorListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("addAnimatorListener", "(Landroid/animation/Animator$AnimatorListener;)V", "GetAddAnimatorListener_Landroid_animation_Animator_AnimatorListener_Handler")]
public virtual void AddAnimatorListener(IAnimatorListener listener);
    private static Delegate GetAddAnimatorPauseListener_Landroid_animation_Animator_AnimatorPauseListener_Handler();
    private static void n_AddAnimatorPauseListener_Landroid_animation_Animator_AnimatorPauseListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("addAnimatorPauseListener", "(Landroid/animation/Animator$AnimatorPauseListener;)V", "GetAddAnimatorPauseListener_Landroid_animation_Animator_AnimatorPauseListener_Handler")]
public virtual void AddAnimatorPauseListener(IAnimatorPauseListener listener);
    private static Delegate GetAddAnimatorUpdateListener_Landroid_animation_ValueAnimator_AnimatorUpdateListener_Handler();
    private static void n_AddAnimatorUpdateListener_Landroid_animation_ValueAnimator_AnimatorUpdateListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_updateListener);
    [RegisterAttribute("addAnimatorUpdateListener", "(Landroid/animation/ValueAnimator$AnimatorUpdateListener;)V", "GetAddAnimatorUpdateListener_Landroid_animation_ValueAnimator_AnimatorUpdateListener_Handler")]
public virtual void AddAnimatorUpdateListener(IAnimatorUpdateListener updateListener);
    private static Delegate GetAddLottieOnCompositionLoadedListener_Lcom_airbnb_lottie_LottieOnCompositionLoadedListener_Handler();
    private static bool n_AddLottieOnCompositionLoadedListener_Lcom_airbnb_lottie_LottieOnCompositionLoadedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_lottieOnCompositionLoadedListener);
    [RegisterAttribute("addLottieOnCompositionLoadedListener", "(Lcom/airbnb/lottie/LottieOnCompositionLoadedListener;)Z", "GetAddLottieOnCompositionLoadedListener_Lcom_airbnb_lottie_LottieOnCompositionLoadedListener_Handler")]
public virtual bool AddLottieOnCompositionLoadedListener(ILottieOnCompositionLoadedListener lottieOnCompositionLoadedListener);
    private static Delegate GetAddValueCallback_Lcom_airbnb_lottie_model_KeyPath_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler();
    private static void n_AddValueCallback_Lcom_airbnb_lottie_model_KeyPath_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_keyPath, IntPtr native_property, IntPtr native__callback);
    [RegisterAttribute("addValueCallback", "(Lcom/airbnb/lottie/model/KeyPath;Ljava/lang/Object;Lcom/airbnb/lottie/value/LottieValueCallback;)V", "GetAddValueCallback_Lcom_airbnb_lottie_model_KeyPath_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void AddValueCallback(KeyPath keyPath, Object property, LottieValueCallback callback);
    private static Delegate GetAddValueCallback_Lcom_airbnb_lottie_model_KeyPath_Ljava_lang_Object_Lcom_airbnb_lottie_value_SimpleLottieValueCallback_Handler();
    private static void n_AddValueCallback_Lcom_airbnb_lottie_model_KeyPath_Ljava_lang_Object_Lcom_airbnb_lottie_value_SimpleLottieValueCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_keyPath, IntPtr native_property, IntPtr native__callback);
    [RegisterAttribute("addValueCallback", "(Lcom/airbnb/lottie/model/KeyPath;Ljava/lang/Object;Lcom/airbnb/lottie/value/SimpleLottieValueCallback;)V", "GetAddValueCallback_Lcom_airbnb_lottie_model_KeyPath_Ljava_lang_Object_Lcom_airbnb_lottie_value_SimpleLottieValueCallback_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void AddValueCallback(KeyPath keyPath, Object property, ISimpleLottieValueCallback callback);
    private static Delegate GetCancelAnimationHandler();
    private static void n_CancelAnimation(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("cancelAnimation", "()V", "GetCancelAnimationHandler")]
public virtual void CancelAnimation();
    private static Delegate GetDisableExtraScaleModeInFitXYHandler();
    private static void n_DisableExtraScaleModeInFitXY(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("disableExtraScaleModeInFitXY", "()V", "GetDisableExtraScaleModeInFitXYHandler")]
public virtual void DisableExtraScaleModeInFitXY();
    private static Delegate GetEnableMergePathsForKitKatAndAbove_ZHandler();
    private static void n_EnableMergePathsForKitKatAndAbove_Z(IntPtr jnienv, IntPtr native__this, bool enable);
    [RegisterAttribute("enableMergePathsForKitKatAndAbove", "(Z)V", "GetEnableMergePathsForKitKatAndAbove_ZHandler")]
public virtual void EnableMergePathsForKitKatAndAbove(bool enable);
    [ObsoleteAttribute]
private static Delegate GetLoop_ZHandler();
    [ObsoleteAttribute]
private static void n_Loop_Z(IntPtr jnienv, IntPtr native__this, bool loop);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("loop", "(Z)V", "GetLoop_ZHandler")]
public virtual void Loop(bool loop);
    private static Delegate GetPauseAnimationHandler();
    private static void n_PauseAnimation(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("pauseAnimation", "()V", "GetPauseAnimationHandler")]
public virtual void PauseAnimation();
    private static Delegate GetPlayAnimationHandler();
    private static void n_PlayAnimation(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("playAnimation", "()V", "GetPlayAnimationHandler")]
public virtual void PlayAnimation();
    private static Delegate GetRemoveAllAnimatorListenersHandler();
    private static void n_RemoveAllAnimatorListeners(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("removeAllAnimatorListeners", "()V", "GetRemoveAllAnimatorListenersHandler")]
public virtual void RemoveAllAnimatorListeners();
    private static Delegate GetRemoveAllLottieOnCompositionLoadedListenerHandler();
    private static void n_RemoveAllLottieOnCompositionLoadedListener(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("removeAllLottieOnCompositionLoadedListener", "()V", "GetRemoveAllLottieOnCompositionLoadedListenerHandler")]
public virtual void RemoveAllLottieOnCompositionLoadedListener();
    private static Delegate GetRemoveAllUpdateListenersHandler();
    private static void n_RemoveAllUpdateListeners(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("removeAllUpdateListeners", "()V", "GetRemoveAllUpdateListenersHandler")]
public virtual void RemoveAllUpdateListeners();
    private static Delegate GetRemoveAnimatorListener_Landroid_animation_Animator_AnimatorListener_Handler();
    private static void n_RemoveAnimatorListener_Landroid_animation_Animator_AnimatorListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("removeAnimatorListener", "(Landroid/animation/Animator$AnimatorListener;)V", "GetRemoveAnimatorListener_Landroid_animation_Animator_AnimatorListener_Handler")]
public virtual void RemoveAnimatorListener(IAnimatorListener listener);
    private static Delegate GetRemoveAnimatorPauseListener_Landroid_animation_Animator_AnimatorPauseListener_Handler();
    private static void n_RemoveAnimatorPauseListener_Landroid_animation_Animator_AnimatorPauseListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("removeAnimatorPauseListener", "(Landroid/animation/Animator$AnimatorPauseListener;)V", "GetRemoveAnimatorPauseListener_Landroid_animation_Animator_AnimatorPauseListener_Handler")]
public virtual void RemoveAnimatorPauseListener(IAnimatorPauseListener listener);
    private static Delegate GetRemoveLottieOnCompositionLoadedListener_Lcom_airbnb_lottie_LottieOnCompositionLoadedListener_Handler();
    private static bool n_RemoveLottieOnCompositionLoadedListener_Lcom_airbnb_lottie_LottieOnCompositionLoadedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_lottieOnCompositionLoadedListener);
    [RegisterAttribute("removeLottieOnCompositionLoadedListener", "(Lcom/airbnb/lottie/LottieOnCompositionLoadedListener;)Z", "GetRemoveLottieOnCompositionLoadedListener_Lcom_airbnb_lottie_LottieOnCompositionLoadedListener_Handler")]
public virtual bool RemoveLottieOnCompositionLoadedListener(ILottieOnCompositionLoadedListener lottieOnCompositionLoadedListener);
    private static Delegate GetRemoveUpdateListener_Landroid_animation_ValueAnimator_AnimatorUpdateListener_Handler();
    private static void n_RemoveUpdateListener_Landroid_animation_ValueAnimator_AnimatorUpdateListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_updateListener);
    [RegisterAttribute("removeUpdateListener", "(Landroid/animation/ValueAnimator$AnimatorUpdateListener;)V", "GetRemoveUpdateListener_Landroid_animation_ValueAnimator_AnimatorUpdateListener_Handler")]
public virtual void RemoveUpdateListener(IAnimatorUpdateListener updateListener);
    private static Delegate GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_Handler();
    private static IntPtr n_ResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_(IntPtr jnienv, IntPtr native__this, IntPtr native_keyPath);
    [RegisterAttribute("resolveKeyPath", "(Lcom/airbnb/lottie/model/KeyPath;)Ljava/util/List;", "GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_Handler")]
public virtual IList`1<KeyPath> ResolveKeyPath(KeyPath keyPath);
    private static Delegate GetResumeAnimationHandler();
    private static void n_ResumeAnimation(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("resumeAnimation", "()V", "GetResumeAnimationHandler")]
public virtual void ResumeAnimation();
    private static Delegate GetReverseAnimationSpeedHandler();
    private static void n_ReverseAnimationSpeed(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("reverseAnimationSpeed", "()V", "GetReverseAnimationSpeedHandler")]
public virtual void ReverseAnimationSpeed();
    private static Delegate GetSetAnimation_IHandler();
    private static void n_SetAnimation_I(IntPtr jnienv, IntPtr native__this, int rawRes);
    [RegisterAttribute("setAnimation", "(I)V", "GetSetAnimation_IHandler")]
public virtual void SetAnimation(int rawRes);
    private static Delegate GetSetAnimation_Ljava_io_InputStream_Ljava_lang_String_Handler();
    private static void n_SetAnimation_Ljava_io_InputStream_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_stream, IntPtr native_cacheKey);
    [RegisterAttribute("setAnimation", "(Ljava/io/InputStream;Ljava/lang/String;)V", "GetSetAnimation_Ljava_io_InputStream_Ljava_lang_String_Handler")]
public virtual void SetAnimation(Stream stream, string cacheKey);
    private static Delegate GetSetAnimation_Ljava_lang_String_Handler();
    private static void n_SetAnimation_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_assetName);
    [RegisterAttribute("setAnimation", "(Ljava/lang/String;)V", "GetSetAnimation_Ljava_lang_String_Handler")]
public virtual void SetAnimation(string assetName);
    [ObsoleteAttribute]
private static Delegate GetSetAnimationFromJson_Ljava_lang_String_Handler();
    [ObsoleteAttribute]
private static void n_SetAnimationFromJson_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_jsonString);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setAnimationFromJson", "(Ljava/lang/String;)V", "GetSetAnimationFromJson_Ljava_lang_String_Handler")]
public virtual void SetAnimationFromJson(string jsonString);
    private static Delegate GetSetAnimationFromJson_Ljava_lang_String_Ljava_lang_String_Handler();
    private static void n_SetAnimationFromJson_Ljava_lang_String_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_jsonString, IntPtr native_cacheKey);
    [RegisterAttribute("setAnimationFromJson", "(Ljava/lang/String;Ljava/lang/String;)V", "GetSetAnimationFromJson_Ljava_lang_String_Ljava_lang_String_Handler")]
public virtual void SetAnimationFromJson(string jsonString, string cacheKey);
    private static Delegate GetSetAnimationFromUrl_Ljava_lang_String_Handler();
    private static void n_SetAnimationFromUrl_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_url);
    [RegisterAttribute("setAnimationFromUrl", "(Ljava/lang/String;)V", "GetSetAnimationFromUrl_Ljava_lang_String_Handler")]
public virtual void SetAnimationFromUrl(string url);
    private static Delegate GetSetAnimationFromUrl_Ljava_lang_String_Ljava_lang_String_Handler();
    private static void n_SetAnimationFromUrl_Ljava_lang_String_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_url, IntPtr native_cacheKey);
    [RegisterAttribute("setAnimationFromUrl", "(Ljava/lang/String;Ljava/lang/String;)V", "GetSetAnimationFromUrl_Ljava_lang_String_Ljava_lang_String_Handler")]
public virtual void SetAnimationFromUrl(string url, string cacheKey);
    private static Delegate GetSetApplyingOpacityToLayersEnabled_ZHandler();
    private static void n_SetApplyingOpacityToLayersEnabled_Z(IntPtr jnienv, IntPtr native__this, bool isApplyingOpacityToLayersEnabled);
    [RegisterAttribute("setApplyingOpacityToLayersEnabled", "(Z)V", "GetSetApplyingOpacityToLayersEnabled_ZHandler")]
public virtual void SetApplyingOpacityToLayersEnabled(bool isApplyingOpacityToLayersEnabled);
    private static Delegate GetSetCacheComposition_ZHandler();
    private static void n_SetCacheComposition_Z(IntPtr jnienv, IntPtr native__this, bool cacheComposition);
    [RegisterAttribute("setCacheComposition", "(Z)V", "GetSetCacheComposition_ZHandler")]
public virtual void SetCacheComposition(bool cacheComposition);
    private static Delegate GetSetFailureListener_Lcom_airbnb_lottie_LottieListener_Handler();
    private static void n_SetFailureListener_Lcom_airbnb_lottie_LottieListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_failureListener);
    [RegisterAttribute("setFailureListener", "(Lcom/airbnb/lottie/LottieListener;)V", "GetSetFailureListener_Lcom_airbnb_lottie_LottieListener_Handler")]
public virtual void SetFailureListener(ILottieListener failureListener);
    private static Delegate GetSetFallbackResource_IHandler();
    private static void n_SetFallbackResource_I(IntPtr jnienv, IntPtr native__this, int fallbackResource);
    [RegisterAttribute("setFallbackResource", "(I)V", "GetSetFallbackResource_IHandler")]
public virtual void SetFallbackResource(int fallbackResource);
    private static Delegate GetSetFontAssetDelegate_Lcom_airbnb_lottie_FontAssetDelegate_Handler();
    private static void n_SetFontAssetDelegate_Lcom_airbnb_lottie_FontAssetDelegate_(IntPtr jnienv, IntPtr native__this, IntPtr native_assetDelegate);
    [RegisterAttribute("setFontAssetDelegate", "(Lcom/airbnb/lottie/FontAssetDelegate;)V", "GetSetFontAssetDelegate_Lcom_airbnb_lottie_FontAssetDelegate_Handler")]
public virtual void SetFontAssetDelegate(FontAssetDelegate assetDelegate);
    private static Delegate GetSetIgnoreDisabledSystemAnimations_ZHandler();
    private static void n_SetIgnoreDisabledSystemAnimations_Z(IntPtr jnienv, IntPtr native__this, bool ignore);
    [RegisterAttribute("setIgnoreDisabledSystemAnimations", "(Z)V", "GetSetIgnoreDisabledSystemAnimations_ZHandler")]
public virtual void SetIgnoreDisabledSystemAnimations(bool ignore);
    private static Delegate GetSetImageAssetDelegate_Lcom_airbnb_lottie_ImageAssetDelegate_Handler();
    private static void n_SetImageAssetDelegate_Lcom_airbnb_lottie_ImageAssetDelegate_(IntPtr jnienv, IntPtr native__this, IntPtr native_assetDelegate);
    [RegisterAttribute("setImageAssetDelegate", "(Lcom/airbnb/lottie/ImageAssetDelegate;)V", "GetSetImageAssetDelegate_Lcom_airbnb_lottie_ImageAssetDelegate_Handler")]
public virtual void SetImageAssetDelegate(IImageAssetDelegate assetDelegate);
    private static Delegate GetSetMaxFrame_IHandler();
    private static void n_SetMaxFrame_I(IntPtr jnienv, IntPtr native__this, int endFrame);
    [RegisterAttribute("setMaxFrame", "(I)V", "GetSetMaxFrame_IHandler")]
public virtual void SetMaxFrame(int endFrame);
    private static Delegate GetSetMaxFrame_Ljava_lang_String_Handler();
    private static void n_SetMaxFrame_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_markerName);
    [RegisterAttribute("setMaxFrame", "(Ljava/lang/String;)V", "GetSetMaxFrame_Ljava_lang_String_Handler")]
public virtual void SetMaxFrame(string markerName);
    private static Delegate GetSetMaxProgress_FHandler();
    private static void n_SetMaxProgress_F(IntPtr jnienv, IntPtr native__this, float endProgress);
    [RegisterAttribute("setMaxProgress", "(F)V", "GetSetMaxProgress_FHandler")]
public virtual void SetMaxProgress(float endProgress);
    private static Delegate GetSetMinAndMaxFrame_IIHandler();
    private static void n_SetMinAndMaxFrame_II(IntPtr jnienv, IntPtr native__this, int minFrame, int maxFrame);
    [RegisterAttribute("setMinAndMaxFrame", "(II)V", "GetSetMinAndMaxFrame_IIHandler")]
public virtual void SetMinAndMaxFrame(int minFrame, int maxFrame);
    private static Delegate GetSetMinAndMaxFrame_Ljava_lang_String_Handler();
    private static void n_SetMinAndMaxFrame_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_markerName);
    [RegisterAttribute("setMinAndMaxFrame", "(Ljava/lang/String;)V", "GetSetMinAndMaxFrame_Ljava_lang_String_Handler")]
public virtual void SetMinAndMaxFrame(string markerName);
    private static Delegate GetSetMinAndMaxFrame_Ljava_lang_String_Ljava_lang_String_ZHandler();
    private static void n_SetMinAndMaxFrame_Ljava_lang_String_Ljava_lang_String_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_startMarkerName, IntPtr native_endMarkerName, bool playEndMarkerStartFrame);
    [RegisterAttribute("setMinAndMaxFrame", "(Ljava/lang/String;Ljava/lang/String;Z)V", "GetSetMinAndMaxFrame_Ljava_lang_String_Ljava_lang_String_ZHandler")]
public virtual void SetMinAndMaxFrame(string startMarkerName, string endMarkerName, bool playEndMarkerStartFrame);
    private static Delegate GetSetMinAndMaxProgress_FFHandler();
    private static void n_SetMinAndMaxProgress_FF(IntPtr jnienv, IntPtr native__this, float minProgress, float maxProgress);
    [RegisterAttribute("setMinAndMaxProgress", "(FF)V", "GetSetMinAndMaxProgress_FFHandler")]
public virtual void SetMinAndMaxProgress(float minProgress, float maxProgress);
    private static Delegate GetSetMinFrame_IHandler();
    private static void n_SetMinFrame_I(IntPtr jnienv, IntPtr native__this, int startFrame);
    [RegisterAttribute("setMinFrame", "(I)V", "GetSetMinFrame_IHandler")]
public virtual void SetMinFrame(int startFrame);
    private static Delegate GetSetMinFrame_Ljava_lang_String_Handler();
    private static void n_SetMinFrame_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_markerName);
    [RegisterAttribute("setMinFrame", "(Ljava/lang/String;)V", "GetSetMinFrame_Ljava_lang_String_Handler")]
public virtual void SetMinFrame(string markerName);
    private static Delegate GetSetMinProgress_FHandler();
    private static void n_SetMinProgress_F(IntPtr jnienv, IntPtr native__this, float startProgress);
    [RegisterAttribute("setMinProgress", "(F)V", "GetSetMinProgress_FHandler")]
public virtual void SetMinProgress(float startProgress);
    private static Delegate GetSetOutlineMasksAndMattes_ZHandler();
    private static void n_SetOutlineMasksAndMattes_Z(IntPtr jnienv, IntPtr native__this, bool outline);
    [RegisterAttribute("setOutlineMasksAndMattes", "(Z)V", "GetSetOutlineMasksAndMattes_ZHandler")]
public virtual void SetOutlineMasksAndMattes(bool outline);
    private static Delegate GetSetPerformanceTrackingEnabled_ZHandler();
    private static void n_SetPerformanceTrackingEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("setPerformanceTrackingEnabled", "(Z)V", "GetSetPerformanceTrackingEnabled_ZHandler")]
public virtual void SetPerformanceTrackingEnabled(bool enabled);
    private static Delegate GetSetRenderMode_Lcom_airbnb_lottie_RenderMode_Handler();
    private static void n_SetRenderMode_Lcom_airbnb_lottie_RenderMode_(IntPtr jnienv, IntPtr native__this, IntPtr native_renderMode);
    [RegisterAttribute("setRenderMode", "(Lcom/airbnb/lottie/RenderMode;)V", "GetSetRenderMode_Lcom_airbnb_lottie_RenderMode_Handler")]
public virtual void SetRenderMode(RenderMode renderMode);
    private static Delegate GetSetSafeMode_ZHandler();
    private static void n_SetSafeMode_Z(IntPtr jnienv, IntPtr native__this, bool safeMode);
    [RegisterAttribute("setSafeMode", "(Z)V", "GetSetSafeMode_ZHandler")]
public virtual void SetSafeMode(bool safeMode);
    private static Delegate GetSetTextDelegate_Lcom_airbnb_lottie_TextDelegate_Handler();
    private static void n_SetTextDelegate_Lcom_airbnb_lottie_TextDelegate_(IntPtr jnienv, IntPtr native__this, IntPtr native_textDelegate);
    [RegisterAttribute("setTextDelegate", "(Lcom/airbnb/lottie/TextDelegate;)V", "GetSetTextDelegate_Lcom_airbnb_lottie_TextDelegate_Handler")]
public virtual void SetTextDelegate(TextDelegate textDelegate);
    private static Delegate GetUpdateBitmap_Ljava_lang_String_Landroid_graphics_Bitmap_Handler();
    private static IntPtr n_UpdateBitmap_Ljava_lang_String_Landroid_graphics_Bitmap_(IntPtr jnienv, IntPtr native__this, IntPtr native_id, IntPtr native_bitmap);
    [RegisterAttribute("updateBitmap", "(Ljava/lang/String;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;", "GetUpdateBitmap_Ljava_lang_String_Landroid_graphics_Bitmap_Handler")]
public virtual Bitmap UpdateBitmap(string id, Bitmap bitmap);
}
[RegisterAttribute("com/airbnb/lottie/LottieComposition")]
public class Com.Airbnb.Lottie.LottieComposition : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getBounds;
    private static Delegate cb_getCharacters;
    private static Delegate cb_getDuration;
    private static Delegate cb_getDurationFrames;
    private static Delegate cb_getEndFrame;
    private static Delegate cb_getFonts;
    private static Delegate cb_getFrameRate;
    private static Delegate cb_hasDashPattern;
    private static Delegate cb_setHasDashPattern_Z;
    private static Delegate cb_hasImages;
    private static Delegate cb_getImages;
    private static Delegate cb_getLayers;
    private static Delegate cb_getMarkers;
    private static Delegate cb_getMaskAndMatteCount;
    private static Delegate cb_getPerformanceTracker;
    private static Delegate cb_getStartFrame;
    private static Delegate cb_getWarnings;
    private static Delegate cb_addWarning_Ljava_lang_String_;
    private static Delegate cb_getMarker_Ljava_lang_String_;
    private static Delegate cb_getPrecomps_Ljava_lang_String_;
    private static Delegate cb_incrementMatteOrMaskCount_I;
    private static Delegate cb_init_Landroid_graphics_Rect_FFFLjava_util_List_Landroidx_collection_LongSparseArray_Ljava_util_Map_Ljava_util_Map_Landroidx_collection_SparseArrayCompat_Ljava_util_Map_Ljava_util_List_;
    private static Delegate cb_layerModelForId_J;
    private static Delegate cb_setPerformanceTrackingEnabled_Z;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Rect Bounds { get; }
    public SparseArrayCompat Characters { get; }
    public float Duration { get; }
    public float DurationFrames { get; }
    public float EndFrame { get; }
    public IDictionary`2<string, Font> Fonts { get; }
    public float FrameRate { get; }
    public bool HasDashPattern { get; public set; }
    public bool HasImages { get; }
    public IDictionary`2<string, LottieImageAsset> Images { get; }
    public IList`1<Layer> Layers { get; }
    public IList`1<Marker> Markers { get; }
    public int MaskAndMatteCount { get; }
    public PerformanceTracker PerformanceTracker { get; }
    public float StartFrame { get; }
    public IList`1<string> Warnings { get; }
    protected LottieComposition(IntPtr javaReference, JniHandleOwnership transfer);
    private static LottieComposition();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetBoundsHandler();
    private static IntPtr n_GetBounds(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getBounds", "()Landroid/graphics/Rect;", "GetGetBoundsHandler")]
public virtual Rect get_Bounds();
    private static Delegate GetGetCharactersHandler();
    private static IntPtr n_GetCharacters(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCharacters", "()Landroidx/collection/SparseArrayCompat;", "GetGetCharactersHandler")]
public virtual SparseArrayCompat get_Characters();
    private static Delegate GetGetDurationHandler();
    private static float n_GetDuration(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDuration", "()F", "GetGetDurationHandler")]
public virtual float get_Duration();
    private static Delegate GetGetDurationFramesHandler();
    private static float n_GetDurationFrames(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDurationFrames", "()F", "GetGetDurationFramesHandler")]
public virtual float get_DurationFrames();
    private static Delegate GetGetEndFrameHandler();
    private static float n_GetEndFrame(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getEndFrame", "()F", "GetGetEndFrameHandler")]
public virtual float get_EndFrame();
    private static Delegate GetGetFontsHandler();
    private static IntPtr n_GetFonts(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getFonts", "()Ljava/util/Map;", "GetGetFontsHandler")]
public virtual IDictionary`2<string, Font> get_Fonts();
    private static Delegate GetGetFrameRateHandler();
    private static float n_GetFrameRate(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getFrameRate", "()F", "GetGetFrameRateHandler")]
public virtual float get_FrameRate();
    private static Delegate GetHasDashPatternHandler();
    private static bool n_HasDashPattern(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetHasDashPattern_ZHandler();
    private static void n_SetHasDashPattern_Z(IntPtr jnienv, IntPtr native__this, bool hasDashPattern);
    [RegisterAttribute("hasDashPattern", "()Z", "GetHasDashPatternHandler")]
public virtual bool get_HasDashPattern();
    [RegisterAttribute("setHasDashPattern", "(Z)V", "GetSetHasDashPattern_ZHandler")]
public virtual void set_HasDashPattern(bool value);
    private static Delegate GetHasImagesHandler();
    private static bool n_HasImages(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasImages", "()Z", "GetHasImagesHandler")]
public virtual bool get_HasImages();
    private static Delegate GetGetImagesHandler();
    private static IntPtr n_GetImages(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getImages", "()Ljava/util/Map;", "GetGetImagesHandler")]
public virtual IDictionary`2<string, LottieImageAsset> get_Images();
    private static Delegate GetGetLayersHandler();
    private static IntPtr n_GetLayers(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLayers", "()Ljava/util/List;", "GetGetLayersHandler")]
public virtual IList`1<Layer> get_Layers();
    private static Delegate GetGetMarkersHandler();
    private static IntPtr n_GetMarkers(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMarkers", "()Ljava/util/List;", "GetGetMarkersHandler")]
public virtual IList`1<Marker> get_Markers();
    private static Delegate GetGetMaskAndMatteCountHandler();
    private static int n_GetMaskAndMatteCount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMaskAndMatteCount", "()I", "GetGetMaskAndMatteCountHandler")]
public virtual int get_MaskAndMatteCount();
    private static Delegate GetGetPerformanceTrackerHandler();
    private static IntPtr n_GetPerformanceTracker(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getPerformanceTracker", "()Lcom/airbnb/lottie/PerformanceTracker;", "GetGetPerformanceTrackerHandler")]
public virtual PerformanceTracker get_PerformanceTracker();
    private static Delegate GetGetStartFrameHandler();
    private static float n_GetStartFrame(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getStartFrame", "()F", "GetGetStartFrameHandler")]
public virtual float get_StartFrame();
    private static Delegate GetGetWarningsHandler();
    private static IntPtr n_GetWarnings(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getWarnings", "()Ljava/util/ArrayList;", "GetGetWarningsHandler")]
public virtual IList`1<string> get_Warnings();
    private static Delegate GetAddWarning_Ljava_lang_String_Handler();
    private static void n_AddWarning_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_warning);
    [RegisterAttribute("addWarning", "(Ljava/lang/String;)V", "GetAddWarning_Ljava_lang_String_Handler")]
public virtual void AddWarning(string warning);
    private static Delegate GetGetMarker_Ljava_lang_String_Handler();
    private static IntPtr n_GetMarker_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_markerName);
    [RegisterAttribute("getMarker", "(Ljava/lang/String;)Lcom/airbnb/lottie/model/Marker;", "GetGetMarker_Ljava_lang_String_Handler")]
public virtual Marker GetMarker(string markerName);
    private static Delegate GetGetPrecomps_Ljava_lang_String_Handler();
    private static IntPtr n_GetPrecomps_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_id);
    [RegisterAttribute("getPrecomps", "(Ljava/lang/String;)Ljava/util/List;", "GetGetPrecomps_Ljava_lang_String_Handler")]
public virtual IList`1<Layer> GetPrecomps(string id);
    private static Delegate GetIncrementMatteOrMaskCount_IHandler();
    private static void n_IncrementMatteOrMaskCount_I(IntPtr jnienv, IntPtr native__this, int amount);
    [RegisterAttribute("incrementMatteOrMaskCount", "(I)V", "GetIncrementMatteOrMaskCount_IHandler")]
public virtual void IncrementMatteOrMaskCount(int amount);
    private static Delegate GetInit_Landroid_graphics_Rect_FFFLjava_util_List_Landroidx_collection_LongSparseArray_Ljava_util_Map_Ljava_util_Map_Landroidx_collection_SparseArrayCompat_Ljava_util_Map_Ljava_util_List_Handler();
    private static void n_Init_Landroid_graphics_Rect_FFFLjava_util_List_Landroidx_collection_LongSparseArray_Ljava_util_Map_Ljava_util_Map_Landroidx_collection_SparseArrayCompat_Ljava_util_Map_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_bounds, float startFrame, float endFrame, float frameRate, IntPtr native_layers, IntPtr native_layerMap, IntPtr native_precomps, IntPtr native_images, IntPtr native_characters, IntPtr native_fonts, IntPtr native_markers);
    [RegisterAttribute("init", "(Landroid/graphics/Rect;FFFLjava/util/List;Landroidx/collection/LongSparseArray;Ljava/util/Map;Ljava/util/Map;Landroidx/collection/SparseArrayCompat;Ljava/util/Map;Ljava/util/List;)V", "GetInit_Landroid_graphics_Rect_FFFLjava_util_List_Landroidx_collection_LongSparseArray_Ljava_util_Map_Ljava_util_Map_Landroidx_collection_SparseArrayCompat_Ljava_util_Map_Ljava_util_List_Handler")]
public virtual void Init(Rect bounds, float startFrame, float endFrame, float frameRate, IList`1<Layer> layers, LongSparseArray layerMap, IDictionary`2<string, IList`1<Layer>> precomps, IDictionary`2<string, LottieImageAsset> images, SparseArrayCompat characters, IDictionary`2<string, Font> fonts, IList`1<Marker> markers);
    private static Delegate GetLayerModelForId_JHandler();
    private static IntPtr n_LayerModelForId_J(IntPtr jnienv, IntPtr native__this, long id);
    [RegisterAttribute("layerModelForId", "(J)Lcom/airbnb/lottie/model/layer/Layer;", "GetLayerModelForId_JHandler")]
public virtual Layer LayerModelForId(long id);
    private static Delegate GetSetPerformanceTrackingEnabled_ZHandler();
    private static void n_SetPerformanceTrackingEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("setPerformanceTrackingEnabled", "(Z)V", "GetSetPerformanceTrackingEnabled_ZHandler")]
public virtual void SetPerformanceTrackingEnabled(bool enabled);
}
[RegisterAttribute("com/airbnb/lottie/LottieCompositionFactory")]
public class Com.Airbnb.Lottie.LottieCompositionFactory : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected LottieCompositionFactory(IntPtr javaReference, JniHandleOwnership transfer);
    private static LottieCompositionFactory();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("clearCache", "(Landroid/content/Context;)V", "")]
public static void ClearCache(Context context);
    [RegisterAttribute("fromAsset", "(Landroid/content/Context;Ljava/lang/String;)Lcom/airbnb/lottie/LottieTask;", "")]
public static LottieTask FromAsset(Context context, string fileName);
    [RegisterAttribute("fromAsset", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Lcom/airbnb/lottie/LottieTask;", "")]
public static LottieTask FromAsset(Context context, string fileName, string cacheKey);
    [RegisterAttribute("fromAssetSync", "(Landroid/content/Context;Ljava/lang/String;)Lcom/airbnb/lottie/LottieResult;", "")]
public static LottieResult FromAssetSync(Context context, string fileName);
    [RegisterAttribute("fromAssetSync", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Lcom/airbnb/lottie/LottieResult;", "")]
public static LottieResult FromAssetSync(Context context, string fileName, string cacheKey);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("fromJson", "(Lorg/json/JSONObject;Ljava/lang/String;)Lcom/airbnb/lottie/LottieTask;", "")]
public static LottieTask FromJson(JSONObject json, string cacheKey);
    [RegisterAttribute("fromJsonInputStream", "(Ljava/io/InputStream;Ljava/lang/String;)Lcom/airbnb/lottie/LottieTask;", "")]
public static LottieTask FromJsonInputStream(Stream stream, string cacheKey);
    [RegisterAttribute("fromJsonInputStreamSync", "(Ljava/io/InputStream;Ljava/lang/String;)Lcom/airbnb/lottie/LottieResult;", "")]
public static LottieResult FromJsonInputStreamSync(Stream stream, string cacheKey);
    [RegisterAttribute("fromJsonReader", "(Lcom/airbnb/lottie/parser/moshi/JsonReader;Ljava/lang/String;)Lcom/airbnb/lottie/LottieTask;", "")]
public static LottieTask FromJsonReader(JsonReader reader, string cacheKey);
    [RegisterAttribute("fromJsonReaderSync", "(Lcom/airbnb/lottie/parser/moshi/JsonReader;Ljava/lang/String;)Lcom/airbnb/lottie/LottieResult;", "")]
public static LottieResult FromJsonReaderSync(JsonReader reader, string cacheKey);
    [RegisterAttribute("fromJsonString", "(Ljava/lang/String;Ljava/lang/String;)Lcom/airbnb/lottie/LottieTask;", "")]
public static LottieTask FromJsonString(string json, string cacheKey);
    [RegisterAttribute("fromJsonStringSync", "(Ljava/lang/String;Ljava/lang/String;)Lcom/airbnb/lottie/LottieResult;", "")]
public static LottieResult FromJsonStringSync(string json, string cacheKey);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("fromJsonSync", "(Lorg/json/JSONObject;Ljava/lang/String;)Lcom/airbnb/lottie/LottieResult;", "")]
public static LottieResult FromJsonSync(JSONObject json, string cacheKey);
    [RegisterAttribute("fromRawRes", "(Landroid/content/Context;I)Lcom/airbnb/lottie/LottieTask;", "")]
public static LottieTask FromRawRes(Context context, int rawRes);
    [RegisterAttribute("fromRawRes", "(Landroid/content/Context;ILjava/lang/String;)Lcom/airbnb/lottie/LottieTask;", "")]
public static LottieTask FromRawRes(Context context, int rawRes, string cacheKey);
    [RegisterAttribute("fromRawResSync", "(Landroid/content/Context;I)Lcom/airbnb/lottie/LottieResult;", "")]
public static LottieResult FromRawResSync(Context context, int rawRes);
    [RegisterAttribute("fromRawResSync", "(Landroid/content/Context;ILjava/lang/String;)Lcom/airbnb/lottie/LottieResult;", "")]
public static LottieResult FromRawResSync(Context context, int rawRes, string cacheKey);
    [RegisterAttribute("fromUrl", "(Landroid/content/Context;Ljava/lang/String;)Lcom/airbnb/lottie/LottieTask;", "")]
public static LottieTask FromUrl(Context context, string url);
    [RegisterAttribute("fromUrl", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Lcom/airbnb/lottie/LottieTask;", "")]
public static LottieTask FromUrl(Context context, string url, string cacheKey);
    [RegisterAttribute("fromUrlSync", "(Landroid/content/Context;Ljava/lang/String;)Lcom/airbnb/lottie/LottieResult;", "")]
public static LottieResult FromUrlSync(Context context, string url);
    [RegisterAttribute("fromUrlSync", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Lcom/airbnb/lottie/LottieResult;", "")]
public static LottieResult FromUrlSync(Context context, string url, string cacheKey);
    [RegisterAttribute("fromZipStream", "(Ljava/util/zip/ZipInputStream;Ljava/lang/String;)Lcom/airbnb/lottie/LottieTask;", "")]
public static LottieTask FromZipStream(ZipInputStream inputStream, string cacheKey);
    [RegisterAttribute("fromZipStreamSync", "(Ljava/util/zip/ZipInputStream;Ljava/lang/String;)Lcom/airbnb/lottie/LottieResult;", "")]
public static LottieResult FromZipStreamSync(ZipInputStream inputStream, string cacheKey);
    [RegisterAttribute("setMaxCacheSize", "(I)V", "")]
public static void SetMaxCacheSize(int size);
}
[RegisterAttribute("com/airbnb/lottie/LottieConfig")]
public class Com.Airbnb.Lottie.LottieConfig : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected LottieConfig(IntPtr javaReference, JniHandleOwnership transfer);
    private static LottieConfig();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("com/airbnb/lottie/LottieDrawable")]
public class Com.Airbnb.Lottie.LottieDrawable : Drawable {
    [RegisterAttribute("INFINITE")]
public static int Infinite;
    [RegisterAttribute("RESTART")]
public static int Restart;
    [RegisterAttribute("REVERSE")]
public static int Reverse;
    private static JniPeerMembers _members;
    private static Delegate cb_isApplyingOpacityToLayersEnabled;
    private static Delegate cb_setApplyingOpacityToLayersEnabled_Z;
    private static Delegate cb_getComposition;
    private static Delegate cb_getFrame;
    private static Delegate cb_setFrame_I;
    private static Delegate cb_hasMasks;
    private static Delegate cb_hasMatte;
    private static Delegate cb_getImageAssetsFolder;
    private static Delegate cb_isAnimating;
    private static Delegate cb_isLooping;
    private static Delegate cb_isMergePathsEnabledForKitKatAndAbove;
    private static Delegate cb_isRunning;
    private static Delegate cb_getMaxFrame;
    private static Delegate cb_getMinFrame;
    private static Delegate cb_getOpacity;
    private static Delegate cb_getPerformanceTracker;
    private static Delegate cb_getProgress;
    private static Delegate cb_setProgress_F;
    private static Delegate cb_getRepeatCount;
    private static Delegate cb_setRepeatCount_I;
    private static Delegate cb_getRepeatMode;
    private static Delegate cb_setRepeatMode_I;
    private static Delegate cb_getScale;
    private static Delegate cb_setScale_F;
    private static Delegate cb_getSpeed;
    private static Delegate cb_setSpeed_F;
    private static Delegate cb_getTextDelegate;
    private static Delegate cb_setTextDelegate_Lcom_airbnb_lottie_TextDelegate_;
    private static Delegate cb_addAnimatorListener_Landroid_animation_Animator_AnimatorListener_;
    private static Delegate cb_addAnimatorPauseListener_Landroid_animation_Animator_AnimatorPauseListener_;
    private static Delegate cb_addAnimatorUpdateListener_Landroid_animation_ValueAnimator_AnimatorUpdateListener_;
    private static Delegate cb_addValueCallback_Lcom_airbnb_lottie_model_KeyPath_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_;
    private static Delegate cb_addValueCallback_Lcom_airbnb_lottie_model_KeyPath_Ljava_lang_Object_Lcom_airbnb_lottie_value_SimpleLottieValueCallback_;
    private static Delegate cb_cancelAnimation;
    private static Delegate cb_clearComposition;
    private static Delegate cb_disableExtraScaleModeInFitXY;
    private static Delegate cb_draw_Landroid_graphics_Canvas_;
    private static Delegate cb_enableMergePathsForKitKatAndAbove;
    private static Delegate cb_enableMergePathsForKitKatAndAbove_Z;
    private static Delegate cb_endAnimation;
    private static Delegate cb_getImageAsset_Ljava_lang_String_;
    private static Delegate cb_getTypeface_Ljava_lang_String_Ljava_lang_String_;
    private static Delegate cb_invalidateDrawable_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_loop_Z;
    private static Delegate cb_pauseAnimation;
    private static Delegate cb_playAnimation;
    private static Delegate cb_removeAllAnimatorListeners;
    private static Delegate cb_removeAllUpdateListeners;
    private static Delegate cb_removeAnimatorListener_Landroid_animation_Animator_AnimatorListener_;
    private static Delegate cb_removeAnimatorPauseListener_Landroid_animation_Animator_AnimatorPauseListener_;
    private static Delegate cb_removeAnimatorUpdateListener_Landroid_animation_ValueAnimator_AnimatorUpdateListener_;
    private static Delegate cb_resolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_;
    private static Delegate cb_resumeAnimation;
    private static Delegate cb_reverseAnimationSpeed;
    private static Delegate cb_scheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_J;
    private static Delegate cb_setAlpha_I;
    private static Delegate cb_setColorFilter_Landroid_graphics_ColorFilter_;
    private static Delegate cb_setComposition_Lcom_airbnb_lottie_LottieComposition_;
    private static Delegate cb_setFontAssetDelegate_Lcom_airbnb_lottie_FontAssetDelegate_;
    private static Delegate cb_setIgnoreDisabledSystemAnimations_Z;
    private static Delegate cb_setImageAssetDelegate_Lcom_airbnb_lottie_ImageAssetDelegate_;
    private static Delegate cb_setImagesAssetsFolder_Ljava_lang_String_;
    private static Delegate cb_setMaxFrame_I;
    private static Delegate cb_setMaxFrame_Ljava_lang_String_;
    private static Delegate cb_setMaxProgress_F;
    private static Delegate cb_setMinAndMaxFrame_II;
    private static Delegate cb_setMinAndMaxFrame_Ljava_lang_String_;
    private static Delegate cb_setMinAndMaxFrame_Ljava_lang_String_Ljava_lang_String_Z;
    private static Delegate cb_setMinAndMaxProgress_FF;
    private static Delegate cb_setMinFrame_I;
    private static Delegate cb_setMinFrame_Ljava_lang_String_;
    private static Delegate cb_setMinProgress_F;
    private static Delegate cb_setOutlineMasksAndMattes_Z;
    private static Delegate cb_setPerformanceTrackingEnabled_Z;
    private static Delegate cb_setSafeMode_Z;
    private static Delegate cb_start;
    private static Delegate cb_stop;
    private static Delegate cb_unscheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_;
    private static Delegate cb_updateBitmap_Ljava_lang_String_Landroid_graphics_Bitmap_;
    private static Delegate cb_useTextGlyphs;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool ApplyingOpacityToLayersEnabled { get; public set; }
    public LottieComposition Composition { get; }
    public int Frame { get; public set; }
    public bool HasMasks { get; }
    public bool HasMatte { get; }
    public string ImageAssetsFolder { get; }
    public bool IsAnimating { get; }
    public bool IsLooping { get; }
    public bool IsMergePathsEnabledForKitKatAndAbove { get; }
    public bool IsRunning { get; }
    public float MaxFrame { get; }
    public float MinFrame { get; }
    public int Opacity { get; }
    public PerformanceTracker PerformanceTracker { get; }
    public float Progress { get; public set; }
    public int RepeatCount { get; public set; }
    public int RepeatMode { get; public set; }
    public float Scale { get; public set; }
    public float Speed { get; public set; }
    public TextDelegate TextDelegate { get; public set; }
    protected LottieDrawable(IntPtr javaReference, JniHandleOwnership transfer);
    private static LottieDrawable();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsApplyingOpacityToLayersEnabledHandler();
    private static bool n_IsApplyingOpacityToLayersEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetApplyingOpacityToLayersEnabled_ZHandler();
    private static void n_SetApplyingOpacityToLayersEnabled_Z(IntPtr jnienv, IntPtr native__this, bool isApplyingOpacityToLayersEnabled);
    [RegisterAttribute("isApplyingOpacityToLayersEnabled", "()Z", "GetIsApplyingOpacityToLayersEnabledHandler")]
public virtual bool get_ApplyingOpacityToLayersEnabled();
    [RegisterAttribute("setApplyingOpacityToLayersEnabled", "(Z)V", "GetSetApplyingOpacityToLayersEnabled_ZHandler")]
public virtual void set_ApplyingOpacityToLayersEnabled(bool value);
    private static Delegate GetGetCompositionHandler();
    private static IntPtr n_GetComposition(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getComposition", "()Lcom/airbnb/lottie/LottieComposition;", "GetGetCompositionHandler")]
public virtual LottieComposition get_Composition();
    private static Delegate GetGetFrameHandler();
    private static int n_GetFrame(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetFrame_IHandler();
    private static void n_SetFrame_I(IntPtr jnienv, IntPtr native__this, int frame);
    [RegisterAttribute("getFrame", "()I", "GetGetFrameHandler")]
public virtual int get_Frame();
    [RegisterAttribute("setFrame", "(I)V", "GetSetFrame_IHandler")]
public virtual void set_Frame(int value);
    private static Delegate GetHasMasksHandler();
    private static bool n_HasMasks(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasMasks", "()Z", "GetHasMasksHandler")]
public virtual bool get_HasMasks();
    private static Delegate GetHasMatteHandler();
    private static bool n_HasMatte(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasMatte", "()Z", "GetHasMatteHandler")]
public virtual bool get_HasMatte();
    private static Delegate GetGetImageAssetsFolderHandler();
    private static IntPtr n_GetImageAssetsFolder(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getImageAssetsFolder", "()Ljava/lang/String;", "GetGetImageAssetsFolderHandler")]
public virtual string get_ImageAssetsFolder();
    private static Delegate GetIsAnimatingHandler();
    private static bool n_IsAnimating(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isAnimating", "()Z", "GetIsAnimatingHandler")]
public virtual bool get_IsAnimating();
    private static Delegate GetIsLoopingHandler();
    private static bool n_IsLooping(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isLooping", "()Z", "GetIsLoopingHandler")]
public virtual bool get_IsLooping();
    private static Delegate GetIsMergePathsEnabledForKitKatAndAboveHandler();
    private static bool n_IsMergePathsEnabledForKitKatAndAbove(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isMergePathsEnabledForKitKatAndAbove", "()Z", "GetIsMergePathsEnabledForKitKatAndAboveHandler")]
public virtual bool get_IsMergePathsEnabledForKitKatAndAbove();
    private static Delegate GetIsRunningHandler();
    private static bool n_IsRunning(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isRunning", "()Z", "GetIsRunningHandler")]
public virtual bool get_IsRunning();
    private static Delegate GetGetMaxFrameHandler();
    private static float n_GetMaxFrame(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMaxFrame", "()F", "GetGetMaxFrameHandler")]
public virtual float get_MaxFrame();
    private static Delegate GetGetMinFrameHandler();
    private static float n_GetMinFrame(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMinFrame", "()F", "GetGetMinFrameHandler")]
public virtual float get_MinFrame();
    private static Delegate GetGetOpacityHandler();
    private static int n_GetOpacity(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getOpacity", "()I", "GetGetOpacityHandler")]
public virtual int get_Opacity();
    private static Delegate GetGetPerformanceTrackerHandler();
    private static IntPtr n_GetPerformanceTracker(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getPerformanceTracker", "()Lcom/airbnb/lottie/PerformanceTracker;", "GetGetPerformanceTrackerHandler")]
public virtual PerformanceTracker get_PerformanceTracker();
    private static Delegate GetGetProgressHandler();
    private static float n_GetProgress(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetProgress_FHandler();
    private static void n_SetProgress_F(IntPtr jnienv, IntPtr native__this, float progress);
    [RegisterAttribute("getProgress", "()F", "GetGetProgressHandler")]
public virtual float get_Progress();
    [RegisterAttribute("setProgress", "(F)V", "GetSetProgress_FHandler")]
public virtual void set_Progress(float value);
    private static Delegate GetGetRepeatCountHandler();
    private static int n_GetRepeatCount(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRepeatCount_IHandler();
    private static void n_SetRepeatCount_I(IntPtr jnienv, IntPtr native__this, int count);
    [RegisterAttribute("getRepeatCount", "()I", "GetGetRepeatCountHandler")]
public virtual int get_RepeatCount();
    [RegisterAttribute("setRepeatCount", "(I)V", "GetSetRepeatCount_IHandler")]
public virtual void set_RepeatCount(int value);
    private static Delegate GetGetRepeatModeHandler();
    private static int n_GetRepeatMode(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRepeatMode_IHandler();
    private static void n_SetRepeatMode_I(IntPtr jnienv, IntPtr native__this, int mode);
    [RegisterAttribute("getRepeatMode", "()I", "GetGetRepeatModeHandler")]
public virtual int get_RepeatMode();
    [RegisterAttribute("setRepeatMode", "(I)V", "GetSetRepeatMode_IHandler")]
public virtual void set_RepeatMode(int value);
    private static Delegate GetGetScaleHandler();
    private static float n_GetScale(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetScale_FHandler();
    private static void n_SetScale_F(IntPtr jnienv, IntPtr native__this, float scale);
    [RegisterAttribute("getScale", "()F", "GetGetScaleHandler")]
public virtual float get_Scale();
    [RegisterAttribute("setScale", "(F)V", "GetSetScale_FHandler")]
public virtual void set_Scale(float value);
    private static Delegate GetGetSpeedHandler();
    private static float n_GetSpeed(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSpeed_FHandler();
    private static void n_SetSpeed_F(IntPtr jnienv, IntPtr native__this, float speed);
    [RegisterAttribute("getSpeed", "()F", "GetGetSpeedHandler")]
public virtual float get_Speed();
    [RegisterAttribute("setSpeed", "(F)V", "GetSetSpeed_FHandler")]
public virtual void set_Speed(float value);
    private static Delegate GetGetTextDelegateHandler();
    private static IntPtr n_GetTextDelegate(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTextDelegate_Lcom_airbnb_lottie_TextDelegate_Handler();
    private static void n_SetTextDelegate_Lcom_airbnb_lottie_TextDelegate_(IntPtr jnienv, IntPtr native__this, IntPtr native_textDelegate);
    [RegisterAttribute("getTextDelegate", "()Lcom/airbnb/lottie/TextDelegate;", "GetGetTextDelegateHandler")]
public virtual TextDelegate get_TextDelegate();
    [RegisterAttribute("setTextDelegate", "(Lcom/airbnb/lottie/TextDelegate;)V", "GetSetTextDelegate_Lcom_airbnb_lottie_TextDelegate_Handler")]
public virtual void set_TextDelegate(TextDelegate value);
    private static Delegate GetAddAnimatorListener_Landroid_animation_Animator_AnimatorListener_Handler();
    private static void n_AddAnimatorListener_Landroid_animation_Animator_AnimatorListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("addAnimatorListener", "(Landroid/animation/Animator$AnimatorListener;)V", "GetAddAnimatorListener_Landroid_animation_Animator_AnimatorListener_Handler")]
public virtual void AddAnimatorListener(IAnimatorListener listener);
    private static Delegate GetAddAnimatorPauseListener_Landroid_animation_Animator_AnimatorPauseListener_Handler();
    private static void n_AddAnimatorPauseListener_Landroid_animation_Animator_AnimatorPauseListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("addAnimatorPauseListener", "(Landroid/animation/Animator$AnimatorPauseListener;)V", "GetAddAnimatorPauseListener_Landroid_animation_Animator_AnimatorPauseListener_Handler")]
public virtual void AddAnimatorPauseListener(IAnimatorPauseListener listener);
    private static Delegate GetAddAnimatorUpdateListener_Landroid_animation_ValueAnimator_AnimatorUpdateListener_Handler();
    private static void n_AddAnimatorUpdateListener_Landroid_animation_ValueAnimator_AnimatorUpdateListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_updateListener);
    [RegisterAttribute("addAnimatorUpdateListener", "(Landroid/animation/ValueAnimator$AnimatorUpdateListener;)V", "GetAddAnimatorUpdateListener_Landroid_animation_ValueAnimator_AnimatorUpdateListener_Handler")]
public virtual void AddAnimatorUpdateListener(IAnimatorUpdateListener updateListener);
    private static Delegate GetAddValueCallback_Lcom_airbnb_lottie_model_KeyPath_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler();
    private static void n_AddValueCallback_Lcom_airbnb_lottie_model_KeyPath_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_keyPath, IntPtr native_property, IntPtr native__callback);
    [RegisterAttribute("addValueCallback", "(Lcom/airbnb/lottie/model/KeyPath;Ljava/lang/Object;Lcom/airbnb/lottie/value/LottieValueCallback;)V", "GetAddValueCallback_Lcom_airbnb_lottie_model_KeyPath_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void AddValueCallback(KeyPath keyPath, Object property, LottieValueCallback callback);
    private static Delegate GetAddValueCallback_Lcom_airbnb_lottie_model_KeyPath_Ljava_lang_Object_Lcom_airbnb_lottie_value_SimpleLottieValueCallback_Handler();
    private static void n_AddValueCallback_Lcom_airbnb_lottie_model_KeyPath_Ljava_lang_Object_Lcom_airbnb_lottie_value_SimpleLottieValueCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_keyPath, IntPtr native_property, IntPtr native__callback);
    [RegisterAttribute("addValueCallback", "(Lcom/airbnb/lottie/model/KeyPath;Ljava/lang/Object;Lcom/airbnb/lottie/value/SimpleLottieValueCallback;)V", "GetAddValueCallback_Lcom_airbnb_lottie_model_KeyPath_Ljava_lang_Object_Lcom_airbnb_lottie_value_SimpleLottieValueCallback_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void AddValueCallback(KeyPath keyPath, Object property, ISimpleLottieValueCallback callback);
    private static Delegate GetCancelAnimationHandler();
    private static void n_CancelAnimation(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("cancelAnimation", "()V", "GetCancelAnimationHandler")]
public virtual void CancelAnimation();
    private static Delegate GetClearCompositionHandler();
    private static void n_ClearComposition(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clearComposition", "()V", "GetClearCompositionHandler")]
public virtual void ClearComposition();
    private static Delegate GetDisableExtraScaleModeInFitXYHandler();
    private static void n_DisableExtraScaleModeInFitXY(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("disableExtraScaleModeInFitXY", "()V", "GetDisableExtraScaleModeInFitXYHandler")]
public virtual void DisableExtraScaleModeInFitXY();
    private static Delegate GetDraw_Landroid_graphics_Canvas_Handler();
    private static void n_Draw_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas);
    [RegisterAttribute("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")]
public virtual void Draw(Canvas canvas);
    private static Delegate GetEnableMergePathsForKitKatAndAboveHandler();
    private static bool n_EnableMergePathsForKitKatAndAbove(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("enableMergePathsForKitKatAndAbove", "()Z", "GetEnableMergePathsForKitKatAndAboveHandler")]
public virtual bool EnableMergePathsForKitKatAndAbove();
    private static Delegate GetEnableMergePathsForKitKatAndAbove_ZHandler();
    private static void n_EnableMergePathsForKitKatAndAbove_Z(IntPtr jnienv, IntPtr native__this, bool enable);
    [RegisterAttribute("enableMergePathsForKitKatAndAbove", "(Z)V", "GetEnableMergePathsForKitKatAndAbove_ZHandler")]
public virtual void EnableMergePathsForKitKatAndAbove(bool enable);
    private static Delegate GetEndAnimationHandler();
    private static void n_EndAnimation(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("endAnimation", "()V", "GetEndAnimationHandler")]
public virtual void EndAnimation();
    private static Delegate GetGetImageAsset_Ljava_lang_String_Handler();
    private static IntPtr n_GetImageAsset_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_id);
    [RegisterAttribute("getImageAsset", "(Ljava/lang/String;)Landroid/graphics/Bitmap;", "GetGetImageAsset_Ljava_lang_String_Handler")]
public virtual Bitmap GetImageAsset(string id);
    private static Delegate GetGetTypeface_Ljava_lang_String_Ljava_lang_String_Handler();
    private static IntPtr n_GetTypeface_Ljava_lang_String_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_fontFamily, IntPtr native_style);
    [RegisterAttribute("getTypeface", "(Ljava/lang/String;Ljava/lang/String;)Landroid/graphics/Typeface;", "GetGetTypeface_Ljava_lang_String_Ljava_lang_String_Handler")]
public virtual Typeface GetTypeface(string fontFamily, string style);
    private static Delegate GetInvalidateDrawable_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_InvalidateDrawable_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_who);
    [RegisterAttribute("invalidateDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetInvalidateDrawable_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void InvalidateDrawable(Drawable who);
    [ObsoleteAttribute]
private static Delegate GetLoop_ZHandler();
    [ObsoleteAttribute]
private static void n_Loop_Z(IntPtr jnienv, IntPtr native__this, bool loop);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("loop", "(Z)V", "GetLoop_ZHandler")]
public virtual void Loop(bool loop);
    private static Delegate GetPauseAnimationHandler();
    private static void n_PauseAnimation(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("pauseAnimation", "()V", "GetPauseAnimationHandler")]
public virtual void PauseAnimation();
    private static Delegate GetPlayAnimationHandler();
    private static void n_PlayAnimation(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("playAnimation", "()V", "GetPlayAnimationHandler")]
public virtual void PlayAnimation();
    private static Delegate GetRemoveAllAnimatorListenersHandler();
    private static void n_RemoveAllAnimatorListeners(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("removeAllAnimatorListeners", "()V", "GetRemoveAllAnimatorListenersHandler")]
public virtual void RemoveAllAnimatorListeners();
    private static Delegate GetRemoveAllUpdateListenersHandler();
    private static void n_RemoveAllUpdateListeners(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("removeAllUpdateListeners", "()V", "GetRemoveAllUpdateListenersHandler")]
public virtual void RemoveAllUpdateListeners();
    private static Delegate GetRemoveAnimatorListener_Landroid_animation_Animator_AnimatorListener_Handler();
    private static void n_RemoveAnimatorListener_Landroid_animation_Animator_AnimatorListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("removeAnimatorListener", "(Landroid/animation/Animator$AnimatorListener;)V", "GetRemoveAnimatorListener_Landroid_animation_Animator_AnimatorListener_Handler")]
public virtual void RemoveAnimatorListener(IAnimatorListener listener);
    private static Delegate GetRemoveAnimatorPauseListener_Landroid_animation_Animator_AnimatorPauseListener_Handler();
    private static void n_RemoveAnimatorPauseListener_Landroid_animation_Animator_AnimatorPauseListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("removeAnimatorPauseListener", "(Landroid/animation/Animator$AnimatorPauseListener;)V", "GetRemoveAnimatorPauseListener_Landroid_animation_Animator_AnimatorPauseListener_Handler")]
public virtual void RemoveAnimatorPauseListener(IAnimatorPauseListener listener);
    private static Delegate GetRemoveAnimatorUpdateListener_Landroid_animation_ValueAnimator_AnimatorUpdateListener_Handler();
    private static void n_RemoveAnimatorUpdateListener_Landroid_animation_ValueAnimator_AnimatorUpdateListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_updateListener);
    [RegisterAttribute("removeAnimatorUpdateListener", "(Landroid/animation/ValueAnimator$AnimatorUpdateListener;)V", "GetRemoveAnimatorUpdateListener_Landroid_animation_ValueAnimator_AnimatorUpdateListener_Handler")]
public virtual void RemoveAnimatorUpdateListener(IAnimatorUpdateListener updateListener);
    private static Delegate GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_Handler();
    private static IntPtr n_ResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_(IntPtr jnienv, IntPtr native__this, IntPtr native_keyPath);
    [RegisterAttribute("resolveKeyPath", "(Lcom/airbnb/lottie/model/KeyPath;)Ljava/util/List;", "GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_Handler")]
public virtual IList`1<KeyPath> ResolveKeyPath(KeyPath keyPath);
    private static Delegate GetResumeAnimationHandler();
    private static void n_ResumeAnimation(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("resumeAnimation", "()V", "GetResumeAnimationHandler")]
public virtual void ResumeAnimation();
    private static Delegate GetReverseAnimationSpeedHandler();
    private static void n_ReverseAnimationSpeed(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("reverseAnimationSpeed", "()V", "GetReverseAnimationSpeedHandler")]
public virtual void ReverseAnimationSpeed();
    private static Delegate GetScheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_JHandler();
    private static void n_ScheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_J(IntPtr jnienv, IntPtr native__this, IntPtr native_who, IntPtr native_what, long when);
    [RegisterAttribute("scheduleDrawable", "(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V", "GetScheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_JHandler")]
public virtual void ScheduleDrawable(Drawable who, IRunnable what, long when);
    private static Delegate GetSetAlpha_IHandler();
    private static void n_SetAlpha_I(IntPtr jnienv, IntPtr native__this, int alpha);
    [RegisterAttribute("setAlpha", "(I)V", "GetSetAlpha_IHandler")]
public virtual void SetAlpha(int alpha);
    private static Delegate GetSetColorFilter_Landroid_graphics_ColorFilter_Handler();
    private static void n_SetColorFilter_Landroid_graphics_ColorFilter_(IntPtr jnienv, IntPtr native__this, IntPtr native_colorFilter);
    [RegisterAttribute("setColorFilter", "(Landroid/graphics/ColorFilter;)V", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")]
public virtual void SetColorFilter(ColorFilter colorFilter);
    private static Delegate GetSetComposition_Lcom_airbnb_lottie_LottieComposition_Handler();
    private static bool n_SetComposition_Lcom_airbnb_lottie_LottieComposition_(IntPtr jnienv, IntPtr native__this, IntPtr native_composition);
    [RegisterAttribute("setComposition", "(Lcom/airbnb/lottie/LottieComposition;)Z", "GetSetComposition_Lcom_airbnb_lottie_LottieComposition_Handler")]
public virtual bool SetComposition(LottieComposition composition);
    private static Delegate GetSetFontAssetDelegate_Lcom_airbnb_lottie_FontAssetDelegate_Handler();
    private static void n_SetFontAssetDelegate_Lcom_airbnb_lottie_FontAssetDelegate_(IntPtr jnienv, IntPtr native__this, IntPtr native_assetDelegate);
    [RegisterAttribute("setFontAssetDelegate", "(Lcom/airbnb/lottie/FontAssetDelegate;)V", "GetSetFontAssetDelegate_Lcom_airbnb_lottie_FontAssetDelegate_Handler")]
public virtual void SetFontAssetDelegate(FontAssetDelegate assetDelegate);
    private static Delegate GetSetIgnoreDisabledSystemAnimations_ZHandler();
    private static void n_SetIgnoreDisabledSystemAnimations_Z(IntPtr jnienv, IntPtr native__this, bool ignore);
    [RegisterAttribute("setIgnoreDisabledSystemAnimations", "(Z)V", "GetSetIgnoreDisabledSystemAnimations_ZHandler")]
public virtual void SetIgnoreDisabledSystemAnimations(bool ignore);
    private static Delegate GetSetImageAssetDelegate_Lcom_airbnb_lottie_ImageAssetDelegate_Handler();
    private static void n_SetImageAssetDelegate_Lcom_airbnb_lottie_ImageAssetDelegate_(IntPtr jnienv, IntPtr native__this, IntPtr native_assetDelegate);
    [RegisterAttribute("setImageAssetDelegate", "(Lcom/airbnb/lottie/ImageAssetDelegate;)V", "GetSetImageAssetDelegate_Lcom_airbnb_lottie_ImageAssetDelegate_Handler")]
public virtual void SetImageAssetDelegate(IImageAssetDelegate assetDelegate);
    private static Delegate GetSetImagesAssetsFolder_Ljava_lang_String_Handler();
    private static void n_SetImagesAssetsFolder_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_imageAssetsFolder);
    [RegisterAttribute("setImagesAssetsFolder", "(Ljava/lang/String;)V", "GetSetImagesAssetsFolder_Ljava_lang_String_Handler")]
public virtual void SetImagesAssetsFolder(string imageAssetsFolder);
    private static Delegate GetSetMaxFrame_IHandler();
    private static void n_SetMaxFrame_I(IntPtr jnienv, IntPtr native__this, int maxFrame);
    [RegisterAttribute("setMaxFrame", "(I)V", "GetSetMaxFrame_IHandler")]
public virtual void SetMaxFrame(int maxFrame);
    private static Delegate GetSetMaxFrame_Ljava_lang_String_Handler();
    private static void n_SetMaxFrame_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_markerName);
    [RegisterAttribute("setMaxFrame", "(Ljava/lang/String;)V", "GetSetMaxFrame_Ljava_lang_String_Handler")]
public virtual void SetMaxFrame(string markerName);
    private static Delegate GetSetMaxProgress_FHandler();
    private static void n_SetMaxProgress_F(IntPtr jnienv, IntPtr native__this, float maxProgress);
    [RegisterAttribute("setMaxProgress", "(F)V", "GetSetMaxProgress_FHandler")]
public virtual void SetMaxProgress(float maxProgress);
    private static Delegate GetSetMinAndMaxFrame_IIHandler();
    private static void n_SetMinAndMaxFrame_II(IntPtr jnienv, IntPtr native__this, int minFrame, int maxFrame);
    [RegisterAttribute("setMinAndMaxFrame", "(II)V", "GetSetMinAndMaxFrame_IIHandler")]
public virtual void SetMinAndMaxFrame(int minFrame, int maxFrame);
    private static Delegate GetSetMinAndMaxFrame_Ljava_lang_String_Handler();
    private static void n_SetMinAndMaxFrame_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_markerName);
    [RegisterAttribute("setMinAndMaxFrame", "(Ljava/lang/String;)V", "GetSetMinAndMaxFrame_Ljava_lang_String_Handler")]
public virtual void SetMinAndMaxFrame(string markerName);
    private static Delegate GetSetMinAndMaxFrame_Ljava_lang_String_Ljava_lang_String_ZHandler();
    private static void n_SetMinAndMaxFrame_Ljava_lang_String_Ljava_lang_String_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_startMarkerName, IntPtr native_endMarkerName, bool playEndMarkerStartFrame);
    [RegisterAttribute("setMinAndMaxFrame", "(Ljava/lang/String;Ljava/lang/String;Z)V", "GetSetMinAndMaxFrame_Ljava_lang_String_Ljava_lang_String_ZHandler")]
public virtual void SetMinAndMaxFrame(string startMarkerName, string endMarkerName, bool playEndMarkerStartFrame);
    private static Delegate GetSetMinAndMaxProgress_FFHandler();
    private static void n_SetMinAndMaxProgress_FF(IntPtr jnienv, IntPtr native__this, float minProgress, float maxProgress);
    [RegisterAttribute("setMinAndMaxProgress", "(FF)V", "GetSetMinAndMaxProgress_FFHandler")]
public virtual void SetMinAndMaxProgress(float minProgress, float maxProgress);
    private static Delegate GetSetMinFrame_IHandler();
    private static void n_SetMinFrame_I(IntPtr jnienv, IntPtr native__this, int minFrame);
    [RegisterAttribute("setMinFrame", "(I)V", "GetSetMinFrame_IHandler")]
public virtual void SetMinFrame(int minFrame);
    private static Delegate GetSetMinFrame_Ljava_lang_String_Handler();
    private static void n_SetMinFrame_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_markerName);
    [RegisterAttribute("setMinFrame", "(Ljava/lang/String;)V", "GetSetMinFrame_Ljava_lang_String_Handler")]
public virtual void SetMinFrame(string markerName);
    private static Delegate GetSetMinProgress_FHandler();
    private static void n_SetMinProgress_F(IntPtr jnienv, IntPtr native__this, float minProgress);
    [RegisterAttribute("setMinProgress", "(F)V", "GetSetMinProgress_FHandler")]
public virtual void SetMinProgress(float minProgress);
    private static Delegate GetSetOutlineMasksAndMattes_ZHandler();
    private static void n_SetOutlineMasksAndMattes_Z(IntPtr jnienv, IntPtr native__this, bool outline);
    [RegisterAttribute("setOutlineMasksAndMattes", "(Z)V", "GetSetOutlineMasksAndMattes_ZHandler")]
public virtual void SetOutlineMasksAndMattes(bool outline);
    private static Delegate GetSetPerformanceTrackingEnabled_ZHandler();
    private static void n_SetPerformanceTrackingEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("setPerformanceTrackingEnabled", "(Z)V", "GetSetPerformanceTrackingEnabled_ZHandler")]
public virtual void SetPerformanceTrackingEnabled(bool enabled);
    private static Delegate GetSetSafeMode_ZHandler();
    private static void n_SetSafeMode_Z(IntPtr jnienv, IntPtr native__this, bool safeMode);
    [RegisterAttribute("setSafeMode", "(Z)V", "GetSetSafeMode_ZHandler")]
public virtual void SetSafeMode(bool safeMode);
    private static Delegate GetStartHandler();
    private static void n_Start(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("start", "()V", "GetStartHandler")]
public virtual void Start();
    private static Delegate GetStopHandler();
    private static void n_Stop(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("stop", "()V", "GetStopHandler")]
public virtual void Stop();
    private static Delegate GetUnscheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_Handler();
    private static void n_UnscheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_(IntPtr jnienv, IntPtr native__this, IntPtr native_who, IntPtr native_what);
    [RegisterAttribute("unscheduleDrawable", "(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V", "GetUnscheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_Handler")]
public virtual void UnscheduleDrawable(Drawable who, IRunnable what);
    private static Delegate GetUpdateBitmap_Ljava_lang_String_Landroid_graphics_Bitmap_Handler();
    private static IntPtr n_UpdateBitmap_Ljava_lang_String_Landroid_graphics_Bitmap_(IntPtr jnienv, IntPtr native__this, IntPtr native_id, IntPtr native_bitmap);
    [RegisterAttribute("updateBitmap", "(Ljava/lang/String;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;", "GetUpdateBitmap_Ljava_lang_String_Landroid_graphics_Bitmap_Handler")]
public virtual Bitmap UpdateBitmap(string id, Bitmap bitmap);
    private static Delegate GetUseTextGlyphsHandler();
    private static bool n_UseTextGlyphs(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("useTextGlyphs", "()Z", "GetUseTextGlyphsHandler")]
public virtual bool UseTextGlyphs();
}
public class Com.Airbnb.Lottie.LottieEventArgs : EventArgs {
    private Object p0;
    public Object P0 { get; }
    public LottieEventArgs(Object p0);
    public Object get_P0();
}
[RegisterAttribute("com/airbnb/lottie/LottieImageAsset")]
public class Com.Airbnb.Lottie.LottieImageAsset : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getBitmap;
    private static Delegate cb_setBitmap_Landroid_graphics_Bitmap_;
    private static Delegate cb_getDirName;
    private static Delegate cb_getFileName;
    private static Delegate cb_hasBitmap;
    private static Delegate cb_getHeight;
    private static Delegate cb_getId;
    private static Delegate cb_getWidth;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Bitmap Bitmap { get; public set; }
    public string DirName { get; }
    public string FileName { get; }
    public bool HasBitmap { get; }
    public int Height { get; }
    public string Id { get; }
    public int Width { get; }
    protected LottieImageAsset(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "")]
public LottieImageAsset(int width, int height, string id, string fileName, string dirName);
    private static LottieImageAsset();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetBitmapHandler();
    private static IntPtr n_GetBitmap(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetBitmap_Landroid_graphics_Bitmap_Handler();
    private static void n_SetBitmap_Landroid_graphics_Bitmap_(IntPtr jnienv, IntPtr native__this, IntPtr native_bitmap);
    [RegisterAttribute("getBitmap", "()Landroid/graphics/Bitmap;", "GetGetBitmapHandler")]
public virtual Bitmap get_Bitmap();
    [RegisterAttribute("setBitmap", "(Landroid/graphics/Bitmap;)V", "GetSetBitmap_Landroid_graphics_Bitmap_Handler")]
public virtual void set_Bitmap(Bitmap value);
    private static Delegate GetGetDirNameHandler();
    private static IntPtr n_GetDirName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDirName", "()Ljava/lang/String;", "GetGetDirNameHandler")]
public virtual string get_DirName();
    private static Delegate GetGetFileNameHandler();
    private static IntPtr n_GetFileName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getFileName", "()Ljava/lang/String;", "GetGetFileNameHandler")]
public virtual string get_FileName();
    private static Delegate GetHasBitmapHandler();
    private static bool n_HasBitmap(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasBitmap", "()Z", "GetHasBitmapHandler")]
public virtual bool get_HasBitmap();
    private static Delegate GetGetHeightHandler();
    private static int n_GetHeight(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getHeight", "()I", "GetGetHeightHandler")]
public virtual int get_Height();
    private static Delegate GetGetIdHandler();
    private static IntPtr n_GetId(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getId", "()Ljava/lang/String;", "GetGetIdHandler")]
public virtual string get_Id();
    private static Delegate GetGetWidthHandler();
    private static int n_GetWidth(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getWidth", "()I", "GetGetWidthHandler")]
public virtual int get_Width();
}
public class Com.Airbnb.Lottie.LottieOnCompositionLoadedEventArgs : EventArgs {
    private LottieComposition p0;
    public LottieComposition P0 { get; }
    public LottieOnCompositionLoadedEventArgs(LottieComposition p0);
    public LottieComposition get_P0();
}
[RegisterAttribute("com/airbnb/lottie/LottieProperty")]
[ObsoleteAttribute("Use the 'Com.Airbnb.Lottie.ILottieProperty' type. This class will be removed in a future release.")]
public abstract class Com.Airbnb.Lottie.LottieProperty : Object {
    private static JniPeerMembers _members;
    [RegisterAttribute("COLOR")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.Color'. This class will be removed in a future release.")]
public static Integer Color { get; }
    [RegisterAttribute("COLOR_FILTER")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.ColorFilter'. This class will be removed in a future release.")]
public static ColorFilter ColorFilter { get; }
    [RegisterAttribute("CORNER_RADIUS")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.CornerRadius'. This class will be removed in a future release.")]
public static Float CornerRadius { get; }
    [RegisterAttribute("ELLIPSE_SIZE")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.EllipseSize'. This class will be removed in a future release.")]
public static PointF EllipseSize { get; }
    [RegisterAttribute("GRADIENT_COLOR")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.GradientColor'. This class will be removed in a future release.")]
public static IList`1<Integer> GradientColor { get; }
    [RegisterAttribute("OPACITY")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.Opacity'. This class will be removed in a future release.")]
public static Integer Opacity { get; }
    [RegisterAttribute("POLYSTAR_INNER_RADIUS")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.PolystarInnerRadius'. This class will be removed in a future release.")]
public static Float PolystarInnerRadius { get; }
    [RegisterAttribute("POLYSTAR_INNER_ROUNDEDNESS")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.PolystarInnerRoundedness'. This class will be removed in a future release.")]
public static Float PolystarInnerRoundedness { get; }
    [RegisterAttribute("POLYSTAR_OUTER_RADIUS")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.PolystarOuterRadius'. This class will be removed in a future release.")]
public static Float PolystarOuterRadius { get; }
    [RegisterAttribute("POLYSTAR_OUTER_ROUNDEDNESS")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.PolystarOuterRoundedness'. This class will be removed in a future release.")]
public static Float PolystarOuterRoundedness { get; }
    [RegisterAttribute("POLYSTAR_POINTS")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.PolystarPoints'. This class will be removed in a future release.")]
public static Float PolystarPoints { get; }
    [RegisterAttribute("POLYSTAR_ROTATION")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.PolystarRotation'. This class will be removed in a future release.")]
public static Float PolystarRotation { get; }
    [RegisterAttribute("POSITION")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.Position'. This class will be removed in a future release.")]
public static PointF Position { get; }
    [RegisterAttribute("RECTANGLE_SIZE")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.RectangleSize'. This class will be removed in a future release.")]
public static PointF RectangleSize { get; }
    [RegisterAttribute("REPEATER_COPIES")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.RepeaterCopies'. This class will be removed in a future release.")]
public static Float RepeaterCopies { get; }
    [RegisterAttribute("REPEATER_OFFSET")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.RepeaterOffset'. This class will be removed in a future release.")]
public static Float RepeaterOffset { get; }
    [RegisterAttribute("STROKE_COLOR")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.StrokeColor'. This class will be removed in a future release.")]
public static Integer StrokeColor { get; }
    [RegisterAttribute("STROKE_WIDTH")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.StrokeWidth'. This class will be removed in a future release.")]
public static Float StrokeWidth { get; }
    [RegisterAttribute("TEXT_SIZE")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.TextSize'. This class will be removed in a future release.")]
public static Float TextSize { get; }
    [RegisterAttribute("TEXT_TRACKING")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.TextTracking'. This class will be removed in a future release.")]
public static Float TextTracking { get; }
    [RegisterAttribute("TIME_REMAP")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.TimeRemap'. This class will be removed in a future release.")]
public static Float TimeRemap { get; }
    [RegisterAttribute("TRANSFORM_ANCHOR_POINT")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.TransformAnchorPoint'. This class will be removed in a future release.")]
public static PointF TransformAnchorPoint { get; }
    [RegisterAttribute("TRANSFORM_END_OPACITY")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.TransformEndOpacity'. This class will be removed in a future release.")]
public static Float TransformEndOpacity { get; }
    [RegisterAttribute("TRANSFORM_OPACITY")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.TransformOpacity'. This class will be removed in a future release.")]
public static Integer TransformOpacity { get; }
    [RegisterAttribute("TRANSFORM_POSITION")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.TransformPosition'. This class will be removed in a future release.")]
public static PointF TransformPosition { get; }
    [RegisterAttribute("TRANSFORM_POSITION_X")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.TransformPositionX'. This class will be removed in a future release.")]
public static Float TransformPositionX { get; }
    [RegisterAttribute("TRANSFORM_POSITION_Y")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.TransformPositionY'. This class will be removed in a future release.")]
public static Float TransformPositionY { get; }
    [RegisterAttribute("TRANSFORM_ROTATION")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.TransformRotation'. This class will be removed in a future release.")]
public static Float TransformRotation { get; }
    [RegisterAttribute("TRANSFORM_SCALE")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.TransformScale'. This class will be removed in a future release.")]
public static ScaleXY TransformScale { get; }
    [RegisterAttribute("TRANSFORM_SKEW")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.TransformSkew'. This class will be removed in a future release.")]
public static Float TransformSkew { get; }
    [RegisterAttribute("TRANSFORM_SKEW_ANGLE")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.TransformSkewAngle'. This class will be removed in a future release.")]
public static Float TransformSkewAngle { get; }
    [RegisterAttribute("TRANSFORM_START_OPACITY")]
[ObsoleteAttribute("Use 'Com.Airbnb.Lottie.ILottieProperty.TransformStartOpacity'. This class will be removed in a future release.")]
public static Float TransformStartOpacity { get; }
    private static LottieProperty();
    public static Integer get_Color();
    public static ColorFilter get_ColorFilter();
    public static Float get_CornerRadius();
    public static PointF get_EllipseSize();
    public static IList`1<Integer> get_GradientColor();
    public static Integer get_Opacity();
    public static Float get_PolystarInnerRadius();
    public static Float get_PolystarInnerRoundedness();
    public static Float get_PolystarOuterRadius();
    public static Float get_PolystarOuterRoundedness();
    public static Float get_PolystarPoints();
    public static Float get_PolystarRotation();
    public static PointF get_Position();
    public static PointF get_RectangleSize();
    public static Float get_RepeaterCopies();
    public static Float get_RepeaterOffset();
    public static Integer get_StrokeColor();
    public static Float get_StrokeWidth();
    public static Float get_TextSize();
    public static Float get_TextTracking();
    public static Float get_TimeRemap();
    public static PointF get_TransformAnchorPoint();
    public static Float get_TransformEndOpacity();
    public static Integer get_TransformOpacity();
    public static PointF get_TransformPosition();
    public static Float get_TransformPositionX();
    public static Float get_TransformPositionY();
    public static Float get_TransformRotation();
    public static ScaleXY get_TransformScale();
    public static Float get_TransformSkew();
    public static Float get_TransformSkewAngle();
    public static Float get_TransformStartOpacity();
}
[RegisterAttribute("com/airbnb/lottie/LottieResult")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Com.Airbnb.Lottie.LottieResult : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Throwable Exception { get; }
    public Object Value { get; }
    internal LottieResult(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/Throwable;)V", "")]
public LottieResult(Throwable exception);
    [RegisterAttribute(".ctor", "(Ljava/lang/Object;)V", "")]
public LottieResult(Object value);
    private static LottieResult();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getException", "()Ljava/lang/Throwable;", "")]
public Throwable get_Exception();
    [RegisterAttribute("getValue", "()Ljava/lang/Object;", "")]
public Object get_Value();
}
[RegisterAttribute("com/airbnb/lottie/LottieTask")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Com.Airbnb.Lottie.LottieTask : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_addFailureListener_Lcom_airbnb_lottie_LottieListener_;
    private static Delegate cb_addListener_Lcom_airbnb_lottie_LottieListener_;
    private static Delegate cb_removeFailureListener_Lcom_airbnb_lottie_LottieListener_;
    private static Delegate cb_removeListener_Lcom_airbnb_lottie_LottieListener_;
    [RegisterAttribute("EXECUTOR")]
public static IExecutor Executor { get; public set; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected LottieTask(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/util/concurrent/Callable;)V", "")]
public LottieTask(ICallable runnable);
    private static LottieTask();
    public static IExecutor get_Executor();
    public static void set_Executor(IExecutor value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAddFailureListener_Lcom_airbnb_lottie_LottieListener_Handler();
    private static IntPtr n_AddFailureListener_Lcom_airbnb_lottie_LottieListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("addFailureListener", "(Lcom/airbnb/lottie/LottieListener;)Lcom/airbnb/lottie/LottieTask;", "GetAddFailureListener_Lcom_airbnb_lottie_LottieListener_Handler")]
public virtual LottieTask AddFailureListener(ILottieListener listener);
    private static Delegate GetAddListener_Lcom_airbnb_lottie_LottieListener_Handler();
    private static IntPtr n_AddListener_Lcom_airbnb_lottie_LottieListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("addListener", "(Lcom/airbnb/lottie/LottieListener;)Lcom/airbnb/lottie/LottieTask;", "GetAddListener_Lcom_airbnb_lottie_LottieListener_Handler")]
public virtual LottieTask AddListener(ILottieListener listener);
    private static Delegate GetRemoveFailureListener_Lcom_airbnb_lottie_LottieListener_Handler();
    private static IntPtr n_RemoveFailureListener_Lcom_airbnb_lottie_LottieListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("removeFailureListener", "(Lcom/airbnb/lottie/LottieListener;)Lcom/airbnb/lottie/LottieTask;", "GetRemoveFailureListener_Lcom_airbnb_lottie_LottieListener_Handler")]
public virtual LottieTask RemoveFailureListener(ILottieListener listener);
    private static Delegate GetRemoveListener_Lcom_airbnb_lottie_LottieListener_Handler();
    private static IntPtr n_RemoveListener_Lcom_airbnb_lottie_LottieListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("removeListener", "(Lcom/airbnb/lottie/LottieListener;)Lcom/airbnb/lottie/LottieTask;", "GetRemoveListener_Lcom_airbnb_lottie_LottieListener_Handler")]
public virtual LottieTask RemoveListener(ILottieListener listener);
}
[RegisterAttribute("com/airbnb/lottie/manager/FontAssetManager")]
public class Com.Airbnb.Lottie.Manager.FontAssetManager : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getTypeface_Ljava_lang_String_Ljava_lang_String_;
    private static Delegate cb_setDefaultFontFileExtension_Ljava_lang_String_;
    private static Delegate cb_setDelegate_Lcom_airbnb_lottie_FontAssetDelegate_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected FontAssetManager(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/graphics/drawable/Drawable$Callback;Lcom/airbnb/lottie/FontAssetDelegate;)V", "")]
public FontAssetManager(ICallback callback, FontAssetDelegate delegate);
    private static FontAssetManager();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetTypeface_Ljava_lang_String_Ljava_lang_String_Handler();
    private static IntPtr n_GetTypeface_Ljava_lang_String_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_fontFamily, IntPtr native_style);
    [RegisterAttribute("getTypeface", "(Ljava/lang/String;Ljava/lang/String;)Landroid/graphics/Typeface;", "GetGetTypeface_Ljava_lang_String_Ljava_lang_String_Handler")]
public virtual Typeface GetTypeface(string fontFamily, string style);
    private static Delegate GetSetDefaultFontFileExtension_Ljava_lang_String_Handler();
    private static void n_SetDefaultFontFileExtension_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_defaultFontFileExtension);
    [RegisterAttribute("setDefaultFontFileExtension", "(Ljava/lang/String;)V", "GetSetDefaultFontFileExtension_Ljava_lang_String_Handler")]
public virtual void SetDefaultFontFileExtension(string defaultFontFileExtension);
    private static Delegate GetSetDelegate_Lcom_airbnb_lottie_FontAssetDelegate_Handler();
    private static void n_SetDelegate_Lcom_airbnb_lottie_FontAssetDelegate_(IntPtr jnienv, IntPtr native__this, IntPtr native_assetDelegate);
    [RegisterAttribute("setDelegate", "(Lcom/airbnb/lottie/FontAssetDelegate;)V", "GetSetDelegate_Lcom_airbnb_lottie_FontAssetDelegate_Handler")]
public virtual void SetDelegate(FontAssetDelegate assetDelegate);
}
[RegisterAttribute("com/airbnb/lottie/manager/ImageAssetManager")]
public class Com.Airbnb.Lottie.Manager.ImageAssetManager : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_bitmapForId_Ljava_lang_String_;
    private static Delegate cb_hasSameContext_Landroid_content_Context_;
    private static Delegate cb_setDelegate_Lcom_airbnb_lottie_ImageAssetDelegate_;
    private static Delegate cb_updateBitmap_Ljava_lang_String_Landroid_graphics_Bitmap_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ImageAssetManager(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Ljava/lang/String;Lcom/airbnb/lottie/ImageAssetDelegate;Ljava/util/Map;)V", "")]
public ImageAssetManager(Context context, string imagesFolder, IImageAssetDelegate delegate, IDictionary`2<string, LottieImageAsset> imageAssets);
    [RegisterAttribute(".ctor", "(Landroid/graphics/drawable/Drawable$Callback;Ljava/lang/String;Lcom/airbnb/lottie/ImageAssetDelegate;Ljava/util/Map;)V", "")]
public ImageAssetManager(ICallback callback, string imagesFolder, IImageAssetDelegate delegate, IDictionary`2<string, LottieImageAsset> imageAssets);
    private static ImageAssetManager();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetBitmapForId_Ljava_lang_String_Handler();
    private static IntPtr n_BitmapForId_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_id);
    [RegisterAttribute("bitmapForId", "(Ljava/lang/String;)Landroid/graphics/Bitmap;", "GetBitmapForId_Ljava_lang_String_Handler")]
public virtual Bitmap BitmapForId(string id);
    private static Delegate GetHasSameContext_Landroid_content_Context_Handler();
    private static bool n_HasSameContext_Landroid_content_Context_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    [RegisterAttribute("hasSameContext", "(Landroid/content/Context;)Z", "GetHasSameContext_Landroid_content_Context_Handler")]
public virtual bool HasSameContext(Context context);
    private static Delegate GetSetDelegate_Lcom_airbnb_lottie_ImageAssetDelegate_Handler();
    private static void n_SetDelegate_Lcom_airbnb_lottie_ImageAssetDelegate_(IntPtr jnienv, IntPtr native__this, IntPtr native_assetDelegate);
    [RegisterAttribute("setDelegate", "(Lcom/airbnb/lottie/ImageAssetDelegate;)V", "GetSetDelegate_Lcom_airbnb_lottie_ImageAssetDelegate_Handler")]
public virtual void SetDelegate(IImageAssetDelegate assetDelegate);
    private static Delegate GetUpdateBitmap_Ljava_lang_String_Landroid_graphics_Bitmap_Handler();
    private static IntPtr n_UpdateBitmap_Ljava_lang_String_Landroid_graphics_Bitmap_(IntPtr jnienv, IntPtr native__this, IntPtr native_id, IntPtr native_bitmap);
    [RegisterAttribute("updateBitmap", "(Ljava/lang/String;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;", "GetUpdateBitmap_Ljava_lang_String_Landroid_graphics_Bitmap_Handler")]
public virtual Bitmap UpdateBitmap(string id, Bitmap bitmap);
}
[RegisterAttribute("com/airbnb/lottie/model/animatable/AnimatableColorValue")]
public class Com.Airbnb.Lottie.Model.Animatable.AnimatableColorValue : BaseAnimatableValue {
    private static JniPeerMembers _members;
    private static Delegate cb_isStatic;
    private static Delegate cb_getKeyframes;
    private static Delegate cb_toString;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsStatic { get; }
    public IList Keyframes { get; }
    protected AnimatableColorValue(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/util/List;)V", "")]
public AnimatableColorValue(IList`1<Keyframe> keyframes);
    private static AnimatableColorValue();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsStaticHandler();
    private static bool n_IsStatic(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isStatic", "()Z", "GetIsStaticHandler")]
public virtual bool get_IsStatic();
    private static Delegate GetGetKeyframesHandler();
    private static IntPtr n_GetKeyframes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getKeyframes", "()Ljava/util/List;", "GetGetKeyframesHandler")]
public virtual IList get_Keyframes();
    private static Delegate GetToStringHandler();
    private static IntPtr n_ToString(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("toString", "()Ljava/lang/String;", "GetToStringHandler")]
public virtual string ToString();
}
[RegisterAttribute("com/airbnb/lottie/model/animatable/AnimatableFloatValue")]
public class Com.Airbnb.Lottie.Model.Animatable.AnimatableFloatValue : BaseAnimatableValue {
    private static JniPeerMembers _members;
    private static Delegate cb_isStatic;
    private static Delegate cb_getKeyframes;
    private static Delegate cb_toString;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsStatic { get; }
    public IList Keyframes { get; }
    protected AnimatableFloatValue(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/util/List;)V", "")]
public AnimatableFloatValue(IList`1<Keyframe> keyframes);
    private static AnimatableFloatValue();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsStaticHandler();
    private static bool n_IsStatic(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isStatic", "()Z", "GetIsStaticHandler")]
public virtual bool get_IsStatic();
    private static Delegate GetGetKeyframesHandler();
    private static IntPtr n_GetKeyframes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getKeyframes", "()Ljava/util/List;", "GetGetKeyframesHandler")]
public virtual IList get_Keyframes();
    private static Delegate GetToStringHandler();
    private static IntPtr n_ToString(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("toString", "()Ljava/lang/String;", "GetToStringHandler")]
public virtual string ToString();
}
[RegisterAttribute("com/airbnb/lottie/model/animatable/AnimatableGradientColorValue")]
public class Com.Airbnb.Lottie.Model.Animatable.AnimatableGradientColorValue : BaseAnimatableValue {
    private static JniPeerMembers _members;
    private static Delegate cb_isStatic;
    private static Delegate cb_getKeyframes;
    private static Delegate cb_toString;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsStatic { get; }
    public IList Keyframes { get; }
    protected AnimatableGradientColorValue(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/util/List;)V", "")]
public AnimatableGradientColorValue(IList`1<Keyframe> keyframes);
    private static AnimatableGradientColorValue();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsStaticHandler();
    private static bool n_IsStatic(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isStatic", "()Z", "GetIsStaticHandler")]
public virtual bool get_IsStatic();
    private static Delegate GetGetKeyframesHandler();
    private static IntPtr n_GetKeyframes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getKeyframes", "()Ljava/util/List;", "GetGetKeyframesHandler")]
public virtual IList get_Keyframes();
    private static Delegate GetToStringHandler();
    private static IntPtr n_ToString(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("toString", "()Ljava/lang/String;", "GetToStringHandler")]
public virtual string ToString();
}
[RegisterAttribute("com/airbnb/lottie/model/animatable/AnimatableIntegerValue")]
public class Com.Airbnb.Lottie.Model.Animatable.AnimatableIntegerValue : BaseAnimatableValue {
    private static JniPeerMembers _members;
    private static Delegate cb_isStatic;
    private static Delegate cb_getKeyframes;
    private static Delegate cb_toString;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsStatic { get; }
    public IList Keyframes { get; }
    protected AnimatableIntegerValue(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/util/List;)V", "")]
public AnimatableIntegerValue(IList`1<Keyframe> keyframes);
    private static AnimatableIntegerValue();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsStaticHandler();
    private static bool n_IsStatic(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isStatic", "()Z", "GetIsStaticHandler")]
public virtual bool get_IsStatic();
    private static Delegate GetGetKeyframesHandler();
    private static IntPtr n_GetKeyframes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getKeyframes", "()Ljava/util/List;", "GetGetKeyframesHandler")]
public virtual IList get_Keyframes();
    private static Delegate GetToStringHandler();
    private static IntPtr n_ToString(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("toString", "()Ljava/lang/String;", "GetToStringHandler")]
public virtual string ToString();
}
[RegisterAttribute("com/airbnb/lottie/model/animatable/AnimatablePathValue")]
public class Com.Airbnb.Lottie.Model.Animatable.AnimatablePathValue : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_isStatic;
    private static Delegate cb_getKeyframes;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsStatic { get; }
    public IList`1<Keyframe> Keyframes { get; }
    protected AnimatablePathValue(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/util/List;)V", "")]
public AnimatablePathValue(IList`1<Keyframe> keyframes);
    private static AnimatablePathValue();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsStaticHandler();
    private static bool n_IsStatic(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isStatic", "()Z", "GetIsStaticHandler")]
public virtual bool get_IsStatic();
    private static Delegate GetGetKeyframesHandler();
    private static IntPtr n_GetKeyframes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getKeyframes", "()Ljava/util/List;", "GetGetKeyframesHandler")]
public virtual IList`1<Keyframe> get_Keyframes();
}
[RegisterAttribute("com/airbnb/lottie/model/animatable/AnimatablePointValue")]
public class Com.Airbnb.Lottie.Model.Animatable.AnimatablePointValue : BaseAnimatableValue {
    private static JniPeerMembers _members;
    private static Delegate cb_isStatic;
    private static Delegate cb_getKeyframes;
    private static Delegate cb_toString;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsStatic { get; }
    public IList Keyframes { get; }
    protected AnimatablePointValue(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/util/List;)V", "")]
public AnimatablePointValue(IList`1<Keyframe> keyframes);
    private static AnimatablePointValue();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsStaticHandler();
    private static bool n_IsStatic(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isStatic", "()Z", "GetIsStaticHandler")]
public virtual bool get_IsStatic();
    private static Delegate GetGetKeyframesHandler();
    private static IntPtr n_GetKeyframes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getKeyframes", "()Ljava/util/List;", "GetGetKeyframesHandler")]
public virtual IList get_Keyframes();
    private static Delegate GetToStringHandler();
    private static IntPtr n_ToString(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("toString", "()Ljava/lang/String;", "GetToStringHandler")]
public virtual string ToString();
}
[RegisterAttribute("com/airbnb/lottie/model/animatable/AnimatableScaleValue")]
public class Com.Airbnb.Lottie.Model.Animatable.AnimatableScaleValue : BaseAnimatableValue {
    private static JniPeerMembers _members;
    private static Delegate cb_isStatic;
    private static Delegate cb_getKeyframes;
    private static Delegate cb_toString;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsStatic { get; }
    public IList Keyframes { get; }
    protected AnimatableScaleValue(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/value/ScaleXY;)V", "")]
public AnimatableScaleValue(ScaleXY value);
    [RegisterAttribute(".ctor", "(Ljava/util/List;)V", "")]
public AnimatableScaleValue(IList`1<Keyframe> keyframes);
    private static AnimatableScaleValue();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsStaticHandler();
    private static bool n_IsStatic(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isStatic", "()Z", "GetIsStaticHandler")]
public virtual bool get_IsStatic();
    private static Delegate GetGetKeyframesHandler();
    private static IntPtr n_GetKeyframes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getKeyframes", "()Ljava/util/List;", "GetGetKeyframesHandler")]
public virtual IList get_Keyframes();
    private static Delegate GetToStringHandler();
    private static IntPtr n_ToString(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("toString", "()Ljava/lang/String;", "GetToStringHandler")]
public virtual string ToString();
}
[RegisterAttribute("com/airbnb/lottie/model/animatable/AnimatableShapeValue")]
public class Com.Airbnb.Lottie.Model.Animatable.AnimatableShapeValue : BaseAnimatableValue {
    private static JniPeerMembers _members;
    private static Delegate cb_isStatic;
    private static Delegate cb_getKeyframes;
    private static Delegate cb_toString;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsStatic { get; }
    public IList Keyframes { get; }
    protected AnimatableShapeValue(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/util/List;)V", "")]
public AnimatableShapeValue(IList`1<Keyframe> keyframes);
    private static AnimatableShapeValue();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsStaticHandler();
    private static bool n_IsStatic(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isStatic", "()Z", "GetIsStaticHandler")]
public virtual bool get_IsStatic();
    private static Delegate GetGetKeyframesHandler();
    private static IntPtr n_GetKeyframes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getKeyframes", "()Ljava/util/List;", "GetGetKeyframesHandler")]
public virtual IList get_Keyframes();
    private static Delegate GetToStringHandler();
    private static IntPtr n_ToString(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("toString", "()Ljava/lang/String;", "GetToStringHandler")]
public virtual string ToString();
}
[RegisterAttribute("com/airbnb/lottie/model/animatable/AnimatableSplitDimensionPathValue")]
public class Com.Airbnb.Lottie.Model.Animatable.AnimatableSplitDimensionPathValue : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_isStatic;
    private static Delegate cb_getKeyframes;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsStatic { get; }
    public IList`1<Keyframe> Keyframes { get; }
    protected AnimatableSplitDimensionPathValue(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;)V", "")]
public AnimatableSplitDimensionPathValue(AnimatableFloatValue animatableXDimension, AnimatableFloatValue animatableYDimension);
    private static AnimatableSplitDimensionPathValue();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsStaticHandler();
    private static bool n_IsStatic(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isStatic", "()Z", "GetIsStaticHandler")]
public virtual bool get_IsStatic();
    private static Delegate GetGetKeyframesHandler();
    private static IntPtr n_GetKeyframes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getKeyframes", "()Ljava/util/List;", "GetGetKeyframesHandler")]
public virtual IList`1<Keyframe> get_Keyframes();
}
[RegisterAttribute("com/airbnb/lottie/model/animatable/AnimatableTextFrame")]
public class Com.Airbnb.Lottie.Model.Animatable.AnimatableTextFrame : BaseAnimatableValue {
    private static JniPeerMembers _members;
    private static Delegate cb_isStatic;
    private static Delegate cb_getKeyframes;
    private static Delegate cb_toString;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsStatic { get; }
    public IList Keyframes { get; }
    protected AnimatableTextFrame(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/util/List;)V", "")]
public AnimatableTextFrame(IList`1<Keyframe> keyframes);
    private static AnimatableTextFrame();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsStaticHandler();
    private static bool n_IsStatic(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isStatic", "()Z", "GetIsStaticHandler")]
public virtual bool get_IsStatic();
    private static Delegate GetGetKeyframesHandler();
    private static IntPtr n_GetKeyframes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getKeyframes", "()Ljava/util/List;", "GetGetKeyframesHandler")]
public virtual IList get_Keyframes();
    private static Delegate GetToStringHandler();
    private static IntPtr n_ToString(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("toString", "()Ljava/lang/String;", "GetToStringHandler")]
public virtual string ToString();
}
[RegisterAttribute("com/airbnb/lottie/model/animatable/AnimatableTextProperties")]
public class Com.Airbnb.Lottie.Model.Animatable.AnimatableTextProperties : Object {
    private static JniPeerMembers _members;
    [RegisterAttribute("color")]
public AnimatableColorValue Color { get; public set; }
    [RegisterAttribute("stroke")]
public AnimatableColorValue Stroke { get; public set; }
    [RegisterAttribute("strokeWidth")]
public AnimatableFloatValue StrokeWidth { get; public set; }
    [RegisterAttribute("tracking")]
public AnimatableFloatValue Tracking { get; public set; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected AnimatableTextProperties(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/model/animatable/AnimatableColorValue;Lcom/airbnb/lottie/model/animatable/AnimatableColorValue;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;)V", "")]
public AnimatableTextProperties(AnimatableColorValue color, AnimatableColorValue stroke, AnimatableFloatValue strokeWidth, AnimatableFloatValue tracking);
    private static AnimatableTextProperties();
    public AnimatableColorValue get_Color();
    public void set_Color(AnimatableColorValue value);
    public AnimatableColorValue get_Stroke();
    public void set_Stroke(AnimatableColorValue value);
    public AnimatableFloatValue get_StrokeWidth();
    public void set_StrokeWidth(AnimatableFloatValue value);
    public AnimatableFloatValue get_Tracking();
    public void set_Tracking(AnimatableFloatValue value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("com/airbnb/lottie/model/animatable/AnimatableTransform")]
public class Com.Airbnb.Lottie.Model.Animatable.AnimatableTransform : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getAnchorPoint;
    private static Delegate cb_getEndOpacity;
    private static Delegate cb_getOpacity;
    private static Delegate cb_getRotation;
    private static Delegate cb_getScale;
    private static Delegate cb_getSkew;
    private static Delegate cb_getSkewAngle;
    private static Delegate cb_getStartOpacity;
    private static Delegate cb_createAnimation;
    private static Delegate cb_toContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public AnimatablePathValue AnchorPoint { get; }
    public AnimatableFloatValue EndOpacity { get; }
    public AnimatableIntegerValue Opacity { get; }
    public AnimatableFloatValue Rotation { get; }
    public AnimatableScaleValue Scale { get; }
    public AnimatableFloatValue Skew { get; }
    public AnimatableFloatValue SkewAngle { get; }
    public AnimatableFloatValue StartOpacity { get; }
    protected AnimatableTransform(IntPtr javaReference, JniHandleOwnership transfer);
    private static AnimatableTransform();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetAnchorPointHandler();
    private static IntPtr n_GetAnchorPoint(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getAnchorPoint", "()Lcom/airbnb/lottie/model/animatable/AnimatablePathValue;", "GetGetAnchorPointHandler")]
public virtual AnimatablePathValue get_AnchorPoint();
    private static Delegate GetGetEndOpacityHandler();
    private static IntPtr n_GetEndOpacity(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getEndOpacity", "()Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;", "GetGetEndOpacityHandler")]
public virtual AnimatableFloatValue get_EndOpacity();
    private static Delegate GetGetOpacityHandler();
    private static IntPtr n_GetOpacity(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getOpacity", "()Lcom/airbnb/lottie/model/animatable/AnimatableIntegerValue;", "GetGetOpacityHandler")]
public virtual AnimatableIntegerValue get_Opacity();
    private static Delegate GetGetRotationHandler();
    private static IntPtr n_GetRotation(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getRotation", "()Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;", "GetGetRotationHandler")]
public virtual AnimatableFloatValue get_Rotation();
    private static Delegate GetGetScaleHandler();
    private static IntPtr n_GetScale(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getScale", "()Lcom/airbnb/lottie/model/animatable/AnimatableScaleValue;", "GetGetScaleHandler")]
public virtual AnimatableScaleValue get_Scale();
    private static Delegate GetGetSkewHandler();
    private static IntPtr n_GetSkew(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSkew", "()Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;", "GetGetSkewHandler")]
public virtual AnimatableFloatValue get_Skew();
    private static Delegate GetGetSkewAngleHandler();
    private static IntPtr n_GetSkewAngle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSkewAngle", "()Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;", "GetGetSkewAngleHandler")]
public virtual AnimatableFloatValue get_SkewAngle();
    private static Delegate GetGetStartOpacityHandler();
    private static IntPtr n_GetStartOpacity(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getStartOpacity", "()Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;", "GetGetStartOpacityHandler")]
public virtual AnimatableFloatValue get_StartOpacity();
    private static Delegate GetCreateAnimationHandler();
    private static IntPtr n_CreateAnimation(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("createAnimation", "()Lcom/airbnb/lottie/animation/keyframe/TransformKeyframeAnimation;", "GetCreateAnimationHandler")]
public virtual TransformKeyframeAnimation CreateAnimation();
    private static Delegate GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler();
    private static IntPtr n_ToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable, IntPtr native_layer);
    [RegisterAttribute("toContent", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;)Lcom/airbnb/lottie/animation/content/Content;", "GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler")]
public virtual IContent ToContent(LottieDrawable drawable, BaseLayer layer);
}
[RegisterAttribute("com/airbnb/lottie/model/animatable/BaseAnimatableValue")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Com.Airbnb.Lottie.Model.Animatable.BaseAnimatableValue : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_isStatic;
    private static Delegate cb_getKeyframes;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsStatic { get; }
    public IList Keyframes { get; }
    protected BaseAnimatableValue(IntPtr javaReference, JniHandleOwnership transfer);
    private static BaseAnimatableValue();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsStaticHandler();
    private static bool n_IsStatic(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isStatic", "()Z", "GetIsStaticHandler")]
public virtual bool get_IsStatic();
    private static Delegate GetGetKeyframesHandler();
    private static IntPtr n_GetKeyframes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getKeyframes", "()Ljava/util/List;", "GetGetKeyframesHandler")]
public virtual IList get_Keyframes();
}
[RegisterAttribute("com/airbnb/lottie/model/animatable/BaseAnimatableValue")]
internal class Com.Airbnb.Lottie.Model.Animatable.BaseAnimatableValueInvoker : BaseAnimatableValue {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public BaseAnimatableValueInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static BaseAnimatableValueInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("com/airbnb/lottie/model/content/CircleShape")]
public class Com.Airbnb.Lottie.Model.Content.CircleShape : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_isHidden;
    private static Delegate cb_isReversed;
    private static Delegate cb_getName;
    private static Delegate cb_getSize;
    private static Delegate cb_toContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsHidden { get; }
    public bool IsReversed { get; }
    public string Name { get; }
    public AnimatablePointValue Size { get; }
    protected CircleShape(IntPtr javaReference, JniHandleOwnership transfer);
    private static CircleShape();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsHiddenHandler();
    private static bool n_IsHidden(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isHidden", "()Z", "GetIsHiddenHandler")]
public virtual bool get_IsHidden();
    private static Delegate GetIsReversedHandler();
    private static bool n_IsReversed(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isReversed", "()Z", "GetIsReversedHandler")]
public virtual bool get_IsReversed();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    private static Delegate GetGetSizeHandler();
    private static IntPtr n_GetSize(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSize", "()Lcom/airbnb/lottie/model/animatable/AnimatablePointValue;", "GetGetSizeHandler")]
public virtual AnimatablePointValue get_Size();
    private static Delegate GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler();
    private static IntPtr n_ToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable, IntPtr native_layer);
    [RegisterAttribute("toContent", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;)Lcom/airbnb/lottie/animation/content/Content;", "GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler")]
public virtual IContent ToContent(LottieDrawable drawable, BaseLayer layer);
}
[RegisterAttribute("com/airbnb/lottie/model/content/GradientColor")]
public class Com.Airbnb.Lottie.Model.Content.GradientColor : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getSize;
    private static Delegate cb_getColors;
    private static Delegate cb_getPositions;
    private static Delegate cb_lerp_Lcom_airbnb_lottie_model_content_GradientColor_Lcom_airbnb_lottie_model_content_GradientColor_F;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public int Size { get; }
    protected GradientColor(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "([F[I)V", "")]
public GradientColor(Single[] positions, Int32[] colors);
    private static GradientColor();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetSizeHandler();
    private static int n_GetSize(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSize", "()I", "GetGetSizeHandler")]
public virtual int get_Size();
    private static Delegate GetGetColorsHandler();
    private static IntPtr n_GetColors(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getColors", "()[I", "GetGetColorsHandler")]
public virtual Int32[] GetColors();
    private static Delegate GetGetPositionsHandler();
    private static IntPtr n_GetPositions(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getPositions", "()[F", "GetGetPositionsHandler")]
public virtual Single[] GetPositions();
    private static Delegate GetLerp_Lcom_airbnb_lottie_model_content_GradientColor_Lcom_airbnb_lottie_model_content_GradientColor_FHandler();
    private static void n_Lerp_Lcom_airbnb_lottie_model_content_GradientColor_Lcom_airbnb_lottie_model_content_GradientColor_F(IntPtr jnienv, IntPtr native__this, IntPtr native_gc1, IntPtr native_gc2, float progress);
    [RegisterAttribute("lerp", "(Lcom/airbnb/lottie/model/content/GradientColor;Lcom/airbnb/lottie/model/content/GradientColor;F)V", "GetLerp_Lcom_airbnb_lottie_model_content_GradientColor_Lcom_airbnb_lottie_model_content_GradientColor_FHandler")]
public virtual void Lerp(GradientColor gc1, GradientColor gc2, float progress);
}
[RegisterAttribute("com/airbnb/lottie/model/content/GradientFill")]
public class Com.Airbnb.Lottie.Model.Content.GradientFill : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getEndPoint;
    private static Delegate cb_getFillType;
    private static Delegate cb_getGradientColor;
    private static Delegate cb_getGradientType;
    private static Delegate cb_isHidden;
    private static Delegate cb_getName;
    private static Delegate cb_getOpacity;
    private static Delegate cb_getStartPoint;
    private static Delegate cb_toContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public AnimatablePointValue EndPoint { get; }
    public FillType FillType { get; }
    public AnimatableGradientColorValue GradientColor { get; }
    public GradientType GradientType { get; }
    public bool IsHidden { get; }
    public string Name { get; }
    public AnimatableIntegerValue Opacity { get; }
    public AnimatablePointValue StartPoint { get; }
    protected GradientFill(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;Lcom/airbnb/lottie/model/content/GradientType;Landroid/graphics/Path$FillType;Lcom/airbnb/lottie/model/animatable/AnimatableGradientColorValue;Lcom/airbnb/lottie/model/animatable/AnimatableIntegerValue;Lcom/airbnb/lottie/model/animatable/AnimatablePointValue;Lcom/airbnb/lottie/model/animatable/AnimatablePointValue;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Z)V", "")]
public GradientFill(string name, GradientType gradientType, FillType fillType, AnimatableGradientColorValue gradientColor, AnimatableIntegerValue opacity, AnimatablePointValue startPoint, AnimatablePointValue endPoint, AnimatableFloatValue highlightLength, AnimatableFloatValue highlightAngle, bool hidden);
    private static GradientFill();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetEndPointHandler();
    private static IntPtr n_GetEndPoint(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getEndPoint", "()Lcom/airbnb/lottie/model/animatable/AnimatablePointValue;", "GetGetEndPointHandler")]
public virtual AnimatablePointValue get_EndPoint();
    private static Delegate GetGetFillTypeHandler();
    private static IntPtr n_GetFillType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getFillType", "()Landroid/graphics/Path$FillType;", "GetGetFillTypeHandler")]
public virtual FillType get_FillType();
    private static Delegate GetGetGradientColorHandler();
    private static IntPtr n_GetGradientColor(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getGradientColor", "()Lcom/airbnb/lottie/model/animatable/AnimatableGradientColorValue;", "GetGetGradientColorHandler")]
public virtual AnimatableGradientColorValue get_GradientColor();
    private static Delegate GetGetGradientTypeHandler();
    private static IntPtr n_GetGradientType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getGradientType", "()Lcom/airbnb/lottie/model/content/GradientType;", "GetGetGradientTypeHandler")]
public virtual GradientType get_GradientType();
    private static Delegate GetIsHiddenHandler();
    private static bool n_IsHidden(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isHidden", "()Z", "GetIsHiddenHandler")]
public virtual bool get_IsHidden();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    private static Delegate GetGetOpacityHandler();
    private static IntPtr n_GetOpacity(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getOpacity", "()Lcom/airbnb/lottie/model/animatable/AnimatableIntegerValue;", "GetGetOpacityHandler")]
public virtual AnimatableIntegerValue get_Opacity();
    private static Delegate GetGetStartPointHandler();
    private static IntPtr n_GetStartPoint(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getStartPoint", "()Lcom/airbnb/lottie/model/animatable/AnimatablePointValue;", "GetGetStartPointHandler")]
public virtual AnimatablePointValue get_StartPoint();
    private static Delegate GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler();
    private static IntPtr n_ToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable, IntPtr native_layer);
    [RegisterAttribute("toContent", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;)Lcom/airbnb/lottie/animation/content/Content;", "GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler")]
public virtual IContent ToContent(LottieDrawable drawable, BaseLayer layer);
}
[RegisterAttribute("com/airbnb/lottie/model/content/GradientStroke")]
public class Com.Airbnb.Lottie.Model.Content.GradientStroke : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getCapType;
    private static Delegate cb_getDashOffset;
    private static Delegate cb_getEndPoint;
    private static Delegate cb_getGradientColor;
    private static Delegate cb_getGradientType;
    private static Delegate cb_isHidden;
    private static Delegate cb_getJoinType;
    private static Delegate cb_getLineDashPattern;
    private static Delegate cb_getMiterLimit;
    private static Delegate cb_getName;
    private static Delegate cb_getOpacity;
    private static Delegate cb_getStartPoint;
    private static Delegate cb_getWidth;
    private static Delegate cb_toContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public LineCapType CapType { get; }
    public AnimatableFloatValue DashOffset { get; }
    public AnimatablePointValue EndPoint { get; }
    public AnimatableGradientColorValue GradientColor { get; }
    public GradientType GradientType { get; }
    public bool IsHidden { get; }
    public LineJoinType JoinType { get; }
    public IList`1<AnimatableFloatValue> LineDashPattern { get; }
    public float MiterLimit { get; }
    public string Name { get; }
    public AnimatableIntegerValue Opacity { get; }
    public AnimatablePointValue StartPoint { get; }
    public AnimatableFloatValue Width { get; }
    protected GradientStroke(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;Lcom/airbnb/lottie/model/content/GradientType;Lcom/airbnb/lottie/model/animatable/AnimatableGradientColorValue;Lcom/airbnb/lottie/model/animatable/AnimatableIntegerValue;Lcom/airbnb/lottie/model/animatable/AnimatablePointValue;Lcom/airbnb/lottie/model/animatable/AnimatablePointValue;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Lcom/airbnb/lottie/model/content/ShapeStroke$LineCapType;Lcom/airbnb/lottie/model/content/ShapeStroke$LineJoinType;FLjava/util/List;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Z)V", "")]
public GradientStroke(string name, GradientType gradientType, AnimatableGradientColorValue gradientColor, AnimatableIntegerValue opacity, AnimatablePointValue startPoint, AnimatablePointValue endPoint, AnimatableFloatValue width, LineCapType capType, LineJoinType joinType, float miterLimit, IList`1<AnimatableFloatValue> lineDashPattern, AnimatableFloatValue dashOffset, bool hidden);
    private static GradientStroke();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCapTypeHandler();
    private static IntPtr n_GetCapType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCapType", "()Lcom/airbnb/lottie/model/content/ShapeStroke$LineCapType;", "GetGetCapTypeHandler")]
public virtual LineCapType get_CapType();
    private static Delegate GetGetDashOffsetHandler();
    private static IntPtr n_GetDashOffset(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDashOffset", "()Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;", "GetGetDashOffsetHandler")]
public virtual AnimatableFloatValue get_DashOffset();
    private static Delegate GetGetEndPointHandler();
    private static IntPtr n_GetEndPoint(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getEndPoint", "()Lcom/airbnb/lottie/model/animatable/AnimatablePointValue;", "GetGetEndPointHandler")]
public virtual AnimatablePointValue get_EndPoint();
    private static Delegate GetGetGradientColorHandler();
    private static IntPtr n_GetGradientColor(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getGradientColor", "()Lcom/airbnb/lottie/model/animatable/AnimatableGradientColorValue;", "GetGetGradientColorHandler")]
public virtual AnimatableGradientColorValue get_GradientColor();
    private static Delegate GetGetGradientTypeHandler();
    private static IntPtr n_GetGradientType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getGradientType", "()Lcom/airbnb/lottie/model/content/GradientType;", "GetGetGradientTypeHandler")]
public virtual GradientType get_GradientType();
    private static Delegate GetIsHiddenHandler();
    private static bool n_IsHidden(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isHidden", "()Z", "GetIsHiddenHandler")]
public virtual bool get_IsHidden();
    private static Delegate GetGetJoinTypeHandler();
    private static IntPtr n_GetJoinType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getJoinType", "()Lcom/airbnb/lottie/model/content/ShapeStroke$LineJoinType;", "GetGetJoinTypeHandler")]
public virtual LineJoinType get_JoinType();
    private static Delegate GetGetLineDashPatternHandler();
    private static IntPtr n_GetLineDashPattern(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLineDashPattern", "()Ljava/util/List;", "GetGetLineDashPatternHandler")]
public virtual IList`1<AnimatableFloatValue> get_LineDashPattern();
    private static Delegate GetGetMiterLimitHandler();
    private static float n_GetMiterLimit(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMiterLimit", "()F", "GetGetMiterLimitHandler")]
public virtual float get_MiterLimit();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    private static Delegate GetGetOpacityHandler();
    private static IntPtr n_GetOpacity(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getOpacity", "()Lcom/airbnb/lottie/model/animatable/AnimatableIntegerValue;", "GetGetOpacityHandler")]
public virtual AnimatableIntegerValue get_Opacity();
    private static Delegate GetGetStartPointHandler();
    private static IntPtr n_GetStartPoint(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getStartPoint", "()Lcom/airbnb/lottie/model/animatable/AnimatablePointValue;", "GetGetStartPointHandler")]
public virtual AnimatablePointValue get_StartPoint();
    private static Delegate GetGetWidthHandler();
    private static IntPtr n_GetWidth(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getWidth", "()Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;", "GetGetWidthHandler")]
public virtual AnimatableFloatValue get_Width();
    private static Delegate GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler();
    private static IntPtr n_ToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable, IntPtr native_layer);
    [RegisterAttribute("toContent", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;)Lcom/airbnb/lottie/animation/content/Content;", "GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler")]
public virtual IContent ToContent(LottieDrawable drawable, BaseLayer layer);
}
[RegisterAttribute("com/airbnb/lottie/model/content/GradientType")]
public class Com.Airbnb.Lottie.Model.Content.GradientType : Enum {
    private static JniPeerMembers _members;
    [RegisterAttribute("LINEAR")]
public static GradientType Linear { get; }
    [RegisterAttribute("RADIAL")]
public static GradientType Radial { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal GradientType(IntPtr javaReference, JniHandleOwnership transfer);
    private static GradientType();
    public static GradientType get_Linear();
    public static GradientType get_Radial();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("valueOf", "(Ljava/lang/String;)Lcom/airbnb/lottie/model/content/GradientType;", "")]
public static GradientType ValueOf(string name);
    [RegisterAttribute("values", "()[Lcom/airbnb/lottie/model/content/GradientType;", "")]
public static GradientType[] Values();
}
[RegisterAttribute("com/airbnb/lottie/model/content/ContentModel", "", "Com.Airbnb.Lottie.Model.Content.IContentModelInvoker")]
public interface Com.Airbnb.Lottie.Model.Content.IContentModel {
    [RegisterAttribute("toContent", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;)Lcom/airbnb/lottie/animation/content/Content;", "GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler:Com.Airbnb.Lottie.Model.Content.IContentModelInvoker, Lottie.Android")]
public abstract virtual IContent ToContent(LottieDrawable p0, BaseLayer p1);
}
[RegisterAttribute("com/airbnb/lottie/model/content/ContentModel")]
internal class Com.Airbnb.Lottie.Model.Content.IContentModelInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_toContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_;
    private IntPtr id_toContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IContentModelInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IContentModelInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IContentModel GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler();
    private static IntPtr n_ToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual IContent ToContent(LottieDrawable p0, BaseLayer p1);
}
[RegisterAttribute("com/airbnb/lottie/model/content/Mask")]
public class Com.Airbnb.Lottie.Model.Content.Mask : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_isInverted;
    private static Delegate cb_getMaskPath;
    private static Delegate cb_getOpacity;
    private static Delegate cb_getMaskMode;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsInverted { get; }
    public AnimatableShapeValue MaskPath { get; }
    public AnimatableIntegerValue Opacity { get; }
    protected Mask(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/model/content/Mask$MaskMode;Lcom/airbnb/lottie/model/animatable/AnimatableShapeValue;Lcom/airbnb/lottie/model/animatable/AnimatableIntegerValue;Z)V", "")]
public Mask(MaskMode maskMode, AnimatableShapeValue maskPath, AnimatableIntegerValue opacity, bool inverted);
    private static Mask();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsInvertedHandler();
    private static bool n_IsInverted(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isInverted", "()Z", "GetIsInvertedHandler")]
public virtual bool get_IsInverted();
    private static Delegate GetGetMaskPathHandler();
    private static IntPtr n_GetMaskPath(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMaskPath", "()Lcom/airbnb/lottie/model/animatable/AnimatableShapeValue;", "GetGetMaskPathHandler")]
public virtual AnimatableShapeValue get_MaskPath();
    private static Delegate GetGetOpacityHandler();
    private static IntPtr n_GetOpacity(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getOpacity", "()Lcom/airbnb/lottie/model/animatable/AnimatableIntegerValue;", "GetGetOpacityHandler")]
public virtual AnimatableIntegerValue get_Opacity();
    private static Delegate GetGetMaskModeHandler();
    private static IntPtr n_GetMaskMode(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMaskMode", "()Lcom/airbnb/lottie/model/content/Mask$MaskMode;", "GetGetMaskModeHandler")]
public virtual MaskMode GetMaskMode();
}
[RegisterAttribute("com/airbnb/lottie/model/content/MergePaths")]
public class Com.Airbnb.Lottie.Model.Content.MergePaths : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_isHidden;
    private static Delegate cb_getMode;
    private static Delegate cb_getName;
    private static Delegate cb_toContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsHidden { get; }
    public MergePathsMode Mode { get; }
    public string Name { get; }
    protected MergePaths(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;Lcom/airbnb/lottie/model/content/MergePaths$MergePathsMode;Z)V", "")]
public MergePaths(string name, MergePathsMode mode, bool hidden);
    private static MergePaths();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsHiddenHandler();
    private static bool n_IsHidden(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isHidden", "()Z", "GetIsHiddenHandler")]
public virtual bool get_IsHidden();
    private static Delegate GetGetModeHandler();
    private static IntPtr n_GetMode(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMode", "()Lcom/airbnb/lottie/model/content/MergePaths$MergePathsMode;", "GetGetModeHandler")]
public virtual MergePathsMode get_Mode();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    private static Delegate GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler();
    private static IntPtr n_ToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable, IntPtr native_layer);
    [RegisterAttribute("toContent", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;)Lcom/airbnb/lottie/animation/content/Content;", "GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler")]
public virtual IContent ToContent(LottieDrawable drawable, BaseLayer layer);
}
[RegisterAttribute("com/airbnb/lottie/model/content/PolystarShape")]
public class Com.Airbnb.Lottie.Model.Content.PolystarShape : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getInnerRadius;
    private static Delegate cb_getInnerRoundedness;
    private static Delegate cb_isHidden;
    private static Delegate cb_getName;
    private static Delegate cb_getOuterRadius;
    private static Delegate cb_getOuterRoundedness;
    private static Delegate cb_getPoints;
    private static Delegate cb_getRotation;
    private static Delegate cb_getType;
    private static Delegate cb_toContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public AnimatableFloatValue InnerRadius { get; }
    public AnimatableFloatValue InnerRoundedness { get; }
    public bool IsHidden { get; }
    public string Name { get; }
    public AnimatableFloatValue OuterRadius { get; }
    public AnimatableFloatValue OuterRoundedness { get; }
    public AnimatableFloatValue Points { get; }
    public AnimatableFloatValue Rotation { get; }
    protected PolystarShape(IntPtr javaReference, JniHandleOwnership transfer);
    private static PolystarShape();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetInnerRadiusHandler();
    private static IntPtr n_GetInnerRadius(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getInnerRadius", "()Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;", "GetGetInnerRadiusHandler")]
public virtual AnimatableFloatValue get_InnerRadius();
    private static Delegate GetGetInnerRoundednessHandler();
    private static IntPtr n_GetInnerRoundedness(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getInnerRoundedness", "()Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;", "GetGetInnerRoundednessHandler")]
public virtual AnimatableFloatValue get_InnerRoundedness();
    private static Delegate GetIsHiddenHandler();
    private static bool n_IsHidden(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isHidden", "()Z", "GetIsHiddenHandler")]
public virtual bool get_IsHidden();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    private static Delegate GetGetOuterRadiusHandler();
    private static IntPtr n_GetOuterRadius(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getOuterRadius", "()Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;", "GetGetOuterRadiusHandler")]
public virtual AnimatableFloatValue get_OuterRadius();
    private static Delegate GetGetOuterRoundednessHandler();
    private static IntPtr n_GetOuterRoundedness(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getOuterRoundedness", "()Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;", "GetGetOuterRoundednessHandler")]
public virtual AnimatableFloatValue get_OuterRoundedness();
    private static Delegate GetGetPointsHandler();
    private static IntPtr n_GetPoints(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getPoints", "()Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;", "GetGetPointsHandler")]
public virtual AnimatableFloatValue get_Points();
    private static Delegate GetGetRotationHandler();
    private static IntPtr n_GetRotation(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getRotation", "()Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;", "GetGetRotationHandler")]
public virtual AnimatableFloatValue get_Rotation();
    private static Delegate GetGetTypeHandler();
    private static IntPtr n_GetType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getType", "()Lcom/airbnb/lottie/model/content/PolystarShape$Type;", "GetGetTypeHandler")]
public virtual Type GetType();
    private static Delegate GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler();
    private static IntPtr n_ToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable, IntPtr native_layer);
    [RegisterAttribute("toContent", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;)Lcom/airbnb/lottie/animation/content/Content;", "GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler")]
public virtual IContent ToContent(LottieDrawable drawable, BaseLayer layer);
}
[RegisterAttribute("com/airbnb/lottie/model/content/RectangleShape")]
public class Com.Airbnb.Lottie.Model.Content.RectangleShape : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getCornerRadius;
    private static Delegate cb_isHidden;
    private static Delegate cb_getName;
    private static Delegate cb_toContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public AnimatableFloatValue CornerRadius { get; }
    public bool IsHidden { get; }
    public string Name { get; }
    protected RectangleShape(IntPtr javaReference, JniHandleOwnership transfer);
    private static RectangleShape();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCornerRadiusHandler();
    private static IntPtr n_GetCornerRadius(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCornerRadius", "()Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;", "GetGetCornerRadiusHandler")]
public virtual AnimatableFloatValue get_CornerRadius();
    private static Delegate GetIsHiddenHandler();
    private static bool n_IsHidden(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isHidden", "()Z", "GetIsHiddenHandler")]
public virtual bool get_IsHidden();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    private static Delegate GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler();
    private static IntPtr n_ToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable, IntPtr native_layer);
    [RegisterAttribute("toContent", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;)Lcom/airbnb/lottie/animation/content/Content;", "GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler")]
public virtual IContent ToContent(LottieDrawable drawable, BaseLayer layer);
}
[RegisterAttribute("com/airbnb/lottie/model/content/Repeater")]
public class Com.Airbnb.Lottie.Model.Content.Repeater : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getCopies;
    private static Delegate cb_isHidden;
    private static Delegate cb_getName;
    private static Delegate cb_getOffset;
    private static Delegate cb_getTransform;
    private static Delegate cb_toContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public AnimatableFloatValue Copies { get; }
    public bool IsHidden { get; }
    public string Name { get; }
    public AnimatableFloatValue Offset { get; }
    public AnimatableTransform Transform { get; }
    protected Repeater(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Lcom/airbnb/lottie/model/animatable/AnimatableTransform;Z)V", "")]
public Repeater(string name, AnimatableFloatValue copies, AnimatableFloatValue offset, AnimatableTransform transform, bool hidden);
    private static Repeater();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCopiesHandler();
    private static IntPtr n_GetCopies(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCopies", "()Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;", "GetGetCopiesHandler")]
public virtual AnimatableFloatValue get_Copies();
    private static Delegate GetIsHiddenHandler();
    private static bool n_IsHidden(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isHidden", "()Z", "GetIsHiddenHandler")]
public virtual bool get_IsHidden();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    private static Delegate GetGetOffsetHandler();
    private static IntPtr n_GetOffset(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getOffset", "()Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;", "GetGetOffsetHandler")]
public virtual AnimatableFloatValue get_Offset();
    private static Delegate GetGetTransformHandler();
    private static IntPtr n_GetTransform(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTransform", "()Lcom/airbnb/lottie/model/animatable/AnimatableTransform;", "GetGetTransformHandler")]
public virtual AnimatableTransform get_Transform();
    private static Delegate GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler();
    private static IntPtr n_ToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable, IntPtr native_layer);
    [RegisterAttribute("toContent", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;)Lcom/airbnb/lottie/animation/content/Content;", "GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler")]
public virtual IContent ToContent(LottieDrawable drawable, BaseLayer layer);
}
[RegisterAttribute("com/airbnb/lottie/model/content/ShapeData")]
public class Com.Airbnb.Lottie.Model.Content.ShapeData : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getCurves;
    private static Delegate cb_getInitialPoint;
    private static Delegate cb_isClosed;
    private static Delegate cb_interpolateBetween_Lcom_airbnb_lottie_model_content_ShapeData_Lcom_airbnb_lottie_model_content_ShapeData_F;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IList`1<CubicCurveData> Curves { get; }
    public PointF InitialPoint { get; }
    public bool IsClosed { get; }
    protected ShapeData(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/graphics/PointF;ZLjava/util/List;)V", "")]
public ShapeData(PointF initialPoint, bool closed, IList`1<CubicCurveData> curves);
    private static ShapeData();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCurvesHandler();
    private static IntPtr n_GetCurves(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCurves", "()Ljava/util/List;", "GetGetCurvesHandler")]
public virtual IList`1<CubicCurveData> get_Curves();
    private static Delegate GetGetInitialPointHandler();
    private static IntPtr n_GetInitialPoint(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getInitialPoint", "()Landroid/graphics/PointF;", "GetGetInitialPointHandler")]
public virtual PointF get_InitialPoint();
    private static Delegate GetIsClosedHandler();
    private static bool n_IsClosed(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isClosed", "()Z", "GetIsClosedHandler")]
public virtual bool get_IsClosed();
    private static Delegate GetInterpolateBetween_Lcom_airbnb_lottie_model_content_ShapeData_Lcom_airbnb_lottie_model_content_ShapeData_FHandler();
    private static void n_InterpolateBetween_Lcom_airbnb_lottie_model_content_ShapeData_Lcom_airbnb_lottie_model_content_ShapeData_F(IntPtr jnienv, IntPtr native__this, IntPtr native_shapeData1, IntPtr native_shapeData2, float percentage);
    [RegisterAttribute("interpolateBetween", "(Lcom/airbnb/lottie/model/content/ShapeData;Lcom/airbnb/lottie/model/content/ShapeData;F)V", "GetInterpolateBetween_Lcom_airbnb_lottie_model_content_ShapeData_Lcom_airbnb_lottie_model_content_ShapeData_FHandler")]
public virtual void InterpolateBetween(ShapeData shapeData1, ShapeData shapeData2, float percentage);
}
[RegisterAttribute("com/airbnb/lottie/model/content/ShapeFill")]
public class Com.Airbnb.Lottie.Model.Content.ShapeFill : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getColor;
    private static Delegate cb_getFillType;
    private static Delegate cb_isHidden;
    private static Delegate cb_getName;
    private static Delegate cb_getOpacity;
    private static Delegate cb_toContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public AnimatableColorValue Color { get; }
    public FillType FillType { get; }
    public bool IsHidden { get; }
    public string Name { get; }
    public AnimatableIntegerValue Opacity { get; }
    protected ShapeFill(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;ZLandroid/graphics/Path$FillType;Lcom/airbnb/lottie/model/animatable/AnimatableColorValue;Lcom/airbnb/lottie/model/animatable/AnimatableIntegerValue;Z)V", "")]
public ShapeFill(string name, bool fillEnabled, FillType fillType, AnimatableColorValue color, AnimatableIntegerValue opacity, bool hidden);
    private static ShapeFill();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetColorHandler();
    private static IntPtr n_GetColor(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getColor", "()Lcom/airbnb/lottie/model/animatable/AnimatableColorValue;", "GetGetColorHandler")]
public virtual AnimatableColorValue get_Color();
    private static Delegate GetGetFillTypeHandler();
    private static IntPtr n_GetFillType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getFillType", "()Landroid/graphics/Path$FillType;", "GetGetFillTypeHandler")]
public virtual FillType get_FillType();
    private static Delegate GetIsHiddenHandler();
    private static bool n_IsHidden(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isHidden", "()Z", "GetIsHiddenHandler")]
public virtual bool get_IsHidden();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    private static Delegate GetGetOpacityHandler();
    private static IntPtr n_GetOpacity(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getOpacity", "()Lcom/airbnb/lottie/model/animatable/AnimatableIntegerValue;", "GetGetOpacityHandler")]
public virtual AnimatableIntegerValue get_Opacity();
    private static Delegate GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler();
    private static IntPtr n_ToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable, IntPtr native_layer);
    [RegisterAttribute("toContent", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;)Lcom/airbnb/lottie/animation/content/Content;", "GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler")]
public virtual IContent ToContent(LottieDrawable drawable, BaseLayer layer);
}
[RegisterAttribute("com/airbnb/lottie/model/content/ShapeGroup")]
public class Com.Airbnb.Lottie.Model.Content.ShapeGroup : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_isHidden;
    private static Delegate cb_getItems;
    private static Delegate cb_getName;
    private static Delegate cb_toContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsHidden { get; }
    public IList`1<IContentModel> Items { get; }
    public string Name { get; }
    protected ShapeGroup(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;Ljava/util/List;Z)V", "")]
public ShapeGroup(string name, IList`1<IContentModel> items, bool hidden);
    private static ShapeGroup();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsHiddenHandler();
    private static bool n_IsHidden(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isHidden", "()Z", "GetIsHiddenHandler")]
public virtual bool get_IsHidden();
    private static Delegate GetGetItemsHandler();
    private static IntPtr n_GetItems(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getItems", "()Ljava/util/List;", "GetGetItemsHandler")]
public virtual IList`1<IContentModel> get_Items();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    private static Delegate GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler();
    private static IntPtr n_ToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable, IntPtr native_layer);
    [RegisterAttribute("toContent", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;)Lcom/airbnb/lottie/animation/content/Content;", "GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler")]
public virtual IContent ToContent(LottieDrawable drawable, BaseLayer layer);
}
[RegisterAttribute("com/airbnb/lottie/model/content/ShapePath")]
public class Com.Airbnb.Lottie.Model.Content.ShapePath : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_isHidden;
    private static Delegate cb_getName;
    private static Delegate cb_getShapePath;
    private static Delegate cb_toContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsHidden { get; }
    public string Name { get; }
    protected ShapePath(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;ILcom/airbnb/lottie/model/animatable/AnimatableShapeValue;Z)V", "")]
public ShapePath(string name, int index, AnimatableShapeValue shapePath, bool hidden);
    private static ShapePath();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsHiddenHandler();
    private static bool n_IsHidden(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isHidden", "()Z", "GetIsHiddenHandler")]
public virtual bool get_IsHidden();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    private static Delegate GetGetShapePathHandler();
    private static IntPtr n_GetShapePath(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getShapePath", "()Lcom/airbnb/lottie/model/animatable/AnimatableShapeValue;", "GetGetShapePathHandler")]
public virtual AnimatableShapeValue GetShapePath();
    private static Delegate GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler();
    private static IntPtr n_ToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable, IntPtr native_layer);
    [RegisterAttribute("toContent", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;)Lcom/airbnb/lottie/animation/content/Content;", "GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler")]
public virtual IContent ToContent(LottieDrawable drawable, BaseLayer layer);
}
[RegisterAttribute("com/airbnb/lottie/model/content/ShapeStroke")]
public class Com.Airbnb.Lottie.Model.Content.ShapeStroke : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getCapType;
    private static Delegate cb_getColor;
    private static Delegate cb_getDashOffset;
    private static Delegate cb_isHidden;
    private static Delegate cb_getJoinType;
    private static Delegate cb_getLineDashPattern;
    private static Delegate cb_getMiterLimit;
    private static Delegate cb_getName;
    private static Delegate cb_getOpacity;
    private static Delegate cb_getWidth;
    private static Delegate cb_toContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public LineCapType CapType { get; }
    public AnimatableColorValue Color { get; }
    public AnimatableFloatValue DashOffset { get; }
    public bool IsHidden { get; }
    public LineJoinType JoinType { get; }
    public IList`1<AnimatableFloatValue> LineDashPattern { get; }
    public float MiterLimit { get; }
    public string Name { get; }
    public AnimatableIntegerValue Opacity { get; }
    public AnimatableFloatValue Width { get; }
    protected ShapeStroke(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Ljava/util/List;Lcom/airbnb/lottie/model/animatable/AnimatableColorValue;Lcom/airbnb/lottie/model/animatable/AnimatableIntegerValue;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Lcom/airbnb/lottie/model/content/ShapeStroke$LineCapType;Lcom/airbnb/lottie/model/content/ShapeStroke$LineJoinType;FZ)V", "")]
public ShapeStroke(string name, AnimatableFloatValue offset, IList`1<AnimatableFloatValue> lineDashPattern, AnimatableColorValue color, AnimatableIntegerValue opacity, AnimatableFloatValue width, LineCapType capType, LineJoinType joinType, float miterLimit, bool hidden);
    private static ShapeStroke();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCapTypeHandler();
    private static IntPtr n_GetCapType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCapType", "()Lcom/airbnb/lottie/model/content/ShapeStroke$LineCapType;", "GetGetCapTypeHandler")]
public virtual LineCapType get_CapType();
    private static Delegate GetGetColorHandler();
    private static IntPtr n_GetColor(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getColor", "()Lcom/airbnb/lottie/model/animatable/AnimatableColorValue;", "GetGetColorHandler")]
public virtual AnimatableColorValue get_Color();
    private static Delegate GetGetDashOffsetHandler();
    private static IntPtr n_GetDashOffset(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDashOffset", "()Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;", "GetGetDashOffsetHandler")]
public virtual AnimatableFloatValue get_DashOffset();
    private static Delegate GetIsHiddenHandler();
    private static bool n_IsHidden(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isHidden", "()Z", "GetIsHiddenHandler")]
public virtual bool get_IsHidden();
    private static Delegate GetGetJoinTypeHandler();
    private static IntPtr n_GetJoinType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getJoinType", "()Lcom/airbnb/lottie/model/content/ShapeStroke$LineJoinType;", "GetGetJoinTypeHandler")]
public virtual LineJoinType get_JoinType();
    private static Delegate GetGetLineDashPatternHandler();
    private static IntPtr n_GetLineDashPattern(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLineDashPattern", "()Ljava/util/List;", "GetGetLineDashPatternHandler")]
public virtual IList`1<AnimatableFloatValue> get_LineDashPattern();
    private static Delegate GetGetMiterLimitHandler();
    private static float n_GetMiterLimit(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMiterLimit", "()F", "GetGetMiterLimitHandler")]
public virtual float get_MiterLimit();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    private static Delegate GetGetOpacityHandler();
    private static IntPtr n_GetOpacity(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getOpacity", "()Lcom/airbnb/lottie/model/animatable/AnimatableIntegerValue;", "GetGetOpacityHandler")]
public virtual AnimatableIntegerValue get_Opacity();
    private static Delegate GetGetWidthHandler();
    private static IntPtr n_GetWidth(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getWidth", "()Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;", "GetGetWidthHandler")]
public virtual AnimatableFloatValue get_Width();
    private static Delegate GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler();
    private static IntPtr n_ToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable, IntPtr native_layer);
    [RegisterAttribute("toContent", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;)Lcom/airbnb/lottie/animation/content/Content;", "GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler")]
public virtual IContent ToContent(LottieDrawable drawable, BaseLayer layer);
}
[RegisterAttribute("com/airbnb/lottie/model/content/ShapeTrimPath")]
public class Com.Airbnb.Lottie.Model.Content.ShapeTrimPath : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getEnd;
    private static Delegate cb_isHidden;
    private static Delegate cb_getName;
    private static Delegate cb_getOffset;
    private static Delegate cb_getStart;
    private static Delegate cb_getType;
    private static Delegate cb_toContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public AnimatableFloatValue End { get; }
    public bool IsHidden { get; }
    public string Name { get; }
    public AnimatableFloatValue Offset { get; }
    public AnimatableFloatValue Start { get; }
    protected ShapeTrimPath(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Z)V", "")]
public ShapeTrimPath(string name, Type type, AnimatableFloatValue start, AnimatableFloatValue end, AnimatableFloatValue offset, bool hidden);
    private static ShapeTrimPath();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetEndHandler();
    private static IntPtr n_GetEnd(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getEnd", "()Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;", "GetGetEndHandler")]
public virtual AnimatableFloatValue get_End();
    private static Delegate GetIsHiddenHandler();
    private static bool n_IsHidden(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isHidden", "()Z", "GetIsHiddenHandler")]
public virtual bool get_IsHidden();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    private static Delegate GetGetOffsetHandler();
    private static IntPtr n_GetOffset(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getOffset", "()Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;", "GetGetOffsetHandler")]
public virtual AnimatableFloatValue get_Offset();
    private static Delegate GetGetStartHandler();
    private static IntPtr n_GetStart(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getStart", "()Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;", "GetGetStartHandler")]
public virtual AnimatableFloatValue get_Start();
    private static Delegate GetGetTypeHandler();
    private static IntPtr n_GetType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getType", "()Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;", "GetGetTypeHandler")]
public virtual Type GetType();
    private static Delegate GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler();
    private static IntPtr n_ToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable, IntPtr native_layer);
    [RegisterAttribute("toContent", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;)Lcom/airbnb/lottie/animation/content/Content;", "GetToContent_Lcom_airbnb_lottie_LottieDrawable_Lcom_airbnb_lottie_model_layer_BaseLayer_Handler")]
public virtual IContent ToContent(LottieDrawable drawable, BaseLayer layer);
}
[RegisterAttribute("com/airbnb/lottie/model/CubicCurveData")]
public class Com.Airbnb.Lottie.Model.CubicCurveData : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getControlPoint1;
    private static Delegate cb_getControlPoint2;
    private static Delegate cb_getVertex;
    private static Delegate cb_setControlPoint1_FF;
    private static Delegate cb_setControlPoint2_FF;
    private static Delegate cb_setVertex_FF;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public PointF ControlPoint1 { get; }
    public PointF ControlPoint2 { get; }
    public PointF Vertex { get; }
    protected CubicCurveData(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/graphics/PointF;Landroid/graphics/PointF;Landroid/graphics/PointF;)V", "")]
public CubicCurveData(PointF controlPoint1, PointF controlPoint2, PointF vertex);
    private static CubicCurveData();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetControlPoint1Handler();
    private static IntPtr n_GetControlPoint1(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getControlPoint1", "()Landroid/graphics/PointF;", "GetGetControlPoint1Handler")]
public virtual PointF get_ControlPoint1();
    private static Delegate GetGetControlPoint2Handler();
    private static IntPtr n_GetControlPoint2(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getControlPoint2", "()Landroid/graphics/PointF;", "GetGetControlPoint2Handler")]
public virtual PointF get_ControlPoint2();
    private static Delegate GetGetVertexHandler();
    private static IntPtr n_GetVertex(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getVertex", "()Landroid/graphics/PointF;", "GetGetVertexHandler")]
public virtual PointF get_Vertex();
    private static Delegate GetSetControlPoint1_FFHandler();
    private static void n_SetControlPoint1_FF(IntPtr jnienv, IntPtr native__this, float x, float y);
    [RegisterAttribute("setControlPoint1", "(FF)V", "GetSetControlPoint1_FFHandler")]
public virtual void SetControlPoint1(float x, float y);
    private static Delegate GetSetControlPoint2_FFHandler();
    private static void n_SetControlPoint2_FF(IntPtr jnienv, IntPtr native__this, float x, float y);
    [RegisterAttribute("setControlPoint2", "(FF)V", "GetSetControlPoint2_FFHandler")]
public virtual void SetControlPoint2(float x, float y);
    private static Delegate GetSetVertex_FFHandler();
    private static void n_SetVertex_FF(IntPtr jnienv, IntPtr native__this, float x, float y);
    [RegisterAttribute("setVertex", "(FF)V", "GetSetVertex_FFHandler")]
public virtual void SetVertex(float x, float y);
}
[RegisterAttribute("com/airbnb/lottie/model/DocumentData")]
public class Com.Airbnb.Lottie.Model.DocumentData : Object {
    private static JniPeerMembers _members;
    [RegisterAttribute("baselineShift")]
public float BaselineShift { get; public set; }
    [RegisterAttribute("color")]
public int Color { get; public set; }
    [RegisterAttribute("fontName")]
public string FontName { get; public set; }
    [RegisterAttribute("lineHeight")]
public float LineHeight { get; public set; }
    [RegisterAttribute("size")]
public float Size { get; public set; }
    [RegisterAttribute("strokeColor")]
public int StrokeColor { get; public set; }
    [RegisterAttribute("strokeOverFill")]
public bool StrokeOverFill { get; public set; }
    [RegisterAttribute("strokeWidth")]
public float StrokeWidth { get; public set; }
    [RegisterAttribute("text")]
public string Text { get; public set; }
    [RegisterAttribute("tracking")]
public int Tracking { get; public set; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected DocumentData(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;Ljava/lang/String;FLcom/airbnb/lottie/model/DocumentData$Justification;IFFIIFZ)V", "")]
public DocumentData(string text, string fontName, float size, Justification justification, int tracking, float lineHeight, float baselineShift, int color, int strokeColor, float strokeWidth, bool strokeOverFill);
    private static DocumentData();
    public float get_BaselineShift();
    public void set_BaselineShift(float value);
    public int get_Color();
    public void set_Color(int value);
    public string get_FontName();
    public void set_FontName(string value);
    public float get_LineHeight();
    public void set_LineHeight(float value);
    public float get_Size();
    public void set_Size(float value);
    public int get_StrokeColor();
    public void set_StrokeColor(int value);
    public bool get_StrokeOverFill();
    public void set_StrokeOverFill(bool value);
    public float get_StrokeWidth();
    public void set_StrokeWidth(float value);
    public string get_Text();
    public void set_Text(string value);
    public int get_Tracking();
    public void set_Tracking(int value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("com/airbnb/lottie/model/Font")]
public class Com.Airbnb.Lottie.Model.Font : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getFamily;
    private static Delegate cb_getName;
    private static Delegate cb_getStyle;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Family { get; }
    public string Name { get; }
    public string Style { get; }
    protected Font(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;F)V", "")]
public Font(string family, string name, string style, float ascent);
    private static Font();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetFamilyHandler();
    private static IntPtr n_GetFamily(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getFamily", "()Ljava/lang/String;", "GetGetFamilyHandler")]
public virtual string get_Family();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    private static Delegate GetGetStyleHandler();
    private static IntPtr n_GetStyle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getStyle", "()Ljava/lang/String;", "GetGetStyleHandler")]
public virtual string get_Style();
}
[RegisterAttribute("com/airbnb/lottie/model/FontCharacter")]
public class Com.Airbnb.Lottie.Model.FontCharacter : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getShapes;
    private static Delegate cb_getWidth;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IList`1<ShapeGroup> Shapes { get; }
    public double Width { get; }
    protected FontCharacter(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/util/List;CDDLjava/lang/String;Ljava/lang/String;)V", "")]
public FontCharacter(IList`1<ShapeGroup> shapes, char character, double size, double width, string style, string fontFamily);
    private static FontCharacter();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetShapesHandler();
    private static IntPtr n_GetShapes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getShapes", "()Ljava/util/List;", "GetGetShapesHandler")]
public virtual IList`1<ShapeGroup> get_Shapes();
    private static Delegate GetGetWidthHandler();
    private static double n_GetWidth(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getWidth", "()D", "GetGetWidthHandler")]
public virtual double get_Width();
    [RegisterAttribute("hashFor", "(CLjava/lang/String;Ljava/lang/String;)I", "")]
public static int HashFor(char character, string fontFamily, string style);
}
[RegisterAttribute("com/airbnb/lottie/model/KeyPathElement", "", "Com.Airbnb.Lottie.Model.IKeyPathElementInvoker")]
public interface Com.Airbnb.Lottie.Model.IKeyPathElement {
    [RegisterAttribute("addValueCallback", "(Ljava/lang/Object;Lcom/airbnb/lottie/value/LottieValueCallback;)V", "GetAddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler:Com.Airbnb.Lottie.Model.IKeyPathElementInvoker, Lottie.Android")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract virtual void AddValueCallback(Object property, LottieValueCallback callback);
    [RegisterAttribute("resolveKeyPath", "(Lcom/airbnb/lottie/model/KeyPath;ILjava/util/List;Lcom/airbnb/lottie/model/KeyPath;)V", "GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler:Com.Airbnb.Lottie.Model.IKeyPathElementInvoker, Lottie.Android")]
public abstract virtual void ResolveKeyPath(KeyPath keyPath, int depth, IList`1<KeyPath> accumulator, KeyPath currentPartialKeyPath);
}
[RegisterAttribute("com/airbnb/lottie/model/KeyPathElement")]
internal class Com.Airbnb.Lottie.Model.IKeyPathElementInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_addValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_;
    private IntPtr id_addValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_;
    private static Delegate cb_resolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_;
    private IntPtr id_resolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IKeyPathElementInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IKeyPathElementInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IKeyPathElement GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler();
    private static void n_AddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_property, IntPtr native__callback);
    public sealed virtual void AddValueCallback(Object property, LottieValueCallback callback);
    private static Delegate GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler();
    private static void n_ResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_(IntPtr jnienv, IntPtr native__this, IntPtr native_keyPath, int depth, IntPtr native_accumulator, IntPtr native_currentPartialKeyPath);
    public sealed virtual void ResolveKeyPath(KeyPath keyPath, int depth, IList`1<KeyPath> accumulator, KeyPath currentPartialKeyPath);
}
[RegisterAttribute("com/airbnb/lottie/model/KeyPath")]
public class Com.Airbnb.Lottie.Model.KeyPath : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getResolvedElement;
    private static Delegate cb_addKey_Ljava_lang_String_;
    private static Delegate cb_fullyResolvesTo_Ljava_lang_String_I;
    private static Delegate cb_incrementDepthBy_Ljava_lang_String_I;
    private static Delegate cb_keysToString;
    private static Delegate cb_matches_Ljava_lang_String_I;
    private static Delegate cb_propagateToChildren_Ljava_lang_String_I;
    private static Delegate cb_resolve_Lcom_airbnb_lottie_model_KeyPathElement_;
    [RegisterAttribute("COMPOSITION")]
public static KeyPath Composition { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IKeyPathElement ResolvedElement { get; }
    protected KeyPath(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "([Ljava/lang/String;)V", "")]
public KeyPath(String[] keys);
    private static KeyPath();
    public static KeyPath get_Composition();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetResolvedElementHandler();
    private static IntPtr n_GetResolvedElement(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getResolvedElement", "()Lcom/airbnb/lottie/model/KeyPathElement;", "GetGetResolvedElementHandler")]
public virtual IKeyPathElement get_ResolvedElement();
    private static Delegate GetAddKey_Ljava_lang_String_Handler();
    private static IntPtr n_AddKey_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    [RegisterAttribute("addKey", "(Ljava/lang/String;)Lcom/airbnb/lottie/model/KeyPath;", "GetAddKey_Ljava_lang_String_Handler")]
public virtual KeyPath AddKey(string key);
    private static Delegate GetFullyResolvesTo_Ljava_lang_String_IHandler();
    private static bool n_FullyResolvesTo_Ljava_lang_String_I(IntPtr jnienv, IntPtr native__this, IntPtr native_key, int depth);
    [RegisterAttribute("fullyResolvesTo", "(Ljava/lang/String;I)Z", "GetFullyResolvesTo_Ljava_lang_String_IHandler")]
public virtual bool FullyResolvesTo(string key, int depth);
    private static Delegate GetIncrementDepthBy_Ljava_lang_String_IHandler();
    private static int n_IncrementDepthBy_Ljava_lang_String_I(IntPtr jnienv, IntPtr native__this, IntPtr native_key, int depth);
    [RegisterAttribute("incrementDepthBy", "(Ljava/lang/String;I)I", "GetIncrementDepthBy_Ljava_lang_String_IHandler")]
public virtual int IncrementDepthBy(string key, int depth);
    private static Delegate GetKeysToStringHandler();
    private static IntPtr n_KeysToString(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("keysToString", "()Ljava/lang/String;", "GetKeysToStringHandler")]
public virtual string KeysToString();
    private static Delegate GetMatches_Ljava_lang_String_IHandler();
    private static bool n_Matches_Ljava_lang_String_I(IntPtr jnienv, IntPtr native__this, IntPtr native_key, int depth);
    [RegisterAttribute("matches", "(Ljava/lang/String;I)Z", "GetMatches_Ljava_lang_String_IHandler")]
public virtual bool Matches(string key, int depth);
    private static Delegate GetPropagateToChildren_Ljava_lang_String_IHandler();
    private static bool n_PropagateToChildren_Ljava_lang_String_I(IntPtr jnienv, IntPtr native__this, IntPtr native_key, int depth);
    [RegisterAttribute("propagateToChildren", "(Ljava/lang/String;I)Z", "GetPropagateToChildren_Ljava_lang_String_IHandler")]
public virtual bool PropagateToChildren(string key, int depth);
    private static Delegate GetResolve_Lcom_airbnb_lottie_model_KeyPathElement_Handler();
    private static IntPtr n_Resolve_Lcom_airbnb_lottie_model_KeyPathElement_(IntPtr jnienv, IntPtr native__this, IntPtr native_element);
    [RegisterAttribute("resolve", "(Lcom/airbnb/lottie/model/KeyPathElement;)Lcom/airbnb/lottie/model/KeyPath;", "GetResolve_Lcom_airbnb_lottie_model_KeyPathElement_Handler")]
public virtual KeyPath Resolve(IKeyPathElement element);
}
[RegisterAttribute("com/airbnb/lottie/model/layer/BaseLayer")]
public abstract class Com.Airbnb.Lottie.Model.Layer.BaseLayer : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getName;
    private static Delegate cb_addValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_;
    private static Delegate cb_draw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_I;
    private static Delegate cb_getBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_Z;
    private static Delegate cb_onValueChanged;
    private static Delegate cb_resolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_;
    private static Delegate cb_setContents_Ljava_util_List_Ljava_util_List_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Name { get; }
    protected BaseLayer(IntPtr javaReference, JniHandleOwnership transfer);
    private static BaseLayer();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    private static Delegate GetAddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler();
    private static void n_AddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_property, IntPtr native__callback);
    [RegisterAttribute("addValueCallback", "(Ljava/lang/Object;Lcom/airbnb/lottie/value/LottieValueCallback;)V", "GetAddValueCallback_Ljava_lang_Object_Lcom_airbnb_lottie_value_LottieValueCallback_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void AddValueCallback(Object property, LottieValueCallback callback);
    private static Delegate GetDraw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_IHandler();
    private static void n_Draw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_I(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas, IntPtr native_parentMatrix, int parentAlpha);
    [RegisterAttribute("draw", "(Landroid/graphics/Canvas;Landroid/graphics/Matrix;I)V", "GetDraw_Landroid_graphics_Canvas_Landroid_graphics_Matrix_IHandler")]
public virtual void Draw(Canvas canvas, Matrix parentMatrix, int parentAlpha);
    private static Delegate GetGetBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_ZHandler();
    private static void n_GetBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_outBounds, IntPtr native_parentMatrix, bool applyParents);
    [RegisterAttribute("getBounds", "(Landroid/graphics/RectF;Landroid/graphics/Matrix;Z)V", "GetGetBounds_Landroid_graphics_RectF_Landroid_graphics_Matrix_ZHandler")]
public virtual void GetBounds(RectF outBounds, Matrix parentMatrix, bool applyParents);
    private static Delegate GetOnValueChangedHandler();
    private static void n_OnValueChanged(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onValueChanged", "()V", "GetOnValueChangedHandler")]
public virtual void OnValueChanged();
    private static Delegate GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler();
    private static void n_ResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_(IntPtr jnienv, IntPtr native__this, IntPtr native_keyPath, int depth, IntPtr native_accumulator, IntPtr native_currentPartialKeyPath);
    [RegisterAttribute("resolveKeyPath", "(Lcom/airbnb/lottie/model/KeyPath;ILjava/util/List;Lcom/airbnb/lottie/model/KeyPath;)V", "GetResolveKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler")]
public virtual void ResolveKeyPath(KeyPath keyPath, int depth, IList`1<KeyPath> accumulator, KeyPath currentPartialKeyPath);
    private static Delegate GetSetContents_Ljava_util_List_Ljava_util_List_Handler();
    private static void n_SetContents_Ljava_util_List_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_contentsBefore, IntPtr native_contentsAfter);
    [RegisterAttribute("setContents", "(Ljava/util/List;Ljava/util/List;)V", "GetSetContents_Ljava_util_List_Ljava_util_List_Handler")]
public virtual void SetContents(IList`1<IContent> contentsBefore, IList`1<IContent> contentsAfter);
}
[RegisterAttribute("com/airbnb/lottie/model/layer/BaseLayer")]
internal class Com.Airbnb.Lottie.Model.Layer.BaseLayerInvoker : BaseLayer {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public BaseLayerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static BaseLayerInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("com/airbnb/lottie/model/layer/CompositionLayer")]
public class Com.Airbnb.Lottie.Model.Layer.CompositionLayer : BaseLayer {
    private static JniPeerMembers _members;
    private static Delegate cb_hasMasks;
    private static Delegate cb_hasMatte;
    private static Delegate cb_resolveChildKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_;
    private static Delegate cb_setOutlineMasksAndMattes_Z;
    private static Delegate cb_setProgress_F;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool HasMasks { get; }
    public bool HasMatte { get; }
    protected CompositionLayer(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/Layer;Ljava/util/List;Lcom/airbnb/lottie/LottieComposition;)V", "")]
public CompositionLayer(LottieDrawable lottieDrawable, Layer layerModel, IList`1<Layer> layerModels, LottieComposition composition);
    private static CompositionLayer();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetHasMasksHandler();
    private static bool n_HasMasks(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasMasks", "()Z", "GetHasMasksHandler")]
public virtual bool get_HasMasks();
    private static Delegate GetHasMatteHandler();
    private static bool n_HasMatte(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasMatte", "()Z", "GetHasMatteHandler")]
public virtual bool get_HasMatte();
    private static Delegate GetResolveChildKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler();
    private static void n_ResolveChildKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_(IntPtr jnienv, IntPtr native__this, IntPtr native_keyPath, int depth, IntPtr native_accumulator, IntPtr native_currentPartialKeyPath);
    [RegisterAttribute("resolveChildKeyPath", "(Lcom/airbnb/lottie/model/KeyPath;ILjava/util/List;Lcom/airbnb/lottie/model/KeyPath;)V", "GetResolveChildKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler")]
protected virtual void ResolveChildKeyPath(KeyPath keyPath, int depth, IList`1<KeyPath> accumulator, KeyPath currentPartialKeyPath);
    private static Delegate GetSetOutlineMasksAndMattes_ZHandler();
    private static void n_SetOutlineMasksAndMattes_Z(IntPtr jnienv, IntPtr native__this, bool outline);
    [RegisterAttribute("setOutlineMasksAndMattes", "(Z)V", "GetSetOutlineMasksAndMattes_ZHandler")]
public virtual void SetOutlineMasksAndMattes(bool outline);
    private static Delegate GetSetProgress_FHandler();
    private static void n_SetProgress_F(IntPtr jnienv, IntPtr native__this, float progress);
    [RegisterAttribute("setProgress", "(F)V", "GetSetProgress_FHandler")]
public virtual void SetProgress(float progress);
}
[RegisterAttribute("com/airbnb/lottie/model/layer/ImageLayer")]
public class Com.Airbnb.Lottie.Model.Layer.ImageLayer : BaseLayer {
    private static JniPeerMembers _members;
    private static Delegate cb_drawLayer_Landroid_graphics_Canvas_Landroid_graphics_Matrix_I;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ImageLayer(IntPtr javaReference, JniHandleOwnership transfer);
    private static ImageLayer();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetDrawLayer_Landroid_graphics_Canvas_Landroid_graphics_Matrix_IHandler();
    private static void n_DrawLayer_Landroid_graphics_Canvas_Landroid_graphics_Matrix_I(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas, IntPtr native_parentMatrix, int parentAlpha);
    [RegisterAttribute("drawLayer", "(Landroid/graphics/Canvas;Landroid/graphics/Matrix;I)V", "GetDrawLayer_Landroid_graphics_Canvas_Landroid_graphics_Matrix_IHandler")]
public virtual void DrawLayer(Canvas canvas, Matrix parentMatrix, int parentAlpha);
}
[RegisterAttribute("com/airbnb/lottie/model/layer/Layer")]
public class Com.Airbnb.Lottie.Model.Layer.Layer : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getId;
    private static Delegate cb_isHidden;
    private static Delegate cb_getLayerType;
    private static Delegate cb_toString_Ljava_lang_String_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public long Id { get; }
    public bool IsHidden { get; }
    protected Layer(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/util/List;Lcom/airbnb/lottie/LottieComposition;Ljava/lang/String;JLcom/airbnb/lottie/model/layer/Layer$LayerType;JLjava/lang/String;Ljava/util/List;Lcom/airbnb/lottie/model/animatable/AnimatableTransform;IIIFFIILcom/airbnb/lottie/model/animatable/AnimatableTextFrame;Lcom/airbnb/lottie/model/animatable/AnimatableTextProperties;Ljava/util/List;Lcom/airbnb/lottie/model/layer/Layer$MatteType;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Z)V", "")]
public Layer(IList`1<IContentModel> shapes, LottieComposition composition, string layerName, long layerId, LayerType layerType, long parentId, string refId, IList`1<Mask> masks, AnimatableTransform transform, int solidWidth, int solidHeight, int solidColor, float timeStretch, float startFrame, int preCompWidth, int preCompHeight, AnimatableTextFrame text, AnimatableTextProperties textProperties, IList`1<Keyframe> inOutKeyframes, MatteType matteType, AnimatableFloatValue timeRemapping, bool hidden);
    private static Layer();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetIdHandler();
    private static long n_GetId(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getId", "()J", "GetGetIdHandler")]
public virtual long get_Id();
    private static Delegate GetIsHiddenHandler();
    private static bool n_IsHidden(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isHidden", "()Z", "GetIsHiddenHandler")]
public virtual bool get_IsHidden();
    private static Delegate GetGetLayerTypeHandler();
    private static IntPtr n_GetLayerType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLayerType", "()Lcom/airbnb/lottie/model/layer/Layer$LayerType;", "GetGetLayerTypeHandler")]
public virtual LayerType GetLayerType();
    private static Delegate GetToString_Ljava_lang_String_Handler();
    private static IntPtr n_ToString_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_prefix);
    [RegisterAttribute("toString", "(Ljava/lang/String;)Ljava/lang/String;", "GetToString_Ljava_lang_String_Handler")]
public virtual string ToString(string prefix);
}
[RegisterAttribute("com/airbnb/lottie/model/layer/NullLayer")]
public class Com.Airbnb.Lottie.Model.Layer.NullLayer : BaseLayer {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected NullLayer(IntPtr javaReference, JniHandleOwnership transfer);
    private static NullLayer();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("com/airbnb/lottie/model/layer/ShapeLayer")]
public class Com.Airbnb.Lottie.Model.Layer.ShapeLayer : BaseLayer {
    private static JniPeerMembers _members;
    private static Delegate cb_resolveChildKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ShapeLayer(IntPtr javaReference, JniHandleOwnership transfer);
    private static ShapeLayer();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetResolveChildKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler();
    private static void n_ResolveChildKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_(IntPtr jnienv, IntPtr native__this, IntPtr native_keyPath, int depth, IntPtr native_accumulator, IntPtr native_currentPartialKeyPath);
    [RegisterAttribute("resolveChildKeyPath", "(Lcom/airbnb/lottie/model/KeyPath;ILjava/util/List;Lcom/airbnb/lottie/model/KeyPath;)V", "GetResolveChildKeyPath_Lcom_airbnb_lottie_model_KeyPath_ILjava_util_List_Lcom_airbnb_lottie_model_KeyPath_Handler")]
protected virtual void ResolveChildKeyPath(KeyPath keyPath, int depth, IList`1<KeyPath> accumulator, KeyPath currentPartialKeyPath);
}
[RegisterAttribute("com/airbnb/lottie/model/layer/SolidLayer")]
public class Com.Airbnb.Lottie.Model.Layer.SolidLayer : BaseLayer {
    private static JniPeerMembers _members;
    private static Delegate cb_drawLayer_Landroid_graphics_Canvas_Landroid_graphics_Matrix_I;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected SolidLayer(IntPtr javaReference, JniHandleOwnership transfer);
    private static SolidLayer();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetDrawLayer_Landroid_graphics_Canvas_Landroid_graphics_Matrix_IHandler();
    private static void n_DrawLayer_Landroid_graphics_Canvas_Landroid_graphics_Matrix_I(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas, IntPtr native_parentMatrix, int parentAlpha);
    [RegisterAttribute("drawLayer", "(Landroid/graphics/Canvas;Landroid/graphics/Matrix;I)V", "GetDrawLayer_Landroid_graphics_Canvas_Landroid_graphics_Matrix_IHandler")]
public virtual void DrawLayer(Canvas canvas, Matrix parentMatrix, int parentAlpha);
}
[RegisterAttribute("com/airbnb/lottie/model/layer/TextLayer")]
public class Com.Airbnb.Lottie.Model.Layer.TextLayer : BaseLayer {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected TextLayer(IntPtr javaReference, JniHandleOwnership transfer);
    private static TextLayer();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("com/airbnb/lottie/model/LottieCompositionCache")]
public class Com.Airbnb.Lottie.Model.LottieCompositionCache : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_clear;
    private static Delegate cb_get_Ljava_lang_String_;
    private static Delegate cb_put_Ljava_lang_String_Lcom_airbnb_lottie_LottieComposition_;
    private static Delegate cb_resize_I;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public static LottieCompositionCache Instance { get; }
    protected LottieCompositionCache(IntPtr javaReference, JniHandleOwnership transfer);
    private static LottieCompositionCache();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getInstance", "()Lcom/airbnb/lottie/model/LottieCompositionCache;", "")]
public static LottieCompositionCache get_Instance();
    private static Delegate GetClearHandler();
    private static void n_Clear(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clear", "()V", "GetClearHandler")]
public virtual void Clear();
    private static Delegate GetGet_Ljava_lang_String_Handler();
    private static IntPtr n_Get_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_cacheKey);
    [RegisterAttribute("get", "(Ljava/lang/String;)Lcom/airbnb/lottie/LottieComposition;", "GetGet_Ljava_lang_String_Handler")]
public virtual LottieComposition Get(string cacheKey);
    private static Delegate GetPut_Ljava_lang_String_Lcom_airbnb_lottie_LottieComposition_Handler();
    private static void n_Put_Ljava_lang_String_Lcom_airbnb_lottie_LottieComposition_(IntPtr jnienv, IntPtr native__this, IntPtr native_cacheKey, IntPtr native_composition);
    [RegisterAttribute("put", "(Ljava/lang/String;Lcom/airbnb/lottie/LottieComposition;)V", "GetPut_Ljava_lang_String_Lcom_airbnb_lottie_LottieComposition_Handler")]
public virtual void Put(string cacheKey, LottieComposition composition);
    private static Delegate GetResize_IHandler();
    private static void n_Resize_I(IntPtr jnienv, IntPtr native__this, int size);
    [RegisterAttribute("resize", "(I)V", "GetResize_IHandler")]
public virtual void Resize(int size);
}
[RegisterAttribute("com/airbnb/lottie/model/Marker")]
public class Com.Airbnb.Lottie.Model.Marker : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_matchesName_Ljava_lang_String_;
    [RegisterAttribute("durationFrames")]
public float DurationFrames { get; public set; }
    [RegisterAttribute("startFrame")]
public float StartFrame { get; public set; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected Marker(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;FF)V", "")]
public Marker(string name, float startFrame, float durationFrames);
    private static Marker();
    public float get_DurationFrames();
    public void set_DurationFrames(float value);
    public float get_StartFrame();
    public void set_StartFrame(float value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetMatchesName_Ljava_lang_String_Handler();
    private static bool n_MatchesName_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_name);
    [RegisterAttribute("matchesName", "(Ljava/lang/String;)Z", "GetMatchesName_Ljava_lang_String_Handler")]
public virtual bool MatchesName(string name);
}
[RegisterAttribute("com/airbnb/lottie/model/MutablePair")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Com.Airbnb.Lottie.Model.MutablePair : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_set_Ljava_lang_Object_Ljava_lang_Object_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected MutablePair(IntPtr javaReference, JniHandleOwnership transfer);
    private static MutablePair();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetSet_Ljava_lang_Object_Ljava_lang_Object_Handler();
    private static void n_Set_Ljava_lang_Object_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_first, IntPtr native_second);
    [RegisterAttribute("set", "(Ljava/lang/Object;Ljava/lang/Object;)V", "GetSet_Ljava_lang_Object_Ljava_lang_Object_Handler")]
public virtual void Set(Object first, Object second);
}
[RegisterAttribute("com/airbnb/lottie/network/DefaultLottieFetchResult")]
public class Com.Airbnb.Lottie.Network.DefaultLottieFetchResult : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_isSuccessful;
    private static Delegate cb_bodyByteStream;
    private static Delegate cb_close;
    private static Delegate cb_contentType;
    private static Delegate cb_error;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsSuccessful { get; }
    protected DefaultLottieFetchResult(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/net/HttpURLConnection;)V", "")]
public DefaultLottieFetchResult(HttpURLConnection connection);
    private static DefaultLottieFetchResult();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsSuccessfulHandler();
    private static bool n_IsSuccessful(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isSuccessful", "()Z", "GetIsSuccessfulHandler")]
public virtual bool get_IsSuccessful();
    private static Delegate GetBodyByteStreamHandler();
    private static IntPtr n_BodyByteStream(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("bodyByteStream", "()Ljava/io/InputStream;", "GetBodyByteStreamHandler")]
public virtual Stream BodyByteStream();
    private static Delegate GetCloseHandler();
    private static void n_Close(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("close", "()V", "GetCloseHandler")]
public virtual void Close();
    private static Delegate GetContentTypeHandler();
    private static IntPtr n_ContentType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("contentType", "()Ljava/lang/String;", "GetContentTypeHandler")]
public virtual string ContentType();
    private static Delegate GetErrorHandler();
    private static IntPtr n_Error(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("error", "()Ljava/lang/String;", "GetErrorHandler")]
public virtual string Error();
}
[RegisterAttribute("com/airbnb/lottie/network/DefaultLottieNetworkFetcher")]
public class Com.Airbnb.Lottie.Network.DefaultLottieNetworkFetcher : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_fetchSync_Ljava_lang_String_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected DefaultLottieNetworkFetcher(IntPtr javaReference, JniHandleOwnership transfer);
    private static DefaultLottieNetworkFetcher();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetFetchSync_Ljava_lang_String_Handler();
    private static IntPtr n_FetchSync_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_url);
    [RegisterAttribute("fetchSync", "(Ljava/lang/String;)Lcom/airbnb/lottie/network/LottieFetchResult;", "GetFetchSync_Ljava_lang_String_Handler")]
public virtual ILottieFetchResult FetchSync(string url);
}
[RegisterAttribute("com/airbnb/lottie/network/FileExtension")]
public class Com.Airbnb.Lottie.Network.FileExtension : Enum {
    private static JniPeerMembers _members;
    [RegisterAttribute("JSON")]
public static FileExtension Json { get; }
    [RegisterAttribute("ZIP")]
public static FileExtension Zip { get; }
    [RegisterAttribute("extension")]
public string Extension { get; public set; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal FileExtension(IntPtr javaReference, JniHandleOwnership transfer);
    private static FileExtension();
    public static FileExtension get_Json();
    public static FileExtension get_Zip();
    public string get_Extension();
    public void set_Extension(string value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("forFile", "(Ljava/lang/String;)Lcom/airbnb/lottie/network/FileExtension;", "")]
public static FileExtension ForFile(string filename);
    [RegisterAttribute("tempExtension", "()Ljava/lang/String;", "")]
public string TempExtension();
    [RegisterAttribute("valueOf", "(Ljava/lang/String;)Lcom/airbnb/lottie/network/FileExtension;", "")]
public static FileExtension ValueOf(string name);
    [RegisterAttribute("values", "()[Lcom/airbnb/lottie/network/FileExtension;", "")]
public static FileExtension[] Values();
}
[RegisterAttribute("com/airbnb/lottie/network/LottieFetchResult", "", "Com.Airbnb.Lottie.Network.ILottieFetchResultInvoker")]
public interface Com.Airbnb.Lottie.Network.ILottieFetchResult {
    public bool IsSuccessful { get; }
    [RegisterAttribute("isSuccessful", "()Z", "GetIsSuccessfulHandler:Com.Airbnb.Lottie.Network.ILottieFetchResultInvoker, Lottie.Android")]
public abstract virtual bool get_IsSuccessful();
    [RegisterAttribute("bodyByteStream", "()Ljava/io/InputStream;", "GetBodyByteStreamHandler:Com.Airbnb.Lottie.Network.ILottieFetchResultInvoker, Lottie.Android")]
public abstract virtual Stream BodyByteStream();
    [RegisterAttribute("contentType", "()Ljava/lang/String;", "GetContentTypeHandler:Com.Airbnb.Lottie.Network.ILottieFetchResultInvoker, Lottie.Android")]
public abstract virtual string ContentType();
    [RegisterAttribute("error", "()Ljava/lang/String;", "GetErrorHandler:Com.Airbnb.Lottie.Network.ILottieFetchResultInvoker, Lottie.Android")]
public abstract virtual string Error();
}
[RegisterAttribute("com/airbnb/lottie/network/LottieFetchResult")]
internal class Com.Airbnb.Lottie.Network.ILottieFetchResultInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_isSuccessful;
    private IntPtr id_isSuccessful;
    private static Delegate cb_bodyByteStream;
    private IntPtr id_bodyByteStream;
    private static Delegate cb_contentType;
    private IntPtr id_contentType;
    private static Delegate cb_error;
    private IntPtr id_error;
    private static Delegate cb_close;
    private IntPtr id_close;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsSuccessful { get; }
    public ILottieFetchResultInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ILottieFetchResultInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static ILottieFetchResult GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetIsSuccessfulHandler();
    private static bool n_IsSuccessful(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsSuccessful();
    private static Delegate GetBodyByteStreamHandler();
    private static IntPtr n_BodyByteStream(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Stream BodyByteStream();
    private static Delegate GetContentTypeHandler();
    private static IntPtr n_ContentType(IntPtr jnienv, IntPtr native__this);
    public sealed virtual string ContentType();
    private static Delegate GetErrorHandler();
    private static IntPtr n_Error(IntPtr jnienv, IntPtr native__this);
    public sealed virtual string Error();
    private static Delegate GetCloseHandler();
    private static void n_Close(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Close();
}
[RegisterAttribute("com/airbnb/lottie/network/LottieNetworkCacheProvider", "", "Com.Airbnb.Lottie.Network.ILottieNetworkCacheProviderInvoker")]
public interface Com.Airbnb.Lottie.Network.ILottieNetworkCacheProvider {
    public File CacheDir { get; }
    [RegisterAttribute("getCacheDir", "()Ljava/io/File;", "GetGetCacheDirHandler:Com.Airbnb.Lottie.Network.ILottieNetworkCacheProviderInvoker, Lottie.Android")]
public abstract virtual File get_CacheDir();
}
[RegisterAttribute("com/airbnb/lottie/network/LottieNetworkCacheProvider")]
internal class Com.Airbnb.Lottie.Network.ILottieNetworkCacheProviderInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_getCacheDir;
    private IntPtr id_getCacheDir;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public File CacheDir { get; }
    public ILottieNetworkCacheProviderInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ILottieNetworkCacheProviderInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static ILottieNetworkCacheProvider GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetCacheDirHandler();
    private static IntPtr n_GetCacheDir(IntPtr jnienv, IntPtr native__this);
    public sealed virtual File get_CacheDir();
}
[RegisterAttribute("com/airbnb/lottie/network/LottieNetworkFetcher", "", "Com.Airbnb.Lottie.Network.ILottieNetworkFetcherInvoker")]
public interface Com.Airbnb.Lottie.Network.ILottieNetworkFetcher {
    [RegisterAttribute("fetchSync", "(Ljava/lang/String;)Lcom/airbnb/lottie/network/LottieFetchResult;", "GetFetchSync_Ljava_lang_String_Handler:Com.Airbnb.Lottie.Network.ILottieNetworkFetcherInvoker, Lottie.Android")]
public abstract virtual ILottieFetchResult FetchSync(string p0);
}
[RegisterAttribute("com/airbnb/lottie/network/LottieNetworkFetcher")]
internal class Com.Airbnb.Lottie.Network.ILottieNetworkFetcherInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_fetchSync_Ljava_lang_String_;
    private IntPtr id_fetchSync_Ljava_lang_String_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ILottieNetworkFetcherInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ILottieNetworkFetcherInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static ILottieNetworkFetcher GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetFetchSync_Ljava_lang_String_Handler();
    private static IntPtr n_FetchSync_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual ILottieFetchResult FetchSync(string p0);
}
[RegisterAttribute("com/airbnb/lottie/network/NetworkCache")]
public class Com.Airbnb.Lottie.Network.NetworkCache : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_clear;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected NetworkCache(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/network/LottieNetworkCacheProvider;)V", "")]
public NetworkCache(ILottieNetworkCacheProvider cacheProvider);
    private static NetworkCache();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetClearHandler();
    private static void n_Clear(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clear", "()V", "GetClearHandler")]
public virtual void Clear();
}
[RegisterAttribute("com/airbnb/lottie/network/NetworkFetcher")]
public class Com.Airbnb.Lottie.Network.NetworkFetcher : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_fetchSync_Ljava_lang_String_Ljava_lang_String_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected NetworkFetcher(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/network/NetworkCache;Lcom/airbnb/lottie/network/LottieNetworkFetcher;)V", "")]
public NetworkFetcher(NetworkCache networkCache, ILottieNetworkFetcher fetcher);
    private static NetworkFetcher();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetFetchSync_Ljava_lang_String_Ljava_lang_String_Handler();
    private static IntPtr n_FetchSync_Ljava_lang_String_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_url, IntPtr native_cacheKey);
    [RegisterAttribute("fetchSync", "(Ljava/lang/String;Ljava/lang/String;)Lcom/airbnb/lottie/LottieResult;", "GetFetchSync_Ljava_lang_String_Ljava_lang_String_Handler")]
public virtual LottieResult FetchSync(string url, string cacheKey);
}
[RegisterAttribute("com/airbnb/lottie/parser/moshi/JsonReader")]
public abstract class Com.Airbnb.Lottie.Parser.Moshi.JsonReader : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_hasNext;
    private static Delegate cb_beginArray;
    private static Delegate cb_beginObject;
    private static Delegate cb_endArray;
    private static Delegate cb_endObject;
    private static Delegate cb_nextBoolean;
    private static Delegate cb_nextDouble;
    private static Delegate cb_nextInt;
    private static Delegate cb_nextName;
    private static Delegate cb_nextString;
    private static Delegate cb_peek;
    private static Delegate cb_selectName_Lcom_airbnb_lottie_parser_moshi_JsonReader_Options_;
    private static Delegate cb_skipName;
    private static Delegate cb_skipValue;
    private static Delegate cb_close;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool HasNext { get; }
    public string Path { get; }
    protected JsonReader(IntPtr javaReference, JniHandleOwnership transfer);
    private static JsonReader();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetHasNextHandler();
    private static bool n_HasNext(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasNext", "()Z", "GetHasNextHandler")]
public abstract virtual bool get_HasNext();
    [RegisterAttribute("getPath", "()Ljava/lang/String;", "")]
public string get_Path();
    private static Delegate GetBeginArrayHandler();
    private static void n_BeginArray(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("beginArray", "()V", "GetBeginArrayHandler")]
public abstract virtual void BeginArray();
    private static Delegate GetBeginObjectHandler();
    private static void n_BeginObject(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("beginObject", "()V", "GetBeginObjectHandler")]
public abstract virtual void BeginObject();
    private static Delegate GetEndArrayHandler();
    private static void n_EndArray(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("endArray", "()V", "GetEndArrayHandler")]
public abstract virtual void EndArray();
    private static Delegate GetEndObjectHandler();
    private static void n_EndObject(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("endObject", "()V", "GetEndObjectHandler")]
public abstract virtual void EndObject();
    private static Delegate GetNextBooleanHandler();
    private static bool n_NextBoolean(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("nextBoolean", "()Z", "GetNextBooleanHandler")]
public abstract virtual bool NextBoolean();
    private static Delegate GetNextDoubleHandler();
    private static double n_NextDouble(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("nextDouble", "()D", "GetNextDoubleHandler")]
public abstract virtual double NextDouble();
    private static Delegate GetNextIntHandler();
    private static int n_NextInt(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("nextInt", "()I", "GetNextIntHandler")]
public abstract virtual int NextInt();
    private static Delegate GetNextNameHandler();
    private static IntPtr n_NextName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("nextName", "()Ljava/lang/String;", "GetNextNameHandler")]
public abstract virtual string NextName();
    private static Delegate GetNextStringHandler();
    private static IntPtr n_NextString(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("nextString", "()Ljava/lang/String;", "GetNextStringHandler")]
public abstract virtual string NextString();
    [RegisterAttribute("of", "(Lokio/BufferedSource;)Lcom/airbnb/lottie/parser/moshi/JsonReader;", "")]
public static JsonReader Of(IBufferedSource source);
    private static Delegate GetPeekHandler();
    private static IntPtr n_Peek(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("peek", "()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;", "GetPeekHandler")]
public abstract virtual Token Peek();
    private static Delegate GetSelectName_Lcom_airbnb_lottie_parser_moshi_JsonReader_Options_Handler();
    private static int n_SelectName_Lcom_airbnb_lottie_parser_moshi_JsonReader_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("selectName", "(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I", "GetSelectName_Lcom_airbnb_lottie_parser_moshi_JsonReader_Options_Handler")]
public abstract virtual int SelectName(Options p0);
    private static Delegate GetSkipNameHandler();
    private static void n_SkipName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("skipName", "()V", "GetSkipNameHandler")]
public abstract virtual void SkipName();
    private static Delegate GetSkipValueHandler();
    private static void n_SkipValue(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("skipValue", "()V", "GetSkipValueHandler")]
public abstract virtual void SkipValue();
    private static Delegate GetCloseHandler();
    private static void n_Close(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("close", "()V", "GetCloseHandler")]
public abstract virtual void Close();
}
[RegisterAttribute("com/airbnb/lottie/parser/moshi/JsonReader")]
internal class Com.Airbnb.Lottie.Parser.Moshi.JsonReaderInvoker : JsonReader {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool HasNext { get; }
    public JsonReaderInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static JsonReaderInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("hasNext", "()Z", "GetHasNextHandler")]
public virtual bool get_HasNext();
    [RegisterAttribute("beginArray", "()V", "GetBeginArrayHandler")]
public virtual void BeginArray();
    [RegisterAttribute("beginObject", "()V", "GetBeginObjectHandler")]
public virtual void BeginObject();
    [RegisterAttribute("endArray", "()V", "GetEndArrayHandler")]
public virtual void EndArray();
    [RegisterAttribute("endObject", "()V", "GetEndObjectHandler")]
public virtual void EndObject();
    [RegisterAttribute("nextBoolean", "()Z", "GetNextBooleanHandler")]
public virtual bool NextBoolean();
    [RegisterAttribute("nextDouble", "()D", "GetNextDoubleHandler")]
public virtual double NextDouble();
    [RegisterAttribute("nextInt", "()I", "GetNextIntHandler")]
public virtual int NextInt();
    [RegisterAttribute("nextName", "()Ljava/lang/String;", "GetNextNameHandler")]
public virtual string NextName();
    [RegisterAttribute("nextString", "()Ljava/lang/String;", "GetNextStringHandler")]
public virtual string NextString();
    [RegisterAttribute("peek", "()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;", "GetPeekHandler")]
public virtual Token Peek();
    [RegisterAttribute("selectName", "(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I", "GetSelectName_Lcom_airbnb_lottie_parser_moshi_JsonReader_Options_Handler")]
public virtual int SelectName(Options p0);
    [RegisterAttribute("skipName", "()V", "GetSkipNameHandler")]
public virtual void SkipName();
    [RegisterAttribute("skipValue", "()V", "GetSkipValueHandler")]
public virtual void SkipValue();
    [RegisterAttribute("close", "()V", "GetCloseHandler")]
public virtual void Close();
}
[RegisterAttribute("com/airbnb/lottie/PerformanceTracker")]
public class Com.Airbnb.Lottie.PerformanceTracker : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getSortedRenderTimes;
    private static Delegate cb_addFrameListener_Lcom_airbnb_lottie_PerformanceTracker_FrameListener_;
    private static Delegate cb_clearRenderTimes;
    private static Delegate cb_logRenderTimes;
    private static Delegate cb_recordRenderTime_Ljava_lang_String_F;
    private static Delegate cb_removeFrameListener_Lcom_airbnb_lottie_PerformanceTracker_FrameListener_;
    private WeakReference weak_implementor_AddFrameListener;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IList`1<Pair> SortedRenderTimes { get; }
    protected PerformanceTracker(IntPtr javaReference, JniHandleOwnership transfer);
    private static PerformanceTracker();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetSortedRenderTimesHandler();
    private static IntPtr n_GetSortedRenderTimes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSortedRenderTimes", "()Ljava/util/List;", "GetGetSortedRenderTimesHandler")]
public virtual IList`1<Pair> get_SortedRenderTimes();
    private static Delegate GetAddFrameListener_Lcom_airbnb_lottie_PerformanceTracker_FrameListener_Handler();
    private static void n_AddFrameListener_Lcom_airbnb_lottie_PerformanceTracker_FrameListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_frameListener);
    [RegisterAttribute("addFrameListener", "(Lcom/airbnb/lottie/PerformanceTracker$FrameListener;)V", "GetAddFrameListener_Lcom_airbnb_lottie_PerformanceTracker_FrameListener_Handler")]
public virtual void AddFrameListener(IFrameListener frameListener);
    private static Delegate GetClearRenderTimesHandler();
    private static void n_ClearRenderTimes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clearRenderTimes", "()V", "GetClearRenderTimesHandler")]
public virtual void ClearRenderTimes();
    private static Delegate GetLogRenderTimesHandler();
    private static void n_LogRenderTimes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("logRenderTimes", "()V", "GetLogRenderTimesHandler")]
public virtual void LogRenderTimes();
    private static Delegate GetRecordRenderTime_Ljava_lang_String_FHandler();
    private static void n_RecordRenderTime_Ljava_lang_String_F(IntPtr jnienv, IntPtr native__this, IntPtr native_layerName, float millis);
    [RegisterAttribute("recordRenderTime", "(Ljava/lang/String;F)V", "GetRecordRenderTime_Ljava_lang_String_FHandler")]
public virtual void RecordRenderTime(string layerName, float millis);
    private static Delegate GetRemoveFrameListener_Lcom_airbnb_lottie_PerformanceTracker_FrameListener_Handler();
    private static void n_RemoveFrameListener_Lcom_airbnb_lottie_PerformanceTracker_FrameListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_frameListener);
    [RegisterAttribute("removeFrameListener", "(Lcom/airbnb/lottie/PerformanceTracker$FrameListener;)V", "GetRemoveFrameListener_Lcom_airbnb_lottie_PerformanceTracker_FrameListener_Handler")]
public virtual void RemoveFrameListener(IFrameListener frameListener);
    public void add_Frame(EventHandler`1<FrameEventArgs> value);
    public void remove_Frame(EventHandler`1<FrameEventArgs> value);
    private IFrameListenerImplementor __CreateIFrameListenerImplementor();
}
[RegisterAttribute("com/airbnb/lottie/RenderMode")]
public class Com.Airbnb.Lottie.RenderMode : Enum {
    private static JniPeerMembers _members;
    [RegisterAttribute("AUTOMATIC")]
public static RenderMode Automatic { get; }
    [RegisterAttribute("HARDWARE")]
public static RenderMode Hardware { get; }
    [RegisterAttribute("SOFTWARE")]
public static RenderMode Software { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal RenderMode(IntPtr javaReference, JniHandleOwnership transfer);
    private static RenderMode();
    public static RenderMode get_Automatic();
    public static RenderMode get_Hardware();
    public static RenderMode get_Software();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("valueOf", "(Ljava/lang/String;)Lcom/airbnb/lottie/RenderMode;", "")]
public static RenderMode ValueOf(string name);
    [RegisterAttribute("values", "()[Lcom/airbnb/lottie/RenderMode;", "")]
public static RenderMode[] Values();
}
[RegisterAttribute("com/airbnb/lottie/SimpleColorFilter")]
public class Com.Airbnb.Lottie.SimpleColorFilter : PorterDuffColorFilter {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected SimpleColorFilter(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(I)V", "")]
public SimpleColorFilter(int color);
    private static SimpleColorFilter();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("com/airbnb/lottie/TextDelegate")]
public class Com.Airbnb.Lottie.TextDelegate : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_invalidateAllText;
    private static Delegate cb_invalidateText_Ljava_lang_String_;
    private static Delegate cb_setCacheText_Z;
    private static Delegate cb_setText_Ljava_lang_String_Ljava_lang_String_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected TextDelegate(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/LottieAnimationView;)V", "")]
public TextDelegate(LottieAnimationView animationView);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/LottieDrawable;)V", "")]
public TextDelegate(LottieDrawable drawable);
    private static TextDelegate();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getTextInternal", "(Ljava/lang/String;)Ljava/lang/String;", "")]
public string GetTextInternal(string input);
    private static Delegate GetInvalidateAllTextHandler();
    private static void n_InvalidateAllText(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("invalidateAllText", "()V", "GetInvalidateAllTextHandler")]
public virtual void InvalidateAllText();
    private static Delegate GetInvalidateText_Ljava_lang_String_Handler();
    private static void n_InvalidateText_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_input);
    [RegisterAttribute("invalidateText", "(Ljava/lang/String;)V", "GetInvalidateText_Ljava_lang_String_Handler")]
public virtual void InvalidateText(string input);
    private static Delegate GetSetCacheText_ZHandler();
    private static void n_SetCacheText_Z(IntPtr jnienv, IntPtr native__this, bool cacheText);
    [RegisterAttribute("setCacheText", "(Z)V", "GetSetCacheText_ZHandler")]
public virtual void SetCacheText(bool cacheText);
    private static Delegate GetSetText_Ljava_lang_String_Ljava_lang_String_Handler();
    private static void n_SetText_Ljava_lang_String_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_input, IntPtr native_output);
    [RegisterAttribute("setText", "(Ljava/lang/String;Ljava/lang/String;)V", "GetSetText_Ljava_lang_String_Ljava_lang_String_Handler")]
public virtual void SetText(string input, string output);
}
[RegisterAttribute("com/airbnb/lottie/utils/BaseLottieAnimator")]
public abstract class Com.Airbnb.Lottie.Utils.BaseLottieAnimator : ValueAnimator {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected BaseLottieAnimator(IntPtr javaReference, JniHandleOwnership transfer);
    private static BaseLottieAnimator();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("com/airbnb/lottie/utils/BaseLottieAnimator")]
internal class Com.Airbnb.Lottie.Utils.BaseLottieAnimatorInvoker : BaseLottieAnimator {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public BaseLottieAnimatorInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static BaseLottieAnimatorInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("com/airbnb/lottie/utils/GammaEvaluator")]
public class Com.Airbnb.Lottie.Utils.GammaEvaluator : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected GammaEvaluator(IntPtr javaReference, JniHandleOwnership transfer);
    private static GammaEvaluator();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("evaluate", "(FII)I", "")]
public static int Evaluate(float fraction, int startInt, int endInt);
}
[RegisterAttribute("com/airbnb/lottie/utils/LogcatLogger")]
public class Com.Airbnb.Lottie.Utils.LogcatLogger : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_debug_Ljava_lang_String_;
    private static Delegate cb_debug_Ljava_lang_String_Ljava_lang_Throwable_;
    private static Delegate cb_error_Ljava_lang_String_Ljava_lang_Throwable_;
    private static Delegate cb_warning_Ljava_lang_String_;
    private static Delegate cb_warning_Ljava_lang_String_Ljava_lang_Throwable_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected LogcatLogger(IntPtr javaReference, JniHandleOwnership transfer);
    private static LogcatLogger();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetDebug_Ljava_lang_String_Handler();
    private static void n_Debug_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_message);
    [RegisterAttribute("debug", "(Ljava/lang/String;)V", "GetDebug_Ljava_lang_String_Handler")]
public virtual void Debug(string message);
    private static Delegate GetDebug_Ljava_lang_String_Ljava_lang_Throwable_Handler();
    private static void n_Debug_Ljava_lang_String_Ljava_lang_Throwable_(IntPtr jnienv, IntPtr native__this, IntPtr native_message, IntPtr native_exception);
    [RegisterAttribute("debug", "(Ljava/lang/String;Ljava/lang/Throwable;)V", "GetDebug_Ljava_lang_String_Ljava_lang_Throwable_Handler")]
public virtual void Debug(string message, Throwable exception);
    private static Delegate GetError_Ljava_lang_String_Ljava_lang_Throwable_Handler();
    private static void n_Error_Ljava_lang_String_Ljava_lang_Throwable_(IntPtr jnienv, IntPtr native__this, IntPtr native_message, IntPtr native_exception);
    [RegisterAttribute("error", "(Ljava/lang/String;Ljava/lang/Throwable;)V", "GetError_Ljava_lang_String_Ljava_lang_Throwable_Handler")]
public virtual void Error(string message, Throwable exception);
    private static Delegate GetWarning_Ljava_lang_String_Handler();
    private static void n_Warning_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_message);
    [RegisterAttribute("warning", "(Ljava/lang/String;)V", "GetWarning_Ljava_lang_String_Handler")]
public virtual void Warning(string message);
    private static Delegate GetWarning_Ljava_lang_String_Ljava_lang_Throwable_Handler();
    private static void n_Warning_Ljava_lang_String_Ljava_lang_Throwable_(IntPtr jnienv, IntPtr native__this, IntPtr native_message, IntPtr native_exception);
    [RegisterAttribute("warning", "(Ljava/lang/String;Ljava/lang/Throwable;)V", "GetWarning_Ljava_lang_String_Ljava_lang_Throwable_Handler")]
public virtual void Warning(string message, Throwable exception);
}
[RegisterAttribute("com/airbnb/lottie/utils/Logger")]
public class Com.Airbnb.Lottie.Utils.Logger : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected Logger(IntPtr javaReference, JniHandleOwnership transfer);
    private static Logger();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("debug", "(Ljava/lang/String;)V", "")]
public static void Debug(string message);
    [RegisterAttribute("debug", "(Ljava/lang/String;Ljava/lang/Throwable;)V", "")]
public static void Debug(string message, Throwable exception);
    [RegisterAttribute("error", "(Ljava/lang/String;Ljava/lang/Throwable;)V", "")]
public static void Error(string message, Throwable exception);
    [RegisterAttribute("setInstance", "(Lcom/airbnb/lottie/LottieLogger;)V", "")]
public static void SetInstance(ILottieLogger instance);
    [RegisterAttribute("warning", "(Ljava/lang/String;)V", "")]
public static void Warning(string message);
    [RegisterAttribute("warning", "(Ljava/lang/String;Ljava/lang/Throwable;)V", "")]
public static void Warning(string message, Throwable exception);
}
[RegisterAttribute("com/airbnb/lottie/utils/LottieValueAnimator")]
public class Com.Airbnb.Lottie.Utils.LottieValueAnimator : BaseLottieAnimator {
    private static JniPeerMembers _members;
    private static Delegate cb_getAnimatedValueAbsolute;
    private static Delegate cb_getFrame;
    private static Delegate cb_setFrame_F;
    private static Delegate cb_getMaxFrame;
    private static Delegate cb_setMaxFrame_F;
    private static Delegate cb_getMinFrame;
    private static Delegate cb_getSpeed;
    private static Delegate cb_setSpeed_F;
    private static Delegate cb_clearComposition;
    private static Delegate cb_doFrame_J;
    private static Delegate cb_endAnimation;
    private static Delegate cb_pauseAnimation;
    private static Delegate cb_playAnimation;
    private static Delegate cb_postFrameCallback;
    private static Delegate cb_removeFrameCallback;
    private static Delegate cb_removeFrameCallback_Z;
    private static Delegate cb_resumeAnimation;
    private static Delegate cb_reverseAnimationSpeed;
    private static Delegate cb_setComposition_Lcom_airbnb_lottie_LottieComposition_;
    private static Delegate cb_setMinAndMaxFrames_FF;
    private static Delegate cb_setMinFrame_I;
    [RegisterAttribute("running")]
protected bool Running { get; protected set; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public float AnimatedValueAbsolute { get; }
    public float Frame { get; public set; }
    public float MaxFrame { get; public set; }
    public float MinFrame { get; }
    public float Speed { get; public set; }
    protected LottieValueAnimator(IntPtr javaReference, JniHandleOwnership transfer);
    private static LottieValueAnimator();
    protected bool get_Running();
    protected void set_Running(bool value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetAnimatedValueAbsoluteHandler();
    private static float n_GetAnimatedValueAbsolute(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getAnimatedValueAbsolute", "()F", "GetGetAnimatedValueAbsoluteHandler")]
public virtual float get_AnimatedValueAbsolute();
    private static Delegate GetGetFrameHandler();
    private static float n_GetFrame(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetFrame_FHandler();
    private static void n_SetFrame_F(IntPtr jnienv, IntPtr native__this, float frame);
    [RegisterAttribute("getFrame", "()F", "GetGetFrameHandler")]
public virtual float get_Frame();
    [RegisterAttribute("setFrame", "(F)V", "GetSetFrame_FHandler")]
public virtual void set_Frame(float value);
    private static Delegate GetGetMaxFrameHandler();
    private static float n_GetMaxFrame(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetMaxFrame_FHandler();
    private static void n_SetMaxFrame_F(IntPtr jnienv, IntPtr native__this, float maxFrame);
    [RegisterAttribute("getMaxFrame", "()F", "GetGetMaxFrameHandler")]
public virtual float get_MaxFrame();
    [RegisterAttribute("setMaxFrame", "(F)V", "GetSetMaxFrame_FHandler")]
public virtual void set_MaxFrame(float value);
    private static Delegate GetGetMinFrameHandler();
    private static float n_GetMinFrame(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMinFrame", "()F", "GetGetMinFrameHandler")]
public virtual float get_MinFrame();
    private static Delegate GetGetSpeedHandler();
    private static float n_GetSpeed(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSpeed_FHandler();
    private static void n_SetSpeed_F(IntPtr jnienv, IntPtr native__this, float speed);
    [RegisterAttribute("getSpeed", "()F", "GetGetSpeedHandler")]
public virtual float get_Speed();
    [RegisterAttribute("setSpeed", "(F)V", "GetSetSpeed_FHandler")]
public virtual void set_Speed(float value);
    private static Delegate GetClearCompositionHandler();
    private static void n_ClearComposition(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clearComposition", "()V", "GetClearCompositionHandler")]
public virtual void ClearComposition();
    private static Delegate GetDoFrame_JHandler();
    private static void n_DoFrame_J(IntPtr jnienv, IntPtr native__this, long frameTimeNanos);
    [RegisterAttribute("doFrame", "(J)V", "GetDoFrame_JHandler")]
public virtual void DoFrame(long frameTimeNanos);
    private static Delegate GetEndAnimationHandler();
    private static void n_EndAnimation(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("endAnimation", "()V", "GetEndAnimationHandler")]
public virtual void EndAnimation();
    private static Delegate GetPauseAnimationHandler();
    private static void n_PauseAnimation(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("pauseAnimation", "()V", "GetPauseAnimationHandler")]
public virtual void PauseAnimation();
    private static Delegate GetPlayAnimationHandler();
    private static void n_PlayAnimation(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("playAnimation", "()V", "GetPlayAnimationHandler")]
public virtual void PlayAnimation();
    private static Delegate GetPostFrameCallbackHandler();
    private static void n_PostFrameCallback(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("postFrameCallback", "()V", "GetPostFrameCallbackHandler")]
protected virtual void PostFrameCallback();
    private static Delegate GetRemoveFrameCallbackHandler();
    private static void n_RemoveFrameCallback(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("removeFrameCallback", "()V", "GetRemoveFrameCallbackHandler")]
protected virtual void RemoveFrameCallback();
    private static Delegate GetRemoveFrameCallback_ZHandler();
    private static void n_RemoveFrameCallback_Z(IntPtr jnienv, IntPtr native__this, bool stopRunning);
    [RegisterAttribute("removeFrameCallback", "(Z)V", "GetRemoveFrameCallback_ZHandler")]
protected virtual void RemoveFrameCallback(bool stopRunning);
    private static Delegate GetResumeAnimationHandler();
    private static void n_ResumeAnimation(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("resumeAnimation", "()V", "GetResumeAnimationHandler")]
public virtual void ResumeAnimation();
    private static Delegate GetReverseAnimationSpeedHandler();
    private static void n_ReverseAnimationSpeed(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("reverseAnimationSpeed", "()V", "GetReverseAnimationSpeedHandler")]
public virtual void ReverseAnimationSpeed();
    private static Delegate GetSetComposition_Lcom_airbnb_lottie_LottieComposition_Handler();
    private static void n_SetComposition_Lcom_airbnb_lottie_LottieComposition_(IntPtr jnienv, IntPtr native__this, IntPtr native_composition);
    [RegisterAttribute("setComposition", "(Lcom/airbnb/lottie/LottieComposition;)V", "GetSetComposition_Lcom_airbnb_lottie_LottieComposition_Handler")]
public virtual void SetComposition(LottieComposition composition);
    private static Delegate GetSetMinAndMaxFrames_FFHandler();
    private static void n_SetMinAndMaxFrames_FF(IntPtr jnienv, IntPtr native__this, float minFrame, float maxFrame);
    [RegisterAttribute("setMinAndMaxFrames", "(FF)V", "GetSetMinAndMaxFrames_FFHandler")]
public virtual void SetMinAndMaxFrames(float minFrame, float maxFrame);
    private static Delegate GetSetMinFrame_IHandler();
    private static void n_SetMinFrame_I(IntPtr jnienv, IntPtr native__this, int minFrame);
    [RegisterAttribute("setMinFrame", "(I)V", "GetSetMinFrame_IHandler")]
public virtual void SetMinFrame(int minFrame);
}
[RegisterAttribute("com/airbnb/lottie/utils/MeanCalculator")]
public class Com.Airbnb.Lottie.Utils.MeanCalculator : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getMean;
    private static Delegate cb_add_F;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public float Mean { get; }
    protected MeanCalculator(IntPtr javaReference, JniHandleOwnership transfer);
    private static MeanCalculator();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetMeanHandler();
    private static float n_GetMean(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMean", "()F", "GetGetMeanHandler")]
public virtual float get_Mean();
    private static Delegate GetAdd_FHandler();
    private static void n_Add_F(IntPtr jnienv, IntPtr native__this, float number);
    [RegisterAttribute("add", "(F)V", "GetAdd_FHandler")]
public virtual void Add(float number);
}
[RegisterAttribute("com/airbnb/lottie/utils/MiscUtils")]
public class Com.Airbnb.Lottie.Utils.MiscUtils : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected MiscUtils(IntPtr javaReference, JniHandleOwnership transfer);
    private static MiscUtils();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("addPoints", "(Landroid/graphics/PointF;Landroid/graphics/PointF;)Landroid/graphics/PointF;", "")]
public static PointF AddPoints(PointF p1, PointF p2);
    [RegisterAttribute("clamp", "(DDD)D", "")]
public static double Clamp(double number, double min, double max);
    [RegisterAttribute("clamp", "(FFF)F", "")]
public static float Clamp(float number, float min, float max);
    [RegisterAttribute("clamp", "(III)I", "")]
public static int Clamp(int number, int min, int max);
    [RegisterAttribute("contains", "(FFF)Z", "")]
public static bool Contains(float number, float rangeMin, float rangeMax);
    [RegisterAttribute("getPathFromData", "(Lcom/airbnb/lottie/model/content/ShapeData;Landroid/graphics/Path;)V", "")]
public static void GetPathFromData(ShapeData shapeData, Path outPath);
    [RegisterAttribute("lerp", "(DDD)D", "")]
public static double Lerp(double a, double b, double percentage);
    [RegisterAttribute("lerp", "(FFF)F", "")]
public static float Lerp(float a, float b, float percentage);
    [RegisterAttribute("lerp", "(IIF)I", "")]
public static int Lerp(int a, int b, float percentage);
    [RegisterAttribute("resolveKeyPath", "(Lcom/airbnb/lottie/model/KeyPath;ILjava/util/List;Lcom/airbnb/lottie/model/KeyPath;Lcom/airbnb/lottie/animation/content/KeyPathElementContent;)V", "")]
public static void ResolveKeyPath(KeyPath keyPath, int depth, IList`1<KeyPath> accumulator, KeyPath currentPartialKeyPath, IKeyPathElementContent content);
}
[RegisterAttribute("com/airbnb/lottie/utils/Utils")]
public class Com.Airbnb.Lottie.Utils.Utils : Object {
    [RegisterAttribute("SECOND_IN_NANOS")]
public static int SecondInNanos;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal Utils(IntPtr javaReference, JniHandleOwnership transfer);
    private static Utils();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("applyTrimPathIfNeeded", "(Landroid/graphics/Path;Lcom/airbnb/lottie/animation/content/TrimPathContent;)V", "")]
public static void ApplyTrimPathIfNeeded(Path path, TrimPathContent trimPath);
    [RegisterAttribute("applyTrimPathIfNeeded", "(Landroid/graphics/Path;FFF)V", "")]
public static void ApplyTrimPathIfNeeded(Path path, float startValue, float endValue, float offsetValue);
    [RegisterAttribute("closeQuietly", "(Ljava/io/Closeable;)V", "")]
public static void CloseQuietly(ICloseable closeable);
    [RegisterAttribute("createPath", "(Landroid/graphics/PointF;Landroid/graphics/PointF;Landroid/graphics/PointF;Landroid/graphics/PointF;)Landroid/graphics/Path;", "")]
public static Path CreatePath(PointF startPoint, PointF endPoint, PointF cp1, PointF cp2);
    [RegisterAttribute("dpScale", "()F", "")]
public static float DpScale();
    [RegisterAttribute("getAnimationScale", "(Landroid/content/Context;)F", "")]
public static float GetAnimationScale(Context context);
    [RegisterAttribute("getScale", "(Landroid/graphics/Matrix;)F", "")]
public static float GetScale(Matrix matrix);
    [RegisterAttribute("hasZeroScaleAxis", "(Landroid/graphics/Matrix;)Z", "")]
public static bool HasZeroScaleAxis(Matrix matrix);
    [RegisterAttribute("hashFor", "(FFFF)I", "")]
public static int HashFor(float a, float b, float c, float d);
    [RegisterAttribute("isAtLeastVersion", "(IIIIII)Z", "")]
public static bool IsAtLeastVersion(int major, int minor, int patch, int minMajor, int minMinor, int minPatch);
    [RegisterAttribute("isNetworkException", "(Ljava/lang/Throwable;)Z", "")]
public static bool IsNetworkException(Throwable e);
    [RegisterAttribute("renderPath", "(Landroid/graphics/Path;)Landroid/graphics/Bitmap;", "")]
public static Bitmap RenderPath(Path path);
    [RegisterAttribute("resizeBitmapIfNeeded", "(Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;", "")]
public static Bitmap ResizeBitmapIfNeeded(Bitmap bitmap, int width, int height);
    [RegisterAttribute("saveLayerCompat", "(Landroid/graphics/Canvas;Landroid/graphics/RectF;Landroid/graphics/Paint;)V", "")]
public static void SaveLayerCompat(Canvas canvas, RectF rect, Paint paint);
    [RegisterAttribute("saveLayerCompat", "(Landroid/graphics/Canvas;Landroid/graphics/RectF;Landroid/graphics/Paint;I)V", "")]
public static void SaveLayerCompat(Canvas canvas, RectF rect, Paint paint, int flag);
}
[RegisterAttribute("com/airbnb/lottie/value/SimpleLottieValueCallback", "", "Com.Airbnb.Lottie.Value.ISimpleLottieValueCallbackInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Com.Airbnb.Lottie.Value.ISimpleLottieValueCallback {
    [RegisterAttribute("getValue", "(Lcom/airbnb/lottie/value/LottieFrameInfo;)Ljava/lang/Object;", "GetGetValue_Lcom_airbnb_lottie_value_LottieFrameInfo_Handler:Com.Airbnb.Lottie.Value.ISimpleLottieValueCallbackInvoker, Lottie.Android")]
public abstract virtual Object GetValue(LottieFrameInfo frameInfo);
}
[RegisterAttribute("com/airbnb/lottie/value/SimpleLottieValueCallback")]
internal class Com.Airbnb.Lottie.Value.ISimpleLottieValueCallbackInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_getValue_Lcom_airbnb_lottie_value_LottieFrameInfo_;
    private IntPtr id_getValue_Lcom_airbnb_lottie_value_LottieFrameInfo_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ISimpleLottieValueCallbackInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ISimpleLottieValueCallbackInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static ISimpleLottieValueCallback GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetValue_Lcom_airbnb_lottie_value_LottieFrameInfo_Handler();
    private static IntPtr n_GetValue_Lcom_airbnb_lottie_value_LottieFrameInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_frameInfo);
    public sealed virtual Object GetValue(LottieFrameInfo frameInfo);
}
[RegisterAttribute("com/airbnb/lottie/value/Keyframe")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Com.Airbnb.Lottie.Value.Keyframe : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getEndProgress;
    private static Delegate cb_getEndValueFloat;
    private static Delegate cb_getEndValueInt;
    private static Delegate cb_isStatic;
    private static Delegate cb_getStartProgress;
    private static Delegate cb_getStartValueFloat;
    private static Delegate cb_getStartValueInt;
    private static Delegate cb_containsProgress_F;
    [RegisterAttribute("endFrame")]
public Float EndFrame { get; public set; }
    [RegisterAttribute("endValue")]
public Object EndValue { get; public set; }
    [RegisterAttribute("interpolator")]
public IInterpolator Interpolator { get; public set; }
    [RegisterAttribute("pathCp1")]
public PointF PathCp1 { get; public set; }
    [RegisterAttribute("pathCp2")]
public PointF PathCp2 { get; public set; }
    [RegisterAttribute("startFrame")]
public float StartFrame { get; public set; }
    [RegisterAttribute("startValue")]
public Object StartValue { get; public set; }
    [RegisterAttribute("xInterpolator")]
public IInterpolator XInterpolator { get; public set; }
    [RegisterAttribute("yInterpolator")]
public IInterpolator YInterpolator { get; public set; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public float EndProgress { get; }
    public float EndValueFloat { get; }
    public int EndValueInt { get; }
    public bool IsStatic { get; }
    public float StartProgress { get; }
    public float StartValueFloat { get; }
    public int StartValueInt { get; }
    protected Keyframe(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/LottieComposition;Ljava/lang/Object;Ljava/lang/Object;Landroid/view/animation/Interpolator;Landroid/view/animation/Interpolator;Landroid/view/animation/Interpolator;FLjava/lang/Float;)V", "")]
protected Keyframe(LottieComposition composition, Object startValue, Object endValue, IInterpolator interpolator, IInterpolator xInterpolator, IInterpolator yInterpolator, float startFrame, Float endFrame);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/LottieComposition;Ljava/lang/Object;Ljava/lang/Object;Landroid/view/animation/Interpolator;Landroid/view/animation/Interpolator;FLjava/lang/Float;)V", "")]
public Keyframe(LottieComposition composition, Object startValue, Object endValue, IInterpolator xInterpolator, IInterpolator yInterpolator, float startFrame, Float endFrame);
    [RegisterAttribute(".ctor", "(Lcom/airbnb/lottie/LottieComposition;Ljava/lang/Object;Ljava/lang/Object;Landroid/view/animation/Interpolator;FLjava/lang/Float;)V", "")]
public Keyframe(LottieComposition composition, Object startValue, Object endValue, IInterpolator interpolator, float startFrame, Float endFrame);
    [RegisterAttribute(".ctor", "(Ljava/lang/Object;)V", "")]
public Keyframe(Object value);
    private static Keyframe();
    public Float get_EndFrame();
    public void set_EndFrame(Float value);
    public Object get_EndValue();
    public void set_EndValue(Object value);
    public IInterpolator get_Interpolator();
    public void set_Interpolator(IInterpolator value);
    public PointF get_PathCp1();
    public void set_PathCp1(PointF value);
    public PointF get_PathCp2();
    public void set_PathCp2(PointF value);
    public float get_StartFrame();
    public void set_StartFrame(float value);
    public Object get_StartValue();
    public void set_StartValue(Object value);
    public IInterpolator get_XInterpolator();
    public void set_XInterpolator(IInterpolator value);
    public IInterpolator get_YInterpolator();
    public void set_YInterpolator(IInterpolator value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetEndProgressHandler();
    private static float n_GetEndProgress(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getEndProgress", "()F", "GetGetEndProgressHandler")]
public virtual float get_EndProgress();
    private static Delegate GetGetEndValueFloatHandler();
    private static float n_GetEndValueFloat(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getEndValueFloat", "()F", "GetGetEndValueFloatHandler")]
public virtual float get_EndValueFloat();
    private static Delegate GetGetEndValueIntHandler();
    private static int n_GetEndValueInt(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getEndValueInt", "()I", "GetGetEndValueIntHandler")]
public virtual int get_EndValueInt();
    private static Delegate GetIsStaticHandler();
    private static bool n_IsStatic(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isStatic", "()Z", "GetIsStaticHandler")]
public virtual bool get_IsStatic();
    private static Delegate GetGetStartProgressHandler();
    private static float n_GetStartProgress(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getStartProgress", "()F", "GetGetStartProgressHandler")]
public virtual float get_StartProgress();
    private static Delegate GetGetStartValueFloatHandler();
    private static float n_GetStartValueFloat(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getStartValueFloat", "()F", "GetGetStartValueFloatHandler")]
public virtual float get_StartValueFloat();
    private static Delegate GetGetStartValueIntHandler();
    private static int n_GetStartValueInt(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getStartValueInt", "()I", "GetGetStartValueIntHandler")]
public virtual int get_StartValueInt();
    private static Delegate GetContainsProgress_FHandler();
    private static bool n_ContainsProgress_F(IntPtr jnienv, IntPtr native__this, float progress);
    [RegisterAttribute("containsProgress", "(F)Z", "GetContainsProgress_FHandler")]
public virtual bool ContainsProgress(float progress);
}
[RegisterAttribute("com/airbnb/lottie/value/LottieFrameInfo")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Com.Airbnb.Lottie.Value.LottieFrameInfo : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getEndFrame;
    private static Delegate cb_getEndValue;
    private static Delegate cb_getInterpolatedKeyframeProgress;
    private static Delegate cb_getLinearKeyframeProgress;
    private static Delegate cb_getOverallProgress;
    private static Delegate cb_getStartFrame;
    private static Delegate cb_getStartValue;
    private static Delegate cb_set_FFLjava_lang_Object_Ljava_lang_Object_FFF;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public float EndFrame { get; }
    public Object EndValue { get; }
    public float InterpolatedKeyframeProgress { get; }
    public float LinearKeyframeProgress { get; }
    public float OverallProgress { get; }
    public float StartFrame { get; }
    public Object StartValue { get; }
    protected LottieFrameInfo(IntPtr javaReference, JniHandleOwnership transfer);
    private static LottieFrameInfo();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetEndFrameHandler();
    private static float n_GetEndFrame(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getEndFrame", "()F", "GetGetEndFrameHandler")]
public virtual float get_EndFrame();
    private static Delegate GetGetEndValueHandler();
    private static IntPtr n_GetEndValue(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getEndValue", "()Ljava/lang/Object;", "GetGetEndValueHandler")]
public virtual Object get_EndValue();
    private static Delegate GetGetInterpolatedKeyframeProgressHandler();
    private static float n_GetInterpolatedKeyframeProgress(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getInterpolatedKeyframeProgress", "()F", "GetGetInterpolatedKeyframeProgressHandler")]
public virtual float get_InterpolatedKeyframeProgress();
    private static Delegate GetGetLinearKeyframeProgressHandler();
    private static float n_GetLinearKeyframeProgress(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLinearKeyframeProgress", "()F", "GetGetLinearKeyframeProgressHandler")]
public virtual float get_LinearKeyframeProgress();
    private static Delegate GetGetOverallProgressHandler();
    private static float n_GetOverallProgress(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getOverallProgress", "()F", "GetGetOverallProgressHandler")]
public virtual float get_OverallProgress();
    private static Delegate GetGetStartFrameHandler();
    private static float n_GetStartFrame(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getStartFrame", "()F", "GetGetStartFrameHandler")]
public virtual float get_StartFrame();
    private static Delegate GetGetStartValueHandler();
    private static IntPtr n_GetStartValue(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getStartValue", "()Ljava/lang/Object;", "GetGetStartValueHandler")]
public virtual Object get_StartValue();
    private static Delegate GetSet_FFLjava_lang_Object_Ljava_lang_Object_FFFHandler();
    private static IntPtr n_Set_FFLjava_lang_Object_Ljava_lang_Object_FFF(IntPtr jnienv, IntPtr native__this, float startFrame, float endFrame, IntPtr native_startValue, IntPtr native_endValue, float linearKeyframeProgress, float interpolatedKeyframeProgress, float overallProgress);
    [RegisterAttribute("set", "(FFLjava/lang/Object;Ljava/lang/Object;FFF)Lcom/airbnb/lottie/value/LottieFrameInfo;", "GetSet_FFLjava_lang_Object_Ljava_lang_Object_FFFHandler")]
public virtual LottieFrameInfo Set(float startFrame, float endFrame, Object startValue, Object endValue, float linearKeyframeProgress, float interpolatedKeyframeProgress, float overallProgress);
}
[RegisterAttribute("com/airbnb/lottie/value/LottieInterpolatedFloatValue")]
public class Com.Airbnb.Lottie.Value.LottieInterpolatedFloatValue : LottieInterpolatedValue {
    private static JniPeerMembers _members;
    private static Delegate cb_getValue_Lcom_airbnb_lottie_value_LottieFrameInfo_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected LottieInterpolatedFloatValue(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/Float;Ljava/lang/Float;)V", "")]
public LottieInterpolatedFloatValue(Float startValue, Float endValue);
    [RegisterAttribute(".ctor", "(Ljava/lang/Float;Ljava/lang/Float;Landroid/view/animation/Interpolator;)V", "")]
public LottieInterpolatedFloatValue(Float startValue, Float endValue, IInterpolator interpolator);
    private static LottieInterpolatedFloatValue();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetValue_Lcom_airbnb_lottie_value_LottieFrameInfo_Handler();
    private static IntPtr n_GetValue_Lcom_airbnb_lottie_value_LottieFrameInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("getValue", "(Lcom/airbnb/lottie/value/LottieFrameInfo;)Ljava/lang/Object;", "GetGetValue_Lcom_airbnb_lottie_value_LottieFrameInfo_Handler")]
public virtual Object GetValue(LottieFrameInfo p0);
}
[RegisterAttribute("com/airbnb/lottie/value/LottieInterpolatedIntegerValue")]
public class Com.Airbnb.Lottie.Value.LottieInterpolatedIntegerValue : LottieInterpolatedValue {
    private static JniPeerMembers _members;
    private static Delegate cb_getValue_Lcom_airbnb_lottie_value_LottieFrameInfo_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected LottieInterpolatedIntegerValue(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/Integer;Ljava/lang/Integer;)V", "")]
public LottieInterpolatedIntegerValue(Integer startValue, Integer endValue);
    [RegisterAttribute(".ctor", "(Ljava/lang/Integer;Ljava/lang/Integer;Landroid/view/animation/Interpolator;)V", "")]
public LottieInterpolatedIntegerValue(Integer startValue, Integer endValue, IInterpolator interpolator);
    private static LottieInterpolatedIntegerValue();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetValue_Lcom_airbnb_lottie_value_LottieFrameInfo_Handler();
    private static IntPtr n_GetValue_Lcom_airbnb_lottie_value_LottieFrameInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("getValue", "(Lcom/airbnb/lottie/value/LottieFrameInfo;)Ljava/lang/Object;", "GetGetValue_Lcom_airbnb_lottie_value_LottieFrameInfo_Handler")]
public virtual Object GetValue(LottieFrameInfo p0);
}
[RegisterAttribute("com/airbnb/lottie/value/LottieInterpolatedPointValue")]
public class Com.Airbnb.Lottie.Value.LottieInterpolatedPointValue : LottieInterpolatedValue {
    private static JniPeerMembers _members;
    private static Delegate cb_getValue_Lcom_airbnb_lottie_value_LottieFrameInfo_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected LottieInterpolatedPointValue(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/graphics/PointF;Landroid/graphics/PointF;)V", "")]
public LottieInterpolatedPointValue(PointF startValue, PointF endValue);
    [RegisterAttribute(".ctor", "(Landroid/graphics/PointF;Landroid/graphics/PointF;Landroid/view/animation/Interpolator;)V", "")]
public LottieInterpolatedPointValue(PointF startValue, PointF endValue, IInterpolator interpolator);
    private static LottieInterpolatedPointValue();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetValue_Lcom_airbnb_lottie_value_LottieFrameInfo_Handler();
    private static IntPtr n_GetValue_Lcom_airbnb_lottie_value_LottieFrameInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("getValue", "(Lcom/airbnb/lottie/value/LottieFrameInfo;)Ljava/lang/Object;", "GetGetValue_Lcom_airbnb_lottie_value_LottieFrameInfo_Handler")]
public virtual Object GetValue(LottieFrameInfo p0);
}
[RegisterAttribute("com/airbnb/lottie/value/LottieInterpolatedValue")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Com.Airbnb.Lottie.Value.LottieInterpolatedValue : LottieValueCallback {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected LottieInterpolatedValue(IntPtr javaReference, JniHandleOwnership transfer);
    private static LottieInterpolatedValue();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("com/airbnb/lottie/value/LottieInterpolatedValue")]
internal class Com.Airbnb.Lottie.Value.LottieInterpolatedValueInvoker : LottieInterpolatedValue {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public LottieInterpolatedValueInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static LottieInterpolatedValueInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("com/airbnb/lottie/value/LottieRelativeFloatValueCallback")]
public class Com.Airbnb.Lottie.Value.LottieRelativeFloatValueCallback : LottieValueCallback {
    private static JniPeerMembers _members;
    private static Delegate cb_getOffset_Lcom_airbnb_lottie_value_LottieFrameInfo_;
    private static Delegate cb_getValue_Lcom_airbnb_lottie_value_LottieFrameInfo_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected LottieRelativeFloatValueCallback(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/Float;)V", "")]
public LottieRelativeFloatValueCallback(Float staticValue);
    private static LottieRelativeFloatValueCallback();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetOffset_Lcom_airbnb_lottie_value_LottieFrameInfo_Handler();
    private static IntPtr n_GetOffset_Lcom_airbnb_lottie_value_LottieFrameInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_frameInfo);
    [RegisterAttribute("getOffset", "(Lcom/airbnb/lottie/value/LottieFrameInfo;)Ljava/lang/Float;", "GetGetOffset_Lcom_airbnb_lottie_value_LottieFrameInfo_Handler")]
public virtual Float GetOffset(LottieFrameInfo frameInfo);
    private static Delegate GetGetValue_Lcom_airbnb_lottie_value_LottieFrameInfo_Handler();
    private static IntPtr n_GetValue_Lcom_airbnb_lottie_value_LottieFrameInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_frameInfo);
    [RegisterAttribute("getValue", "(Lcom/airbnb/lottie/value/LottieFrameInfo;)Ljava/lang/Float;", "GetGetValue_Lcom_airbnb_lottie_value_LottieFrameInfo_Handler")]
public virtual Float GetValue(LottieFrameInfo frameInfo);
}
[RegisterAttribute("com/airbnb/lottie/value/LottieRelativeIntegerValueCallback")]
public class Com.Airbnb.Lottie.Value.LottieRelativeIntegerValueCallback : LottieValueCallback {
    private static JniPeerMembers _members;
    private static Delegate cb_getOffset_Lcom_airbnb_lottie_value_LottieFrameInfo_;
    private static Delegate cb_getValue_Lcom_airbnb_lottie_value_LottieFrameInfo_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected LottieRelativeIntegerValueCallback(IntPtr javaReference, JniHandleOwnership transfer);
    private static LottieRelativeIntegerValueCallback();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetOffset_Lcom_airbnb_lottie_value_LottieFrameInfo_Handler();
    private static IntPtr n_GetOffset_Lcom_airbnb_lottie_value_LottieFrameInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_frameInfo);
    [RegisterAttribute("getOffset", "(Lcom/airbnb/lottie/value/LottieFrameInfo;)Ljava/lang/Integer;", "GetGetOffset_Lcom_airbnb_lottie_value_LottieFrameInfo_Handler")]
public virtual Integer GetOffset(LottieFrameInfo frameInfo);
    private static Delegate GetGetValue_Lcom_airbnb_lottie_value_LottieFrameInfo_Handler();
    private static IntPtr n_GetValue_Lcom_airbnb_lottie_value_LottieFrameInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_frameInfo);
    [RegisterAttribute("getValue", "(Lcom/airbnb/lottie/value/LottieFrameInfo;)Ljava/lang/Integer;", "GetGetValue_Lcom_airbnb_lottie_value_LottieFrameInfo_Handler")]
public virtual Integer GetValue(LottieFrameInfo frameInfo);
}
[RegisterAttribute("com/airbnb/lottie/value/LottieRelativePointValueCallback")]
public class Com.Airbnb.Lottie.Value.LottieRelativePointValueCallback : LottieValueCallback {
    private static JniPeerMembers _members;
    private static Delegate cb_getOffset_Lcom_airbnb_lottie_value_LottieFrameInfo_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected LottieRelativePointValueCallback(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/graphics/PointF;)V", "")]
public LottieRelativePointValueCallback(PointF staticValue);
    private static LottieRelativePointValueCallback();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetOffset_Lcom_airbnb_lottie_value_LottieFrameInfo_Handler();
    private static IntPtr n_GetOffset_Lcom_airbnb_lottie_value_LottieFrameInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_frameInfo);
    [RegisterAttribute("getOffset", "(Lcom/airbnb/lottie/value/LottieFrameInfo;)Landroid/graphics/PointF;", "GetGetOffset_Lcom_airbnb_lottie_value_LottieFrameInfo_Handler")]
public virtual PointF GetOffset(LottieFrameInfo frameInfo);
    [RegisterAttribute("getValue", "(Lcom/airbnb/lottie/value/LottieFrameInfo;)Landroid/graphics/PointF;", "")]
public PointF GetValue(LottieFrameInfo frameInfo);
}
[RegisterAttribute("com/airbnb/lottie/value/LottieValueCallback")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Com.Airbnb.Lottie.Value.LottieValueCallback : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getValue_Lcom_airbnb_lottie_value_LottieFrameInfo_;
    [RegisterAttribute("value")]
protected Object Value { get; protected set; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected LottieValueCallback(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/Object;)V", "")]
public LottieValueCallback(Object staticValue);
    private static LottieValueCallback();
    protected Object get_Value();
    protected void set_Value(Object value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetValue_Lcom_airbnb_lottie_value_LottieFrameInfo_Handler();
    private static IntPtr n_GetValue_Lcom_airbnb_lottie_value_LottieFrameInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_frameInfo);
    [RegisterAttribute("getValue", "(Lcom/airbnb/lottie/value/LottieFrameInfo;)Ljava/lang/Object;", "GetGetValue_Lcom_airbnb_lottie_value_LottieFrameInfo_Handler")]
public virtual Object GetValue(LottieFrameInfo frameInfo);
    [RegisterAttribute("getValueInternal", "(FFLjava/lang/Object;Ljava/lang/Object;FFF)Ljava/lang/Object;", "")]
public Object GetValueInternal(float startFrame, float endFrame, Object startValue, Object endValue, float linearKeyframeProgress, float interpolatedKeyframeProgress, float overallProgress);
    [RegisterAttribute("setValue", "(Ljava/lang/Object;)V", "")]
public void SetValue(Object value);
}
[RegisterAttribute("com/airbnb/lottie/value/ScaleXY")]
public class Com.Airbnb.Lottie.Value.ScaleXY : Object {
    private static JniPeerMembers _members;
    private static Delegate cb_getScaleX;
    private static Delegate cb_getScaleY;
    private static Delegate cb_equals_FF;
    private static Delegate cb_set_FF;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public float ScaleX { get; }
    public float ScaleY { get; }
    protected ScaleXY(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(FF)V", "")]
public ScaleXY(float sx, float sy);
    private static ScaleXY();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetScaleXHandler();
    private static float n_GetScaleX(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getScaleX", "()F", "GetGetScaleXHandler")]
public virtual float get_ScaleX();
    private static Delegate GetGetScaleYHandler();
    private static float n_GetScaleY(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getScaleY", "()F", "GetGetScaleYHandler")]
public virtual float get_ScaleY();
    private static Delegate GetEquals_FFHandler();
    private static bool n_Equals_FF(IntPtr jnienv, IntPtr native__this, float scaleX, float scaleY);
    [RegisterAttribute("equals", "(FF)Z", "GetEquals_FFHandler")]
public virtual bool Equals(float scaleX, float scaleY);
    private static Delegate GetSet_FFHandler();
    private static void n_Set_FF(IntPtr jnienv, IntPtr native__this, float scaleX, float scaleY);
    [RegisterAttribute("set", "(FF)V", "GetSet_FFHandler")]
public virtual void Set(float scaleX, float scaleY);
}
internal class Java.Interop.__TypeRegistrations : object {
    public static void RegisterPackages();
    private static Type Lookup(String[] mappings, string javaType);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[ConditionalAttribute("NEVER")]
[AttributeUsageAttribute("751")]
internal class System.Runtime.Versioning.SupportedOSPlatformAttribute : Attribute {
    public SupportedOSPlatformAttribute(string platformName);
}
