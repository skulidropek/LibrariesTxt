[ProtocolAttribute]
[ProtocolMemberAttribute]
public interface Airbnb.Lottie.ILOTColorValueDelegate {
    [NullableContextAttribute("1")]
[BindingImplAttribute]
[ExportAttribute("colorForFrame:startKeyframe:endKeyframe:interpolatedProgress:startColor:endColor:currentColor:")]
[PreserveAttribute]
public abstract virtual CGColor StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress, CGColor startColor, CGColor endColor, CGColor interpolatedColor);
}
[ProtocolAttribute]
[ProtocolMemberAttribute]
[ProtocolMemberAttribute]
public interface Airbnb.Lottie.ILOTImageCache {
    [NullableContextAttribute("1")]
[BindingImplAttribute]
[ExportAttribute("imageForKey:")]
[PreserveAttribute]
public abstract virtual UIImage ImageForKey(string key);
    [NullableContextAttribute("1")]
[BindingImplAttribute]
[ExportAttribute("setImage:forKey:")]
[PreserveAttribute]
public abstract virtual void SetImage(UIImage image, string key);
}
[ProtocolAttribute]
[ProtocolMemberAttribute]
public interface Airbnb.Lottie.ILOTNumberValueDelegate {
    [BindingImplAttribute]
[ExportAttribute("floatValueForFrame:startKeyframe:endKeyframe:interpolatedProgress:startValue:endValue:currentValue:")]
[PreserveAttribute]
public abstract virtual nfloat StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress, nfloat startValue, nfloat endValue, nfloat interpolatedValue);
}
[ProtocolAttribute]
[ProtocolMemberAttribute]
public interface Airbnb.Lottie.ILOTPathValueDelegate {
    [NullableContextAttribute("1")]
[BindingImplAttribute]
[ExportAttribute("pathForFrame:startKeyframe:endKeyframe:interpolatedProgress:")]
[PreserveAttribute]
public abstract virtual CGPath StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress);
}
[ProtocolAttribute]
[ProtocolMemberAttribute]
public interface Airbnb.Lottie.ILOTPointValueDelegate {
    [BindingImplAttribute]
[ExportAttribute("pointForFrame:startKeyframe:endKeyframe:interpolatedProgress:startPoint:endPoint:currentPoint:")]
[PreserveAttribute]
public abstract virtual CGPoint StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress, CGPoint startPoint, CGPoint endPoint, CGPoint interpolatedPoint);
}
[ProtocolAttribute]
[ProtocolMemberAttribute]
public interface Airbnb.Lottie.ILOTSizeValueDelegate {
    [BindingImplAttribute]
[ExportAttribute("sizeForFrame:startKeyframe:endKeyframe:interpolatedProgress:startSize:endSize:currentSize:")]
[PreserveAttribute]
public abstract virtual CGSize StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress, CGSize startSize, CGSize endSize, CGSize interpolatedSize);
}
[ProtocolAttribute]
public interface Airbnb.Lottie.ILOTValueDelegate {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("LOTAnimatedControl", "True")]
public class Airbnb.Lottie.LOTAnimatedControl : UIControl {
    [BindingImplAttribute]
private static IntPtr class_ptr;
    [NullableAttribute("2")]
[BindingImplAttribute]
private object __mt_AnimationComp_var;
    public IntPtr ClassHandle { get; }
    [NullableAttribute("2")]
[BindingImplAttribute]
public LOTComposition AnimationComp { get; public set; }
    [BindingImplAttribute]
public LOTAnimationView AnimationView { get; }
    public static LOTAnimatedControlAppearance Appearance { get; }
    [BindingImplAttribute]
[DesignatedInitializerAttribute]
[EditorBrowsableAttribute("2")]
[ExportAttribute("initWithCoder:")]
public LOTAnimatedControl(NSCoder coder);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTAnimatedControl(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTAnimatedControl(IntPtr handle);
    private static LOTAnimatedControl();
    public virtual IntPtr get_ClassHandle();
    [ExportAttribute("setLayerName:forState:")]
[BindingImplAttribute]
public virtual void SetLayerName(string layerName, UIControlState state);
    [NullableContextAttribute("2")]
[ExportAttribute]
public virtual LOTComposition get_AnimationComp();
    [NullableContextAttribute("2")]
[ExportAttribute]
public virtual void set_AnimationComp(LOTComposition value);
    [ExportAttribute("animationView")]
public virtual LOTAnimationView get_AnimationView();
    [BindingImplAttribute]
protected virtual void Dispose(bool disposing);
    public static LOTAnimatedControlAppearance get_Appearance();
    public static LOTAnimatedControlAppearance GetAppearance();
    public static LOTAnimatedControlAppearance AppearanceWhenContainedIn(Type[] containers);
    public static LOTAnimatedControlAppearance GetAppearance(UITraitCollection traits);
    public static LOTAnimatedControlAppearance GetAppearance(UITraitCollection traits, Type[] containers);
    public static LOTAnimatedControlAppearance GetAppearance(UITraitCollection traits);
    public static LOTAnimatedControlAppearance GetAppearance(UITraitCollection traits, Type[] containers);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("LOTAnimatedSwitch", "True")]
public class Airbnb.Lottie.LOTAnimatedSwitch : LOTAnimatedControl {
    [BindingImplAttribute]
private static IntPtr class_ptr;
    public IntPtr ClassHandle { get; }
    [BindingImplAttribute]
public bool InteractiveGesture { get; public set; }
    [BindingImplAttribute]
public bool On { get; public set; }
    public static LOTAnimatedSwitchAppearance Appearance { get; }
    [BindingImplAttribute]
[DesignatedInitializerAttribute]
[EditorBrowsableAttribute("2")]
[ExportAttribute("initWithCoder:")]
public LOTAnimatedSwitch(NSCoder coder);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTAnimatedSwitch(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTAnimatedSwitch(IntPtr handle);
    private static LOTAnimatedSwitch();
    public virtual IntPtr get_ClassHandle();
    [ExportAttribute("setOn:animated:")]
[BindingImplAttribute]
public virtual void SetOn(bool on, bool animated);
    [ExportAttribute("setProgressRangeForOffState:toProgress:")]
[BindingImplAttribute]
public virtual void SetProgressRangeForOffState(nfloat fromProgress, nfloat toProgress);
    [ExportAttribute("setProgressRangeForOnState:toProgress:")]
[BindingImplAttribute]
public virtual void SetProgressRangeForOnState(nfloat fromProgress, nfloat toProgress);
    [ExportAttribute("switchNamed:")]
[BindingImplAttribute]
public static LOTAnimatedSwitch SwitchNamed(string toggleName);
    [ExportAttribute("switchNamed:inBundle:")]
[BindingImplAttribute]
public static LOTAnimatedSwitch SwitchNamed(string toggleName, NSBundle bundle);
    [ExportAttribute("interactiveGesture")]
public virtual bool get_InteractiveGesture();
    [ExportAttribute("setInteractiveGesture:")]
public virtual void set_InteractiveGesture(bool value);
    [ExportAttribute("isOn")]
public virtual bool get_On();
    [ExportAttribute("setOn:")]
public virtual void set_On(bool value);
    public static LOTAnimatedSwitchAppearance get_Appearance();
    public static LOTAnimatedSwitchAppearance GetAppearance();
    public static LOTAnimatedSwitchAppearance AppearanceWhenContainedIn(Type[] containers);
    public static LOTAnimatedSwitchAppearance GetAppearance(UITraitCollection traits);
    public static LOTAnimatedSwitchAppearance GetAppearance(UITraitCollection traits, Type[] containers);
    public static LOTAnimatedSwitchAppearance GetAppearance(UITraitCollection traits);
    public static LOTAnimatedSwitchAppearance GetAppearance(UITraitCollection traits, Type[] containers);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("LOTAnimationCache", "True")]
public class Airbnb.Lottie.LOTAnimationCache : NSObject {
    [BindingImplAttribute]
private static IntPtr class_ptr;
    public IntPtr ClassHandle { get; }
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTAnimationCache(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTAnimationCache(IntPtr handle);
    private static LOTAnimationCache();
    public virtual IntPtr get_ClassHandle();
    [ExportAttribute("addAnimation:forKey:")]
[BindingImplAttribute]
public virtual void AddAnimation(LOTComposition animation, string key);
    [ExportAttribute("animationForKey:")]
[BindingImplAttribute]
public virtual LOTComposition AnimationForKey(string key);
    [ExportAttribute("clearCache")]
[BindingImplAttribute]
public virtual void ClearCache();
    [ExportAttribute("disableCaching")]
[BindingImplAttribute]
public virtual void DisableCaching();
    [ExportAttribute("removeAnimationForKey:")]
[BindingImplAttribute]
public virtual void RemoveAnimationForKey(string key);
    [ExportAttribute("sharedCache")]
[BindingImplAttribute]
public static LOTAnimationCache SharedCache();
}
public class Airbnb.Lottie.LOTAnimationCompletionBlock : MulticastDelegate {
    public LOTAnimationCompletionBlock(object object, IntPtr method);
    public virtual void Invoke(bool animationFinished);
    public virtual IAsyncResult BeginInvoke(bool animationFinished, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[RegisterAttribute("LOTAnimationTransitionController", "True")]
public class Airbnb.Lottie.LOTAnimationTransitionController : NSObject {
    [BindingImplAttribute]
private static IntPtr class_ptr;
    public IntPtr ClassHandle { get; }
    [NullableContextAttribute("1")]
[BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTAnimationTransitionController(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTAnimationTransitionController(IntPtr handle);
    [NullableContextAttribute("2")]
[ExportAttribute("initWithAnimationNamed:fromLayerNamed:toLayerNamed:applyAnimationTransform:")]
[BindingImplAttribute]
public LOTAnimationTransitionController(string animation, string fromLayer, string toLayer, bool applyAnimationTransform);
    [NullableContextAttribute("1")]
[ExportAttribute("initWithAnimationNamed:fromLayerNamed:toLayerNamed:applyAnimationTransform:inBundle:")]
[BindingImplAttribute]
public LOTAnimationTransitionController(string animation, string fromLayer, string toLayer, bool applyAnimationTransform, NSBundle bundle);
    private static LOTAnimationTransitionController();
    public virtual IntPtr get_ClassHandle();
    [NullableContextAttribute("1")]
[ExportAttribute("animateTransition:")]
[IntroducedAttribute]
[BindingImplAttribute]
[PreserveAttribute]
public virtual void AnimateTransition(IUIViewControllerContextTransitioning transitionContext);
    [NullableContextAttribute("1")]
[ExportAttribute("transitionDuration:")]
[IntroducedAttribute]
[BindingImplAttribute]
[PreserveAttribute]
public virtual double TransitionDuration(IUIViewControllerContextTransitioning transitionContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("LOTAnimationView", "True")]
public class Airbnb.Lottie.LOTAnimationView : UIView {
    [BindingImplAttribute]
private static IntPtr class_ptr;
    public IntPtr ClassHandle { get; }
    [BindingImplAttribute]
public nfloat AnimationDuration { get; }
    [BindingImplAttribute]
public nfloat AnimationProgress { get; public set; }
    [BindingImplAttribute]
public nfloat AnimationSpeed { get; public set; }
    [BindingImplAttribute]
public bool AutoReverseAnimation { get; public set; }
    [BindingImplAttribute]
public bool CacheEnable { get; public set; }
    [NullableAttribute("2")]
[BindingImplAttribute]
public LOTAnimationCompletionBlock CompletionBlock { get; public set; }
    [BindingImplAttribute]
public bool IsAnimationPlaying { get; }
    [BindingImplAttribute]
public bool LoopAnimation { get; public set; }
    [NullableAttribute("2")]
[BindingImplAttribute]
public LOTComposition SceneModel { get; public set; }
    [BindingImplAttribute]
public bool ShouldRasterizeWhenIdle { get; public set; }
    public static LOTAnimationViewAppearance Appearance { get; }
    [BindingImplAttribute]
[DesignatedInitializerAttribute]
[EditorBrowsableAttribute("2")]
[ExportAttribute("initWithCoder:")]
public LOTAnimationView(NSCoder coder);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTAnimationView(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTAnimationView(IntPtr handle);
    [NullableContextAttribute("2")]
[ExportAttribute("initWithModel:inBundle:")]
[BindingImplAttribute]
public LOTAnimationView(LOTComposition model, NSBundle bundle);
    [ExportAttribute("initWithContentsOfURL:")]
[BindingImplAttribute]
public LOTAnimationView(NSUrl url);
    private static LOTAnimationView();
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Airbnb.Lottie.LOTAnimationView/<PlayAsync>d__0")]
public Task`1<bool> PlayAsync();
    [NullableContextAttribute("0")]
public Task`1<bool> PlayToProgressAsync(nfloat toProgress);
    [NullableContextAttribute("0")]
public Task`1<bool> PlayFromProgressAsync(nfloat fromStartProgress, nfloat toEndProgress);
    [NullableContextAttribute("0")]
public Task`1<bool> PlayToFrameAsync(NSNumber toFrame);
    [NullableContextAttribute("0")]
public Task`1<bool> PlayFromFrameAsync(NSNumber fromStartFrame, NSNumber toEndFrame);
    public virtual IntPtr get_ClassHandle();
    [ExportAttribute("addSubview:toKeypathLayer:")]
[BindingImplAttribute]
public virtual void AddSubview(UIView view, LOTKeypath keypath);
    [ExportAttribute("addSubview:toLayerNamed:applyTransform:")]
[BindingImplAttribute]
public virtual void AddSubview(UIView view, string layer, bool applyTransform);
    [ExportAttribute("animationFromJSON:")]
[BindingImplAttribute]
public static LOTAnimationView AnimationFromJSON(NSDictionary animationJSON);
    [NullableContextAttribute("2")]
[ExportAttribute("animationFromJSON:inBundle:")]
[BindingImplAttribute]
public static LOTAnimationView AnimationFromJSON(NSDictionary animationJSON, NSBundle bundle);
    [ExportAttribute("animationNamed:")]
[BindingImplAttribute]
public static LOTAnimationView AnimationNamed(string animationName);
    [ExportAttribute("animationNamed:inBundle:")]
[BindingImplAttribute]
public static LOTAnimationView AnimationNamed(string animationName, NSBundle bundle);
    [ExportAttribute("animationWithFilePath:")]
[BindingImplAttribute]
public static LOTAnimationView AnimationWithFilePath(string filePath);
    [ExportAttribute("convertPoint:fromKeypathLayer:")]
[BindingImplAttribute]
public virtual CGPoint ConvertPointFromKeypath(CGPoint point, LOTKeypath keypath);
    [ExportAttribute("convertPoint:toKeypathLayer:")]
[BindingImplAttribute]
public virtual CGPoint ConvertPointToKeypath(CGPoint point, LOTKeypath keypath);
    [NullableContextAttribute("2")]
[ExportAttribute("convertRect:toLayerNamed:")]
[BindingImplAttribute]
public virtual CGRect ConvertRect(CGRect rect, string layerName);
    [ExportAttribute("convertRect:fromKeypathLayer:")]
[BindingImplAttribute]
public virtual CGRect ConvertRectFromKeypath(CGRect rect, LOTKeypath keypath);
    [ExportAttribute("convertRect:toKeypathLayer:")]
[BindingImplAttribute]
public virtual CGRect ConvertRectToKeypath(CGRect rect, LOTKeypath keypath);
    [ExportAttribute("forceDrawingUpdate")]
[BindingImplAttribute]
public virtual void ForceDrawingUpdate();
    [ExportAttribute("keysForKeyPath:")]
[BindingImplAttribute]
public virtual LOTKeypath[] KeysForKeyPath(LOTKeypath keypath);
    [ExportAttribute("logHierarchyKeypaths")]
[BindingImplAttribute]
public virtual void LogHierarchyKeypaths();
    [ExportAttribute("maskSubview:toKeypathLayer:")]
[BindingImplAttribute]
public virtual void MaskSubview(UIView view, LOTKeypath keypath);
    [ExportAttribute("pause")]
[BindingImplAttribute]
public virtual void Pause();
    [ExportAttribute("play")]
[BindingImplAttribute]
public virtual void Play();
    [ExportAttribute("playFromFrame:toFrame:withCompletion:")]
[BindingImplAttribute]
public virtual void PlayFromFrame(NSNumber fromStartFrame, NSNumber toEndFrame, LOTAnimationCompletionBlock completion);
    [NullableContextAttribute("2")]
[ExportAttribute("playFromProgress:toProgress:withCompletion:")]
[BindingImplAttribute]
public virtual void PlayFromProgress(nfloat fromStartProgress, nfloat toEndProgress, LOTAnimationCompletionBlock completion);
    [ExportAttribute("playToFrame:withCompletion:")]
[BindingImplAttribute]
public virtual void PlayToFrame(NSNumber toFrame, LOTAnimationCompletionBlock completion);
    [NullableContextAttribute("2")]
[ExportAttribute("playToProgress:withCompletion:")]
[BindingImplAttribute]
public virtual void PlayToProgress(nfloat toProgress, LOTAnimationCompletionBlock completion);
    [NullableContextAttribute("2")]
[ExportAttribute("playWithCompletion:")]
[BindingImplAttribute]
public virtual void PlayWithCompletion(LOTAnimationCompletionBlock completion);
    [ExportAttribute("setAnimationNamed:")]
[BindingImplAttribute]
public virtual void SetAnimationNamed(string animationName);
    [ExportAttribute("setProgressWithFrame:")]
[BindingImplAttribute]
public virtual void SetProgressWithFrame(NSNumber currentFrame);
    [ExportAttribute("setValue:forKeypath:atFrame:")]
[BindingImplAttribute]
public virtual void SetValue(NSObject value, string keypath, NSNumber frame);
    [ExportAttribute("setValueDelegate:forKeypath:")]
[BindingImplAttribute]
public virtual void SetValueDelegate(NSObject delegates, LOTKeypath keypath);
    [ExportAttribute("stop")]
[BindingImplAttribute]
public virtual void Stop();
    [ExportAttribute("animationDuration")]
public virtual nfloat get_AnimationDuration();
    [ExportAttribute("animationProgress")]
public virtual nfloat get_AnimationProgress();
    [ExportAttribute("setAnimationProgress:")]
public virtual void set_AnimationProgress(nfloat value);
    [ExportAttribute("animationSpeed")]
public virtual nfloat get_AnimationSpeed();
    [ExportAttribute("setAnimationSpeed:")]
public virtual void set_AnimationSpeed(nfloat value);
    [ExportAttribute("autoReverseAnimation")]
public virtual bool get_AutoReverseAnimation();
    [ExportAttribute("setAutoReverseAnimation:")]
public virtual void set_AutoReverseAnimation(bool value);
    [ExportAttribute("cacheEnable")]
public virtual bool get_CacheEnable();
    [ExportAttribute("setCacheEnable:")]
public virtual void set_CacheEnable(bool value);
    [NullableContextAttribute("2")]
[ExportAttribute]
public virtual LOTAnimationCompletionBlock get_CompletionBlock();
    [NullableContextAttribute("2")]
[ExportAttribute]
public virtual void set_CompletionBlock(LOTAnimationCompletionBlock value);
    [ExportAttribute("isAnimationPlaying")]
public virtual bool get_IsAnimationPlaying();
    [ExportAttribute("loopAnimation")]
public virtual bool get_LoopAnimation();
    [ExportAttribute("setLoopAnimation:")]
public virtual void set_LoopAnimation(bool value);
    [NullableContextAttribute("2")]
[ExportAttribute]
public virtual LOTComposition get_SceneModel();
    [NullableContextAttribute("2")]
[ExportAttribute]
public virtual void set_SceneModel(LOTComposition value);
    [ExportAttribute("shouldRasterizeWhenIdle")]
public virtual bool get_ShouldRasterizeWhenIdle();
    [ExportAttribute("setShouldRasterizeWhenIdle:")]
public virtual void set_ShouldRasterizeWhenIdle(bool value);
    public static LOTAnimationViewAppearance get_Appearance();
    public static LOTAnimationViewAppearance GetAppearance();
    public static LOTAnimationViewAppearance AppearanceWhenContainedIn(Type[] containers);
    public static LOTAnimationViewAppearance GetAppearance(UITraitCollection traits);
    public static LOTAnimationViewAppearance GetAppearance(UITraitCollection traits, Type[] containers);
    public static LOTAnimationViewAppearance GetAppearance(UITraitCollection traits);
    public static LOTAnimationViewAppearance GetAppearance(UITraitCollection traits, Type[] containers);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("LOTCacheProvider", "True")]
public class Airbnb.Lottie.LOTCacheProvider : NSObject {
    [BindingImplAttribute]
private static IntPtr class_ptr;
    public IntPtr ClassHandle { get; }
    [BindingImplAttribute]
public static LOTImageCache ImageCache { get; public set; }
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTCacheProvider(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTCacheProvider(IntPtr handle);
    private static LOTCacheProvider();
    public virtual IntPtr get_ClassHandle();
    [ExportAttribute("imageCache")]
public static LOTImageCache get_ImageCache();
    [ExportAttribute("setImageCache:")]
public static void set_ImageCache(LOTImageCache value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("LOTColorBlockCallback", "True")]
public class Airbnb.Lottie.LOTColorBlockCallback : NSObject {
    [BindingImplAttribute]
private static IntPtr class_ptr;
    public IntPtr ClassHandle { get; }
    [BindingImplAttribute]
public LOTColorValueCallbackBlock Callback { get; public set; }
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTColorBlockCallback(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTColorBlockCallback(IntPtr handle);
    private static LOTColorBlockCallback();
    public virtual IntPtr get_ClassHandle();
    [ExportAttribute("colorForFrame:startKeyframe:endKeyframe:interpolatedProgress:startColor:endColor:currentColor:")]
[BindingImplAttribute]
public virtual CGColor StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress, CGColor startColor, CGColor endColor, CGColor interpolatedColor);
    [ExportAttribute("withBlock:")]
[BindingImplAttribute]
public static LOTColorBlockCallback WithBlock(LOTColorValueCallbackBlock block);
    [ExportAttribute]
public virtual LOTColorValueCallbackBlock get_Callback();
    [ExportAttribute]
public virtual void set_Callback(LOTColorValueCallbackBlock value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("LOTColorValueCallback", "True")]
public class Airbnb.Lottie.LOTColorValueCallback : NSObject {
    [BindingImplAttribute]
private static IntPtr class_ptr;
    public IntPtr ClassHandle { get; }
    [BindingImplAttribute]
public CGColor ColorValue { get; public set; }
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTColorValueCallback(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTColorValueCallback(IntPtr handle);
    private static LOTColorValueCallback();
    public virtual IntPtr get_ClassHandle();
    [ExportAttribute("colorForFrame:startKeyframe:endKeyframe:interpolatedProgress:startColor:endColor:currentColor:")]
[BindingImplAttribute]
public virtual CGColor StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress, CGColor startColor, CGColor endColor, CGColor interpolatedColor);
    [ExportAttribute("withCGColor:")]
[BindingImplAttribute]
public static LOTColorValueCallback WithCGColor(CGColor color);
    [ExportAttribute]
public virtual CGColor get_ColorValue();
    [ExportAttribute]
public virtual void set_ColorValue(CGColor value);
}
public class Airbnb.Lottie.LOTColorValueCallbackBlock : MulticastDelegate {
    public LOTColorValueCallbackBlock(object object, IntPtr method);
    [NullableContextAttribute("2")]
public virtual IntPtr Invoke(nfloat currentFrame, nfloat startKeyFrame, nfloat endKeyFrame, nfloat interpolatedProgress, CGColor startColor, CGColor endColor, CGColor interpolatedColor);
    public virtual IAsyncResult BeginInvoke(nfloat currentFrame, nfloat startKeyFrame, nfloat endKeyFrame, nfloat interpolatedProgress, CGColor startColor, CGColor endColor, CGColor interpolatedColor, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
[ProtocolAttribute]
[RegisterAttribute("LOTColorValueDelegate", "False")]
[ModelAttribute]
public abstract class Airbnb.Lottie.LOTColorValueDelegate : LOTValueDelegate {
    [NullableContextAttribute("1")]
[BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTColorValueDelegate(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTColorValueDelegate(IntPtr handle);
    [NullableContextAttribute("1")]
[ExportAttribute("colorForFrame:startKeyframe:endKeyframe:interpolatedProgress:startColor:endColor:currentColor:")]
[BindingImplAttribute]
public abstract virtual CGColor StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress, CGColor startColor, CGColor endColor, CGColor interpolatedColor);
}
internal class Airbnb.Lottie.LOTColorValueDelegateWrapper : BaseWrapper {
    [PreserveAttribute]
public LOTColorValueDelegateWrapper(IntPtr handle, bool owns);
    [NullableContextAttribute("1")]
[ExportAttribute("colorForFrame:startKeyframe:endKeyframe:interpolatedProgress:startColor:endColor:currentColor:")]
[BindingImplAttribute]
public sealed virtual CGColor StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress, CGColor startColor, CGColor endColor, CGColor interpolatedColor);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("LOTComposition", "True")]
public class Airbnb.Lottie.LOTComposition : NSObject {
    [BindingImplAttribute]
private static IntPtr class_ptr;
    public IntPtr ClassHandle { get; }
    [BindingImplAttribute]
public NSBundle AssetBundle { get; }
    [BindingImplAttribute]
public string CacheKey { get; public set; }
    [BindingImplAttribute]
public CGRect CompBounds { get; }
    [BindingImplAttribute]
public NSNumber EndFrame { get; }
    [BindingImplAttribute]
public NSNumber Framerate { get; }
    [BindingImplAttribute]
public string RootDirectory { get; public set; }
    [BindingImplAttribute]
public NSNumber StartFrame { get; }
    [BindingImplAttribute]
public double TimeDuration { get; }
    [NullableContextAttribute("1")]
[BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTComposition(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTComposition(IntPtr handle);
    [ExportAttribute("initWithJSON:withAssetBundle:")]
[BindingImplAttribute]
public LOTComposition(NSDictionary jsonDictionary, NSBundle bundle);
    private static LOTComposition();
    public virtual IntPtr get_ClassHandle();
    [NullableContextAttribute("1")]
[ExportAttribute("animationFromJSON:")]
[BindingImplAttribute]
public static LOTComposition AnimationFromJSON(NSDictionary animationJSON);
    [ExportAttribute("animationFromJSON:inBundle:")]
[BindingImplAttribute]
public static LOTComposition AnimationFromJSON(NSDictionary animationJSON, NSBundle bundle);
    [NullableContextAttribute("1")]
[ExportAttribute("animationNamed:")]
[BindingImplAttribute]
public static LOTComposition AnimationNamed(string animationName);
    [NullableContextAttribute("1")]
[ExportAttribute("animationNamed:inBundle:")]
[BindingImplAttribute]
public static LOTComposition AnimationNamed(string animationName, NSBundle bundle);
    [NullableContextAttribute("1")]
[ExportAttribute("animationWithFilePath:")]
[BindingImplAttribute]
public static LOTComposition AnimationWithFilePath(string filePath);
    [ExportAttribute("assetBundle")]
public virtual NSBundle get_AssetBundle();
    [ExportAttribute("cacheKey")]
public virtual string get_CacheKey();
    [ExportAttribute("setCacheKey:")]
public virtual void set_CacheKey(string value);
    [ExportAttribute("compBounds")]
public virtual CGRect get_CompBounds();
    [ExportAttribute("endFrame")]
public virtual NSNumber get_EndFrame();
    [ExportAttribute("framerate")]
public virtual NSNumber get_Framerate();
    [ExportAttribute("rootDirectory")]
public virtual string get_RootDirectory();
    [ExportAttribute("setRootDirectory:")]
public virtual void set_RootDirectory(string value);
    [ExportAttribute("startFrame")]
public virtual NSNumber get_StartFrame();
    [ExportAttribute("timeDuration")]
public virtual double get_TimeDuration();
}
[RegisterAttribute("LOTFloatInterpolatorCallback", "True")]
public class Airbnb.Lottie.LOTFloatInterpolatorCallback : NSObject {
    [BindingImplAttribute]
private static IntPtr class_ptr;
    public IntPtr ClassHandle { get; }
    [BindingImplAttribute]
public nfloat CurrentProgress { get; public set; }
    [BindingImplAttribute]
public nfloat FromFloat { get; public set; }
    [BindingImplAttribute]
public nfloat ToFloat { get; public set; }
    [NullableContextAttribute("1")]
[BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTFloatInterpolatorCallback(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTFloatInterpolatorCallback(IntPtr handle);
    private static LOTFloatInterpolatorCallback();
    public virtual IntPtr get_ClassHandle();
    [ExportAttribute("floatValueForFrame:startKeyframe:endKeyframe:interpolatedProgress:startValue:endValue:currentValue:")]
[BindingImplAttribute]
public virtual nfloat StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress, nfloat startValue, nfloat endValue, nfloat interpolatedValue);
    [NullableContextAttribute("1")]
[ExportAttribute("withFromFloat:toFloat:")]
[BindingImplAttribute]
public static LOTFloatInterpolatorCallback WithFromFloat(nfloat fromFloat, nfloat toFloat);
    [ExportAttribute("currentProgress")]
public virtual nfloat get_CurrentProgress();
    [ExportAttribute("setCurrentProgress:")]
public virtual void set_CurrentProgress(nfloat value);
    [ExportAttribute("fromFloat")]
public virtual nfloat get_FromFloat();
    [ExportAttribute("setFromFloat:")]
public virtual void set_FromFloat(nfloat value);
    [ExportAttribute("toFloat")]
public virtual nfloat get_ToFloat();
    [ExportAttribute("setToFloat:")]
public virtual void set_ToFloat(nfloat value);
}
[ProtocolAttribute]
[RegisterAttribute("LOTImageCache", "False")]
[ModelAttribute]
public abstract class Airbnb.Lottie.LOTImageCache : NSObject {
    [NullableContextAttribute("1")]
[BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTImageCache(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTImageCache(IntPtr handle);
    [NullableContextAttribute("1")]
[ExportAttribute("imageForKey:")]
[BindingImplAttribute]
public abstract virtual UIImage ImageForKey(string key);
    [NullableContextAttribute("1")]
[ExportAttribute("setImage:forKey:")]
[BindingImplAttribute]
public abstract virtual void SetImage(UIImage image, string key);
}
internal class Airbnb.Lottie.LOTImageCacheWrapper : BaseWrapper {
    [PreserveAttribute]
public LOTImageCacheWrapper(IntPtr handle, bool owns);
    [NullableContextAttribute("1")]
[ExportAttribute("imageForKey:")]
[BindingImplAttribute]
public sealed virtual UIImage ImageForKey(string key);
    [NullableContextAttribute("1")]
[ExportAttribute("setImage:forKey:")]
[BindingImplAttribute]
public sealed virtual void SetImage(UIImage image, string key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("LOTKeypath", "True")]
public class Airbnb.Lottie.LOTKeypath : NSObject {
    [BindingImplAttribute]
private static IntPtr class_ptr;
    public IntPtr ClassHandle { get; }
    [BindingImplAttribute]
public string AbsoluteKeypath { get; }
    [BindingImplAttribute]
public string CurrentKey { get; }
    [BindingImplAttribute]
public string CurrentKeyPath { get; }
    [BindingImplAttribute]
public bool EndOfKeypath { get; }
    [BindingImplAttribute]
public bool HasFuzzyWildcard { get; }
    [BindingImplAttribute]
public bool HasWildcard { get; }
    [BindingImplAttribute]
public NSDictionary SearchResults { get; }
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTKeypath(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTKeypath(IntPtr handle);
    private static LOTKeypath();
    public virtual IntPtr get_ClassHandle();
    [ExportAttribute("addSearchResultForCurrentPath:")]
[BindingImplAttribute]
public virtual void AddSearchResultForCurrentPath(NSObject result);
    [ExportAttribute("keypathWithKeys:")]
[BindingImplAttribute]
internal static LOTKeypath KeypathWithKeys(string firstKey, IntPtr varArgs);
    [ExportAttribute("keypathWithString:")]
[BindingImplAttribute]
public static LOTKeypath KeypathWithString(string keypath);
    [ExportAttribute("popKey")]
[BindingImplAttribute]
public virtual void PopKey();
    [ExportAttribute("popToRootKey")]
[BindingImplAttribute]
public virtual void PopToRootKey();
    [ExportAttribute("pushKey:")]
[BindingImplAttribute]
public virtual bool PushKey(string key);
    [ExportAttribute("absoluteKeypath")]
public virtual string get_AbsoluteKeypath();
    [ExportAttribute("currentKey")]
public virtual string get_CurrentKey();
    [ExportAttribute("currentKeyPath")]
public virtual string get_CurrentKeyPath();
    [ExportAttribute("endOfKeypath")]
public virtual bool get_EndOfKeypath();
    [ExportAttribute("hasFuzzyWildcard")]
public virtual bool get_HasFuzzyWildcard();
    [ExportAttribute("hasWildcard")]
public virtual bool get_HasWildcard();
    [ExportAttribute("searchResults")]
public virtual NSDictionary get_SearchResults();
}
[RegisterAttribute("LOTNumberBlockCallback", "True")]
public class Airbnb.Lottie.LOTNumberBlockCallback : NSObject {
    [BindingImplAttribute]
private static IntPtr class_ptr;
    public IntPtr ClassHandle { get; }
    [NullableAttribute("1")]
[BindingImplAttribute]
public LOTNumberValueCallbackBlock Callback { get; public set; }
    [NullableContextAttribute("1")]
[BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTNumberBlockCallback(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTNumberBlockCallback(IntPtr handle);
    private static LOTNumberBlockCallback();
    public virtual IntPtr get_ClassHandle();
    [ExportAttribute("floatValueForFrame:startKeyframe:endKeyframe:interpolatedProgress:startValue:endValue:currentValue:")]
[BindingImplAttribute]
public virtual nfloat StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress, nfloat startValue, nfloat endValue, nfloat interpolatedValue);
    [NullableContextAttribute("1")]
[ExportAttribute("withBlock:")]
[BindingImplAttribute]
public static LOTNumberBlockCallback WithBlock(LOTNumberValueCallbackBlock block);
    [NullableContextAttribute("1")]
[ExportAttribute]
public virtual LOTNumberValueCallbackBlock get_Callback();
    [NullableContextAttribute("1")]
[ExportAttribute]
public virtual void set_Callback(LOTNumberValueCallbackBlock value);
}
[RegisterAttribute("LOTNumberValueCallback", "True")]
public class Airbnb.Lottie.LOTNumberValueCallback : NSObject {
    [BindingImplAttribute]
private static IntPtr class_ptr;
    public IntPtr ClassHandle { get; }
    [BindingImplAttribute]
public nfloat NumberValue { get; public set; }
    [NullableContextAttribute("1")]
[BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTNumberValueCallback(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTNumberValueCallback(IntPtr handle);
    private static LOTNumberValueCallback();
    public virtual IntPtr get_ClassHandle();
    [ExportAttribute("floatValueForFrame:startKeyframe:endKeyframe:interpolatedProgress:startValue:endValue:currentValue:")]
[BindingImplAttribute]
public virtual nfloat StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress, nfloat startValue, nfloat endValue, nfloat interpolatedValue);
    [NullableContextAttribute("1")]
[ExportAttribute("withFloatValue:")]
[BindingImplAttribute]
public static LOTNumberValueCallback WithFloatValue(nfloat numberValue);
    [ExportAttribute("numberValue")]
public virtual nfloat get_NumberValue();
    [ExportAttribute("setNumberValue:")]
public virtual void set_NumberValue(nfloat value);
}
public class Airbnb.Lottie.LOTNumberValueCallbackBlock : MulticastDelegate {
    public LOTNumberValueCallbackBlock(object object, IntPtr method);
    public virtual nfloat Invoke(nfloat currentFrame, nfloat startKeyFrame, nfloat endKeyFrame, nfloat interpolatedProgress, nfloat startValue, nfloat endValue, nfloat interpolatedValue);
    public virtual IAsyncResult BeginInvoke(nfloat currentFrame, nfloat startKeyFrame, nfloat endKeyFrame, nfloat interpolatedProgress, nfloat startValue, nfloat endValue, nfloat interpolatedValue, AsyncCallback callback, object object);
    public virtual nfloat EndInvoke(IAsyncResult result);
}
[ProtocolAttribute]
[RegisterAttribute("LOTNumberValueDelegate", "False")]
[ModelAttribute]
public abstract class Airbnb.Lottie.LOTNumberValueDelegate : LOTValueDelegate {
    [NullableContextAttribute("1")]
[BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTNumberValueDelegate(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTNumberValueDelegate(IntPtr handle);
    [ExportAttribute("floatValueForFrame:startKeyframe:endKeyframe:interpolatedProgress:startValue:endValue:currentValue:")]
[BindingImplAttribute]
public abstract virtual nfloat StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress, nfloat startValue, nfloat endValue, nfloat interpolatedValue);
}
internal class Airbnb.Lottie.LOTNumberValueDelegateWrapper : BaseWrapper {
    [PreserveAttribute]
public LOTNumberValueDelegateWrapper(IntPtr handle, bool owns);
    [ExportAttribute("floatValueForFrame:startKeyframe:endKeyframe:interpolatedProgress:startValue:endValue:currentValue:")]
[BindingImplAttribute]
public sealed virtual nfloat StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress, nfloat startValue, nfloat endValue, nfloat interpolatedValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("LOTPathBlockCallback", "True")]
public class Airbnb.Lottie.LOTPathBlockCallback : NSObject {
    [BindingImplAttribute]
private static IntPtr class_ptr;
    public IntPtr ClassHandle { get; }
    [BindingImplAttribute]
public LOTPathValueCallbackBlock Callback { get; public set; }
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTPathBlockCallback(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTPathBlockCallback(IntPtr handle);
    private static LOTPathBlockCallback();
    public virtual IntPtr get_ClassHandle();
    [ExportAttribute("pathForFrame:startKeyframe:endKeyframe:interpolatedProgress:")]
[BindingImplAttribute]
public virtual CGPath StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress);
    [ExportAttribute("withBlock:")]
[BindingImplAttribute]
public static LOTPathBlockCallback WithBlock(LOTPathValueCallbackBlock block);
    [ExportAttribute]
public virtual LOTPathValueCallbackBlock get_Callback();
    [ExportAttribute]
public virtual void set_Callback(LOTPathValueCallbackBlock value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("LOTPathValueCallback", "True")]
public class Airbnb.Lottie.LOTPathValueCallback : NSObject {
    [BindingImplAttribute]
private static IntPtr class_ptr;
    public IntPtr ClassHandle { get; }
    [BindingImplAttribute]
public CGPath PathValue { get; public set; }
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTPathValueCallback(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTPathValueCallback(IntPtr handle);
    private static LOTPathValueCallback();
    public virtual IntPtr get_ClassHandle();
    [ExportAttribute("pathForFrame:startKeyframe:endKeyframe:interpolatedProgress:")]
[BindingImplAttribute]
public virtual CGPath StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress);
    [ExportAttribute("withCGPath:")]
[BindingImplAttribute]
public static LOTPathValueCallback WithCGPath(CGPath path);
    [ExportAttribute]
public virtual CGPath get_PathValue();
    [ExportAttribute]
public virtual void set_PathValue(CGPath value);
}
public class Airbnb.Lottie.LOTPathValueCallbackBlock : MulticastDelegate {
    public LOTPathValueCallbackBlock(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual CGPath Invoke(nfloat currentFrame, nfloat startKeyFrame, nfloat endKeyFrame, nfloat interpolatedProgress);
    public virtual IAsyncResult BeginInvoke(nfloat currentFrame, nfloat startKeyFrame, nfloat endKeyFrame, nfloat interpolatedProgress, AsyncCallback callback, object object);
    public virtual CGPath EndInvoke(IAsyncResult result);
}
[ProtocolAttribute]
[RegisterAttribute("LOTPathValueDelegate", "False")]
[ModelAttribute]
public abstract class Airbnb.Lottie.LOTPathValueDelegate : LOTValueDelegate {
    [NullableContextAttribute("1")]
[BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTPathValueDelegate(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTPathValueDelegate(IntPtr handle);
    [NullableContextAttribute("1")]
[ExportAttribute("pathForFrame:startKeyframe:endKeyframe:interpolatedProgress:")]
[BindingImplAttribute]
public abstract virtual CGPath StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress);
}
internal class Airbnb.Lottie.LOTPathValueDelegateWrapper : BaseWrapper {
    [PreserveAttribute]
public LOTPathValueDelegateWrapper(IntPtr handle, bool owns);
    [NullableContextAttribute("1")]
[ExportAttribute("pathForFrame:startKeyframe:endKeyframe:interpolatedProgress:")]
[BindingImplAttribute]
public sealed virtual CGPath StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress);
}
[RegisterAttribute("LOTPointBlockCallback", "True")]
public class Airbnb.Lottie.LOTPointBlockCallback : NSObject {
    [BindingImplAttribute]
private static IntPtr class_ptr;
    public IntPtr ClassHandle { get; }
    [NullableAttribute("1")]
[BindingImplAttribute]
public LOTPointValueCallbackBlock Callback { get; public set; }
    [NullableContextAttribute("1")]
[BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTPointBlockCallback(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTPointBlockCallback(IntPtr handle);
    private static LOTPointBlockCallback();
    public virtual IntPtr get_ClassHandle();
    [ExportAttribute("pointForFrame:startKeyframe:endKeyframe:interpolatedProgress:startPoint:endPoint:currentPoint:")]
[BindingImplAttribute]
public virtual CGPoint StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress, CGPoint startPoint, CGPoint endPoint, CGPoint interpolatedPoint);
    [NullableContextAttribute("1")]
[ExportAttribute("withBlock:")]
[BindingImplAttribute]
public static LOTPointBlockCallback WithBlock(LOTPointValueCallbackBlock block);
    [NullableContextAttribute("1")]
[ExportAttribute]
public virtual LOTPointValueCallbackBlock get_Callback();
    [NullableContextAttribute("1")]
[ExportAttribute]
public virtual void set_Callback(LOTPointValueCallbackBlock value);
}
[RegisterAttribute("LOTPointInterpolatorCallback", "True")]
public class Airbnb.Lottie.LOTPointInterpolatorCallback : NSObject {
    [BindingImplAttribute]
private static IntPtr class_ptr;
    public IntPtr ClassHandle { get; }
    [BindingImplAttribute]
public nfloat CurrentProgress { get; public set; }
    [BindingImplAttribute]
public CGPoint FromPoint { get; public set; }
    [BindingImplAttribute]
public CGPoint ToPoint { get; public set; }
    [NullableContextAttribute("1")]
[BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTPointInterpolatorCallback(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTPointInterpolatorCallback(IntPtr handle);
    private static LOTPointInterpolatorCallback();
    public virtual IntPtr get_ClassHandle();
    [ExportAttribute("pointForFrame:startKeyframe:endKeyframe:interpolatedProgress:startPoint:endPoint:currentPoint:")]
[BindingImplAttribute]
public virtual CGPoint StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress, CGPoint startPoint, CGPoint endPoint, CGPoint interpolatedPoint);
    [NullableContextAttribute("1")]
[ExportAttribute("withFromPoint:toPoint:")]
[BindingImplAttribute]
public static LOTPointInterpolatorCallback WithFromPoint(CGPoint fromPoint, CGPoint toPoint);
    [ExportAttribute("currentProgress")]
public virtual nfloat get_CurrentProgress();
    [ExportAttribute("setCurrentProgress:")]
public virtual void set_CurrentProgress(nfloat value);
    [ExportAttribute]
public virtual CGPoint get_FromPoint();
    [ExportAttribute]
public virtual void set_FromPoint(CGPoint value);
    [ExportAttribute]
public virtual CGPoint get_ToPoint();
    [ExportAttribute]
public virtual void set_ToPoint(CGPoint value);
}
[RegisterAttribute("LOTPointValueCallback", "True")]
public class Airbnb.Lottie.LOTPointValueCallback : NSObject {
    [BindingImplAttribute]
private static IntPtr class_ptr;
    public IntPtr ClassHandle { get; }
    [BindingImplAttribute]
public CGPoint PointValue { get; public set; }
    [NullableContextAttribute("1")]
[BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTPointValueCallback(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTPointValueCallback(IntPtr handle);
    private static LOTPointValueCallback();
    public virtual IntPtr get_ClassHandle();
    [ExportAttribute("pointForFrame:startKeyframe:endKeyframe:interpolatedProgress:startPoint:endPoint:currentPoint:")]
[BindingImplAttribute]
public virtual CGPoint StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress, CGPoint startPoint, CGPoint endPoint, CGPoint interpolatedPoint);
    [NullableContextAttribute("1")]
[ExportAttribute("withPointValue:")]
[BindingImplAttribute]
public static LOTPointValueCallback WithPointValue(CGPoint pointValue);
    [ExportAttribute]
public virtual CGPoint get_PointValue();
    [ExportAttribute]
public virtual void set_PointValue(CGPoint value);
}
public class Airbnb.Lottie.LOTPointValueCallbackBlock : MulticastDelegate {
    public LOTPointValueCallbackBlock(object object, IntPtr method);
    public virtual CGPoint Invoke(nfloat currentFrame, nfloat startKeyFrame, nfloat endKeyFrame, nfloat interpolatedProgress, CGPoint startPoint, CGPoint endPoint, CGPoint interpolatedPoint);
    public virtual IAsyncResult BeginInvoke(nfloat currentFrame, nfloat startKeyFrame, nfloat endKeyFrame, nfloat interpolatedProgress, CGPoint startPoint, CGPoint endPoint, CGPoint interpolatedPoint, AsyncCallback callback, object object);
    public virtual CGPoint EndInvoke(IAsyncResult result);
}
[ProtocolAttribute]
[RegisterAttribute("LOTPointValueDelegate", "False")]
[ModelAttribute]
public abstract class Airbnb.Lottie.LOTPointValueDelegate : LOTValueDelegate {
    [NullableContextAttribute("1")]
[BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTPointValueDelegate(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTPointValueDelegate(IntPtr handle);
    [ExportAttribute("pointForFrame:startKeyframe:endKeyframe:interpolatedProgress:startPoint:endPoint:currentPoint:")]
[BindingImplAttribute]
public abstract virtual CGPoint StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress, CGPoint startPoint, CGPoint endPoint, CGPoint interpolatedPoint);
}
internal class Airbnb.Lottie.LOTPointValueDelegateWrapper : BaseWrapper {
    [PreserveAttribute]
public LOTPointValueDelegateWrapper(IntPtr handle, bool owns);
    [ExportAttribute("pointForFrame:startKeyframe:endKeyframe:interpolatedProgress:startPoint:endPoint:currentPoint:")]
[BindingImplAttribute]
public sealed virtual CGPoint StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress, CGPoint startPoint, CGPoint endPoint, CGPoint interpolatedPoint);
}
[RegisterAttribute("LOTSizeBlockCallback", "True")]
public class Airbnb.Lottie.LOTSizeBlockCallback : NSObject {
    [BindingImplAttribute]
private static IntPtr class_ptr;
    public IntPtr ClassHandle { get; }
    [NullableAttribute("1")]
[BindingImplAttribute]
public LOTSizeValueCallbackBlock Callback { get; public set; }
    [NullableContextAttribute("1")]
[BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTSizeBlockCallback(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTSizeBlockCallback(IntPtr handle);
    private static LOTSizeBlockCallback();
    public virtual IntPtr get_ClassHandle();
    [ExportAttribute("sizeForFrame:startKeyframe:endKeyframe:interpolatedProgress:startSize:endSize:currentSize:")]
[BindingImplAttribute]
public virtual CGSize StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress, CGSize startSize, CGSize endSize, CGSize interpolatedSize);
    [NullableContextAttribute("1")]
[ExportAttribute("withBlock:")]
[BindingImplAttribute]
public static LOTSizeBlockCallback WithBlock(LOTSizeValueCallbackBlock block);
    [NullableContextAttribute("1")]
[ExportAttribute]
public virtual LOTSizeValueCallbackBlock get_Callback();
    [NullableContextAttribute("1")]
[ExportAttribute]
public virtual void set_Callback(LOTSizeValueCallbackBlock value);
}
[RegisterAttribute("LOTSizeInterpolatorCallback", "True")]
public class Airbnb.Lottie.LOTSizeInterpolatorCallback : NSObject {
    [BindingImplAttribute]
private static IntPtr class_ptr;
    public IntPtr ClassHandle { get; }
    [BindingImplAttribute]
public nfloat CurrentProgress { get; public set; }
    [BindingImplAttribute]
public CGSize FromSize { get; public set; }
    [BindingImplAttribute]
public CGSize ToSize { get; public set; }
    [NullableContextAttribute("1")]
[BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTSizeInterpolatorCallback(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTSizeInterpolatorCallback(IntPtr handle);
    private static LOTSizeInterpolatorCallback();
    public virtual IntPtr get_ClassHandle();
    [ExportAttribute("sizeForFrame:startKeyframe:endKeyframe:interpolatedProgress:startSize:endSize:currentSize:")]
[BindingImplAttribute]
public virtual CGSize StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress, CGSize startSize, CGSize endSize, CGSize interpolatedSize);
    [NullableContextAttribute("1")]
[ExportAttribute("withFromSize:toSize:")]
[BindingImplAttribute]
public static LOTSizeInterpolatorCallback WithFromSize(CGSize fromSize, CGSize toSize);
    [ExportAttribute("currentProgress")]
public virtual nfloat get_CurrentProgress();
    [ExportAttribute("setCurrentProgress:")]
public virtual void set_CurrentProgress(nfloat value);
    [ExportAttribute]
public virtual CGSize get_FromSize();
    [ExportAttribute]
public virtual void set_FromSize(CGSize value);
    [ExportAttribute]
public virtual CGSize get_ToSize();
    [ExportAttribute]
public virtual void set_ToSize(CGSize value);
}
[RegisterAttribute("LOTSizeValueCallback", "True")]
public class Airbnb.Lottie.LOTSizeValueCallback : NSObject {
    [BindingImplAttribute]
private static IntPtr class_ptr;
    public IntPtr ClassHandle { get; }
    [BindingImplAttribute]
public CGSize SizeValue { get; public set; }
    [NullableContextAttribute("1")]
[BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTSizeValueCallback(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTSizeValueCallback(IntPtr handle);
    private static LOTSizeValueCallback();
    public virtual IntPtr get_ClassHandle();
    [ExportAttribute("sizeForFrame:startKeyframe:endKeyframe:interpolatedProgress:startSize:endSize:currentSize:")]
[BindingImplAttribute]
public virtual CGSize StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress, CGSize startSize, CGSize endSize, CGSize interpolatedSize);
    [NullableContextAttribute("1")]
[ExportAttribute("withPointValue:")]
[BindingImplAttribute]
public static LOTSizeValueCallback WithPointValue(CGSize sizeValue);
    [ExportAttribute]
public virtual CGSize get_SizeValue();
    [ExportAttribute]
public virtual void set_SizeValue(CGSize value);
}
public class Airbnb.Lottie.LOTSizeValueCallbackBlock : MulticastDelegate {
    public LOTSizeValueCallbackBlock(object object, IntPtr method);
    public virtual CGSize Invoke(nfloat currentFrame, nfloat startKeyFrame, nfloat endKeyFrame, nfloat interpolatedProgress, CGSize startSize, CGSize endSize, CGSize interpolatedSize);
    public virtual IAsyncResult BeginInvoke(nfloat currentFrame, nfloat startKeyFrame, nfloat endKeyFrame, nfloat interpolatedProgress, CGSize startSize, CGSize endSize, CGSize interpolatedSize, AsyncCallback callback, object object);
    public virtual CGSize EndInvoke(IAsyncResult result);
}
[ProtocolAttribute]
[RegisterAttribute("LOTSizeValueDelegate", "False")]
[ModelAttribute]
public abstract class Airbnb.Lottie.LOTSizeValueDelegate : LOTValueDelegate {
    [NullableContextAttribute("1")]
[BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTSizeValueDelegate(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTSizeValueDelegate(IntPtr handle);
    [ExportAttribute("sizeForFrame:startKeyframe:endKeyframe:interpolatedProgress:startSize:endSize:currentSize:")]
[BindingImplAttribute]
public abstract virtual CGSize StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress, CGSize startSize, CGSize endSize, CGSize interpolatedSize);
}
internal class Airbnb.Lottie.LOTSizeValueDelegateWrapper : BaseWrapper {
    [PreserveAttribute]
public LOTSizeValueDelegateWrapper(IntPtr handle, bool owns);
    [ExportAttribute("sizeForFrame:startKeyframe:endKeyframe:interpolatedProgress:startSize:endSize:currentSize:")]
[BindingImplAttribute]
public sealed virtual CGSize StartKeyframe(nfloat currentFrame, nfloat startKeyframe, nfloat endKeyframe, nfloat interpolatedProgress, CGSize startSize, CGSize endSize, CGSize interpolatedSize);
}
[ProtocolAttribute]
[RegisterAttribute("LOTValueDelegate", "False")]
[ModelAttribute]
public class Airbnb.Lottie.LOTValueDelegate : NSObject {
    [NullableContextAttribute("1")]
[BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected LOTValueDelegate(NSObjectFlag t);
    [BindingImplAttribute]
[EditorBrowsableAttribute("2")]
protected internal LOTValueDelegate(IntPtr handle);
}
internal class Airbnb.Lottie.LOTValueDelegateWrapper : BaseWrapper {
    [PreserveAttribute]
public LOTValueDelegateWrapper(IntPtr handle, bool owns);
}
[NativeAttribute]
public enum Airbnb.Lottie.LOTViewContentMode : Enum {
    public ulong value__;
    public static LOTViewContentMode ScaleToFill;
    public static LOTViewContentMode ScaleAspectFit;
    public static LOTViewContentMode ScaleAspectFill;
    public static LOTViewContentMode Redraw;
    public static LOTViewContentMode Center;
    public static LOTViewContentMode Top;
    public static LOTViewContentMode Bottom;
    public static LOTViewContentMode Left;
    public static LOTViewContentMode Right;
    public static LOTViewContentMode TopLeft;
    public static LOTViewContentMode TopRight;
    public static LOTViewContentMode BottomLeft;
    public static LOTViewContentMode BottomRight;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ApiDefinitions.Ios.Messaging : object {
    internal static string LIBOBJC_DYLIB;
    internal static Assembly this_assembly;
    private static Messaging();
    public static IntPtr IntPtr_objc_msgSend(IntPtr receiever, IntPtr selector);
    public static IntPtr IntPtr_objc_msgSendSuper(IntPtr receiever, IntPtr selector);
    public static IntPtr IntPtr_objc_msgSend_IntPtr(IntPtr receiever, IntPtr selector, IntPtr arg1);
    public static IntPtr IntPtr_objc_msgSendSuper_IntPtr(IntPtr receiever, IntPtr selector, IntPtr arg1);
    public static void void_objc_msgSend_IntPtr(IntPtr receiver, IntPtr selector, IntPtr arg1);
    public static void void_objc_msgSendSuper_IntPtr(IntPtr receiver, IntPtr selector, IntPtr arg1);
    public static void void_objc_msgSend_IntPtr_UInt32(IntPtr receiver, IntPtr selector, IntPtr arg1, UInt32 arg2);
    public static void void_objc_msgSendSuper_IntPtr_UInt32(IntPtr receiver, IntPtr selector, IntPtr arg1, UInt32 arg2);
    public static void void_objc_msgSend_IntPtr_UInt64(IntPtr receiver, IntPtr selector, IntPtr arg1, ulong arg2);
    public static void void_objc_msgSendSuper_IntPtr_UInt64(IntPtr receiver, IntPtr selector, IntPtr arg1, ulong arg2);
    public static bool bool_objc_msgSend(IntPtr receiver, IntPtr selector);
    public static bool bool_objc_msgSendSuper(IntPtr receiver, IntPtr selector);
    public static void void_objc_msgSend_bool(IntPtr receiver, IntPtr selector, bool arg1);
    public static void void_objc_msgSendSuper_bool(IntPtr receiver, IntPtr selector, bool arg1);
    public static IntPtr IntPtr_objc_msgSend_IntPtr_IntPtr(IntPtr receiver, IntPtr selector, IntPtr arg1, IntPtr arg2);
    public static IntPtr IntPtr_objc_msgSendSuper_IntPtr_IntPtr(IntPtr receiver, IntPtr selector, IntPtr arg1, IntPtr arg2);
    public static void void_objc_msgSend_bool_bool(IntPtr receiver, IntPtr selector, bool arg1, bool arg2);
    public static void void_objc_msgSendSuper_bool_bool(IntPtr receiver, IntPtr selector, bool arg1, bool arg2);
    public static void void_objc_msgSend_nfloat_nfloat(IntPtr receiver, IntPtr selector, nfloat arg1, nfloat arg2);
    public static void void_objc_msgSendSuper_nfloat_nfloat(IntPtr receiver, IntPtr selector, nfloat arg1, nfloat arg2);
    public static void void_objc_msgSend_IntPtr_IntPtr(IntPtr receiver, IntPtr selector, IntPtr arg1, IntPtr arg2);
    public static void void_objc_msgSendSuper_IntPtr_IntPtr(IntPtr receiver, IntPtr selector, IntPtr arg1, IntPtr arg2);
    public static void void_objc_msgSend(IntPtr receiver, IntPtr selector);
    public static void void_objc_msgSendSuper(IntPtr receiver, IntPtr selector);
    public static IntPtr IntPtr_objc_msgSend_IntPtr_IntPtr_IntPtr_bool(IntPtr receiver, IntPtr selector, IntPtr arg1, IntPtr arg2, IntPtr arg3, bool arg4);
    public static IntPtr IntPtr_objc_msgSendSuper_IntPtr_IntPtr_IntPtr_bool(IntPtr receiver, IntPtr selector, IntPtr arg1, IntPtr arg2, IntPtr arg3, bool arg4);
    public static IntPtr IntPtr_objc_msgSend_IntPtr_IntPtr_IntPtr_bool_IntPtr(IntPtr receiver, IntPtr selector, IntPtr arg1, IntPtr arg2, IntPtr arg3, bool arg4, IntPtr arg5);
    public static IntPtr IntPtr_objc_msgSendSuper_IntPtr_IntPtr_IntPtr_bool_IntPtr(IntPtr receiver, IntPtr selector, IntPtr arg1, IntPtr arg2, IntPtr arg3, bool arg4, IntPtr arg5);
    public static double Double_objc_msgSend_IntPtr(IntPtr receiver, IntPtr selector, IntPtr arg1);
    public static double Double_objc_msgSendSuper_IntPtr(IntPtr receiver, IntPtr selector, IntPtr arg1);
    public static nfloat nfloat_objc_msgSend(IntPtr receiver, IntPtr selector);
    public static nfloat nfloat_objc_msgSendSuper(IntPtr receiver, IntPtr selector);
    public static void void_objc_msgSend_nfloat(IntPtr receiver, IntPtr selector, nfloat arg1);
    public static void void_objc_msgSendSuper_nfloat(IntPtr receiver, IntPtr selector, nfloat arg1);
    public static void void_objc_msgSend_nfloat_IntPtr(IntPtr receiver, IntPtr selector, nfloat arg1, IntPtr arg2);
    public static void void_objc_msgSendSuper_nfloat_IntPtr(IntPtr receiver, IntPtr selector, nfloat arg1, IntPtr arg2);
    public static void void_objc_msgSend_nfloat_nfloat_IntPtr(IntPtr receiver, IntPtr selector, nfloat arg1, nfloat arg2, IntPtr arg3);
    public static void void_objc_msgSendSuper_nfloat_nfloat_IntPtr(IntPtr receiver, IntPtr selector, nfloat arg1, nfloat arg2, IntPtr arg3);
    public static void void_objc_msgSend_IntPtr_IntPtr_IntPtr(IntPtr receiver, IntPtr selector, IntPtr arg1, IntPtr arg2, IntPtr arg3);
    public static void void_objc_msgSendSuper_IntPtr_IntPtr_IntPtr(IntPtr receiver, IntPtr selector, IntPtr arg1, IntPtr arg2, IntPtr arg3);
    public static CGPoint CGPoint_objc_msgSend_CGPoint_IntPtr(IntPtr receiver, IntPtr selector, CGPoint arg1, IntPtr arg2);
    public static CGPoint CGPoint_objc_msgSendSuper_CGPoint_IntPtr(IntPtr receiver, IntPtr selector, CGPoint arg1, IntPtr arg2);
    public static CGRect CGRect_objc_msgSend_CGRect_IntPtr(IntPtr receiver, IntPtr selector, CGRect arg1, IntPtr arg2);
    public static CGRect CGRect_objc_msgSendSuper_CGRect_IntPtr(IntPtr receiver, IntPtr selector, CGRect arg1, IntPtr arg2);
    public static void CGRect_objc_msgSend_stret_CGRect_IntPtr(CGRect& retval, IntPtr receiver, IntPtr selector, CGRect arg1, IntPtr arg2);
    public static void CGRect_objc_msgSendSuper_stret_CGRect_IntPtr(CGRect& retval, IntPtr receiver, IntPtr selector, CGRect arg1, IntPtr arg2);
    public static void void_objc_msgSend_IntPtr_IntPtr_bool(IntPtr receiver, IntPtr selector, IntPtr arg1, IntPtr arg2, bool arg3);
    public static void void_objc_msgSendSuper_IntPtr_IntPtr_bool(IntPtr receiver, IntPtr selector, IntPtr arg1, IntPtr arg2, bool arg3);
    public static IntPtr IntPtr_objc_msgSend_nfloat_nfloat_nfloat_nfloat_IntPtr_IntPtr_IntPtr(IntPtr receiver, IntPtr selector, nfloat arg1, nfloat arg2, nfloat arg3, nfloat arg4, IntPtr arg5, IntPtr arg6, IntPtr arg7);
    public static IntPtr IntPtr_objc_msgSendSuper_nfloat_nfloat_nfloat_nfloat_IntPtr_IntPtr_IntPtr(IntPtr receiver, IntPtr selector, nfloat arg1, nfloat arg2, nfloat arg3, nfloat arg4, IntPtr arg5, IntPtr arg6, IntPtr arg7);
    public static CGRect CGRect_objc_msgSend(IntPtr receiver, IntPtr selector);
    public static CGRect CGRect_objc_msgSendSuper(IntPtr receiver, IntPtr selector);
    public static void CGRect_objc_msgSend_stret(CGRect& retval, IntPtr receiver, IntPtr selector);
    public static void CGRect_objc_msgSendSuper_stret(CGRect& retval, IntPtr receiver, IntPtr selector);
    public static double Double_objc_msgSend(IntPtr receiver, IntPtr selector);
    public static double Double_objc_msgSendSuper(IntPtr receiver, IntPtr selector);
    public static IntPtr IntPtr_objc_msgSend_nfloat_nfloat(IntPtr receiver, IntPtr selector, nfloat arg1, nfloat arg2);
    public static IntPtr IntPtr_objc_msgSendSuper_nfloat_nfloat(IntPtr receiver, IntPtr selector, nfloat arg1, nfloat arg2);
    public static nfloat nfloat_objc_msgSend_nfloat_nfloat_nfloat_nfloat_nfloat_nfloat_nfloat(IntPtr receiver, IntPtr selector, nfloat arg1, nfloat arg2, nfloat arg3, nfloat arg4, nfloat arg5, nfloat arg6, nfloat arg7);
    public static nfloat nfloat_objc_msgSendSuper_nfloat_nfloat_nfloat_nfloat_nfloat_nfloat_nfloat(IntPtr receiver, IntPtr selector, nfloat arg1, nfloat arg2, nfloat arg3, nfloat arg4, nfloat arg5, nfloat arg6, nfloat arg7);
    public static bool bool_objc_msgSend_IntPtr(IntPtr receiver, IntPtr selector, IntPtr arg1);
    public static bool bool_objc_msgSendSuper_IntPtr(IntPtr receiver, IntPtr selector, IntPtr arg1);
    public static IntPtr IntPtr_objc_msgSend_nfloat(IntPtr receiver, IntPtr selector, nfloat arg1);
    public static IntPtr IntPtr_objc_msgSendSuper_nfloat(IntPtr receiver, IntPtr selector, nfloat arg1);
    public static IntPtr IntPtr_objc_msgSend_nfloat_nfloat_nfloat_nfloat(IntPtr receiver, IntPtr selector, nfloat arg1, nfloat arg2, nfloat arg3, nfloat arg4);
    public static IntPtr IntPtr_objc_msgSendSuper_nfloat_nfloat_nfloat_nfloat(IntPtr receiver, IntPtr selector, nfloat arg1, nfloat arg2, nfloat arg3, nfloat arg4);
    public static CGPoint CGPoint_objc_msgSend_nfloat_nfloat_nfloat_nfloat_CGPoint_CGPoint_CGPoint(IntPtr receiver, IntPtr selector, nfloat arg1, nfloat arg2, nfloat arg3, nfloat arg4, CGPoint arg5, CGPoint arg6, CGPoint arg7);
    public static CGPoint CGPoint_objc_msgSendSuper_nfloat_nfloat_nfloat_nfloat_CGPoint_CGPoint_CGPoint(IntPtr receiver, IntPtr selector, nfloat arg1, nfloat arg2, nfloat arg3, nfloat arg4, CGPoint arg5, CGPoint arg6, CGPoint arg7);
    public static CGPoint CGPoint_objc_msgSend(IntPtr receiver, IntPtr selector);
    public static CGPoint CGPoint_objc_msgSendSuper(IntPtr receiver, IntPtr selector);
    public static void void_objc_msgSend_CGPoint(IntPtr receiver, IntPtr selector, CGPoint arg1);
    public static void void_objc_msgSendSuper_CGPoint(IntPtr receiver, IntPtr selector, CGPoint arg1);
    public static IntPtr IntPtr_objc_msgSend_CGPoint_CGPoint(IntPtr receiver, IntPtr selector, CGPoint arg1, CGPoint arg2);
    public static IntPtr IntPtr_objc_msgSendSuper_CGPoint_CGPoint(IntPtr receiver, IntPtr selector, CGPoint arg1, CGPoint arg2);
    public static IntPtr IntPtr_objc_msgSend_CGPoint(IntPtr receiver, IntPtr selector, CGPoint arg1);
    public static IntPtr IntPtr_objc_msgSendSuper_CGPoint(IntPtr receiver, IntPtr selector, CGPoint arg1);
    public static CGSize CGSize_objc_msgSend_nfloat_nfloat_nfloat_nfloat_CGSize_CGSize_CGSize(IntPtr receiver, IntPtr selector, nfloat arg1, nfloat arg2, nfloat arg3, nfloat arg4, CGSize arg5, CGSize arg6, CGSize arg7);
    public static CGSize CGSize_objc_msgSendSuper_nfloat_nfloat_nfloat_nfloat_CGSize_CGSize_CGSize(IntPtr receiver, IntPtr selector, nfloat arg1, nfloat arg2, nfloat arg3, nfloat arg4, CGSize arg5, CGSize arg6, CGSize arg7);
    public static CGSize CGSize_objc_msgSend(IntPtr receiver, IntPtr selector);
    public static CGSize CGSize_objc_msgSendSuper(IntPtr receiver, IntPtr selector);
    public static void void_objc_msgSend_CGSize(IntPtr receiver, IntPtr selector, CGSize arg1);
    public static void void_objc_msgSendSuper_CGSize(IntPtr receiver, IntPtr selector, CGSize arg1);
    public static IntPtr IntPtr_objc_msgSend_CGSize_CGSize(IntPtr receiver, IntPtr selector, CGSize arg1, CGSize arg2);
    public static IntPtr IntPtr_objc_msgSendSuper_CGSize_CGSize(IntPtr receiver, IntPtr selector, CGSize arg1, CGSize arg2);
    public static IntPtr IntPtr_objc_msgSend_CGSize(IntPtr receiver, IntPtr selector, CGSize arg1);
    public static IntPtr IntPtr_objc_msgSendSuper_CGSize(IntPtr receiver, IntPtr selector, CGSize arg1);
}
internal class ApiDefinitions.Messaging : object {
    private static Messaging();
}
public static class DreamTeam.Xamarin.lottie_ios.___DreamTeam_Xamarin_lottie_ios : object {
    private static ___DreamTeam_Xamarin_lottie_ios();
    public static void DontLooseMeDuringBuild();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[BindingImplAttribute]
internal static class ObjCRuntime.Trampolines : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
