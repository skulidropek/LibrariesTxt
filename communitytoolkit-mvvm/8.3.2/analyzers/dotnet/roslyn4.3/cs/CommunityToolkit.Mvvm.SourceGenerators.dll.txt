[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.AsyncVoidReturningRelayCommandMethodAnalyzer : DiagnosticAnalyzer {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<DiagnosticDescriptor> <SupportedDiagnostics>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    [CompilerGeneratedAttribute]
public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    [NullableContextAttribute("1")]
public virtual void Initialize(AnalysisContext context);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.AutoPropertyWithFieldTargetedObservablePropertyAttributeAnalyzer : DiagnosticAnalyzer {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<DiagnosticDescriptor> <SupportedDiagnostics>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    [CompilerGeneratedAttribute]
public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    [NullableContextAttribute("1")]
public virtual void Initialize(AnalysisContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.ClassUsingAttributeInsteadOfInheritanceAnalyzer : DiagnosticAnalyzer {
    internal static string TypeNameKey;
    internal static string AttributeTypeNameKey;
    private static ImmutableDictionary`2<string, string> GeneratorAttributeNamesToFullyQualifiedNamesMap;
    private static ImmutableDictionary`2<string, DiagnosticDescriptor> GeneratorAttributeNamesToDiagnosticsMap;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<DiagnosticDescriptor> <SupportedDiagnostics>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    private static ClassUsingAttributeInsteadOfInheritanceAnalyzer();
    [CompilerGeneratedAttribute]
public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class CommunityToolkit.Mvvm.SourceGenerators.ComponentModel.Models.AttributeInfo : object {
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EquatableArray`1<TypedConstantInfo> <ConstructorArgumentInfo>k__BackingField;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EquatableArray`1<ValueTuple`2<string, TypedConstantInfo>> <NamedArgumentInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public string TypeName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EquatableArray`1<TypedConstantInfo> ConstructorArgumentInfo { get; public set; }
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EquatableArray`1<ValueTuple`2<string, TypedConstantInfo>> NamedArgumentInfo { get; public set; }
    public AttributeInfo(string TypeName, EquatableArray`1<TypedConstantInfo> ConstructorArgumentInfo, EquatableArray`1<ValueTuple`2<string, TypedConstantInfo>> NamedArgumentInfo);
    [CompilerGeneratedAttribute]
private AttributeInfo(AttributeInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TypeName(string value);
    [CompilerGeneratedAttribute]
public EquatableArray`1<TypedConstantInfo> get_ConstructorArgumentInfo();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ConstructorArgumentInfo(EquatableArray`1<TypedConstantInfo> value);
    [CompilerGeneratedAttribute]
public EquatableArray`1<ValueTuple`2<string, TypedConstantInfo>> get_NamedArgumentInfo();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NamedArgumentInfo(EquatableArray`1<ValueTuple`2<string, TypedConstantInfo>> value);
    public static AttributeInfo Create(AttributeData attributeData);
    public static bool TryCreate(INamedTypeSymbol typeSymbol, SemanticModel semanticModel, IEnumerable`1<AttributeArgumentSyntax> arguments, CancellationToken token, AttributeInfo& info);
    public AttributeSyntax GetSyntax();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(AttributeInfo left, AttributeInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(AttributeInfo left, AttributeInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(AttributeInfo other);
    [CompilerGeneratedAttribute]
public AttributeInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& TypeName, EquatableArray`1& ConstructorArgumentInfo, EquatableArray`1& NamedArgumentInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class CommunityToolkit.Mvvm.SourceGenerators.ComponentModel.Models.INotifyPropertyChangedInfo : object {
    [CompilerGeneratedAttribute]
private bool <IncludeAdditionalHelperMethods>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public bool IncludeAdditionalHelperMethods { get; public set; }
    public INotifyPropertyChangedInfo(bool IncludeAdditionalHelperMethods);
    [CompilerGeneratedAttribute]
private INotifyPropertyChangedInfo(INotifyPropertyChangedInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public bool get_IncludeAdditionalHelperMethods();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IncludeAdditionalHelperMethods(bool value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(INotifyPropertyChangedInfo left, INotifyPropertyChangedInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(INotifyPropertyChangedInfo left, INotifyPropertyChangedInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(INotifyPropertyChangedInfo other);
    [CompilerGeneratedAttribute]
public INotifyPropertyChangedInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Boolean& IncludeAdditionalHelperMethods);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class CommunityToolkit.Mvvm.SourceGenerators.ComponentModel.Models.ObservableRecipientInfo : object {
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasExplicitConstructors>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAbstract>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsObservableValidator>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRequiresUnreferencedCodeAttributeAvailable>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasOnActivatedMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasOnDeactivatedMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public string TypeName { get; public set; }
    public bool HasExplicitConstructors { get; public set; }
    public bool IsAbstract { get; public set; }
    public bool IsObservableValidator { get; public set; }
    public bool IsRequiresUnreferencedCodeAttributeAvailable { get; public set; }
    public bool HasOnActivatedMethod { get; public set; }
    public bool HasOnDeactivatedMethod { get; public set; }
    public ObservableRecipientInfo(string TypeName, bool HasExplicitConstructors, bool IsAbstract, bool IsObservableValidator, bool IsRequiresUnreferencedCodeAttributeAvailable, bool HasOnActivatedMethod, bool HasOnDeactivatedMethod);
    [CompilerGeneratedAttribute]
private ObservableRecipientInfo(ObservableRecipientInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TypeName(string value);
    [CompilerGeneratedAttribute]
public bool get_HasExplicitConstructors();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HasExplicitConstructors(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsAbstract();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsAbstract(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsObservableValidator();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsObservableValidator(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsRequiresUnreferencedCodeAttributeAvailable();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsRequiresUnreferencedCodeAttributeAvailable(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasOnActivatedMethod();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HasOnActivatedMethod(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasOnDeactivatedMethod();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HasOnDeactivatedMethod(bool value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(ObservableRecipientInfo left, ObservableRecipientInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(ObservableRecipientInfo left, ObservableRecipientInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(ObservableRecipientInfo other);
    [CompilerGeneratedAttribute]
public ObservableRecipientInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& TypeName, Boolean& HasExplicitConstructors, Boolean& IsAbstract, Boolean& IsObservableValidator, Boolean& IsRequiresUnreferencedCodeAttributeAvailable, Boolean& HasOnActivatedMethod, Boolean& HasOnDeactivatedMethod);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class CommunityToolkit.Mvvm.SourceGenerators.ComponentModel.Models.PropertyInfo : object {
    [CompilerGeneratedAttribute]
private string <TypeNameWithNullabilityAnnotations>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FieldName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EquatableArray`1<string> <PropertyChangingNames>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EquatableArray`1<string> <PropertyChangedNames>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EquatableArray`1<string> <NotifiedCommandNames>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <NotifyPropertyChangedRecipients>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <NotifyDataErrorInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOldPropertyValueDirectlyReferenced>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsReferenceTypeOrUnconstraindTypeParameter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeMemberNotNullOnSetAccessor>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeRequiresUnreferencedCodeOnSetAccessor>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EquatableArray`1<AttributeInfo> <ForwardedAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public string TypeNameWithNullabilityAnnotations { get; public set; }
    public string FieldName { get; public set; }
    public string PropertyName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EquatableArray`1<string> PropertyChangingNames { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EquatableArray`1<string> PropertyChangedNames { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EquatableArray`1<string> NotifiedCommandNames { get; public set; }
    public bool NotifyPropertyChangedRecipients { get; public set; }
    public bool NotifyDataErrorInfo { get; public set; }
    public bool IsOldPropertyValueDirectlyReferenced { get; public set; }
    public bool IsReferenceTypeOrUnconstraindTypeParameter { get; public set; }
    public bool IncludeMemberNotNullOnSetAccessor { get; public set; }
    public bool IncludeRequiresUnreferencedCodeOnSetAccessor { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EquatableArray`1<AttributeInfo> ForwardedAttributes { get; public set; }
    public PropertyInfo(string TypeNameWithNullabilityAnnotations, string FieldName, string PropertyName, EquatableArray`1<string> PropertyChangingNames, EquatableArray`1<string> PropertyChangedNames, EquatableArray`1<string> NotifiedCommandNames, bool NotifyPropertyChangedRecipients, bool NotifyDataErrorInfo, bool IsOldPropertyValueDirectlyReferenced, bool IsReferenceTypeOrUnconstraindTypeParameter, bool IncludeMemberNotNullOnSetAccessor, bool IncludeRequiresUnreferencedCodeOnSetAccessor, EquatableArray`1<AttributeInfo> ForwardedAttributes);
    [CompilerGeneratedAttribute]
private PropertyInfo(PropertyInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_TypeNameWithNullabilityAnnotations();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TypeNameWithNullabilityAnnotations(string value);
    [CompilerGeneratedAttribute]
public string get_FieldName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FieldName(string value);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public EquatableArray`1<string> get_PropertyChangingNames();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PropertyChangingNames(EquatableArray`1<string> value);
    [CompilerGeneratedAttribute]
public EquatableArray`1<string> get_PropertyChangedNames();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PropertyChangedNames(EquatableArray`1<string> value);
    [CompilerGeneratedAttribute]
public EquatableArray`1<string> get_NotifiedCommandNames();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NotifiedCommandNames(EquatableArray`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_NotifyPropertyChangedRecipients();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NotifyPropertyChangedRecipients(bool value);
    [CompilerGeneratedAttribute]
public bool get_NotifyDataErrorInfo();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NotifyDataErrorInfo(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsOldPropertyValueDirectlyReferenced();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsOldPropertyValueDirectlyReferenced(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsReferenceTypeOrUnconstraindTypeParameter();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsReferenceTypeOrUnconstraindTypeParameter(bool value);
    [CompilerGeneratedAttribute]
public bool get_IncludeMemberNotNullOnSetAccessor();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IncludeMemberNotNullOnSetAccessor(bool value);
    [CompilerGeneratedAttribute]
public bool get_IncludeRequiresUnreferencedCodeOnSetAccessor();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IncludeRequiresUnreferencedCodeOnSetAccessor(bool value);
    [CompilerGeneratedAttribute]
public EquatableArray`1<AttributeInfo> get_ForwardedAttributes();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ForwardedAttributes(EquatableArray`1<AttributeInfo> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(PropertyInfo left, PropertyInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(PropertyInfo left, PropertyInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(PropertyInfo other);
    [CompilerGeneratedAttribute]
public PropertyInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& TypeNameWithNullabilityAnnotations, String& FieldName, String& PropertyName, EquatableArray`1& PropertyChangingNames, EquatableArray`1& PropertyChangedNames, EquatableArray`1& NotifiedCommandNames, Boolean& NotifyPropertyChangedRecipients, Boolean& NotifyDataErrorInfo, Boolean& IsOldPropertyValueDirectlyReferenced, Boolean& IsReferenceTypeOrUnconstraindTypeParameter, Boolean& IncludeMemberNotNullOnSetAccessor, Boolean& IncludeRequiresUnreferencedCodeOnSetAccessor, EquatableArray`1& ForwardedAttributes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class CommunityToolkit.Mvvm.SourceGenerators.ComponentModel.Models.TypedConstantInfo : object {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [CompilerGeneratedAttribute]
protected TypedConstantInfo(TypedConstantInfo original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public abstract virtual ExpressionSyntax GetSyntax();
    public static TypedConstantInfo Create(TypedConstant arg);
    public static bool TryCreate(IOperation operation, SemanticModel semanticModel, ExpressionSyntax expression, CancellationToken token, TypedConstantInfo& info);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(TypedConstantInfo left, TypedConstantInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(TypedConstantInfo left, TypedConstantInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(TypedConstantInfo other);
    [CompilerGeneratedAttribute]
public abstract virtual TypedConstantInfo <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class CommunityToolkit.Mvvm.SourceGenerators.ComponentModel.Models.ValidationInfo : object {
    [CompilerGeneratedAttribute]
private string <FilenameHint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EquatableArray`1<string> <PropertyNames>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public string FilenameHint { get; public set; }
    public string TypeName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EquatableArray`1<string> PropertyNames { get; public set; }
    public ValidationInfo(string FilenameHint, string TypeName, EquatableArray`1<string> PropertyNames);
    [CompilerGeneratedAttribute]
private ValidationInfo(ValidationInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_FilenameHint();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FilenameHint(string value);
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TypeName(string value);
    [CompilerGeneratedAttribute]
public EquatableArray`1<string> get_PropertyNames();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PropertyNames(EquatableArray`1<string> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(ValidationInfo left, ValidationInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(ValidationInfo left, ValidationInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(ValidationInfo other);
    [CompilerGeneratedAttribute]
public ValidationInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& FilenameHint, String& TypeName, EquatableArray`1& PropertyNames);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Diagnostics.DiagnosticDescriptors : object {
    public static string InheritFromObservableObjectInsteadOfUsingINotifyPropertyChangedAttributeId;
    public static string InheritFromObservableObjectInsteadOfUsingObservableObjectAttributeId;
    public static string FieldReferenceForObservablePropertyFieldId;
    public static string AsyncVoidReturningRelayCommandMethodId;
    public static DiagnosticDescriptor DuplicateINotifyPropertyChangedInterfaceForINotifyPropertyChangedAttributeError;
    public static DiagnosticDescriptor DuplicateINotifyPropertyChangedInterfaceForObservableObjectAttributeError;
    public static DiagnosticDescriptor DuplicateINotifyPropertyChangingInterfaceForObservableObjectAttributeError;
    public static DiagnosticDescriptor DuplicateObservableRecipientError;
    public static DiagnosticDescriptor MissingBaseObservableObjectFunctionalityError;
    public static DiagnosticDescriptor MissingObservableValidatorInheritanceForValidationAttributeError;
    public static DiagnosticDescriptor InvalidRelayCommandMethodSignatureError;
    public static DiagnosticDescriptor UnsupportedCSharpLanguageVersionError;
    public static DiagnosticDescriptor InvalidCanExecuteMemberNameError;
    public static DiagnosticDescriptor MultipleCanExecuteMemberNameMatchesError;
    public static DiagnosticDescriptor InvalidCanExecuteMemberError;
    public static DiagnosticDescriptor InvalidConcurrentExecutionsParameterError;
    public static DiagnosticDescriptor InvalidIncludeCancelCommandParameterError;
    public static DiagnosticDescriptor ObservablePropertyNameCollisionError;
    public static DiagnosticDescriptor NotifyPropertyChangedForInvalidTargetError;
    public static DiagnosticDescriptor NotifyCanExecuteChangedForInvalidTargetError;
    public static DiagnosticDescriptor InvalidAttributeCombinationForINotifyPropertyChangedAttributeError;
    public static DiagnosticDescriptor InvalidAttributeCombinationForObservableObjectAttributeError;
    public static DiagnosticDescriptor InvalidContainingTypeForObservablePropertyFieldError;
    public static DiagnosticDescriptor FieldWithOrphanedDependentObservablePropertyAttributesError;
    public static DiagnosticDescriptor InvalidAttributeCombinationForObservableRecipientAttributeError;
    public static DiagnosticDescriptor InvalidContainingTypeForNotifyPropertyChangedRecipientsFieldError;
    public static DiagnosticDescriptor MultipleRelayCommandMethodOverloadsError;
    public static DiagnosticDescriptor InvalidObservablePropertyError;
    public static DiagnosticDescriptor MissingObservableValidatorInheritanceForNotifyDataErrorInfoError;
    public static DiagnosticDescriptor MissingValidationAttributesForNotifyDataErrorInfoError;
    public static DiagnosticDescriptor InvalidTypeForNotifyPropertyChangedRecipientsError;
    public static DiagnosticDescriptor InvalidTypeForNotifyDataErrorInfoError;
    public static DiagnosticDescriptor UnnecessaryNotifyPropertyChangedRecipientsAttributeOnFieldWarning;
    public static DiagnosticDescriptor UnnecessaryNotifyDataErrorInfoAttributeOnFieldWarning;
    public static DiagnosticDescriptor InvalidFlowExceptionsToTaskSchedulerParameterError;
    public static DiagnosticDescriptor InheritFromObservableObjectInsteadOfUsingINotifyPropertyChangedAttributeWarning;
    public static DiagnosticDescriptor InheritFromObservableObjectInsteadOfUsingObservableObjectAttributeWarning;
    public static DiagnosticDescriptor FieldReferenceForObservablePropertyFieldWarning;
    public static DiagnosticDescriptor InvalidPropertyTargetedAttributeOnObservablePropertyField;
    public static DiagnosticDescriptor InvalidFieldOrPropertyTargetedAttributeOnRelayCommandMethod;
    public static DiagnosticDescriptor InvalidPropertyTargetedAttributeExpressionOnObservablePropertyField;
    public static DiagnosticDescriptor InvalidFieldOrPropertyTargetedAttributeExpressionOnRelayCommandMethod;
    public static DiagnosticDescriptor AsyncVoidReturningRelayCommandMethod;
    public static DiagnosticDescriptor AutoPropertyBackingFieldObservableProperty;
    private static DiagnosticDescriptors();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Diagnostics.SuppressionDescriptors : object {
    public static SuppressionDescriptor PropertyAttributeListForObservablePropertyField;
    public static SuppressionDescriptor FieldOrPropertyAttributeListForRelayCommandMethod;
    private static SuppressionDescriptors();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.AttributeDataExtensions : object {
    [ExtensionAttribute]
public static bool HasNamedArgument(AttributeData attributeData, string name, T value);
    [ExtensionAttribute]
public static Location GetLocation(AttributeData attributeData);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static T GetNamedArgument(AttributeData attributeData, string name, T fallback);
    [ExtensionAttribute]
public static bool TryGetNamedArgument(AttributeData attributeData, string name, T& value);
    [ExtensionAttribute]
public static IEnumerable`1<T> GetConstructorArguments(AttributeData attributeData);
    [IteratorStateMachineAttribute("CommunityToolkit.Mvvm.SourceGenerators.Extensions.AttributeDataExtensions/<<GetConstructorArguments>g__Enumerate|4_0>d`1")]
[CompilerGeneratedAttribute]
internal static IEnumerable`1<T> <GetConstructorArguments>g__Enumerate|4_0(IEnumerable`1<TypedConstant> constants);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.CompilationExtensions : object {
    [ExtensionAttribute]
public static bool HasLanguageVersionAtLeastEqualTo(Compilation compilation, LanguageVersion languageVersion);
    [ExtensionAttribute]
public static bool HasAccessibleTypeWithMetadataName(Compilation compilation, string fullyQualifiedMetadataName);
    [ExtensionAttribute]
public static bool TryBuildNamedTypeSymbolMap(Compilation compilation, IEnumerable`1<KeyValuePair`2<T, string>> typeNames, ImmutableDictionary`2& typeSymbols);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.DiagnosticsExtensions : object {
    [ExtensionAttribute]
public static void Add(ImmutableArrayBuilder`1& diagnostics, DiagnosticDescriptor descriptor, ISymbol symbol, Object[] args);
    [ExtensionAttribute]
public static void Add(ImmutableArrayBuilder`1& diagnostics, DiagnosticDescriptor descriptor, SyntaxNode node, Object[] args);
    [ExtensionAttribute]
public static void ReportDiagnostics(IncrementalGeneratorInitializationContext context, IncrementalValuesProvider`1<DiagnosticInfo> diagnostics);
    [ExtensionAttribute]
public static void ReportDiagnostics(IncrementalGeneratorInitializationContext context, IncrementalValuesProvider`1<EquatableArray`1<DiagnosticInfo>> diagnostics);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class CommunityToolkit.Mvvm.SourceGenerators.Extensions.GeneratorAttributeSyntaxContextWithOptions : ValueType {
    [CompilerGeneratedAttribute]
private SyntaxNode <TargetNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ISymbol <TargetSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private SemanticModel <SemanticModel>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<AttributeData> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private AnalyzerConfigOptions <GlobalOptions>k__BackingField;
    public SyntaxNode TargetNode { get; }
    public ISymbol TargetSymbol { get; }
    public SemanticModel SemanticModel { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<AttributeData> Attributes { get; }
    public AnalyzerConfigOptions GlobalOptions { get; }
    public GeneratorAttributeSyntaxContextWithOptions(GeneratorAttributeSyntaxContext syntaxContext, AnalyzerConfigOptions globalOptions);
    [CompilerGeneratedAttribute]
public SyntaxNode get_TargetNode();
    [CompilerGeneratedAttribute]
public ISymbol get_TargetSymbol();
    [CompilerGeneratedAttribute]
public SemanticModel get_SemanticModel();
    [CompilerGeneratedAttribute]
public ImmutableArray`1<AttributeData> get_Attributes();
    [CompilerGeneratedAttribute]
public AnalyzerConfigOptions get_GlobalOptions();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.INamedTypeSymbolExtensions : object {
    [IteratorStateMachineAttribute("CommunityToolkit.Mvvm.SourceGenerators.Extensions.INamedTypeSymbolExtensions/<GetAllMembers>d__0")]
[ExtensionAttribute]
public static IEnumerable`1<ISymbol> GetAllMembers(INamedTypeSymbol symbol);
    [IteratorStateMachineAttribute("CommunityToolkit.Mvvm.SourceGenerators.Extensions.INamedTypeSymbolExtensions/<GetAllMembers>d__1")]
[ExtensionAttribute]
public static IEnumerable`1<ISymbol> GetAllMembers(INamedTypeSymbol symbol, string name);
}
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.IncrementalGeneratorInitializationContextExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IncrementalValuesProvider`1<T> ForAttributeWithMetadataNameAndOptions(IncrementalGeneratorInitializationContext context, string fullyQualifiedMetadataName, Func`3<SyntaxNode, CancellationToken, bool> predicate, Func`3<GeneratorAttributeSyntaxContextWithOptions, CancellationToken, T> transform);
    [ExtensionAttribute]
public static void RegisterConditionalSourceOutput(IncrementalGeneratorInitializationContext context, IncrementalValueProvider`1<bool> source, Action`1<SourceProductionContext> action);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void RegisterConditionalImplementationSourceOutput(IncrementalGeneratorInitializationContext context, IncrementalValueProvider`1<ValueTuple`2<bool, T>> source, Action`2<SourceProductionContext, T> action);
    [ExtensionAttribute]
public static void ReportDiagnostics(IncrementalGeneratorInitializationContext context, IncrementalValuesProvider`1<ImmutableArray`1<Diagnostic>> diagnostics);
    [ExtensionAttribute]
public static void ReportDiagnostics(IncrementalGeneratorInitializationContext context, IncrementalValuesProvider`1<Diagnostic> diagnostics);
}
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.IncrementalValuesProviderExtensions : object {
    [ExtensionAttribute]
public static IncrementalValuesProvider`1<ValueTuple`2<TKey, EquatableArray`1<TElement>>> GroupBy(IncrementalValuesProvider`1<ValueTuple`2<TLeft, TRight>> source, Func`2<ValueTuple`2<TLeft, TRight>, TKey> keySelector, Func`2<ValueTuple`2<TLeft, TRight>, TElement> elementSelector);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.ISymbolExtensions : object {
    [ExtensionAttribute]
public static string GetFullyQualifiedName(ISymbol symbol);
    [ExtensionAttribute]
public static string GetFullyQualifiedNameWithNullabilityAnnotations(ISymbol symbol);
    [ExtensionAttribute]
public static bool HasFullyQualifiedName(ISymbol symbol, string name);
    [ExtensionAttribute]
public static bool HasAttributeWithFullyQualifiedMetadataName(ISymbol symbol, string name);
    [ExtensionAttribute]
public static bool HasAttributeWithType(ISymbol symbol, ITypeSymbol typeSymbol);
    [ExtensionAttribute]
public static bool TryGetAttributeWithType(ISymbol symbol, ITypeSymbol typeSymbol, AttributeData& attributeData);
    [ExtensionAttribute]
public static Accessibility GetEffectiveAccessibility(ISymbol symbol);
    [ExtensionAttribute]
public static bool CanBeAccessedFrom(ISymbol symbol, IAssemblySymbol assembly);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.ITypeSymbolExtensions : object {
    [ExtensionAttribute]
public static bool HasOrInheritsFromFullyQualifiedMetadataName(ITypeSymbol typeSymbol, string name);
    [ExtensionAttribute]
public static bool InheritsFromFullyQualifiedMetadataName(ITypeSymbol typeSymbol, string name);
    [ExtensionAttribute]
public static bool InheritsFromType(ITypeSymbol typeSymbol, ITypeSymbol baseTypeSymbol);
    [ExtensionAttribute]
public static bool HasInterfaceWithFullyQualifiedMetadataName(ITypeSymbol typeSymbol, string name);
    [ExtensionAttribute]
public static bool HasOrInheritsAttribute(ITypeSymbol typeSymbol, Func`2<AttributeData, bool> predicate);
    [ExtensionAttribute]
public static bool HasOrInheritsAttributeWithFullyQualifiedMetadataName(ITypeSymbol typeSymbol, string name);
    [ExtensionAttribute]
public static bool HasOrInheritsAttributeWithType(ITypeSymbol typeSymbol, ITypeSymbol baseTypeSymbol);
    [ExtensionAttribute]
public static bool InheritsAttributeWithFullyQualifiedMetadataName(ITypeSymbol typeSymbol, string name);
    [ExtensionAttribute]
public static bool HasFullyQualifiedMetadataName(ITypeSymbol symbol, string name);
    [ExtensionAttribute]
public static string GetFullyQualifiedMetadataName(ITypeSymbol symbol);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
private static void AppendFullyQualifiedMetadataName(ITypeSymbol symbol, ImmutableArrayBuilder`1& builder);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static void <AppendFullyQualifiedMetadataName>g__BuildFrom|10_0(ISymbol symbol, ImmutableArrayBuilder`1& builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.MemberDeclarationSyntaxExtensions : object {
    [ExtensionAttribute]
public static MemberDeclarationSyntax ReplaceModifier(MemberDeclarationSyntax memberDeclaration, SyntaxKind oldKind, SyntaxKind newKind);
    [ExtensionAttribute]
public static MemberDeclarationSyntax RemoveModifier(MemberDeclarationSyntax memberDeclaration, SyntaxKind kind);
}
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.MethodDeclarationSyntaxExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool HasOrPotentiallyHasAttributeLists(MethodDeclarationSyntax methodDeclaration);
}
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.SourceProductionContextExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void AddSource(SourceProductionContext context, string name, CompilationUnitSyntax compilationUnit);
}
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.SymbolInfoExtensions : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static bool TryGetAttributeTypeSymbol(SymbolInfo symbolInfo, INamedTypeSymbol& typeSymbol);
}
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.SyntaxNodeExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool IsFirstSyntaxDeclarationForSymbol(SyntaxNode syntaxNode, ISymbol symbol);
}
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.SyntaxTokenExtensions : object {
    [ExtensionAttribute]
public static void Deconstruct(SyntaxToken syntaxToken, SyntaxKind& syntaxKind);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.TypeDeclarationSyntaxExtensions : object {
    [ExtensionAttribute]
public static bool HasOrPotentiallyHasBaseTypes(TypeDeclarationSyntax typeDeclaration);
    [ExtensionAttribute]
public static bool HasOrPotentiallyHasAttributes(TypeDeclarationSyntax typeDeclaration);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.FieldReferenceForObservablePropertyFieldAnalyzer : DiagnosticAnalyzer {
    internal static string FieldNameKey;
    internal static string PropertyNameKey;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<DiagnosticDescriptor> <SupportedDiagnostics>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    [CompilerGeneratedAttribute]
public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.FieldWithOrphanedDependentObservablePropertyAttributesAnalyzer : DiagnosticAnalyzer {
    private static ImmutableDictionary`2<string, string> GeneratorAttributeNamesToFullyQualifiedNamesMap;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<DiagnosticDescriptor> <SupportedDiagnostics>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    private static FieldWithOrphanedDependentObservablePropertyAttributesAnalyzer();
    [CompilerGeneratedAttribute]
public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
}
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Helpers.EquatableArray : object {
    [ExtensionAttribute]
public static EquatableArray`1<T> AsEquatableArray(ImmutableArray`1<T> array);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
[DefaultMemberAttribute("Item")]
internal class CommunityToolkit.Mvvm.SourceGenerators.Helpers.EquatableArray`1 : ValueType {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private T[] array;
    [IsReadOnlyAttribute]
public T& modreq(System.Runtime.InteropServices.InAttribute) Item { get; }
    public bool IsEmpty { get; }
    public EquatableArray`1(ImmutableArray`1<T> array);
    public T& modreq(System.Runtime.InteropServices.InAttribute) get_Item(int index);
    public bool get_IsEmpty();
    public sealed virtual bool Equals(EquatableArray`1<T> array);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public ImmutableArray`1<T> AsImmutableArray();
    public static EquatableArray`1<T> FromImmutableArray(ImmutableArray`1<T> array);
    public ReadOnlySpan`1<T> AsSpan();
    public T[] ToArray();
    public Enumerator<T> GetEnumerator();
    private sealed virtual override IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public static EquatableArray`1<T> op_Implicit(ImmutableArray`1<T> array);
    public static ImmutableArray`1<T> op_Implicit(EquatableArray`1<T> array);
    public static bool op_Equality(EquatableArray`1<T> left, EquatableArray`1<T> right);
    public static bool op_Inequality(EquatableArray`1<T> left, EquatableArray`1<T> right);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsByRefLikeAttribute]
[ObsoleteAttribute("Types with embedded references are not supported in this version of your compiler.", "True")]
[CompilerFeatureRequiredAttribute("RefStructs")]
internal class CommunityToolkit.Mvvm.SourceGenerators.Helpers.ImmutableArrayBuilder`1 : ValueType {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Writer<T> writer;
    public int Count { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[UnscopedRefAttribute]
public ReadOnlySpan`1<T> WrittenSpan { get; }
    private ImmutableArrayBuilder`1(Writer<T> writer);
    public static ImmutableArrayBuilder`1<T> Rent();
    [IsReadOnlyAttribute]
public int get_Count();
    [IsReadOnlyAttribute]
public ReadOnlySpan`1<T> get_WrittenSpan();
    [IsReadOnlyAttribute]
public void Add(T item);
    [IsReadOnlyAttribute]
public void AddRange(ReadOnlySpan`1<T> items);
    [IsReadOnlyAttribute]
public ImmutableArray`1<T> ToImmutable();
    [IsReadOnlyAttribute]
public T[] ToArray();
    [IsReadOnlyAttribute]
public IEnumerable`1<T> AsEnumerable();
    [IsReadOnlyAttribute]
public virtual string ToString();
    public void Dispose();
}
[GeneratorAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.IMessengerRegisterAllGenerator : object {
    public sealed virtual void Initialize(IncrementalGeneratorInitializationContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratorAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.INotifyPropertyChangedGenerator : TransitiveMembersGenerator`1<INotifyPropertyChangedInfo> {
    private protected virtual INotifyPropertyChangedInfo ValidateTargetTypeAndGetInfo(INamedTypeSymbol typeSymbol, AttributeData attributeData, Compilation compilation, ImmutableArray`1& diagnostics);
    protected virtual ImmutableArray`1<MemberDeclarationSyntax> FilterDeclaredMembers(INotifyPropertyChangedInfo info, ImmutableArray`1<MemberDeclarationSyntax> memberDeclarations);
}
public enum CommunityToolkit.Mvvm.SourceGenerators.Input.Models.CanExecuteExpressionType : Enum {
    public int value__;
    public static CanExecuteExpressionType MethodInvocationLambdaWithDiscard;
    public static CanExecuteExpressionType PropertyAccessLambda;
    public static CanExecuteExpressionType PropertyAccessLambdaWithDiscard;
    public static CanExecuteExpressionType MethodGroup;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class CommunityToolkit.Mvvm.SourceGenerators.Input.Models.CommandInfo : object {
    [CompilerGeneratedAttribute]
private string <MethodName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FieldName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CommandInterfaceType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CommandClassType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DelegateType>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EquatableArray`1<string> <CommandTypeArguments>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EquatableArray`1<string> <DelegateTypeArguments>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <CanExecuteMemberName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<CanExecuteExpressionType> <CanExecuteExpressionType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowConcurrentExecutions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FlowExceptionsToTaskScheduler>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeCancelCommand>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EquatableArray`1<AttributeInfo> <ForwardedFieldAttributes>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EquatableArray`1<AttributeInfo> <ForwardedPropertyAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public string MethodName { get; public set; }
    public string FieldName { get; public set; }
    public string PropertyName { get; public set; }
    public string CommandInterfaceType { get; public set; }
    public string CommandClassType { get; public set; }
    public string DelegateType { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EquatableArray`1<string> CommandTypeArguments { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EquatableArray`1<string> DelegateTypeArguments { get; public set; }
    [NullableAttribute("2")]
public string CanExecuteMemberName { get; public set; }
    public Nullable`1<CanExecuteExpressionType> CanExecuteExpressionType { get; public set; }
    public bool AllowConcurrentExecutions { get; public set; }
    public bool FlowExceptionsToTaskScheduler { get; public set; }
    public bool IncludeCancelCommand { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EquatableArray`1<AttributeInfo> ForwardedFieldAttributes { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EquatableArray`1<AttributeInfo> ForwardedPropertyAttributes { get; public set; }
    public CommandInfo(string MethodName, string FieldName, string PropertyName, string CommandInterfaceType, string CommandClassType, string DelegateType, EquatableArray`1<string> CommandTypeArguments, EquatableArray`1<string> DelegateTypeArguments, string CanExecuteMemberName, Nullable`1<CanExecuteExpressionType> CanExecuteExpressionType, bool AllowConcurrentExecutions, bool FlowExceptionsToTaskScheduler, bool IncludeCancelCommand, EquatableArray`1<AttributeInfo> ForwardedFieldAttributes, EquatableArray`1<AttributeInfo> ForwardedPropertyAttributes);
    [CompilerGeneratedAttribute]
private CommandInfo(CommandInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_MethodName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MethodName(string value);
    [CompilerGeneratedAttribute]
public string get_FieldName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FieldName(string value);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public string get_CommandInterfaceType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CommandInterfaceType(string value);
    [CompilerGeneratedAttribute]
public string get_CommandClassType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CommandClassType(string value);
    [CompilerGeneratedAttribute]
public string get_DelegateType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DelegateType(string value);
    [CompilerGeneratedAttribute]
public EquatableArray`1<string> get_CommandTypeArguments();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CommandTypeArguments(EquatableArray`1<string> value);
    [CompilerGeneratedAttribute]
public EquatableArray`1<string> get_DelegateTypeArguments();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DelegateTypeArguments(EquatableArray`1<string> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_CanExecuteMemberName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CanExecuteMemberName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<CanExecuteExpressionType> get_CanExecuteExpressionType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CanExecuteExpressionType(Nullable`1<CanExecuteExpressionType> value);
    [CompilerGeneratedAttribute]
public bool get_AllowConcurrentExecutions();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AllowConcurrentExecutions(bool value);
    [CompilerGeneratedAttribute]
public bool get_FlowExceptionsToTaskScheduler();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FlowExceptionsToTaskScheduler(bool value);
    [CompilerGeneratedAttribute]
public bool get_IncludeCancelCommand();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IncludeCancelCommand(bool value);
    [CompilerGeneratedAttribute]
public EquatableArray`1<AttributeInfo> get_ForwardedFieldAttributes();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ForwardedFieldAttributes(EquatableArray`1<AttributeInfo> value);
    [CompilerGeneratedAttribute]
public EquatableArray`1<AttributeInfo> get_ForwardedPropertyAttributes();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ForwardedPropertyAttributes(EquatableArray`1<AttributeInfo> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(CommandInfo left, CommandInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(CommandInfo left, CommandInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(CommandInfo other);
    [CompilerGeneratedAttribute]
public CommandInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& MethodName, String& FieldName, String& PropertyName, String& CommandInterfaceType, String& CommandClassType, String& DelegateType, EquatableArray`1& CommandTypeArguments, EquatableArray`1& DelegateTypeArguments, String& CanExecuteMemberName, Nullable`1& CanExecuteExpressionType, Boolean& AllowConcurrentExecutions, Boolean& FlowExceptionsToTaskScheduler, Boolean& IncludeCancelCommand, EquatableArray`1& ForwardedFieldAttributes, EquatableArray`1& ForwardedPropertyAttributes);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.InvalidClassLevelNotifyDataErrorInfoAttributeAnalyzer : DiagnosticAnalyzer {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<DiagnosticDescriptor> <SupportedDiagnostics>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    [CompilerGeneratedAttribute]
public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    [NullableContextAttribute("1")]
public virtual void Initialize(AnalysisContext context);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.InvalidClassLevelNotifyPropertyChangedRecipientsAttributeAnalyzer : DiagnosticAnalyzer {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<DiagnosticDescriptor> <SupportedDiagnostics>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    [CompilerGeneratedAttribute]
public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    [NullableContextAttribute("1")]
public virtual void Initialize(AnalysisContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class CommunityToolkit.Mvvm.SourceGenerators.Messaging.Models.RecipientInfo : object {
    [CompilerGeneratedAttribute]
private string <FilenameHint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EquatableArray`1<string> <MessageTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public string FilenameHint { get; public set; }
    public string TypeName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EquatableArray`1<string> MessageTypes { get; public set; }
    public RecipientInfo(string FilenameHint, string TypeName, EquatableArray`1<string> MessageTypes);
    [CompilerGeneratedAttribute]
private RecipientInfo(RecipientInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_FilenameHint();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FilenameHint(string value);
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TypeName(string value);
    [CompilerGeneratedAttribute]
public EquatableArray`1<string> get_MessageTypes();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MessageTypes(EquatableArray`1<string> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(RecipientInfo left, RecipientInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(RecipientInfo left, RecipientInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(RecipientInfo other);
    [CompilerGeneratedAttribute]
public RecipientInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& FilenameHint, String& TypeName, EquatableArray`1& MessageTypes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class CommunityToolkit.Mvvm.SourceGenerators.Models.DiagnosticInfo : object {
    [CompilerGeneratedAttribute]
private DiagnosticDescriptor <Descriptor>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private SyntaxTree <SyntaxTree>k__BackingField;
    [CompilerGeneratedAttribute]
private TextSpan <TextSpan>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EquatableArray`1<string> <Arguments>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public DiagnosticDescriptor Descriptor { get; public set; }
    [NullableAttribute("2")]
public SyntaxTree SyntaxTree { get; public set; }
    public TextSpan TextSpan { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EquatableArray`1<string> Arguments { get; public set; }
    public DiagnosticInfo(DiagnosticDescriptor Descriptor, SyntaxTree SyntaxTree, TextSpan TextSpan, EquatableArray`1<string> Arguments);
    [CompilerGeneratedAttribute]
private DiagnosticInfo(DiagnosticInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public DiagnosticDescriptor get_Descriptor();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Descriptor(DiagnosticDescriptor value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public SyntaxTree get_SyntaxTree();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SyntaxTree(SyntaxTree value);
    [CompilerGeneratedAttribute]
public TextSpan get_TextSpan();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TextSpan(TextSpan value);
    [CompilerGeneratedAttribute]
public EquatableArray`1<string> get_Arguments();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Arguments(EquatableArray`1<string> value);
    public Diagnostic ToDiagnostic();
    public static DiagnosticInfo Create(DiagnosticDescriptor descriptor, ISymbol symbol, Object[] args);
    public static DiagnosticInfo Create(DiagnosticDescriptor descriptor, SyntaxNode node, Object[] args);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(DiagnosticInfo left, DiagnosticInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(DiagnosticInfo left, DiagnosticInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(DiagnosticInfo other);
    [CompilerGeneratedAttribute]
public DiagnosticInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(DiagnosticDescriptor& Descriptor, SyntaxTree& SyntaxTree, TextSpan& TextSpan, EquatableArray`1& Arguments);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class CommunityToolkit.Mvvm.SourceGenerators.Models.HierarchyInfo : object {
    [CompilerGeneratedAttribute]
private string <FilenameHint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MetadataName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EquatableArray`1<TypeInfo> <Hierarchy>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public string FilenameHint { get; public set; }
    public string MetadataName { get; public set; }
    public string Namespace { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EquatableArray`1<TypeInfo> Hierarchy { get; public set; }
    public HierarchyInfo(string FilenameHint, string MetadataName, string Namespace, EquatableArray`1<TypeInfo> Hierarchy);
    [CompilerGeneratedAttribute]
private HierarchyInfo(HierarchyInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_FilenameHint();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FilenameHint(string value);
    [CompilerGeneratedAttribute]
public string get_MetadataName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MetadataName(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Namespace(string value);
    [CompilerGeneratedAttribute]
public EquatableArray`1<TypeInfo> get_Hierarchy();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Hierarchy(EquatableArray`1<TypeInfo> value);
    public static HierarchyInfo From(INamedTypeSymbol typeSymbol);
    public CompilationUnitSyntax GetCompilationUnit(ImmutableArray`1<MemberDeclarationSyntax> memberDeclarations, BaseListSyntax baseList);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(HierarchyInfo left, HierarchyInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(HierarchyInfo left, HierarchyInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(HierarchyInfo other);
    [CompilerGeneratedAttribute]
public HierarchyInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& FilenameHint, String& MetadataName, String& Namespace, EquatableArray`1& Hierarchy);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class CommunityToolkit.Mvvm.SourceGenerators.Models.Result`1 : object {
    [CompilerGeneratedAttribute]
private TValue <Value>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EquatableArray`1<DiagnosticInfo> <Errors>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public TValue Value { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EquatableArray`1<DiagnosticInfo> Errors { get; public set; }
    public Result`1(TValue Value, EquatableArray`1<DiagnosticInfo> Errors);
    [CompilerGeneratedAttribute]
private Result`1(Result`1<TValue> original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public TValue get_Value();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Value(TValue value);
    [CompilerGeneratedAttribute]
public EquatableArray`1<DiagnosticInfo> get_Errors();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Errors(EquatableArray`1<DiagnosticInfo> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(Result`1<TValue> left, Result`1<TValue> right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(Result`1<TValue> left, Result`1<TValue> right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(Result`1<TValue> other);
    [CompilerGeneratedAttribute]
public Result`1<TValue> <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(TValue& Value, EquatableArray`1& Errors);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class CommunityToolkit.Mvvm.SourceGenerators.Models.TypeInfo : object {
    [CompilerGeneratedAttribute]
private string <QualifiedName>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeKind <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRecord>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public string QualifiedName { get; public set; }
    public TypeKind Kind { get; public set; }
    public bool IsRecord { get; public set; }
    public TypeInfo(string QualifiedName, TypeKind Kind, bool IsRecord);
    [CompilerGeneratedAttribute]
private TypeInfo(TypeInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_QualifiedName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_QualifiedName(string value);
    [CompilerGeneratedAttribute]
public TypeKind get_Kind();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Kind(TypeKind value);
    [CompilerGeneratedAttribute]
public bool get_IsRecord();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsRecord(bool value);
    public TypeDeclarationSyntax GetSyntax();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(TypeInfo left, TypeInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(TypeInfo left, TypeInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(TypeInfo other);
    [CompilerGeneratedAttribute]
public TypeInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& QualifiedName, TypeKind& Kind, Boolean& IsRecord);
}
[GeneratorAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.ObservableObjectGenerator : TransitiveMembersGenerator`1<int> {
    [NullableContextAttribute("1")]
private protected virtual int ValidateTargetTypeAndGetInfo(INamedTypeSymbol typeSymbol, AttributeData attributeData, Compilation compilation, ImmutableArray`1& diagnostics);
    protected virtual ImmutableArray`1<MemberDeclarationSyntax> FilterDeclaredMembers(int info, ImmutableArray`1<MemberDeclarationSyntax> memberDeclarations);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyAttributeWithPropertyTargetDiagnosticSuppressor : DiagnosticSuppressor {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<SuppressionDescriptor> SupportedSuppressions { get; }
    public virtual ImmutableArray`1<SuppressionDescriptor> get_SupportedSuppressions();
    public virtual void ReportSuppressions(SuppressionAnalysisContext context);
}
[GeneratorAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator : object {
    public sealed virtual void Initialize(IncrementalGeneratorInitializationContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratorAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.ObservableRecipientGenerator : TransitiveMembersGenerator`1<ObservableRecipientInfo> {
    private protected virtual ObservableRecipientInfo ValidateTargetTypeAndGetInfo(INamedTypeSymbol typeSymbol, AttributeData attributeData, Compilation compilation, ImmutableArray`1& diagnostics);
    protected virtual ImmutableArray`1<MemberDeclarationSyntax> FilterDeclaredMembers(ObservableRecipientInfo info, ImmutableArray`1<MemberDeclarationSyntax> memberDeclarations);
    [CompilerGeneratedAttribute]
internal static MemberDeclarationSyntax <FilterDeclaredMembers>g__FixupFilteredMemberDeclaration|2_0(MemberDeclarationSyntax member, <>c__DisplayClass2_0& );
}
[GeneratorAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.ObservableValidatorValidateAllPropertiesGenerator : object {
    public sealed virtual void Initialize(IncrementalGeneratorInitializationContext context);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.RelayCommandAttributeWithFieldOrPropertyTargetDiagnosticSuppressor : DiagnosticSuppressor {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<SuppressionDescriptor> SupportedSuppressions { get; }
    public virtual ImmutableArray`1<SuppressionDescriptor> get_SupportedSuppressions();
    public virtual void ReportSuppressions(SuppressionAnalysisContext context);
}
[GeneratorAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.RelayCommandGenerator : object {
    public sealed virtual void Initialize(IncrementalGeneratorInitializationContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class CommunityToolkit.Mvvm.SourceGenerators.TransitiveMembersGenerator`1 : object {
    private string fullyQualifiedAttributeMetadataName;
    private ClassDeclarationSyntax classDeclaration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableArray`1<MemberDeclarationSyntax> sealedMemberDeclarations;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableArray`1<MemberDeclarationSyntax> nonSealedMemberDeclarations;
    private protected TransitiveMembersGenerator`1(string fullyQualifiedAttributeMetadataName);
    public sealed virtual void Initialize(IncrementalGeneratorInitializationContext context);
    private protected abstract virtual TInfo ValidateTargetTypeAndGetInfo(INamedTypeSymbol typeSymbol, AttributeData attributeData, Compilation compilation, ImmutableArray`1& diagnostics);
    protected abstract virtual ImmutableArray`1<MemberDeclarationSyntax> FilterDeclaredMembers(TInfo info, ImmutableArray`1<MemberDeclarationSyntax> memberDeclarations);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private Result`1<ValueTuple`3<HierarchyInfo, MetadataInfo<TInfo>, TInfo>> <Initialize>b__5_1(GeneratorAttributeSyntaxContext context, CancellationToken token);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <Initialize>b__5_6(SourceProductionContext context, ValueTuple`3<HierarchyInfo, MetadataInfo<TInfo>, TInfo> item);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.UnsupportedCSharpLanguageVersionAnalyzer : DiagnosticAnalyzer {
    private static ImmutableDictionary`2<string, string> GeneratorAttributeNamesToFullyQualifiedNamesMap;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<DiagnosticDescriptor> <SupportedDiagnostics>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    private static UnsupportedCSharpLanguageVersionAnalyzer();
    [CompilerGeneratedAttribute]
public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("6143")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.ExperimentalAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <DiagnosticId>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <UrlFormat>k__BackingField;
    public string DiagnosticId { get; }
    [NullableAttribute("2")]
public string UrlFormat { get; public set; }
    public ExperimentalAttribute(string diagnosticId);
    [CompilerGeneratedAttribute]
public string get_DiagnosticId();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_UrlFormat();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_UrlFormat(string value);
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[AttributeUsageAttribute("32")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.SetsRequiredMembersAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.StringSyntaxAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Syntax>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Object[] <Arguments>k__BackingField;
    public static string CompositeFormat;
    public static string DateOnlyFormat;
    public static string DateTimeFormat;
    public static string EnumFormat;
    public static string GuidFormat;
    public static string Json;
    public static string NumericFormat;
    public static string Regex;
    public static string TimeOnlyFormat;
    public static string TimeSpanFormat;
    public static string Uri;
    public static string Xml;
    public string Syntax { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object[] Arguments { get; }
    public StringSyntaxAttribute(string syntax);
    public StringSyntaxAttribute(string syntax, Object[] arguments);
    [CompilerGeneratedAttribute]
public string get_Syntax();
    [CompilerGeneratedAttribute]
public Object[] get_Arguments();
}
[AttributeUsageAttribute("2240")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.UnscopedRefAttribute : Attribute {
}
internal class System.HashCode : ValueType {
    private static UInt32 Prime1;
    private static UInt32 Prime2;
    private static UInt32 Prime3;
    private static UInt32 Prime4;
    private static UInt32 Prime5;
    private static UInt32 seed;
    private UInt32 v1;
    private UInt32 v2;
    private UInt32 v3;
    private UInt32 v4;
    private UInt32 queue1;
    private UInt32 queue2;
    private UInt32 queue3;
    private UInt32 length;
    private static HashCode();
    private static UInt32 GenerateGlobalSeed();
    [NullableContextAttribute("1")]
public void Add(T value);
    private static void Initialize(UInt32& v1, UInt32& v2, UInt32& v3, UInt32& v4);
    private static UInt32 Round(UInt32 hash, UInt32 input);
    private static UInt32 QueueRound(UInt32 hash, UInt32 queuedValue);
    private static UInt32 MixState(UInt32 v1, UInt32 v2, UInt32 v3, UInt32 v4);
    private static UInt32 MixEmptyState();
    private static UInt32 MixFinal(UInt32 hash);
    private void Add(int value);
    public int ToHashCode();
    [ObsoleteAttribute("HashCode is a mutable struct and should not be compared with other HashCodes. Use ToHashCode to retrieve the computed hash code.", "True")]
[EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("HashCode is a mutable struct and should not be compared with other HashCodes.", "True")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    private static UInt32 RotateLeft(UInt32 value, int offset);
}
[IsReadOnlyAttribute]
[ExcludeFromCodeCoverageAttribute]
internal class System.Index : ValueType {
    private int _value;
    public static Index Start { get; }
    public static Index End { get; }
    public int Value { get; }
    public bool IsFromEnd { get; }
    public Index(int value, bool fromEnd);
    private Index(int value);
    public static Index get_Start();
    public static Index get_End();
    public static Index FromStart(int value);
    public static Index FromEnd(int value);
    public int get_Value();
    public bool get_IsFromEnd();
    public int GetOffset(int length);
    [NullableContextAttribute("2")]
public virtual bool Equals(object value);
    public sealed virtual bool Equals(Index other);
    public virtual int GetHashCode();
    public static Index op_Implicit(int value);
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
private string ToStringFromEnd();
}
[IsReadOnlyAttribute]
[ExcludeFromCodeCoverageAttribute]
internal class System.Range : ValueType {
    [CompilerGeneratedAttribute]
private Index <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private Index <End>k__BackingField;
    public Index Start { get; }
    public Index End { get; }
    public static Range All { get; }
    public Range(Index start, Index end);
    [CompilerGeneratedAttribute]
public Index get_Start();
    [CompilerGeneratedAttribute]
public Index get_End();
    [NullableContextAttribute("2")]
public virtual bool Equals(object value);
    public sealed virtual bool Equals(Range other);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static Range StartAt(Index start);
    public static Range EndAt(Index end);
    public static Range get_All();
    public ValueTuple`2<int, int> GetOffsetAndLength(int length);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.CallerArgumentExpressionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public CallerArgumentExpressionAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1036")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.CollectionBuilderAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type <BuilderType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MethodName>k__BackingField;
    public Type BuilderType { get; }
    public string MethodName { get; }
    public CollectionBuilderAttribute(Type builderType, string methodName);
    [CompilerGeneratedAttribute]
public Type get_BuilderType();
    [CompilerGeneratedAttribute]
public string get_MethodName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <FeatureName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOptional>k__BackingField;
    public static string RefStructs;
    public static string RequiredMembers;
    public string FeatureName { get; }
    public bool IsOptional { get; public set; }
    public CompilerFeatureRequiredAttribute(string featureName);
    [CompilerGeneratedAttribute]
public string get_FeatureName();
    [CompilerGeneratedAttribute]
public bool get_IsOptional();
    [CompilerGeneratedAttribute]
public void set_IsOptional(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Arguments>k__BackingField;
    public String[] Arguments { get; }
    public InterpolatedStringHandlerArgumentAttribute(string argument);
    public InterpolatedStringHandlerArgumentAttribute(String[] arguments);
    [CompilerGeneratedAttribute]
public String[] get_Arguments();
}
[AttributeUsageAttribute("12")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.InterpolatedStringHandlerAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsByRefLikeAttribute : Attribute {
}
[EditorBrowsableAttribute("1")]
[ExcludeFromCodeCoverageAttribute]
internal static class System.Runtime.CompilerServices.IsExternalInit : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsUnmanagedAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.ModuleInitializerAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[AttributeUsageAttribute("396")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.RequiredMemberAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[EditorBrowsableAttribute("1")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.RequiresLocationAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2048")]
internal class System.Runtime.CompilerServices.ScopedRefAttribute : Attribute {
}
[AttributeUsageAttribute("1774")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.SkipLocalsInitAttribute : Attribute {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("6143")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.Versioning.RequiresPreviewFeaturesAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    public string Url { get; public set; }
    public RequiresPreviewFeaturesAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
}
[GeneratedCodeAttribute("Nerdbank.GitVersioning.Tasks", "3.6.139.59561")]
[ExcludeFromCodeCoverageAttribute]
internal static class ThisAssembly : object {
    internal static string AssemblyConfiguration;
    internal static string AssemblyFileVersion;
    internal static string AssemblyInformationalVersion;
    internal static string AssemblyName;
    internal static string AssemblyTitle;
    internal static string AssemblyVersion;
    internal static DateTime GitCommitDate;
    internal static string GitCommitId;
    internal static bool IsPrerelease;
    internal static bool IsPublicRelease;
    internal static string PublicKey;
    internal static string PublicKeyToken;
    internal static string RootNamespace;
    private static ThisAssembly();
}
