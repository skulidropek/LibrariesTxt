[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class CommunityToolkit.Mvvm.SourceGenerators.ComponentModel.Models.AttributeInfo : object {
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<TypedConstantInfo> <ConstructorArgumentInfo>k__BackingField;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<ValueTuple`2<string, TypedConstantInfo>> <NamedArgumentInfo>k__BackingField;
    private Type EqualityContract { get; }
    public string TypeName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<TypedConstantInfo> ConstructorArgumentInfo { get; public set; }
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<ValueTuple`2<string, TypedConstantInfo>> NamedArgumentInfo { get; public set; }
    public AttributeInfo(string TypeName, ImmutableArray`1<TypedConstantInfo> ConstructorArgumentInfo, ImmutableArray`1<ValueTuple`2<string, TypedConstantInfo>> NamedArgumentInfo);
    [CompilerGeneratedAttribute]
private AttributeInfo(AttributeInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TypeName(string value);
    [CompilerGeneratedAttribute]
public ImmutableArray`1<TypedConstantInfo> get_ConstructorArgumentInfo();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ConstructorArgumentInfo(ImmutableArray`1<TypedConstantInfo> value);
    [CompilerGeneratedAttribute]
public ImmutableArray`1<ValueTuple`2<string, TypedConstantInfo>> get_NamedArgumentInfo();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NamedArgumentInfo(ImmutableArray`1<ValueTuple`2<string, TypedConstantInfo>> value);
    public static AttributeInfo From(AttributeData attributeData);
    public AttributeSyntax GetSyntax();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(AttributeInfo left, AttributeInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(AttributeInfo left, AttributeInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(AttributeInfo other);
    [CompilerGeneratedAttribute]
public AttributeInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& TypeName, ImmutableArray`1& ConstructorArgumentInfo, ImmutableArray`1& NamedArgumentInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class CommunityToolkit.Mvvm.SourceGenerators.ComponentModel.Models.ObservableRecipientInfo : object {
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasExplicitConstructors>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAbstract>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsObservableValidator>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRequiresUnreferencedCodeAttributeAvailable>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasOnActivatedMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasOnDeactivatedMethod>k__BackingField;
    private Type EqualityContract { get; }
    public string TypeName { get; public set; }
    public bool HasExplicitConstructors { get; public set; }
    public bool IsAbstract { get; public set; }
    public bool IsObservableValidator { get; public set; }
    public bool IsRequiresUnreferencedCodeAttributeAvailable { get; public set; }
    public bool HasOnActivatedMethod { get; public set; }
    public bool HasOnDeactivatedMethod { get; public set; }
    public ObservableRecipientInfo(string TypeName, bool HasExplicitConstructors, bool IsAbstract, bool IsObservableValidator, bool IsRequiresUnreferencedCodeAttributeAvailable, bool HasOnActivatedMethod, bool HasOnDeactivatedMethod);
    [CompilerGeneratedAttribute]
private ObservableRecipientInfo(ObservableRecipientInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TypeName(string value);
    [CompilerGeneratedAttribute]
public bool get_HasExplicitConstructors();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HasExplicitConstructors(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsAbstract();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsAbstract(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsObservableValidator();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsObservableValidator(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsRequiresUnreferencedCodeAttributeAvailable();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsRequiresUnreferencedCodeAttributeAvailable(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasOnActivatedMethod();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HasOnActivatedMethod(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasOnDeactivatedMethod();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HasOnDeactivatedMethod(bool value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(ObservableRecipientInfo left, ObservableRecipientInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(ObservableRecipientInfo left, ObservableRecipientInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(ObservableRecipientInfo other);
    [CompilerGeneratedAttribute]
public ObservableRecipientInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& TypeName, Boolean& HasExplicitConstructors, Boolean& IsAbstract, Boolean& IsObservableValidator, Boolean& IsRequiresUnreferencedCodeAttributeAvailable, Boolean& HasOnActivatedMethod, Boolean& HasOnDeactivatedMethod);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class CommunityToolkit.Mvvm.SourceGenerators.ComponentModel.Models.PropertyInfo : object {
    [CompilerGeneratedAttribute]
private string <TypeNameWithNullabilityAnnotations>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FieldName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<string> <PropertyChangingNames>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<string> <PropertyChangedNames>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<string> <NotifiedCommandNames>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <NotifyPropertyChangedRecipients>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <NotifyDataErrorInfo>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<AttributeInfo> <ForwardedAttributes>k__BackingField;
    private Type EqualityContract { get; }
    public string TypeNameWithNullabilityAnnotations { get; public set; }
    public string FieldName { get; public set; }
    public string PropertyName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<string> PropertyChangingNames { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<string> PropertyChangedNames { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<string> NotifiedCommandNames { get; public set; }
    public bool NotifyPropertyChangedRecipients { get; public set; }
    public bool NotifyDataErrorInfo { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<AttributeInfo> ForwardedAttributes { get; public set; }
    public PropertyInfo(string TypeNameWithNullabilityAnnotations, string FieldName, string PropertyName, ImmutableArray`1<string> PropertyChangingNames, ImmutableArray`1<string> PropertyChangedNames, ImmutableArray`1<string> NotifiedCommandNames, bool NotifyPropertyChangedRecipients, bool NotifyDataErrorInfo, ImmutableArray`1<AttributeInfo> ForwardedAttributes);
    [CompilerGeneratedAttribute]
private PropertyInfo(PropertyInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_TypeNameWithNullabilityAnnotations();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TypeNameWithNullabilityAnnotations(string value);
    [CompilerGeneratedAttribute]
public string get_FieldName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FieldName(string value);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public ImmutableArray`1<string> get_PropertyChangingNames();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PropertyChangingNames(ImmutableArray`1<string> value);
    [CompilerGeneratedAttribute]
public ImmutableArray`1<string> get_PropertyChangedNames();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PropertyChangedNames(ImmutableArray`1<string> value);
    [CompilerGeneratedAttribute]
public ImmutableArray`1<string> get_NotifiedCommandNames();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NotifiedCommandNames(ImmutableArray`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_NotifyPropertyChangedRecipients();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NotifyPropertyChangedRecipients(bool value);
    [CompilerGeneratedAttribute]
public bool get_NotifyDataErrorInfo();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NotifyDataErrorInfo(bool value);
    [CompilerGeneratedAttribute]
public ImmutableArray`1<AttributeInfo> get_ForwardedAttributes();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ForwardedAttributes(ImmutableArray`1<AttributeInfo> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(PropertyInfo left, PropertyInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(PropertyInfo left, PropertyInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(PropertyInfo other);
    [CompilerGeneratedAttribute]
public PropertyInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& TypeNameWithNullabilityAnnotations, String& FieldName, String& PropertyName, ImmutableArray`1& PropertyChangingNames, ImmutableArray`1& PropertyChangedNames, ImmutableArray`1& NotifiedCommandNames, Boolean& NotifyPropertyChangedRecipients, Boolean& NotifyDataErrorInfo, ImmutableArray`1& ForwardedAttributes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class CommunityToolkit.Mvvm.SourceGenerators.ComponentModel.Models.TypedConstantInfo : object {
    protected Type EqualityContract { get; }
    [CompilerGeneratedAttribute]
protected TypedConstantInfo(TypedConstantInfo original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public abstract virtual ExpressionSyntax GetSyntax();
    protected abstract virtual bool IsEqualTo(TypedConstantInfo other);
    protected abstract virtual void AddToHashCode(HashCode& hashCode);
    public static TypedConstantInfo From(TypedConstant arg);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(TypedConstantInfo left, TypedConstantInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(TypedConstantInfo left, TypedConstantInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(TypedConstantInfo other);
    [CompilerGeneratedAttribute]
public abstract virtual TypedConstantInfo <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Diagnostics.DiagnosticDescriptors : object {
    public static DiagnosticDescriptor DuplicateINotifyPropertyChangedInterfaceForINotifyPropertyChangedAttributeError;
    public static DiagnosticDescriptor DuplicateINotifyPropertyChangedInterfaceForObservableObjectAttributeError;
    public static DiagnosticDescriptor DuplicateINotifyPropertyChangingInterfaceForObservableObjectAttributeError;
    public static DiagnosticDescriptor DuplicateObservableRecipientError;
    public static DiagnosticDescriptor MissingBaseObservableObjectFunctionalityError;
    public static DiagnosticDescriptor MissingObservableValidatorInheritanceForValidationAttributeError;
    public static DiagnosticDescriptor InvalidRelayCommandMethodSignatureError;
    public static DiagnosticDescriptor UnsupportedCSharpLanguageVersionError;
    public static DiagnosticDescriptor InvalidCanExecuteMemberNameError;
    public static DiagnosticDescriptor MultipleCanExecuteMemberNameMatchesError;
    public static DiagnosticDescriptor InvalidCanExecuteMemberError;
    public static DiagnosticDescriptor InvalidConcurrentExecutionsParameterError;
    public static DiagnosticDescriptor InvalidIncludeCancelCommandParameterError;
    public static DiagnosticDescriptor ObservablePropertyNameCollisionError;
    public static DiagnosticDescriptor NotifyPropertyChangedForInvalidTargetError;
    public static DiagnosticDescriptor NotifyCanExecuteChangedForInvalidTargetError;
    public static DiagnosticDescriptor InvalidAttributeCombinationForINotifyPropertyChangedAttributeError;
    public static DiagnosticDescriptor InvalidAttributeCombinationForObservableObjectAttributeError;
    public static DiagnosticDescriptor InvalidContainingTypeForObservablePropertyFieldError;
    public static DiagnosticDescriptor FieldWithOrphanedDependentObservablePropertyAttributesError;
    public static DiagnosticDescriptor InvalidAttributeCombinationForObservableRecipientAttributeError;
    public static DiagnosticDescriptor InvalidContainingTypeForNotifyPropertyChangedRecipientsFieldError;
    public static DiagnosticDescriptor MultipleRelayCommandMethodOverloadsError;
    public static DiagnosticDescriptor InvalidObservablePropertyError;
    public static DiagnosticDescriptor MissingObservableValidatorInheritanceForNotifyDataErrorInfoError;
    public static DiagnosticDescriptor MissingValidationAttributesForNotifyDataErrorInfoError;
    public static DiagnosticDescriptor InvalidTypeForNotifyPropertyChangedRecipientsError;
    public static DiagnosticDescriptor InvalidTypeForNotifyDataErrorInfoError;
    public static DiagnosticDescriptor UnnecessaryNotifyPropertyChangedRecipientsAttributeOnFieldWarning;
    public static DiagnosticDescriptor UnnecessaryNotifyDataErrorInfoAttributeOnFieldWarning;
    public static DiagnosticDescriptor InvalidFlowExceptionsToTaskSchedulerParameterError;
    private static DiagnosticDescriptors();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Diagnostics.DiagnosticExtensions : object {
    [ExtensionAttribute]
public static void Add(Builder<Diagnostic> diagnostics, DiagnosticDescriptor descriptor, ISymbol symbol, Object[] args);
    [ExtensionAttribute]
public static Diagnostic CreateDiagnostic(DiagnosticDescriptor descriptor, ISymbol symbol, Object[] args);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.AttributeDataExtensions : object {
    [ExtensionAttribute]
public static bool HasNamedArgument(AttributeData attributeData, string name, T value);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static T GetNamedArgument(AttributeData attributeData, string name, T fallback);
    [ExtensionAttribute]
public static bool TryGetNamedArgument(AttributeData attributeData, string name, T& value);
    [ExtensionAttribute]
public static IEnumerable`1<T> GetConstructorArguments(AttributeData attributeData);
    [IteratorStateMachineAttribute("CommunityToolkit.Mvvm.SourceGenerators.Extensions.AttributeDataExtensions/<<GetConstructorArguments>g__Enumerate|3_0>d`1")]
[CompilerGeneratedAttribute]
internal static IEnumerable`1<T> <GetConstructorArguments>g__Enumerate|3_0(IEnumerable`1<TypedConstant> constants);
}
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.CompilationExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool HasAccessibleTypeWithMetadataName(Compilation compilation, string fullyQualifiedMetadataName);
}
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.HashCodeExtensions : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static void AddRange(HashCode& hashCode, ImmutableArray`1<T> items);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void AddRange(HashCode& hashCode, ImmutableArray`1<T> items, IEqualityComparer`1<T> comparer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.IEqualityComparerExtensions : object {
    [ExtensionAttribute]
public static IEqualityComparer`1<ImmutableArray`1<T>> ForImmutableArray(IEqualityComparer`1<T> comparer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.INamedTypeSymbolExtensions : object {
    [ExtensionAttribute]
public static string GetFullMetadataNameForFileName(INamedTypeSymbol symbol);
    [IteratorStateMachineAttribute("CommunityToolkit.Mvvm.SourceGenerators.Extensions.INamedTypeSymbolExtensions/<GetAllMembers>d__1")]
[ExtensionAttribute]
public static IEnumerable`1<ISymbol> GetAllMembers(INamedTypeSymbol symbol);
    [IteratorStateMachineAttribute("CommunityToolkit.Mvvm.SourceGenerators.Extensions.INamedTypeSymbolExtensions/<GetAllMembers>d__2")]
[ExtensionAttribute]
public static IEnumerable`1<ISymbol> GetAllMembers(INamedTypeSymbol symbol, string name);
    [CompilerGeneratedAttribute]
internal static StringBuilder <GetFullMetadataNameForFileName>g__BuildFrom|0_0(ISymbol symbol, StringBuilder builder);
}
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.IncrementalGeneratorInitializationContextExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void FilterWithLanguageVersion(IncrementalGeneratorInitializationContext context, IncrementalValuesProvider`1& source, LanguageVersion languageVersion, DiagnosticDescriptor diagnosticDescriptor);
    [ExtensionAttribute]
public static void RegisterConditionalSourceOutput(IncrementalGeneratorInitializationContext context, IncrementalValueProvider`1<bool> source, Action`1<SourceProductionContext> action);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void RegisterConditionalImplementationSourceOutput(IncrementalGeneratorInitializationContext context, IncrementalValueProvider`1<ValueTuple`2<bool, T>> source, Action`2<SourceProductionContext, T> action);
    [ExtensionAttribute]
public static void ReportDiagnostics(IncrementalGeneratorInitializationContext context, IncrementalValuesProvider`1<ImmutableArray`1<Diagnostic>> diagnostics);
    [ExtensionAttribute]
public static void ReportDiagnostics(IncrementalGeneratorInitializationContext context, IncrementalValuesProvider`1<Diagnostic> diagnostics);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.IncrementalValuesProviderExtensions : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IncrementalValuesProvider`1<ValueTuple`2<TLeft, ImmutableArray`1<TRight>>> GroupBy(IncrementalValuesProvider`1<ValueTuple`2<TLeft, TRight>> source, IEqualityComparer`1<TLeft> comparer);
    [ExtensionAttribute]
public static IncrementalValuesProvider`1<ValueTuple`2<TLeft, TRight>> WithComparers(IncrementalValuesProvider`1<ValueTuple`2<TLeft, TRight>> source, IEqualityComparer`1<TLeft> comparerLeft, IEqualityComparer`1<TRight> comparerRight);
    [ExtensionAttribute]
public static IncrementalValuesProvider`1<ValueTuple`3<T1, T2, T3>> WithComparers(IncrementalValuesProvider`1<ValueTuple`3<T1, T2, T3>> source, IEqualityComparer`1<T1> comparer1, IEqualityComparer`1<T2> comparer2, IEqualityComparer`1<T3> comparer3);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.ISymbolExtensions : object {
    [ExtensionAttribute]
public static string GetFullyQualifiedName(ISymbol symbol);
    [ExtensionAttribute]
public static string GetFullyQualifiedNameWithNullabilityAnnotations(ISymbol symbol);
    [ExtensionAttribute]
public static bool HasFullyQualifiedName(ISymbol symbol, string name);
    [ExtensionAttribute]
public static bool HasAttributeWithFullyQualifiedName(ISymbol symbol, string name);
    [ExtensionAttribute]
public static Accessibility GetEffectiveAccessibility(ISymbol symbol);
    [ExtensionAttribute]
public static bool CanBeAccessedFrom(ISymbol symbol, IAssemblySymbol assembly);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.ITypeSymbolExtensions : object {
    [ExtensionAttribute]
public static bool HasOrInheritsFromFullyQualifiedName(ITypeSymbol typeSymbol, string name);
    [ExtensionAttribute]
public static bool InheritsFromFullyQualifiedName(ITypeSymbol typeSymbol, string name);
    [ExtensionAttribute]
public static bool HasInterfaceWithFullyQualifiedName(ITypeSymbol typeSymbol, string name);
    [ExtensionAttribute]
public static bool HasOrInheritsAttribute(ITypeSymbol typeSymbol, Func`2<AttributeData, bool> predicate);
    [ExtensionAttribute]
public static bool HasOrInheritsAttributeWithFullyQualifiedName(ITypeSymbol typeSymbol, string name);
    [ExtensionAttribute]
public static bool InheritsAttributeWithFullyQualifiedName(ITypeSymbol typeSymbol, string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.MemberDeclarationSyntaxExtensions : object {
    [ExtensionAttribute]
public static MemberDeclarationSyntax ReplaceModifier(MemberDeclarationSyntax memberDeclaration, SyntaxKind oldKind, SyntaxKind newKind);
    [ExtensionAttribute]
public static MemberDeclarationSyntax RemoveModifier(MemberDeclarationSyntax memberDeclaration, SyntaxKind kind);
}
[ExtensionAttribute]
internal static class CommunityToolkit.Mvvm.SourceGenerators.Extensions.SyntaxNodeExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool IsFirstSyntaxDeclarationForSymbol(SyntaxNode syntaxNode, ISymbol symbol);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class CommunityToolkit.Mvvm.SourceGenerators.Helpers.Comparer`2 : object {
    [CompilerGeneratedAttribute]
private static TSelf <Default>k__BackingField;
    public static TSelf Default { get; }
    private static Comparer`2();
    [CompilerGeneratedAttribute]
public static TSelf get_Default();
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(T x, T y);
    public sealed virtual int GetHashCode(T obj);
    protected abstract virtual void AddToHashCode(HashCode& hashCode, T obj);
    protected abstract virtual bool AreEqual(T x, T y);
}
[GeneratorAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.IMessengerRegisterAllGenerator : object {
    public sealed virtual void Initialize(IncrementalGeneratorInitializationContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratorAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.INotifyPropertyChangedGenerator : TransitiveMembersGenerator`1<INotifyPropertyChangedInfo> {
    protected virtual IncrementalValuesProvider`1<ValueTuple`2<INamedTypeSymbol, INotifyPropertyChangedInfo>> GetInfo(IncrementalGeneratorInitializationContext context, IncrementalValuesProvider`1<ValueTuple`2<INamedTypeSymbol, AttributeData>> source);
    protected virtual bool ValidateTargetType(INamedTypeSymbol typeSymbol, INotifyPropertyChangedInfo info, ImmutableArray`1& diagnostics);
    protected virtual ImmutableArray`1<MemberDeclarationSyntax> FilterDeclaredMembers(INotifyPropertyChangedInfo info, ImmutableArray`1<MemberDeclarationSyntax> memberDeclarations);
    [CompilerGeneratedAttribute]
internal static INotifyPropertyChangedInfo <GetInfo>g__GetInfo|1_0(INamedTypeSymbol typeSymbol, AttributeData attributeData);
}
public enum CommunityToolkit.Mvvm.SourceGenerators.Input.Models.CanExecuteExpressionType : Enum {
    public int value__;
    public static CanExecuteExpressionType MethodInvocationLambdaWithDiscard;
    public static CanExecuteExpressionType PropertyAccessLambda;
    public static CanExecuteExpressionType PropertyAccessLambdaWithDiscard;
    public static CanExecuteExpressionType MethodGroup;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class CommunityToolkit.Mvvm.SourceGenerators.Input.Models.CommandInfo : object {
    [CompilerGeneratedAttribute]
private string <MethodName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FieldName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CommandInterfaceType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CommandClassType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DelegateType>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<string> <CommandTypeArguments>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<string> <DelegateTypeArguments>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <CanExecuteMemberName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<CanExecuteExpressionType> <CanExecuteExpressionType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowConcurrentExecutions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FlowExceptionsToTaskScheduler>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeCancelCommand>k__BackingField;
    private Type EqualityContract { get; }
    public string MethodName { get; public set; }
    public string FieldName { get; public set; }
    public string PropertyName { get; public set; }
    public string CommandInterfaceType { get; public set; }
    public string CommandClassType { get; public set; }
    public string DelegateType { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<string> CommandTypeArguments { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<string> DelegateTypeArguments { get; public set; }
    [NullableAttribute("2")]
public string CanExecuteMemberName { get; public set; }
    public Nullable`1<CanExecuteExpressionType> CanExecuteExpressionType { get; public set; }
    public bool AllowConcurrentExecutions { get; public set; }
    public bool FlowExceptionsToTaskScheduler { get; public set; }
    public bool IncludeCancelCommand { get; public set; }
    public CommandInfo(string MethodName, string FieldName, string PropertyName, string CommandInterfaceType, string CommandClassType, string DelegateType, ImmutableArray`1<string> CommandTypeArguments, ImmutableArray`1<string> DelegateTypeArguments, string CanExecuteMemberName, Nullable`1<CanExecuteExpressionType> CanExecuteExpressionType, bool AllowConcurrentExecutions, bool FlowExceptionsToTaskScheduler, bool IncludeCancelCommand);
    [CompilerGeneratedAttribute]
private CommandInfo(CommandInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_MethodName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MethodName(string value);
    [CompilerGeneratedAttribute]
public string get_FieldName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FieldName(string value);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public string get_CommandInterfaceType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CommandInterfaceType(string value);
    [CompilerGeneratedAttribute]
public string get_CommandClassType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CommandClassType(string value);
    [CompilerGeneratedAttribute]
public string get_DelegateType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DelegateType(string value);
    [CompilerGeneratedAttribute]
public ImmutableArray`1<string> get_CommandTypeArguments();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CommandTypeArguments(ImmutableArray`1<string> value);
    [CompilerGeneratedAttribute]
public ImmutableArray`1<string> get_DelegateTypeArguments();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DelegateTypeArguments(ImmutableArray`1<string> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_CanExecuteMemberName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CanExecuteMemberName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<CanExecuteExpressionType> get_CanExecuteExpressionType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CanExecuteExpressionType(Nullable`1<CanExecuteExpressionType> value);
    [CompilerGeneratedAttribute]
public bool get_AllowConcurrentExecutions();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AllowConcurrentExecutions(bool value);
    [CompilerGeneratedAttribute]
public bool get_FlowExceptionsToTaskScheduler();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FlowExceptionsToTaskScheduler(bool value);
    [CompilerGeneratedAttribute]
public bool get_IncludeCancelCommand();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IncludeCancelCommand(bool value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(CommandInfo left, CommandInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(CommandInfo left, CommandInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(CommandInfo other);
    [CompilerGeneratedAttribute]
public CommandInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& MethodName, String& FieldName, String& PropertyName, String& CommandInterfaceType, String& CommandClassType, String& DelegateType, ImmutableArray`1& CommandTypeArguments, ImmutableArray`1& DelegateTypeArguments, String& CanExecuteMemberName, Nullable`1& CanExecuteExpressionType, Boolean& AllowConcurrentExecutions, Boolean& FlowExceptionsToTaskScheduler, Boolean& IncludeCancelCommand);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class CommunityToolkit.Mvvm.SourceGenerators.Input.Models.INotifyPropertyChangedInfo : object {
    [CompilerGeneratedAttribute]
private bool <IncludeAdditionalHelperMethods>k__BackingField;
    private Type EqualityContract { get; }
    public bool IncludeAdditionalHelperMethods { get; public set; }
    public INotifyPropertyChangedInfo(bool IncludeAdditionalHelperMethods);
    [CompilerGeneratedAttribute]
private INotifyPropertyChangedInfo(INotifyPropertyChangedInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public bool get_IncludeAdditionalHelperMethods();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IncludeAdditionalHelperMethods(bool value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(INotifyPropertyChangedInfo left, INotifyPropertyChangedInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(INotifyPropertyChangedInfo left, INotifyPropertyChangedInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(INotifyPropertyChangedInfo other);
    [CompilerGeneratedAttribute]
public INotifyPropertyChangedInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Boolean& IncludeAdditionalHelperMethods);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class CommunityToolkit.Mvvm.SourceGenerators.Input.Models.RecipientInfo : object {
    [CompilerGeneratedAttribute]
private string <FilenameHint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<string> <MessageTypes>k__BackingField;
    private Type EqualityContract { get; }
    public string FilenameHint { get; public set; }
    public string TypeName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<string> MessageTypes { get; public set; }
    public RecipientInfo(string FilenameHint, string TypeName, ImmutableArray`1<string> MessageTypes);
    [CompilerGeneratedAttribute]
private RecipientInfo(RecipientInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_FilenameHint();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FilenameHint(string value);
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TypeName(string value);
    [CompilerGeneratedAttribute]
public ImmutableArray`1<string> get_MessageTypes();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MessageTypes(ImmutableArray`1<string> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(RecipientInfo left, RecipientInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(RecipientInfo left, RecipientInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(RecipientInfo other);
    [CompilerGeneratedAttribute]
public RecipientInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& FilenameHint, String& TypeName, ImmutableArray`1& MessageTypes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class CommunityToolkit.Mvvm.SourceGenerators.Input.Models.ValidationInfo : object {
    [CompilerGeneratedAttribute]
private string <FilenameHint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<string> <PropertyNames>k__BackingField;
    private Type EqualityContract { get; }
    public string FilenameHint { get; public set; }
    public string TypeName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<string> PropertyNames { get; public set; }
    public ValidationInfo(string FilenameHint, string TypeName, ImmutableArray`1<string> PropertyNames);
    [CompilerGeneratedAttribute]
private ValidationInfo(ValidationInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_FilenameHint();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FilenameHint(string value);
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TypeName(string value);
    [CompilerGeneratedAttribute]
public ImmutableArray`1<string> get_PropertyNames();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PropertyNames(ImmutableArray`1<string> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(ValidationInfo left, ValidationInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(ValidationInfo left, ValidationInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(ValidationInfo other);
    [CompilerGeneratedAttribute]
public ValidationInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& FilenameHint, String& TypeName, ImmutableArray`1& PropertyNames);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class CommunityToolkit.Mvvm.SourceGenerators.Models.HierarchyInfo : object {
    [CompilerGeneratedAttribute]
private string <FilenameHint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MetadataName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<TypeInfo> <Hierarchy>k__BackingField;
    private Type EqualityContract { get; }
    public string FilenameHint { get; public set; }
    public string MetadataName { get; public set; }
    public string Namespace { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<TypeInfo> Hierarchy { get; public set; }
    public HierarchyInfo(string FilenameHint, string MetadataName, string Namespace, ImmutableArray`1<TypeInfo> Hierarchy);
    [CompilerGeneratedAttribute]
private HierarchyInfo(HierarchyInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_FilenameHint();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FilenameHint(string value);
    [CompilerGeneratedAttribute]
public string get_MetadataName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MetadataName(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Namespace(string value);
    [CompilerGeneratedAttribute]
public ImmutableArray`1<TypeInfo> get_Hierarchy();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Hierarchy(ImmutableArray`1<TypeInfo> value);
    public static HierarchyInfo From(INamedTypeSymbol typeSymbol);
    public CompilationUnitSyntax GetCompilationUnit(ImmutableArray`1<MemberDeclarationSyntax> memberDeclarations, BaseListSyntax baseList);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(HierarchyInfo left, HierarchyInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(HierarchyInfo left, HierarchyInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(HierarchyInfo other);
    [CompilerGeneratedAttribute]
public HierarchyInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& FilenameHint, String& MetadataName, String& Namespace, ImmutableArray`1& Hierarchy);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class CommunityToolkit.Mvvm.SourceGenerators.Models.Result`1 : object {
    [CompilerGeneratedAttribute]
private TValue <Value>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<Diagnostic> <Errors>k__BackingField;
    private Type EqualityContract { get; }
    public TValue Value { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<Diagnostic> Errors { get; public set; }
    public Result`1(TValue Value, ImmutableArray`1<Diagnostic> Errors);
    [CompilerGeneratedAttribute]
private Result`1(Result`1<TValue> original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public TValue get_Value();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Value(TValue value);
    [CompilerGeneratedAttribute]
public ImmutableArray`1<Diagnostic> get_Errors();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Errors(ImmutableArray`1<Diagnostic> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(Result`1<TValue> left, Result`1<TValue> right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(Result`1<TValue> left, Result`1<TValue> right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(Result`1<TValue> other);
    [CompilerGeneratedAttribute]
public Result`1<TValue> <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(TValue& Value, ImmutableArray`1& Errors);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class CommunityToolkit.Mvvm.SourceGenerators.Models.TypeInfo : object {
    [CompilerGeneratedAttribute]
private string <QualifiedName>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeKind <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRecord>k__BackingField;
    private Type EqualityContract { get; }
    public string QualifiedName { get; public set; }
    public TypeKind Kind { get; public set; }
    public bool IsRecord { get; public set; }
    public TypeInfo(string QualifiedName, TypeKind Kind, bool IsRecord);
    [CompilerGeneratedAttribute]
private TypeInfo(TypeInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_QualifiedName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_QualifiedName(string value);
    [CompilerGeneratedAttribute]
public TypeKind get_Kind();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Kind(TypeKind value);
    [CompilerGeneratedAttribute]
public bool get_IsRecord();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsRecord(bool value);
    public TypeDeclarationSyntax GetSyntax();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(TypeInfo left, TypeInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(TypeInfo left, TypeInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(TypeInfo other);
    [CompilerGeneratedAttribute]
public TypeInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& QualifiedName, TypeKind& Kind, Boolean& IsRecord);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[GeneratorAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.NullabilityAttributesGenerator : object {
    private static string NotNullAttributeMetadataName;
    private static string NotNullIfNotNullAttributeMetadataName;
    public sealed virtual void Initialize(IncrementalGeneratorInitializationContext context);
    private static string LoadAttributeSourceWithMetadataName(string typeFullName);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratorAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.ObservableObjectGenerator : TransitiveMembersGenerator`1<object> {
    protected virtual IncrementalValuesProvider`1<ValueTuple`2<INamedTypeSymbol, object>> GetInfo(IncrementalGeneratorInitializationContext context, IncrementalValuesProvider`1<ValueTuple`2<INamedTypeSymbol, AttributeData>> source);
    protected virtual bool ValidateTargetType(INamedTypeSymbol typeSymbol, object info, ImmutableArray`1& diagnostics);
    [NullableContextAttribute("2")]
protected virtual ImmutableArray`1<MemberDeclarationSyntax> FilterDeclaredMembers(object info, ImmutableArray`1<MemberDeclarationSyntax> memberDeclarations);
}
[GeneratorAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator : object {
    public sealed virtual void Initialize(IncrementalGeneratorInitializationContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratorAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.ObservableRecipientGenerator : TransitiveMembersGenerator`1<ObservableRecipientInfo> {
    protected virtual IncrementalValuesProvider`1<ValueTuple`2<INamedTypeSymbol, ObservableRecipientInfo>> GetInfo(IncrementalGeneratorInitializationContext context, IncrementalValuesProvider`1<ValueTuple`2<INamedTypeSymbol, AttributeData>> source);
    protected virtual bool ValidateTargetType(INamedTypeSymbol typeSymbol, ObservableRecipientInfo info, ImmutableArray`1& diagnostics);
    protected virtual ImmutableArray`1<MemberDeclarationSyntax> FilterDeclaredMembers(ObservableRecipientInfo info, ImmutableArray`1<MemberDeclarationSyntax> memberDeclarations);
    [CompilerGeneratedAttribute]
internal static ObservableRecipientInfo <GetInfo>g__GetInfo|1_0(INamedTypeSymbol typeSymbol, AttributeData attributeData, bool isRequiresUnreferencedCodeAttributeAvailable);
    [CompilerGeneratedAttribute]
internal static MemberDeclarationSyntax <FilterDeclaredMembers>g__FixupFilteredMemberDeclaration|3_0(MemberDeclarationSyntax member, <>c__DisplayClass3_0& );
}
[GeneratorAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.ObservableValidatorValidateAllPropertiesGenerator : object {
    public sealed virtual void Initialize(IncrementalGeneratorInitializationContext context);
}
[GeneratorAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class CommunityToolkit.Mvvm.SourceGenerators.RelayCommandGenerator : object {
    public sealed virtual void Initialize(IncrementalGeneratorInitializationContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class CommunityToolkit.Mvvm.SourceGenerators.TransitiveMembersGenerator`1 : object {
    private string attributeType;
    private IEqualityComparer`1<TInfo> comparer;
    private ClassDeclarationSyntax classDeclaration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableArray`1<MemberDeclarationSyntax> sealedMemberDeclarations;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ImmutableArray`1<MemberDeclarationSyntax> nonSealedMemberDeclarations;
    private protected TransitiveMembersGenerator`1(string attributeType, IEqualityComparer`1<TInfo> comparer);
    public sealed virtual void Initialize(IncrementalGeneratorInitializationContext context);
    protected abstract virtual IncrementalValuesProvider`1<ValueTuple`2<INamedTypeSymbol, TInfo>> GetInfo(IncrementalGeneratorInitializationContext context, IncrementalValuesProvider`1<ValueTuple`2<INamedTypeSymbol, AttributeData>> source);
    protected abstract virtual bool ValidateTargetType(INamedTypeSymbol typeSymbol, TInfo info, ImmutableArray`1& diagnostics);
    protected abstract virtual ImmutableArray`1<MemberDeclarationSyntax> FilterDeclaredMembers(TInfo info, ImmutableArray`1<MemberDeclarationSyntax> memberDeclarations);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private ValueTuple`2<INamedTypeSymbol, AttributeData> <Initialize>b__6_2(INamedTypeSymbol item, CancellationToken _);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <Initialize>b__6_9(AttributeData a);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private Result`1<ValueTuple`3<HierarchyInfo, bool, TInfo>> <Initialize>b__6_4(ValueTuple`2<INamedTypeSymbol, TInfo> item, CancellationToken _);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <Initialize>b__6_8(SourceProductionContext context, ValueTuple`3<HierarchyInfo, bool, TInfo> item);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.HashCode : ValueType {
    private static UInt32 Prime1;
    private static UInt32 Prime2;
    private static UInt32 Prime3;
    private static UInt32 Prime4;
    private static UInt32 Prime5;
    private static UInt32 seed;
    private UInt32 v1;
    private UInt32 v2;
    private UInt32 v3;
    private UInt32 v4;
    private UInt32 queue1;
    private UInt32 queue2;
    private UInt32 queue3;
    private UInt32 length;
    private static HashCode();
    private static UInt32 GenerateGlobalSeed();
    public static int Combine(T1 value);
    public static int Combine(T1 value1, T2 value2);
    public static int Combine(T1 value1, T2 value2, T3 value3);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7, T8 value8);
    public void Add(T value);
    public void Add(T value, IEqualityComparer`1<T> comparer);
    [NullableContextAttribute("0")]
public void AddBytes(ReadOnlySpan`1<byte> value);
    private static void Initialize(UInt32& v1, UInt32& v2, UInt32& v3, UInt32& v4);
    private static UInt32 Round(UInt32 hash, UInt32 input);
    private static UInt32 QueueRound(UInt32 hash, UInt32 queuedValue);
    private static UInt32 MixState(UInt32 v1, UInt32 v2, UInt32 v3, UInt32 v4);
    private static UInt32 MixEmptyState();
    private static UInt32 MixFinal(UInt32 hash);
    private void Add(int value);
    public int ToHashCode();
    [ObsoleteAttribute("HashCode is a mutable struct and should not be compared with other HashCodes. Use ToHashCode to retrieve the computed hash code.", "True")]
[EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("HashCode is a mutable struct and should not be compared with other HashCodes.", "True")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    private static UInt32 RotateLeft(UInt32 value, int offset);
}
[EditorBrowsableAttribute("1")]
internal static class System.Runtime.CompilerServices.IsExternalInit : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsUnmanagedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[GeneratedCodeAttribute("Nerdbank.GitVersioning.Tasks", "3.4.255.64262")]
[ExcludeFromCodeCoverageAttribute]
internal static class ThisAssembly : object {
    internal static string AssemblyConfiguration;
    internal static string AssemblyFileVersion;
    internal static string AssemblyInformationalVersion;
    internal static string AssemblyName;
    internal static string AssemblyTitle;
    internal static string AssemblyVersion;
    internal static DateTime GitCommitDate;
    internal static string GitCommitId;
    internal static bool IsPrerelease;
    internal static bool IsPublicRelease;
    internal static string PublicKey;
    internal static string PublicKeyToken;
    internal static string RootNamespace;
    private static ThisAssembly();
}
