[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsiiClassAttribute("Constructs.Construct", "constructs.Construct", "[{"docs":{"summary":"The scope in which to define this construct."},"name":"scope","type":{"fqn":"constructs.Construct"}},{"docs":{"remarks":"Must be unique amongst siblings. If
the ID includes a path separator (`/`), then it will be replaced by double
dash `--`.","summary":"The scoped construct ID."},"name":"id","type":{"primitive":"string"}}]")]
public class Constructs.Construct : DeputyBase {
    [JsiiPropertyAttribute("node", "{"fqn":"constructs.Node"}", "False", "False")]
public Node Node { get; }
    public Construct(Construct scope, string id);
    [EditorBrowsableAttribute("1")]
protected Construct(ByRefValue reference);
    [EditorBrowsableAttribute("1")]
protected Construct(DeputyProps props);
    private static DeputyProps _MakeDeputyProps(Construct scope, string id);
    [JsiiMethodAttribute("isConstruct", "{"type":{"primitive":"boolean"}}", "[{"docs":{"summary":"Any object."},"name":"x","type":{"primitive":"any"}}]", "False", "False")]
public static bool IsConstruct(object x);
    [JsiiMethodAttribute("toString", "{"type":{"primitive":"string"}}", "", "False", "False")]
public virtual string ToString();
    public virtual Node get_Node();
}
[JsiiEnumAttribute("Constructs.ConstructOrder", "constructs.ConstructOrder")]
public enum Constructs.ConstructOrder : Enum {
    public int value__;
    [JsiiEnumMemberAttribute("PREORDER")]
public static ConstructOrder PREORDER;
    [JsiiEnumMemberAttribute("POSTORDER")]
public static ConstructOrder POSTORDER;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsiiClassAttribute("Constructs.Dependable", "constructs.Dependable", "")]
public abstract class Constructs.Dependable : DeputyBase {
    [JsiiPropertyAttribute("dependencyRoots", "{"collection":{"elementtype":{"fqn":"constructs.IConstruct"},"kind":"array"}}", "False", "False")]
public IConstruct[] DependencyRoots { get; }
    [EditorBrowsableAttribute("1")]
protected Dependable(ByRefValue reference);
    [EditorBrowsableAttribute("1")]
protected Dependable(DeputyProps props);
    private static DeputyProps _MakeDeputyProps();
    [JsiiMethodAttribute("get", "{"type":{"fqn":"constructs.Dependable"}}", "[{"name":"instance","type":{"fqn":"constructs.IDependable"}}]", "False", "False")]
[ObsoleteAttribute("use `of`")]
public static Dependable Get(IDependable instance);
    [JsiiMethodAttribute("implement", "", "[{"name":"instance","type":{"fqn":"constructs.IDependable"}},{"name":"trait","type":{"fqn":"constructs.Dependable"}}]", "False", "False")]
public static void Implement(IDependable instance, Dependable trait);
    [JsiiMethodAttribute("of", "{"type":{"fqn":"constructs.Dependable"}}", "[{"name":"instance","type":{"fqn":"constructs.IDependable"}}]", "False", "False")]
public static Dependable Of(IDependable instance);
    public abstract virtual IConstruct[] get_DependencyRoots();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsiiClassAttribute("Constructs.DependencyGroup", "constructs.DependencyGroup", "[{"name":"deps","type":{"fqn":"constructs.IDependable"},"variadic":true}]")]
public class Constructs.DependencyGroup : DeputyBase {
    public DependencyGroup(IDependable[] deps);
    [EditorBrowsableAttribute("1")]
protected DependencyGroup(ByRefValue reference);
    [EditorBrowsableAttribute("1")]
protected DependencyGroup(DeputyProps props);
    private static DeputyProps _MakeDeputyProps(IDependable[] deps);
    [JsiiMethodAttribute("add", "", "[{"name":"scopes","type":{"fqn":"constructs.IDependable"},"variadic":true}]", "False", "False")]
public virtual void Add(IDependable[] scopes);
}
[JsiiInterfaceAttribute("Constructs.IConstruct", "constructs.IConstruct")]
public interface Constructs.IConstruct {
    [NullableAttribute("1")]
[JsiiPropertyAttribute("node", "{"fqn":"constructs.Node"}", "False", "False")]
public Node Node { get; }
    [NullableContextAttribute("1")]
public abstract virtual Node get_Node();
}
[JsiiInterfaceAttribute("Constructs.IDependable", "constructs.IDependable")]
public interface Constructs.IDependable {
}
[NullableContextAttribute("1")]
[JsiiInterfaceAttribute("Constructs.IMetadataEntry", "constructs.MetadataEntry")]
public interface Constructs.IMetadataEntry {
    [JsiiPropertyAttribute("data", "{"primitive":"any"}", "False", "False")]
public object Data { get; }
    [JsiiPropertyAttribute("type", "{"primitive":"string"}", "False", "False")]
public string Type { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsiiPropertyAttribute("trace", "{"collection":{"elementtype":{"primitive":"string"},"kind":"array"}}", "True", "False")]
[JsiiOptionalAttribute]
public String[] Trace { get; }
    public abstract virtual object get_Data();
    public abstract virtual string get_Type();
    public virtual String[] get_Trace();
}
[NullableContextAttribute("2")]
[JsiiInterfaceAttribute("Constructs.IMetadataOptions", "constructs.MetadataOptions")]
public interface Constructs.IMetadataOptions {
    [JsiiPropertyAttribute("stackTrace", "{"primitive":"boolean"}", "True", "False")]
[JsiiOptionalAttribute]
public Nullable`1<bool> StackTrace { get; }
    [JsiiPropertyAttribute("traceFromFunction", "{"primitive":"any"}", "True", "False")]
[JsiiOptionalAttribute]
public object TraceFromFunction { get; }
    public virtual Nullable`1<bool> get_StackTrace();
    public virtual object get_TraceFromFunction();
}
public class Constructs.Internal.DependencyResolution.Anchor : object {
}
[JsiiInterfaceAttribute("Constructs.IValidation", "constructs.IValidation")]
public interface Constructs.IValidation {
    [NullableContextAttribute("1")]
[JsiiMethodAttribute("validate", "{"type":{"collection":{"elementtype":{"primitive":"string"},"kind":"array"}}}", "", "False", "False")]
public abstract virtual String[] Validate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsiiByValueAttribute("constructs.MetadataEntry")]
public class Constructs.MetadataEntry : object {
    [CompilerGeneratedAttribute]
private object <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <Trace>k__BackingField;
    [JsiiPropertyAttribute("data", "{"primitive":"any"}", "False", "False")]
public object Data { get; public set; }
    [JsiiPropertyAttribute("type", "{"primitive":"string"}", "False", "False")]
public string Type { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsiiOptionalAttribute]
[JsiiPropertyAttribute("trace", "{"collection":{"elementtype":{"primitive":"string"},"kind":"array"}}", "True", "False")]
public String[] Trace { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual object get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(object value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_Trace();
    [CompilerGeneratedAttribute]
public void set_Trace(String[] value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[JsiiByValueAttribute("constructs.MetadataOptions")]
public class Constructs.MetadataOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <StackTrace>k__BackingField;
    [CompilerGeneratedAttribute]
private object <TraceFromFunction>k__BackingField;
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("stackTrace", "{"primitive":"boolean"}", "True", "False")]
public Nullable`1<bool> StackTrace { get; public set; }
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("traceFromFunction", "{"primitive":"any"}", "True", "False")]
public object TraceFromFunction { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_StackTrace();
    [CompilerGeneratedAttribute]
public void set_StackTrace(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_TraceFromFunction();
    [CompilerGeneratedAttribute]
public void set_TraceFromFunction(object value);
}
[EditorBrowsableAttribute("1")]
public class Constructs.NamespaceDoc : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsiiClassAttribute("Constructs.Node", "constructs.Node", "[{"name":"host","type":{"fqn":"constructs.Construct"}},{"name":"scope","type":{"fqn":"constructs.IConstruct"}},{"name":"id","type":{"primitive":"string"}}]")]
public class Constructs.Node : DeputyBase {
    [CompilerGeneratedAttribute]
private static string <PATH_SEP>k__BackingField;
    [JsiiPropertyAttribute("PATH_SEP", "{"primitive":"string"}", "False", "False")]
public static string PATH_SEP { get; }
    [JsiiPropertyAttribute("addr", "{"primitive":"string"}", "False", "False")]
public string Addr { get; }
    [JsiiPropertyAttribute("children", "{"collection":{"elementtype":{"fqn":"constructs.IConstruct"},"kind":"array"}}", "False", "False")]
public IConstruct[] Children { get; }
    [JsiiPropertyAttribute("dependencies", "{"collection":{"elementtype":{"fqn":"constructs.IConstruct"},"kind":"array"}}", "False", "False")]
public IConstruct[] Dependencies { get; }
    [JsiiPropertyAttribute("id", "{"primitive":"string"}", "False", "False")]
public string Id { get; }
    [JsiiPropertyAttribute("locked", "{"primitive":"boolean"}", "False", "False")]
public bool Locked { get; }
    [JsiiPropertyAttribute("metadata", "{"collection":{"elementtype":{"fqn":"constructs.MetadataEntry"},"kind":"array"}}", "False", "False")]
public IMetadataEntry[] Metadata { get; }
    [JsiiPropertyAttribute("path", "{"primitive":"string"}", "False", "False")]
public string Path { get; }
    [JsiiPropertyAttribute("root", "{"fqn":"constructs.IConstruct"}", "False", "False")]
public IConstruct Root { get; }
    [JsiiPropertyAttribute("scopes", "{"collection":{"elementtype":{"fqn":"constructs.IConstruct"},"kind":"array"}}", "False", "False")]
public IConstruct[] Scopes { get; }
    [NullableAttribute("2")]
[JsiiOptionalAttribute]
[JsiiPropertyAttribute("scope", "{"fqn":"constructs.IConstruct"}", "True", "False")]
public IConstruct Scope { get; }
    [NullableAttribute("2")]
[JsiiOptionalAttribute]
[JsiiPropertyAttribute("defaultChild", "{"fqn":"constructs.IConstruct"}", "True", "False")]
public IConstruct DefaultChild { get; public set; }
    public Node(Construct host, IConstruct scope, string id);
    [EditorBrowsableAttribute("1")]
protected Node(ByRefValue reference);
    [EditorBrowsableAttribute("1")]
protected Node(DeputyProps props);
    private static Node();
    private static DeputyProps _MakeDeputyProps(Construct host, IConstruct scope, string id);
    [JsiiMethodAttribute("of", "{"type":{"fqn":"constructs.Node"}}", "[{"docs":{"summary":"the construct."},"name":"construct","type":{"fqn":"constructs.IConstruct"}}]", "False", "False")]
[ObsoleteAttribute("use `construct.node` instead")]
public static Node Of(IConstruct construct);
    [JsiiMethodAttribute("addDependency", "", "[{"name":"deps","type":{"fqn":"constructs.IDependable"},"variadic":true}]", "False", "False")]
public virtual void AddDependency(IDependable[] deps);
    [JsiiMethodAttribute("addMetadata", "", "[{"docs":{"summary":"a string denoting the type of metadata."},"name":"type","type":{"primitive":"string"}},{"docs":{"remarks":"If null/undefined, metadata will not be added.","summary":"the value of the metadata (can be a Token)."},"name":"data","type":{"primitive":"any"}},{"docs":{"summary":"options."},"name":"options","optional":true,"type":{"fqn":"constructs.MetadataOptions"}}]", "False", "False")]
public virtual void AddMetadata(string type, object data, IMetadataOptions options);
    [JsiiMethodAttribute("addValidation", "", "[{"docs":{"summary":"The validation object."},"name":"validation","type":{"fqn":"constructs.IValidation"}}]", "False", "False")]
public virtual void AddValidation(IValidation validation);
    [JsiiMethodAttribute("findAll", "{"type":{"collection":{"elementtype":{"fqn":"constructs.IConstruct"},"kind":"array"}}}", "[{"name":"order","optional":true,"type":{"fqn":"constructs.ConstructOrder"}}]", "False", "False")]
public virtual IConstruct[] FindAll(Nullable`1<ConstructOrder> order);
    [JsiiMethodAttribute("findChild", "{"type":{"fqn":"constructs.IConstruct"}}", "[{"docs":{"summary":"Identifier of direct child."},"name":"id","type":{"primitive":"string"}}]", "False", "False")]
public virtual IConstruct FindChild(string id);
    [JsiiMethodAttribute("getAllContext", "{"type":{"primitive":"any"}}", "[{"docs":{"summary":"Any keys to override the retrieved context."},"name":"defaults","optional":true,"type":{"primitive":"json"}}]", "False", "False")]
public virtual object GetAllContext(JObject defaults);
    [JsiiMethodAttribute("getContext", "{"type":{"primitive":"any"}}", "[{"docs":{"summary":"The context key."},"name":"key","type":{"primitive":"string"}}]", "False", "False")]
public virtual object GetContext(string key);
    [JsiiMethodAttribute("lock", "", "", "False", "False")]
public virtual void Lock();
    [JsiiMethodAttribute("setContext", "", "[{"docs":{"summary":"The context key."},"name":"key","type":{"primitive":"string"}},{"docs":{"summary":"The context value."},"name":"value","type":{"primitive":"any"}}]", "False", "False")]
public virtual void SetContext(string key, object value);
    [JsiiMethodAttribute("tryFindChild", "{"optional":true,"type":{"fqn":"constructs.IConstruct"}}", "[{"docs":{"summary":"Identifier of direct child."},"name":"id","type":{"primitive":"string"}}]", "False", "False")]
public virtual IConstruct TryFindChild(string id);
    [JsiiMethodAttribute("tryGetContext", "{"type":{"primitive":"any"}}", "[{"docs":{"summary":"The context key."},"name":"key","type":{"primitive":"string"}}]", "False", "False")]
public virtual object TryGetContext(string key);
    [JsiiMethodAttribute("tryRemoveChild", "{"type":{"primitive":"boolean"}}", "[{"name":"childName","type":{"primitive":"string"}}]", "False", "False")]
public virtual bool TryRemoveChild(string childName);
    [JsiiMethodAttribute("validate", "{"type":{"collection":{"elementtype":{"primitive":"string"},"kind":"array"}}}", "", "False", "False")]
public virtual String[] Validate();
    [CompilerGeneratedAttribute]
public static string get_PATH_SEP();
    public virtual string get_Addr();
    public virtual IConstruct[] get_Children();
    public virtual IConstruct[] get_Dependencies();
    public virtual string get_Id();
    public virtual bool get_Locked();
    public virtual IMetadataEntry[] get_Metadata();
    public virtual string get_Path();
    public virtual IConstruct get_Root();
    public virtual IConstruct[] get_Scopes();
    [NullableContextAttribute("2")]
public virtual IConstruct get_Scope();
    [NullableContextAttribute("2")]
public virtual IConstruct get_DefaultChild();
    [NullableContextAttribute("2")]
public virtual void set_DefaultChild(IConstruct value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
