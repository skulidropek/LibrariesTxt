public class Consul.AccessLogsConfig : object {
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableListenerLogs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <JSONFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TextFormat>k__BackingField;
    [JsonPropertyAttribute]
public bool Enabled { get; public set; }
    [JsonPropertyAttribute]
public bool DisableListenerLogs { get; public set; }
    [JsonPropertyAttribute]
public string Type { get; public set; }
    [JsonPropertyAttribute]
public string Path { get; public set; }
    [JsonPropertyAttribute]
public string JSONFormat { get; public set; }
    [JsonPropertyAttribute]
public string TextFormat { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_DisableListenerLogs();
    [CompilerGeneratedAttribute]
public void set_DisableListenerLogs(bool value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_JSONFormat();
    [CompilerGeneratedAttribute]
public void set_JSONFormat(string value);
    [CompilerGeneratedAttribute]
public string get_TextFormat();
    [CompilerGeneratedAttribute]
public void set_TextFormat(string value);
}
[ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public class Consul.ACL : object {
    private ConsulClient _client;
    internal ACL(ConsulClient c);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public sealed virtual Task`1<WriteResult`1<string>> Create(ACLEntry acl, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.ACL/<Create>d__4")]
[ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public sealed virtual Task`1<WriteResult`1<string>> Create(ACLEntry acl, WriteOptions q, CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public sealed virtual Task`1<WriteResult> Update(ACLEntry acl, CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public sealed virtual Task`1<WriteResult> Update(ACLEntry acl, WriteOptions q, CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public sealed virtual Task`1<WriteResult`1<bool>> Destroy(string id, CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public sealed virtual Task`1<WriteResult`1<bool>> Destroy(string id, WriteOptions q, CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public sealed virtual Task`1<WriteResult`1<string>> Clone(string id, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.ACL/<Clone>d__10")]
[ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public sealed virtual Task`1<WriteResult`1<string>> Clone(string id, WriteOptions q, CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public sealed virtual Task`1<QueryResult`1<ACLEntry>> Info(string id, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.ACL/<Info>d__12")]
[ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public sealed virtual Task`1<QueryResult`1<ACLEntry>> Info(string id, QueryOptions q, CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public sealed virtual Task`1<QueryResult`1<ACLEntry[]>> List(CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public sealed virtual Task`1<QueryResult`1<ACLEntry[]>> List(QueryOptions q, CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public sealed virtual Task`1<WriteResult`1<string>> TranslateRules(string rules, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.ACL/<TranslateRules>d__16")]
[ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public sealed virtual Task`1<WriteResult`1<string>> TranslateRules(string rules, WriteOptions q, CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public sealed virtual Task`1<QueryResult`1<string>> TranslateLegacyTokenRules(string id, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.ACL/<TranslateLegacyTokenRules>d__18")]
[ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public sealed virtual Task`1<QueryResult`1<string>> TranslateLegacyTokenRules(string id, QueryOptions q, CancellationToken ct);
}
[ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public class Consul.ACLEntry : object {
    [CompilerGeneratedAttribute]
private ulong <CreateIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <ModifyIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ACLType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Rules>k__BackingField;
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public ulong CreateIndex { get; public set; }
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public ulong ModifyIndex { get; public set; }
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public string ID { get; public set; }
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public string Name { get; public set; }
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
[JsonConverterAttribute("Consul.ACLTypeConverter")]
[JsonPropertyAttribute]
public ACLType Type { get; public set; }
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public string Rules { get; public set; }
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public ACLEntry(string name, string rules);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public ACLEntry(string id, string name, string rules);
    [CompilerGeneratedAttribute]
public ulong get_CreateIndex();
    [CompilerGeneratedAttribute]
public void set_CreateIndex(ulong value);
    [CompilerGeneratedAttribute]
public ulong get_ModifyIndex();
    [CompilerGeneratedAttribute]
public void set_ModifyIndex(ulong value);
    [CompilerGeneratedAttribute]
public string get_ID();
    [CompilerGeneratedAttribute]
public void set_ID(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public ACLType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(ACLType value);
    [CompilerGeneratedAttribute]
public string get_Rules();
    [CompilerGeneratedAttribute]
public void set_Rules(string value);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public bool ShouldSerializeCreateIndex();
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public bool ShouldSerializeModifyIndex();
}
public class Consul.ACLRateLimit : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ReadRate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <WriteRate>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<int> ReadRate { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> WriteRate { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ReadRate();
    [CompilerGeneratedAttribute]
public void set_ReadRate(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_WriteRate();
    [CompilerGeneratedAttribute]
public void set_WriteRate(Nullable`1<int> value);
}
public class Consul.ACLReplication : object {
    private ConsulClient _client;
    internal ACLReplication(ConsulClient c);
    public sealed virtual Task`1<QueryResult`1<ACLReplicationEntry>> Status(CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.ACLReplication/<Status>d__3")]
public sealed virtual Task`1<QueryResult`1<ACLReplicationEntry>> Status(QueryOptions queryOptions, CancellationToken ct);
}
public class Consul.ACLReplicationEntry : object {
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Running>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SourceDatacenter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReplicationType>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <ReplicatedIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <ReplicatedRoleIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <ReplicatedTokenIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastSuccess>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastError>k__BackingField;
    public bool Enabled { get; public set; }
    public bool Running { get; public set; }
    public string SourceDatacenter { get; public set; }
    public string ReplicationType { get; public set; }
    public ulong ReplicatedIndex { get; public set; }
    public ulong ReplicatedRoleIndex { get; public set; }
    public ulong ReplicatedTokenIndex { get; public set; }
    public DateTime LastSuccess { get; public set; }
    public DateTime LastError { get; public set; }
    public ACLReplicationEntry(bool enabled, bool running);
    [JsonConstructorAttribute]
public ACLReplicationEntry(bool enabled, bool running, string sourceDatacenter, string replicationType, ulong replicatedIndex, ulong replicatedRoleIndex, ulong replicatedTokenIndex, DateTime lastSuccess, DateTime lastError);
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_Running();
    [CompilerGeneratedAttribute]
public void set_Running(bool value);
    [CompilerGeneratedAttribute]
public string get_SourceDatacenter();
    [CompilerGeneratedAttribute]
public void set_SourceDatacenter(string value);
    [CompilerGeneratedAttribute]
public string get_ReplicationType();
    [CompilerGeneratedAttribute]
public void set_ReplicationType(string value);
    [CompilerGeneratedAttribute]
public ulong get_ReplicatedIndex();
    [CompilerGeneratedAttribute]
public void set_ReplicatedIndex(ulong value);
    [CompilerGeneratedAttribute]
public ulong get_ReplicatedRoleIndex();
    [CompilerGeneratedAttribute]
public void set_ReplicatedRoleIndex(ulong value);
    [CompilerGeneratedAttribute]
public ulong get_ReplicatedTokenIndex();
    [CompilerGeneratedAttribute]
public void set_ReplicatedTokenIndex(ulong value);
    [CompilerGeneratedAttribute]
public DateTime get_LastSuccess();
    [CompilerGeneratedAttribute]
public void set_LastSuccess(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_LastError();
    [CompilerGeneratedAttribute]
public void set_LastError(DateTime value);
}
[ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public class Consul.ACLType : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    public string Type { get; private set; }
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public static ACLType Client { get; }
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public static ACLType Management { get; }
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(string value);
    public static ACLType get_Client();
    public static ACLType get_Management();
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public sealed virtual bool Equals(ACLType other);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public virtual bool Equals(object other);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public virtual int GetHashCode();
}
[ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public class Consul.ACLTypeConverter : JsonConverter {
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public virtual bool CanConvert(Type objectType);
}
public class Consul.AddressDetails : object {
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    public string Address { get; public set; }
    public int Port { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(string value);
    [CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(int value);
}
public class Consul.Agent : object {
    private ConsulClient _client;
    private string _nodeName;
    private AsyncLock _nodeNameLock;
    [ObsoleteAttribute("This property will be removed in a future version. Replace uses of it with a call to 'await GetNodeName()'")]
public string NodeName { get; }
    internal Agent(ConsulClient c);
    public sealed virtual Task`1<QueryResult`1<Dictionary`2<string, Dictionary`2<string, object>>>> Self(CancellationToken ct);
    public sealed virtual string get_NodeName();
    [AsyncStateMachineAttribute("Consul.Agent/<GetNodeName>d__8")]
public sealed virtual Task`1<string> GetNodeName(CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<Dictionary`2<string, AgentCheck>>> Checks(CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<Dictionary`2<string, AgentCheck>>> Checks(Filter filter, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Agent/<Services>d__11")]
public sealed virtual Task`1<QueryResult`1<Dictionary`2<string, AgentService>>> Services(CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Agent/<Services>d__12")]
public sealed virtual Task`1<QueryResult`1<Dictionary`2<string, AgentService>>> Services(Filter filter, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<AgentMember[]>> Members(bool wan, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> ServiceRegister(AgentServiceRegistration service, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> ServiceRegister(AgentServiceRegistration service, bool replaceExistingChecks, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> ServiceDeregister(string serviceID, CancellationToken ct);
    public sealed virtual Task PassTTL(string checkID, string note, CancellationToken ct);
    public sealed virtual Task WarnTTL(string checkID, string note, CancellationToken ct);
    public sealed virtual Task FailTTL(string checkID, string note, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> UpdateTTL(string checkID, string output, TTLStatus status, CancellationToken ct);
    private Task`1<WriteResult> LegacyUpdateTTL(string checkID, string note, TTLStatus status, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> CheckRegister(AgentCheckRegistration check, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> CheckDeregister(string checkID, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> Join(string addr, bool wan, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> ForceLeave(string node, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> Leave(string node, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> Reload(CancellationToken ct);
    [ObsoleteAttribute]
public sealed virtual Task`1<WriteResult> Reload(string node, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> EnableServiceMaintenance(string serviceID, string reason, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> DisableServiceMaintenance(string serviceID, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> EnableNodeMaintenance(string reason, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> DisableNodeMaintenance(CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Agent/<Monitor>d__33")]
public sealed virtual Task`1<LogStream> Monitor(LogLevel level, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Agent/<MonitorJSON>d__34")]
public sealed virtual Task`1<LogStream> MonitorJSON(LogLevel level, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Agent/<GetLocalServiceHealth>d__35")]
public sealed virtual Task`1<QueryResult`1<LocalServiceHealth[]>> GetLocalServiceHealth(string serviceName, QueryOptions q, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Agent/<GetLocalServiceHealth>d__36")]
public sealed virtual Task`1<QueryResult`1<LocalServiceHealth[]>> GetLocalServiceHealth(string serviceName, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Agent/<GetWorstLocalServiceHealth>d__37")]
public sealed virtual Task`1<QueryResult`1<string>> GetWorstLocalServiceHealth(string serviceName, QueryOptions q, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Agent/<GetWorstLocalServiceHealth>d__38")]
public sealed virtual Task`1<QueryResult`1<string>> GetWorstLocalServiceHealth(string serviceName, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Agent/<GetLocalServiceHealthByID>d__39")]
public sealed virtual Task`1<QueryResult`1<LocalServiceHealth>> GetLocalServiceHealthByID(string serviceID, QueryOptions q, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Agent/<GetLocalServiceHealthByID>d__40")]
public sealed virtual Task`1<QueryResult`1<LocalServiceHealth>> GetLocalServiceHealthByID(string serviceID, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Agent/<GetAgentHostInfo>d__41")]
public sealed virtual Task`1<QueryResult`1<AgentHostInfo>> GetAgentHostInfo(CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Agent/<GetAgentVersion>d__42")]
public sealed virtual Task`1<QueryResult`1<AgentVersion>> GetAgentVersion(CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Agent/<GetServiceConfiguration>d__43")]
public sealed virtual Task`1<QueryResult`1<ServiceConfiguration>> GetServiceConfiguration(string serviceId, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Agent/<GetServiceConfiguration>d__44")]
public sealed virtual Task`1<QueryResult`1<ServiceConfiguration>> GetServiceConfiguration(string serviceId, QueryOptions q, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Agent/<ConnectAuthorize>d__45")]
public sealed virtual Task`1<WriteResult`1<AgentAuthorizeResponse>> ConnectAuthorize(AgentAuthorizeParameters parameters, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Agent/<ConnectAuthorize>d__46")]
public sealed virtual Task`1<WriteResult`1<AgentAuthorizeResponse>> ConnectAuthorize(AgentAuthorizeParameters parameters, WriteOptions w, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Agent/<GetCARoots>d__47")]
public sealed virtual Task`1<QueryResult`1<CARoots>> GetCARoots(CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Agent/<GetCARoots>d__48")]
public sealed virtual Task`1<QueryResult`1<CARoots>> GetCARoots(QueryOptions q, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Agent/<GetCALeaf>d__49")]
public sealed virtual Task`1<QueryResult`1<CALeaf>> GetCALeaf(string serviceId, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Agent/<GetCALeaf>d__50")]
public sealed virtual Task`1<QueryResult`1<CALeaf>> GetCALeaf(string serviceId, QueryOptions q, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Agent/<GetAgentMetrics>d__52")]
public sealed virtual Task`1<QueryResult`1<Metrics>> GetAgentMetrics(CancellationToken ct);
}
public class Consul.AgentAuthorizeParameters : object {
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientCertURI>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientCertSerial>k__BackingField;
    public string Target { get; public set; }
    public string ClientCertURI { get; public set; }
    public string ClientCertSerial { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public string get_ClientCertURI();
    [CompilerGeneratedAttribute]
public void set_ClientCertURI(string value);
    [CompilerGeneratedAttribute]
public string get_ClientCertSerial();
    [CompilerGeneratedAttribute]
public void set_ClientCertSerial(string value);
}
public class Consul.AgentAuthorizeResponse : object {
    [CompilerGeneratedAttribute]
private bool <Authorized>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    public bool Authorized { get; public set; }
    public string Reason { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Authorized();
    [CompilerGeneratedAttribute]
public void set_Authorized(bool value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
}
public class Consul.AgentCheck : object {
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CheckID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private HealthStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Notes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Output>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    public string Node { get; public set; }
    public string CheckID { get; public set; }
    public string Name { get; public set; }
    [JsonConverterAttribute("Consul.HealthStatusConverter")]
public HealthStatus Status { get; public set; }
    public string Notes { get; public set; }
    public string Output { get; public set; }
    public string ServiceID { get; public set; }
    public string ServiceName { get; public set; }
    public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
public void set_Node(string value);
    [CompilerGeneratedAttribute]
public string get_CheckID();
    [CompilerGeneratedAttribute]
public void set_CheckID(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public HealthStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(HealthStatus value);
    [CompilerGeneratedAttribute]
public string get_Notes();
    [CompilerGeneratedAttribute]
public void set_Notes(string value);
    [CompilerGeneratedAttribute]
public string get_Output();
    [CompilerGeneratedAttribute]
public void set_Output(string value);
    [CompilerGeneratedAttribute]
public string get_ServiceID();
    [CompilerGeneratedAttribute]
public void set_ServiceID(string value);
    [CompilerGeneratedAttribute]
public string get_ServiceName();
    [CompilerGeneratedAttribute]
public void set_ServiceName(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
public class Consul.AgentCheckRegistration : AgentServiceCheck {
    [CompilerGeneratedAttribute]
private string <ServiceID>k__BackingField;
    [JsonPropertyAttribute]
public string ServiceID { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ServiceID();
    [CompilerGeneratedAttribute]
public void set_ServiceID(string value);
}
public class Consul.AgentHostInfo : object {
    [CompilerGeneratedAttribute]
private MemoryInfo <Memory>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<CPUInfo> <CPU>k__BackingField;
    [CompilerGeneratedAttribute]
private HostInfo <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private DiskInfo <Disk>k__BackingField;
    [CompilerGeneratedAttribute]
private long <CollectionTime>k__BackingField;
    public MemoryInfo Memory { get; public set; }
    public List`1<CPUInfo> CPU { get; public set; }
    public HostInfo Host { get; public set; }
    public DiskInfo Disk { get; public set; }
    public long CollectionTime { get; public set; }
    [CompilerGeneratedAttribute]
public MemoryInfo get_Memory();
    [CompilerGeneratedAttribute]
public void set_Memory(MemoryInfo value);
    [CompilerGeneratedAttribute]
public List`1<CPUInfo> get_CPU();
    [CompilerGeneratedAttribute]
public void set_CPU(List`1<CPUInfo> value);
    [CompilerGeneratedAttribute]
public HostInfo get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(HostInfo value);
    [CompilerGeneratedAttribute]
public DiskInfo get_Disk();
    [CompilerGeneratedAttribute]
public void set_Disk(DiskInfo value);
    [CompilerGeneratedAttribute]
public long get_CollectionTime();
    [CompilerGeneratedAttribute]
public void set_CollectionTime(long value);
}
public class Consul.AgentMember : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Addr>k__BackingField;
    [CompilerGeneratedAttribute]
private ushort <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private byte <ProtocolMin>k__BackingField;
    [CompilerGeneratedAttribute]
private byte <ProtocolMax>k__BackingField;
    [CompilerGeneratedAttribute]
private byte <ProtocolCur>k__BackingField;
    [CompilerGeneratedAttribute]
private byte <DelegateMin>k__BackingField;
    [CompilerGeneratedAttribute]
private byte <DelegateMax>k__BackingField;
    [CompilerGeneratedAttribute]
private byte <DelegateCur>k__BackingField;
    public string Name { get; public set; }
    public string Addr { get; public set; }
    public ushort Port { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public int Status { get; public set; }
    public byte ProtocolMin { get; public set; }
    public byte ProtocolMax { get; public set; }
    public byte ProtocolCur { get; public set; }
    public byte DelegateMin { get; public set; }
    public byte DelegateMax { get; public set; }
    public byte DelegateCur { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Addr();
    [CompilerGeneratedAttribute]
public void set_Addr(string value);
    [CompilerGeneratedAttribute]
public ushort get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(ushort value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public int get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(int value);
    [CompilerGeneratedAttribute]
public byte get_ProtocolMin();
    [CompilerGeneratedAttribute]
public void set_ProtocolMin(byte value);
    [CompilerGeneratedAttribute]
public byte get_ProtocolMax();
    [CompilerGeneratedAttribute]
public void set_ProtocolMax(byte value);
    [CompilerGeneratedAttribute]
public byte get_ProtocolCur();
    [CompilerGeneratedAttribute]
public void set_ProtocolCur(byte value);
    [CompilerGeneratedAttribute]
public byte get_DelegateMin();
    [CompilerGeneratedAttribute]
public void set_DelegateMin(byte value);
    [CompilerGeneratedAttribute]
public byte get_DelegateMax();
    [CompilerGeneratedAttribute]
public void set_DelegateMax(byte value);
    [CompilerGeneratedAttribute]
public byte get_DelegateCur();
    [CompilerGeneratedAttribute]
public void set_DelegateCur(byte value);
}
public class Consul.AgentService : object {
    [CompilerGeneratedAttribute]
private string <ID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ServiceTaggedAddress> <TaggedAddresses>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableTagOverride>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private AgentServiceProxy <Proxy>k__BackingField;
    [CompilerGeneratedAttribute]
private ServiceKind <Kind>k__BackingField;
    public string ID { get; public set; }
    public string Service { get; public set; }
    public String[] Tags { get; public set; }
    public int Port { get; public set; }
    public string Address { get; public set; }
    public IDictionary`2<string, ServiceTaggedAddress> TaggedAddresses { get; public set; }
    public bool EnableTagOverride { get; public set; }
    public IDictionary`2<string, string> Meta { get; public set; }
    [JsonPropertyAttribute]
public AgentServiceProxy Proxy { get; public set; }
    [JsonPropertyAttribute]
public ServiceKind Kind { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ID();
    [CompilerGeneratedAttribute]
public void set_ID(string value);
    [CompilerGeneratedAttribute]
public string get_Service();
    [CompilerGeneratedAttribute]
public void set_Service(string value);
    [CompilerGeneratedAttribute]
public String[] get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(String[] value);
    [CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(int value);
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ServiceTaggedAddress> get_TaggedAddresses();
    [CompilerGeneratedAttribute]
public void set_TaggedAddresses(IDictionary`2<string, ServiceTaggedAddress> value);
    [CompilerGeneratedAttribute]
public bool get_EnableTagOverride();
    [CompilerGeneratedAttribute]
public void set_EnableTagOverride(bool value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public AgentServiceProxy get_Proxy();
    [CompilerGeneratedAttribute]
public void set_Proxy(AgentServiceProxy value);
    [CompilerGeneratedAttribute]
public ServiceKind get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(ServiceKind value);
}
public class Consul.AgentServiceCheck : object {
    [CompilerGeneratedAttribute]
private string <ID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CheckID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Notes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Script>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Args>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DockerContainerID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Shell>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Interval>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TTL>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HTTP>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, List`1<string>> <Header>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Body>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TCP>k__BackingField;
    [CompilerGeneratedAttribute]
private HealthStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TLSSkipVerify>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GRPC>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <GRPCUseTLS>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AliasService>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AliasNode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <DeregisterCriticalServiceAfter>k__BackingField;
    [ObsoleteAttribute("Use CheckId instead")]
[JsonPropertyAttribute]
public string ID { get; public set; }
    [JsonPropertyAttribute]
public string CheckID { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Notes { get; public set; }
    [JsonPropertyAttribute]
public string Script { get; public set; }
    [JsonPropertyAttribute]
public String[] Args { get; public set; }
    [JsonPropertyAttribute]
public string DockerContainerID { get; public set; }
    [JsonPropertyAttribute]
public string Shell { get; public set; }
    [JsonConverterAttribute("Consul.DurationTimespanConverter")]
[JsonPropertyAttribute]
public Nullable`1<TimeSpan> Interval { get; public set; }
    [JsonConverterAttribute("Consul.DurationTimespanConverter")]
[JsonPropertyAttribute]
public Nullable`1<TimeSpan> Timeout { get; public set; }
    [JsonConverterAttribute("Consul.DurationTimespanConverter")]
[JsonPropertyAttribute]
public Nullable`1<TimeSpan> TTL { get; public set; }
    [JsonPropertyAttribute]
public string HTTP { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, List`1<string>> Header { get; public set; }
    [JsonPropertyAttribute]
public string Method { get; public set; }
    [JsonPropertyAttribute]
public string Body { get; public set; }
    [JsonPropertyAttribute]
public string TCP { get; public set; }
    [JsonPropertyAttribute]
[JsonConverterAttribute("Consul.HealthStatusConverter")]
public HealthStatus Status { get; public set; }
    [JsonPropertyAttribute]
public bool TLSSkipVerify { get; public set; }
    [JsonPropertyAttribute]
public string GRPC { get; public set; }
    [JsonPropertyAttribute]
public bool GRPCUseTLS { get; public set; }
    [JsonPropertyAttribute]
public string AliasService { get; public set; }
    [JsonPropertyAttribute]
public string AliasNode { get; public set; }
    [JsonConverterAttribute("Consul.DurationTimespanConverter")]
[JsonPropertyAttribute]
public Nullable`1<TimeSpan> DeregisterCriticalServiceAfter { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ID();
    [CompilerGeneratedAttribute]
public void set_ID(string value);
    [CompilerGeneratedAttribute]
public string get_CheckID();
    [CompilerGeneratedAttribute]
public void set_CheckID(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Notes();
    [CompilerGeneratedAttribute]
public void set_Notes(string value);
    [CompilerGeneratedAttribute]
public string get_Script();
    [CompilerGeneratedAttribute]
public void set_Script(string value);
    [CompilerGeneratedAttribute]
public String[] get_Args();
    [CompilerGeneratedAttribute]
public void set_Args(String[] value);
    [CompilerGeneratedAttribute]
public string get_DockerContainerID();
    [CompilerGeneratedAttribute]
public void set_DockerContainerID(string value);
    [CompilerGeneratedAttribute]
public string get_Shell();
    [CompilerGeneratedAttribute]
public void set_Shell(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_Interval();
    [CompilerGeneratedAttribute]
public void set_Interval(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_Timeout();
    [CompilerGeneratedAttribute]
public void set_Timeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_TTL();
    [CompilerGeneratedAttribute]
public void set_TTL(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public string get_HTTP();
    [CompilerGeneratedAttribute]
public void set_HTTP(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, List`1<string>> get_Header();
    [CompilerGeneratedAttribute]
public void set_Header(Dictionary`2<string, List`1<string>> value);
    [CompilerGeneratedAttribute]
public string get_Method();
    [CompilerGeneratedAttribute]
public void set_Method(string value);
    [CompilerGeneratedAttribute]
public string get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(string value);
    [CompilerGeneratedAttribute]
public string get_TCP();
    [CompilerGeneratedAttribute]
public void set_TCP(string value);
    [CompilerGeneratedAttribute]
public HealthStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(HealthStatus value);
    [CompilerGeneratedAttribute]
public bool get_TLSSkipVerify();
    [CompilerGeneratedAttribute]
public void set_TLSSkipVerify(bool value);
    [CompilerGeneratedAttribute]
public string get_GRPC();
    [CompilerGeneratedAttribute]
public void set_GRPC(string value);
    [CompilerGeneratedAttribute]
public bool get_GRPCUseTLS();
    [CompilerGeneratedAttribute]
public void set_GRPCUseTLS(bool value);
    [CompilerGeneratedAttribute]
public string get_AliasService();
    [CompilerGeneratedAttribute]
public void set_AliasService(string value);
    [CompilerGeneratedAttribute]
public string get_AliasNode();
    [CompilerGeneratedAttribute]
public void set_AliasNode(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_DeregisterCriticalServiceAfter();
    [CompilerGeneratedAttribute]
public void set_DeregisterCriticalServiceAfter(Nullable`1<TimeSpan> value);
}
public class Consul.AgentServiceConnect : object {
    [CompilerGeneratedAttribute]
private AgentServiceRegistration <SidecarService>k__BackingField;
    [JsonPropertyAttribute]
public AgentServiceRegistration SidecarService { get; public set; }
    [CompilerGeneratedAttribute]
public AgentServiceRegistration get_SidecarService();
    [CompilerGeneratedAttribute]
public void set_SidecarService(AgentServiceRegistration value);
}
public class Consul.AgentServiceProxy : object {
    [CompilerGeneratedAttribute]
private string <DestinationServiceID>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LocalServicePort>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LocalServiceAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DestinationServiceName>k__BackingField;
    [CompilerGeneratedAttribute]
private AgentServiceProxyUpstream[] <Upstreams>k__BackingField;
    [JsonPropertyAttribute]
public string DestinationServiceID { get; public set; }
    [JsonPropertyAttribute]
public int LocalServicePort { get; public set; }
    [JsonPropertyAttribute]
public string LocalServiceAddress { get; public set; }
    [JsonPropertyAttribute]
public string DestinationServiceName { get; public set; }
    [JsonPropertyAttribute]
public AgentServiceProxyUpstream[] Upstreams { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DestinationServiceID();
    [CompilerGeneratedAttribute]
public void set_DestinationServiceID(string value);
    [CompilerGeneratedAttribute]
public int get_LocalServicePort();
    [CompilerGeneratedAttribute]
public void set_LocalServicePort(int value);
    [CompilerGeneratedAttribute]
public string get_LocalServiceAddress();
    [CompilerGeneratedAttribute]
public void set_LocalServiceAddress(string value);
    [CompilerGeneratedAttribute]
public string get_DestinationServiceName();
    [CompilerGeneratedAttribute]
public void set_DestinationServiceName(string value);
    [CompilerGeneratedAttribute]
public AgentServiceProxyUpstream[] get_Upstreams();
    [CompilerGeneratedAttribute]
public void set_Upstreams(AgentServiceProxyUpstream[] value);
}
public class Consul.AgentServiceProxyUpstream : object {
    [CompilerGeneratedAttribute]
private string <DestinationName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LocalBindPort>k__BackingField;
    [JsonPropertyAttribute]
public string DestinationName { get; public set; }
    [JsonPropertyAttribute]
public int LocalBindPort { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DestinationName();
    [CompilerGeneratedAttribute]
public void set_DestinationName(string value);
    [CompilerGeneratedAttribute]
public int get_LocalBindPort();
    [CompilerGeneratedAttribute]
public void set_LocalBindPort(int value);
}
public class Consul.AgentServiceRegistration : object {
    [CompilerGeneratedAttribute]
private string <ID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableTagOverride>k__BackingField;
    [CompilerGeneratedAttribute]
private AgentServiceCheck <Check>k__BackingField;
    [CompilerGeneratedAttribute]
private AgentServiceCheck[] <Checks>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ServiceTaggedAddress> <TaggedAddresses>k__BackingField;
    [CompilerGeneratedAttribute]
private AgentServiceConnect <Connect>k__BackingField;
    [CompilerGeneratedAttribute]
private AgentServiceProxy <Proxy>k__BackingField;
    [CompilerGeneratedAttribute]
private ServiceKind <Kind>k__BackingField;
    [JsonPropertyAttribute]
public string ID { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public String[] Tags { get; public set; }
    [JsonPropertyAttribute]
public int Port { get; public set; }
    [JsonPropertyAttribute]
public string Address { get; public set; }
    [JsonPropertyAttribute]
public bool EnableTagOverride { get; public set; }
    [JsonPropertyAttribute]
public AgentServiceCheck Check { get; public set; }
    [JsonPropertyAttribute]
public AgentServiceCheck[] Checks { get; public set; }
    [JsonPropertyAttribute]
public IDictionary`2<string, string> Meta { get; public set; }
    [JsonPropertyAttribute]
public IDictionary`2<string, ServiceTaggedAddress> TaggedAddresses { get; public set; }
    [JsonPropertyAttribute]
public AgentServiceConnect Connect { get; public set; }
    [JsonPropertyAttribute]
public AgentServiceProxy Proxy { get; public set; }
    [JsonPropertyAttribute]
public ServiceKind Kind { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ID();
    [CompilerGeneratedAttribute]
public void set_ID(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public String[] get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(String[] value);
    [CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(int value);
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(string value);
    [CompilerGeneratedAttribute]
public bool get_EnableTagOverride();
    [CompilerGeneratedAttribute]
public void set_EnableTagOverride(bool value);
    [CompilerGeneratedAttribute]
public AgentServiceCheck get_Check();
    [CompilerGeneratedAttribute]
public void set_Check(AgentServiceCheck value);
    [CompilerGeneratedAttribute]
public AgentServiceCheck[] get_Checks();
    [CompilerGeneratedAttribute]
public void set_Checks(AgentServiceCheck[] value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ServiceTaggedAddress> get_TaggedAddresses();
    [CompilerGeneratedAttribute]
public void set_TaggedAddresses(IDictionary`2<string, ServiceTaggedAddress> value);
    [CompilerGeneratedAttribute]
public AgentServiceConnect get_Connect();
    [CompilerGeneratedAttribute]
public void set_Connect(AgentServiceConnect value);
    [CompilerGeneratedAttribute]
public AgentServiceProxy get_Proxy();
    [CompilerGeneratedAttribute]
public void set_Proxy(AgentServiceProxy value);
    [CompilerGeneratedAttribute]
public ServiceKind get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(ServiceKind value);
}
public class Consul.AgentVersion : object {
    [CompilerGeneratedAttribute]
private string <SHA>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <BuildDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HumanVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FIPS>k__BackingField;
    public string SHA { get; public set; }
    public DateTime BuildDate { get; public set; }
    public string HumanVersion { get; public set; }
    public string FIPS { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SHA();
    [CompilerGeneratedAttribute]
public void set_SHA(string value);
    [CompilerGeneratedAttribute]
public DateTime get_BuildDate();
    [CompilerGeneratedAttribute]
public void set_BuildDate(DateTime value);
    [CompilerGeneratedAttribute]
public string get_HumanVersion();
    [CompilerGeneratedAttribute]
public void set_HumanVersion(string value);
    [CompilerGeneratedAttribute]
public string get_FIPS();
    [CompilerGeneratedAttribute]
public void set_FIPS(string value);
}
public class Consul.ApiGatewayCertificate : object {
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Partition>k__BackingField;
    [JsonPropertyAttribute]
public string Kind { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Namespace { get; public set; }
    [JsonPropertyAttribute]
public string Partition { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(string value);
}
public class Consul.ApiGatewayEntry : object {
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiGatewayListener> <Listeners>k__BackingField;
    [JsonPropertyAttribute]
public string Kind { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Namespace { get; public set; }
    [JsonPropertyAttribute]
public string Partition { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Meta { get; public set; }
    [JsonPropertyAttribute]
public List`1<ApiGatewayListener> Listeners { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public List`1<ApiGatewayListener> get_Listeners();
    [CompilerGeneratedAttribute]
public void set_Listeners(List`1<ApiGatewayListener> value);
}
public class Consul.ApiGatewayJWTProvider : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ApiGatewayVerifyClaims <VerifyClaims>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public ApiGatewayVerifyClaims VerifyClaims { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public ApiGatewayVerifyClaims get_VerifyClaims();
    [CompilerGeneratedAttribute]
public void set_VerifyClaims(ApiGatewayVerifyClaims value);
}
public class Consul.ApiGatewayJWTSettings : object {
    [CompilerGeneratedAttribute]
private List`1<ApiGatewayJWTProvider> <Providers>k__BackingField;
    [JsonPropertyAttribute]
public List`1<ApiGatewayJWTProvider> Providers { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<ApiGatewayJWTProvider> get_Providers();
    [CompilerGeneratedAttribute]
public void set_Providers(List`1<ApiGatewayJWTProvider> value);
}
public class Consul.ApiGatewayListener : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Protocol>k__BackingField;
    [CompilerGeneratedAttribute]
private ApiGatewayTLS <TLS>k__BackingField;
    [CompilerGeneratedAttribute]
private ApiGatewayOverrideSettings <Default>k__BackingField;
    [CompilerGeneratedAttribute]
private ApiGatewayOverrideSettings <Override>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> Port { get; public set; }
    [JsonPropertyAttribute]
public string Protocol { get; public set; }
    [JsonPropertyAttribute]
public ApiGatewayTLS TLS { get; public set; }
    [JsonPropertyAttribute]
public ApiGatewayOverrideSettings Default { get; public set; }
    [JsonPropertyAttribute]
public ApiGatewayOverrideSettings Override { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(string value);
    [CompilerGeneratedAttribute]
public ApiGatewayTLS get_TLS();
    [CompilerGeneratedAttribute]
public void set_TLS(ApiGatewayTLS value);
    [CompilerGeneratedAttribute]
public ApiGatewayOverrideSettings get_Default();
    [CompilerGeneratedAttribute]
public void set_Default(ApiGatewayOverrideSettings value);
    [CompilerGeneratedAttribute]
public ApiGatewayOverrideSettings get_Override();
    [CompilerGeneratedAttribute]
public void set_Override(ApiGatewayOverrideSettings value);
}
public class Consul.ApiGatewayOverrideSettings : object {
    [CompilerGeneratedAttribute]
private ApiGatewayJWTSettings <JWT>k__BackingField;
    [JsonPropertyAttribute]
public ApiGatewayJWTSettings JWT { get; public set; }
    [CompilerGeneratedAttribute]
public ApiGatewayJWTSettings get_JWT();
    [CompilerGeneratedAttribute]
public void set_JWT(ApiGatewayJWTSettings value);
}
public class Consul.ApiGatewayReference : object {
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SectionName>k__BackingField;
    [JsonPropertyAttribute]
public string Kind { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Namespace { get; public set; }
    [JsonPropertyAttribute]
public string Partition { get; public set; }
    [JsonPropertyAttribute]
public string SectionName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(string value);
    [CompilerGeneratedAttribute]
public string get_SectionName();
    [CompilerGeneratedAttribute]
public void set_SectionName(string value);
}
public class Consul.ApiGatewayTLS : object {
    [CompilerGeneratedAttribute]
private string <MaxVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MinVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <CipherSuites>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiGatewayCertificate> <Certificates>k__BackingField;
    [JsonPropertyAttribute]
public string MaxVersion { get; public set; }
    [JsonPropertyAttribute]
public string MinVersion { get; public set; }
    [JsonPropertyAttribute]
public List`1<string> CipherSuites { get; public set; }
    [JsonPropertyAttribute]
public List`1<ApiGatewayCertificate> Certificates { get; public set; }
    [CompilerGeneratedAttribute]
public string get_MaxVersion();
    [CompilerGeneratedAttribute]
public void set_MaxVersion(string value);
    [CompilerGeneratedAttribute]
public string get_MinVersion();
    [CompilerGeneratedAttribute]
public void set_MinVersion(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_CipherSuites();
    [CompilerGeneratedAttribute]
public void set_CipherSuites(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<ApiGatewayCertificate> get_Certificates();
    [CompilerGeneratedAttribute]
public void set_Certificates(List`1<ApiGatewayCertificate> value);
}
public class Consul.ApiGatewayVerifyClaims : object {
    [CompilerGeneratedAttribute]
private List`1<string> <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [JsonPropertyAttribute]
public List`1<string> Path { get; public set; }
    [JsonPropertyAttribute]
public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<string> get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(List`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
internal class Consul.AsyncLock : object {
    private SemaphoreSlim _semaphore;
    private Task`1<Releaser> _releaser;
    public Task`1<Releaser> LockAsync();
}
internal class Consul.AsyncReaderWriterLock : object {
    private Task`1<Releaser> _readerReleaser;
    private Task`1<Releaser> _writerReleaser;
    private Queue`1<TaskCompletionSource`1<Releaser>> _waitingWriters;
    private TaskCompletionSource`1<Releaser> _waitingReader;
    private int _readersWaiting;
    private int _status;
    public Task`1<Releaser> ReaderLockAsync();
    public Task`1<Releaser> WriterLockAsync();
    private void ReaderRelease();
    private void WriterRelease();
}
public class Consul.AuthMethod : object {
    private ConsulClient _client;
    internal AuthMethod(ConsulClient c);
    public sealed virtual Task`1<WriteResult`1<AuthMethodEntry>> Create(AuthMethodEntry authMethod, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.AuthMethod/<Create>d__4")]
public sealed virtual Task`1<WriteResult`1<AuthMethodEntry>> Create(AuthMethodEntry authMethod, WriteOptions writeOptions, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<AuthMethodEntry>> Update(AuthMethodEntry authMethod, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.AuthMethod/<Update>d__6")]
public sealed virtual Task`1<WriteResult`1<AuthMethodEntry>> Update(AuthMethodEntry authMethod, WriteOptions writeOptions, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<bool>> Delete(string name, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<bool>> Delete(string name, WriteOptions writeOptions, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<AuthMethodEntry>> Read(string name, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.AuthMethod/<Read>d__10")]
public sealed virtual Task`1<QueryResult`1<AuthMethodEntry>> Read(string name, QueryOptions queryOptions, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<AuthMethodEntry[]>> List(CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<AuthMethodEntry[]>> List(QueryOptions queryOptions, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<TokenEntry>> Login(CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.AuthMethod/<Login>d__14")]
public sealed virtual Task`1<WriteResult`1<TokenEntry>> Login(WriteOptions writeOptions, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> Logout(CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.AuthMethod/<Logout>d__16")]
public sealed virtual Task`1<WriteResult> Logout(WriteOptions writeOptions, CancellationToken ct);
}
public class Consul.AuthMethodEntry : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Config>k__BackingField;
    public string Name { get; public set; }
    public string Type { get; public set; }
    [JsonPropertyAttribute]
public string Description { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Config { get; public set; }
    public AuthMethodEntry(string name, string type, Dictionary`2<string, string> config);
    public AuthMethodEntry(string name, string type, string description, Dictionary`2<string, string> config);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Config();
    [CompilerGeneratedAttribute]
public void set_Config(Dictionary`2<string, string> value);
    public bool ShouldSerializeCreateIndex();
    public bool ShouldSerializeModifyIndex();
}
public class Consul.CaCertificateProviderInstanceConfig : object {
    [CompilerGeneratedAttribute]
private string <InstanceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CertificateName>k__BackingField;
    [JsonPropertyAttribute]
public string InstanceName { get; public set; }
    [JsonPropertyAttribute]
public string CertificateName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_InstanceName();
    [CompilerGeneratedAttribute]
public void set_InstanceName(string value);
    [CompilerGeneratedAttribute]
public string get_CertificateName();
    [CompilerGeneratedAttribute]
public void set_CertificateName(string value);
}
public class Consul.CacheConfig : object {
    [CompilerGeneratedAttribute]
private string <Size>k__BackingField;
    [JsonPropertyAttribute]
public string Size { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Size();
    [CompilerGeneratedAttribute]
public void set_Size(string value);
}
public class Consul.CALeaf : object {
    [CompilerGeneratedAttribute]
private string <SerialNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CertPEM>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PrivateKeyPEM>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceURI>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ValidAfter>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ValidBefore>k__BackingField;
    [CompilerGeneratedAttribute]
private long <CreateIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ModifyIndex>k__BackingField;
    public string SerialNumber { get; public set; }
    public string CertPEM { get; public set; }
    public string PrivateKeyPEM { get; public set; }
    public string Service { get; public set; }
    public string ServiceURI { get; public set; }
    public DateTime ValidAfter { get; public set; }
    public DateTime ValidBefore { get; public set; }
    public long CreateIndex { get; public set; }
    public long ModifyIndex { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SerialNumber();
    [CompilerGeneratedAttribute]
public void set_SerialNumber(string value);
    [CompilerGeneratedAttribute]
public string get_CertPEM();
    [CompilerGeneratedAttribute]
public void set_CertPEM(string value);
    [CompilerGeneratedAttribute]
public string get_PrivateKeyPEM();
    [CompilerGeneratedAttribute]
public void set_PrivateKeyPEM(string value);
    [CompilerGeneratedAttribute]
public string get_Service();
    [CompilerGeneratedAttribute]
public void set_Service(string value);
    [CompilerGeneratedAttribute]
public string get_ServiceURI();
    [CompilerGeneratedAttribute]
public void set_ServiceURI(string value);
    [CompilerGeneratedAttribute]
public DateTime get_ValidAfter();
    [CompilerGeneratedAttribute]
public void set_ValidAfter(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_ValidBefore();
    [CompilerGeneratedAttribute]
public void set_ValidBefore(DateTime value);
    [CompilerGeneratedAttribute]
public long get_CreateIndex();
    [CompilerGeneratedAttribute]
public void set_CreateIndex(long value);
    [CompilerGeneratedAttribute]
public long get_ModifyIndex();
    [CompilerGeneratedAttribute]
public void set_ModifyIndex(long value);
}
public class Consul.CARoots : object {
    [CompilerGeneratedAttribute]
private string <ActiveRootID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TrustDomain>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Root> <Roots>k__BackingField;
    public string ActiveRootID { get; public set; }
    public string TrustDomain { get; public set; }
    public List`1<Root> Roots { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ActiveRootID();
    [CompilerGeneratedAttribute]
public void set_ActiveRootID(string value);
    [CompilerGeneratedAttribute]
public string get_TrustDomain();
    [CompilerGeneratedAttribute]
public void set_TrustDomain(string value);
    [CompilerGeneratedAttribute]
public List`1<Root> get_Roots();
    [CompilerGeneratedAttribute]
public void set_Roots(List`1<Root> value);
}
public class Consul.Catalog : object {
    private ConsulClient _client;
    internal Catalog(ConsulClient c);
    public sealed virtual Task`1<WriteResult> Register(CatalogRegistration reg, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> Register(CatalogRegistration reg, WriteOptions q, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> Deregister(CatalogDeregistration reg, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> Deregister(CatalogDeregistration reg, WriteOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<String[]>> Datacenters(CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<String[]>> Datacenters(QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<Node[]>> Nodes(CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<Node[]>> Nodes(QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<Dictionary`2<string, String[]>>> Services(CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<Dictionary`2<string, String[]>>> Services(QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<CatalogService[]>> Service(string service, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<CatalogService[]>> Service(string service, string tag, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<CatalogService[]>> Service(string service, string tag, QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<CatalogService[]>> NodesForMeshCapableService(string service, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<CatalogService[]>> NodesForMeshCapableService(string service, Filter filter, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<CatalogService[]>> NodesForMeshCapableService(string service, QueryOptions q, Filter filter, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<CatalogNode>> Node(string node, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<CatalogNode>> Node(string node, QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<NodeService>> ServicesForNode(string node, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<NodeService>> ServicesForNode(string node, QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<GatewayService[]>> GatewayService(string gateway, QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<GatewayService[]>> GatewayService(string gateway, CancellationToken ct);
}
public class Consul.CatalogDeregistration : object {
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Datacenter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CheckID>k__BackingField;
    public string Node { get; public set; }
    public string Address { get; public set; }
    public string Datacenter { get; public set; }
    public string ServiceID { get; public set; }
    public string CheckID { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
public void set_Node(string value);
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(string value);
    [CompilerGeneratedAttribute]
public string get_Datacenter();
    [CompilerGeneratedAttribute]
public void set_Datacenter(string value);
    [CompilerGeneratedAttribute]
public string get_ServiceID();
    [CompilerGeneratedAttribute]
public void set_ServiceID(string value);
    [CompilerGeneratedAttribute]
public string get_CheckID();
    [CompilerGeneratedAttribute]
public void set_CheckID(string value);
}
public class Consul.CatalogNode : object {
    [CompilerGeneratedAttribute]
private Node <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, AgentService> <Services>k__BackingField;
    public Node Node { get; public set; }
    public Dictionary`2<string, AgentService> Services { get; public set; }
    [CompilerGeneratedAttribute]
public Node get_Node();
    [CompilerGeneratedAttribute]
public void set_Node(Node value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, AgentService> get_Services();
    [CompilerGeneratedAttribute]
public void set_Services(Dictionary`2<string, AgentService> value);
}
public class Consul.CatalogRateLimit : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ReadRate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <WriteRate>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<int> ReadRate { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> WriteRate { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ReadRate();
    [CompilerGeneratedAttribute]
public void set_ReadRate(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_WriteRate();
    [CompilerGeneratedAttribute]
public void set_WriteRate(Nullable`1<int> value);
}
public class Consul.CatalogRegistration : object {
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Datacenter>k__BackingField;
    [CompilerGeneratedAttribute]
private AgentService <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private AgentCheck <Check>k__BackingField;
    public string Node { get; public set; }
    public string Address { get; public set; }
    public string Datacenter { get; public set; }
    public AgentService Service { get; public set; }
    public AgentCheck Check { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
public void set_Node(string value);
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(string value);
    [CompilerGeneratedAttribute]
public string get_Datacenter();
    [CompilerGeneratedAttribute]
public void set_Datacenter(string value);
    [CompilerGeneratedAttribute]
public AgentService get_Service();
    [CompilerGeneratedAttribute]
public void set_Service(AgentService value);
    [CompilerGeneratedAttribute]
public AgentCheck get_Check();
    [CompilerGeneratedAttribute]
public void set_Check(AgentCheck value);
}
public class Consul.CatalogService : object {
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <ServiceTags>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ServicePort>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, ServiceTaggedAddress> <ServiceTaggedAddresses>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ServiceEnableTagOverride>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <ServiceMeta>k__BackingField;
    public string Node { get; public set; }
    public string Address { get; public set; }
    public string ServiceID { get; public set; }
    public string ServiceName { get; public set; }
    public string ServiceAddress { get; public set; }
    public String[] ServiceTags { get; public set; }
    public int ServicePort { get; public set; }
    public Dictionary`2<string, ServiceTaggedAddress> ServiceTaggedAddresses { get; public set; }
    public bool ServiceEnableTagOverride { get; public set; }
    public IDictionary`2<string, string> ServiceMeta { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
public void set_Node(string value);
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(string value);
    [CompilerGeneratedAttribute]
public string get_ServiceID();
    [CompilerGeneratedAttribute]
public void set_ServiceID(string value);
    [CompilerGeneratedAttribute]
public string get_ServiceName();
    [CompilerGeneratedAttribute]
public void set_ServiceName(string value);
    [CompilerGeneratedAttribute]
public string get_ServiceAddress();
    [CompilerGeneratedAttribute]
public void set_ServiceAddress(string value);
    [CompilerGeneratedAttribute]
public String[] get_ServiceTags();
    [CompilerGeneratedAttribute]
public void set_ServiceTags(String[] value);
    [CompilerGeneratedAttribute]
public int get_ServicePort();
    [CompilerGeneratedAttribute]
public void set_ServicePort(int value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, ServiceTaggedAddress> get_ServiceTaggedAddresses();
    [CompilerGeneratedAttribute]
public void set_ServiceTaggedAddresses(Dictionary`2<string, ServiceTaggedAddress> value);
    [CompilerGeneratedAttribute]
public bool get_ServiceEnableTagOverride();
    [CompilerGeneratedAttribute]
public void set_ServiceEnableTagOverride(bool value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_ServiceMeta();
    [CompilerGeneratedAttribute]
public void set_ServiceMeta(IDictionary`2<string, string> value);
}
public class Consul.CompoundServiceName : object {
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Namespace { get; public set; }
    public string Partition { get; public set; }
    public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Consul.Configuration : object {
    private ConsulClient _client;
    internal Configuration(ConsulClient c);
    public sealed virtual Task`1<WriteResult> ApplyConfig(WriteOptions q, TConfig configurationEntry, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> ApplyConfig(TConfig configurationEntry, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<TConfig>> GetConfig(string kind, string name, QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<TConfig>> GetConfig(string kind, string name, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<List`1<TConfig>>> ListConfig(string kind, QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<List`1<TConfig>>> ListConfig(string kind, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> DeleteConfig(string kind, string name, WriteOptions q, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> DeleteConfig(string kind, string name, CancellationToken ct);
}
public enum Consul.ConsistencyMode : Enum {
    public int value__;
    public static ConsistencyMode Default;
    public static ConsistencyMode Consistent;
    public static ConsistencyMode Stale;
}
public class Consul.ConsulClient : object {
    private Lazy`1<ACL> _acl;
    private Lazy`1<ACLReplication> _aclReplication;
    private Lazy`1<Agent> _agent;
    private Lazy`1<AuthMethod> _authMethod;
    private Lazy`1<Catalog> _catalog;
    private ConsulClientConfigurationContainer _configContainer;
    private bool _disposedValue;
    private Lazy`1<Configuration> _configuration;
    private Lazy`1<Coordinate> _coordinate;
    private Lazy`1<Event> _event;
    private Lazy`1<Health> _health;
    private Lazy`1<KV> _kv;
    private Lazy`1<Namespaces> _namespaces;
    private Lazy`1<Operator> _operator;
    private Lazy`1<Policy> _policy;
    private Lazy`1<PreparedQuery> _preparedquery;
    private Lazy`1<Raw> _raw;
    private Lazy`1<Role> _role;
    private Lazy`1<Session> _session;
    private Lazy`1<Snapshot> _snapshot;
    private Lazy`1<Status> _status;
    private Lazy`1<Token> _token;
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public IACLEndpoint ACL { get; }
    public IACLReplicationEndpoint ACLReplication { get; }
    public IAgentEndpoint Agent { get; }
    public IAuthMethodEndpoint AuthMethod { get; }
    public ICatalogEndpoint Catalog { get; }
    internal HttpClient HttpClient { get; }
    internal HttpClientHandler HttpHandler { get; }
    public ConsulClientConfiguration Config { get; }
    public IConfigurationEndpoint Configuration { get; }
    public ICoordinateEndpoint Coordinate { get; }
    public IEventEndpoint Event { get; }
    public IHealthEndpoint Health { get; }
    public IKVEndpoint KV { get; }
    public INamespacesEndpoint Namespaces { get; }
    public IOperatorEndpoint Operator { get; }
    public IPolicyEndpoint Policy { get; }
    public IPreparedQueryEndpoint PreparedQuery { get; }
    public IRawEndpoint Raw { get; }
    public IRoleEndpoint Role { get; }
    public ISessionEndpoint Session { get; }
    public ISnapshotEndpoint Snapshot { get; }
    public IStatusEndpoint Status { get; }
    public ITokenEndpoint Token { get; }
    public ConsulClient(Action`1<ConsulClientConfiguration> configOverride);
    public ConsulClient(Action`1<ConsulClientConfiguration> configOverride, Action`1<HttpClient> clientOverride);
    public ConsulClient(Action`1<ConsulClientConfiguration> configOverride, Action`1<HttpClient> clientOverride, Action`1<HttpClientHandler> handlerOverride);
    public ConsulClient(ConsulClientConfiguration config);
    public ConsulClient(ConsulClientConfiguration config, HttpClient client);
    public sealed virtual IACLEndpoint get_ACL();
    public IACLReplicationEndpoint get_ACLReplication();
    public sealed virtual IAgentEndpoint get_Agent();
    public IAuthMethodEndpoint get_AuthMethod();
    public sealed virtual ICatalogEndpoint get_Catalog();
    internal HttpClient get_HttpClient();
    internal HttpClientHandler get_HttpHandler();
    public ConsulClientConfiguration get_Config();
    private void InitializeEndpoints();
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
    public void CheckDisposed();
    private void HandleConfigUpdateEvent(object sender, EventArgs e);
    private void ApplyConfig(ConsulClientConfiguration config, HttpClientHandler handler, HttpClient client);
    internal GetRequest`1<TOut> Get(string path, QueryOptions opts, IEncodable filter);
    internal GetRequest Get(string path, QueryOptions opts);
    internal DeleteReturnRequest`1<TOut> DeleteReturning(string path, WriteOptions opts);
    internal DeleteRequest Delete(string path, WriteOptions opts);
    internal DeleteAcceptingRequest`1<TIn> DeleteAccepting(string path, TIn body, WriteOptions opts);
    internal PutReturningRequest`1<TOut> PutReturning(string path, WriteOptions opts);
    internal PutRequest`1<TIn> Put(string path, TIn body, WriteOptions opts);
    internal PutNothingRequest PutNothing(string path, WriteOptions opts);
    internal PutRequest`2<TIn, TOut> Put(string path, TIn body, WriteOptions opts);
    internal PostReturningRequest`1<TOut> PostReturning(string path, WriteOptions opts);
    internal PostRequest`1<TIn> Post(string path, TIn body, WriteOptions opts);
    internal PostRequest`2<TIn, TOut> Post(string path, TIn body, WriteOptions opts);
    internal PostRequest Post(string path, string body, WriteOptions opts);
    public sealed virtual IConfigurationEndpoint get_Configuration();
    public sealed virtual ICoordinateEndpoint get_Coordinate();
    public sealed virtual IEventEndpoint get_Event();
    public sealed virtual IHealthEndpoint get_Health();
    public sealed virtual IKVEndpoint get_KV();
    public sealed virtual IDistributedLock CreateLock(string key);
    public sealed virtual IDistributedLock CreateLock(LockOptions opts);
    public sealed virtual Task`1<IDistributedLock> AcquireLock(string key, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.ConsulClient/<AcquireLock>d__67")]
public sealed virtual Task`1<IDistributedLock> AcquireLock(LockOptions opts, CancellationToken ct);
    public sealed virtual Task ExecuteLocked(string key, Action action, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.ConsulClient/<ExecuteLocked>d__69")]
public sealed virtual Task ExecuteLocked(LockOptions opts, Action action, CancellationToken ct);
    [ObsoleteAttribute("This method will be removed in a future release. Replace calls with the method signature ExecuteLocked(string, Action, CancellationToken)")]
public sealed virtual Task ExecuteLocked(string key, CancellationToken ct, Action action);
    [ObsoleteAttribute("This method will be removed in a future release. Replace calls with the method signature ExecuteLocked(LockOptions, Action, CancellationToken)")]
public sealed virtual Task ExecuteLocked(LockOptions opts, CancellationToken ct, Action action);
    public INamespacesEndpoint get_Namespaces();
    public sealed virtual IOperatorEndpoint get_Operator();
    public sealed virtual IPolicyEndpoint get_Policy();
    public sealed virtual IPreparedQueryEndpoint get_PreparedQuery();
    public sealed virtual IRawEndpoint get_Raw();
    public sealed virtual IRoleEndpoint get_Role();
    public sealed virtual IDistributedSemaphore Semaphore(string prefix, int limit);
    public sealed virtual IDistributedSemaphore Semaphore(SemaphoreOptions opts);
    public sealed virtual Task`1<IDistributedSemaphore> AcquireSemaphore(string prefix, int limit, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.ConsulClient/<AcquireSemaphore>d__93")]
public sealed virtual Task`1<IDistributedSemaphore> AcquireSemaphore(SemaphoreOptions opts, CancellationToken ct);
    public sealed virtual Task ExecuteInSemaphore(string prefix, int limit, Action a, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.ConsulClient/<ExecuteInSemaphore>d__95")]
public sealed virtual Task ExecuteInSemaphore(SemaphoreOptions opts, Action a, CancellationToken ct);
    public sealed virtual ISessionEndpoint get_Session();
    public sealed virtual ISnapshotEndpoint get_Snapshot();
    public sealed virtual IStatusEndpoint get_Status();
    public sealed virtual ITokenEndpoint get_Token();
    [CompilerGeneratedAttribute]
private ACL <InitializeEndpoints>b__29_0();
    [CompilerGeneratedAttribute]
private Agent <InitializeEndpoints>b__29_1();
    [CompilerGeneratedAttribute]
private Catalog <InitializeEndpoints>b__29_2();
    [CompilerGeneratedAttribute]
private Coordinate <InitializeEndpoints>b__29_3();
    [CompilerGeneratedAttribute]
private Configuration <InitializeEndpoints>b__29_4();
    [CompilerGeneratedAttribute]
private Event <InitializeEndpoints>b__29_5();
    [CompilerGeneratedAttribute]
private Health <InitializeEndpoints>b__29_6();
    [CompilerGeneratedAttribute]
private KV <InitializeEndpoints>b__29_7();
    [CompilerGeneratedAttribute]
private Operator <InitializeEndpoints>b__29_8();
    [CompilerGeneratedAttribute]
private Policy <InitializeEndpoints>b__29_9();
    [CompilerGeneratedAttribute]
private PreparedQuery <InitializeEndpoints>b__29_10();
    [CompilerGeneratedAttribute]
private Raw <InitializeEndpoints>b__29_11();
    [CompilerGeneratedAttribute]
private Role <InitializeEndpoints>b__29_12();
    [CompilerGeneratedAttribute]
private Session <InitializeEndpoints>b__29_13();
    [CompilerGeneratedAttribute]
private Snapshot <InitializeEndpoints>b__29_14();
    [CompilerGeneratedAttribute]
private Status <InitializeEndpoints>b__29_15();
    [CompilerGeneratedAttribute]
private Token <InitializeEndpoints>b__29_16();
    [CompilerGeneratedAttribute]
private ACLReplication <InitializeEndpoints>b__29_17();
    [CompilerGeneratedAttribute]
private AuthMethod <InitializeEndpoints>b__29_18();
    [CompilerGeneratedAttribute]
private Namespaces <InitializeEndpoints>b__29_19();
}
public class Consul.ConsulClientConfiguration : object {
    private NetworkCredential _httpauth;
    private bool _disableServerCertificateValidation;
    private X509Certificate2 _clientCertificate;
    [CompilerGeneratedAttribute]
private EventHandler _updated;
    internal static Lazy`1<bool> ClientCertSupport;
    [CompilerGeneratedAttribute]
private Uri <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Datacenter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <WaitTime>k__BackingField;
    internal static bool ClientCertificateSupported { get; }
    [ObsoleteAttribute("Use of DisableServerCertificateValidation should be converted to setting the HttpHandler's ServerCertificateCustomValidationCallback in the ConsulClient constructorThis property will be removed in a future release.", "False")]
internal bool DisableServerCertificateValidation { get; internal set; }
    public Uri Address { get; public set; }
    public string Namespace { get; public set; }
    public string Datacenter { get; public set; }
    [ObsoleteAttribute("Use of HttpAuth should be converted to setting the HttpHandler's Credential property in the ConsulClient constructorThis property will be removed in a future release.", "False")]
internal NetworkCredential HttpAuth { get; public set; }
    [ObsoleteAttribute("Use of ClientCertificate should be converted to adding to the HttpHandler's ClientCertificates list in the ConsulClient constructor.This property will be removed in a future release.", "False")]
internal X509Certificate2 ClientCertificate { get; public set; }
    public string Token { get; public set; }
    public Nullable`1<TimeSpan> WaitTime { get; public set; }
    private static ConsulClientConfiguration();
    [CompilerGeneratedAttribute]
internal void add__updated(EventHandler value);
    [CompilerGeneratedAttribute]
internal void remove__updated(EventHandler value);
    internal static bool get_ClientCertificateSupported();
    internal bool get_DisableServerCertificateValidation();
    internal void set_DisableServerCertificateValidation(bool value);
    [CompilerGeneratedAttribute]
public Uri get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(Uri value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Datacenter();
    [CompilerGeneratedAttribute]
public void set_Datacenter(string value);
    internal NetworkCredential get_HttpAuth();
    public void set_HttpAuth(NetworkCredential value);
    internal X509Certificate2 get_ClientCertificate();
    public void set_ClientCertificate(X509Certificate2 value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_WaitTime();
    [CompilerGeneratedAttribute]
public void set_WaitTime(Nullable`1<TimeSpan> value);
    private void ConfigureFromEnvironment(UriBuilder consulAddress);
    internal virtual void OnUpdated(EventArgs e);
}
public class Consul.ConsulConfigurationException : Exception {
    public ConsulConfigurationException(string message);
    public ConsulConfigurationException(string message, Exception inner);
}
public class Consul.ConsulLicense : object {
    [CompilerGeneratedAttribute]
private bool <Valid>k__BackingField;
    [CompilerGeneratedAttribute]
private License <License>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Warnings>k__BackingField;
    public bool Valid { get; public set; }
    public License License { get; public set; }
    public String[] Warnings { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Valid();
    [CompilerGeneratedAttribute]
public void set_Valid(bool value);
    [CompilerGeneratedAttribute]
public License get_License();
    [CompilerGeneratedAttribute]
public void set_License(License value);
    [CompilerGeneratedAttribute]
public String[] get_Warnings();
    [CompilerGeneratedAttribute]
public void set_Warnings(String[] value);
}
public abstract class Consul.ConsulRequest : object {
    [CompilerGeneratedAttribute]
private ConsulClient <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpMethod <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Params>k__BackingField;
    [CompilerGeneratedAttribute]
private Stream <ResponseStream>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Endpoint>k__BackingField;
    internal JsonSerializer _serializer;
    internal ConsulClient Client { get; internal set; }
    internal HttpMethod Method { get; internal set; }
    internal Dictionary`2<string, string> Params { get; internal set; }
    internal Stream ResponseStream { get; internal set; }
    internal string Endpoint { get; internal set; }
    internal ConsulRequest(ConsulClient client, string url, HttpMethod method);
    [CompilerGeneratedAttribute]
internal ConsulClient get_Client();
    [CompilerGeneratedAttribute]
internal void set_Client(ConsulClient value);
    [CompilerGeneratedAttribute]
internal HttpMethod get_Method();
    [CompilerGeneratedAttribute]
internal void set_Method(HttpMethod value);
    [CompilerGeneratedAttribute]
internal Dictionary`2<string, string> get_Params();
    [CompilerGeneratedAttribute]
internal void set_Params(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
internal Stream get_ResponseStream();
    [CompilerGeneratedAttribute]
internal void set_ResponseStream(Stream value);
    [CompilerGeneratedAttribute]
internal string get_Endpoint();
    [CompilerGeneratedAttribute]
internal void set_Endpoint(string value);
    protected abstract virtual void ApplyOptions(ConsulClientConfiguration clientConfig);
    protected abstract virtual void ApplyHeaders(HttpRequestMessage message, ConsulClientConfiguration clientConfig);
    protected internal Uri BuildConsulUri(string url, Dictionary`2<string, string> p);
    protected TOut Deserialize(Stream stream);
    protected static Byte[] Serialize(object value);
}
public class Consul.ConsulRequestException : Exception {
    [CompilerGeneratedAttribute]
private HttpStatusCode <StatusCode>k__BackingField;
    public HttpStatusCode StatusCode { get; public set; }
    public ConsulRequestException(string message, HttpStatusCode statusCode);
    public ConsulRequestException(string message, HttpStatusCode statusCode, Exception inner);
    [CompilerGeneratedAttribute]
public HttpStatusCode get_StatusCode();
    [CompilerGeneratedAttribute]
public void set_StatusCode(HttpStatusCode value);
}
public abstract class Consul.ConsulResult : object {
    [CompilerGeneratedAttribute]
private TimeSpan <RequestTime>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpStatusCode <StatusCode>k__BackingField;
    public TimeSpan RequestTime { get; public set; }
    public HttpStatusCode StatusCode { get; public set; }
    public ConsulResult(ConsulResult other);
    [CompilerGeneratedAttribute]
public TimeSpan get_RequestTime();
    [CompilerGeneratedAttribute]
public void set_RequestTime(TimeSpan value);
    [CompilerGeneratedAttribute]
public HttpStatusCode get_StatusCode();
    [CompilerGeneratedAttribute]
public void set_StatusCode(HttpStatusCode value);
}
public class Consul.ConsumerDefinition : object {
    [CompilerGeneratedAttribute]
private string <Peer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SamenessGroup>k__BackingField;
    [JsonPropertyAttribute]
public string Peer { get; public set; }
    [JsonPropertyAttribute]
public string Partition { get; public set; }
    [JsonPropertyAttribute]
public string SamenessGroup { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Peer();
    [CompilerGeneratedAttribute]
public void set_Peer(string value);
    [CompilerGeneratedAttribute]
public string get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(string value);
    [CompilerGeneratedAttribute]
public string get_SamenessGroup();
    [CompilerGeneratedAttribute]
public void set_SamenessGroup(string value);
}
public class Consul.ControlPlaneRequestLimitEntry : object {
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ReadRate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <WriteRate>k__BackingField;
    [CompilerGeneratedAttribute]
private KVRateLimit <KV>k__BackingField;
    [CompilerGeneratedAttribute]
private ACLRateLimit <ACL>k__BackingField;
    [CompilerGeneratedAttribute]
private CatalogRateLimit <Catalog>k__BackingField;
    [JsonPropertyAttribute]
public string Kind { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Mode { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> ReadRate { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> WriteRate { get; public set; }
    [JsonPropertyAttribute]
public KVRateLimit KV { get; public set; }
    [JsonPropertyAttribute]
public ACLRateLimit ACL { get; public set; }
    [JsonPropertyAttribute]
public CatalogRateLimit Catalog { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Mode();
    [CompilerGeneratedAttribute]
public void set_Mode(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ReadRate();
    [CompilerGeneratedAttribute]
public void set_ReadRate(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_WriteRate();
    [CompilerGeneratedAttribute]
public void set_WriteRate(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public KVRateLimit get_KV();
    [CompilerGeneratedAttribute]
public void set_KV(KVRateLimit value);
    [CompilerGeneratedAttribute]
public ACLRateLimit get_ACL();
    [CompilerGeneratedAttribute]
public void set_ACL(ACLRateLimit value);
    [CompilerGeneratedAttribute]
public CatalogRateLimit get_Catalog();
    [CompilerGeneratedAttribute]
public void set_Catalog(CatalogRateLimit value);
}
public class Consul.CookieConfig : object {
    [CompilerGeneratedAttribute]
private bool <Session>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TTL>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SourceIP>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Terminal>k__BackingField;
    [JsonPropertyAttribute]
public bool Session { get; public set; }
    [JsonPropertyAttribute]
public string TTL { get; public set; }
    [JsonPropertyAttribute]
public string Path { get; public set; }
    [JsonPropertyAttribute]
public bool SourceIP { get; public set; }
    [JsonPropertyAttribute]
public bool Terminal { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Session();
    [CompilerGeneratedAttribute]
public void set_Session(bool value);
    [CompilerGeneratedAttribute]
public string get_TTL();
    [CompilerGeneratedAttribute]
public void set_TTL(string value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public bool get_SourceIP();
    [CompilerGeneratedAttribute]
public void set_SourceIP(bool value);
    [CompilerGeneratedAttribute]
public bool get_Terminal();
    [CompilerGeneratedAttribute]
public void set_Terminal(bool value);
}
public class Consul.CookieLocation : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Consul.Coordinate : object {
    private ConsulClient _client;
    internal Coordinate(ConsulClient c);
    public sealed virtual Task`1<QueryResult`1<CoordinateDatacenterMap[]>> Datacenters(CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<CoordinateEntry[]>> Nodes(CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<CoordinateEntry[]>> Nodes(QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<CoordinateEntry[]>> Node(string node, QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<CoordinateEntry[]>> Node(string node, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> Update(CoordinateEntry entry, WriteOptions q, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> Update(CoordinateEntry entry, CancellationToken ct);
}
public class Consul.CoordinateDatacenterMap : object {
    [CompilerGeneratedAttribute]
private string <Datacenter>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<CoordinateEntry> <Coordinates>k__BackingField;
    public string Datacenter { get; public set; }
    public List`1<CoordinateEntry> Coordinates { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Datacenter();
    [CompilerGeneratedAttribute]
public void set_Datacenter(string value);
    [CompilerGeneratedAttribute]
public List`1<CoordinateEntry> get_Coordinates();
    [CompilerGeneratedAttribute]
public void set_Coordinates(List`1<CoordinateEntry> value);
}
public class Consul.CoordinateEntry : object {
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Segment>k__BackingField;
    [CompilerGeneratedAttribute]
private SerfCoordinate <Coord>k__BackingField;
    public string Node { get; public set; }
    public string Segment { get; public set; }
    public SerfCoordinate Coord { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
public void set_Node(string value);
    [CompilerGeneratedAttribute]
public string get_Segment();
    [CompilerGeneratedAttribute]
public void set_Segment(string value);
    [CompilerGeneratedAttribute]
public SerfCoordinate get_Coord();
    [CompilerGeneratedAttribute]
public void set_Coord(SerfCoordinate value);
}
public class Consul.Counter : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Sum>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Min>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Max>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Mean>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Stddev>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Labels>k__BackingField;
    public string Name { get; public set; }
    public long Count { get; public set; }
    public double Sum { get; public set; }
    public double Min { get; public set; }
    public double Max { get; public set; }
    public double Mean { get; public set; }
    public double Stddev { get; public set; }
    public Dictionary`2<string, string> Labels { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public long get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(long value);
    [CompilerGeneratedAttribute]
public double get_Sum();
    [CompilerGeneratedAttribute]
public void set_Sum(double value);
    [CompilerGeneratedAttribute]
public double get_Min();
    [CompilerGeneratedAttribute]
public void set_Min(double value);
    [CompilerGeneratedAttribute]
public double get_Max();
    [CompilerGeneratedAttribute]
public void set_Max(double value);
    [CompilerGeneratedAttribute]
public double get_Mean();
    [CompilerGeneratedAttribute]
public void set_Mean(double value);
    [CompilerGeneratedAttribute]
public double get_Stddev();
    [CompilerGeneratedAttribute]
public void set_Stddev(double value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Labels();
    [CompilerGeneratedAttribute]
public void set_Labels(Dictionary`2<string, string> value);
}
public class Consul.CPUInfo : object {
    [CompilerGeneratedAttribute]
private int <Cpu>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VendorId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Family>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Model>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Stepping>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PhysicalId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CoreId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Cores>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ModelName>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Mhz>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CacheSize>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Flags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Microcode>k__BackingField;
    public int Cpu { get; public set; }
    public string VendorId { get; public set; }
    public string Family { get; public set; }
    public string Model { get; public set; }
    public int Stepping { get; public set; }
    public string PhysicalId { get; public set; }
    public string CoreId { get; public set; }
    public int Cores { get; public set; }
    public string ModelName { get; public set; }
    public long Mhz { get; public set; }
    public int CacheSize { get; public set; }
    public List`1<string> Flags { get; public set; }
    public string Microcode { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Cpu();
    [CompilerGeneratedAttribute]
public void set_Cpu(int value);
    [CompilerGeneratedAttribute]
public string get_VendorId();
    [CompilerGeneratedAttribute]
public void set_VendorId(string value);
    [CompilerGeneratedAttribute]
public string get_Family();
    [CompilerGeneratedAttribute]
public void set_Family(string value);
    [CompilerGeneratedAttribute]
public string get_Model();
    [CompilerGeneratedAttribute]
public void set_Model(string value);
    [CompilerGeneratedAttribute]
public int get_Stepping();
    [CompilerGeneratedAttribute]
public void set_Stepping(int value);
    [CompilerGeneratedAttribute]
public string get_PhysicalId();
    [CompilerGeneratedAttribute]
public void set_PhysicalId(string value);
    [CompilerGeneratedAttribute]
public string get_CoreId();
    [CompilerGeneratedAttribute]
public void set_CoreId(string value);
    [CompilerGeneratedAttribute]
public int get_Cores();
    [CompilerGeneratedAttribute]
public void set_Cores(int value);
    [CompilerGeneratedAttribute]
public string get_ModelName();
    [CompilerGeneratedAttribute]
public void set_ModelName(string value);
    [CompilerGeneratedAttribute]
public long get_Mhz();
    [CompilerGeneratedAttribute]
public void set_Mhz(long value);
    [CompilerGeneratedAttribute]
public int get_CacheSize();
    [CompilerGeneratedAttribute]
public void set_CacheSize(int value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Flags();
    [CompilerGeneratedAttribute]
public void set_Flags(List`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Microcode();
    [CompilerGeneratedAttribute]
public void set_Microcode(string value);
}
public class Consul.DefaultsConfig : object {
    [CompilerGeneratedAttribute]
private string <Protocol>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ConnectTimeoutMs>k__BackingField;
    [CompilerGeneratedAttribute]
private MeshGatewayConfig <MeshGateway>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BalanceOutboundConnections>k__BackingField;
    [CompilerGeneratedAttribute]
private LimitsConfig <Limits>k__BackingField;
    [CompilerGeneratedAttribute]
private PassiveHealthCheckConfig <PassiveHealthCheck>k__BackingField;
    [JsonPropertyAttribute]
public string Protocol { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> ConnectTimeoutMs { get; public set; }
    [JsonPropertyAttribute]
public MeshGatewayConfig MeshGateway { get; public set; }
    [JsonPropertyAttribute]
public string BalanceOutboundConnections { get; public set; }
    [JsonPropertyAttribute]
public LimitsConfig Limits { get; public set; }
    [JsonPropertyAttribute]
public PassiveHealthCheckConfig PassiveHealthCheck { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ConnectTimeoutMs();
    [CompilerGeneratedAttribute]
public void set_ConnectTimeoutMs(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public MeshGatewayConfig get_MeshGateway();
    [CompilerGeneratedAttribute]
public void set_MeshGateway(MeshGatewayConfig value);
    [CompilerGeneratedAttribute]
public string get_BalanceOutboundConnections();
    [CompilerGeneratedAttribute]
public void set_BalanceOutboundConnections(string value);
    [CompilerGeneratedAttribute]
public LimitsConfig get_Limits();
    [CompilerGeneratedAttribute]
public void set_Limits(LimitsConfig value);
    [CompilerGeneratedAttribute]
public PassiveHealthCheckConfig get_PassiveHealthCheck();
    [CompilerGeneratedAttribute]
public void set_PassiveHealthCheck(PassiveHealthCheckConfig value);
}
public class Consul.DeleteAcceptingRequest`1 : ConsulRequest {
    [CompilerGeneratedAttribute]
private WriteOptions <Options>k__BackingField;
    private TIn _body;
    public WriteOptions Options { get; public set; }
    public DeleteAcceptingRequest`1(ConsulClient client, string url, TIn body, WriteOptions options);
    [CompilerGeneratedAttribute]
public WriteOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(WriteOptions value);
    [AsyncStateMachineAttribute("Consul.DeleteAcceptingRequest`1/<Execute>d__6")]
public Task`1<WriteResult> Execute(CancellationToken ct);
    protected virtual void ApplyOptions(ConsulClientConfiguration clientConfig);
    protected virtual void ApplyHeaders(HttpRequestMessage message, ConsulClientConfiguration clientConfig);
}
public class Consul.DeleteRequest : ConsulRequest {
    [CompilerGeneratedAttribute]
private WriteOptions <Options>k__BackingField;
    public WriteOptions Options { get; public set; }
    public DeleteRequest(ConsulClient client, string url, WriteOptions options);
    [CompilerGeneratedAttribute]
public WriteOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(WriteOptions value);
    [AsyncStateMachineAttribute("Consul.DeleteRequest/<Execute>d__5")]
public Task`1<WriteResult> Execute(CancellationToken ct);
    protected virtual void ApplyOptions(ConsulClientConfiguration clientConfig);
    protected virtual void ApplyHeaders(HttpRequestMessage message, ConsulClientConfiguration clientConfig);
}
public class Consul.DeleteReturnRequest`1 : ConsulRequest {
    [CompilerGeneratedAttribute]
private WriteOptions <Options>k__BackingField;
    public WriteOptions Options { get; public set; }
    public DeleteReturnRequest`1(ConsulClient client, string url, WriteOptions options);
    [CompilerGeneratedAttribute]
public WriteOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(WriteOptions value);
    [AsyncStateMachineAttribute("Consul.DeleteReturnRequest`1/<Execute>d__5")]
public Task`1<WriteResult`1<TOut>> Execute(CancellationToken ct);
    protected virtual void ApplyOptions(ConsulClientConfiguration clientConfig);
    protected virtual void ApplyHeaders(HttpRequestMessage message, ConsulClientConfiguration clientConfig);
}
public class Consul.DestinationConfig : object {
    [CompilerGeneratedAttribute]
private List`1<string> <Addresses>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Port>k__BackingField;
    [JsonPropertyAttribute]
public List`1<string> Addresses { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> Port { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<string> get_Addresses();
    [CompilerGeneratedAttribute]
public void set_Addresses(List`1<string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(Nullable`1<int> value);
}
public class Consul.DiskInfo : object {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Fstype>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Total>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Free>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Used>k__BackingField;
    [CompilerGeneratedAttribute]
private double <UsedPercent>k__BackingField;
    [CompilerGeneratedAttribute]
private long <InodesTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private long <InodesUsed>k__BackingField;
    [CompilerGeneratedAttribute]
private long <InodesFree>k__BackingField;
    [CompilerGeneratedAttribute]
private double <InodesUsedPercent>k__BackingField;
    public string Path { get; public set; }
    public string Fstype { get; public set; }
    public long Total { get; public set; }
    public long Free { get; public set; }
    public long Used { get; public set; }
    public double UsedPercent { get; public set; }
    public long InodesTotal { get; public set; }
    public long InodesUsed { get; public set; }
    public long InodesFree { get; public set; }
    public double InodesUsedPercent { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_Fstype();
    [CompilerGeneratedAttribute]
public void set_Fstype(string value);
    [CompilerGeneratedAttribute]
public long get_Total();
    [CompilerGeneratedAttribute]
public void set_Total(long value);
    [CompilerGeneratedAttribute]
public long get_Free();
    [CompilerGeneratedAttribute]
public void set_Free(long value);
    [CompilerGeneratedAttribute]
public long get_Used();
    [CompilerGeneratedAttribute]
public void set_Used(long value);
    [CompilerGeneratedAttribute]
public double get_UsedPercent();
    [CompilerGeneratedAttribute]
public void set_UsedPercent(double value);
    [CompilerGeneratedAttribute]
public long get_InodesTotal();
    [CompilerGeneratedAttribute]
public void set_InodesTotal(long value);
    [CompilerGeneratedAttribute]
public long get_InodesUsed();
    [CompilerGeneratedAttribute]
public void set_InodesUsed(long value);
    [CompilerGeneratedAttribute]
public long get_InodesFree();
    [CompilerGeneratedAttribute]
public void set_InodesFree(long value);
    [CompilerGeneratedAttribute]
public double get_InodesUsedPercent();
    [CompilerGeneratedAttribute]
public void set_InodesUsedPercent(double value);
}
public class Consul.DurationTimespanConverter : JsonConverter {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
public class Consul.EnvoyExtension : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Required>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Arguments>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConsulVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EnvoyVersion>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Required { get; public set; }
    [JsonPropertyAttribute]
public string Arguments { get; public set; }
    [JsonPropertyAttribute]
public string ConsulVersion { get; public set; }
    [JsonPropertyAttribute]
public string EnvoyVersion { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Required();
    [CompilerGeneratedAttribute]
public void set_Required(string value);
    [CompilerGeneratedAttribute]
public string get_Arguments();
    [CompilerGeneratedAttribute]
public void set_Arguments(string value);
    [CompilerGeneratedAttribute]
public string get_ConsulVersion();
    [CompilerGeneratedAttribute]
public void set_ConsulVersion(string value);
    [CompilerGeneratedAttribute]
public string get_EnvoyVersion();
    [CompilerGeneratedAttribute]
public void set_EnvoyVersion(string value);
}
public class Consul.EnvoyExtensionConfig : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Required>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Arguments>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConsulVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EnvoyVersion>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public bool Required { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Arguments { get; public set; }
    [JsonPropertyAttribute]
public string ConsulVersion { get; public set; }
    [JsonPropertyAttribute]
public string EnvoyVersion { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_Required();
    [CompilerGeneratedAttribute]
public void set_Required(bool value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Arguments();
    [CompilerGeneratedAttribute]
public void set_Arguments(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_ConsulVersion();
    [CompilerGeneratedAttribute]
public void set_ConsulVersion(string value);
    [CompilerGeneratedAttribute]
public string get_EnvoyVersion();
    [CompilerGeneratedAttribute]
public void set_EnvoyVersion(string value);
}
public class Consul.Event : object {
    private ConsulClient _client;
    internal Event(ConsulClient c);
    public sealed virtual Task`1<WriteResult`1<string>> Fire(UserEvent ue, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Event/<Fire>d__4")]
public sealed virtual Task`1<WriteResult`1<string>> Fire(UserEvent ue, WriteOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<UserEvent[]>> List(CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<UserEvent[]>> List(string name, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<UserEvent[]>> List(string name, QueryOptions q, CancellationToken ct);
    public sealed virtual ulong IDToIndex(string uuid);
}
public class Consul.ExportedServiceEntry : object {
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ServiceDefinition> <Services>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Meta>k__BackingField;
    [JsonPropertyAttribute]
public string Kind { get; public set; }
    [JsonPropertyAttribute]
public string Partition { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public List`1<ServiceDefinition> Services { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Meta { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public List`1<ServiceDefinition> get_Services();
    [CompilerGeneratedAttribute]
public void set_Services(List`1<ServiceDefinition> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(Dictionary`2<string, string> value);
}
public class Consul.ExposeConfig : object {
    [CompilerGeneratedAttribute]
private bool <Checks>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<PathConfig> <Paths>k__BackingField;
    [JsonPropertyAttribute]
public bool Checks { get; public set; }
    [JsonPropertyAttribute]
public List`1<PathConfig> Paths { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Checks();
    [CompilerGeneratedAttribute]
public void set_Checks(bool value);
    [CompilerGeneratedAttribute]
public List`1<PathConfig> get_Paths();
    [CompilerGeneratedAttribute]
public void set_Paths(List`1<PathConfig> value);
}
[ExtensionAttribute]
internal static class Consul.Extensions : object {
    internal static double Nanosecond;
    internal static double Microsecond;
    internal static double Millisecond;
    internal static double Second;
    internal static double Minute;
    internal static double Hour;
    internal static Dictionary`2<string, double> UnitMap;
    private static Extensions();
    [ExtensionAttribute]
internal static string ToGoDuration(TimeSpan ts);
    internal static TimeSpan FromGoDuration(string value);
}
public class Consul.ExternalService : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Hosts>k__BackingField;
    [CompilerGeneratedAttribute]
private HeaderModification <RequestHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private HeaderModification <ResponseHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private TLSConfig <TLS>k__BackingField;
    [CompilerGeneratedAttribute]
private GatewayDefaults <Defaults>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Namespace { get; public set; }
    [JsonPropertyAttribute]
public string Partition { get; public set; }
    [JsonPropertyAttribute]
public List`1<string> Hosts { get; public set; }
    [JsonPropertyAttribute]
public HeaderModification RequestHeaders { get; public set; }
    [JsonPropertyAttribute]
public HeaderModification ResponseHeaders { get; public set; }
    [JsonPropertyAttribute]
public TLSConfig TLS { get; public set; }
    [JsonPropertyAttribute]
public GatewayDefaults Defaults { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Hosts();
    [CompilerGeneratedAttribute]
public void set_Hosts(List`1<string> value);
    [CompilerGeneratedAttribute]
public HeaderModification get_RequestHeaders();
    [CompilerGeneratedAttribute]
public void set_RequestHeaders(HeaderModification value);
    [CompilerGeneratedAttribute]
public HeaderModification get_ResponseHeaders();
    [CompilerGeneratedAttribute]
public void set_ResponseHeaders(HeaderModification value);
    [CompilerGeneratedAttribute]
public TLSConfig get_TLS();
    [CompilerGeneratedAttribute]
public void set_TLS(TLSConfig value);
    [CompilerGeneratedAttribute]
public GatewayDefaults get_Defaults();
    [CompilerGeneratedAttribute]
public void set_Defaults(GatewayDefaults value);
}
internal class Consul.Filtering.AndFilter : Filter {
    [CompilerGeneratedAttribute]
private Filter <LeftFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private Filter <RightFilter>k__BackingField;
    public Filter LeftFilter { get; public set; }
    public Filter RightFilter { get; public set; }
    [CompilerGeneratedAttribute]
public Filter get_LeftFilter();
    [CompilerGeneratedAttribute]
public void set_LeftFilter(Filter value);
    [CompilerGeneratedAttribute]
public Filter get_RightFilter();
    [CompilerGeneratedAttribute]
public void set_RightFilter(Filter value);
    public virtual string Encode();
}
internal class Consul.Filtering.ContainsFilter`1 : Filter {
    [CompilerGeneratedAttribute]
private TSelector <Selector>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public TSelector Selector { get; public set; }
    public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public TSelector get_Selector();
    [CompilerGeneratedAttribute]
public void set_Selector(TSelector value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    public virtual string Encode();
}
internal class Consul.Filtering.EmptyFilter`1 : Filter {
    [CompilerGeneratedAttribute]
private TSelector <Selector>k__BackingField;
    public TSelector Selector { get; public set; }
    [CompilerGeneratedAttribute]
public TSelector get_Selector();
    [CompilerGeneratedAttribute]
public void set_Selector(TSelector value);
    public virtual string Encode();
}
internal class Consul.Filtering.EqualsFilter`1 : Filter {
    [CompilerGeneratedAttribute]
private TSelector <Selector>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public TSelector Selector { get; public set; }
    public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public TSelector get_Selector();
    [CompilerGeneratedAttribute]
public void set_Selector(TSelector value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    public virtual string Encode();
}
public abstract class Consul.Filtering.Filter : object {
    public abstract virtual string Encode();
    public static Filter op_BitwiseAnd(Filter left, Filter right);
    public static Filter op_BitwiseOr(Filter left, Filter right);
    public static Filter op_LogicalNot(Filter filter);
    protected static string Quote(string s);
}
public static class Consul.Filtering.Filters : object {
    internal static Filter And(Filter left, Filter right);
    internal static Filter Or(Filter left, Filter right);
    internal static Filter Not(Filter filter);
    internal static Filter Empty(TSelector selector);
    internal static Filter Contains(TSelector selector, string value);
    internal static Filter Eq(TSelector selector, string value);
    internal static Filter NotEq(TSelector selector, string value);
}
internal interface Consul.Filtering.IContainsApplicableConstraint {
}
internal interface Consul.Filtering.IEmptyApplicableConstraint {
}
public interface Consul.Filtering.IEncodable {
    public abstract virtual string Encode();
}
internal interface Consul.Filtering.IEqualsApplicableConstraint {
}
[DefaultMemberAttribute("Item")]
public class Consul.Filtering.MetaSelector : Selector {
    private static string Self;
    [CompilerGeneratedAttribute]
private string <Prefix>k__BackingField;
    public string Prefix { get; }
    public ServiceMetaEntrySelector Item { get; }
    public MetaSelector(string prefix);
    private static MetaSelector();
    [CompilerGeneratedAttribute]
public string get_Prefix();
    public virtual string Encode();
    public ServiceMetaEntrySelector get_Item(string name);
    public Filter IsEmpty();
}
public class Consul.Filtering.NodeSelector : Selector {
    private static string Self;
    [CompilerGeneratedAttribute]
private StringFieldSelector <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private StringFieldSelector <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private MetaSelector <Meta>k__BackingField;
    public StringFieldSelector Id { get; }
    public StringFieldSelector Node { get; }
    public MetaSelector Meta { get; }
    private static NodeSelector();
    [CompilerGeneratedAttribute]
public StringFieldSelector get_Id();
    [CompilerGeneratedAttribute]
public StringFieldSelector get_Node();
    [CompilerGeneratedAttribute]
public MetaSelector get_Meta();
    public virtual string Encode();
}
internal class Consul.Filtering.NotEqualsFilter`1 : Filter {
    [CompilerGeneratedAttribute]
private TSelector <Selector>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public TSelector Selector { get; public set; }
    public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public TSelector get_Selector();
    [CompilerGeneratedAttribute]
public void set_Selector(TSelector value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    public virtual string Encode();
}
internal class Consul.Filtering.NotFilter : Filter {
    [CompilerGeneratedAttribute]
private Filter <Filter>k__BackingField;
    public Filter Filter { get; public set; }
    [CompilerGeneratedAttribute]
public Filter get_Filter();
    [CompilerGeneratedAttribute]
public void set_Filter(Filter value);
    public virtual string Encode();
}
internal class Consul.Filtering.OrFilter : Filter {
    [CompilerGeneratedAttribute]
private Filter <LeftFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private Filter <RightFilter>k__BackingField;
    public Filter LeftFilter { get; public set; }
    public Filter RightFilter { get; public set; }
    [CompilerGeneratedAttribute]
public Filter get_LeftFilter();
    [CompilerGeneratedAttribute]
public void set_LeftFilter(Filter value);
    [CompilerGeneratedAttribute]
public Filter get_RightFilter();
    [CompilerGeneratedAttribute]
public void set_RightFilter(Filter value);
    public virtual string Encode();
}
public abstract class Consul.Filtering.Selector : object {
    public abstract virtual string Encode();
    protected static string Combine(string prefix, string self);
}
public static class Consul.Filtering.Selectors : object {
    [CompilerGeneratedAttribute]
private static ServiceSelector <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private static StringFieldSelector <ServiceName>k__BackingField;
    public static ServiceSelector Service { get; }
    public static StringFieldSelector ServiceName { get; }
    private static Selectors();
    [CompilerGeneratedAttribute]
public static ServiceSelector get_Service();
    [CompilerGeneratedAttribute]
public static StringFieldSelector get_ServiceName();
}
public class Consul.Filtering.ServiceMetaEntrySelector : Selector {
    [CompilerGeneratedAttribute]
private string <Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Prefix { get; }
    public string Name { get; }
    public ServiceMetaEntrySelector(string prefix, string name);
    [CompilerGeneratedAttribute]
public string get_Prefix();
    [CompilerGeneratedAttribute]
public string get_Name();
    public virtual string Encode();
    public Filter Contains(string value);
    public static Filter op_Equality(ServiceMetaEntrySelector selector, string value);
    public static Filter op_Inequality(ServiceMetaEntrySelector selector, string value);
}
public class Consul.Filtering.ServiceSelector : Selector {
    private static string Self;
    [CompilerGeneratedAttribute]
private StringFieldSelector <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private TagsSelector <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private MetaSelector <Meta>k__BackingField;
    public StringFieldSelector Id { get; }
    public TagsSelector Tags { get; }
    public MetaSelector Meta { get; }
    private static ServiceSelector();
    [CompilerGeneratedAttribute]
public StringFieldSelector get_Id();
    [CompilerGeneratedAttribute]
public TagsSelector get_Tags();
    [CompilerGeneratedAttribute]
public MetaSelector get_Meta();
    public virtual string Encode();
    public static Filter op_Equality(ServiceSelector selector, string value);
    public static Filter op_Inequality(ServiceSelector selector, string value);
}
public class Consul.Filtering.StringFieldSelector : Selector {
    [CompilerGeneratedAttribute]
private string <Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Prefix { get; }
    public string Name { get; }
    public StringFieldSelector(string name);
    public StringFieldSelector(string prefix, string name);
    [CompilerGeneratedAttribute]
public string get_Prefix();
    [CompilerGeneratedAttribute]
public string get_Name();
    public virtual string Encode();
    public Filter IsEmpty();
    public Filter Contains(string value);
    public static Filter op_Equality(StringFieldSelector selector, string value);
    public static Filter op_Inequality(StringFieldSelector selector, string value);
}
public class Consul.Filtering.TagsSelector : Selector {
    private static string Self;
    [CompilerGeneratedAttribute]
private string <Prefix>k__BackingField;
    public string Prefix { get; }
    public TagsSelector(string prefix);
    private static TagsSelector();
    [CompilerGeneratedAttribute]
public string get_Prefix();
    public virtual string Encode();
    public Filter IsEmpty();
    public Filter Contains(string value);
}
public class Consul.Flags : object {
    [CompilerGeneratedAttribute]
private string <Package>k__BackingField;
    public string Package { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Package();
    [CompilerGeneratedAttribute]
public void set_Package(string value);
}
public class Consul.ForwardingConfig : object {
    [CompilerGeneratedAttribute]
private string <HeaderName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PadForwardPayloadHeader>k__BackingField;
    [JsonPropertyAttribute]
public string HeaderName { get; public set; }
    [JsonPropertyAttribute]
public bool PadForwardPayloadHeader { get; public set; }
    [CompilerGeneratedAttribute]
public string get_HeaderName();
    [CompilerGeneratedAttribute]
public void set_HeaderName(string value);
    [CompilerGeneratedAttribute]
public bool get_PadForwardPayloadHeader();
    [CompilerGeneratedAttribute]
public void set_PadForwardPayloadHeader(bool value);
}
public class Consul.GatewayDefaults : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxConnections>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxPendingRequests>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxConcurrentRequests>k__BackingField;
    [CompilerGeneratedAttribute]
private PassiveHealthCheckConfig <PassiveHealthCheck>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<int> MaxConnections { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> MaxPendingRequests { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> MaxConcurrentRequests { get; public set; }
    [JsonPropertyAttribute]
public PassiveHealthCheckConfig PassiveHealthCheck { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxConnections();
    [CompilerGeneratedAttribute]
public void set_MaxConnections(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxPendingRequests();
    [CompilerGeneratedAttribute]
public void set_MaxPendingRequests(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxConcurrentRequests();
    [CompilerGeneratedAttribute]
public void set_MaxConcurrentRequests(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public PassiveHealthCheckConfig get_PassiveHealthCheck();
    [CompilerGeneratedAttribute]
public void set_PassiveHealthCheck(PassiveHealthCheckConfig value);
}
public class Consul.GatewayListener : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Protocol>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ExternalService> <Services>k__BackingField;
    [CompilerGeneratedAttribute]
private TLSConfig <TLS>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<int> Port { get; public set; }
    [JsonPropertyAttribute]
public string Protocol { get; public set; }
    [JsonPropertyAttribute]
public List`1<ExternalService> Services { get; public set; }
    [JsonPropertyAttribute]
public TLSConfig TLS { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(string value);
    [CompilerGeneratedAttribute]
public List`1<ExternalService> get_Services();
    [CompilerGeneratedAttribute]
public void set_Services(List`1<ExternalService> value);
    [CompilerGeneratedAttribute]
public TLSConfig get_TLS();
    [CompilerGeneratedAttribute]
public void set_TLS(TLSConfig value);
}
public class Consul.GatewayService : object {
    [CompilerGeneratedAttribute]
private CompoundServiceName <Gateway>k__BackingField;
    [CompilerGeneratedAttribute]
private CompoundServiceName <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private ServiceKind <GatewayKind>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Protocol>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Hosts>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CAFile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CertFile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeyFile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SNI>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FromWildcard>k__BackingField;
    public CompoundServiceName Gateway { get; public set; }
    public CompoundServiceName Service { get; public set; }
    public ServiceKind GatewayKind { get; public set; }
    public int Port { get; public set; }
    public string Protocol { get; public set; }
    public List`1<string> Hosts { get; public set; }
    public string CAFile { get; public set; }
    public string CertFile { get; public set; }
    public string KeyFile { get; public set; }
    public string SNI { get; public set; }
    public bool FromWildcard { get; public set; }
    [CompilerGeneratedAttribute]
public CompoundServiceName get_Gateway();
    [CompilerGeneratedAttribute]
public void set_Gateway(CompoundServiceName value);
    [CompilerGeneratedAttribute]
public CompoundServiceName get_Service();
    [CompilerGeneratedAttribute]
public void set_Service(CompoundServiceName value);
    [CompilerGeneratedAttribute]
public ServiceKind get_GatewayKind();
    [CompilerGeneratedAttribute]
public void set_GatewayKind(ServiceKind value);
    [CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(int value);
    [CompilerGeneratedAttribute]
public string get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Hosts();
    [CompilerGeneratedAttribute]
public void set_Hosts(List`1<string> value);
    [CompilerGeneratedAttribute]
public string get_CAFile();
    [CompilerGeneratedAttribute]
public void set_CAFile(string value);
    [CompilerGeneratedAttribute]
public string get_CertFile();
    [CompilerGeneratedAttribute]
public void set_CertFile(string value);
    [CompilerGeneratedAttribute]
public string get_KeyFile();
    [CompilerGeneratedAttribute]
public void set_KeyFile(string value);
    [CompilerGeneratedAttribute]
public string get_SNI();
    [CompilerGeneratedAttribute]
public void set_SNI(string value);
    [CompilerGeneratedAttribute]
public bool get_FromWildcard();
    [CompilerGeneratedAttribute]
public void set_FromWildcard(bool value);
}
public class Consul.Gauge : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Labels>k__BackingField;
    public string Name { get; public set; }
    public double Value { get; public set; }
    public Dictionary`2<string, string> Labels { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public double get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(double value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Labels();
    [CompilerGeneratedAttribute]
public void set_Labels(Dictionary`2<string, string> value);
}
public class Consul.GetRequest : ConsulRequest {
    [CompilerGeneratedAttribute]
private QueryOptions <Options>k__BackingField;
    public QueryOptions Options { get; public set; }
    public GetRequest(ConsulClient client, string url, QueryOptions options);
    [CompilerGeneratedAttribute]
public QueryOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(QueryOptions value);
    [AsyncStateMachineAttribute("Consul.GetRequest/<Execute>d__5")]
public Task`1<QueryResult`1<string>> Execute(CancellationToken ct);
    protected virtual void ApplyOptions(ConsulClientConfiguration clientConfig);
    protected virtual void ApplyHeaders(HttpRequestMessage message, ConsulClientConfiguration clientConfig);
}
public class Consul.GetRequest`1 : ConsulRequest {
    [CompilerGeneratedAttribute]
private QueryOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private IEncodable <Filter>k__BackingField;
    public QueryOptions Options { get; public set; }
    public IEncodable Filter { get; }
    public GetRequest`1(ConsulClient client, string url);
    public GetRequest`1(ConsulClient client, string url, QueryOptions options);
    public GetRequest`1(ConsulClient client, string url, QueryOptions options, IEncodable filter);
    [CompilerGeneratedAttribute]
public QueryOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(QueryOptions value);
    [CompilerGeneratedAttribute]
public IEncodable get_Filter();
    [AsyncStateMachineAttribute("Consul.GetRequest`1/<Execute>d__10")]
public Task`1<QueryResult`1<TOut>> Execute(CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.GetRequest`1/<ExecuteStreaming>d__11")]
public Task`1<QueryResult`1<Stream>> ExecuteStreaming(CancellationToken ct);
    protected virtual void ApplyOptions(ConsulClientConfiguration clientConfig);
    protected void ParseQueryHeaders(HttpResponseMessage res, QueryResult`1<TOut> meta);
    protected virtual void ApplyHeaders(HttpRequestMessage message, ConsulClientConfiguration clientConfig);
}
public class Consul.Header : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Present>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Exact>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Suffix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Regex>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Invert>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Precedence>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LegacyID>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <LegacyMeta>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LegacyCreateTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LegacyUpdateTime>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public bool Present { get; public set; }
    [JsonPropertyAttribute]
public string Exact { get; public set; }
    [JsonPropertyAttribute]
public string Prefix { get; public set; }
    [JsonPropertyAttribute]
public string Suffix { get; public set; }
    [JsonPropertyAttribute]
public string Regex { get; public set; }
    [JsonPropertyAttribute]
public bool Invert { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> Precedence { get; public set; }
    [JsonPropertyAttribute]
public string Type { get; public set; }
    [JsonPropertyAttribute]
public string Description { get; public set; }
    [JsonPropertyAttribute]
public string LegacyID { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> LegacyMeta { get; public set; }
    [JsonPropertyAttribute]
public string LegacyCreateTime { get; public set; }
    [JsonPropertyAttribute]
public string LegacyUpdateTime { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_Present();
    [CompilerGeneratedAttribute]
public void set_Present(bool value);
    [CompilerGeneratedAttribute]
public string get_Exact();
    [CompilerGeneratedAttribute]
public void set_Exact(string value);
    [CompilerGeneratedAttribute]
public string get_Prefix();
    [CompilerGeneratedAttribute]
public void set_Prefix(string value);
    [CompilerGeneratedAttribute]
public string get_Suffix();
    [CompilerGeneratedAttribute]
public void set_Suffix(string value);
    [CompilerGeneratedAttribute]
public string get_Regex();
    [CompilerGeneratedAttribute]
public void set_Regex(string value);
    [CompilerGeneratedAttribute]
public bool get_Invert();
    [CompilerGeneratedAttribute]
public void set_Invert(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Precedence();
    [CompilerGeneratedAttribute]
public void set_Precedence(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_LegacyID();
    [CompilerGeneratedAttribute]
public void set_LegacyID(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_LegacyMeta();
    [CompilerGeneratedAttribute]
public void set_LegacyMeta(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_LegacyCreateTime();
    [CompilerGeneratedAttribute]
public void set_LegacyCreateTime(string value);
    [CompilerGeneratedAttribute]
public string get_LegacyUpdateTime();
    [CompilerGeneratedAttribute]
public void set_LegacyUpdateTime(string value);
}
public class Consul.HeaderConfig : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Present>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Exact>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Suffix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Regex>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Invert>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public bool Present { get; public set; }
    [JsonPropertyAttribute]
public string Exact { get; public set; }
    [JsonPropertyAttribute]
public string Prefix { get; public set; }
    [JsonPropertyAttribute]
public string Suffix { get; public set; }
    [JsonPropertyAttribute]
public string Regex { get; public set; }
    [JsonPropertyAttribute]
public bool Invert { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_Present();
    [CompilerGeneratedAttribute]
public void set_Present(bool value);
    [CompilerGeneratedAttribute]
public string get_Exact();
    [CompilerGeneratedAttribute]
public void set_Exact(string value);
    [CompilerGeneratedAttribute]
public string get_Prefix();
    [CompilerGeneratedAttribute]
public void set_Prefix(string value);
    [CompilerGeneratedAttribute]
public string get_Suffix();
    [CompilerGeneratedAttribute]
public void set_Suffix(string value);
    [CompilerGeneratedAttribute]
public string get_Regex();
    [CompilerGeneratedAttribute]
public void set_Regex(string value);
    [CompilerGeneratedAttribute]
public bool get_Invert();
    [CompilerGeneratedAttribute]
public void set_Invert(bool value);
}
public class Consul.HeaderKeyValuePair : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [JsonPropertyAttribute]
public string Key { get; public set; }
    [JsonPropertyAttribute]
public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
public class Consul.HeaderLocation : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValuePrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Forward>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string ValuePrefix { get; public set; }
    [JsonPropertyAttribute]
public bool Forward { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_ValuePrefix();
    [CompilerGeneratedAttribute]
public void set_ValuePrefix(string value);
    [CompilerGeneratedAttribute]
public bool get_Forward();
    [CompilerGeneratedAttribute]
public void set_Forward(bool value);
}
public class Consul.HeaderModification : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Add>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Set>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Remove>k__BackingField;
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Add { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Set { get; public set; }
    [JsonPropertyAttribute]
public List`1<string> Remove { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Add();
    [CompilerGeneratedAttribute]
public void set_Add(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Set();
    [CompilerGeneratedAttribute]
public void set_Set(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Remove();
    [CompilerGeneratedAttribute]
public void set_Remove(List`1<string> value);
}
public class Consul.Health : object {
    private ConsulClient _client;
    internal Health(ConsulClient c);
    public sealed virtual Task`1<QueryResult`1<HealthCheck[]>> Checks(string service, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<HealthCheck[]>> Checks(string service, QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<HealthCheck[]>> Node(string node, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<HealthCheck[]>> Node(string node, QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<ServiceEntry[]>> Service(string service, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<ServiceEntry[]>> Service(string service, string tag, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<ServiceEntry[]>> Service(string service, string tag, bool passingOnly, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<ServiceEntry[]>> Service(string service, string tag, bool passingOnly, QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<ServiceEntry[]>> Service(string service, string tag, bool passingOnly, QueryOptions q, Filter filter, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<ServiceEntry[]>> Connect(string service, string tag, bool passingOnly, QueryOptions q, Filter filter, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<ServiceEntry[]>> Connect(string service, string tag, bool passingOnly, QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<HealthCheck[]>> State(HealthStatus status, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<HealthCheck[]>> State(HealthStatus status, QueryOptions q, CancellationToken ct);
}
public class Consul.HealthCheck : object {
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CheckID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private HealthStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Notes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Output>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceName>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <ServiceTags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    public string Node { get; public set; }
    public string CheckID { get; public set; }
    public string Name { get; public set; }
    [JsonConverterAttribute("Consul.HealthStatusConverter")]
public HealthStatus Status { get; public set; }
    public string Notes { get; public set; }
    public string Output { get; public set; }
    public string ServiceID { get; public set; }
    public string ServiceName { get; public set; }
    public String[] ServiceTags { get; public set; }
    public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
public void set_Node(string value);
    [CompilerGeneratedAttribute]
public string get_CheckID();
    [CompilerGeneratedAttribute]
public void set_CheckID(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public HealthStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(HealthStatus value);
    [CompilerGeneratedAttribute]
public string get_Notes();
    [CompilerGeneratedAttribute]
public void set_Notes(string value);
    [CompilerGeneratedAttribute]
public string get_Output();
    [CompilerGeneratedAttribute]
public void set_Output(string value);
    [CompilerGeneratedAttribute]
public string get_ServiceID();
    [CompilerGeneratedAttribute]
public void set_ServiceID(string value);
    [CompilerGeneratedAttribute]
public string get_ServiceName();
    [CompilerGeneratedAttribute]
public void set_ServiceName(string value);
    [CompilerGeneratedAttribute]
public String[] get_ServiceTags();
    [CompilerGeneratedAttribute]
public void set_ServiceTags(String[] value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
[ExtensionAttribute]
public static class Consul.HealthCheckExtension : object {
    [ExtensionAttribute]
public static HealthStatus AggregatedStatus(IEnumerable`1<HealthCheck> checks);
}
public class Consul.HealthStatus : object {
    public static string NodeMaintenance;
    public static string ServiceMaintenancePrefix;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private static HealthStatus <Passing>k__BackingField;
    [CompilerGeneratedAttribute]
private static HealthStatus <Warning>k__BackingField;
    [CompilerGeneratedAttribute]
private static HealthStatus <Critical>k__BackingField;
    [CompilerGeneratedAttribute]
private static HealthStatus <Maintenance>k__BackingField;
    [CompilerGeneratedAttribute]
private static HealthStatus <Any>k__BackingField;
    public string Status { get; private set; }
    public static HealthStatus Passing { get; }
    public static HealthStatus Warning { get; }
    public static HealthStatus Critical { get; }
    public static HealthStatus Maintenance { get; }
    public static HealthStatus Any { get; }
    private static HealthStatus();
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
private void set_Status(string value);
    [CompilerGeneratedAttribute]
public static HealthStatus get_Passing();
    [CompilerGeneratedAttribute]
public static HealthStatus get_Warning();
    [CompilerGeneratedAttribute]
public static HealthStatus get_Critical();
    [CompilerGeneratedAttribute]
public static HealthStatus get_Maintenance();
    [CompilerGeneratedAttribute]
public static HealthStatus get_Any();
    public static HealthStatus Parse(string status);
    public sealed virtual bool Equals(HealthStatus other);
    public virtual bool Equals(object other);
    public virtual int GetHashCode();
}
public class Consul.HealthStatusConverter : JsonConverter {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
public class Consul.HostInfo : object {
    [CompilerGeneratedAttribute]
private string <Hostname>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Uptime>k__BackingField;
    [CompilerGeneratedAttribute]
private long <BootTime>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Procs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Os>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Platform>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PlatformFamily>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PlatformVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KernelVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KernelArch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VirtualizationSystem>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VirtualizationRole>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HostId>k__BackingField;
    public string Hostname { get; public set; }
    public long Uptime { get; public set; }
    public long BootTime { get; public set; }
    public int Procs { get; public set; }
    public string Os { get; public set; }
    public string Platform { get; public set; }
    public string PlatformFamily { get; public set; }
    public string PlatformVersion { get; public set; }
    public string KernelVersion { get; public set; }
    public string KernelArch { get; public set; }
    public string VirtualizationSystem { get; public set; }
    public string VirtualizationRole { get; public set; }
    public string HostId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Hostname();
    [CompilerGeneratedAttribute]
public void set_Hostname(string value);
    [CompilerGeneratedAttribute]
public long get_Uptime();
    [CompilerGeneratedAttribute]
public void set_Uptime(long value);
    [CompilerGeneratedAttribute]
public long get_BootTime();
    [CompilerGeneratedAttribute]
public void set_BootTime(long value);
    [CompilerGeneratedAttribute]
public int get_Procs();
    [CompilerGeneratedAttribute]
public void set_Procs(int value);
    [CompilerGeneratedAttribute]
public string get_Os();
    [CompilerGeneratedAttribute]
public void set_Os(string value);
    [CompilerGeneratedAttribute]
public string get_Platform();
    [CompilerGeneratedAttribute]
public void set_Platform(string value);
    [CompilerGeneratedAttribute]
public string get_PlatformFamily();
    [CompilerGeneratedAttribute]
public void set_PlatformFamily(string value);
    [CompilerGeneratedAttribute]
public string get_PlatformVersion();
    [CompilerGeneratedAttribute]
public void set_PlatformVersion(string value);
    [CompilerGeneratedAttribute]
public string get_KernelVersion();
    [CompilerGeneratedAttribute]
public void set_KernelVersion(string value);
    [CompilerGeneratedAttribute]
public string get_KernelArch();
    [CompilerGeneratedAttribute]
public void set_KernelArch(string value);
    [CompilerGeneratedAttribute]
public string get_VirtualizationSystem();
    [CompilerGeneratedAttribute]
public void set_VirtualizationSystem(string value);
    [CompilerGeneratedAttribute]
public string get_VirtualizationRole();
    [CompilerGeneratedAttribute]
public void set_VirtualizationRole(string value);
    [CompilerGeneratedAttribute]
public string get_HostId();
    [CompilerGeneratedAttribute]
public void set_HostId(string value);
}
public class Consul.HTTPConfig : object {
    [CompilerGeneratedAttribute]
private string <PrefixRewrite>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <RequestTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <IdleTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NumRetries>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RetryOnConnectFailure>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <RetryOn>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Nullable`1<int>> <RetryOnStatusCodes>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <RequestHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <ResponseHeaders>k__BackingField;
    [JsonPropertyAttribute]
public string PrefixRewrite { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> RequestTimeout { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> IdleTimeout { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> NumRetries { get; public set; }
    [JsonPropertyAttribute]
public bool RetryOnConnectFailure { get; public set; }
    [JsonPropertyAttribute]
public List`1<string> RetryOn { get; public set; }
    [JsonPropertyAttribute]
public List`1<Nullable`1<int>> RetryOnStatusCodes { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> RequestHeaders { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> ResponseHeaders { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PrefixRewrite();
    [CompilerGeneratedAttribute]
public void set_PrefixRewrite(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_RequestTimeout();
    [CompilerGeneratedAttribute]
public void set_RequestTimeout(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_IdleTimeout();
    [CompilerGeneratedAttribute]
public void set_IdleTimeout(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_NumRetries();
    [CompilerGeneratedAttribute]
public void set_NumRetries(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public bool get_RetryOnConnectFailure();
    [CompilerGeneratedAttribute]
public void set_RetryOnConnectFailure(bool value);
    [CompilerGeneratedAttribute]
public List`1<string> get_RetryOn();
    [CompilerGeneratedAttribute]
public void set_RetryOn(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<Nullable`1<int>> get_RetryOnStatusCodes();
    [CompilerGeneratedAttribute]
public void set_RetryOnStatusCodes(List`1<Nullable`1<int>> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_RequestHeaders();
    [CompilerGeneratedAttribute]
public void set_RequestHeaders(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_ResponseHeaders();
    [CompilerGeneratedAttribute]
public void set_ResponseHeaders(Dictionary`2<string, string> value);
}
public class Consul.HttpHeaderMatch : object {
    [CompilerGeneratedAttribute]
private string <Match>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [JsonPropertyAttribute]
public string Match { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Match();
    [CompilerGeneratedAttribute]
public void set_Match(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
public class Consul.HttpHeaderOperation : object {
    [CompilerGeneratedAttribute]
private List`1<HeaderKeyValuePair> <Add>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Remove>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<HeaderKeyValuePair> <Set>k__BackingField;
    [JsonPropertyAttribute]
public List`1<HeaderKeyValuePair> Add { get; public set; }
    [JsonPropertyAttribute]
public List`1<string> Remove { get; public set; }
    [JsonPropertyAttribute]
public List`1<HeaderKeyValuePair> Set { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<HeaderKeyValuePair> get_Add();
    [CompilerGeneratedAttribute]
public void set_Add(List`1<HeaderKeyValuePair> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Remove();
    [CompilerGeneratedAttribute]
public void set_Remove(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<HeaderKeyValuePair> get_Set();
    [CompilerGeneratedAttribute]
public void set_Set(List`1<HeaderKeyValuePair> value);
}
public class Consul.HttpPathMatch : object {
    [CompilerGeneratedAttribute]
private string <Match>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [JsonPropertyAttribute]
public string Match { get; public set; }
    [JsonPropertyAttribute]
public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Match();
    [CompilerGeneratedAttribute]
public void set_Match(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
public class Consul.HttpQueryMatch : object {
    [CompilerGeneratedAttribute]
private string <Match>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [JsonPropertyAttribute]
public string Match { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Match();
    [CompilerGeneratedAttribute]
public void set_Match(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
public class Consul.HttpRouteEntry : object {
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Hostnames>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiGatewayReference> <Parents>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<HttpRouteRule> <Rules>k__BackingField;
    [JsonPropertyAttribute]
public string Kind { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Namespace { get; public set; }
    [JsonPropertyAttribute]
public string Partition { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Meta { get; public set; }
    [JsonPropertyAttribute]
public List`1<string> Hostnames { get; public set; }
    [JsonPropertyAttribute]
public List`1<ApiGatewayReference> Parents { get; public set; }
    [JsonPropertyAttribute]
public List`1<HttpRouteRule> Rules { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Hostnames();
    [CompilerGeneratedAttribute]
public void set_Hostnames(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<ApiGatewayReference> get_Parents();
    [CompilerGeneratedAttribute]
public void set_Parents(List`1<ApiGatewayReference> value);
    [CompilerGeneratedAttribute]
public List`1<HttpRouteRule> get_Rules();
    [CompilerGeneratedAttribute]
public void set_Rules(List`1<HttpRouteRule> value);
}
public class Consul.HttpRouteFilter : object {
    [CompilerGeneratedAttribute]
private List`1<HttpHeaderOperation> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<HttpURLRewriteOperation> <URLRewrite>k__BackingField;
    [CompilerGeneratedAttribute]
private JWTSettings <JWT>k__BackingField;
    [JsonPropertyAttribute]
public List`1<HttpHeaderOperation> Headers { get; public set; }
    [JsonPropertyAttribute]
public List`1<HttpURLRewriteOperation> URLRewrite { get; public set; }
    [JsonPropertyAttribute]
public JWTSettings JWT { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<HttpHeaderOperation> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(List`1<HttpHeaderOperation> value);
    [CompilerGeneratedAttribute]
public List`1<HttpURLRewriteOperation> get_URLRewrite();
    [CompilerGeneratedAttribute]
public void set_URLRewrite(List`1<HttpURLRewriteOperation> value);
    [CompilerGeneratedAttribute]
public JWTSettings get_JWT();
    [CompilerGeneratedAttribute]
public void set_JWT(JWTSettings value);
}
public class Consul.HttpRouteMatch : object {
    [CompilerGeneratedAttribute]
private List`1<HttpHeaderMatch> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<HttpPathMatch> <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<HttpQueryMatch> <Query>k__BackingField;
    [JsonPropertyAttribute]
public List`1<HttpHeaderMatch> Headers { get; public set; }
    [JsonPropertyAttribute]
public string Method { get; public set; }
    [JsonPropertyAttribute]
public List`1<HttpPathMatch> Path { get; public set; }
    [JsonPropertyAttribute]
public List`1<HttpQueryMatch> Query { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<HttpHeaderMatch> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(List`1<HttpHeaderMatch> value);
    [CompilerGeneratedAttribute]
public string get_Method();
    [CompilerGeneratedAttribute]
public void set_Method(string value);
    [CompilerGeneratedAttribute]
public List`1<HttpPathMatch> get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(List`1<HttpPathMatch> value);
    [CompilerGeneratedAttribute]
public List`1<HttpQueryMatch> get_Query();
    [CompilerGeneratedAttribute]
public void set_Query(List`1<HttpQueryMatch> value);
}
public class Consul.HttpRouteRule : object {
    [CompilerGeneratedAttribute]
private List`1<HttpRouteFilter> <Filters>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<HttpRouteMatch> <Matches>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<HttpRouteService> <Services>k__BackingField;
    [JsonPropertyAttribute]
public List`1<HttpRouteFilter> Filters { get; public set; }
    [JsonPropertyAttribute]
public List`1<HttpRouteMatch> Matches { get; public set; }
    [JsonPropertyAttribute]
public List`1<HttpRouteService> Services { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<HttpRouteFilter> get_Filters();
    [CompilerGeneratedAttribute]
public void set_Filters(List`1<HttpRouteFilter> value);
    [CompilerGeneratedAttribute]
public List`1<HttpRouteMatch> get_Matches();
    [CompilerGeneratedAttribute]
public void set_Matches(List`1<HttpRouteMatch> value);
    [CompilerGeneratedAttribute]
public List`1<HttpRouteService> get_Services();
    [CompilerGeneratedAttribute]
public void set_Services(List`1<HttpRouteService> value);
}
public class Consul.HttpRouteService : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Weight>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<HttpRouteFilter> <Filters>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<HttpRouteFilter> <ResponseFilters>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Namespace { get; public set; }
    [JsonPropertyAttribute]
public string Partition { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> Weight { get; public set; }
    [JsonPropertyAttribute]
public List`1<HttpRouteFilter> Filters { get; public set; }
    [JsonPropertyAttribute]
public List`1<HttpRouteFilter> ResponseFilters { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Weight();
    [CompilerGeneratedAttribute]
public void set_Weight(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public List`1<HttpRouteFilter> get_Filters();
    [CompilerGeneratedAttribute]
public void set_Filters(List`1<HttpRouteFilter> value);
    [CompilerGeneratedAttribute]
public List`1<HttpRouteFilter> get_ResponseFilters();
    [CompilerGeneratedAttribute]
public void set_ResponseFilters(List`1<HttpRouteFilter> value);
}
public class Consul.HttpURLRewriteOperation : object {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [JsonPropertyAttribute]
public string Path { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
}
[ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public interface Consul.IACLEndpoint {
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public abstract virtual Task`1<WriteResult`1<string>> Clone(string id, CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public abstract virtual Task`1<WriteResult`1<string>> Clone(string id, WriteOptions q, CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public abstract virtual Task`1<WriteResult`1<string>> Create(ACLEntry acl, CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public abstract virtual Task`1<WriteResult`1<string>> Create(ACLEntry acl, WriteOptions q, CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public abstract virtual Task`1<WriteResult`1<bool>> Destroy(string id, CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public abstract virtual Task`1<WriteResult`1<bool>> Destroy(string id, WriteOptions q, CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public abstract virtual Task`1<QueryResult`1<ACLEntry>> Info(string id, CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public abstract virtual Task`1<QueryResult`1<ACLEntry>> Info(string id, QueryOptions q, CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public abstract virtual Task`1<QueryResult`1<ACLEntry[]>> List(CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public abstract virtual Task`1<QueryResult`1<ACLEntry[]>> List(QueryOptions q, CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public abstract virtual Task`1<WriteResult> Update(ACLEntry acl, CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public abstract virtual Task`1<WriteResult> Update(ACLEntry acl, WriteOptions q, CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public abstract virtual Task`1<WriteResult`1<string>> TranslateRules(string rules, CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public abstract virtual Task`1<WriteResult`1<string>> TranslateRules(string rules, WriteOptions q, CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public abstract virtual Task`1<QueryResult`1<string>> TranslateLegacyTokenRules(string id, CancellationToken ct);
    [ObsoleteAttribute("The Legacy ACL system has been deprecated, please use Token, Role and Policy instead.")]
public abstract virtual Task`1<QueryResult`1<string>> TranslateLegacyTokenRules(string id, QueryOptions q, CancellationToken ct);
}
public interface Consul.IACLReplicationEndpoint {
    public abstract virtual Task`1<QueryResult`1<ACLReplicationEntry>> Status(CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<ACLReplicationEntry>> Status(QueryOptions q, CancellationToken ct);
}
public interface Consul.IAgentEndpoint {
    [ObsoleteAttribute("This property will be removed in a future release. Replace uses of it with a call to GetNodeName()")]
public string NodeName { get; }
    public abstract virtual Task`1<WriteResult> CheckDeregister(string checkID, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> CheckRegister(AgentCheckRegistration check, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<Dictionary`2<string, AgentCheck>>> Checks(CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<Dictionary`2<string, AgentCheck>>> Checks(Filter filter, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> DisableNodeMaintenance(CancellationToken ct);
    public abstract virtual Task`1<WriteResult> DisableServiceMaintenance(string serviceID, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> EnableNodeMaintenance(string reason, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> EnableServiceMaintenance(string serviceID, string reason, CancellationToken ct);
    public abstract virtual Task FailTTL(string checkID, string note, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> ForceLeave(string node, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> Join(string addr, bool wan, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<AgentMember[]>> Members(bool wan, CancellationToken ct);
    public abstract virtual string get_NodeName();
    public abstract virtual Task`1<string> GetNodeName(CancellationToken ct);
    public abstract virtual Task PassTTL(string checkID, string note, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<Dictionary`2<string, Dictionary`2<string, object>>>> Self(CancellationToken ct);
    public abstract virtual Task`1<WriteResult> ServiceDeregister(string serviceID, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> ServiceRegister(AgentServiceRegistration service, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> ServiceRegister(AgentServiceRegistration service, bool replaceExistingChecks, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<Dictionary`2<string, AgentService>>> Services(CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<Dictionary`2<string, AgentService>>> Services(Filter filter, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> UpdateTTL(string checkID, string output, TTLStatus status, CancellationToken ct);
    public abstract virtual Task WarnTTL(string checkID, string note, CancellationToken ct);
    public abstract virtual Task`1<LogStream> Monitor(LogLevel level, CancellationToken ct);
    public abstract virtual Task`1<LogStream> MonitorJSON(LogLevel level, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<LocalServiceHealth[]>> GetLocalServiceHealth(string serviceName, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<LocalServiceHealth[]>> GetLocalServiceHealth(string serviceName, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<string>> GetWorstLocalServiceHealth(string serviceName, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<string>> GetWorstLocalServiceHealth(string serviceName, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<LocalServiceHealth>> GetLocalServiceHealthByID(string serviceID, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<LocalServiceHealth>> GetLocalServiceHealthByID(string serviceID, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<Metrics>> GetAgentMetrics(CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<AgentAuthorizeResponse>> ConnectAuthorize(AgentAuthorizeParameters parameters, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<AgentAuthorizeResponse>> ConnectAuthorize(AgentAuthorizeParameters parameters, WriteOptions w, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<CARoots>> GetCARoots(CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<CARoots>> GetCARoots(QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<CALeaf>> GetCALeaf(string serviceId, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<CALeaf>> GetCALeaf(string serviceId, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<AgentVersion>> GetAgentVersion(CancellationToken ct);
    public abstract virtual Task`1<WriteResult> Reload(CancellationToken ct);
    [ObsoleteAttribute]
public abstract virtual Task`1<WriteResult> Reload(string node, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<AgentHostInfo>> GetAgentHostInfo(CancellationToken ct);
    public abstract virtual Task`1<WriteResult> Leave(string node, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<ServiceConfiguration>> GetServiceConfiguration(string serviceID, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<ServiceConfiguration>> GetServiceConfiguration(string serviceID, CancellationToken ct);
}
public interface Consul.IAuthMethodEndpoint {
    public abstract virtual Task`1<WriteResult`1<AuthMethodEntry>> Create(AuthMethodEntry authMethod, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<AuthMethodEntry>> Create(AuthMethodEntry authMethod, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<bool>> Delete(string id, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<bool>> Delete(string id, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<AuthMethodEntry>> Read(string id, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<AuthMethodEntry>> Read(string id, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<AuthMethodEntry[]>> List(CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<AuthMethodEntry[]>> List(QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<TokenEntry>> Login(CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<TokenEntry>> Login(WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> Logout(CancellationToken ct);
    public abstract virtual Task`1<WriteResult> Logout(WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<AuthMethodEntry>> Update(AuthMethodEntry authMethod, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<AuthMethodEntry>> Update(AuthMethodEntry authMethod, WriteOptions q, CancellationToken ct);
}
public interface Consul.ICatalogEndpoint {
    public abstract virtual Task`1<QueryResult`1<String[]>> Datacenters(CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<String[]>> Datacenters(QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> Deregister(CatalogDeregistration reg, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> Deregister(CatalogDeregistration reg, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<CatalogNode>> Node(string node, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<CatalogNode>> Node(string node, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<Node[]>> Nodes(CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<Node[]>> Nodes(QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> Register(CatalogRegistration reg, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> Register(CatalogRegistration reg, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<CatalogService[]>> Service(string service, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<CatalogService[]>> Service(string service, string tag, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<CatalogService[]>> Service(string service, string tag, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<Dictionary`2<string, String[]>>> Services(CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<Dictionary`2<string, String[]>>> Services(QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<CatalogService[]>> NodesForMeshCapableService(string service, Filter filter, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<CatalogService[]>> NodesForMeshCapableService(string service, QueryOptions q, Filter filter, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<CatalogService[]>> NodesForMeshCapableService(string service, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<NodeService>> ServicesForNode(string node, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<NodeService>> ServicesForNode(string node, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<GatewayService[]>> GatewayService(string gateway, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<GatewayService[]>> GatewayService(string gateway, CancellationToken ct);
}
public interface Consul.IConfigurationEntry {
    public string Kind { get; public set; }
    public abstract virtual string get_Kind();
    public abstract virtual void set_Kind(string value);
}
public interface Consul.IConsulClient {
    public IACLEndpoint ACL { get; }
    public IPolicyEndpoint Policy { get; }
    public IRoleEndpoint Role { get; }
    public ITokenEndpoint Token { get; }
    public IAgentEndpoint Agent { get; }
    public ICatalogEndpoint Catalog { get; }
    public IConfigurationEndpoint Configuration { get; }
    public IEventEndpoint Event { get; }
    public IHealthEndpoint Health { get; }
    public IKVEndpoint KV { get; }
    public IRawEndpoint Raw { get; }
    public ISessionEndpoint Session { get; }
    public IStatusEndpoint Status { get; }
    public IOperatorEndpoint Operator { get; }
    public IPreparedQueryEndpoint PreparedQuery { get; }
    public ICoordinateEndpoint Coordinate { get; }
    public ISnapshotEndpoint Snapshot { get; }
    public abstract virtual IACLEndpoint get_ACL();
    public abstract virtual IPolicyEndpoint get_Policy();
    public abstract virtual IRoleEndpoint get_Role();
    public abstract virtual ITokenEndpoint get_Token();
    public abstract virtual Task`1<IDistributedLock> AcquireLock(LockOptions opts, CancellationToken ct);
    public abstract virtual Task`1<IDistributedLock> AcquireLock(string key, CancellationToken ct);
    public abstract virtual Task`1<IDistributedSemaphore> AcquireSemaphore(SemaphoreOptions opts, CancellationToken ct);
    public abstract virtual Task`1<IDistributedSemaphore> AcquireSemaphore(string prefix, int limit, CancellationToken ct);
    public abstract virtual IAgentEndpoint get_Agent();
    public abstract virtual ICatalogEndpoint get_Catalog();
    public abstract virtual IConfigurationEndpoint get_Configuration();
    public abstract virtual IDistributedLock CreateLock(LockOptions opts);
    public abstract virtual IDistributedLock CreateLock(string key);
    public abstract virtual IEventEndpoint get_Event();
    public abstract virtual Task ExecuteInSemaphore(SemaphoreOptions opts, Action a, CancellationToken ct);
    public abstract virtual Task ExecuteInSemaphore(string prefix, int limit, Action a, CancellationToken ct);
    public abstract virtual Task ExecuteLocked(LockOptions opts, Action action, CancellationToken ct);
    [ObsoleteAttribute("This method will be removed in a future release. Replace calls with the method signature ExecuteLocked(LockOptions, Action, CancellationToken)")]
public abstract virtual Task ExecuteLocked(LockOptions opts, CancellationToken ct, Action action);
    public abstract virtual Task ExecuteLocked(string key, Action action, CancellationToken ct);
    [ObsoleteAttribute("This method will be removed in a future release. Replace calls with the method signature ExecuteLocked(string, Action, CancellationToken)")]
public abstract virtual Task ExecuteLocked(string key, CancellationToken ct, Action action);
    public abstract virtual IHealthEndpoint get_Health();
    public abstract virtual IKVEndpoint get_KV();
    public abstract virtual IRawEndpoint get_Raw();
    public abstract virtual IDistributedSemaphore Semaphore(SemaphoreOptions opts);
    public abstract virtual IDistributedSemaphore Semaphore(string prefix, int limit);
    public abstract virtual ISessionEndpoint get_Session();
    public abstract virtual IStatusEndpoint get_Status();
    public abstract virtual IOperatorEndpoint get_Operator();
    public abstract virtual IPreparedQueryEndpoint get_PreparedQuery();
    public abstract virtual ICoordinateEndpoint get_Coordinate();
    public abstract virtual ISnapshotEndpoint get_Snapshot();
}
public interface Consul.ICoordinateEndpoint {
    public abstract virtual Task`1<QueryResult`1<CoordinateDatacenterMap[]>> Datacenters(CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<CoordinateEntry[]>> Nodes(CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<CoordinateEntry[]>> Node(string node, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<CoordinateEntry[]>> Node(string node, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<CoordinateEntry[]>> Nodes(QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> Update(CoordinateEntry entry, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> Update(CoordinateEntry entry, CancellationToken ct);
}
public interface Consul.IDistributedLock {
    public bool IsHeld { get; }
    public abstract virtual bool get_IsHeld();
    public abstract virtual Task`1<CancellationToken> Acquire(CancellationToken ct);
    public abstract virtual Task Destroy(CancellationToken ct);
    public abstract virtual Task Release(CancellationToken ct);
}
public interface Consul.IDistributedSemaphore {
    public bool IsHeld { get; }
    public abstract virtual bool get_IsHeld();
    public abstract virtual Task`1<CancellationToken> Acquire(CancellationToken ct);
    public abstract virtual Task Destroy(CancellationToken ct);
    public abstract virtual Task Release(CancellationToken ct);
}
public interface Consul.IEventEndpoint {
    public abstract virtual Task`1<WriteResult`1<string>> Fire(UserEvent ue, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<string>> Fire(UserEvent ue, WriteOptions q, CancellationToken ct);
    public abstract virtual ulong IDToIndex(string uuid);
    public abstract virtual Task`1<QueryResult`1<UserEvent[]>> List(CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<UserEvent[]>> List(string name, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<UserEvent[]>> List(string name, QueryOptions q, CancellationToken ct);
}
public interface Consul.IHealthEndpoint {
    public abstract virtual Task`1<QueryResult`1<HealthCheck[]>> Checks(string service, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<HealthCheck[]>> Checks(string service, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<HealthCheck[]>> Node(string node, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<HealthCheck[]>> Node(string node, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<ServiceEntry[]>> Service(string service, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<ServiceEntry[]>> Service(string service, string tag, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<ServiceEntry[]>> Service(string service, string tag, bool passingOnly, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<ServiceEntry[]>> Service(string service, string tag, bool passingOnly, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<ServiceEntry[]>> Service(string service, string tag, bool passingOnly, QueryOptions q, Filter filter, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<ServiceEntry[]>> Connect(string service, string tag, bool passingOnly, QueryOptions q, Filter filter, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<ServiceEntry[]>> Connect(string service, string tag, bool passingOnly, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<HealthCheck[]>> State(HealthStatus status, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<HealthCheck[]>> State(HealthStatus status, QueryOptions q, CancellationToken ct);
}
public interface Consul.IKVEndpoint {
    public abstract virtual Task`1<WriteResult`1<bool>> Acquire(KVPair p, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<bool>> Acquire(KVPair p, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<bool>> CAS(KVPair p, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<bool>> CAS(KVPair p, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<bool>> Delete(string key, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<bool>> Delete(string key, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<bool>> DeleteCAS(KVPair p, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<bool>> DeleteCAS(KVPair p, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<bool>> DeleteTree(string prefix, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<bool>> DeleteTree(string prefix, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<KVPair>> Get(string key, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<KVPair>> Get(string key, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<String[]>> Keys(string prefix, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<String[]>> Keys(string prefix, string separator, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<String[]>> Keys(string prefix, string separator, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<KVPair[]>> List(string prefix, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<KVPair[]>> List(string prefix, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<bool>> Put(KVPair p, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<bool>> Put(KVPair p, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<bool>> Release(KVPair p, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<bool>> Release(KVPair p, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<KVTxnResponse>> Txn(List`1<KVTxnOp> txn, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<KVTxnResponse>> Txn(List`1<KVTxnOp> txn, WriteOptions q, CancellationToken ct);
}
public interface Consul.INamespacesEndpoint {
    public abstract virtual Task`1<WriteResult`1<NamespaceResponse>> Create(Namespace ns, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<NamespaceResponse>> Create(Namespace ns, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<NamespaceResponse>> Update(Namespace ns, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<NamespaceResponse>> Update(Namespace ns, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<NamespaceResponse>> Read(string name, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<NamespaceResponse>> Read(string name, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<NamespaceResponse[]>> List(QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<NamespaceResponse[]>> List(CancellationToken ct);
    public abstract virtual Task`1<WriteResult> Delete(string name, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> Delete(string name, CancellationToken ct);
}
public class Consul.IngressGatewayEntry : object {
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private TLSConfig <TLS>k__BackingField;
    [CompilerGeneratedAttribute]
private GatewayDefaults <Defaults>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<GatewayListener> <Listeners>k__BackingField;
    [JsonPropertyAttribute]
public string Kind { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Namespace { get; public set; }
    [JsonPropertyAttribute]
public string Partition { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Meta { get; public set; }
    [JsonPropertyAttribute]
public TLSConfig TLS { get; public set; }
    [JsonPropertyAttribute]
public GatewayDefaults Defaults { get; public set; }
    [JsonPropertyAttribute]
public List`1<GatewayListener> Listeners { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public TLSConfig get_TLS();
    [CompilerGeneratedAttribute]
public void set_TLS(TLSConfig value);
    [CompilerGeneratedAttribute]
public GatewayDefaults get_Defaults();
    [CompilerGeneratedAttribute]
public void set_Defaults(GatewayDefaults value);
    [CompilerGeneratedAttribute]
public List`1<GatewayListener> get_Listeners();
    [CompilerGeneratedAttribute]
public void set_Listeners(List`1<GatewayListener> value);
}
public class Consul.InlineCertificateEntry : object {
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Certificate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PrivateKey>k__BackingField;
    [JsonPropertyAttribute]
public string Kind { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Meta { get; public set; }
    [JsonPropertyAttribute]
public string Certificate { get; public set; }
    [JsonPropertyAttribute]
public string PrivateKey { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_Certificate();
    [CompilerGeneratedAttribute]
public void set_Certificate(string value);
    [CompilerGeneratedAttribute]
public string get_PrivateKey();
    [CompilerGeneratedAttribute]
public void set_PrivateKey(string value);
}
public class Consul.InstanceLevelConfig : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <RequestsPerSecond>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <RequestsMaxBurst>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RouteConfig> <Routes>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<int> RequestsPerSecond { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> RequestsMaxBurst { get; public set; }
    [JsonPropertyAttribute]
public List`1<RouteConfig> Routes { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_RequestsPerSecond();
    [CompilerGeneratedAttribute]
public void set_RequestsPerSecond(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_RequestsMaxBurst();
    [CompilerGeneratedAttribute]
public void set_RequestsMaxBurst(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public List`1<RouteConfig> get_Routes();
    [CompilerGeneratedAttribute]
public void set_Routes(List`1<RouteConfig> value);
}
public interface Consul.Interfaces.IConfigurationEndpoint {
    public abstract virtual Task`1<WriteResult> ApplyConfig(WriteOptions q, TConfig configurationEntry, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> ApplyConfig(TConfig configurationEntry, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<TConfig>> GetConfig(string kind, string name, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<TConfig>> GetConfig(string kind, string name, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<List`1<TConfig>>> ListConfig(string kind, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<List`1<TConfig>>> ListConfig(string kind, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> DeleteConfig(string kind, string name, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> DeleteConfig(string kind, string name, CancellationToken ct);
}
public class Consul.InvalidKeyPairException : Exception {
    public InvalidKeyPairException(string message);
    public InvalidKeyPairException(string message, Exception inner);
}
public interface Consul.IOperatorEndpoint {
    public abstract virtual Task`1<QueryResult`1<RaftConfiguration>> RaftGetConfiguration(CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<RaftConfiguration>> RaftGetConfiguration(QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> RaftRemovePeerByAddress(string address, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> RaftRemovePeerByAddress(string address, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> KeyringInstall(string key, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> KeyringInstall(string key, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<KeyringResponse[]>> KeyringList(CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<KeyringResponse[]>> KeyringList(QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> KeyringRemove(string key, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> KeyringRemove(string key, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> KeyringUse(string key, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> KeyringUse(string key, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<ConsulLicense>> GetConsulLicense(string datacenter, CancellationToken ct);
}
public interface Consul.IPolicyEndpoint {
    public abstract virtual Task`1<WriteResult`1<PolicyEntry>> Create(PolicyEntry policy, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<PolicyEntry>> Create(PolicyEntry policy, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<bool>> Delete(string id, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<bool>> Delete(string id, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<PolicyEntry[]>> List(CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<PolicyEntry[]>> List(QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<PolicyEntry>> Read(string id, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<PolicyEntry>> Read(string id, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<PolicyEntry>> Update(PolicyEntry policy, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<PolicyEntry>> Update(PolicyEntry policy, WriteOptions q, CancellationToken ct);
}
public interface Consul.IPreparedQueryEndpoint {
    public abstract virtual Task`1<WriteResult`1<string>> Create(PreparedQueryDefinition query, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<string>> Create(PreparedQueryDefinition query, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> Update(PreparedQueryDefinition query, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> Update(PreparedQueryDefinition query, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<PreparedQueryDefinition[]>> List(CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<PreparedQueryDefinition[]>> List(QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<PreparedQueryDefinition[]>> Get(string queryID, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<PreparedQueryDefinition[]>> Get(string queryID, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> Delete(string queryID, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> Delete(string queryID, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<PreparedQueryExecuteResponse>> Execute(string queryIDOrName, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<PreparedQueryExecuteResponse>> Execute(string queryIDOrName, QueryOptions q, CancellationToken ct);
}
public interface Consul.IRawEndpoint {
    public abstract virtual Task`1<QueryResult`1<object>> Query(string endpoint, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<object>> Write(string endpoint, object obj, WriteOptions q, CancellationToken ct);
}
public interface Consul.IRoleEndpoint {
    public abstract virtual Task`1<WriteResult`1<RoleEntry>> Create(RoleEntry role, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<RoleEntry>> Create(RoleEntry role, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<bool>> Delete(string id, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<bool>> Delete(string id, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<RoleEntry[]>> List(CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<RoleEntry[]>> List(QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<RoleEntry>> Read(string id, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<RoleEntry>> Read(string id, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<RoleEntry>> ReadByName(string name, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<RoleEntry>> ReadByName(string name, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<RoleEntry>> Update(RoleEntry role, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<RoleEntry>> Update(RoleEntry role, WriteOptions q, CancellationToken ct);
}
public interface Consul.ISessionEndpoint {
    public abstract virtual Task`1<WriteResult`1<string>> Create(CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<string>> Create(SessionEntry se, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<string>> Create(SessionEntry se, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<string>> CreateNoChecks(CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<string>> CreateNoChecks(SessionEntry se, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<string>> CreateNoChecks(SessionEntry se, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<bool>> Destroy(string id, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<bool>> Destroy(string id, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<SessionEntry>> Info(string id, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<SessionEntry>> Info(string id, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<SessionEntry[]>> List(CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<SessionEntry[]>> List(QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<SessionEntry[]>> Node(string node, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<SessionEntry[]>> Node(string node, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<SessionEntry>> Renew(string id, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<SessionEntry>> Renew(string id, WriteOptions q, CancellationToken ct);
    public abstract virtual Task RenewPeriodic(TimeSpan initialTTL, string id, CancellationToken ct);
    public abstract virtual Task RenewPeriodic(TimeSpan initialTTL, string id, WriteOptions q, CancellationToken ct);
}
public interface Consul.ISnapshotEndpoint {
    public abstract virtual Task`1<QueryResult`1<Stream>> Save(CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<Stream>> Save(QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> Restore(Stream s, CancellationToken ct);
    public abstract virtual Task`1<WriteResult> Restore(Stream s, WriteOptions q, CancellationToken ct);
}
public interface Consul.IStatusEndpoint {
    public abstract virtual Task`1<string> Leader(CancellationToken ct);
    public abstract virtual Task`1<String[]> Peers(CancellationToken ct);
}
public interface Consul.ITokenEndpoint {
    public abstract virtual Task`1<WriteResult`1<TokenEntry>> Bootstrap(CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<TokenEntry>> Bootstrap(WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<TokenEntry>> Clone(string id, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<TokenEntry>> Clone(string id, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<TokenEntry>> Create(TokenEntry token, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<TokenEntry>> Create(TokenEntry token, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<bool>> Delete(string id, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<bool>> Delete(string id, WriteOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<TokenEntry>> Read(string id, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<TokenEntry>> Read(string id, QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<TokenEntry[]>> List(CancellationToken ct);
    public abstract virtual Task`1<QueryResult`1<TokenEntry[]>> List(QueryOptions q, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<TokenEntry>> Update(TokenEntry token, CancellationToken ct);
    public abstract virtual Task`1<WriteResult`1<TokenEntry>> Update(TokenEntry token, WriteOptions q, CancellationToken ct);
}
public class Consul.JSONWebKeySetConfig : object {
    [CompilerGeneratedAttribute]
private LocalJSONWebKeySet <Local>k__BackingField;
    [CompilerGeneratedAttribute]
private RemoteJSONWebKeySet <Remote>k__BackingField;
    [JsonPropertyAttribute]
public LocalJSONWebKeySet Local { get; public set; }
    [JsonPropertyAttribute]
public RemoteJSONWebKeySet Remote { get; public set; }
    [CompilerGeneratedAttribute]
public LocalJSONWebKeySet get_Local();
    [CompilerGeneratedAttribute]
public void set_Local(LocalJSONWebKeySet value);
    [CompilerGeneratedAttribute]
public RemoteJSONWebKeySet get_Remote();
    [CompilerGeneratedAttribute]
public void set_Remote(RemoteJSONWebKeySet value);
}
public class Consul.JWKSClusterConfig : object {
    [CompilerGeneratedAttribute]
private string <DiscoveryType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConnectTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TLSCertificatesConfig <TLSCertificates>k__BackingField;
    [JsonPropertyAttribute]
public string DiscoveryType { get; public set; }
    [JsonPropertyAttribute]
public string ConnectTimeout { get; public set; }
    [JsonPropertyAttribute]
public TLSCertificatesConfig TLSCertificates { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DiscoveryType();
    [CompilerGeneratedAttribute]
public void set_DiscoveryType(string value);
    [CompilerGeneratedAttribute]
public string get_ConnectTimeout();
    [CompilerGeneratedAttribute]
public void set_ConnectTimeout(string value);
    [CompilerGeneratedAttribute]
public TLSCertificatesConfig get_TLSCertificates();
    [CompilerGeneratedAttribute]
public void set_TLSCertificates(TLSCertificatesConfig value);
}
public class Consul.JWTProvider : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private VerifyClaims <VerifyClaims>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public VerifyClaims VerifyClaims { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public VerifyClaims get_VerifyClaims();
    [CompilerGeneratedAttribute]
public void set_VerifyClaims(VerifyClaims value);
}
public class Consul.JWTProviderEntry : object {
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Issuer>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<JSONWebKeySetConfig> <JSONWebKeySet>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Audiences>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ProviderLocation> <Locations>k__BackingField;
    [CompilerGeneratedAttribute]
private ForwardingConfig <Forwarding>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClockSkewSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private CacheConfig <CacheConfig>k__BackingField;
    [JsonPropertyAttribute]
public string Kind { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Issuer { get; public set; }
    [JsonPropertyAttribute]
public List`1<JSONWebKeySetConfig> JSONWebKeySet { get; public set; }
    [JsonPropertyAttribute]
public List`1<string> Audiences { get; public set; }
    [JsonPropertyAttribute]
public List`1<ProviderLocation> Locations { get; public set; }
    [JsonPropertyAttribute]
public ForwardingConfig Forwarding { get; public set; }
    [JsonPropertyAttribute]
public string ClockSkewSeconds { get; public set; }
    [JsonPropertyAttribute]
public CacheConfig CacheConfig { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Issuer();
    [CompilerGeneratedAttribute]
public void set_Issuer(string value);
    [CompilerGeneratedAttribute]
public List`1<JSONWebKeySetConfig> get_JSONWebKeySet();
    [CompilerGeneratedAttribute]
public void set_JSONWebKeySet(List`1<JSONWebKeySetConfig> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Audiences();
    [CompilerGeneratedAttribute]
public void set_Audiences(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<ProviderLocation> get_Locations();
    [CompilerGeneratedAttribute]
public void set_Locations(List`1<ProviderLocation> value);
    [CompilerGeneratedAttribute]
public ForwardingConfig get_Forwarding();
    [CompilerGeneratedAttribute]
public void set_Forwarding(ForwardingConfig value);
    [CompilerGeneratedAttribute]
public string get_ClockSkewSeconds();
    [CompilerGeneratedAttribute]
public void set_ClockSkewSeconds(string value);
    [CompilerGeneratedAttribute]
public CacheConfig get_CacheConfig();
    [CompilerGeneratedAttribute]
public void set_CacheConfig(CacheConfig value);
}
public class Consul.JWTSettings : object {
    [CompilerGeneratedAttribute]
private List`1<JWTProvider> <Providers>k__BackingField;
    [JsonPropertyAttribute]
public List`1<JWTProvider> Providers { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<JWTProvider> get_Providers();
    [CompilerGeneratedAttribute]
public void set_Providers(List`1<JWTProvider> value);
}
public class Consul.KeyringResponse : object {
    [CompilerGeneratedAttribute]
private bool <WAN>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Datacenter>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, int> <Keys>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumNodes>k__BackingField;
    public bool WAN { get; public set; }
    public string Datacenter { get; public set; }
    public IDictionary`2<string, int> Keys { get; public set; }
    public int NumNodes { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_WAN();
    [CompilerGeneratedAttribute]
public void set_WAN(bool value);
    [CompilerGeneratedAttribute]
public string get_Datacenter();
    [CompilerGeneratedAttribute]
public void set_Datacenter(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, int> get_Keys();
    [CompilerGeneratedAttribute]
public void set_Keys(IDictionary`2<string, int> value);
    [CompilerGeneratedAttribute]
public int get_NumNodes();
    [CompilerGeneratedAttribute]
public void set_NumNodes(int value);
}
public class Consul.KV : object {
    private ConsulClient _client;
    public KV(ConsulClient c);
    public sealed virtual Task`1<WriteResult`1<bool>> Acquire(KVPair p, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<bool>> Acquire(KVPair p, WriteOptions q, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<bool>> CAS(KVPair p, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<bool>> CAS(KVPair p, WriteOptions q, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<bool>> Delete(string key, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<bool>> Delete(string key, WriteOptions q, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<bool>> DeleteCAS(KVPair p, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<bool>> DeleteCAS(KVPair p, WriteOptions q, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<bool>> DeleteTree(string prefix, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<bool>> DeleteTree(string prefix, WriteOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<KVPair>> Get(string key, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.KV/<Get>d__13")]
public sealed virtual Task`1<QueryResult`1<KVPair>> Get(string key, QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<String[]>> Keys(string prefix, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<String[]>> Keys(string prefix, string separator, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<String[]>> Keys(string prefix, string separator, QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<KVPair[]>> List(string prefix, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<KVPair[]>> List(string prefix, QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<bool>> Put(KVPair p, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<bool>> Put(KVPair p, WriteOptions q, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<bool>> Release(KVPair p, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<bool>> Release(KVPair p, WriteOptions q, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<KVTxnResponse>> Txn(List`1<KVTxnOp> txn, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.KV/<Txn>d__24")]
public sealed virtual Task`1<WriteResult`1<KVTxnResponse>> Txn(List`1<KVTxnOp> txn, WriteOptions q, CancellationToken ct);
}
[JsonConverterAttribute("Consul.KVPairConverter")]
public class Consul.KVPair : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <CreateIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <ModifyIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <LockIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Flags>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Session>k__BackingField;
    public string Key { get; public set; }
    public ulong CreateIndex { get; public set; }
    public ulong ModifyIndex { get; public set; }
    public ulong LockIndex { get; public set; }
    public ulong Flags { get; public set; }
    public Byte[] Value { get; public set; }
    public string Session { get; public set; }
    public KVPair(string key);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public ulong get_CreateIndex();
    [CompilerGeneratedAttribute]
public void set_CreateIndex(ulong value);
    [CompilerGeneratedAttribute]
public ulong get_ModifyIndex();
    [CompilerGeneratedAttribute]
public void set_ModifyIndex(ulong value);
    [CompilerGeneratedAttribute]
public ulong get_LockIndex();
    [CompilerGeneratedAttribute]
public void set_LockIndex(ulong value);
    [CompilerGeneratedAttribute]
public ulong get_Flags();
    [CompilerGeneratedAttribute]
public void set_Flags(ulong value);
    [CompilerGeneratedAttribute]
public Byte[] get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(Byte[] value);
    [CompilerGeneratedAttribute]
public string get_Session();
    [CompilerGeneratedAttribute]
public void set_Session(string value);
    internal void Validate();
    internal static void ValidatePath(string path);
}
public class Consul.KVPairConverter : JsonConverter {
    private static Lazy`1<String[]> ObjProps;
    public bool CanWrite { get; }
    private static KVPairConverter();
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
    public virtual bool get_CanWrite();
}
public class Consul.KVRateLimit : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ReadRate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <WriteRate>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<int> ReadRate { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> WriteRate { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ReadRate();
    [CompilerGeneratedAttribute]
public void set_ReadRate(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_WriteRate();
    [CompilerGeneratedAttribute]
public void set_WriteRate(Nullable`1<int> value);
}
public class Consul.KVTxnOp : object {
    [CompilerGeneratedAttribute]
private KVTxnVerb <Verb>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Flags>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Session>k__BackingField;
    public KVTxnVerb Verb { get; public set; }
    public string Key { get; public set; }
    public Byte[] Value { get; public set; }
    public ulong Flags { get; public set; }
    public ulong Index { get; public set; }
    public string Session { get; public set; }
    public KVTxnOp(string key, KVTxnVerb verb);
    [CompilerGeneratedAttribute]
public KVTxnVerb get_Verb();
    [CompilerGeneratedAttribute]
public void set_Verb(KVTxnVerb value);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public Byte[] get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(Byte[] value);
    [CompilerGeneratedAttribute]
public ulong get_Flags();
    [CompilerGeneratedAttribute]
public void set_Flags(ulong value);
    [CompilerGeneratedAttribute]
public ulong get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(ulong value);
    [CompilerGeneratedAttribute]
public string get_Session();
    [CompilerGeneratedAttribute]
public void set_Session(string value);
}
public class Consul.KVTxnResponse : object {
    [CompilerGeneratedAttribute]
private bool <Success>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<TxnError> <Errors>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<KVPair> <Results>k__BackingField;
    [JsonIgnoreAttribute]
public bool Success { get; internal set; }
    [JsonPropertyAttribute]
public List`1<TxnError> Errors { get; internal set; }
    [JsonPropertyAttribute]
public List`1<KVPair> Results { get; internal set; }
    internal KVTxnResponse(TxnResponse txnRes);
    [CompilerGeneratedAttribute]
public bool get_Success();
    [CompilerGeneratedAttribute]
internal void set_Success(bool value);
    [CompilerGeneratedAttribute]
public List`1<TxnError> get_Errors();
    [CompilerGeneratedAttribute]
internal void set_Errors(List`1<TxnError> value);
    [CompilerGeneratedAttribute]
public List`1<KVPair> get_Results();
    [CompilerGeneratedAttribute]
internal void set_Results(List`1<KVPair> value);
}
[JsonConverterAttribute("Consul.KVTxnVerbTypeConverter")]
public class Consul.KVTxnVerb : object {
    [CompilerGeneratedAttribute]
private static KVTxnVerb <Set>k__BackingField;
    [CompilerGeneratedAttribute]
private static KVTxnVerb <Delete>k__BackingField;
    [CompilerGeneratedAttribute]
private static KVTxnVerb <DeleteCAS>k__BackingField;
    [CompilerGeneratedAttribute]
private static KVTxnVerb <DeleteTree>k__BackingField;
    [CompilerGeneratedAttribute]
private static KVTxnVerb <CAS>k__BackingField;
    [CompilerGeneratedAttribute]
private static KVTxnVerb <Lock>k__BackingField;
    [CompilerGeneratedAttribute]
private static KVTxnVerb <Unlock>k__BackingField;
    [CompilerGeneratedAttribute]
private static KVTxnVerb <Get>k__BackingField;
    [CompilerGeneratedAttribute]
private static KVTxnVerb <GetTree>k__BackingField;
    [CompilerGeneratedAttribute]
private static KVTxnVerb <CheckSession>k__BackingField;
    [CompilerGeneratedAttribute]
private static KVTxnVerb <CheckIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Operation>k__BackingField;
    public static KVTxnVerb Set { get; }
    public static KVTxnVerb Delete { get; }
    public static KVTxnVerb DeleteCAS { get; }
    public static KVTxnVerb DeleteTree { get; }
    public static KVTxnVerb CAS { get; }
    public static KVTxnVerb Lock { get; }
    public static KVTxnVerb Unlock { get; }
    public static KVTxnVerb Get { get; }
    public static KVTxnVerb GetTree { get; }
    public static KVTxnVerb CheckSession { get; }
    public static KVTxnVerb CheckIndex { get; }
    public string Operation { get; private set; }
    private static KVTxnVerb();
    [CompilerGeneratedAttribute]
public static KVTxnVerb get_Set();
    [CompilerGeneratedAttribute]
public static KVTxnVerb get_Delete();
    [CompilerGeneratedAttribute]
public static KVTxnVerb get_DeleteCAS();
    [CompilerGeneratedAttribute]
public static KVTxnVerb get_DeleteTree();
    [CompilerGeneratedAttribute]
public static KVTxnVerb get_CAS();
    [CompilerGeneratedAttribute]
public static KVTxnVerb get_Lock();
    [CompilerGeneratedAttribute]
public static KVTxnVerb get_Unlock();
    [CompilerGeneratedAttribute]
public static KVTxnVerb get_Get();
    [CompilerGeneratedAttribute]
public static KVTxnVerb get_GetTree();
    [CompilerGeneratedAttribute]
public static KVTxnVerb get_CheckSession();
    [CompilerGeneratedAttribute]
public static KVTxnVerb get_CheckIndex();
    [CompilerGeneratedAttribute]
public string get_Operation();
    [CompilerGeneratedAttribute]
private void set_Operation(string value);
    public sealed virtual bool Equals(KVTxnVerb other);
    public virtual bool Equals(object other);
    public virtual int GetHashCode();
}
public class Consul.KVTxnVerbTypeConverter : JsonConverter {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
public class Consul.LeastRequestConfig : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ChoiceCount>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<int> ChoiceCount { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ChoiceCount();
    [CompilerGeneratedAttribute]
public void set_ChoiceCount(Nullable`1<int> value);
}
public class Consul.License : object {
    [CompilerGeneratedAttribute]
private string <LicenseId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomerId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InstallationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IssueTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExpirationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Product>k__BackingField;
    [CompilerGeneratedAttribute]
private Flags <Flags>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Features>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Temporary>k__BackingField;
    [JsonPropertyAttribute("license_id")]
public string LicenseId { get; public set; }
    [JsonPropertyAttribute("customer_id")]
public string CustomerId { get; public set; }
    [JsonPropertyAttribute("installation_id")]
public string InstallationId { get; public set; }
    [JsonPropertyAttribute("issue_time")]
public string IssueTime { get; public set; }
    [JsonPropertyAttribute("start_time")]
public string StartTime { get; public set; }
    [JsonPropertyAttribute("expiration_time")]
public string ExpirationTime { get; public set; }
    public string Product { get; public set; }
    public Flags Flags { get; public set; }
    public String[] Features { get; public set; }
    public bool Temporary { get; public set; }
    [CompilerGeneratedAttribute]
public string get_LicenseId();
    [CompilerGeneratedAttribute]
public void set_LicenseId(string value);
    [CompilerGeneratedAttribute]
public string get_CustomerId();
    [CompilerGeneratedAttribute]
public void set_CustomerId(string value);
    [CompilerGeneratedAttribute]
public string get_InstallationId();
    [CompilerGeneratedAttribute]
public void set_InstallationId(string value);
    [CompilerGeneratedAttribute]
public string get_IssueTime();
    [CompilerGeneratedAttribute]
public void set_IssueTime(string value);
    [CompilerGeneratedAttribute]
public string get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(string value);
    [CompilerGeneratedAttribute]
public string get_ExpirationTime();
    [CompilerGeneratedAttribute]
public void set_ExpirationTime(string value);
    [CompilerGeneratedAttribute]
public string get_Product();
    [CompilerGeneratedAttribute]
public void set_Product(string value);
    [CompilerGeneratedAttribute]
public Flags get_Flags();
    [CompilerGeneratedAttribute]
public void set_Flags(Flags value);
    [CompilerGeneratedAttribute]
public String[] get_Features();
    [CompilerGeneratedAttribute]
public void set_Features(String[] value);
    [CompilerGeneratedAttribute]
public bool get_Temporary();
    [CompilerGeneratedAttribute]
public void set_Temporary(bool value);
}
public class Consul.LimitsConfig : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxConnections>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxPendingRequests>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxConcurrentRequests>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<int> MaxConnections { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> MaxPendingRequests { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> MaxConcurrentRequests { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxConnections();
    [CompilerGeneratedAttribute]
public void set_MaxConnections(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxPendingRequests();
    [CompilerGeneratedAttribute]
public void set_MaxPendingRequests(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxConcurrentRequests();
    [CompilerGeneratedAttribute]
public void set_MaxConcurrentRequests(Nullable`1<int> value);
}
public class Consul.LinkedService : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CAFile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CertFile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeyFile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SNI>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Namespace { get; public set; }
    [JsonPropertyAttribute]
public string CAFile { get; public set; }
    [JsonPropertyAttribute]
public string CertFile { get; public set; }
    [JsonPropertyAttribute]
public string KeyFile { get; public set; }
    [JsonPropertyAttribute]
public string SNI { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_CAFile();
    [CompilerGeneratedAttribute]
public void set_CAFile(string value);
    [CompilerGeneratedAttribute]
public string get_CertFile();
    [CompilerGeneratedAttribute]
public void set_CertFile(string value);
    [CompilerGeneratedAttribute]
public string get_KeyFile();
    [CompilerGeneratedAttribute]
public void set_KeyFile(string value);
    [CompilerGeneratedAttribute]
public string get_SNI();
    [CompilerGeneratedAttribute]
public void set_SNI(string value);
}
public class Consul.LoadBalancerConfig : object {
    [CompilerGeneratedAttribute]
private string <Policy>k__BackingField;
    [CompilerGeneratedAttribute]
private LeastRequestConfig <LeastRequestConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private RingHashConfig <RingHashConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <HashPolicies>k__BackingField;
    [CompilerGeneratedAttribute]
private CookieConfig <CookieConfig>k__BackingField;
    [JsonPropertyAttribute]
public string Policy { get; public set; }
    [JsonPropertyAttribute]
public LeastRequestConfig LeastRequestConfig { get; public set; }
    [JsonPropertyAttribute]
public RingHashConfig RingHashConfig { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> HashPolicies { get; public set; }
    [JsonPropertyAttribute]
public CookieConfig CookieConfig { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Policy();
    [CompilerGeneratedAttribute]
public void set_Policy(string value);
    [CompilerGeneratedAttribute]
public LeastRequestConfig get_LeastRequestConfig();
    [CompilerGeneratedAttribute]
public void set_LeastRequestConfig(LeastRequestConfig value);
    [CompilerGeneratedAttribute]
public RingHashConfig get_RingHashConfig();
    [CompilerGeneratedAttribute]
public void set_RingHashConfig(RingHashConfig value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_HashPolicies();
    [CompilerGeneratedAttribute]
public void set_HashPolicies(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public CookieConfig get_CookieConfig();
    [CompilerGeneratedAttribute]
public void set_CookieConfig(CookieConfig value);
}
public class Consul.LocalJSONWebKeySet : object {
    [CompilerGeneratedAttribute]
private string <JWKS>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Filename>k__BackingField;
    [JsonPropertyAttribute]
public string JWKS { get; public set; }
    [JsonPropertyAttribute]
public string Filename { get; public set; }
    [CompilerGeneratedAttribute]
public string get_JWKS();
    [CompilerGeneratedAttribute]
public void set_JWKS(string value);
    [CompilerGeneratedAttribute]
public string get_Filename();
    [CompilerGeneratedAttribute]
public void set_Filename(string value);
}
public class Consul.LocalServiceHealth : object {
    [CompilerGeneratedAttribute]
private HealthStatus <AggregatedStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private AgentService <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private AgentCheck[] <Checks>k__BackingField;
    [JsonConverterAttribute("Consul.HealthStatusConverter")]
public HealthStatus AggregatedStatus { get; public set; }
    public AgentService Service { get; public set; }
    public AgentCheck[] Checks { get; public set; }
    [CompilerGeneratedAttribute]
public HealthStatus get_AggregatedStatus();
    [CompilerGeneratedAttribute]
public void set_AggregatedStatus(HealthStatus value);
    [CompilerGeneratedAttribute]
public AgentService get_Service();
    [CompilerGeneratedAttribute]
public void set_Service(AgentService value);
    [CompilerGeneratedAttribute]
public AgentCheck[] get_Checks();
    [CompilerGeneratedAttribute]
public void set_Checks(AgentCheck[] value);
}
public class Consul.Lock : object {
    public static TimeSpan DefaultLockWaitTime;
    public static TimeSpan DefaultLockRetryTime;
    public static TimeSpan DefaultMonitorRetryTime;
    private static ulong LockFlagValue;
    private AsyncLock _mutex;
    private bool _isheld;
    private int _retries;
    private CancellationTokenSource _cts;
    private Task _sessionRenewTask;
    private Task _monitorTask;
    private ConsulClient _client;
    [CompilerGeneratedAttribute]
private LockOptions <Opts>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LockSession>k__BackingField;
    internal LockOptions Opts { get; internal set; }
    internal string LockSession { get; internal set; }
    public bool IsHeld { get; private set; }
    internal Lock(ConsulClient c);
    private static Lock();
    [CompilerGeneratedAttribute]
internal LockOptions get_Opts();
    [CompilerGeneratedAttribute]
internal void set_Opts(LockOptions value);
    [CompilerGeneratedAttribute]
internal string get_LockSession();
    [CompilerGeneratedAttribute]
internal void set_LockSession(string value);
    public sealed virtual bool get_IsHeld();
    private void set_IsHeld(bool value);
    public Task`1<CancellationToken> Acquire();
    [AsyncStateMachineAttribute("Consul.Lock/<Acquire>d__24")]
public sealed virtual Task`1<CancellationToken> Acquire(CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Lock/<Release>d__25")]
public sealed virtual Task Release(CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Lock/<Destroy>d__26")]
public sealed virtual Task Destroy(CancellationToken ct);
    private void DisposeCancellationTokenSource();
    private Task MonitorLock();
    [AsyncStateMachineAttribute("Consul.Lock/<CreateSession>d__29")]
private Task`1<string> CreateSession();
    private KVPair LockEntry(string session);
    [AsyncStateMachineAttribute("Consul.Lock/<<MonitorLock>b__28_0>d")]
[CompilerGeneratedAttribute]
private Task <MonitorLock>b__28_0();
}
public class Consul.LockConflictException : Exception {
    public LockConflictException(string message);
    public LockConflictException(string message, Exception inner);
}
public class Consul.LockHeldException : Exception {
    public LockHeldException(string message);
    public LockHeldException(string message, Exception inner);
}
public class Consul.LockInUseException : Exception {
    public LockInUseException(string message);
    public LockInUseException(string message, Exception inner);
}
public class Consul.LockMaxAttemptsReachedException : Exception {
    public LockMaxAttemptsReachedException(string message);
    public LockMaxAttemptsReachedException(string message, Exception inner);
}
public class Consul.LockNotHeldException : Exception {
    public LockNotHeldException(string message);
    public LockNotHeldException(string message, Exception inner);
}
public class Consul.LockOptions : object {
    private static string DefaultLockSessionName;
    private static TimeSpan LockRetryTimeMin;
    private static TimeSpan DefaultLockSessionTTL;
    private TimeSpan _lockRetryTime;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Session>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionName>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <SessionTTL>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MonitorRetries>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <LockWaitTime>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <MonitorRetryTime>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LockTryOnce>k__BackingField;
    public string Key { get; public set; }
    public Byte[] Value { get; public set; }
    public string Session { get; public set; }
    public string SessionName { get; public set; }
    public TimeSpan SessionTTL { get; public set; }
    public int MonitorRetries { get; public set; }
    public TimeSpan LockRetryTime { get; public set; }
    public TimeSpan LockWaitTime { get; public set; }
    public TimeSpan MonitorRetryTime { get; public set; }
    public bool LockTryOnce { get; public set; }
    public LockOptions(string key);
    private static LockOptions();
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public Byte[] get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(Byte[] value);
    [CompilerGeneratedAttribute]
public string get_Session();
    [CompilerGeneratedAttribute]
public void set_Session(string value);
    [CompilerGeneratedAttribute]
public string get_SessionName();
    [CompilerGeneratedAttribute]
public void set_SessionName(string value);
    [CompilerGeneratedAttribute]
public TimeSpan get_SessionTTL();
    [CompilerGeneratedAttribute]
public void set_SessionTTL(TimeSpan value);
    [CompilerGeneratedAttribute]
public int get_MonitorRetries();
    [CompilerGeneratedAttribute]
public void set_MonitorRetries(int value);
    public TimeSpan get_LockRetryTime();
    public void set_LockRetryTime(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_LockWaitTime();
    [CompilerGeneratedAttribute]
public void set_LockWaitTime(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_MonitorRetryTime();
    [CompilerGeneratedAttribute]
public void set_MonitorRetryTime(TimeSpan value);
    [CompilerGeneratedAttribute]
public bool get_LockTryOnce();
    [CompilerGeneratedAttribute]
public void set_LockTryOnce(bool value);
}
public enum Consul.LogLevel : Enum {
    public int value__;
    public static LogLevel Info;
    public static LogLevel Trace;
    public static LogLevel Debug;
    public static LogLevel Warn;
    public static LogLevel Err;
}
public class Consul.MapConfig : object {
    [CompilerGeneratedAttribute]
private string <PathExact>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PathPrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PathRegex>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Methods>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<HeaderConfig> <Header>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<QueryParamConfig> <QueryParam>k__BackingField;
    [JsonPropertyAttribute]
public string PathExact { get; public set; }
    [JsonPropertyAttribute]
public string PathPrefix { get; public set; }
    [JsonPropertyAttribute]
public string PathRegex { get; public set; }
    [JsonPropertyAttribute]
public List`1<string> Methods { get; public set; }
    [JsonPropertyAttribute]
public List`1<HeaderConfig> Header { get; public set; }
    [JsonPropertyAttribute]
public List`1<QueryParamConfig> QueryParam { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PathExact();
    [CompilerGeneratedAttribute]
public void set_PathExact(string value);
    [CompilerGeneratedAttribute]
public string get_PathPrefix();
    [CompilerGeneratedAttribute]
public void set_PathPrefix(string value);
    [CompilerGeneratedAttribute]
public string get_PathRegex();
    [CompilerGeneratedAttribute]
public void set_PathRegex(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Methods();
    [CompilerGeneratedAttribute]
public void set_Methods(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<HeaderConfig> get_Header();
    [CompilerGeneratedAttribute]
public void set_Header(List`1<HeaderConfig> value);
    [CompilerGeneratedAttribute]
public List`1<QueryParamConfig> get_QueryParam();
    [CompilerGeneratedAttribute]
public void set_QueryParam(List`1<QueryParamConfig> value);
}
public class Consul.MemoryInfo : object {
    [CompilerGeneratedAttribute]
private long <Total>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Available>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Used>k__BackingField;
    [CompilerGeneratedAttribute]
private double <UsedPercent>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Free>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Active>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Inactive>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Wired>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Laundry>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Buffers>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Cached>k__BackingField;
    [CompilerGeneratedAttribute]
private long <WriteBack>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Dirty>k__BackingField;
    [CompilerGeneratedAttribute]
private long <WriteBackTmp>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Shared>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Slab>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Sreclaimable>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Sunreclaim>k__BackingField;
    [CompilerGeneratedAttribute]
private long <PageTables>k__BackingField;
    [CompilerGeneratedAttribute]
private long <SwapCached>k__BackingField;
    [CompilerGeneratedAttribute]
private long <CommitLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private long <CommittedAS>k__BackingField;
    [CompilerGeneratedAttribute]
private long <HighTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private long <HighFree>k__BackingField;
    [CompilerGeneratedAttribute]
private long <LowTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private long <LowFree>k__BackingField;
    [CompilerGeneratedAttribute]
private long <SwapTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private long <SwapFree>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Mapped>k__BackingField;
    [CompilerGeneratedAttribute]
private long <VmallocTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private long <VmallocUsed>k__BackingField;
    [CompilerGeneratedAttribute]
private long <VmallocChunk>k__BackingField;
    [CompilerGeneratedAttribute]
private long <HugePagesTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private long <HugePagesFree>k__BackingField;
    [CompilerGeneratedAttribute]
private long <HugePageSize>k__BackingField;
    public long Total { get; public set; }
    public long Available { get; public set; }
    public long Used { get; public set; }
    public double UsedPercent { get; public set; }
    public long Free { get; public set; }
    public long Active { get; public set; }
    public long Inactive { get; public set; }
    public long Wired { get; public set; }
    public long Laundry { get; public set; }
    public long Buffers { get; public set; }
    public long Cached { get; public set; }
    public long WriteBack { get; public set; }
    public long Dirty { get; public set; }
    public long WriteBackTmp { get; public set; }
    public long Shared { get; public set; }
    public long Slab { get; public set; }
    public long Sreclaimable { get; public set; }
    public long Sunreclaim { get; public set; }
    public long PageTables { get; public set; }
    public long SwapCached { get; public set; }
    public long CommitLimit { get; public set; }
    public long CommittedAS { get; public set; }
    public long HighTotal { get; public set; }
    public long HighFree { get; public set; }
    public long LowTotal { get; public set; }
    public long LowFree { get; public set; }
    public long SwapTotal { get; public set; }
    public long SwapFree { get; public set; }
    public long Mapped { get; public set; }
    public long VmallocTotal { get; public set; }
    public long VmallocUsed { get; public set; }
    public long VmallocChunk { get; public set; }
    public long HugePagesTotal { get; public set; }
    public long HugePagesFree { get; public set; }
    public long HugePageSize { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Total();
    [CompilerGeneratedAttribute]
public void set_Total(long value);
    [CompilerGeneratedAttribute]
public long get_Available();
    [CompilerGeneratedAttribute]
public void set_Available(long value);
    [CompilerGeneratedAttribute]
public long get_Used();
    [CompilerGeneratedAttribute]
public void set_Used(long value);
    [CompilerGeneratedAttribute]
public double get_UsedPercent();
    [CompilerGeneratedAttribute]
public void set_UsedPercent(double value);
    [CompilerGeneratedAttribute]
public long get_Free();
    [CompilerGeneratedAttribute]
public void set_Free(long value);
    [CompilerGeneratedAttribute]
public long get_Active();
    [CompilerGeneratedAttribute]
public void set_Active(long value);
    [CompilerGeneratedAttribute]
public long get_Inactive();
    [CompilerGeneratedAttribute]
public void set_Inactive(long value);
    [CompilerGeneratedAttribute]
public long get_Wired();
    [CompilerGeneratedAttribute]
public void set_Wired(long value);
    [CompilerGeneratedAttribute]
public long get_Laundry();
    [CompilerGeneratedAttribute]
public void set_Laundry(long value);
    [CompilerGeneratedAttribute]
public long get_Buffers();
    [CompilerGeneratedAttribute]
public void set_Buffers(long value);
    [CompilerGeneratedAttribute]
public long get_Cached();
    [CompilerGeneratedAttribute]
public void set_Cached(long value);
    [CompilerGeneratedAttribute]
public long get_WriteBack();
    [CompilerGeneratedAttribute]
public void set_WriteBack(long value);
    [CompilerGeneratedAttribute]
public long get_Dirty();
    [CompilerGeneratedAttribute]
public void set_Dirty(long value);
    [CompilerGeneratedAttribute]
public long get_WriteBackTmp();
    [CompilerGeneratedAttribute]
public void set_WriteBackTmp(long value);
    [CompilerGeneratedAttribute]
public long get_Shared();
    [CompilerGeneratedAttribute]
public void set_Shared(long value);
    [CompilerGeneratedAttribute]
public long get_Slab();
    [CompilerGeneratedAttribute]
public void set_Slab(long value);
    [CompilerGeneratedAttribute]
public long get_Sreclaimable();
    [CompilerGeneratedAttribute]
public void set_Sreclaimable(long value);
    [CompilerGeneratedAttribute]
public long get_Sunreclaim();
    [CompilerGeneratedAttribute]
public void set_Sunreclaim(long value);
    [CompilerGeneratedAttribute]
public long get_PageTables();
    [CompilerGeneratedAttribute]
public void set_PageTables(long value);
    [CompilerGeneratedAttribute]
public long get_SwapCached();
    [CompilerGeneratedAttribute]
public void set_SwapCached(long value);
    [CompilerGeneratedAttribute]
public long get_CommitLimit();
    [CompilerGeneratedAttribute]
public void set_CommitLimit(long value);
    [CompilerGeneratedAttribute]
public long get_CommittedAS();
    [CompilerGeneratedAttribute]
public void set_CommittedAS(long value);
    [CompilerGeneratedAttribute]
public long get_HighTotal();
    [CompilerGeneratedAttribute]
public void set_HighTotal(long value);
    [CompilerGeneratedAttribute]
public long get_HighFree();
    [CompilerGeneratedAttribute]
public void set_HighFree(long value);
    [CompilerGeneratedAttribute]
public long get_LowTotal();
    [CompilerGeneratedAttribute]
public void set_LowTotal(long value);
    [CompilerGeneratedAttribute]
public long get_LowFree();
    [CompilerGeneratedAttribute]
public void set_LowFree(long value);
    [CompilerGeneratedAttribute]
public long get_SwapTotal();
    [CompilerGeneratedAttribute]
public void set_SwapTotal(long value);
    [CompilerGeneratedAttribute]
public long get_SwapFree();
    [CompilerGeneratedAttribute]
public void set_SwapFree(long value);
    [CompilerGeneratedAttribute]
public long get_Mapped();
    [CompilerGeneratedAttribute]
public void set_Mapped(long value);
    [CompilerGeneratedAttribute]
public long get_VmallocTotal();
    [CompilerGeneratedAttribute]
public void set_VmallocTotal(long value);
    [CompilerGeneratedAttribute]
public long get_VmallocUsed();
    [CompilerGeneratedAttribute]
public void set_VmallocUsed(long value);
    [CompilerGeneratedAttribute]
public long get_VmallocChunk();
    [CompilerGeneratedAttribute]
public void set_VmallocChunk(long value);
    [CompilerGeneratedAttribute]
public long get_HugePagesTotal();
    [CompilerGeneratedAttribute]
public void set_HugePagesTotal(long value);
    [CompilerGeneratedAttribute]
public long get_HugePagesFree();
    [CompilerGeneratedAttribute]
public void set_HugePagesFree(long value);
    [CompilerGeneratedAttribute]
public long get_HugePageSize();
    [CompilerGeneratedAttribute]
public void set_HugePageSize(long value);
}
public class Consul.MeshEntry : object {
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private TransparentProxyConfig <TransparentProxy>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <MeshDestinationsOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowEnablingPermissiveMutualTLS>k__BackingField;
    [CompilerGeneratedAttribute]
private TLSConfig <TLS>k__BackingField;
    [CompilerGeneratedAttribute]
private TLSDirectionConfig <Incoming>k__BackingField;
    [CompilerGeneratedAttribute]
private TLSDirectionConfig <Outgoing>k__BackingField;
    [CompilerGeneratedAttribute]
private HTTPConfig <HTTP>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SanitizeXForwardedClientCert>k__BackingField;
    [CompilerGeneratedAttribute]
private PeeringMeshConfig <Peering>k__BackingField;
    [JsonPropertyAttribute]
public string Kind { get; public set; }
    [JsonPropertyAttribute]
public string Namespace { get; public set; }
    [JsonPropertyAttribute]
public string Partition { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Meta { get; public set; }
    [JsonPropertyAttribute]
public TransparentProxyConfig TransparentProxy { get; public set; }
    [JsonPropertyAttribute]
public bool MeshDestinationsOnly { get; public set; }
    [JsonPropertyAttribute]
public bool AllowEnablingPermissiveMutualTLS { get; public set; }
    [JsonPropertyAttribute]
public TLSConfig TLS { get; public set; }
    [JsonPropertyAttribute]
public TLSDirectionConfig Incoming { get; public set; }
    [JsonPropertyAttribute]
public TLSDirectionConfig Outgoing { get; public set; }
    [JsonPropertyAttribute]
public HTTPConfig HTTP { get; public set; }
    [JsonPropertyAttribute]
public bool SanitizeXForwardedClientCert { get; public set; }
    [JsonPropertyAttribute]
public PeeringMeshConfig Peering { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public TransparentProxyConfig get_TransparentProxy();
    [CompilerGeneratedAttribute]
public void set_TransparentProxy(TransparentProxyConfig value);
    [CompilerGeneratedAttribute]
public bool get_MeshDestinationsOnly();
    [CompilerGeneratedAttribute]
public void set_MeshDestinationsOnly(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowEnablingPermissiveMutualTLS();
    [CompilerGeneratedAttribute]
public void set_AllowEnablingPermissiveMutualTLS(bool value);
    [CompilerGeneratedAttribute]
public TLSConfig get_TLS();
    [CompilerGeneratedAttribute]
public void set_TLS(TLSConfig value);
    [CompilerGeneratedAttribute]
public TLSDirectionConfig get_Incoming();
    [CompilerGeneratedAttribute]
public void set_Incoming(TLSDirectionConfig value);
    [CompilerGeneratedAttribute]
public TLSDirectionConfig get_Outgoing();
    [CompilerGeneratedAttribute]
public void set_Outgoing(TLSDirectionConfig value);
    [CompilerGeneratedAttribute]
public HTTPConfig get_HTTP();
    [CompilerGeneratedAttribute]
public void set_HTTP(HTTPConfig value);
    [CompilerGeneratedAttribute]
public bool get_SanitizeXForwardedClientCert();
    [CompilerGeneratedAttribute]
public void set_SanitizeXForwardedClientCert(bool value);
    [CompilerGeneratedAttribute]
public PeeringMeshConfig get_Peering();
    [CompilerGeneratedAttribute]
public void set_Peering(PeeringMeshConfig value);
}
public class Consul.MeshGatewayConfig : object {
    [CompilerGeneratedAttribute]
private string <Mode>k__BackingField;
    [JsonPropertyAttribute]
public string Mode { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Mode();
    [CompilerGeneratedAttribute]
public void set_Mode(string value);
}
public class Consul.Metrics : object {
    [CompilerGeneratedAttribute]
private string <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Gauge> <Gauges>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Point> <Points>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Counter> <Counters>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Sample> <Samples>k__BackingField;
    public string Timestamp { get; public set; }
    public List`1<Gauge> Gauges { get; public set; }
    public List`1<Point> Points { get; public set; }
    public List`1<Counter> Counters { get; public set; }
    public List`1<Sample> Samples { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Timestamp();
    [CompilerGeneratedAttribute]
public void set_Timestamp(string value);
    [CompilerGeneratedAttribute]
public List`1<Gauge> get_Gauges();
    [CompilerGeneratedAttribute]
public void set_Gauges(List`1<Gauge> value);
    [CompilerGeneratedAttribute]
public List`1<Point> get_Points();
    [CompilerGeneratedAttribute]
public void set_Points(List`1<Point> value);
    [CompilerGeneratedAttribute]
public List`1<Counter> get_Counters();
    [CompilerGeneratedAttribute]
public void set_Counters(List`1<Counter> value);
    [CompilerGeneratedAttribute]
public List`1<Sample> get_Samples();
    [CompilerGeneratedAttribute]
public void set_Samples(List`1<Sample> value);
}
public class Consul.Namespace : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private NamespaceACLConfig <ACLs>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Meta>k__BackingField;
    public string Name { get; public set; }
    public string Description { get; public set; }
    [JsonPropertyAttribute]
public NamespaceACLConfig ACLs { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Meta { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public NamespaceACLConfig get_ACLs();
    [CompilerGeneratedAttribute]
public void set_ACLs(NamespaceACLConfig value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(Dictionary`2<string, string> value);
}
public class Consul.NamespaceACLConfig : object {
    [CompilerGeneratedAttribute]
private List`1<AuthMethodEntry> <PolicyDefaults>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AuthMethodEntry> <RoleDefaults>k__BackingField;
    public List`1<AuthMethodEntry> PolicyDefaults { get; public set; }
    public List`1<AuthMethodEntry> RoleDefaults { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<AuthMethodEntry> get_PolicyDefaults();
    [CompilerGeneratedAttribute]
public void set_PolicyDefaults(List`1<AuthMethodEntry> value);
    [CompilerGeneratedAttribute]
public List`1<AuthMethodEntry> get_RoleDefaults();
    [CompilerGeneratedAttribute]
public void set_RoleDefaults(List`1<AuthMethodEntry> value);
}
public class Consul.NamespaceResponse : Namespace {
    [CompilerGeneratedAttribute]
private ulong <CreateIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <ModifyIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <DeletedAt>k__BackingField;
    public ulong CreateIndex { get; public set; }
    public ulong ModifyIndex { get; public set; }
    public Nullable`1<DateTime> DeletedAt { get; public set; }
    [CompilerGeneratedAttribute]
public ulong get_CreateIndex();
    [CompilerGeneratedAttribute]
public void set_CreateIndex(ulong value);
    [CompilerGeneratedAttribute]
public ulong get_ModifyIndex();
    [CompilerGeneratedAttribute]
public void set_ModifyIndex(ulong value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_DeletedAt();
    [CompilerGeneratedAttribute]
public void set_DeletedAt(Nullable`1<DateTime> value);
}
public class Consul.Namespaces : object {
    private ConsulClient _client;
    internal Namespaces(ConsulClient c);
    [AsyncStateMachineAttribute("Consul.Namespaces/<Create>d__2")]
public sealed virtual Task`1<WriteResult`1<NamespaceResponse>> Create(Namespace ns, WriteOptions q, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Namespaces/<Create>d__3")]
public sealed virtual Task`1<WriteResult`1<NamespaceResponse>> Create(Namespace ns, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Namespaces/<Update>d__4")]
public sealed virtual Task`1<WriteResult`1<NamespaceResponse>> Update(Namespace ns, WriteOptions q, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Namespaces/<Update>d__5")]
public sealed virtual Task`1<WriteResult`1<NamespaceResponse>> Update(Namespace ns, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Namespaces/<Read>d__6")]
public sealed virtual Task`1<QueryResult`1<NamespaceResponse>> Read(string name, QueryOptions q, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Namespaces/<Read>d__7")]
public sealed virtual Task`1<QueryResult`1<NamespaceResponse>> Read(string name, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Namespaces/<List>d__8")]
public sealed virtual Task`1<QueryResult`1<NamespaceResponse[]>> List(QueryOptions q, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Namespaces/<List>d__9")]
public sealed virtual Task`1<QueryResult`1<NamespaceResponse[]>> List(CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Namespaces/<Delete>d__10")]
public sealed virtual Task`1<WriteResult> Delete(string name, WriteOptions q, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Namespaces/<Delete>d__11")]
public sealed virtual Task`1<WriteResult> Delete(string name, CancellationToken ct);
}
public class Consul.NanoSecTimespanConverter : JsonConverter {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
public class Consul.Node : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <TaggedAddresses>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    public string Address { get; public set; }
    public Dictionary`2<string, string> TaggedAddresses { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_TaggedAddresses();
    [CompilerGeneratedAttribute]
public void set_TaggedAddresses(Dictionary`2<string, string> value);
}
public class Consul.NodeInfo : object {
    [CompilerGeneratedAttribute]
private string <ID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Datacenter>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <TaggedAddresses>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Meta>k__BackingField;
    public string ID { get; public set; }
    public string Node { get; public set; }
    public string Address { get; public set; }
    public string Datacenter { get; public set; }
    public Dictionary`2<string, string> TaggedAddresses { get; public set; }
    public Dictionary`2<string, string> Meta { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ID();
    [CompilerGeneratedAttribute]
public void set_ID(string value);
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
public void set_Node(string value);
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(string value);
    [CompilerGeneratedAttribute]
public string get_Datacenter();
    [CompilerGeneratedAttribute]
public void set_Datacenter(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_TaggedAddresses();
    [CompilerGeneratedAttribute]
public void set_TaggedAddresses(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(Dictionary`2<string, string> value);
}
public class Consul.NodeService : object {
    [CompilerGeneratedAttribute]
private NodeInfo <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ServiceInfo> <Services>k__BackingField;
    public NodeInfo Node { get; public set; }
    public List`1<ServiceInfo> Services { get; public set; }
    [CompilerGeneratedAttribute]
public NodeInfo get_Node();
    [CompilerGeneratedAttribute]
public void set_Node(NodeInfo value);
    [CompilerGeneratedAttribute]
public List`1<ServiceInfo> get_Services();
    [CompilerGeneratedAttribute]
public void set_Services(List`1<ServiceInfo> value);
}
public class Consul.Operator : object {
    private ConsulClient _client;
    internal Operator(ConsulClient c);
    public sealed virtual Task`1<QueryResult`1<RaftConfiguration>> RaftGetConfiguration(CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<RaftConfiguration>> RaftGetConfiguration(QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> RaftRemovePeerByAddress(string address, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> RaftRemovePeerByAddress(string address, WriteOptions q, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> KeyringInstall(string key, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> KeyringInstall(string key, WriteOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<KeyringResponse[]>> KeyringList(CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<KeyringResponse[]>> KeyringList(QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> KeyringRemove(string key, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> KeyringRemove(string key, WriteOptions q, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> KeyringUse(string key, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> KeyringUse(string key, WriteOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<ConsulLicense>> GetConsulLicense(string datacenter, CancellationToken ct);
}
public class Consul.OverrideConfig : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Peer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Protocol>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ConnectTimeoutMs>k__BackingField;
    [CompilerGeneratedAttribute]
private MeshGatewayConfig <MeshGateway>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BalanceOutboundConnections>k__BackingField;
    [CompilerGeneratedAttribute]
private LimitsConfig <Limits>k__BackingField;
    [CompilerGeneratedAttribute]
private PassiveHealthCheckConfig <PassiveHealthCheck>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Namespace { get; public set; }
    [JsonPropertyAttribute]
public string Peer { get; public set; }
    [JsonPropertyAttribute]
public string Protocol { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> ConnectTimeoutMs { get; public set; }
    [JsonPropertyAttribute]
public MeshGatewayConfig MeshGateway { get; public set; }
    [JsonPropertyAttribute]
public string BalanceOutboundConnections { get; public set; }
    [JsonPropertyAttribute]
public LimitsConfig Limits { get; public set; }
    [JsonPropertyAttribute]
public PassiveHealthCheckConfig PassiveHealthCheck { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Peer();
    [CompilerGeneratedAttribute]
public void set_Peer(string value);
    [CompilerGeneratedAttribute]
public string get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ConnectTimeoutMs();
    [CompilerGeneratedAttribute]
public void set_ConnectTimeoutMs(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public MeshGatewayConfig get_MeshGateway();
    [CompilerGeneratedAttribute]
public void set_MeshGateway(MeshGatewayConfig value);
    [CompilerGeneratedAttribute]
public string get_BalanceOutboundConnections();
    [CompilerGeneratedAttribute]
public void set_BalanceOutboundConnections(string value);
    [CompilerGeneratedAttribute]
public LimitsConfig get_Limits();
    [CompilerGeneratedAttribute]
public void set_Limits(LimitsConfig value);
    [CompilerGeneratedAttribute]
public PassiveHealthCheckConfig get_PassiveHealthCheck();
    [CompilerGeneratedAttribute]
public void set_PassiveHealthCheck(PassiveHealthCheckConfig value);
}
public class Consul.PassiveHealthCheckConfig : object {
    [CompilerGeneratedAttribute]
private string <Interval>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxFailures>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <EnforcingConsecutive5xx>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxEjectionPercent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BaseEjectionTime>k__BackingField;
    [JsonPropertyAttribute]
public string Interval { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> MaxFailures { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> EnforcingConsecutive5xx { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> MaxEjectionPercent { get; public set; }
    [JsonPropertyAttribute]
public string BaseEjectionTime { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Interval();
    [CompilerGeneratedAttribute]
public void set_Interval(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxFailures();
    [CompilerGeneratedAttribute]
public void set_MaxFailures(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_EnforcingConsecutive5xx();
    [CompilerGeneratedAttribute]
public void set_EnforcingConsecutive5xx(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxEjectionPercent();
    [CompilerGeneratedAttribute]
public void set_MaxEjectionPercent(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_BaseEjectionTime();
    [CompilerGeneratedAttribute]
public void set_BaseEjectionTime(string value);
}
public class Consul.PathConfig : object {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <LocalPathPort>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ListenerPort>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Protocol>k__BackingField;
    [JsonPropertyAttribute]
public string Path { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> LocalPathPort { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> ListenerPort { get; public set; }
    [JsonPropertyAttribute]
public string Protocol { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_LocalPathPort();
    [CompilerGeneratedAttribute]
public void set_LocalPathPort(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ListenerPort();
    [CompilerGeneratedAttribute]
public void set_ListenerPort(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(string value);
}
public class Consul.PeeringMeshConfig : object {
    [CompilerGeneratedAttribute]
private bool <PeerThroughMeshGateways>k__BackingField;
    [JsonPropertyAttribute]
public bool PeerThroughMeshGateways { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_PeerThroughMeshGateways();
    [CompilerGeneratedAttribute]
public void set_PeerThroughMeshGateways(bool value);
}
public class Consul.Point : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Labels>k__BackingField;
    public string Name { get; public set; }
    public double Value { get; public set; }
    public Dictionary`2<string, string> Labels { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public double get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(double value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Labels();
    [CompilerGeneratedAttribute]
public void set_Labels(Dictionary`2<string, string> value);
}
public class Consul.Policy : object {
    private ConsulClient _client;
    internal Policy(ConsulClient c);
    public sealed virtual Task`1<WriteResult`1<PolicyEntry>> Create(PolicyEntry policy, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Policy/<Create>d__4")]
public sealed virtual Task`1<WriteResult`1<PolicyEntry>> Create(PolicyEntry policy, WriteOptions writeOptions, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<bool>> Delete(string id, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Policy/<Delete>d__6")]
public sealed virtual Task`1<WriteResult`1<bool>> Delete(string id, WriteOptions writeOptions, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<PolicyEntry[]>> List(CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Policy/<List>d__8")]
public sealed virtual Task`1<QueryResult`1<PolicyEntry[]>> List(QueryOptions queryOptions, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<PolicyEntry>> Read(string id, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Policy/<Read>d__10")]
public sealed virtual Task`1<QueryResult`1<PolicyEntry>> Read(string id, QueryOptions queryOptions, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<PolicyEntry>> Update(PolicyEntry policy, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Policy/<Update>d__12")]
public sealed virtual Task`1<WriteResult`1<PolicyEntry>> Update(PolicyEntry policy, WriteOptions writeOptions, CancellationToken ct);
}
public class Consul.PolicyEntry : object {
    [CompilerGeneratedAttribute]
private string <ID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Rules>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Datacenters>k__BackingField;
    public string ID { get; public set; }
    public string Name { get; public set; }
    public string Description { get; public set; }
    public string Rules { get; public set; }
    [JsonPropertyAttribute]
public String[] Datacenters { get; public set; }
    public PolicyEntry(string id);
    public PolicyEntry(string id, string name);
    public PolicyEntry(string id, string name, string description, string rules, String[] datacenters);
    [CompilerGeneratedAttribute]
public string get_ID();
    [CompilerGeneratedAttribute]
public void set_ID(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Rules();
    [CompilerGeneratedAttribute]
public void set_Rules(string value);
    [CompilerGeneratedAttribute]
public String[] get_Datacenters();
    [CompilerGeneratedAttribute]
public void set_Datacenters(String[] value);
    public static bool ShouldSerializeCreateIndex();
    public static bool ShouldSerializeModifyIndex();
    public static PolicyLink op_Implicit(PolicyEntry p);
}
public class Consul.PolicyLink : object {
    [CompilerGeneratedAttribute]
private string <ID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string ID { get; public set; }
    public string Name { get; public set; }
    public PolicyLink(string id);
    public PolicyLink(string id, string name);
    [CompilerGeneratedAttribute]
public string get_ID();
    [CompilerGeneratedAttribute]
public void set_ID(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Consul.PostRequest : ConsulRequest {
    [CompilerGeneratedAttribute]
private WriteOptions <Options>k__BackingField;
    private string _body;
    public WriteOptions Options { get; public set; }
    public PostRequest(ConsulClient client, string url, string body, WriteOptions options);
    [CompilerGeneratedAttribute]
public WriteOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(WriteOptions value);
    [AsyncStateMachineAttribute("Consul.PostRequest/<Execute>d__6")]
public Task`1<WriteResult`1<string>> Execute(CancellationToken ct);
    protected virtual void ApplyOptions(ConsulClientConfiguration clientConfig);
    protected virtual void ApplyHeaders(HttpRequestMessage message, ConsulClientConfiguration clientConfig);
}
public class Consul.PostRequest`1 : ConsulRequest {
    [CompilerGeneratedAttribute]
private WriteOptions <Options>k__BackingField;
    private TIn _body;
    public WriteOptions Options { get; public set; }
    public PostRequest`1(ConsulClient client, string url, TIn body, WriteOptions options);
    [CompilerGeneratedAttribute]
public WriteOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(WriteOptions value);
    [AsyncStateMachineAttribute("Consul.PostRequest`1/<Execute>d__6")]
public Task`1<WriteResult> Execute(CancellationToken ct);
    protected virtual void ApplyOptions(ConsulClientConfiguration clientConfig);
    protected virtual void ApplyHeaders(HttpRequestMessage message, ConsulClientConfiguration clientConfig);
}
public class Consul.PostRequest`2 : ConsulRequest {
    [CompilerGeneratedAttribute]
private WriteOptions <Options>k__BackingField;
    private TIn _body;
    public WriteOptions Options { get; public set; }
    public PostRequest`2(ConsulClient client, string url, TIn body, WriteOptions options);
    [CompilerGeneratedAttribute]
public WriteOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(WriteOptions value);
    [AsyncStateMachineAttribute("Consul.PostRequest`2/<Execute>d__6")]
public Task`1<WriteResult`1<TOut>> Execute(CancellationToken ct);
    protected virtual void ApplyOptions(ConsulClientConfiguration clientConfig);
    protected virtual void ApplyHeaders(HttpRequestMessage message, ConsulClientConfiguration clientConfig);
}
public class Consul.PostReturningRequest`1 : ConsulRequest {
    [CompilerGeneratedAttribute]
private WriteOptions <Options>k__BackingField;
    public WriteOptions Options { get; public set; }
    public PostReturningRequest`1(ConsulClient client, string url, WriteOptions options);
    [CompilerGeneratedAttribute]
public WriteOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(WriteOptions value);
    [AsyncStateMachineAttribute("Consul.PostReturningRequest`1/<Execute>d__5")]
public Task`1<WriteResult`1<TOut>> Execute(CancellationToken ct);
    protected virtual void ApplyOptions(ConsulClientConfiguration clientConfig);
    protected virtual void ApplyHeaders(HttpRequestMessage message, ConsulClientConfiguration clientConfig);
}
public class Consul.PreparedQuery : object {
    private ConsulClient _client;
    internal PreparedQuery(ConsulClient c);
    public sealed virtual Task`1<WriteResult`1<string>> Create(PreparedQueryDefinition query, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.PreparedQuery/<Create>d__4")]
public sealed virtual Task`1<WriteResult`1<string>> Create(PreparedQueryDefinition query, WriteOptions q, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> Delete(string queryID, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.PreparedQuery/<Delete>d__6")]
public sealed virtual Task`1<WriteResult> Delete(string queryID, WriteOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<PreparedQueryExecuteResponse>> Execute(string queryIDOrName, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<PreparedQueryExecuteResponse>> Execute(string queryIDOrName, QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<PreparedQueryDefinition[]>> Get(string queryID, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<PreparedQueryDefinition[]>> Get(string queryID, QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<PreparedQueryDefinition[]>> List(CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<PreparedQueryDefinition[]>> List(QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> Update(PreparedQueryDefinition query, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> Update(PreparedQueryDefinition query, WriteOptions q, CancellationToken ct);
}
public class Consul.PreparedQueryDefinition : object {
    [CompilerGeneratedAttribute]
private string <ID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Session>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private ServiceQuery <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryDNSOptions <DNS>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryTemplate <Template>k__BackingField;
    public string ID { get; public set; }
    public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Session { get; public set; }
    [JsonPropertyAttribute]
public string Token { get; public set; }
    [JsonPropertyAttribute]
public ServiceQuery Service { get; public set; }
    [JsonPropertyAttribute]
public QueryDNSOptions DNS { get; public set; }
    [JsonPropertyAttribute]
public QueryTemplate Template { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ID();
    [CompilerGeneratedAttribute]
public void set_ID(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Session();
    [CompilerGeneratedAttribute]
public void set_Session(string value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
    [CompilerGeneratedAttribute]
public ServiceQuery get_Service();
    [CompilerGeneratedAttribute]
public void set_Service(ServiceQuery value);
    [CompilerGeneratedAttribute]
public QueryDNSOptions get_DNS();
    [CompilerGeneratedAttribute]
public void set_DNS(QueryDNSOptions value);
    [CompilerGeneratedAttribute]
public QueryTemplate get_Template();
    [CompilerGeneratedAttribute]
public void set_Template(QueryTemplate value);
}
public class Consul.PreparedQueryExecuteResponse : object {
    [CompilerGeneratedAttribute]
private string <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private ServiceEntry[] <Nodes>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryDNSOptions <DNS>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Datacenter>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Failovers>k__BackingField;
    public string Service { get; public set; }
    public ServiceEntry[] Nodes { get; public set; }
    public QueryDNSOptions DNS { get; public set; }
    public string Datacenter { get; public set; }
    public int Failovers { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Service();
    [CompilerGeneratedAttribute]
public void set_Service(string value);
    [CompilerGeneratedAttribute]
public ServiceEntry[] get_Nodes();
    [CompilerGeneratedAttribute]
public void set_Nodes(ServiceEntry[] value);
    [CompilerGeneratedAttribute]
public QueryDNSOptions get_DNS();
    [CompilerGeneratedAttribute]
public void set_DNS(QueryDNSOptions value);
    [CompilerGeneratedAttribute]
public string get_Datacenter();
    [CompilerGeneratedAttribute]
public void set_Datacenter(string value);
    [CompilerGeneratedAttribute]
public int get_Failovers();
    [CompilerGeneratedAttribute]
public void set_Failovers(int value);
}
public class Consul.Provider : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<VerifyClaim> <VerifyClaims>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Sources>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Peer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SamenessGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Permissions>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <HTTP>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public List`1<VerifyClaim> VerifyClaims { get; public set; }
    [JsonPropertyAttribute]
public List`1<string> Sources { get; public set; }
    [JsonPropertyAttribute]
public string Peer { get; public set; }
    [JsonPropertyAttribute]
public string Namespace { get; public set; }
    [JsonPropertyAttribute]
public string Partition { get; public set; }
    [JsonPropertyAttribute]
public string SamenessGroup { get; public set; }
    [JsonPropertyAttribute]
public string Action { get; public set; }
    [JsonPropertyAttribute]
public List`1<string> Permissions { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, object> HTTP { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public List`1<VerifyClaim> get_VerifyClaims();
    [CompilerGeneratedAttribute]
public void set_VerifyClaims(List`1<VerifyClaim> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Sources();
    [CompilerGeneratedAttribute]
public void set_Sources(List`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Peer();
    [CompilerGeneratedAttribute]
public void set_Peer(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(string value);
    [CompilerGeneratedAttribute]
public string get_SamenessGroup();
    [CompilerGeneratedAttribute]
public void set_SamenessGroup(string value);
    [CompilerGeneratedAttribute]
public string get_Action();
    [CompilerGeneratedAttribute]
public void set_Action(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Permissions();
    [CompilerGeneratedAttribute]
public void set_Permissions(List`1<string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_HTTP();
    [CompilerGeneratedAttribute]
public void set_HTTP(Dictionary`2<string, object> value);
}
public class Consul.ProviderLocation : object {
    [CompilerGeneratedAttribute]
private HeaderLocation <Header>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryParamLocation <QueryParam>k__BackingField;
    [CompilerGeneratedAttribute]
private CookieLocation <Cookie>k__BackingField;
    [JsonPropertyAttribute]
public HeaderLocation Header { get; public set; }
    [JsonPropertyAttribute]
public QueryParamLocation QueryParam { get; public set; }
    [JsonPropertyAttribute]
public CookieLocation Cookie { get; public set; }
    [CompilerGeneratedAttribute]
public HeaderLocation get_Header();
    [CompilerGeneratedAttribute]
public void set_Header(HeaderLocation value);
    [CompilerGeneratedAttribute]
public QueryParamLocation get_QueryParam();
    [CompilerGeneratedAttribute]
public void set_QueryParam(QueryParamLocation value);
    [CompilerGeneratedAttribute]
public CookieLocation get_Cookie();
    [CompilerGeneratedAttribute]
public void set_Cookie(CookieLocation value);
}
public class Consul.Proxy : object {
    [CompilerGeneratedAttribute]
private string <DestinationServiceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DestinationServiceID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LocalServiceAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LocalServicePort>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private TransparentProxy <TransparentProxy>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Config>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Upstream> <Upstreams>k__BackingField;
    public string DestinationServiceName { get; public set; }
    public string DestinationServiceID { get; public set; }
    public string LocalServiceAddress { get; public set; }
    public int LocalServicePort { get; public set; }
    public string Mode { get; public set; }
    public TransparentProxy TransparentProxy { get; public set; }
    public Dictionary`2<string, string> Config { get; public set; }
    public List`1<Upstream> Upstreams { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DestinationServiceName();
    [CompilerGeneratedAttribute]
public void set_DestinationServiceName(string value);
    [CompilerGeneratedAttribute]
public string get_DestinationServiceID();
    [CompilerGeneratedAttribute]
public void set_DestinationServiceID(string value);
    [CompilerGeneratedAttribute]
public string get_LocalServiceAddress();
    [CompilerGeneratedAttribute]
public void set_LocalServiceAddress(string value);
    [CompilerGeneratedAttribute]
public int get_LocalServicePort();
    [CompilerGeneratedAttribute]
public void set_LocalServicePort(int value);
    [CompilerGeneratedAttribute]
public string get_Mode();
    [CompilerGeneratedAttribute]
public void set_Mode(string value);
    [CompilerGeneratedAttribute]
public TransparentProxy get_TransparentProxy();
    [CompilerGeneratedAttribute]
public void set_TransparentProxy(TransparentProxy value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Config();
    [CompilerGeneratedAttribute]
public void set_Config(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public List`1<Upstream> get_Upstreams();
    [CompilerGeneratedAttribute]
public void set_Upstreams(List`1<Upstream> value);
}
public class Consul.ProxyDefaultEntry : object {
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Config>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<EnvoyExtension> <EnvoyExtensions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private TransparentProxyConfig <TransparentProxy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MutualTLSMode>k__BackingField;
    [CompilerGeneratedAttribute]
private MeshGatewayConfig <MeshGateway>k__BackingField;
    [CompilerGeneratedAttribute]
private ExposeConfig <Expose>k__BackingField;
    [CompilerGeneratedAttribute]
private AccessLogsConfig <AccessLogs>k__BackingField;
    [JsonPropertyAttribute]
public string Kind { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Namespace { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Meta { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, object> Config { get; public set; }
    [JsonPropertyAttribute]
public List`1<EnvoyExtension> EnvoyExtensions { get; public set; }
    [JsonPropertyAttribute]
public string Mode { get; public set; }
    [JsonPropertyAttribute]
public TransparentProxyConfig TransparentProxy { get; public set; }
    [JsonPropertyAttribute]
public string MutualTLSMode { get; public set; }
    [JsonPropertyAttribute]
public MeshGatewayConfig MeshGateway { get; public set; }
    [JsonPropertyAttribute]
public ExposeConfig Expose { get; public set; }
    [JsonPropertyAttribute]
public AccessLogsConfig AccessLogs { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Config();
    [CompilerGeneratedAttribute]
public void set_Config(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public List`1<EnvoyExtension> get_EnvoyExtensions();
    [CompilerGeneratedAttribute]
public void set_EnvoyExtensions(List`1<EnvoyExtension> value);
    [CompilerGeneratedAttribute]
public string get_Mode();
    [CompilerGeneratedAttribute]
public void set_Mode(string value);
    [CompilerGeneratedAttribute]
public TransparentProxyConfig get_TransparentProxy();
    [CompilerGeneratedAttribute]
public void set_TransparentProxy(TransparentProxyConfig value);
    [CompilerGeneratedAttribute]
public string get_MutualTLSMode();
    [CompilerGeneratedAttribute]
public void set_MutualTLSMode(string value);
    [CompilerGeneratedAttribute]
public MeshGatewayConfig get_MeshGateway();
    [CompilerGeneratedAttribute]
public void set_MeshGateway(MeshGatewayConfig value);
    [CompilerGeneratedAttribute]
public ExposeConfig get_Expose();
    [CompilerGeneratedAttribute]
public void set_Expose(ExposeConfig value);
    [CompilerGeneratedAttribute]
public AccessLogsConfig get_AccessLogs();
    [CompilerGeneratedAttribute]
public void set_AccessLogs(AccessLogsConfig value);
}
public class Consul.PutNothingRequest : ConsulRequest {
    [CompilerGeneratedAttribute]
private WriteOptions <Options>k__BackingField;
    public WriteOptions Options { get; public set; }
    public PutNothingRequest(ConsulClient client, string url, WriteOptions options);
    [CompilerGeneratedAttribute]
public WriteOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(WriteOptions value);
    [AsyncStateMachineAttribute("Consul.PutNothingRequest/<Execute>d__5")]
public Task`1<WriteResult> Execute(CancellationToken ct);
    protected virtual void ApplyOptions(ConsulClientConfiguration clientConfig);
    protected virtual void ApplyHeaders(HttpRequestMessage message, ConsulClientConfiguration clientConfig);
}
public class Consul.PutRequest`1 : ConsulRequest {
    [CompilerGeneratedAttribute]
private WriteOptions <Options>k__BackingField;
    private TIn _body;
    public WriteOptions Options { get; public set; }
    public PutRequest`1(ConsulClient client, string url, TIn body, WriteOptions options);
    [CompilerGeneratedAttribute]
public WriteOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(WriteOptions value);
    [AsyncStateMachineAttribute("Consul.PutRequest`1/<Execute>d__6")]
public Task`1<WriteResult> Execute(CancellationToken ct);
    protected virtual void ApplyOptions(ConsulClientConfiguration clientConfig);
    protected virtual void ApplyHeaders(HttpRequestMessage message, ConsulClientConfiguration clientConfig);
}
public class Consul.PutRequest`2 : ConsulRequest {
    [CompilerGeneratedAttribute]
private WriteOptions <Options>k__BackingField;
    private TIn _body;
    public WriteOptions Options { get; public set; }
    public PutRequest`2(ConsulClient client, string url, TIn body, WriteOptions options);
    [CompilerGeneratedAttribute]
public WriteOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(WriteOptions value);
    [AsyncStateMachineAttribute("Consul.PutRequest`2/<Execute>d__6")]
public Task`1<WriteResult`1<TOut>> Execute(CancellationToken ct);
    protected virtual void ApplyOptions(ConsulClientConfiguration clientConfig);
    protected virtual void ApplyHeaders(HttpRequestMessage message, ConsulClientConfiguration clientConfig);
}
public class Consul.PutReturningRequest`1 : ConsulRequest {
    [CompilerGeneratedAttribute]
private WriteOptions <Options>k__BackingField;
    public WriteOptions Options { get; public set; }
    public PutReturningRequest`1(ConsulClient client, string url, WriteOptions options);
    [CompilerGeneratedAttribute]
public WriteOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(WriteOptions value);
    [AsyncStateMachineAttribute("Consul.PutReturningRequest`1/<Execute>d__5")]
public Task`1<WriteResult`1<TOut>> Execute(CancellationToken ct);
    protected virtual void ApplyOptions(ConsulClientConfiguration clientConfig);
    protected virtual void ApplyHeaders(HttpRequestMessage message, ConsulClientConfiguration clientConfig);
}
public class Consul.QueryDatacenterOptions : object {
    [CompilerGeneratedAttribute]
private int <NearestN>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Datacenters>k__BackingField;
    public int NearestN { get; public set; }
    [JsonPropertyAttribute]
public List`1<string> Datacenters { get; public set; }
    [CompilerGeneratedAttribute]
public int get_NearestN();
    [CompilerGeneratedAttribute]
public void set_NearestN(int value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Datacenters();
    [CompilerGeneratedAttribute]
public void set_Datacenters(List`1<string> value);
}
public class Consul.QueryDNSOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TTL>k__BackingField;
    [JsonConverterAttribute("Consul.DurationTimespanConverter")]
[JsonPropertyAttribute]
public Nullable`1<TimeSpan> TTL { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_TTL();
    [CompilerGeneratedAttribute]
public void set_TTL(Nullable`1<TimeSpan> value);
}
public class Consul.QueryOptions : object {
    public static QueryOptions Default;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Datacenter>k__BackingField;
    [CompilerGeneratedAttribute]
private ConsistencyMode <Consistency>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseCache>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <MaxAge>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <StaleIfError>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <WaitIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <WaitTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Near>k__BackingField;
    public string Namespace { get; public set; }
    public string Datacenter { get; public set; }
    public ConsistencyMode Consistency { get; public set; }
    public bool UseCache { get; public set; }
    public Nullable`1<TimeSpan> MaxAge { get; public set; }
    public Nullable`1<TimeSpan> StaleIfError { get; public set; }
    public ulong WaitIndex { get; public set; }
    public Nullable`1<TimeSpan> WaitTime { get; public set; }
    public string Token { get; public set; }
    public string Near { get; public set; }
    private static QueryOptions();
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Datacenter();
    [CompilerGeneratedAttribute]
public void set_Datacenter(string value);
    [CompilerGeneratedAttribute]
public ConsistencyMode get_Consistency();
    [CompilerGeneratedAttribute]
public void set_Consistency(ConsistencyMode value);
    [CompilerGeneratedAttribute]
public bool get_UseCache();
    [CompilerGeneratedAttribute]
public void set_UseCache(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_MaxAge();
    [CompilerGeneratedAttribute]
public void set_MaxAge(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_StaleIfError();
    [CompilerGeneratedAttribute]
public void set_StaleIfError(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public ulong get_WaitIndex();
    [CompilerGeneratedAttribute]
public void set_WaitIndex(ulong value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_WaitTime();
    [CompilerGeneratedAttribute]
public void set_WaitTime(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
    [CompilerGeneratedAttribute]
public string get_Near();
    [CompilerGeneratedAttribute]
public void set_Near(string value);
}
public class Consul.QueryParamConfig : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Present>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Exact>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Regex>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public bool Present { get; public set; }
    [JsonPropertyAttribute]
public string Exact { get; public set; }
    [JsonPropertyAttribute]
public string Regex { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_Present();
    [CompilerGeneratedAttribute]
public void set_Present(bool value);
    [CompilerGeneratedAttribute]
public string get_Exact();
    [CompilerGeneratedAttribute]
public void set_Exact(string value);
    [CompilerGeneratedAttribute]
public string get_Regex();
    [CompilerGeneratedAttribute]
public void set_Regex(string value);
}
public class Consul.QueryParamLocation : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Consul.QueryResult : ConsulResult {
    [CompilerGeneratedAttribute]
private Nullable`1<CacheResult> <XCache>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Age>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <LastIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <LastContact>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <KnownLeader>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AddressTranslationEnabled>k__BackingField;
    public Nullable`1<CacheResult> XCache { get; public set; }
    public TimeSpan Age { get; public set; }
    public ulong LastIndex { get; public set; }
    public TimeSpan LastContact { get; public set; }
    public bool KnownLeader { get; public set; }
    public bool AddressTranslationEnabled { get; public set; }
    public QueryResult(QueryResult other);
    [CompilerGeneratedAttribute]
public Nullable`1<CacheResult> get_XCache();
    [CompilerGeneratedAttribute]
public void set_XCache(Nullable`1<CacheResult> value);
    [CompilerGeneratedAttribute]
public TimeSpan get_Age();
    [CompilerGeneratedAttribute]
public void set_Age(TimeSpan value);
    [CompilerGeneratedAttribute]
public ulong get_LastIndex();
    [CompilerGeneratedAttribute]
public void set_LastIndex(ulong value);
    [CompilerGeneratedAttribute]
public TimeSpan get_LastContact();
    [CompilerGeneratedAttribute]
public void set_LastContact(TimeSpan value);
    [CompilerGeneratedAttribute]
public bool get_KnownLeader();
    [CompilerGeneratedAttribute]
public void set_KnownLeader(bool value);
    [CompilerGeneratedAttribute]
public bool get_AddressTranslationEnabled();
    [CompilerGeneratedAttribute]
public void set_AddressTranslationEnabled(bool value);
}
public class Consul.QueryResult`1 : QueryResult {
    [CompilerGeneratedAttribute]
private T <Response>k__BackingField;
    public T Response { get; public set; }
    public QueryResult`1(QueryResult other);
    public QueryResult`1(QueryResult other, T value);
    [CompilerGeneratedAttribute]
public T get_Response();
    [CompilerGeneratedAttribute]
public void set_Response(T value);
}
public class Consul.QueryTemplate : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Regexp>k__BackingField;
    [JsonPropertyAttribute]
public string Type { get; public set; }
    [JsonPropertyAttribute]
public string Regexp { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Regexp();
    [CompilerGeneratedAttribute]
public void set_Regexp(string value);
}
public class Consul.RaftConfiguration : object {
    [CompilerGeneratedAttribute]
private List`1<RaftServer> <Servers>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Index>k__BackingField;
    public List`1<RaftServer> Servers { get; public set; }
    public ulong Index { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<RaftServer> get_Servers();
    [CompilerGeneratedAttribute]
public void set_Servers(List`1<RaftServer> value);
    [CompilerGeneratedAttribute]
public ulong get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(ulong value);
}
public class Consul.RaftServer : object {
    [CompilerGeneratedAttribute]
private string <ID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Leader>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Voter>k__BackingField;
    public string ID { get; public set; }
    public string Node { get; public set; }
    public string Address { get; public set; }
    public bool Leader { get; public set; }
    public bool Voter { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ID();
    [CompilerGeneratedAttribute]
public void set_ID(string value);
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
public void set_Node(string value);
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(string value);
    [CompilerGeneratedAttribute]
public bool get_Leader();
    [CompilerGeneratedAttribute]
public void set_Leader(bool value);
    [CompilerGeneratedAttribute]
public bool get_Voter();
    [CompilerGeneratedAttribute]
public void set_Voter(bool value);
}
public class Consul.RateLimitsConfig : object {
    [CompilerGeneratedAttribute]
private InstanceLevelConfig <InstanceLevel>k__BackingField;
    [JsonPropertyAttribute]
public InstanceLevelConfig InstanceLevel { get; public set; }
    [CompilerGeneratedAttribute]
public InstanceLevelConfig get_InstanceLevel();
    [CompilerGeneratedAttribute]
public void set_InstanceLevel(InstanceLevelConfig value);
}
public class Consul.Raw : object {
    private ConsulClient _client;
    internal Raw(ConsulClient c);
    public sealed virtual Task`1<QueryResult`1<object>> Query(string endpoint, QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<object>> Write(string endpoint, object obj, WriteOptions q, CancellationToken ct);
}
public class Consul.RemoteJSONWebKeySet : object {
    [CompilerGeneratedAttribute]
private string <URI>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestTimeoutMs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CacheDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FetchAsynchronously>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryPolicyConfig <RetryPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private JWKSClusterConfig <JWKSCluster>k__BackingField;
    [JsonPropertyAttribute]
public string URI { get; public set; }
    [JsonPropertyAttribute]
public string RequestTimeoutMs { get; public set; }
    [JsonPropertyAttribute]
public string CacheDuration { get; public set; }
    [JsonPropertyAttribute]
public bool FetchAsynchronously { get; public set; }
    [JsonPropertyAttribute]
public RetryPolicyConfig RetryPolicy { get; public set; }
    [JsonPropertyAttribute]
public JWKSClusterConfig JWKSCluster { get; public set; }
    [CompilerGeneratedAttribute]
public string get_URI();
    [CompilerGeneratedAttribute]
public void set_URI(string value);
    [CompilerGeneratedAttribute]
public string get_RequestTimeoutMs();
    [CompilerGeneratedAttribute]
public void set_RequestTimeoutMs(string value);
    [CompilerGeneratedAttribute]
public string get_CacheDuration();
    [CompilerGeneratedAttribute]
public void set_CacheDuration(string value);
    [CompilerGeneratedAttribute]
public bool get_FetchAsynchronously();
    [CompilerGeneratedAttribute]
public void set_FetchAsynchronously(bool value);
    [CompilerGeneratedAttribute]
public RetryPolicyConfig get_RetryPolicy();
    [CompilerGeneratedAttribute]
public void set_RetryPolicy(RetryPolicyConfig value);
    [CompilerGeneratedAttribute]
public JWKSClusterConfig get_JWKSCluster();
    [CompilerGeneratedAttribute]
public void set_JWKSCluster(JWKSClusterConfig value);
}
public class Consul.RetryPolicyBackOffConfig : object {
    [CompilerGeneratedAttribute]
private string <BaseInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MaxInterval>k__BackingField;
    [JsonPropertyAttribute]
public string BaseInterval { get; public set; }
    [JsonPropertyAttribute]
public string MaxInterval { get; public set; }
    [CompilerGeneratedAttribute]
public string get_BaseInterval();
    [CompilerGeneratedAttribute]
public void set_BaseInterval(string value);
    [CompilerGeneratedAttribute]
public string get_MaxInterval();
    [CompilerGeneratedAttribute]
public void set_MaxInterval(string value);
}
public class Consul.RetryPolicyConfig : object {
    [CompilerGeneratedAttribute]
private string <NumRetries>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryPolicyBackOffConfig <RetryPolicyBackOff>k__BackingField;
    [JsonPropertyAttribute]
public string NumRetries { get; public set; }
    [JsonPropertyAttribute]
public RetryPolicyBackOffConfig RetryPolicyBackOff { get; public set; }
    [CompilerGeneratedAttribute]
public string get_NumRetries();
    [CompilerGeneratedAttribute]
public void set_NumRetries(string value);
    [CompilerGeneratedAttribute]
public RetryPolicyBackOffConfig get_RetryPolicyBackOff();
    [CompilerGeneratedAttribute]
public void set_RetryPolicyBackOff(RetryPolicyBackOffConfig value);
}
public class Consul.RingHashConfig : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinimumRingSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaximumRingSize>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<int> MinimumRingSize { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> MaximumRingSize { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MinimumRingSize();
    [CompilerGeneratedAttribute]
public void set_MinimumRingSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaximumRingSize();
    [CompilerGeneratedAttribute]
public void set_MaximumRingSize(Nullable`1<int> value);
}
public class Consul.Role : object {
    private ConsulClient _client;
    internal Role(ConsulClient c);
    public sealed virtual Task`1<WriteResult`1<RoleEntry>> Create(RoleEntry policy, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Role/<Create>d__4")]
public sealed virtual Task`1<WriteResult`1<RoleEntry>> Create(RoleEntry policy, WriteOptions writeOptions, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<bool>> Delete(string id, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Role/<Delete>d__6")]
public sealed virtual Task`1<WriteResult`1<bool>> Delete(string id, WriteOptions writeOptions, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<RoleEntry[]>> List(CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Role/<List>d__8")]
public sealed virtual Task`1<QueryResult`1<RoleEntry[]>> List(QueryOptions queryOptions, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<RoleEntry>> Read(string id, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Role/<Read>d__10")]
public sealed virtual Task`1<QueryResult`1<RoleEntry>> Read(string id, QueryOptions queryOptions, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<RoleEntry>> ReadByName(string name, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Role/<ReadByName>d__12")]
public sealed virtual Task`1<QueryResult`1<RoleEntry>> ReadByName(string name, QueryOptions queryOptions, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<RoleEntry>> Update(RoleEntry role, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Role/<Update>d__14")]
public sealed virtual Task`1<WriteResult`1<RoleEntry>> Update(RoleEntry role, WriteOptions writeOptions, CancellationToken ct);
}
public class Consul.RoleEntry : object {
    [CompilerGeneratedAttribute]
private string <ID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private PolicyLink[] <Policies>k__BackingField;
    [CompilerGeneratedAttribute]
private ServiceIdentity[] <ServiceIdentities>k__BackingField;
    public string ID { get; public set; }
    public string Name { get; public set; }
    public string Description { get; public set; }
    [JsonPropertyAttribute]
public PolicyLink[] Policies { get; public set; }
    [JsonPropertyAttribute]
public ServiceIdentity[] ServiceIdentities { get; public set; }
    public RoleEntry(string name);
    public RoleEntry(string name, string description);
    public RoleEntry(string id, string name, string description);
    public RoleEntry(string id, string name, string description, PolicyLink[] policies);
    public RoleEntry(string id, string name, string description, ServiceIdentity[] serviceIdentities);
    public RoleEntry(string id, string name, string description, PolicyLink[] policies, ServiceIdentity[] serviceIdentities);
    [CompilerGeneratedAttribute]
public string get_ID();
    [CompilerGeneratedAttribute]
public void set_ID(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public PolicyLink[] get_Policies();
    [CompilerGeneratedAttribute]
public void set_Policies(PolicyLink[] value);
    [CompilerGeneratedAttribute]
public ServiceIdentity[] get_ServiceIdentities();
    [CompilerGeneratedAttribute]
public void set_ServiceIdentities(ServiceIdentity[] value);
    public static bool ShouldSerializeCreateIndex();
    public static bool ShouldSerializeModifyIndex();
    public static RoleLink op_Implicit(RoleEntry r);
}
public class Consul.RoleLink : object {
    [CompilerGeneratedAttribute]
private string <ID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string ID { get; public set; }
    public string Name { get; public set; }
    public RoleLink(string id);
    public RoleLink(string id, string name);
    [CompilerGeneratedAttribute]
public string get_ID();
    [CompilerGeneratedAttribute]
public void set_ID(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Consul.Root : object {
    [CompilerGeneratedAttribute]
private string <ID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private long <SerialNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SigningKeyID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExternalTrustDomain>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NotBefore>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NotAfter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RootCert>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <IntermediateCerts>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Active>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PrivateKeyType>k__BackingField;
    [CompilerGeneratedAttribute]
private long <PrivateKeyBits>k__BackingField;
    [CompilerGeneratedAttribute]
private long <CreateIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ModifyIndex>k__BackingField;
    public string ID { get; public set; }
    public string Name { get; public set; }
    public long SerialNumber { get; public set; }
    public string SigningKeyID { get; public set; }
    public string ExternalTrustDomain { get; public set; }
    public string NotBefore { get; public set; }
    public string NotAfter { get; public set; }
    public string RootCert { get; public set; }
    public List`1<string> IntermediateCerts { get; public set; }
    public bool Active { get; public set; }
    public string PrivateKeyType { get; public set; }
    public long PrivateKeyBits { get; public set; }
    public long CreateIndex { get; public set; }
    public long ModifyIndex { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ID();
    [CompilerGeneratedAttribute]
public void set_ID(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public long get_SerialNumber();
    [CompilerGeneratedAttribute]
public void set_SerialNumber(long value);
    [CompilerGeneratedAttribute]
public string get_SigningKeyID();
    [CompilerGeneratedAttribute]
public void set_SigningKeyID(string value);
    [CompilerGeneratedAttribute]
public string get_ExternalTrustDomain();
    [CompilerGeneratedAttribute]
public void set_ExternalTrustDomain(string value);
    [CompilerGeneratedAttribute]
public string get_NotBefore();
    [CompilerGeneratedAttribute]
public void set_NotBefore(string value);
    [CompilerGeneratedAttribute]
public string get_NotAfter();
    [CompilerGeneratedAttribute]
public void set_NotAfter(string value);
    [CompilerGeneratedAttribute]
public string get_RootCert();
    [CompilerGeneratedAttribute]
public void set_RootCert(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_IntermediateCerts();
    [CompilerGeneratedAttribute]
public void set_IntermediateCerts(List`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_Active();
    [CompilerGeneratedAttribute]
public void set_Active(bool value);
    [CompilerGeneratedAttribute]
public string get_PrivateKeyType();
    [CompilerGeneratedAttribute]
public void set_PrivateKeyType(string value);
    [CompilerGeneratedAttribute]
public long get_PrivateKeyBits();
    [CompilerGeneratedAttribute]
public void set_PrivateKeyBits(long value);
    [CompilerGeneratedAttribute]
public long get_CreateIndex();
    [CompilerGeneratedAttribute]
public void set_CreateIndex(long value);
    [CompilerGeneratedAttribute]
public long get_ModifyIndex();
    [CompilerGeneratedAttribute]
public void set_ModifyIndex(long value);
}
public class Consul.RouteConfig : object {
    [CompilerGeneratedAttribute]
private string <PathExact>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PathPrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PathRegex>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <RequestsPerSecond>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <RequestMaxBurst>k__BackingField;
    [JsonPropertyAttribute]
public string PathExact { get; public set; }
    [JsonPropertyAttribute]
public string PathPrefix { get; public set; }
    [JsonPropertyAttribute]
public string PathRegex { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> RequestsPerSecond { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> RequestMaxBurst { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PathExact();
    [CompilerGeneratedAttribute]
public void set_PathExact(string value);
    [CompilerGeneratedAttribute]
public string get_PathPrefix();
    [CompilerGeneratedAttribute]
public void set_PathPrefix(string value);
    [CompilerGeneratedAttribute]
public string get_PathRegex();
    [CompilerGeneratedAttribute]
public void set_PathRegex(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_RequestsPerSecond();
    [CompilerGeneratedAttribute]
public void set_RequestsPerSecond(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_RequestMaxBurst();
    [CompilerGeneratedAttribute]
public void set_RequestMaxBurst(Nullable`1<int> value);
}
public class Consul.Routes : object {
    [CompilerGeneratedAttribute]
private MapConfig <Match>k__BackingField;
    [CompilerGeneratedAttribute]
private HTTPConfig <HTTP>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Destination>k__BackingField;
    [JsonPropertyAttribute]
public MapConfig Match { get; public set; }
    [JsonPropertyAttribute]
public HTTPConfig HTTP { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Destination { get; public set; }
    [CompilerGeneratedAttribute]
public MapConfig get_Match();
    [CompilerGeneratedAttribute]
public void set_Match(MapConfig value);
    [CompilerGeneratedAttribute]
public HTTPConfig get_HTTP();
    [CompilerGeneratedAttribute]
public void set_HTTP(HTTPConfig value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Destination();
    [CompilerGeneratedAttribute]
public void set_Destination(Dictionary`2<string, string> value);
}
public class Consul.SamenessGroupEntry : object {
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DefaultForFailover>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeLocal>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<SamenessGroupMember> <Members>k__BackingField;
    [JsonPropertyAttribute]
public string Kind { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Partition { get; public set; }
    [JsonPropertyAttribute]
public bool DefaultForFailover { get; public set; }
    [JsonPropertyAttribute]
public bool IncludeLocal { get; public set; }
    [JsonPropertyAttribute]
public List`1<SamenessGroupMember> Members { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(string value);
    [CompilerGeneratedAttribute]
public bool get_DefaultForFailover();
    [CompilerGeneratedAttribute]
public void set_DefaultForFailover(bool value);
    [CompilerGeneratedAttribute]
public bool get_IncludeLocal();
    [CompilerGeneratedAttribute]
public void set_IncludeLocal(bool value);
    [CompilerGeneratedAttribute]
public List`1<SamenessGroupMember> get_Members();
    [CompilerGeneratedAttribute]
public void set_Members(List`1<SamenessGroupMember> value);
}
public class Consul.SamenessGroupMember : object {
    [CompilerGeneratedAttribute]
private string <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Peer>k__BackingField;
    [JsonPropertyAttribute]
public string Partition { get; public set; }
    [JsonPropertyAttribute]
public string Peer { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(string value);
    [CompilerGeneratedAttribute]
public string get_Peer();
    [CompilerGeneratedAttribute]
public void set_Peer(string value);
}
public class Consul.Sample : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Sum>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Min>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Max>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Mean>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Stddev>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Labels>k__BackingField;
    public string Name { get; public set; }
    public long Count { get; public set; }
    public double Sum { get; public set; }
    public double Min { get; public set; }
    public double Max { get; public set; }
    public double Mean { get; public set; }
    public double Stddev { get; public set; }
    public Dictionary`2<string, string> Labels { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public long get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(long value);
    [CompilerGeneratedAttribute]
public double get_Sum();
    [CompilerGeneratedAttribute]
public void set_Sum(double value);
    [CompilerGeneratedAttribute]
public double get_Min();
    [CompilerGeneratedAttribute]
public void set_Min(double value);
    [CompilerGeneratedAttribute]
public double get_Max();
    [CompilerGeneratedAttribute]
public void set_Max(double value);
    [CompilerGeneratedAttribute]
public double get_Mean();
    [CompilerGeneratedAttribute]
public void set_Mean(double value);
    [CompilerGeneratedAttribute]
public double get_Stddev();
    [CompilerGeneratedAttribute]
public void set_Stddev(double value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Labels();
    [CompilerGeneratedAttribute]
public void set_Labels(Dictionary`2<string, string> value);
}
public class Consul.SDSConfig : object {
    [CompilerGeneratedAttribute]
private string <ClusterName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CertResource>k__BackingField;
    [JsonPropertyAttribute]
public string ClusterName { get; public set; }
    [JsonPropertyAttribute]
public string CertResource { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ClusterName();
    [CompilerGeneratedAttribute]
public void set_ClusterName(string value);
    [CompilerGeneratedAttribute]
public string get_CertResource();
    [CompilerGeneratedAttribute]
public void set_CertResource(string value);
}
public class Consul.Semaphore : object {
    public static TimeSpan DefaultSemaphoreWaitTime;
    public static TimeSpan DefaultSemaphoreRetryTime;
    public static TimeSpan DefaultMonitorRetryTime;
    public static string DefaultSemaphoreKey;
    private static ulong SemaphoreFlagValue;
    private AsyncLock _mutex;
    private object _heldLock;
    private bool _isheld;
    private int _retries;
    private CancellationTokenSource _cts;
    private ConsulClient _client;
    private Task _sessionRenewTask;
    private Task _monitorTask;
    [CompilerGeneratedAttribute]
private SemaphoreOptions <Opts>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LockSession>k__BackingField;
    internal SemaphoreOptions Opts { get; internal set; }
    public bool IsHeld { get; private set; }
    internal string LockSession { get; internal set; }
    internal Semaphore(ConsulClient c);
    private static Semaphore();
    [CompilerGeneratedAttribute]
internal SemaphoreOptions get_Opts();
    [CompilerGeneratedAttribute]
internal void set_Opts(SemaphoreOptions value);
    public sealed virtual bool get_IsHeld();
    private void set_IsHeld(bool value);
    [CompilerGeneratedAttribute]
internal string get_LockSession();
    [CompilerGeneratedAttribute]
internal void set_LockSession(string value);
    public Task`1<CancellationToken> Acquire();
    [AsyncStateMachineAttribute("Consul.Semaphore/<Acquire>d__27")]
public sealed virtual Task`1<CancellationToken> Acquire(CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Semaphore/<Release>d__28")]
public sealed virtual Task Release(CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Semaphore/<Destroy>d__29")]
public sealed virtual Task Destroy(CancellationToken ct);
    private Task MonitorLock(string lockSession);
    [AsyncStateMachineAttribute("Consul.Semaphore/<CreateSession>d__31")]
private Task`1<string> CreateSession();
    private KVPair ContenderEntry(string session);
    private KVPair FindLock(KVPair[] pairs);
    private SemaphoreLock DecodeLock(KVPair pair);
    private KVPair EncodeLock(SemaphoreLock l, ulong oldIndex);
    private static void PruneDeadHolders(SemaphoreLock l, IEnumerable`1<KVPair> pairs);
    private void DisposeCancellationTokenSource();
}
public class Consul.SemaphoreConflictException : Exception {
    public SemaphoreConflictException(string message);
    public SemaphoreConflictException(string message, Exception inner);
}
public class Consul.SemaphoreHeldException : Exception {
    public SemaphoreHeldException(string message);
    public SemaphoreHeldException(string message, Exception inner);
}
public class Consul.SemaphoreInUseException : Exception {
    public SemaphoreInUseException(string message);
    public SemaphoreInUseException(string message, Exception inner);
}
public class Consul.SemaphoreLimitConflictException : Exception {
    [CompilerGeneratedAttribute]
private int <RemoteLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LocalLimit>k__BackingField;
    public int RemoteLimit { get; private set; }
    public int LocalLimit { get; private set; }
    public SemaphoreLimitConflictException(string message, int remoteLimit, int localLimit);
    public SemaphoreLimitConflictException(string message, int remoteLimit, int localLimit, Exception inner);
    [CompilerGeneratedAttribute]
public int get_RemoteLimit();
    [CompilerGeneratedAttribute]
private void set_RemoteLimit(int value);
    [CompilerGeneratedAttribute]
public int get_LocalLimit();
    [CompilerGeneratedAttribute]
private void set_LocalLimit(int value);
}
public class Consul.SemaphoreMaxAttemptsReachedException : Exception {
    public SemaphoreMaxAttemptsReachedException(string message);
    public SemaphoreMaxAttemptsReachedException(string message, Exception inner);
}
public class Consul.SemaphoreNotHeldException : Exception {
    public SemaphoreNotHeldException(string message);
    public SemaphoreNotHeldException(string message, Exception inner);
}
public class Consul.SemaphoreOptions : object {
    private static string DefaultLockSessionName;
    private TimeSpan _defaultLockSessionTTL;
    private string _prefix;
    private int _limit;
    [CompilerGeneratedAttribute]
private Byte[] <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Session>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionName>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <SessionTTL>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MonitorRetries>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <MonitorRetryTime>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <SemaphoreWaitTime>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SemaphoreTryOnce>k__BackingField;
    public string Prefix { get; public set; }
    public int Limit { get; public set; }
    public Byte[] Value { get; public set; }
    public string Session { get; public set; }
    public string SessionName { get; public set; }
    public TimeSpan SessionTTL { get; public set; }
    public int MonitorRetries { get; public set; }
    public TimeSpan MonitorRetryTime { get; public set; }
    public TimeSpan SemaphoreWaitTime { get; public set; }
    public bool SemaphoreTryOnce { get; public set; }
    public SemaphoreOptions(string prefix, int limit);
    public string get_Prefix();
    public void set_Prefix(string value);
    public int get_Limit();
    public void set_Limit(int value);
    [CompilerGeneratedAttribute]
public Byte[] get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(Byte[] value);
    [CompilerGeneratedAttribute]
public string get_Session();
    [CompilerGeneratedAttribute]
public void set_Session(string value);
    [CompilerGeneratedAttribute]
public string get_SessionName();
    [CompilerGeneratedAttribute]
public void set_SessionName(string value);
    [CompilerGeneratedAttribute]
public TimeSpan get_SessionTTL();
    [CompilerGeneratedAttribute]
public void set_SessionTTL(TimeSpan value);
    [CompilerGeneratedAttribute]
public int get_MonitorRetries();
    [CompilerGeneratedAttribute]
public void set_MonitorRetries(int value);
    [CompilerGeneratedAttribute]
public TimeSpan get_MonitorRetryTime();
    [CompilerGeneratedAttribute]
public void set_MonitorRetryTime(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_SemaphoreWaitTime();
    [CompilerGeneratedAttribute]
public void set_SemaphoreWaitTime(TimeSpan value);
    [CompilerGeneratedAttribute]
public bool get_SemaphoreTryOnce();
    [CompilerGeneratedAttribute]
public void set_SemaphoreTryOnce(bool value);
}
public class Consul.SerfCoordinate : object {
    [CompilerGeneratedAttribute]
private List`1<double> <Vec>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Adjustment>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Height>k__BackingField;
    public List`1<double> Vec { get; public set; }
    public double Error { get; public set; }
    public double Adjustment { get; public set; }
    public double Height { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<double> get_Vec();
    [CompilerGeneratedAttribute]
public void set_Vec(List`1<double> value);
    [CompilerGeneratedAttribute]
public double get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(double value);
    [CompilerGeneratedAttribute]
public double get_Adjustment();
    [CompilerGeneratedAttribute]
public void set_Adjustment(double value);
    [CompilerGeneratedAttribute]
public double get_Height();
    [CompilerGeneratedAttribute]
public void set_Height(double value);
}
public class Consul.ServiceAddress : object {
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    public string Address { get; public set; }
    public int Port { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(string value);
    [CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(int value);
}
public class Consul.ServiceConfiguration : object {
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private TaggedAddresses <TaggedAddresses>k__BackingField;
    [CompilerGeneratedAttribute]
private Weights <Weights>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableTagOverride>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Datacenter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentHash>k__BackingField;
    [CompilerGeneratedAttribute]
private Proxy <Proxy>k__BackingField;
    public string Kind { get; public set; }
    public string ID { get; public set; }
    public string Service { get; public set; }
    public object Tags { get; public set; }
    public object Meta { get; public set; }
    public string Namespace { get; public set; }
    public int Port { get; public set; }
    public string Address { get; public set; }
    public TaggedAddresses TaggedAddresses { get; public set; }
    public Weights Weights { get; public set; }
    public bool EnableTagOverride { get; public set; }
    public string Datacenter { get; public set; }
    public string ContentHash { get; public set; }
    public Proxy Proxy { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_ID();
    [CompilerGeneratedAttribute]
public void set_ID(string value);
    [CompilerGeneratedAttribute]
public string get_Service();
    [CompilerGeneratedAttribute]
public void set_Service(string value);
    [CompilerGeneratedAttribute]
public object get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(object value);
    [CompilerGeneratedAttribute]
public object get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(object value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(int value);
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(string value);
    [CompilerGeneratedAttribute]
public TaggedAddresses get_TaggedAddresses();
    [CompilerGeneratedAttribute]
public void set_TaggedAddresses(TaggedAddresses value);
    [CompilerGeneratedAttribute]
public Weights get_Weights();
    [CompilerGeneratedAttribute]
public void set_Weights(Weights value);
    [CompilerGeneratedAttribute]
public bool get_EnableTagOverride();
    [CompilerGeneratedAttribute]
public void set_EnableTagOverride(bool value);
    [CompilerGeneratedAttribute]
public string get_Datacenter();
    [CompilerGeneratedAttribute]
public void set_Datacenter(string value);
    [CompilerGeneratedAttribute]
public string get_ContentHash();
    [CompilerGeneratedAttribute]
public void set_ContentHash(string value);
    [CompilerGeneratedAttribute]
public Proxy get_Proxy();
    [CompilerGeneratedAttribute]
public void set_Proxy(Proxy value);
}
public class Consul.ServiceDefaultsEntry : object {
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Protocol>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BalanceInboundConnections>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private RateLimitsConfig <RateLimits>k__BackingField;
    [CompilerGeneratedAttribute]
private UpstreamConfig <UpstreamConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private DefaultsConfig <Defaults>k__BackingField;
    [CompilerGeneratedAttribute]
private TransparentProxyConfig <TransparentProxy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MutualTLSMode>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<EnvoyExtensionConfig> <EnvoyExtensions>k__BackingField;
    [CompilerGeneratedAttribute]
private DestinationConfig <Destination>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxInboundConnections>k__BackingField;
    [CompilerGeneratedAttribute]
private MeshGatewayConfig <MeshGateway>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExternalSNI>k__BackingField;
    [CompilerGeneratedAttribute]
private ExposeConfig <Expose>k__BackingField;
    [JsonPropertyAttribute]
public string Kind { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Namespace { get; public set; }
    [JsonPropertyAttribute]
public string Partition { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Meta { get; public set; }
    [JsonPropertyAttribute]
public string Protocol { get; public set; }
    [JsonPropertyAttribute]
public string BalanceInboundConnections { get; public set; }
    [JsonPropertyAttribute]
public string Mode { get; public set; }
    [JsonPropertyAttribute]
public RateLimitsConfig RateLimits { get; public set; }
    [JsonPropertyAttribute]
public UpstreamConfig UpstreamConfig { get; public set; }
    [JsonPropertyAttribute]
public DefaultsConfig Defaults { get; public set; }
    [JsonPropertyAttribute]
public TransparentProxyConfig TransparentProxy { get; public set; }
    [JsonPropertyAttribute]
public string MutualTLSMode { get; public set; }
    [JsonPropertyAttribute]
public List`1<EnvoyExtensionConfig> EnvoyExtensions { get; public set; }
    [JsonPropertyAttribute]
public DestinationConfig Destination { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> MaxInboundConnections { get; public set; }
    [JsonPropertyAttribute]
public MeshGatewayConfig MeshGateway { get; public set; }
    [JsonPropertyAttribute]
public string ExternalSNI { get; public set; }
    [JsonPropertyAttribute]
public ExposeConfig Expose { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(string value);
    [CompilerGeneratedAttribute]
public string get_BalanceInboundConnections();
    [CompilerGeneratedAttribute]
public void set_BalanceInboundConnections(string value);
    [CompilerGeneratedAttribute]
public string get_Mode();
    [CompilerGeneratedAttribute]
public void set_Mode(string value);
    [CompilerGeneratedAttribute]
public RateLimitsConfig get_RateLimits();
    [CompilerGeneratedAttribute]
public void set_RateLimits(RateLimitsConfig value);
    [CompilerGeneratedAttribute]
public UpstreamConfig get_UpstreamConfig();
    [CompilerGeneratedAttribute]
public void set_UpstreamConfig(UpstreamConfig value);
    [CompilerGeneratedAttribute]
public DefaultsConfig get_Defaults();
    [CompilerGeneratedAttribute]
public void set_Defaults(DefaultsConfig value);
    [CompilerGeneratedAttribute]
public TransparentProxyConfig get_TransparentProxy();
    [CompilerGeneratedAttribute]
public void set_TransparentProxy(TransparentProxyConfig value);
    [CompilerGeneratedAttribute]
public string get_MutualTLSMode();
    [CompilerGeneratedAttribute]
public void set_MutualTLSMode(string value);
    [CompilerGeneratedAttribute]
public List`1<EnvoyExtensionConfig> get_EnvoyExtensions();
    [CompilerGeneratedAttribute]
public void set_EnvoyExtensions(List`1<EnvoyExtensionConfig> value);
    [CompilerGeneratedAttribute]
public DestinationConfig get_Destination();
    [CompilerGeneratedAttribute]
public void set_Destination(DestinationConfig value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxInboundConnections();
    [CompilerGeneratedAttribute]
public void set_MaxInboundConnections(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public MeshGatewayConfig get_MeshGateway();
    [CompilerGeneratedAttribute]
public void set_MeshGateway(MeshGatewayConfig value);
    [CompilerGeneratedAttribute]
public string get_ExternalSNI();
    [CompilerGeneratedAttribute]
public void set_ExternalSNI(string value);
    [CompilerGeneratedAttribute]
public ExposeConfig get_Expose();
    [CompilerGeneratedAttribute]
public void set_Expose(ExposeConfig value);
}
public class Consul.ServiceDefinition : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ConsumerDefinition> <Consumers>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Namespace { get; public set; }
    [JsonPropertyAttribute]
public List`1<ConsumerDefinition> Consumers { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public List`1<ConsumerDefinition> get_Consumers();
    [CompilerGeneratedAttribute]
public void set_Consumers(List`1<ConsumerDefinition> value);
}
public class Consul.ServiceEntry : object {
    [CompilerGeneratedAttribute]
private Node <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private AgentService <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private HealthCheck[] <Checks>k__BackingField;
    public Node Node { get; public set; }
    public AgentService Service { get; public set; }
    public HealthCheck[] Checks { get; public set; }
    [CompilerGeneratedAttribute]
public Node get_Node();
    [CompilerGeneratedAttribute]
public void set_Node(Node value);
    [CompilerGeneratedAttribute]
public AgentService get_Service();
    [CompilerGeneratedAttribute]
public void set_Service(AgentService value);
    [CompilerGeneratedAttribute]
public HealthCheck[] get_Checks();
    [CompilerGeneratedAttribute]
public void set_Checks(HealthCheck[] value);
}
public class Consul.ServiceIdentity : object {
    [CompilerGeneratedAttribute]
private string <ServiceName>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Datacenters>k__BackingField;
    public string ServiceName { get; public set; }
    public String[] Datacenters { get; public set; }
    public ServiceIdentity(string serviceName, String[] datacenters);
    [CompilerGeneratedAttribute]
public string get_ServiceName();
    [CompilerGeneratedAttribute]
public void set_ServiceName(string value);
    [CompilerGeneratedAttribute]
public String[] get_Datacenters();
    [CompilerGeneratedAttribute]
public void set_Datacenters(String[] value);
}
public class Consul.ServiceInfo : object {
    [CompilerGeneratedAttribute]
private string <ID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, ServiceAddress> <TaggedAddresses>k__BackingField;
    public string ID { get; public set; }
    public string Service { get; public set; }
    public String[] Tags { get; public set; }
    public Dictionary`2<string, string> Meta { get; public set; }
    public int Port { get; public set; }
    public string Namespace { get; public set; }
    public Dictionary`2<string, ServiceAddress> TaggedAddresses { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ID();
    [CompilerGeneratedAttribute]
public void set_ID(string value);
    [CompilerGeneratedAttribute]
public string get_Service();
    [CompilerGeneratedAttribute]
public void set_Service(string value);
    [CompilerGeneratedAttribute]
public String[] get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(String[] value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(int value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, ServiceAddress> get_TaggedAddresses();
    [CompilerGeneratedAttribute]
public void set_TaggedAddresses(Dictionary`2<string, ServiceAddress> value);
}
public class Consul.ServiceIntentionsEntry : object {
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <JWT>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Provider> <Providers>k__BackingField;
    [JsonPropertyAttribute]
public string Kind { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Namespace { get; public set; }
    [JsonPropertyAttribute]
public string Partition { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Meta { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, object> JWT { get; public set; }
    [JsonPropertyAttribute]
public List`1<Provider> Providers { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_JWT();
    [CompilerGeneratedAttribute]
public void set_JWT(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public List`1<Provider> get_Providers();
    [CompilerGeneratedAttribute]
public void set_Providers(List`1<Provider> value);
}
[TypeConverterAttribute("Consul.ServiceKindTypeConverter")]
public class Consul.ServiceKind : object {
    [CompilerGeneratedAttribute]
private static IReadOnlyDictionary`2<string, ServiceKind> <Map>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    private static IReadOnlyDictionary`2<string, ServiceKind> Map { get; }
    public static ServiceKind ConnectProxy { get; }
    public static ServiceKind MeshGateway { get; }
    public static ServiceKind TerminatingGateway { get; }
    public static ServiceKind IngressGateway { get; }
    private string Value { get; }
    private ServiceKind(string value);
    private static ServiceKind();
    [CompilerGeneratedAttribute]
private static IReadOnlyDictionary`2<string, ServiceKind> get_Map();
    public static ServiceKind get_ConnectProxy();
    public static ServiceKind get_MeshGateway();
    public static ServiceKind get_TerminatingGateway();
    public static ServiceKind get_IngressGateway();
    [CompilerGeneratedAttribute]
private string get_Value();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ServiceKind other);
    public virtual int GetHashCode();
    public virtual string ToString();
    public static bool TryParse(string value, ServiceKind& result);
}
internal class Consul.ServiceKindTypeConverter : TypeConverter {
    public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType);
    public virtual bool CanConvertTo(ITypeDescriptorContext context, Type destinationType);
    public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
    public virtual object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType);
}
public class Consul.ServiceQuery : object {
    [CompilerGeneratedAttribute]
private string <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Near>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryDatacenterOptions <Failover>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OnlyPassing>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Tags>k__BackingField;
    [JsonPropertyAttribute]
public string Service { get; public set; }
    [JsonPropertyAttribute]
public string Near { get; public set; }
    [JsonPropertyAttribute]
public QueryDatacenterOptions Failover { get; public set; }
    [JsonPropertyAttribute]
public bool OnlyPassing { get; public set; }
    [JsonPropertyAttribute]
public List`1<string> Tags { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Service();
    [CompilerGeneratedAttribute]
public void set_Service(string value);
    [CompilerGeneratedAttribute]
public string get_Near();
    [CompilerGeneratedAttribute]
public void set_Near(string value);
    [CompilerGeneratedAttribute]
public QueryDatacenterOptions get_Failover();
    [CompilerGeneratedAttribute]
public void set_Failover(QueryDatacenterOptions value);
    [CompilerGeneratedAttribute]
public bool get_OnlyPassing();
    [CompilerGeneratedAttribute]
public void set_OnlyPassing(bool value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(List`1<string> value);
}
public class Consul.ServiceResolverEntry : object {
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConnectTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Subsets>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OnlyPassing>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultSubset>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Redirect>k__BackingField;
    [CompilerGeneratedAttribute]
private LoadBalancerConfig <LoadBalancer>k__BackingField;
    [JsonPropertyAttribute]
public string Kind { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Namespace { get; public set; }
    [JsonPropertyAttribute]
public string Partition { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Meta { get; public set; }
    [JsonPropertyAttribute]
public string ConnectTimeout { get; public set; }
    [JsonPropertyAttribute]
public string RequestTimeout { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Subsets { get; public set; }
    [JsonPropertyAttribute]
public string Filter { get; public set; }
    [JsonPropertyAttribute]
public bool OnlyPassing { get; public set; }
    [JsonPropertyAttribute]
public string DefaultSubset { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Redirect { get; public set; }
    [JsonPropertyAttribute]
public LoadBalancerConfig LoadBalancer { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_ConnectTimeout();
    [CompilerGeneratedAttribute]
public void set_ConnectTimeout(string value);
    [CompilerGeneratedAttribute]
public string get_RequestTimeout();
    [CompilerGeneratedAttribute]
public void set_RequestTimeout(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Subsets();
    [CompilerGeneratedAttribute]
public void set_Subsets(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_Filter();
    [CompilerGeneratedAttribute]
public void set_Filter(string value);
    [CompilerGeneratedAttribute]
public bool get_OnlyPassing();
    [CompilerGeneratedAttribute]
public void set_OnlyPassing(bool value);
    [CompilerGeneratedAttribute]
public string get_DefaultSubset();
    [CompilerGeneratedAttribute]
public void set_DefaultSubset(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Redirect();
    [CompilerGeneratedAttribute]
public void set_Redirect(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public LoadBalancerConfig get_LoadBalancer();
    [CompilerGeneratedAttribute]
public void set_LoadBalancer(LoadBalancerConfig value);
}
public class Consul.ServiceRouterEntry : object {
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Routes> <Routes>k__BackingField;
    [JsonPropertyAttribute]
public string Kind { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Namespace { get; public set; }
    [JsonPropertyAttribute]
public string Partition { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Meta { get; public set; }
    [JsonPropertyAttribute]
public List`1<Routes> Routes { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public List`1<Routes> get_Routes();
    [CompilerGeneratedAttribute]
public void set_Routes(List`1<Routes> value);
}
public class Consul.ServiceSplitterEntry : object {
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<SplitConfig> <Splits>k__BackingField;
    [JsonPropertyAttribute]
public string Kind { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Namespace { get; public set; }
    [JsonPropertyAttribute]
public string Partition { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Meta { get; public set; }
    [JsonPropertyAttribute]
public List`1<SplitConfig> Splits { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public List`1<SplitConfig> get_Splits();
    [CompilerGeneratedAttribute]
public void set_Splits(List`1<SplitConfig> value);
}
public class Consul.ServiceTaggedAddress : object {
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    public string Address { get; public set; }
    public int Port { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(string value);
    [CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(int value);
}
public class Consul.Session : object {
    private ConsulClient _client;
    internal Session(ConsulClient c);
    public sealed virtual Task RenewPeriodic(TimeSpan initialTTL, string id, CancellationToken ct);
    public sealed virtual Task RenewPeriodic(TimeSpan initialTTL, string id, WriteOptions q, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<string>> Create(CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<string>> Create(SessionEntry se, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Session/<Create>d__7")]
public sealed virtual Task`1<WriteResult`1<string>> Create(SessionEntry se, WriteOptions q, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<string>> CreateNoChecks(CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<string>> CreateNoChecks(SessionEntry se, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<string>> CreateNoChecks(SessionEntry se, WriteOptions q, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<bool>> Destroy(string id, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<bool>> Destroy(string id, WriteOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<SessionEntry>> Info(string id, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Session/<Info>d__14")]
public sealed virtual Task`1<QueryResult`1<SessionEntry>> Info(string id, QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<SessionEntry[]>> List(CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<SessionEntry[]>> List(QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<SessionEntry[]>> Node(string node, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<SessionEntry[]>> Node(string node, QueryOptions q, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<SessionEntry>> Renew(string id, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Session/<Renew>d__20")]
public sealed virtual Task`1<WriteResult`1<SessionEntry>> Renew(string id, WriteOptions q, CancellationToken ct);
}
public class Consul.SessionBehavior : object {
    [CompilerGeneratedAttribute]
private string <Behavior>k__BackingField;
    [CompilerGeneratedAttribute]
private static SessionBehavior <Release>k__BackingField;
    [CompilerGeneratedAttribute]
private static SessionBehavior <Delete>k__BackingField;
    public string Behavior { get; private set; }
    public static SessionBehavior Release { get; }
    public static SessionBehavior Delete { get; }
    private static SessionBehavior();
    [CompilerGeneratedAttribute]
public string get_Behavior();
    [CompilerGeneratedAttribute]
private void set_Behavior(string value);
    [CompilerGeneratedAttribute]
public static SessionBehavior get_Release();
    [CompilerGeneratedAttribute]
public static SessionBehavior get_Delete();
    public sealed virtual bool Equals(SessionBehavior other);
    public virtual bool Equals(object other);
    public virtual int GetHashCode();
}
public class Consul.SessionBehaviorConverter : JsonConverter {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
public class Consul.SessionCreationException : Exception {
    public SessionCreationException(string message);
    public SessionCreationException(string message, Exception inner);
}
public class Consul.SessionEntry : object {
    [CompilerGeneratedAttribute]
private ulong <CreateIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Checks>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <LockDelay>k__BackingField;
    [CompilerGeneratedAttribute]
private SessionBehavior <Behavior>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TTL>k__BackingField;
    public ulong CreateIndex { get; public set; }
    public string ID { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Node { get; public set; }
    public List`1<string> Checks { get; public set; }
    [JsonConverterAttribute("Consul.NanoSecTimespanConverter")]
[JsonPropertyAttribute]
public Nullable`1<TimeSpan> LockDelay { get; public set; }
    [JsonConverterAttribute("Consul.SessionBehaviorConverter")]
[JsonPropertyAttribute]
public SessionBehavior Behavior { get; public set; }
    [JsonConverterAttribute("Consul.DurationTimespanConverter")]
[JsonPropertyAttribute]
public Nullable`1<TimeSpan> TTL { get; public set; }
    [CompilerGeneratedAttribute]
public ulong get_CreateIndex();
    [CompilerGeneratedAttribute]
public void set_CreateIndex(ulong value);
    [CompilerGeneratedAttribute]
public string get_ID();
    [CompilerGeneratedAttribute]
public void set_ID(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
public void set_Node(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Checks();
    [CompilerGeneratedAttribute]
public void set_Checks(List`1<string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_LockDelay();
    [CompilerGeneratedAttribute]
public void set_LockDelay(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public SessionBehavior get_Behavior();
    [CompilerGeneratedAttribute]
public void set_Behavior(SessionBehavior value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_TTL();
    [CompilerGeneratedAttribute]
public void set_TTL(Nullable`1<TimeSpan> value);
    public static bool ShouldSerializeID();
    public static bool ShouldSerializeCreateIndex();
    public bool ShouldSerializeChecks();
}
public class Consul.SessionExpiredException : Exception {
    public SessionExpiredException(string message);
    public SessionExpiredException(string message, Exception inner);
}
public class Consul.Snapshot : object {
    private ConsulClient _client;
    internal Snapshot(ConsulClient c);
    public sealed virtual Task`1<WriteResult> Restore(Stream s, CancellationToken ct);
    public sealed virtual Task`1<WriteResult> Restore(Stream s, WriteOptions q, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<Stream>> Save(CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<Stream>> Save(QueryOptions q, CancellationToken ct);
}
public class Consul.SplitConfig : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Weight>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceSubset>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Dictionary`2<string, string>> <RequestHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Dictionary`2<string, string>> <ResponseHeaders>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<int> Weight { get; public set; }
    [JsonPropertyAttribute]
public string Service { get; public set; }
    [JsonPropertyAttribute]
public string ServiceSubset { get; public set; }
    [JsonPropertyAttribute]
public string Namespace { get; public set; }
    [JsonPropertyAttribute]
public string Partition { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, Dictionary`2<string, string>> RequestHeaders { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, Dictionary`2<string, string>> ResponseHeaders { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Weight();
    [CompilerGeneratedAttribute]
public void set_Weight(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Service();
    [CompilerGeneratedAttribute]
public void set_Service(string value);
    [CompilerGeneratedAttribute]
public string get_ServiceSubset();
    [CompilerGeneratedAttribute]
public void set_ServiceSubset(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, Dictionary`2<string, string>> get_RequestHeaders();
    [CompilerGeneratedAttribute]
public void set_RequestHeaders(Dictionary`2<string, Dictionary`2<string, string>> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, Dictionary`2<string, string>> get_ResponseHeaders();
    [CompilerGeneratedAttribute]
public void set_ResponseHeaders(Dictionary`2<string, Dictionary`2<string, string>> value);
}
public class Consul.Status : object {
    private ConsulClient _client;
    internal Status(ConsulClient c);
    [AsyncStateMachineAttribute("Consul.Status/<Leader>d__2")]
public sealed virtual Task`1<string> Leader(CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Status/<Peers>d__3")]
public sealed virtual Task`1<String[]> Peers(CancellationToken ct);
}
public class Consul.TaggedAddresses : object {
    [CompilerGeneratedAttribute]
private AddressDetails <Lan>k__BackingField;
    [CompilerGeneratedAttribute]
private AddressDetails <Wan>k__BackingField;
    public AddressDetails Lan { get; public set; }
    public AddressDetails Wan { get; public set; }
    [CompilerGeneratedAttribute]
public AddressDetails get_Lan();
    [CompilerGeneratedAttribute]
public void set_Lan(AddressDetails value);
    [CompilerGeneratedAttribute]
public AddressDetails get_Wan();
    [CompilerGeneratedAttribute]
public void set_Wan(AddressDetails value);
}
public class Consul.TcpRouteEntry : object {
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<TcpRouteService> <Services>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiGatewayReference> <Parents>k__BackingField;
    [JsonPropertyAttribute]
public string Kind { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Namespace { get; public set; }
    [JsonPropertyAttribute]
public string Partition { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Meta { get; public set; }
    [JsonPropertyAttribute]
public List`1<TcpRouteService> Services { get; public set; }
    [JsonPropertyAttribute]
public List`1<ApiGatewayReference> Parents { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public List`1<TcpRouteService> get_Services();
    [CompilerGeneratedAttribute]
public void set_Services(List`1<TcpRouteService> value);
    [CompilerGeneratedAttribute]
public List`1<ApiGatewayReference> get_Parents();
    [CompilerGeneratedAttribute]
public void set_Parents(List`1<ApiGatewayReference> value);
}
public class Consul.TcpRouteService : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Partition>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Namespace { get; public set; }
    [JsonPropertyAttribute]
public string Partition { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(string value);
}
public class Consul.TerminatingGatewayEntry : object {
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<LinkedService> <Services>k__BackingField;
    [JsonPropertyAttribute]
public string Kind { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Namespace { get; public set; }
    [JsonPropertyAttribute]
public string Partition { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Meta { get; public set; }
    [JsonPropertyAttribute]
public List`1<LinkedService> Services { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Kind();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public List`1<LinkedService> get_Services();
    [CompilerGeneratedAttribute]
public void set_Services(List`1<LinkedService> value);
}
public class Consul.TLSCertificatesConfig : object {
    [CompilerGeneratedAttribute]
private TrustedCAConfig <TrustedCA>k__BackingField;
    [CompilerGeneratedAttribute]
private CaCertificateProviderInstanceConfig <CaCertificateProviderInstance>k__BackingField;
    [JsonPropertyAttribute]
public TrustedCAConfig TrustedCA { get; public set; }
    [JsonPropertyAttribute]
public CaCertificateProviderInstanceConfig CaCertificateProviderInstance { get; public set; }
    [CompilerGeneratedAttribute]
public TrustedCAConfig get_TrustedCA();
    [CompilerGeneratedAttribute]
public void set_TrustedCA(TrustedCAConfig value);
    [CompilerGeneratedAttribute]
public CaCertificateProviderInstanceConfig get_CaCertificateProviderInstance();
    [CompilerGeneratedAttribute]
public void set_CaCertificateProviderInstance(CaCertificateProviderInstanceConfig value);
}
public class Consul.TLSConfig : object {
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TLSMinVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TLSMaxVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <CipherSuites>k__BackingField;
    [CompilerGeneratedAttribute]
private SDSConfig <SDS>k__BackingField;
    [JsonPropertyAttribute]
public bool Enabled { get; public set; }
    [JsonPropertyAttribute]
public string TLSMinVersion { get; public set; }
    [JsonPropertyAttribute]
public string TLSMaxVersion { get; public set; }
    [JsonPropertyAttribute]
public List`1<string> CipherSuites { get; public set; }
    [JsonPropertyAttribute]
public SDSConfig SDS { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public string get_TLSMinVersion();
    [CompilerGeneratedAttribute]
public void set_TLSMinVersion(string value);
    [CompilerGeneratedAttribute]
public string get_TLSMaxVersion();
    [CompilerGeneratedAttribute]
public void set_TLSMaxVersion(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_CipherSuites();
    [CompilerGeneratedAttribute]
public void set_CipherSuites(List`1<string> value);
    [CompilerGeneratedAttribute]
public SDSConfig get_SDS();
    [CompilerGeneratedAttribute]
public void set_SDS(SDSConfig value);
}
public class Consul.TLSDirectionConfig : object {
    [CompilerGeneratedAttribute]
private string <TLSMinVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TLSMaxVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <CipherSuites>k__BackingField;
    [JsonPropertyAttribute]
public string TLSMinVersion { get; public set; }
    [JsonPropertyAttribute]
public string TLSMaxVersion { get; public set; }
    [JsonPropertyAttribute]
public List`1<string> CipherSuites { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TLSMinVersion();
    [CompilerGeneratedAttribute]
public void set_TLSMinVersion(string value);
    [CompilerGeneratedAttribute]
public string get_TLSMaxVersion();
    [CompilerGeneratedAttribute]
public void set_TLSMaxVersion(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_CipherSuites();
    [CompilerGeneratedAttribute]
public void set_CipherSuites(List`1<string> value);
}
public class Consul.Token : object {
    private ConsulClient _client;
    internal Token(ConsulClient c);
    public sealed virtual Task`1<WriteResult`1<TokenEntry>> Bootstrap(CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Token/<Bootstrap>d__4")]
public sealed virtual Task`1<WriteResult`1<TokenEntry>> Bootstrap(WriteOptions writeOptions, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<TokenEntry>> Create(TokenEntry token, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Token/<Create>d__6")]
public sealed virtual Task`1<WriteResult`1<TokenEntry>> Create(TokenEntry token, WriteOptions writeOptions, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<TokenEntry>> Update(TokenEntry token, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Token/<Update>d__8")]
public sealed virtual Task`1<WriteResult`1<TokenEntry>> Update(TokenEntry token, WriteOptions writeOptions, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<bool>> Delete(string id, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<bool>> Delete(string id, WriteOptions writeOptions, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<TokenEntry>> Clone(string id, CancellationToken ct);
    public sealed virtual Task`1<WriteResult`1<TokenEntry>> Clone(string id, WriteOptions writeOptions, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Token/<Clone>d__13")]
public Task`1<WriteResult`1<TokenEntry>> Clone(string id, string description, WriteOptions writeOptions, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<TokenEntry>> Read(string id, CancellationToken ct);
    [AsyncStateMachineAttribute("Consul.Token/<Read>d__15")]
public sealed virtual Task`1<QueryResult`1<TokenEntry>> Read(string id, QueryOptions queryOptions, CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<TokenEntry[]>> List(CancellationToken ct);
    public sealed virtual Task`1<QueryResult`1<TokenEntry[]>> List(QueryOptions queryOptions, CancellationToken ct);
}
public class Consul.TokenEntry : object {
    [CompilerGeneratedAttribute]
private string <AccessorID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecretID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private PolicyLink[] <Policies>k__BackingField;
    [CompilerGeneratedAttribute]
private RoleLink[] <Roles>k__BackingField;
    [CompilerGeneratedAttribute]
private ServiceIdentity[] <ServiceIdentities>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Local>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthMethod>k__BackingField;
    [JsonPropertyAttribute]
public string AccessorID { get; public set; }
    [JsonPropertyAttribute]
public string SecretID { get; public set; }
    public string Description { get; public set; }
    [JsonPropertyAttribute]
public PolicyLink[] Policies { get; public set; }
    [JsonPropertyAttribute]
public RoleLink[] Roles { get; public set; }
    [JsonPropertyAttribute]
public ServiceIdentity[] ServiceIdentities { get; public set; }
    public bool Local { get; public set; }
    [JsonPropertyAttribute]
public string AuthMethod { get; public set; }
    public TokenEntry(string description, PolicyLink[] policies);
    public TokenEntry(string description, RoleLink[] roles);
    public TokenEntry(string description, ServiceIdentity[] serviceIdentities);
    public TokenEntry(string accessorId, string description);
    public TokenEntry(string accessorId, string description, PolicyLink[] policies, RoleLink[] roles, ServiceIdentity[] serviceIdentities);
    [CompilerGeneratedAttribute]
public string get_AccessorID();
    [CompilerGeneratedAttribute]
public void set_AccessorID(string value);
    [CompilerGeneratedAttribute]
public string get_SecretID();
    [CompilerGeneratedAttribute]
public void set_SecretID(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public PolicyLink[] get_Policies();
    [CompilerGeneratedAttribute]
public void set_Policies(PolicyLink[] value);
    [CompilerGeneratedAttribute]
public RoleLink[] get_Roles();
    [CompilerGeneratedAttribute]
public void set_Roles(RoleLink[] value);
    [CompilerGeneratedAttribute]
public ServiceIdentity[] get_ServiceIdentities();
    [CompilerGeneratedAttribute]
public void set_ServiceIdentities(ServiceIdentity[] value);
    [CompilerGeneratedAttribute]
public bool get_Local();
    [CompilerGeneratedAttribute]
public void set_Local(bool value);
    [CompilerGeneratedAttribute]
public string get_AuthMethod();
    [CompilerGeneratedAttribute]
public void set_AuthMethod(string value);
    public static bool ShouldSerializeCreateIndex();
    public static bool ShouldSerializeModifyIndex();
}
public class Consul.TransparentProxy : object {
    [CompilerGeneratedAttribute]
private int <OutboundListenerPort>k__BackingField;
    public int OutboundListenerPort { get; public set; }
    [CompilerGeneratedAttribute]
public int get_OutboundListenerPort();
    [CompilerGeneratedAttribute]
public void set_OutboundListenerPort(int value);
}
public class Consul.TransparentProxyConfig : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OutboundListenerPort>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DialedDirectly>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<int> OutboundListenerPort { get; public set; }
    [JsonPropertyAttribute]
public bool DialedDirectly { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_OutboundListenerPort();
    [CompilerGeneratedAttribute]
public void set_OutboundListenerPort(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public bool get_DialedDirectly();
    [CompilerGeneratedAttribute]
public void set_DialedDirectly(bool value);
}
public class Consul.TrustedCAConfig : object {
    [CompilerGeneratedAttribute]
private string <Filename>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EnvironmentVariable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InlineString>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InlineBytes>k__BackingField;
    [JsonPropertyAttribute]
public string Filename { get; public set; }
    [JsonPropertyAttribute]
public string EnvironmentVariable { get; public set; }
    [JsonPropertyAttribute]
public string InlineString { get; public set; }
    [JsonPropertyAttribute]
public string InlineBytes { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Filename();
    [CompilerGeneratedAttribute]
public void set_Filename(string value);
    [CompilerGeneratedAttribute]
public string get_EnvironmentVariable();
    [CompilerGeneratedAttribute]
public void set_EnvironmentVariable(string value);
    [CompilerGeneratedAttribute]
public string get_InlineString();
    [CompilerGeneratedAttribute]
public void set_InlineString(string value);
    [CompilerGeneratedAttribute]
public string get_InlineBytes();
    [CompilerGeneratedAttribute]
public void set_InlineBytes(string value);
}
public class Consul.TTLStatus : object {
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LegacyStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private static TTLStatus <Pass>k__BackingField;
    [CompilerGeneratedAttribute]
private static TTLStatus <Warn>k__BackingField;
    [CompilerGeneratedAttribute]
private static TTLStatus <Critical>k__BackingField;
    public string Status { get; private set; }
    internal string LegacyStatus { get; private set; }
    public static TTLStatus Pass { get; }
    public static TTLStatus Warn { get; }
    public static TTLStatus Critical { get; }
    [ObsoleteAttribute("Use TTLStatus.Critical instead. This status will be an error in 0.7.0+", "True")]
public static TTLStatus Fail { get; }
    private static TTLStatus();
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
private void set_Status(string value);
    [CompilerGeneratedAttribute]
internal string get_LegacyStatus();
    [CompilerGeneratedAttribute]
private void set_LegacyStatus(string value);
    [CompilerGeneratedAttribute]
public static TTLStatus get_Pass();
    [CompilerGeneratedAttribute]
public static TTLStatus get_Warn();
    [CompilerGeneratedAttribute]
public static TTLStatus get_Critical();
    public static TTLStatus get_Fail();
    public sealed virtual bool Equals(TTLStatus other);
    public virtual bool Equals(object other);
    public virtual int GetHashCode();
}
public class Consul.TTLStatusConverter : JsonConverter {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
public class Consul.TxnError : object {
    [CompilerGeneratedAttribute]
private int <OpIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private string <What>k__BackingField;
    [JsonPropertyAttribute]
public int OpIndex { get; private set; }
    [JsonPropertyAttribute]
public string What { get; private set; }
    [CompilerGeneratedAttribute]
public int get_OpIndex();
    [CompilerGeneratedAttribute]
private void set_OpIndex(int value);
    [CompilerGeneratedAttribute]
public string get_What();
    [CompilerGeneratedAttribute]
private void set_What(string value);
}
internal class Consul.TxnOp : object {
    [CompilerGeneratedAttribute]
private KVTxnOp <KV>k__BackingField;
    public KVTxnOp KV { get; public set; }
    [CompilerGeneratedAttribute]
public KVTxnOp get_KV();
    [CompilerGeneratedAttribute]
public void set_KV(KVTxnOp value);
}
internal class Consul.TxnResponse : object {
    [CompilerGeneratedAttribute]
private List`1<TxnResult> <Results>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<TxnError> <Errors>k__BackingField;
    [JsonPropertyAttribute]
internal List`1<TxnResult> Results { get; internal set; }
    [JsonPropertyAttribute]
internal List`1<TxnError> Errors { get; internal set; }
    [CompilerGeneratedAttribute]
internal List`1<TxnResult> get_Results();
    [CompilerGeneratedAttribute]
internal void set_Results(List`1<TxnResult> value);
    [CompilerGeneratedAttribute]
internal List`1<TxnError> get_Errors();
    [CompilerGeneratedAttribute]
internal void set_Errors(List`1<TxnError> value);
}
internal class Consul.TxnResult : object {
    [CompilerGeneratedAttribute]
private KVPair <KV>k__BackingField;
    public KVPair KV { get; public set; }
    [CompilerGeneratedAttribute]
public KVPair get_KV();
    [CompilerGeneratedAttribute]
public void set_KV(KVPair value);
}
public class Consul.Upstream : object {
    [CompilerGeneratedAttribute]
private string <DestinationType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DestinationName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LocalBindPort>k__BackingField;
    public string DestinationType { get; public set; }
    public string DestinationName { get; public set; }
    public int LocalBindPort { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DestinationType();
    [CompilerGeneratedAttribute]
public void set_DestinationType(string value);
    [CompilerGeneratedAttribute]
public string get_DestinationName();
    [CompilerGeneratedAttribute]
public void set_DestinationName(string value);
    [CompilerGeneratedAttribute]
public int get_LocalBindPort();
    [CompilerGeneratedAttribute]
public void set_LocalBindPort(int value);
}
public class Consul.UpstreamConfig : object {
    [CompilerGeneratedAttribute]
private List`1<OverrideConfig> <Overrides>k__BackingField;
    [JsonPropertyAttribute]
public List`1<OverrideConfig> Overrides { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<OverrideConfig> get_Overrides();
    [CompilerGeneratedAttribute]
public void set_Overrides(List`1<OverrideConfig> value);
}
public class Consul.UserEvent : object {
    [CompilerGeneratedAttribute]
private string <ID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Payload>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NodeFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TagFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <LTime>k__BackingField;
    public string ID { get; public set; }
    public string Name { get; public set; }
    public Byte[] Payload { get; public set; }
    public string NodeFilter { get; public set; }
    public string ServiceFilter { get; public set; }
    public string TagFilter { get; public set; }
    public int Version { get; public set; }
    public ulong LTime { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ID();
    [CompilerGeneratedAttribute]
public void set_ID(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Byte[] get_Payload();
    [CompilerGeneratedAttribute]
public void set_Payload(Byte[] value);
    [CompilerGeneratedAttribute]
public string get_NodeFilter();
    [CompilerGeneratedAttribute]
public void set_NodeFilter(string value);
    [CompilerGeneratedAttribute]
public string get_ServiceFilter();
    [CompilerGeneratedAttribute]
public void set_ServiceFilter(string value);
    [CompilerGeneratedAttribute]
public string get_TagFilter();
    [CompilerGeneratedAttribute]
public void set_TagFilter(string value);
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(int value);
    [CompilerGeneratedAttribute]
public ulong get_LTime();
    [CompilerGeneratedAttribute]
public void set_LTime(ulong value);
}
public class Consul.VerifyClaim : object {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [JsonPropertyAttribute]
public string Path { get; public set; }
    [JsonPropertyAttribute]
public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
public class Consul.VerifyClaims : object {
    [CompilerGeneratedAttribute]
private List`1<string> <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [JsonPropertyAttribute]
public List`1<string> Path { get; public set; }
    [JsonPropertyAttribute]
public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<string> get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(List`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
public class Consul.Weights : object {
    [CompilerGeneratedAttribute]
private int <Passing>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Warning>k__BackingField;
    public int Passing { get; public set; }
    public int Warning { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Passing();
    [CompilerGeneratedAttribute]
public void set_Passing(int value);
    [CompilerGeneratedAttribute]
public int get_Warning();
    [CompilerGeneratedAttribute]
public void set_Warning(int value);
}
public class Consul.WriteOptions : object {
    public static WriteOptions Default;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Datacenter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    public string Namespace { get; public set; }
    public string Datacenter { get; public set; }
    public string Token { get; public set; }
    private static WriteOptions();
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Datacenter();
    [CompilerGeneratedAttribute]
public void set_Datacenter(string value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
}
public class Consul.WriteResult : ConsulResult {
    public WriteResult(WriteResult other);
}
public class Consul.WriteResult`1 : WriteResult {
    [CompilerGeneratedAttribute]
private T <Response>k__BackingField;
    public T Response { get; public set; }
    public WriteResult`1(WriteResult other);
    public WriteResult`1(WriteResult other, T value);
    [CompilerGeneratedAttribute]
public T get_Response();
    [CompilerGeneratedAttribute]
public void set_Response(T value);
}
