public interface CorrelationId.Abstractions.ICorrelationContextAccessor {
    public CorrelationContext CorrelationContext { get; public set; }
    public abstract virtual CorrelationContext get_CorrelationContext();
    public abstract virtual void set_CorrelationContext(CorrelationContext value);
}
public interface CorrelationId.Abstractions.ICorrelationContextFactory {
    public abstract virtual CorrelationContext Create(string correlationId, string header);
    public abstract virtual void Dispose();
}
public interface CorrelationId.Abstractions.ICorrelationIdProvider {
    public abstract virtual string GenerateCorrelationId(HttpContext context);
}
public class CorrelationId.CorrelationContext : object {
    public static string DefaultCorrelationId;
    [CompilerGeneratedAttribute]
private string <CorrelationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Header>k__BackingField;
    public string CorrelationId { get; }
    public string Header { get; }
    public CorrelationContext(string correlationId, string header);
    [CompilerGeneratedAttribute]
public string get_CorrelationId();
    [CompilerGeneratedAttribute]
public string get_Header();
}
public class CorrelationId.CorrelationContextAccessor : object {
    private static AsyncLocal`1<CorrelationContext> _correlationContext;
    public CorrelationContext CorrelationContext { get; public set; }
    private static CorrelationContextAccessor();
    public sealed virtual CorrelationContext get_CorrelationContext();
    public sealed virtual void set_CorrelationContext(CorrelationContext value);
}
public class CorrelationId.CorrelationContextFactory : object {
    private ICorrelationContextAccessor _correlationContextAccessor;
    public CorrelationContextFactory(ICorrelationContextAccessor correlationContextAccessor);
    public sealed virtual CorrelationContext Create(string correlationId, string header);
    public sealed virtual void Dispose();
}
[ExtensionAttribute]
public static class CorrelationId.CorrelationIdExtensions : object {
    [ExtensionAttribute]
public static IApplicationBuilder UseCorrelationId(IApplicationBuilder app);
}
public class CorrelationId.CorrelationIdMiddleware : object {
    private RequestDelegate _next;
    private ILogger _logger;
    private ICorrelationIdProvider _correlationIdProvider;
    private CorrelationIdOptions _options;
    public CorrelationIdMiddleware(RequestDelegate next, ILogger`1<CorrelationIdMiddleware> logger, IOptions`1<CorrelationIdOptions> options, ICorrelationIdProvider correlationIdProvider);
    [AsyncStateMachineAttribute("CorrelationId.CorrelationIdMiddleware/<Invoke>d__5")]
public Task Invoke(HttpContext context, ICorrelationContextFactory correlationContextFactory);
    private static bool RequiresGenerationOfCorrelationId(bool idInHeader, StringValues idFromHeader);
    private string GenerateCorrelationId(HttpContext ctx);
}
public class CorrelationId.CorrelationIdOptions : object {
    public static string DefaultHeader;
    public static string LoggerScopeKey;
    [CompilerGeneratedAttribute]
private string <RequestHeader>k__BackingField;
    private string _responseHeader;
    [CompilerGeneratedAttribute]
private bool <IgnoreRequestHeader>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnforceHeader>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AddToLoggingScope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LoggingScopeKey>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeInResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UpdateTraceIdentifier>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<string> <CorrelationIdGenerator>k__BackingField;
    public string RequestHeader { get; public set; }
    public string ResponseHeader { get; public set; }
    public bool IgnoreRequestHeader { get; public set; }
    public bool EnforceHeader { get; public set; }
    public bool AddToLoggingScope { get; public set; }
    public string LoggingScopeKey { get; public set; }
    public bool IncludeInResponse { get; public set; }
    public bool UpdateTraceIdentifier { get; public set; }
    public Func`1<string> CorrelationIdGenerator { get; public set; }
    [CompilerGeneratedAttribute]
public string get_RequestHeader();
    [CompilerGeneratedAttribute]
public void set_RequestHeader(string value);
    public string get_ResponseHeader();
    public void set_ResponseHeader(string value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreRequestHeader();
    [CompilerGeneratedAttribute]
public void set_IgnoreRequestHeader(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnforceHeader();
    [CompilerGeneratedAttribute]
public void set_EnforceHeader(bool value);
    [CompilerGeneratedAttribute]
public bool get_AddToLoggingScope();
    [CompilerGeneratedAttribute]
public void set_AddToLoggingScope(bool value);
    [CompilerGeneratedAttribute]
public string get_LoggingScopeKey();
    [CompilerGeneratedAttribute]
public void set_LoggingScopeKey(string value);
    [CompilerGeneratedAttribute]
public bool get_IncludeInResponse();
    [CompilerGeneratedAttribute]
public void set_IncludeInResponse(bool value);
    [CompilerGeneratedAttribute]
public bool get_UpdateTraceIdentifier();
    [CompilerGeneratedAttribute]
public void set_UpdateTraceIdentifier(bool value);
    [CompilerGeneratedAttribute]
public Func`1<string> get_CorrelationIdGenerator();
    [CompilerGeneratedAttribute]
public void set_CorrelationIdGenerator(Func`1<string> value);
}
internal class CorrelationId.DependencyInjection.CorrelationIdBuilder : object {
    [CompilerGeneratedAttribute]
private IServiceCollection <Services>k__BackingField;
    public IServiceCollection Services { get; }
    public CorrelationIdBuilder(IServiceCollection services);
    [CompilerGeneratedAttribute]
public sealed virtual IServiceCollection get_Services();
}
[ExtensionAttribute]
public static class CorrelationId.DependencyInjection.CorrelationIdBuilderExtensions : object {
    private static string MultipleProviderExceptionMessage;
    [ExtensionAttribute]
public static ICorrelationIdBuilder ClearProvider(ICorrelationIdBuilder builder);
    [ExtensionAttribute]
public static ICorrelationIdBuilder WithGuidProvider(ICorrelationIdBuilder builder);
    [ExtensionAttribute]
public static ICorrelationIdBuilder WithTraceIdentifierProvider(ICorrelationIdBuilder builder);
    [ExtensionAttribute]
public static ICorrelationIdBuilder WithCustomProvider(ICorrelationIdBuilder builder, ICorrelationIdProvider provider);
    [ExtensionAttribute]
public static ICorrelationIdBuilder WithCustomProvider(ICorrelationIdBuilder builder);
}
[ExtensionAttribute]
public static class CorrelationId.DependencyInjection.CorrelationIdServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static ICorrelationIdBuilder AddCorrelationId(IServiceCollection services);
    [ExtensionAttribute]
public static ICorrelationIdBuilder AddCorrelationId(IServiceCollection services);
    [ExtensionAttribute]
public static ICorrelationIdBuilder AddCorrelationId(IServiceCollection services, Action`1<CorrelationIdOptions> configure);
    [ExtensionAttribute]
public static ICorrelationIdBuilder AddCorrelationId(IServiceCollection services, Action`1<CorrelationIdOptions> configure);
    [ExtensionAttribute]
public static IServiceCollection AddDefaultCorrelationId(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection AddDefaultCorrelationId(IServiceCollection services, Action`1<CorrelationIdOptions> configure);
}
public interface CorrelationId.DependencyInjection.ICorrelationIdBuilder {
    public IServiceCollection Services { get; }
    public abstract virtual IServiceCollection get_Services();
}
internal class CorrelationId.HttpClient.CorrelationIdHandler : DelegatingHandler {
    private ICorrelationContextAccessor _correlationContextAccessor;
    public CorrelationIdHandler(ICorrelationContextAccessor correlationContextAccessor);
    protected virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class CorrelationId.HttpClient.HttpClientBuilderExtensions : object {
    [ExtensionAttribute]
public static IHttpClientBuilder AddCorrelationIdForwarding(IHttpClientBuilder builder);
}
public class CorrelationId.Providers.GuidCorrelationIdProvider : object {
    public sealed virtual string GenerateCorrelationId(HttpContext ctx);
}
public class CorrelationId.Providers.TraceIdCorrelationIdProvider : object {
    public sealed virtual string GenerateCorrelationId(HttpContext ctx);
}
