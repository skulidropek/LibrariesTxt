[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Analytics.AnalyticsClient : HttpServiceBase {
    internal static string AnalyticsRequiresUnreferencedMembersWarning;
    internal static string AnalyticsRequiresDynamicCodeWarning;
    private IServiceUriProvider _serviceUriProvider;
    private ITypeSerializer _typeSerializer;
    private ILogger`1<AnalyticsClient> _logger;
    private IRequestTracer _tracer;
    internal static string AnalyticsPriorityHeaderName;
    [RequiresUnreferencedCodeAttribute("Couchbase Analytics might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase Analytics might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public AnalyticsClient(ICouchbaseHttpClientFactory httpClientFactory, IServiceUriProvider serviceUriProvider, ITypeSerializer typeSerializer, ILogger`1<AnalyticsClient> logger, IRequestTracer tracer);
    [AsyncStateMachineAttribute("Couchbase.Analytics.AnalyticsClient/<QueryAsync>d__8`1")]
[RequiresUnreferencedCodeAttribute("Couchbase Analytics might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase Analytics might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2046")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3051")]
public sealed virtual Task`1<IAnalyticsResult`1<T>> QueryAsync(string statement, AnalyticsOptions options);
    private CouchbaseException CreateExceptionForError(AnalyticsResultBase`1<T> result, AnalyticsErrorContext context, bool couchbaseExceptionFallback);
    private IRequestSpan RootSpan(string operation, AnalyticsOptions options);
}
[ExtensionAttribute]
public static class Couchbase.Analytics.AnalyticsExtensions : object {
    [ExtensionAttribute]
public static Task`1<IEnumerable`1<IMutationResult>> IngestAsync(ICluster cluster, string statement, ICouchbaseCollection collection, Action`1<IngestOptions> configureOptions);
    [AsyncStateMachineAttribute("Couchbase.Analytics.AnalyticsExtensions/<IngestAsync>d__1`1")]
[ExtensionAttribute]
public static Task`1<IEnumerable`1<IMutationResult>> IngestAsync(ICluster cluster, string statement, ICouchbaseCollection collection, IngestOptions ingestOptions);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.Analytics.AnalyticsMetaData : object {
    [CompilerGeneratedAttribute]
private string <ClientContextId>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private AnalyticsMetrics <Metrics>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestId>k__BackingField;
    [DynamicAttribute]
[CompilerGeneratedAttribute]
private object <Signature>k__BackingField;
    [CompilerGeneratedAttribute]
private AnalyticsStatus <Status>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private List`1<AnalyticsWarning> <Warnings>k__BackingField;
    public string ClientContextId { get; public set; }
    [NullableAttribute("1")]
public AnalyticsMetrics Metrics { get; public set; }
    public string RequestId { get; public set; }
    [DynamicAttribute]
public object Signature { get; public set; }
    public AnalyticsStatus Status { get; public set; }
    [NullableAttribute("1")]
public List`1<AnalyticsWarning> Warnings { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ClientContextId();
    [CompilerGeneratedAttribute]
public void set_ClientContextId(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public AnalyticsMetrics get_Metrics();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Metrics(AnalyticsMetrics value);
    [CompilerGeneratedAttribute]
public string get_RequestId();
    [CompilerGeneratedAttribute]
public void set_RequestId(string value);
    [CompilerGeneratedAttribute]
public object get_Signature();
    [CompilerGeneratedAttribute]
public void set_Signature(object value);
    [CompilerGeneratedAttribute]
public AnalyticsStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(AnalyticsStatus value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public List`1<AnalyticsWarning> get_Warnings();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Warnings(List`1<AnalyticsWarning> value);
}
public class Couchbase.Analytics.AnalyticsMetrics : object {
    [CompilerGeneratedAttribute]
private string <ElaspedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExecutionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <ResultCount>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <ResultSize>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <MutationCount>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <ErrorCount>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <WarningCount>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <SortCount>k__BackingField;
    public string ElaspedTime { get; public set; }
    public string ExecutionTime { get; public set; }
    public UInt32 ResultCount { get; public set; }
    public UInt32 ResultSize { get; public set; }
    public UInt32 MutationCount { get; public set; }
    public UInt32 ErrorCount { get; public set; }
    public UInt32 WarningCount { get; public set; }
    public UInt32 SortCount { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ElaspedTime();
    [CompilerGeneratedAttribute]
public void set_ElaspedTime(string value);
    [CompilerGeneratedAttribute]
public string get_ExecutionTime();
    [CompilerGeneratedAttribute]
public void set_ExecutionTime(string value);
    [CompilerGeneratedAttribute]
public UInt32 get_ResultCount();
    [CompilerGeneratedAttribute]
public void set_ResultCount(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_ResultSize();
    [CompilerGeneratedAttribute]
public void set_ResultSize(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_MutationCount();
    [CompilerGeneratedAttribute]
public void set_MutationCount(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_ErrorCount();
    [CompilerGeneratedAttribute]
public void set_ErrorCount(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_WarningCount();
    [CompilerGeneratedAttribute]
public void set_WarningCount(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_SortCount();
    [CompilerGeneratedAttribute]
public void set_SortCount(UInt32 value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.Analytics.AnalyticsOptions : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private static AnalyticsOptions <Default>k__BackingField;
    [NullableAttribute("1")]
public static ReadOnly DefaultReadOnly;
    internal string ClientContextIdValue;
    [NullableAttribute("1")]
internal Dictionary`2<string, object> NamedParameters;
    [NullableAttribute("1")]
internal List`1<object> PositionalParameters;
    internal CancellationToken Token;
    internal AnalyticsScanConsistency ScanConsistencyValue;
    internal bool ReadonlyValue;
    [CompilerGeneratedAttribute]
private int <PriorityValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QueryContext>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BucketName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScopeName>k__BackingField;
    [NullableAttribute("1")]
internal static AnalyticsOptions Default { get; }
    internal int PriorityValue { get; internal set; }
    internal Nullable`1<TimeSpan> TimeoutValue { get; internal set; }
    internal IRetryStrategy RetryStrategyValue { get; internal set; }
    internal IRequestSpan RequestSpanValue { get; private set; }
    internal string QueryContext { get; internal set; }
    internal string BucketName { get; internal set; }
    internal string ScopeName { get; internal set; }
    private static AnalyticsOptions();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static AnalyticsOptions get_Default();
    [CompilerGeneratedAttribute]
internal int get_PriorityValue();
    [CompilerGeneratedAttribute]
internal void set_PriorityValue(int value);
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [CompilerGeneratedAttribute]
internal void set_RetryStrategyValue(IRetryStrategy value);
    [CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    [NullableContextAttribute("1")]
public AnalyticsOptions RequestSpan(IRequestSpan span);
    [NullableContextAttribute("1")]
public AnalyticsOptions RetryStrategy(IRetryStrategy retryStrategy);
    [NullableContextAttribute("1")]
public AnalyticsOptions ScanConsistency(AnalyticsScanConsistency scanConsistency);
    [NullableContextAttribute("1")]
public AnalyticsOptions Readonly(bool readOnly);
    [NullableContextAttribute("1")]
public AnalyticsOptions Raw(string key, object value);
    [NullableContextAttribute("1")]
public AnalyticsOptions ClientContextId(string clientContextId);
    [NullableContextAttribute("1")]
public AnalyticsOptions Parameter(string parameterName, object value);
    [NullableContextAttribute("1")]
public AnalyticsOptions Parameter(object value);
    [NullableContextAttribute("1")]
public AnalyticsOptions Timeout(TimeSpan timeout);
    [NullableContextAttribute("1")]
public AnalyticsOptions Priority(bool priority);
    [NullableContextAttribute("1")]
public AnalyticsOptions CancellationToken(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
internal string get_QueryContext();
    [CompilerGeneratedAttribute]
internal void set_QueryContext(string value);
    [CompilerGeneratedAttribute]
internal string get_BucketName();
    [CompilerGeneratedAttribute]
internal void set_BucketName(string value);
    [CompilerGeneratedAttribute]
internal string get_ScopeName();
    [CompilerGeneratedAttribute]
internal void set_ScopeName(string value);
    [NullableContextAttribute("1")]
[RequiresUnreferencedCodeAttribute("Couchbase Analytics might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase Analytics might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
internal string GetParametersAsJson();
    [NullableContextAttribute("1")]
[RequiresUnreferencedCodeAttribute("Couchbase Analytics might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase Analytics might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
internal string GetFormValuesAsJson(string statement);
    [NullableContextAttribute("1")]
internal IDictionary`2<string, object> GetFormValues(string statement);
    [NullableContextAttribute("1")]
private string CleanStatement(string statement);
    public void Deconstruct(String& clientContextIdValue, IReadOnlyDictionary`2& namedParameters, IReadOnlyList`1& positionalParameters, CancellationToken& token, AnalyticsScanConsistency& scanConsistencyValue, Boolean& readonlyValue, Int32& priorityValue, Nullable`1& timeoutValue, IRetryStrategy& retryStrategyValue, IRequestSpan& requestSpanValue, String& queryContext, String& bucketName, String& scopeName);
    [NullableContextAttribute("1")]
public ReadOnly AsReadOnly();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.Analytics.AnalyticsRequest : RequestBase {
    [CompilerGeneratedAttribute]
private bool <Idempotent>k__BackingField;
    [CompilerGeneratedAttribute]
private AnalyticsOptions <Options>k__BackingField;
    public bool Idempotent { get; }
    public AnalyticsOptions Options { get; public set; }
    public AnalyticsRequest(bool idempotent);
    [NullableContextAttribute("1")]
public static AnalyticsRequest Create(string statement, AnalyticsOptions options);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Use the overload without IValueRecorder, this overload will be removed in a future version.")]
public static AnalyticsRequest Create(string statement, IValueRecorder recorder, AnalyticsOptions options);
    [CompilerGeneratedAttribute]
public virtual bool get_Idempotent();
    [CompilerGeneratedAttribute]
public AnalyticsOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(AnalyticsOptions value);
    public sealed virtual void StopRecording();
    public sealed virtual void StopRecording(Type errorType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Couchbase.Analytics.AnalyticsResultBase`1 : object {
    [NullableAttribute("2")]
private IDisposable _ownedForCleanup;
    [CompilerGeneratedAttribute]
private Stream <ResponseStream>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private AnalyticsMetaData <MetaData>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Error> <Errors>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpStatusCode <HttpStatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Exception <NoRetryException>k__BackingField;
    public IAsyncEnumerable`1<T> Rows { get; }
    protected Stream ResponseStream { get; }
    [NullableAttribute("2")]
public AnalyticsMetaData MetaData { get; public set; }
    public List`1<Error> Errors { get; public set; }
    public HttpStatusCode HttpStatusCode { get; public set; }
    public RetryReason RetryReason { get; protected set; }
    [NullableAttribute("2")]
public Exception NoRetryException { get; public set; }
    protected AnalyticsResultBase`1(Stream responseStream, IDisposable ownedForCleanup);
    public sealed virtual IAsyncEnumerable`1<T> get_Rows();
    [CompilerGeneratedAttribute]
protected Stream get_ResponseStream();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual AnalyticsMetaData get_MetaData();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_MetaData(AnalyticsMetaData value);
    [CompilerGeneratedAttribute]
public List`1<Error> get_Errors();
    [CompilerGeneratedAttribute]
public void set_Errors(List`1<Error> value);
    [CompilerGeneratedAttribute]
public HttpStatusCode get_HttpStatusCode();
    [CompilerGeneratedAttribute]
public void set_HttpStatusCode(HttpStatusCode value);
    public bool ShouldRetry();
    private void SetRetryReasonIfFailed();
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
    [CompilerGeneratedAttribute]
protected void set_RetryReason(RetryReason value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual Exception get_NoRetryException();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual void set_NoRetryException(Exception value);
    public abstract virtual Task InitializeAsync(CancellationToken cancellationToken);
    public abstract virtual IAsyncEnumerator`1<T> GetAsyncEnumerator(CancellationToken cancellationToken);
    public virtual void Dispose();
}
public enum Couchbase.Analytics.AnalyticsScanConsistency : Enum {
    public int value__;
    [DescriptionAttribute("not_bounded")]
public static AnalyticsScanConsistency NotBounded;
    [DescriptionAttribute("request_plus")]
public static AnalyticsScanConsistency RequestPlus;
}
public enum Couchbase.Analytics.AnalyticsStatus : Enum {
    public int value__;
    public static AnalyticsStatus Success;
    public static AnalyticsStatus Running;
    public static AnalyticsStatus Errors;
    public static AnalyticsStatus Completed;
    public static AnalyticsStatus Stopped;
    public static AnalyticsStatus Timeout;
    public static AnalyticsStatus Fatal;
    public static AnalyticsStatus Failed;
    public static AnalyticsStatus Closed;
}
public class Couchbase.Analytics.AnalyticsWarning : object {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Code>k__BackingField;
    public string Message { get; public set; }
    public int Code { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public int get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Couchbase.Analytics.BlockAnalyticsResult`1 : AnalyticsResultBase`1<T> {
    private ITypeSerializer _deserializer;
    private bool _enumerated;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IEnumerable`1<T> _rows;
    public BlockAnalyticsResult`1(Stream responseStream, ITypeSerializer deserializer, IDisposable ownedForCleanup);
    [AsyncStateMachineAttribute("Couchbase.Analytics.BlockAnalyticsResult`1/<InitializeAsync>d__4")]
public virtual Task InitializeAsync(CancellationToken cancellationToken);
    public virtual IAsyncEnumerator`1<T> GetAsyncEnumerator(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Analytics.IAnalyticsClient {
    public Nullable`1<DateTime> LastActivity { get; }
    public abstract virtual Nullable`1<DateTime> get_LastActivity();
    public abstract virtual Task`1<IAnalyticsResult`1<T>> QueryAsync(string statement, AnalyticsOptions options);
}
internal interface Couchbase.Analytics.IAnalyticsRequest {
    public Dictionary`2<string, object> NamedParameters { get; public set; }
    public List`1<object> PositionalArguments { get; public set; }
    public string OriginalStatement { get; }
    public bool ReadOnly { get; public set; }
    public string BucketName { get; public set; }
    public string ScopeName { get; public set; }
    public abstract virtual Dictionary`2<string, object> get_NamedParameters();
    public abstract virtual void set_NamedParameters(Dictionary`2<string, object> value);
    public abstract virtual List`1<object> get_PositionalArguments();
    public abstract virtual void set_PositionalArguments(List`1<object> value);
    public abstract virtual string get_OriginalStatement();
    public abstract virtual IDictionary`2<string, object> GetFormValues();
    public abstract virtual string GetFormValuesAsJson();
    public abstract virtual IAnalyticsRequest WithStatement(string statement);
    public abstract virtual IAnalyticsRequest WithClientContextId(string contextId);
    public abstract virtual IAnalyticsRequest AddNamedParameter(string key, object value);
    public abstract virtual IAnalyticsRequest AddPositionalParameter(object value);
    public abstract virtual IAnalyticsRequest WithTimeout(TimeSpan timeout);
    public abstract virtual IAnalyticsRequest Priority(bool priority);
    public abstract virtual IAnalyticsRequest Priority(int priority);
    public abstract virtual IAnalyticsRequest ScanConsistency(AnalyticsScanConsistency scanConsistency);
    public abstract virtual bool get_ReadOnly();
    public abstract virtual void set_ReadOnly(bool value);
    public abstract virtual string get_BucketName();
    public abstract virtual void set_BucketName(string value);
    public abstract virtual string get_ScopeName();
    public abstract virtual void set_ScopeName(string value);
}
[NullableContextAttribute("2")]
public interface Couchbase.Analytics.IAnalyticsResult`1 {
    [NullableAttribute("1")]
public IAsyncEnumerable`1<T> Rows { get; }
    public AnalyticsMetaData MetaData { get; }
    [NullableContextAttribute("1")]
public abstract virtual IAsyncEnumerable`1<T> get_Rows();
    public abstract virtual AnalyticsMetaData get_MetaData();
}
public enum Couchbase.Analytics.IngestMethod : Enum {
    public int value__;
    public static IngestMethod Insert;
    public static IngestMethod Upsert;
    public static IngestMethod Replace;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Analytics.IngestOptions : object {
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ExpiryValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IngestMethod <IngestMethodValue>k__BackingField;
    [DynamicAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<object, string> <IdGeneratorValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    internal TimeSpan TimeoutValue { get; internal set; }
    internal TimeSpan ExpiryValue { get; internal set; }
    internal IngestMethod IngestMethodValue { get; internal set; }
    [DynamicAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal Func`2<object, string> IdGeneratorValue { get; internal set; }
    internal CancellationToken TokenValue { get; internal set; }
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_ExpiryValue();
    [CompilerGeneratedAttribute]
internal void set_ExpiryValue(TimeSpan value);
    [CompilerGeneratedAttribute]
internal IngestMethod get_IngestMethodValue();
    [CompilerGeneratedAttribute]
internal void set_IngestMethodValue(IngestMethod value);
    [CompilerGeneratedAttribute]
internal Func`2<object, string> get_IdGeneratorValue();
    [CompilerGeneratedAttribute]
internal void set_IdGeneratorValue(Func`2<object, string> value);
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    public IngestOptions IdGenerator(Func`2<object, string> idGenerator);
    public IngestOptions Timeout(TimeSpan timeout);
    public IngestOptions Expiry(TimeSpan expiry);
    public IngestOptions IngestMethod(IngestMethod ingestMethod);
    public IngestOptions CancellationToken(CancellationToken token);
}
internal class Couchbase.Analytics.MetricsData : object {
    [CompilerGeneratedAttribute]
private string <elapsedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <executionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <resultCount>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <resultSize>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <mutationCount>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <errorCount>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <warningCount>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <sortCount>k__BackingField;
    public string elapsedTime { get; public set; }
    public string executionTime { get; public set; }
    public UInt32 resultCount { get; public set; }
    public UInt32 resultSize { get; public set; }
    public UInt32 mutationCount { get; public set; }
    public UInt32 errorCount { get; public set; }
    public UInt32 warningCount { get; public set; }
    public UInt32 sortCount { get; public set; }
    [CompilerGeneratedAttribute]
public string get_elapsedTime();
    [CompilerGeneratedAttribute]
public void set_elapsedTime(string value);
    [CompilerGeneratedAttribute]
public string get_executionTime();
    [CompilerGeneratedAttribute]
public void set_executionTime(string value);
    [CompilerGeneratedAttribute]
public UInt32 get_resultCount();
    [CompilerGeneratedAttribute]
public void set_resultCount(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_resultSize();
    [CompilerGeneratedAttribute]
public void set_resultSize(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_mutationCount();
    [CompilerGeneratedAttribute]
public void set_mutationCount(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_errorCount();
    [CompilerGeneratedAttribute]
public void set_errorCount(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_warningCount();
    [CompilerGeneratedAttribute]
public void set_warningCount(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_sortCount();
    [CompilerGeneratedAttribute]
public void set_sortCount(UInt32 value);
    internal AnalyticsMetrics ToMetrics();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Couchbase.Analytics.StreamingAnalyticsResult`1 : AnalyticsResultBase`1<T> {
    private IStreamingTypeDeserializer _deserializer;
    [NullableAttribute("2")]
private IJsonStreamReader _reader;
    private bool _hasReadToResult;
    private bool _hasReadResult;
    private bool _hasFinishedReading;
    public StreamingAnalyticsResult`1(Stream responseStream, IStreamingTypeDeserializer deserializer, IDisposable ownedForCleanup);
    [AsyncStateMachineAttribute("Couchbase.Analytics.StreamingAnalyticsResult`1/<InitializeAsync>d__6")]
public virtual Task InitializeAsync(CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("Couchbase.Analytics.StreamingAnalyticsResult`1/<GetAsyncEnumerator>d__7")]
public virtual IAsyncEnumerator`1<T> GetAsyncEnumerator(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Couchbase.Analytics.StreamingAnalyticsResult`1/<ReadResponseAttributes>d__8")]
internal Task ReadResponseAttributes(CancellationToken cancellationToken);
    public virtual void Dispose();
}
internal class Couchbase.Analytics.WarningData : object {
    [CompilerGeneratedAttribute]
private string <msg>k__BackingField;
    [CompilerGeneratedAttribute]
private int <code>k__BackingField;
    public string msg { get; public set; }
    public int code { get; public set; }
    [CompilerGeneratedAttribute]
public string get_msg();
    [CompilerGeneratedAttribute]
public void set_msg(string value);
    [CompilerGeneratedAttribute]
public int get_code();
    [CompilerGeneratedAttribute]
public void set_code(int value);
    internal AnalyticsWarning ToWarning();
}
[AttributeUsageAttribute("2112")]
internal class Couchbase.AspMvcActionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <AnonymousProperty>k__BackingField;
    [NotNullAttribute]
public string AnonymousProperty { get; private set; }
    public AspMvcActionAttribute(string anonymousProperty);
    [CompilerGeneratedAttribute]
public string get_AnonymousProperty();
    [CompilerGeneratedAttribute]
private void set_AnonymousProperty(string value);
}
[AttributeUsageAttribute("2176")]
internal class Couchbase.AspMvcActionSelectorAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class Couchbase.AspMvcAreaAttribute : PathReferenceAttribute {
    [CompilerGeneratedAttribute]
private string <AnonymousProperty>k__BackingField;
    [NotNullAttribute]
public string AnonymousProperty { get; private set; }
    public AspMvcAreaAttribute(string anonymousProperty);
    [CompilerGeneratedAttribute]
public string get_AnonymousProperty();
    [CompilerGeneratedAttribute]
private void set_AnonymousProperty(string value);
}
[AttributeUsageAttribute("1")]
internal class Couchbase.AspMvcAreaMasterLocationFormatAttribute : Attribute {
    public AspMvcAreaMasterLocationFormatAttribute(string format);
}
[AttributeUsageAttribute("1")]
internal class Couchbase.AspMvcAreaPartialViewLocationFormatAttribute : Attribute {
    public AspMvcAreaPartialViewLocationFormatAttribute(string format);
}
[AttributeUsageAttribute("1")]
internal class Couchbase.AspMvcAreaViewLocationFormatAttribute : Attribute {
    public AspMvcAreaViewLocationFormatAttribute(string format);
}
[AttributeUsageAttribute("2112")]
internal class Couchbase.AspMvcControllerAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <AnonymousProperty>k__BackingField;
    [NotNullAttribute]
public string AnonymousProperty { get; private set; }
    public AspMvcControllerAttribute(string anonymousProperty);
    [CompilerGeneratedAttribute]
public string get_AnonymousProperty();
    [CompilerGeneratedAttribute]
private void set_AnonymousProperty(string value);
}
[AttributeUsageAttribute("2048")]
internal class Couchbase.AspMvcDisplayTemplateAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class Couchbase.AspMvcEditorTemplateAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class Couchbase.AspMvcMasterAttribute : Attribute {
}
[AttributeUsageAttribute("1")]
internal class Couchbase.AspMvcMasterLocationFormatAttribute : Attribute {
    public AspMvcMasterLocationFormatAttribute(string format);
}
[AttributeUsageAttribute("2048")]
internal class Couchbase.AspMvcModelTypeAttribute : Attribute {
}
[AttributeUsageAttribute("2112")]
internal class Couchbase.AspMvcPartialViewAttribute : PathReferenceAttribute {
}
[AttributeUsageAttribute("1")]
internal class Couchbase.AspMvcPartialViewLocationFormatAttribute : Attribute {
    public AspMvcPartialViewLocationFormatAttribute(string format);
}
[AttributeUsageAttribute("68")]
internal class Couchbase.AspMvcSupressViewErrorAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class Couchbase.AspMvcTemplateAttribute : Attribute {
}
[AttributeUsageAttribute("2112")]
internal class Couchbase.AspMvcViewAttribute : PathReferenceAttribute {
}
[AttributeUsageAttribute("1")]
internal class Couchbase.AspMvcViewLocationFormatAttribute : Attribute {
    public AspMvcViewLocationFormatAttribute(string format);
}
public class Couchbase.AuthenticationFailureException : CouchbaseException {
    public AuthenticationFailureException(string message);
    public AuthenticationFailureException(string message, Exception innerException);
    public AuthenticationFailureException(IErrorContext context);
}
[AttributeUsageAttribute("4")]
[BaseTypeRequiredAttribute("System.Attribute")]
internal class Couchbase.BaseTypeRequiredAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type <BaseType>k__BackingField;
    [NotNullAttribute]
public Type BaseType { get; private set; }
    public BaseTypeRequiredAttribute(Type baseType);
    [CompilerGeneratedAttribute]
public Type get_BaseType();
    [CompilerGeneratedAttribute]
private void set_BaseType(Type value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Couchbase.BucketExtensions : object {
    [ExtensionAttribute]
public static Task`1<IViewResult`2<TKey, TValue>> ViewQueryAsync(IBucket bucket, string designDocument, string viewName);
    [ExtensionAttribute]
public static Task`1<IViewResult`2<TKey, TValue>> ViewQueryAsync(IBucket bucket, string designDocument, string viewName, Action`1<ViewOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<IPingReport> PingAsync(IBucket bucket, ServiceType[] serviceTypes);
    [ExtensionAttribute]
public static Task`1<IPingReport> PingAsync(IBucket bucket, Action`1<PingOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<IPingReport> PingAsync(IBucket bucket, string reportId, ServiceType[] serviceTypes);
}
public class Couchbase.BucketMissingException : CouchbaseException {
    public BucketMissingException(string message);
    public BucketMissingException(string message, Exception innerException);
}
[AttributeUsageAttribute("6592")]
internal class Couchbase.CanBeNullAttribute : Attribute {
}
[AttributeUsageAttribute("1036")]
internal class Couchbase.CannotApplyEqualityOperatorAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Cluster : object {
    internal static string RequiresUnreferencedCodeMessage;
    internal static string RequiresDynamicCodeMessage;
    private ILogger`1<Cluster> _logger;
    private IRetryOrchestrator _retryOrchestrator;
    private object _syncObject;
    private bool _disposed;
    private ClusterContext _context;
    private bool _hasBootStrapped;
    private SemaphoreSlim _bootstrapLock;
    private IRedactor _redactor;
    private IBootstrapper _bootstrapper;
    private List`1<Exception> _deferredExceptions;
    private ClusterState modreq(System.Runtime.CompilerServices.IsVolatile) _clusterState;
    private IRequestTracer _tracer;
    private IRetryStrategy _retryStrategy;
    [NullableAttribute("2")]
private MeterForwarder _meterForwarder;
    internal LazyService`1<IQueryClient> LazyQueryClient;
    internal LazyService`1<ISearchClient> LazySearchClient;
    internal LazyService`1<IAnalyticsClient> LazyAnalyticsClient;
    internal LazyService`1<IUserManager> LazyUserManager;
    internal LazyService`1<IBucketManager> LazyBucketManager;
    internal LazyService`1<IQueryIndexManager> LazyQueryManager;
    internal LazyService`1<ISearchIndexManager> LazySearchManager;
    internal LazyService`1<IAnalyticsIndexManager> LazyAnalyticsIndexManager;
    internal LazyService`1<IEventingFunctionManagerFactory> LazyEventingFunctionManagerFactory;
    internal Lazy`1<IEventingFunctionManager> LazyEventingFunctionManager;
    internal Lazy`1<Transactions> LazyTransactions;
    public IServiceProvider ClusterServices { get; }
    public IQueryIndexManager QueryIndexes { get; }
    public IAnalyticsIndexManager AnalyticsIndexes { get; }
    public ISearchIndexManager SearchIndexes { get; }
    public IBucketManager Buckets { get; }
    public IUserManager Users { get; }
    public IEventingFunctionManager EventingFunctions { get; }
    public Transactions Transactions { get; }
    private bool IsBootstrapped { get; }
    private bool Couchbase.Core.Bootstrapping.IBootstrappable.IsBootstrapped { get; }
    private List`1<Exception> Couchbase.Core.Bootstrapping.IBootstrappable.DeferredExceptions { get; }
    internal Cluster(ClusterOptions clusterOptions);
    public sealed virtual IServiceProvider get_ClusterServices();
    [RequiresUnreferencedCodeAttribute("The Couchbase SDK might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("The Couchbase SDK might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public static Task`1<ICluster> ConnectAsync(string connectionString, Action`1<ClusterOptions> configureOptions);
    [RequiresUnreferencedCodeAttribute("The Couchbase SDK might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("The Couchbase SDK might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public static Task`1<ICluster> ConnectAsync(string connectionString, ClusterOptions options);
    [RequiresUnreferencedCodeAttribute("The Couchbase SDK might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("The Couchbase SDK might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public static Task`1<ICluster> ConnectAsync(string connectionString, string username, string password);
    [AsyncStateMachineAttribute("Couchbase.Cluster/<ConnectAsync>d__33")]
[RequiresUnreferencedCodeAttribute("The Couchbase SDK might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("The Couchbase SDK might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public static Task`1<ICluster> ConnectAsync(ClusterOptions options);
    public sealed virtual ValueTask`1<IBucket> BucketAsync(string name);
    [AsyncStateMachineAttribute("Couchbase.Cluster/<GetOrCreateBucketAsync>d__35")]
private Task`1<IBucket> GetOrCreateBucketAsync(string name);
    [AsyncStateMachineAttribute("Couchbase.Cluster/<DiagnosticsAsync>d__36")]
public sealed virtual Task`1<IDiagnosticsReport> DiagnosticsAsync(DiagnosticsOptions options);
    [AsyncStateMachineAttribute("Couchbase.Cluster/<PingAsync>d__37")]
public sealed virtual Task`1<IPingReport> PingAsync(PingOptions options);
    [AsyncStateMachineAttribute("Couchbase.Cluster/<WaitUntilReadyAsync>d__38")]
public sealed virtual Task WaitUntilReadyAsync(TimeSpan timeout, WaitUntilReadyOptions options);
    [AsyncStateMachineAttribute("Couchbase.Cluster/<QueryAsync>d__39`1")]
public sealed virtual Task`1<IQueryResult`1<T>> QueryAsync(string statement, QueryOptions options);
    [AsyncStateMachineAttribute("Couchbase.Cluster/<AnalyticsQueryAsync>d__40`1")]
public sealed virtual Task`1<IAnalyticsResult`1<T>> AnalyticsQueryAsync(string statement, AnalyticsOptions options);
    [AsyncStateMachineAttribute("Couchbase.Cluster/<SearchQueryAsync>d__41")]
public sealed virtual Task`1<ISearchResult> SearchQueryAsync(string indexName, ISearchQuery query, SearchOptions options);
    [AsyncStateMachineAttribute("Couchbase.Cluster/<SearchAsync>d__42")]
public sealed virtual Task`1<ISearchResult> SearchAsync(string indexName, SearchRequest searchRequest, SearchOptions options);
    public sealed virtual IQueryIndexManager get_QueryIndexes();
    public sealed virtual IAnalyticsIndexManager get_AnalyticsIndexes();
    public sealed virtual ISearchIndexManager get_SearchIndexes();
    public sealed virtual IBucketManager get_Buckets();
    public sealed virtual IUserManager get_Users();
    public sealed virtual IEventingFunctionManager get_EventingFunctions();
    public sealed virtual Transactions get_Transactions();
    internal void UpdateClusterCapabilities();
    internal void StartBootstrapper();
    [AsyncStateMachineAttribute("Couchbase.Cluster/<Couchbase-Core-Bootstrapping-IBootstrappable-BootStrapAsync>d__59")]
private sealed virtual override Task Couchbase.Core.Bootstrapping.IBootstrappable.BootStrapAsync();
    private bool get_IsBootstrapped();
    private sealed virtual override bool Couchbase.Core.Bootstrapping.IBootstrappable.get_IsBootstrapped();
    private sealed virtual override List`1<Exception> Couchbase.Core.Bootstrapping.IBootstrappable.get_DeferredExceptions();
    private void ThrowIfNotBootstrapped();
    [AsyncStateMachineAttribute("Couchbase.Cluster/<EnsureBootstrapped>d__67")]
protected internal virtual Task EnsureBootstrapped();
    public sealed virtual void Dispose();
    public sealed virtual ValueTask DisposeAsync();
    [CompilerGeneratedAttribute]
private IEventingFunctionManager <.ctor>b__27_0();
    [CompilerGeneratedAttribute]
private Transactions <.ctor>b__27_1();
}
[ExtensionAttribute]
public static class Couchbase.ClusterExtensions : object {
    [ExtensionAttribute]
public static Task`1<IDiagnosticsReport> DiagnosticsAsync(ICluster cluster, Action`1<DiagnosticsOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<IQueryResult`1<T>> QueryAsync(ICluster cluster, string statement, Action`1<QueryOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<IQueryResult`1<T>> QueryAsync(ICluster cluster, string statement);
    [ExtensionAttribute]
[InterfaceStabilityAttribute("2")]
public static Task`1<IQueryResult`1<T>> QueryInterpolatedAsync(ICluster cluster, QueryInterpolatedStringHandler& handler);
    [ExtensionAttribute]
[InterfaceStabilityAttribute("2")]
public static Task`1<IQueryResult`1<T>> QueryInterpolatedAsync(ICluster cluster, Action`1<QueryOptions> configureOptions, QueryInterpolatedStringHandler& handler);
    [ExtensionAttribute]
[InterfaceStabilityAttribute("2")]
public static Task`1<IQueryResult`1<T>> QueryInterpolatedAsync(ICluster cluster, QueryOptions options, QueryInterpolatedStringHandler& handler);
    [ExtensionAttribute]
[ObsoleteAttribute("Use the async version instead.")]
public static IAnalyticsResult`1<T> AnalyticsQuery(ICluster cluster, string statement, Action`1<AnalyticsOptions> configureOptions);
    [ExtensionAttribute]
[ObsoleteAttribute("Use the async version instead.")]
public static IAnalyticsResult`1<T> AnalyticsQuery(ICluster cluster, string statement, AnalyticsOptions options);
    [ExtensionAttribute]
public static Task`1<IAnalyticsResult`1<T>> AnalyticsQueryAsync(ICluster cluster, string statement, Action`1<AnalyticsOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<ISearchResult> SearchQueryAsync(ICluster cluster, string indexName, ISearchQuery query, Action`1<SearchOptions> configureOptions);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.ClusterOptions : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ConnectionString <ConnectionStringValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Buckets>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ILoggerFactory <Logging>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ITypeSerializer <Serializer>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ITypeTranscoder <Transcoder>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IDnsResolver <DnsResolver>k__BackingField;
    [CompilerGeneratedAttribute]
private TracingOptions <TracingOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ThresholdOptions <ThresholdOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private OrphanOptions <OrphanTracingOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private LoggingMeterOptions <LoggingMeterOptions>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategy>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <UserName>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ConfigUpdatingTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <KvConnectTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <KvTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <KvScanTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <KvDurabilityTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ViewTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <QueryTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <AnalyticsTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <SearchTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ManagementTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <KvSendQueueCapacity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <EnableTls>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableMutationTokens>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TcpKeepAliveTime>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TcpKeepAliveInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ForceIPv4>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ConfigPollInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ConfigPollFloorInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ConfigIdleRedialTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumKvConnections>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxKvConnections>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <IdleKvConnectionTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxHttpConnections>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <IdleHttpConnectionTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <HttpConnectionLifetime>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private CircuitBreakerConfiguration <CircuitBreakerConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableOperationDurationTracing>k__BackingField;
    [CompilerGeneratedAttribute]
private RedactionLevel <RedactionLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private int <BootstrapHttpPort>k__BackingField;
    [CompilerGeneratedAttribute]
private int <BootstrapHttpPortTls>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <BootstrapPollInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableExpect100Continue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableCertificateAuthentication>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableCertificateRevocation>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableConfigPolling>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableTcpKeepAlives>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableDnsSrvResolution>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NetworkResolution>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <EffectiveNetworkResolution>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Compression>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CompressionMinSize>k__BackingField;
    [CompilerGeneratedAttribute]
private float <CompressionMinRatio>k__BackingField;
    [CompilerGeneratedAttribute]
private TuningOptions <Tuning>k__BackingField;
    [CompilerGeneratedAttribute]
private ExperimentalOptions <Experiments>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <KvIgnoreRemoteCertificateNameMismatch>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private RemoteCertificateValidationCallback <KvCertificateCallbackValidation>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HttpIgnoreRemoteCertificateMismatch>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private RemoteCertificateValidationCallback <HttpCertificateCallbackValidation>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ICertificateFactory <X509CertificateFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UnorderedExecutionEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ForceIpAsTargetHost>k__BackingField;
    [CompilerGeneratedAttribute]
private SslProtocols <EnabledSslProtocols>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<TlsCipherSuite> <EnabledTlsCipherSuites>k__BackingField;
    [UnsupportedOSPlatformGuardAttribute("windows")]
internal bool PlatformSupportsCipherSuite;
    private IDictionary`2<Type, IServiceFactory> _services;
    [NullableAttribute("2")]
internal ConnectionString ConnectionStringValue { get; internal set; }
    [NullableAttribute("2")]
public string ConnectionString { get; public set; }
    public IList`1<string> Buckets { get; public set; }
    [NullableAttribute("2")]
public ILoggerFactory Logging { get; public set; }
    [NullableAttribute("2")]
public ITypeSerializer Serializer { get; public set; }
    [NullableAttribute("2")]
public ITypeTranscoder Transcoder { get; public set; }
    [NullableAttribute("2")]
public IDnsResolver DnsResolver { get; public set; }
    public TracingOptions TracingOptions { get; public set; }
    public ThresholdOptions ThresholdOptions { get; public set; }
    public OrphanOptions OrphanTracingOptions { get; public set; }
    public LoggingMeterOptions LoggingMeterOptions { get; public set; }
    [NullableAttribute("2")]
public IRetryStrategy RetryStrategy { get; public set; }
    [NullableAttribute("2")]
public string UserName { get; public set; }
    [NullableAttribute("2")]
public string Password { get; public set; }
    public TimeSpan ConfigUpdatingTimeout { get; public set; }
    public TimeSpan KvConnectTimeout { get; public set; }
    public TimeSpan KvTimeout { get; public set; }
    public TimeSpan KvScanTimeout { get; public set; }
    public TimeSpan KvDurabilityTimeout { get; public set; }
    public TimeSpan ViewTimeout { get; public set; }
    public TimeSpan QueryTimeout { get; public set; }
    public TimeSpan AnalyticsTimeout { get; public set; }
    public TimeSpan SearchTimeout { get; public set; }
    public TimeSpan ManagementTimeout { get; public set; }
    [InterfaceStabilityAttribute("2")]
public UInt32 KvSendQueueCapacity { get; public set; }
    public Nullable`1<bool> EnableTls { get; public set; }
    public bool EnableMutationTokens { get; public set; }
    public TimeSpan TcpKeepAliveTime { get; public set; }
    public TimeSpan TcpKeepAliveInterval { get; public set; }
    public bool ForceIPv4 { get; public set; }
    public TimeSpan ConfigPollInterval { get; public set; }
    public TimeSpan ConfigPollFloorInterval { get; public set; }
    public TimeSpan ConfigIdleRedialTimeout { get; public set; }
    public int NumKvConnections { get; public set; }
    public int MaxKvConnections { get; public set; }
    public TimeSpan IdleKvConnectionTimeout { get; public set; }
    public int MaxHttpConnections { get; public set; }
    public TimeSpan IdleHttpConnectionTimeout { get; public set; }
    public TimeSpan HttpConnectionLifetime { get; public set; }
    [NullableAttribute("2")]
public CircuitBreakerConfiguration CircuitBreakerConfiguration { get; public set; }
    public bool EnableOperationDurationTracing { get; public set; }
    public RedactionLevel RedactionLevel { get; public set; }
    public int BootstrapHttpPort { get; public set; }
    public int BootstrapHttpPortTls { get; public set; }
    public TimeSpan BootstrapPollInterval { get; public set; }
    public bool EnableExpect100Continue { get; public set; }
    [ObsoleteAttribute("This property is ignored; set the ClusterOptions.X509CertificateFactory property to a  ICertificateFactory instance - Couchbase.Core.IO.Authentication.X509.CertificateStoreFactory for example.")]
public bool EnableCertificateAuthentication { get; public set; }
    public bool EnableCertificateRevocation { get; public set; }
    [ObsoleteAttribute("Use KvIgnoreRemoteCertificateNameMismatch and/or HttpIgnoreRemoteCertificateMismatch instead of this property.")]
public bool IgnoreRemoteCertificateNameMismatch { get; public set; }
    public bool EnableConfigPolling { get; public set; }
    public bool EnableTcpKeepAlives { get; public set; }
    public bool EnableDnsSrvResolution { get; public set; }
    public string NetworkResolution { get; public set; }
    [NullableAttribute("2")]
[CanBeNullAttribute]
internal string EffectiveNetworkResolution { get; internal set; }
    internal bool HasNetworkResolution { get; }
    public bool Compression { get; public set; }
    public int CompressionMinSize { get; public set; }
    public float CompressionMinRatio { get; public set; }
    public TuningOptions Tuning { get; public set; }
    public ExperimentalOptions Experiments { get; public set; }
    public static ClusterOptions Default { get; }
    internal bool EffectiveEnableTls { get; }
    public bool KvIgnoreRemoteCertificateNameMismatch { get; public set; }
    [NullableAttribute("2")]
public RemoteCertificateValidationCallback KvCertificateCallbackValidation { get; public set; }
    public bool HttpIgnoreRemoteCertificateMismatch { get; public set; }
    [NullableAttribute("2")]
public RemoteCertificateValidationCallback HttpCertificateCallbackValidation { get; public set; }
    [NullableAttribute("2")]
public ICertificateFactory X509CertificateFactory { get; public set; }
    public bool UnorderedExecutionEnabled { get; public set; }
    public bool ForceIpAsTargetHost { get; public set; }
    public SslProtocols EnabledSslProtocols { get; public set; }
    [UnsupportedOSPlatformAttribute("windows")]
public List`1<TlsCipherSuite> EnabledTlsCipherSuites { get; public set; }
    internal bool IsCapella { get; }
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal ConnectionString get_ConnectionStringValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_ConnectionStringValue(ConnectionString value);
    [NullableContextAttribute("2")]
public string get_ConnectionString();
    [NullableContextAttribute("2")]
public void set_ConnectionString(string value);
    [InterfaceStabilityAttribute("2")]
public ClusterOptions ApplyProfile(string profileName);
    public ClusterOptions ApplyProfile(ConfigProfile profile);
    public ClusterOptions WithConnectionString(string connectionString);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Buckets();
    [CompilerGeneratedAttribute]
public void set_Buckets(IList`1<string> value);
    public ClusterOptions WithBuckets(String[] bucketNames);
    public ClusterOptions WithCredentials(string username, string password);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ILoggerFactory get_Logging();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Logging(ILoggerFactory value);
    public ClusterOptions WithLogging(ILoggerFactory loggerFactory);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ITypeSerializer get_Serializer();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Serializer(ITypeSerializer value);
    public ClusterOptions WithSerializer(ITypeSerializer serializer);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ITypeTranscoder get_Transcoder();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Transcoder(ITypeTranscoder value);
    public ClusterOptions WithTranscoder(ITypeTranscoder transcoder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public IDnsResolver get_DnsResolver();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_DnsResolver(IDnsResolver value);
    public ClusterOptions WithDnsResolver(IDnsResolver dnsResolver);
    [InterfaceStabilityAttribute("2")]
public ClusterOptions WithCompressionAlgorithm(ICompressionAlgorithm compressionAlgorithm);
    [InterfaceStabilityAttribute("2")]
public ClusterOptions WithCompressionAlgorithm();
    [CompilerGeneratedAttribute]
public TracingOptions get_TracingOptions();
    [CompilerGeneratedAttribute]
public void set_TracingOptions(TracingOptions value);
    public ClusterOptions WithTracing(TracingOptions options);
    public ClusterOptions WithTracing(Action`1<TracingOptions> configure);
    [CompilerGeneratedAttribute]
public ThresholdOptions get_ThresholdOptions();
    [CompilerGeneratedAttribute]
public void set_ThresholdOptions(ThresholdOptions value);
    public ClusterOptions WithThresholdTracing(ThresholdOptions options);
    public ClusterOptions WithThresholdTracing(Action`1<ThresholdOptions> configure);
    [CompilerGeneratedAttribute]
public OrphanOptions get_OrphanTracingOptions();
    [CompilerGeneratedAttribute]
public void set_OrphanTracingOptions(OrphanOptions value);
    public ClusterOptions WithOrphanTracing(OrphanOptions options);
    public ClusterOptions WithOrphanTracing(Action`1<OrphanOptions> configure);
    [CompilerGeneratedAttribute]
public LoggingMeterOptions get_LoggingMeterOptions();
    [CompilerGeneratedAttribute]
public void set_LoggingMeterOptions(LoggingMeterOptions value);
    public ClusterOptions WithLoggingMeterOptions(LoggingMeterOptions options);
    public ClusterOptions WithLoggingMeterOptions(Action`1<LoggingMeterOptions> configure);
    public ClusterOptions WithRetryStrategy(IRetryStrategy retryStrategy);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public IRetryStrategy get_RetryStrategy();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_RetryStrategy(IRetryStrategy value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_UserName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_UserName(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Password();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ConfigUpdatingTimeout();
    [CompilerGeneratedAttribute]
public void set_ConfigUpdatingTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_KvConnectTimeout();
    [CompilerGeneratedAttribute]
public void set_KvConnectTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_KvTimeout();
    [CompilerGeneratedAttribute]
public void set_KvTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_KvScanTimeout();
    [CompilerGeneratedAttribute]
public void set_KvScanTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_KvDurabilityTimeout();
    [CompilerGeneratedAttribute]
public void set_KvDurabilityTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ViewTimeout();
    [CompilerGeneratedAttribute]
public void set_ViewTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_QueryTimeout();
    [CompilerGeneratedAttribute]
public void set_QueryTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_AnalyticsTimeout();
    [CompilerGeneratedAttribute]
public void set_AnalyticsTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_SearchTimeout();
    [CompilerGeneratedAttribute]
public void set_SearchTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ManagementTimeout();
    [CompilerGeneratedAttribute]
public void set_ManagementTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public UInt32 get_KvSendQueueCapacity();
    [CompilerGeneratedAttribute]
public void set_KvSendQueueCapacity(UInt32 value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_EnableTls();
    [CompilerGeneratedAttribute]
public void set_EnableTls(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public bool get_EnableMutationTokens();
    [CompilerGeneratedAttribute]
public void set_EnableMutationTokens(bool value);
    [CompilerGeneratedAttribute]
public TimeSpan get_TcpKeepAliveTime();
    [CompilerGeneratedAttribute]
public void set_TcpKeepAliveTime(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_TcpKeepAliveInterval();
    [CompilerGeneratedAttribute]
public void set_TcpKeepAliveInterval(TimeSpan value);
    [CompilerGeneratedAttribute]
public bool get_ForceIPv4();
    [CompilerGeneratedAttribute]
public void set_ForceIPv4(bool value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ConfigPollInterval();
    [CompilerGeneratedAttribute]
public void set_ConfigPollInterval(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ConfigPollFloorInterval();
    [CompilerGeneratedAttribute]
public void set_ConfigPollFloorInterval(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ConfigIdleRedialTimeout();
    [CompilerGeneratedAttribute]
public void set_ConfigIdleRedialTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public int get_NumKvConnections();
    [CompilerGeneratedAttribute]
public void set_NumKvConnections(int value);
    [CompilerGeneratedAttribute]
public int get_MaxKvConnections();
    [CompilerGeneratedAttribute]
public void set_MaxKvConnections(int value);
    [CompilerGeneratedAttribute]
public TimeSpan get_IdleKvConnectionTimeout();
    [CompilerGeneratedAttribute]
public void set_IdleKvConnectionTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public int get_MaxHttpConnections();
    [CompilerGeneratedAttribute]
public void set_MaxHttpConnections(int value);
    [CompilerGeneratedAttribute]
public TimeSpan get_IdleHttpConnectionTimeout();
    [CompilerGeneratedAttribute]
public void set_IdleHttpConnectionTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_HttpConnectionLifetime();
    [CompilerGeneratedAttribute]
public void set_HttpConnectionLifetime(TimeSpan value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public CircuitBreakerConfiguration get_CircuitBreakerConfiguration();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_CircuitBreakerConfiguration(CircuitBreakerConfiguration value);
    [CompilerGeneratedAttribute]
public bool get_EnableOperationDurationTracing();
    [CompilerGeneratedAttribute]
public void set_EnableOperationDurationTracing(bool value);
    [CompilerGeneratedAttribute]
public RedactionLevel get_RedactionLevel();
    [CompilerGeneratedAttribute]
public void set_RedactionLevel(RedactionLevel value);
    [CompilerGeneratedAttribute]
public int get_BootstrapHttpPort();
    [CompilerGeneratedAttribute]
public void set_BootstrapHttpPort(int value);
    [CompilerGeneratedAttribute]
public int get_BootstrapHttpPortTls();
    [CompilerGeneratedAttribute]
public void set_BootstrapHttpPortTls(int value);
    [CompilerGeneratedAttribute]
public TimeSpan get_BootstrapPollInterval();
    [CompilerGeneratedAttribute]
public void set_BootstrapPollInterval(TimeSpan value);
    [CompilerGeneratedAttribute]
public bool get_EnableExpect100Continue();
    [CompilerGeneratedAttribute]
public void set_EnableExpect100Continue(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableCertificateAuthentication();
    [CompilerGeneratedAttribute]
public void set_EnableCertificateAuthentication(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableCertificateRevocation();
    [CompilerGeneratedAttribute]
public void set_EnableCertificateRevocation(bool value);
    public bool get_IgnoreRemoteCertificateNameMismatch();
    public void set_IgnoreRemoteCertificateNameMismatch(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableConfigPolling();
    [CompilerGeneratedAttribute]
public void set_EnableConfigPolling(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableTcpKeepAlives();
    [CompilerGeneratedAttribute]
public void set_EnableTcpKeepAlives(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableDnsSrvResolution();
    [CompilerGeneratedAttribute]
public void set_EnableDnsSrvResolution(bool value);
    [CompilerGeneratedAttribute]
public string get_NetworkResolution();
    [CompilerGeneratedAttribute]
public void set_NetworkResolution(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal string get_EffectiveNetworkResolution();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_EffectiveNetworkResolution(string value);
    internal bool get_HasNetworkResolution();
    [CompilerGeneratedAttribute]
public bool get_Compression();
    [CompilerGeneratedAttribute]
public void set_Compression(bool value);
    [CompilerGeneratedAttribute]
public int get_CompressionMinSize();
    [CompilerGeneratedAttribute]
public void set_CompressionMinSize(int value);
    [CompilerGeneratedAttribute]
public float get_CompressionMinRatio();
    [CompilerGeneratedAttribute]
public void set_CompressionMinRatio(float value);
    [CompilerGeneratedAttribute]
public TuningOptions get_Tuning();
    [CompilerGeneratedAttribute]
public void set_Tuning(TuningOptions value);
    [CompilerGeneratedAttribute]
public ExperimentalOptions get_Experiments();
    [CompilerGeneratedAttribute]
public void set_Experiments(ExperimentalOptions value);
    public static ClusterOptions get_Default();
    internal bool get_EffectiveEnableTls();
    [CompilerGeneratedAttribute]
public bool get_KvIgnoreRemoteCertificateNameMismatch();
    [CompilerGeneratedAttribute]
public void set_KvIgnoreRemoteCertificateNameMismatch(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public RemoteCertificateValidationCallback get_KvCertificateCallbackValidation();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_KvCertificateCallbackValidation(RemoteCertificateValidationCallback value);
    [CompilerGeneratedAttribute]
public bool get_HttpIgnoreRemoteCertificateMismatch();
    [CompilerGeneratedAttribute]
public void set_HttpIgnoreRemoteCertificateMismatch(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public RemoteCertificateValidationCallback get_HttpCertificateCallbackValidation();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_HttpCertificateCallbackValidation(RemoteCertificateValidationCallback value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ICertificateFactory get_X509CertificateFactory();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_X509CertificateFactory(ICertificateFactory value);
    public ClusterOptions WithX509CertificateFactory(ICertificateFactory certificateFactory);
    [CompilerGeneratedAttribute]
public bool get_UnorderedExecutionEnabled();
    [CompilerGeneratedAttribute]
public void set_UnorderedExecutionEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_ForceIpAsTargetHost();
    [CompilerGeneratedAttribute]
public void set_ForceIpAsTargetHost(bool value);
    [CompilerGeneratedAttribute]
public SslProtocols get_EnabledSslProtocols();
    [CompilerGeneratedAttribute]
public void set_EnabledSslProtocols(SslProtocols value);
    [CompilerGeneratedAttribute]
public List`1<TlsCipherSuite> get_EnabledTlsCipherSuites();
    [CompilerGeneratedAttribute]
public void set_EnabledTlsCipherSuites(List`1<TlsCipherSuite> value);
    internal bool get_IsCapella();
    internal ICouchbaseServiceProvider BuildServiceProvider();
    public ClusterOptions AddService(Func`2<IServiceProvider, TImplementation> factory, ClusterServiceLifetime lifetime);
    public ClusterOptions AddService(ClusterServiceLifetime lifetime);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Couchbase.ClusterOptionsExtensions : object {
    [ExtensionAttribute]
public static ClusterOptions AddTransientService(ClusterOptions clusterOptions);
    [ExtensionAttribute]
public static ClusterOptions AddTransientService(ClusterOptions clusterOptions, Func`2<IServiceProvider, TImplementation> factory);
    [ExtensionAttribute]
public static ClusterOptions AddClusterService(ClusterOptions clusterOptions, T singleton);
    [ExtensionAttribute]
public static ClusterOptions AddClusterService(ClusterOptions clusterOptions, TImplementation singleton);
    [ExtensionAttribute]
public static ClusterOptions AddClusterService(ClusterOptions clusterOptions);
    [ExtensionAttribute]
public static ClusterOptions AddClusterService(ClusterOptions clusterOptions, Func`2<IServiceProvider, TImplementation> factory);
}
public enum Couchbase.ClusterServiceLifetime : Enum {
    public int value__;
    public static ClusterServiceLifetime Transient;
    public static ClusterServiceLifetime Cluster;
}
internal class Couchbase.Compression.Snappier.Internal.SnappierCompression : object {
    public CompressionAlgorithm Algorithm { get; }
    public sealed virtual CompressionAlgorithm get_Algorithm();
    public sealed virtual IMemoryOwner`1<byte> Compress(ReadOnlyMemory`1<byte> input);
    public sealed virtual IMemoryOwner`1<byte> Decompress(ReadOnlyMemory`1<byte> input);
}
[ExtensionAttribute]
public static class Couchbase.Compression.Snappier.SnappierClusterOptionsExtensions : object {
    [ExtensionAttribute]
public static ClusterOptions WithSnappyCompression(ClusterOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("2")]
public class Couchbase.ConfigProfiles.ConfigProfile : object {
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <KvConnectTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <KvTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <KvDurabilityTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <ViewTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <QueryTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <AnalyticsTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <SearchTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <ManagementTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public Nullable`1<TimeSpan> KvConnectTimeout { get; public set; }
    public Nullable`1<TimeSpan> KvTimeout { get; public set; }
    public Nullable`1<TimeSpan> KvDurabilityTimeout { get; public set; }
    public Nullable`1<TimeSpan> ViewTimeout { get; public set; }
    public Nullable`1<TimeSpan> QueryTimeout { get; public set; }
    public Nullable`1<TimeSpan> AnalyticsTimeout { get; public set; }
    public Nullable`1<TimeSpan> SearchTimeout { get; public set; }
    public Nullable`1<TimeSpan> ManagementTimeout { get; public set; }
    public ConfigProfile(Nullable`1<TimeSpan> KvConnectTimeout, Nullable`1<TimeSpan> KvTimeout, Nullable`1<TimeSpan> KvDurabilityTimeout, Nullable`1<TimeSpan> ViewTimeout, Nullable`1<TimeSpan> QueryTimeout, Nullable`1<TimeSpan> AnalyticsTimeout, Nullable`1<TimeSpan> SearchTimeout, Nullable`1<TimeSpan> ManagementTimeout);
    [CompilerGeneratedAttribute]
protected ConfigProfile(ConfigProfile original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_KvConnectTimeout();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_KvConnectTimeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_KvTimeout();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_KvTimeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_KvDurabilityTimeout();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_KvDurabilityTimeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_ViewTimeout();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ViewTimeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_QueryTimeout();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_QueryTimeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_AnalyticsTimeout();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AnalyticsTimeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_SearchTimeout();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SearchTimeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_ManagementTimeout();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ManagementTimeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(ConfigProfile left, ConfigProfile right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(ConfigProfile left, ConfigProfile right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(ConfigProfile other);
    [CompilerGeneratedAttribute]
public virtual ConfigProfile <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Nullable`1& KvConnectTimeout, Nullable`1& KvTimeout, Nullable`1& KvDurabilityTimeout, Nullable`1& ViewTimeout, Nullable`1& QueryTimeout, Nullable`1& AnalyticsTimeout, Nullable`1& SearchTimeout, Nullable`1& ManagementTimeout);
}
[InterfaceStabilityAttribute("2")]
public static class Couchbase.ConfigProfiles.PreDefined : object {
    public static ConfigProfile Default;
    public static ConfigProfile NullProfile;
    public static ConfigProfile WanDevelopment;
    private static PreDefined();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.ConnectionString : object {
    private static int KeyValuePort;
    private static int SecureKeyValuePort;
    private static int StellarPort;
    private static Regex ConnectionStringRegex;
    private static Regex Ipv6Regex;
    [CompilerGeneratedAttribute]
private Scheme <Scheme>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<HostEndpoint> <Hosts>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDnsSrv>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Uri <DnsSrvUri>k__BackingField;
    public Scheme Scheme { get; private set; }
    [NullableAttribute("2")]
public string Username { get; private set; }
    public IList`1<HostEndpoint> Hosts { get; private set; }
    public IDictionary`2<string, string> Parameters { get; private set; }
    public bool IsDnsSrv { get; private set; }
    [NullableAttribute("2")]
public Uri DnsSrvUri { get; private set; }
    public ConnectionString(ConnectionString source, IEnumerable`1<HostEndpoint> newHosts);
    internal ConnectionString(ConnectionString source, IEnumerable`1<HostEndpoint> newHosts, bool isDnsSrv, Uri dnsSrvUri);
    private static ConnectionString();
    [CompilerGeneratedAttribute]
public Scheme get_Scheme();
    [CompilerGeneratedAttribute]
private void set_Scheme(Scheme value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Username();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_Username(string value);
    [CompilerGeneratedAttribute]
public IList`1<HostEndpoint> get_Hosts();
    [CompilerGeneratedAttribute]
private void set_Hosts(IList`1<HostEndpoint> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Parameters();
    [CompilerGeneratedAttribute]
private void set_Parameters(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public bool get_IsDnsSrv();
    [CompilerGeneratedAttribute]
private void set_IsDnsSrv(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Uri get_DnsSrvUri();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_DnsSrvUri(Uri value);
    internal static ConnectionString Parse(string input);
    [IteratorStateMachineAttribute("Couchbase.ConnectionString/<GetBootstrapEndpoints>d__33")]
public IEnumerable`1<HostEndpointWithPort> GetBootstrapEndpoints(Nullable`1<bool> overrideTls);
    internal Uri GetStellarBootstrapUri();
    internal Uri GetDnsBootStrapUri();
    public bool IsValidDnsSrv();
    public bool TryGetParameter(string key, String& parameter);
    public bool TryGetParameter(string key, Int32& parameter);
    public bool TryGetParameter(string key, Single& parameter);
    public bool TryGetParameter(string key, TimeSpan& parameter);
    public bool TryGetParameter(string key, Boolean& parameter);
    public virtual string ToString();
}
[AttributeUsageAttribute("64")]
internal class Couchbase.ContractAnnotationAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Contract>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ForceFullStates>k__BackingField;
    public string Contract { get; private set; }
    public bool ForceFullStates { get; private set; }
    public ContractAnnotationAttribute(string contract);
    public ContractAnnotationAttribute(string contract, bool forceFullStates);
    [CompilerGeneratedAttribute]
public string get_Contract();
    [CompilerGeneratedAttribute]
private void set_Contract(string value);
    [CompilerGeneratedAttribute]
public bool get_ForceFullStates();
    [CompilerGeneratedAttribute]
private void set_ForceFullStates(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.Bootstrapping.Bootstrapper : object {
    private CancellationTokenSource _tokenSource;
    private ILogger`1<Bootstrapper> _logger;
    private Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _disposed;
    [CompilerGeneratedAttribute]
private TimeSpan <SleepDuration>k__BackingField;
    public TimeSpan SleepDuration { get; public set; }
    public Bootstrapper(ILogger`1<Bootstrapper> logger);
    public Bootstrapper(CancellationTokenSource tokenSource, ILogger`1<Bootstrapper> logger);
    [CompilerGeneratedAttribute]
public sealed virtual TimeSpan get_SleepDuration();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SleepDuration(TimeSpan value);
    public sealed virtual void Start(IBootstrappable subject);
    [AsyncStateMachineAttribute("Couchbase.Core.Bootstrapping.Bootstrapper/<Execute>d__10")]
private Task Execute(IBootstrappable subject);
    public sealed virtual void Dispose();
}
internal class Couchbase.Core.Bootstrapping.BootstrapperFactory : object {
    private ILogger`1<Bootstrapper> _logger;
    public BootstrapperFactory(ILogger`1<Bootstrapper> logger);
    public sealed virtual IBootstrapper Create(TimeSpan sleepDuration);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Core.Bootstrapping.IBootstrappable {
    public bool IsBootstrapped { get; }
    public List`1<Exception> DeferredExceptions { get; }
    public abstract virtual Task BootStrapAsync();
    public abstract virtual bool get_IsBootstrapped();
    public abstract virtual List`1<Exception> get_DeferredExceptions();
}
internal interface Couchbase.Core.Bootstrapping.IBootstrapper {
    public TimeSpan SleepDuration { get; public set; }
    public abstract virtual TimeSpan get_SleepDuration();
    public abstract virtual void set_SleepDuration(TimeSpan value);
    public abstract virtual void Start(IBootstrappable subject);
}
internal interface Couchbase.Core.Bootstrapping.IBootstrapperFactory {
    public abstract virtual IBootstrapper Create(TimeSpan sleepDuration);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[DebuggerDisplayAttribute("Name = {Name}, BucketType = {BucketType}")]
internal abstract class Couchbase.Core.BucketBase : object {
    private ClusterState _clusterState;
    protected IScopeFactory _scopeFactory;
    protected ConcurrentDictionary`2<string, IScope> Scopes;
    private ConcurrentDictionary`2<string, bool> _testedClusterCaps;
    public ClusterNodeCollection Nodes;
    private ILogger _logger;
    private Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _disposed;
    [CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategy>k__BackingField;
    [CompilerGeneratedAttribute]
private IBootstrapper <Bootstrapper>k__BackingField;
    [CompilerGeneratedAttribute]
private IBootstrapperFactory <BootstrapperFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private TypedRedactor <Redactor>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestTracer <Tracer>k__BackingField;
    [CompilerGeneratedAttribute]
private ClusterContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetryOrchestrator <RetryOrchestrator>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private BucketConfig <CurrentConfig>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Manifest <Manifest>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IKeyMapper <KeyMapper>k__BackingField;
    private List`1<Exception> _deferredExceptions;
    [CompilerGeneratedAttribute]
private BucketType <BucketType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`2<string, IScope> _createScopeAction;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`3<ILogger, Redacted`1<string>, Exception> __LogScopeLookupCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`3<ILogger, Redacted`1<string>, Exception> __LogDisposeCallback;
    protected IRetryStrategy RetryStrategy { get; }
    public IBootstrapper Bootstrapper { get; }
    public IBootstrapperFactory BootstrapperFactory { get; }
    protected TypedRedactor Redactor { get; }
    protected IRequestTracer Tracer { get; }
    public ILogger Logger { get; }
    public ClusterContext Context { get; }
    public IRetryOrchestrator RetryOrchestrator { get; }
    [NullableAttribute("2")]
public BucketConfig CurrentConfig { get; protected set; }
    [NullableAttribute("2")]
protected Manifest Manifest { get; protected set; }
    [NullableAttribute("2")]
public IKeyMapper KeyMapper { get; protected set; }
    protected bool Disposed { get; }
    public BucketType BucketType { get; protected set; }
    public string Name { get; protected set; }
    public IEnumerable`1<IClusterNode> ClusterNodes { get; }
    public ICluster Cluster { get; }
    public IScope Item { get; }
    public ICouchbaseCollectionManager Collections { get; }
    public IViewIndexManager ViewIndexes { get; }
    private bool IsBootstrapped { get; }
    private bool Couchbase.Core.Bootstrapping.IBootstrappable.IsBootstrapped { get; }
    private List`1<Exception> Couchbase.Core.Bootstrapping.IBootstrappable.DeferredExceptions { get; }
    public bool SupportsCollections { get; }
    protected BucketBase(string name, ClusterContext context, IScopeFactory scopeFactory, IRetryOrchestrator retryOrchestrator, ILogger logger, TypedRedactor redactor, IBootstrapperFactory bootstrapperFactory, IRequestTracer tracer, IOperationConfigurator operationConfigurator, IRetryStrategy retryStrategy, BucketConfig config);
    private static BucketBase();
    [CompilerGeneratedAttribute]
protected IRetryStrategy get_RetryStrategy();
    [CompilerGeneratedAttribute]
public IBootstrapper get_Bootstrapper();
    [CompilerGeneratedAttribute]
public IBootstrapperFactory get_BootstrapperFactory();
    [CompilerGeneratedAttribute]
protected TypedRedactor get_Redactor();
    [CompilerGeneratedAttribute]
protected IRequestTracer get_Tracer();
    public ILogger get_Logger();
    [CompilerGeneratedAttribute]
public ClusterContext get_Context();
    [CompilerGeneratedAttribute]
public IRetryOrchestrator get_RetryOrchestrator();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public BucketConfig get_CurrentConfig();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected void set_CurrentConfig(BucketConfig value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected Manifest get_Manifest();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected void set_Manifest(Manifest value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public IKeyMapper get_KeyMapper();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected void set_KeyMapper(IKeyMapper value);
    protected bool get_Disposed();
    [CompilerGeneratedAttribute]
public BucketType get_BucketType();
    [CompilerGeneratedAttribute]
protected void set_BucketType(BucketType value);
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
protected virtual void set_Name(string value);
    public sealed virtual IEnumerable`1<IClusterNode> get_ClusterNodes();
    public sealed virtual ICluster get_Cluster();
    public IScope get_Item(string scopeName);
    public virtual IScope Scope(string scopeName);
    private IScope CreateScope(string scopeName);
    public sealed virtual ValueTask`1<IScope> ScopeAsync(string scopeName);
    public sealed virtual IScope DefaultScope();
    public sealed virtual ValueTask`1<IScope> DefaultScopeAsync();
    public abstract virtual ICouchbaseCollectionManager get_Collections();
    public sealed virtual ValueTask`1<ICouchbaseCollection> DefaultCollectionAsync();
    public sealed virtual ICouchbaseCollection Collection(string collectionName);
    [AsyncStateMachineAttribute("Couchbase.Core.BucketBase/<CollectionAsync>d__71")]
public sealed virtual ValueTask`1<ICouchbaseCollection> CollectionAsync(string collectionName);
    public sealed virtual ICouchbaseCollection DefaultCollection();
    public abstract virtual Task`1<IViewResult`2<TKey, TValue>> ViewQueryAsync(string designDocument, string viewName, ViewOptions options);
    public abstract virtual IViewIndexManager get_ViewIndexes();
    public abstract virtual Task ConfigUpdatedAsync(BucketConfig config);
    public abstract virtual Task ForceConfigUpdateAsync();
    internal abstract virtual Task`1<ResponseStatus> SendAsync(IOperation op, CancellationTokenPair tokenPair);
    internal Task`1<ResponseStatus> RetryAsync(IOperation operation, CancellationTokenPair tokenPair);
    [AsyncStateMachineAttribute("Couchbase.Core.BucketBase/<PingAsync>d__80")]
public sealed virtual Task`1<IPingReport> PingAsync(PingOptions options);
    [AsyncStateMachineAttribute("Couchbase.Core.BucketBase/<WaitUntilReadyAsync>d__81")]
public sealed virtual Task WaitUntilReadyAsync(TimeSpan timeout, WaitUntilReadyOptions options);
    internal abstract virtual Task BootstrapAsync(IClusterNode node);
    internal void CaptureException(Exception e);
    [AsyncStateMachineAttribute("Couchbase.Core.BucketBase/<Couchbase-Core-Bootstrapping-IBootstrappable-BootStrapAsync>d__84")]
private sealed virtual override Task Couchbase.Core.Bootstrapping.IBootstrappable.BootStrapAsync();
    private bool get_IsBootstrapped();
    private sealed virtual override bool Couchbase.Core.Bootstrapping.IBootstrappable.get_IsBootstrapped();
    private sealed virtual override List`1<Exception> Couchbase.Core.Bootstrapping.IBootstrappable.get_DeferredExceptions();
    public sealed virtual bool get_SupportsCollections();
    internal bool HasCap(string capability);
    internal void AssertCap(string capability, string message);
    internal void ThrowIfBootStrapFailed();
    private void ThrowBootStrapFailed();
    public virtual void Dispose();
    public virtual ValueTask DisposeAsync();
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogScopeLookup(Redacted`1<string> scopeName);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogDispose(Redacted`1<string> name);
}
internal class Couchbase.Core.BucketContext : object {
}
internal class Couchbase.Core.CircuitBreakers.CircuitBreaker : object {
    private Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _failedCount;
    private Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _totalCount;
    private long _windowStartTime;
    private long _circuitOpenedTime;
    private long _state;
    private CircuitBreakerConfiguration _configuration;
    public CircuitBreakerState State { get; }
    public bool Enabled { get; }
    public TimeSpan CanaryTimeout { get; }
    public Func`2<Exception, bool> CompletionCallback { get; }
    public CircuitBreaker(CircuitBreakerConfiguration configuration);
    public sealed virtual CircuitBreakerState get_State();
    public sealed virtual bool get_Enabled();
    public sealed virtual TimeSpan get_CanaryTimeout();
    public sealed virtual bool AllowsRequest();
    public sealed virtual void MarkSuccess();
    public sealed virtual void MarkFailure();
    public sealed virtual void Reset();
    public sealed virtual void Track();
    private void CleanRollingWindow();
    private void CheckIfTripped();
    public sealed virtual Func`2<Exception, bool> get_CompletionCallback();
}
public class Couchbase.Core.CircuitBreakers.CircuitBreakerConfiguration : object {
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private int <VolumeThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <ErrorThresholdPercentage>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <SleepWindow>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <RollingWindow>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <CanaryTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<Exception, bool> <CompletionCallback>k__BackingField;
    public static CircuitBreakerConfiguration Default;
    public bool Enabled { get; public set; }
    public int VolumeThreshold { get; public set; }
    public UInt32 ErrorThresholdPercentage { get; public set; }
    public TimeSpan SleepWindow { get; public set; }
    public TimeSpan RollingWindow { get; public set; }
    public TimeSpan CanaryTimeout { get; public set; }
    public Func`2<Exception, bool> CompletionCallback { get; public set; }
    private static CircuitBreakerConfiguration();
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public int get_VolumeThreshold();
    [CompilerGeneratedAttribute]
public void set_VolumeThreshold(int value);
    [CompilerGeneratedAttribute]
public UInt32 get_ErrorThresholdPercentage();
    [CompilerGeneratedAttribute]
public void set_ErrorThresholdPercentage(UInt32 value);
    [CompilerGeneratedAttribute]
public TimeSpan get_SleepWindow();
    [CompilerGeneratedAttribute]
public void set_SleepWindow(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_RollingWindow();
    [CompilerGeneratedAttribute]
public void set_RollingWindow(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_CanaryTimeout();
    [CompilerGeneratedAttribute]
public void set_CanaryTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public Func`2<Exception, bool> get_CompletionCallback();
    [CompilerGeneratedAttribute]
public void set_CompletionCallback(Func`2<Exception, bool> value);
}
public class Couchbase.Core.CircuitBreakers.CircuitBreakerException : CouchbaseException {
}
public enum Couchbase.Core.CircuitBreakers.CircuitBreakerState : Enum {
    public int value__;
    public static CircuitBreakerState Open;
    public static CircuitBreakerState HalfOpen;
    public static CircuitBreakerState Closed;
    public static CircuitBreakerState Disabled;
}
internal interface Couchbase.Core.CircuitBreakers.ICircuitBreaker {
    public CircuitBreakerState State { get; }
    public bool Enabled { get; }
    public TimeSpan CanaryTimeout { get; }
    public Func`2<Exception, bool> CompletionCallback { get; }
    public abstract virtual CircuitBreakerState get_State();
    public abstract virtual bool get_Enabled();
    public abstract virtual TimeSpan get_CanaryTimeout();
    public abstract virtual Func`2<Exception, bool> get_CompletionCallback();
    public abstract virtual bool AllowsRequest();
    public abstract virtual void MarkSuccess();
    public abstract virtual void MarkFailure();
    public abstract virtual void Reset();
    public abstract virtual void Track();
}
internal class Couchbase.Core.ClusterContext : object {
    public ITypeTranscoder GlobalTranscoder;
    private ClusterOptions _clusterOptions;
    private ILogger`1<ClusterContext> _logger;
    private IRedactor _redactor;
    private IConfigHandler _configHandler;
    private IClusterNodeFactory _clusterNodeFactory;
    private CancellationTokenSource _tokenSource;
    protected ConcurrentDictionary`2<string, BucketBase> Buckets;
    private bool _disposed;
    private SemaphoreSlim _semaphore;
    private HttpClusterMapBase _httpClusterMap;
    private IHttpClusterMapFactory _httpClusterMapFactory;
    private List`1<IDisposable> _ownedObjects;
    [CompilerGeneratedAttribute]
private ClusterNodeList <Nodes>k__BackingField;
    [CompilerGeneratedAttribute]
private ClusterOptions <ClusterOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ICouchbaseServiceProvider <ServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private BucketConfig <GlobalConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private ICluster <Cluster>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SupportsCollections>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SupportsGlobalConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SupportsPreserveTtl>k__BackingField;
    private SemaphoreSlim _configMutex;
    public ClusterNodeList Nodes { get; }
    public ClusterOptions ClusterOptions { get; }
    public ICouchbaseServiceProvider ServiceProvider { get; }
    public BucketConfig GlobalConfig { get; public set; }
    public bool IsGlobal { get; }
    public ICluster Cluster { get; }
    public bool SupportsCollections { get; public set; }
    public bool SupportsGlobalConfig { get; private set; }
    public bool SupportsPreserveTtl { get; internal set; }
    public CancellationToken CancellationToken { get; }
    public string Name { get; }
    public IEnumerable`1<IClusterNode> ClusterNodes { get; }
    public ClusterContext(CancellationTokenSource tokenSource, ClusterOptions options);
    public ClusterContext(ICluster cluster, CancellationTokenSource tokenSource, ClusterOptions options);
    [CompilerGeneratedAttribute]
public ClusterNodeList get_Nodes();
    [CompilerGeneratedAttribute]
public ClusterOptions get_ClusterOptions();
    [CompilerGeneratedAttribute]
public ICouchbaseServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
public BucketConfig get_GlobalConfig();
    [CompilerGeneratedAttribute]
public void set_GlobalConfig(BucketConfig value);
    public bool get_IsGlobal();
    [CompilerGeneratedAttribute]
public ICluster get_Cluster();
    [CompilerGeneratedAttribute]
public bool get_SupportsCollections();
    [CompilerGeneratedAttribute]
public void set_SupportsCollections(bool value);
    [CompilerGeneratedAttribute]
public bool get_SupportsGlobalConfig();
    [CompilerGeneratedAttribute]
private void set_SupportsGlobalConfig(bool value);
    [CompilerGeneratedAttribute]
public bool get_SupportsPreserveTtl();
    [CompilerGeneratedAttribute]
internal void set_SupportsPreserveTtl(bool value);
    public CancellationToken get_CancellationToken();
    public void Start();
    public void RegisterBucket(BucketBase bucket);
    public void UnRegisterBucket(BucketBase bucket);
    public void RemoveBucket(BucketBase bucket);
    public void PublishConfig(BucketConfig bucketConfig);
    public IClusterNode GetRandomNodeForService(ServiceType service, string bucketName);
    public IEnumerable`1<IClusterNode> GetNodes(string bucketName);
    public IClusterNode GetRandomNode();
    public void AddNode(IClusterNode node);
    public bool RemoveNode(IClusterNode removedNode);
    public void RemoveAllNodes();
    public void RemoveAllNodes(IBucket bucket);
    public IClusterNode GetUnassignedNode(HostEndpointWithPort endpoint);
    [AsyncStateMachineAttribute("Couchbase.Core.ClusterContext/<BootstrapGlobalAsync>d__61")]
public Task BootstrapGlobalAsync();
    public ValueTask`1<IBucket> GetOrCreateBucketAsync(string name);
    [AsyncStateMachineAttribute("Couchbase.Core.ClusterContext/<GetOrCreateBucketLockedAsync>d__63")]
public Task`1<IBucket> GetOrCreateBucketLockedAsync(string name);
    private IEnumerable`1<HostEndpointWithPort> GetHostEndpointWithPorts(Nullable`1<bool> enableTls);
    [AsyncStateMachineAttribute("Couchbase.Core.ClusterContext/<CreateAndBootStrapBucketAsync>d__65")]
public Task`1<BucketBase> CreateAndBootStrapBucketAsync(string name, HostEndpointWithPort endpoint);
    [AsyncStateMachineAttribute("Couchbase.Core.ClusterContext/<RebootstrapAllBuckets>d__66")]
public Task RebootstrapAllBuckets();
    [AsyncStateMachineAttribute("Couchbase.Core.ClusterContext/<RebootStrapAsync>d__67")]
public Task RebootStrapAsync(string name);
    [AsyncStateMachineAttribute("Couchbase.Core.ClusterContext/<ProcessClusterMapAsync>d__69")]
public Task ProcessClusterMapAsync(BucketBase bucket, BucketConfig config);
    public void PruneNodes(BucketConfig config);
    private void PruneGlobalNodes(BucketConfig config);
    [AsyncStateMachineAttribute("Couchbase.Core.ClusterContext/<ConfigUpdatedAsync>d__72")]
public sealed virtual Task ConfigUpdatedAsync(BucketConfig globalConfig);
    public sealed virtual string get_Name();
    public sealed virtual IEnumerable`1<IClusterNode> get_ClusterNodes();
    public sealed virtual void Dispose();
}
internal class Couchbase.Core.ClusterNode : object {
    private Guid _id;
    private ClusterContext _context;
    private ILogger`1<ClusterNode> _logger;
    private TypedRedactor _redactor;
    private IRequestTracer _tracer;
    private ICircuitBreaker _circuitBreaker;
    private ObjectPool`1<OperationBuilder> _operationBuilderPool;
    private ISaslMechanismFactory _saslMechanismFactory;
    private Uri _queryUri;
    private Uri _analyticsUri;
    private Uri _searchUri;
    private Uri _viewsUri;
    private Uri _eventingUri;
    private NodeAdapter _nodesAdapter;
    private string _cachedToString;
    private ObservableCollection`1<HostEndpointWithPort> _keyEndPoints;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _disposed;
    private string _localHostName;
    private string _remoteHostName;
    private string _bucketName;
    private IBucket _owner;
    private IOperationConfigurator _operationConfigurator;
    [CompilerGeneratedAttribute]
private HostEndpointWithPort <EndPoint>k__BackingField;
    [CompilerGeneratedAttribute]
private BucketType <BucketType>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<HostEndpointWithPort> <KeyEndPoints>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <ManagementUri>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorMap <ErrorMap>k__BackingField;
    [CompilerGeneratedAttribute]
private ServerFeatureSet <ServerFeatures>k__BackingField;
    [CompilerGeneratedAttribute]
private IConnectionPool <ConnectionPool>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Exception> <Exceptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastViewActivity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastQueryActivity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastSearchActivity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastAnalyticsActivity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastKvActivity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastEventingActivity>k__BackingField;
    [CompilerGeneratedAttribute]
private NotifyCollectionChangedEventHandler KeyEndPointsChanged;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`3<ILogger, Redacted`1<HostEndpointWithPort>, Exception> __LogConnectionInitializationCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`3<ILogger, Redacted`1<HostEndpointWithPort>, Exception> __LogDisposeCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`2<ILogger, Exception> __LogCannotFetchHostNameCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`3<ILogger, Redacted`1<string>, Exception> __LogCouldNotSelectBucketCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`7<ILogger, OpCode, Redacted`1<HostEndpointWithPort>, Redacted`1<string>, UInt32, Nullable`1<ConfigVersion>, Exception> __LogKvExecutingOperationCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`8<ILogger, ResponseStatus, OpCode, Redacted`1<HostEndpointWithPort>, Redacted`1<string>, UInt32, Nullable`1<ConfigVersion>, Exception> __LogKvStatusReturnedCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`3<ILogger, short, Exception> __LogKvStatusNotFoundCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`7<ILogger, OpCode, Redacted`1<HostEndpointWithPort>, Redacted`1<string>, UInt32, Nullable`1<ConfigVersion>, Exception> __LogKvOperationCompletedCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`8<ILogger, OpCode, Redacted`1<HostEndpointWithPort>, Redacted`1<string>, UInt32, ResponseStatus, Nullable`1<ConfigVersion>, Exception> __LogKvOperationFailedCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`3<ILogger, CircuitBreakerState, Exception> __LogCircuitBreakerStateCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`7<ILogger, OpCode, Redacted`1<HostEndpointWithPort>, Redacted`1<string>, UInt32, Nullable`1<ConfigVersion>, Exception> __LogCircuitBreakerMarkFailureCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`3<ILogger, Redacted`1<HostEndpointWithPort>, Exception> __LogCircuitBreakerSendingCanaryCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`3<ILogger, Redacted`1<HostEndpointWithPort>, Exception> __LogCircuitBreakerCanaryFailedCallback;
    public Nullable`1<ConfigVersion> ConfigVersion { get; }
    public bool IsAssigned { get; }
    public IBucket Owner { get; public set; }
    public string BucketName { get; }
    public NodeAdapter NodesAdapter { get; public set; }
    public HostEndpointWithPort EndPoint { get; internal set; }
    public BucketType BucketType { get; internal set; }
    public IReadOnlyCollection`1<HostEndpointWithPort> KeyEndPoints { get; }
    public Uri EventingUri { get; public set; }
    public Uri QueryUri { get; public set; }
    public Uri AnalyticsUri { get; public set; }
    public Uri SearchUri { get; public set; }
    public Uri ViewsUri { get; public set; }
    public Uri ManagementUri { get; public set; }
    public ErrorMap ErrorMap { get; public set; }
    public ServerFeatureSet ServerFeatures { get; private set; }
    public IConnectionPool ConnectionPool { get; }
    public List`1<Exception> Exceptions { get; public set; }
    public bool HasViews { get; }
    public bool HasAnalytics { get; }
    public bool HasQuery { get; }
    public bool HasSearch { get; }
    public bool HasKv { get; }
    public bool HasEventing { get; }
    public bool HasManagement { get; }
    public Nullable`1<DateTime> LastViewActivity { get; private set; }
    public Nullable`1<DateTime> LastQueryActivity { get; private set; }
    public Nullable`1<DateTime> LastSearchActivity { get; private set; }
    public Nullable`1<DateTime> LastAnalyticsActivity { get; private set; }
    public Nullable`1<DateTime> LastKvActivity { get; private set; }
    public Nullable`1<DateTime> LastEventingActivity { get; private set; }
    public bool IsDead { get; }
    public ClusterNode(ClusterContext context, IConnectionPoolFactory connectionPoolFactory, ILogger`1<ClusterNode> logger, ObjectPool`1<OperationBuilder> operationBuilderPool, ICircuitBreaker circuitBreaker, ISaslMechanismFactory saslMechanismFactory, TypedRedactor redactor, HostEndpointWithPort endPoint, NodeAdapter nodeAdapter, IRequestTracer tracer, IOperationConfigurator operationConfigurator);
    public ClusterNode(ClusterContext context, IOperationConfigurator operationConfigurator);
    public ClusterNode(ClusterContext context, ObjectPool`1<OperationBuilder> operationBuilderPool, ICircuitBreaker circuitBreaker, IOperationConfigurator operationConfigurator, ILogger`1<ClusterNode> logger);
    private static ClusterNode();
    public Nullable`1<ConfigVersion> get_ConfigVersion();
    public sealed virtual bool get_IsAssigned();
    public sealed virtual IBucket get_Owner();
    public sealed virtual void set_Owner(IBucket value);
    public sealed virtual string get_BucketName();
    public sealed virtual NodeAdapter get_NodesAdapter();
    public sealed virtual void set_NodesAdapter(NodeAdapter value);
    [CompilerGeneratedAttribute]
public sealed virtual HostEndpointWithPort get_EndPoint();
    [CompilerGeneratedAttribute]
internal void set_EndPoint(HostEndpointWithPort value);
    [CompilerGeneratedAttribute]
public sealed virtual BucketType get_BucketType();
    [CompilerGeneratedAttribute]
internal void set_BucketType(BucketType value);
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyCollection`1<HostEndpointWithPort> get_KeyEndPoints();
    public sealed virtual Uri get_EventingUri();
    public sealed virtual void set_EventingUri(Uri value);
    public sealed virtual Uri get_QueryUri();
    public sealed virtual void set_QueryUri(Uri value);
    public sealed virtual Uri get_AnalyticsUri();
    public sealed virtual void set_AnalyticsUri(Uri value);
    public sealed virtual Uri get_SearchUri();
    public sealed virtual void set_SearchUri(Uri value);
    public sealed virtual Uri get_ViewsUri();
    public sealed virtual void set_ViewsUri(Uri value);
    [CompilerGeneratedAttribute]
public sealed virtual Uri get_ManagementUri();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ManagementUri(Uri value);
    [CompilerGeneratedAttribute]
public sealed virtual ErrorMap get_ErrorMap();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ErrorMap(ErrorMap value);
    [CompilerGeneratedAttribute]
public sealed virtual ServerFeatureSet get_ServerFeatures();
    [CompilerGeneratedAttribute]
private void set_ServerFeatures(ServerFeatureSet value);
    [CompilerGeneratedAttribute]
public sealed virtual IConnectionPool get_ConnectionPool();
    [CompilerGeneratedAttribute]
public sealed virtual List`1<Exception> get_Exceptions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Exceptions(List`1<Exception> value);
    public sealed virtual bool get_HasViews();
    public sealed virtual bool get_HasAnalytics();
    public sealed virtual bool get_HasQuery();
    public sealed virtual bool get_HasSearch();
    public sealed virtual bool get_HasKv();
    public sealed virtual bool get_HasEventing();
    public sealed virtual bool get_HasManagement();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_LastViewActivity();
    [CompilerGeneratedAttribute]
private void set_LastViewActivity(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_LastQueryActivity();
    [CompilerGeneratedAttribute]
private void set_LastQueryActivity(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_LastSearchActivity();
    [CompilerGeneratedAttribute]
private void set_LastSearchActivity(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_LastAnalyticsActivity();
    [CompilerGeneratedAttribute]
private void set_LastAnalyticsActivity(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_LastKvActivity();
    [CompilerGeneratedAttribute]
private void set_LastKvActivity(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_LastEventingActivity();
    [CompilerGeneratedAttribute]
private void set_LastEventingActivity(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_KeyEndPointsChanged(NotifyCollectionChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_KeyEndPointsChanged(NotifyCollectionChangedEventHandler value);
    public sealed virtual bool get_IsDead();
    private void OnKeyEndPointsChanged(NotifyCollectionChangedEventArgs e);
    [AsyncStateMachineAttribute("Couchbase.Core.ClusterNode/<InitializeAsync>d__126")]
public Task InitializeAsync();
    [AsyncStateMachineAttribute("Couchbase.Core.ClusterNode/<GetErrorMap>d__127")]
private Task`1<ErrorMap> GetErrorMap(IConnection connection, IRequestSpan span, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Couchbase.Core.ClusterNode/<HelloHello>d__128")]
public sealed virtual Task HelloHello();
    [AsyncStateMachineAttribute("Couchbase.Core.ClusterNode/<Hello>d__129")]
private Task`1<ServerFeatures[]> Hello(IConnection connection, IRequestSpan span, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Couchbase.Core.ClusterNode/<GetManifest>d__130")]
public sealed virtual Task`1<Manifest> GetManifest();
    [AsyncStateMachineAttribute("Couchbase.Core.ClusterNode/<SelectBucketAsync>d__131")]
public sealed virtual Task SelectBucketAsync(string bucketName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Couchbase.Core.ClusterNode/<GetClusterMap>d__132")]
public sealed virtual Task`1<BucketConfig> GetClusterMap(Nullable`1<ConfigVersion> latestVersionOnClient, CancellationToken cancellationToken);
    private void BuildServiceUris();
    private void UpdateKeyEndPoints();
    [AsyncStateMachineAttribute("Couchbase.Core.ClusterNode/<SendAsyncWithCircuitBreaker>d__135")]
private Task`1<ResponseStatus> SendAsyncWithCircuitBreaker(IOperation op, CancellationTokenPair tokenPair);
    [AsyncStateMachineAttribute("Couchbase.Core.ClusterNode/<ExecuteInternalOperationAsync>d__136`3")]
private Task`1<TResult> ExecuteInternalOperationAsync(TConnection connection, TOperation operation, Func`4<TConnection, TOperation, CancellationTokenPair, Task`1<ResponseStatus>> executor, Func`3<ResponseStatus, TOperation, TResult> projector, CancellationToken cancellationToken);
    public sealed virtual Task`1<ResponseStatus> ExecuteOp(IConnection connection, IOperation op, CancellationTokenPair tokenPair);
    public sealed virtual Task`1<ResponseStatus> SendAsync(IOperation op, CancellationTokenPair tokenPair);
    private Task`1<ResponseStatus> ExecuteOp(IConnectionPool connectionPool, IOperation op, CancellationTokenPair tokenPair);
    private Task`1<ResponseStatus> ExecuteOpImmediatelyAsync(IConnectionPool connectionPool, IOperation op, CancellationTokenPair tokenPair);
    [AsyncStateMachineAttribute("Couchbase.Core.ClusterNode/<ExecuteOp>d__141")]
private Task`1<ResponseStatus> ExecuteOp(Func`4<IOperation, object, CancellationToken, Task> sender, IOperation op, object state, CancellationTokenPair tokenPair);
    [AsyncStateMachineAttribute("Couchbase.Core.ClusterNode/<Couchbase-Core-IO-Connections-IConnectionInitializer-InitializeConnectionAsync>d__142")]
private sealed virtual override Task Couchbase.Core.IO.Connections.IConnectionInitializer.InitializeConnectionAsync(IConnection connection, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Couchbase.Core.ClusterNode/<Couchbase-Core-IO-Connections-IConnectionInitializer-SelectBucketAsync>d__143")]
private sealed virtual override Task Couchbase.Core.IO.Connections.IConnectionInitializer.SelectBucketAsync(IConnection connection, string bucketName, CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
private void UpdateCircuitBreaker(IOperation op, Exception exception);
    private void QueueHalfOpenCircuitBreakerTest(IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Core.ClusterNode/<HalfOpenCircuitBreakerTestAsync>d__146")]
private Task HalfOpenCircuitBreakerTestAsync(IRequestSpan parentSpan);
    public sealed virtual void Dispose();
    public sealed virtual bool Equals(ClusterNode other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    private IRequestSpan RootSpan(string operation);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogConnectionInitialization(Redacted`1<HostEndpointWithPort> endpoint);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogDispose(Redacted`1<HostEndpointWithPort> endpoint);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogCannotFetchHostName(Exception exception);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogCouldNotSelectBucket(Redacted`1<string> bucketName);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogKvExecutingOperation(OpCode opcode, Redacted`1<HostEndpointWithPort> endpoint, Redacted`1<string> key, UInt32 opaque, Nullable`1<ConfigVersion> configVersion);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogKvStatusReturned(ResponseStatus status, OpCode opCode, Redacted`1<HostEndpointWithPort> endpoint, Redacted`1<string> key, UInt32 opaque, Nullable`1<ConfigVersion> configVersion);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogKvStatusNotFound(short code);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogKvOperationCompleted(OpCode opCode, Redacted`1<HostEndpointWithPort> endpoint, Redacted`1<string> key, UInt32 opaque, Nullable`1<ConfigVersion> configVersion);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogKvOperationFailed(Exception ex, OpCode opCode, Redacted`1<HostEndpointWithPort> endpoint, Redacted`1<string> key, UInt32 opaque, ResponseStatus status, Nullable`1<ConfigVersion> configVersion);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogKvOperationTimeout(Redacted`1<HostEndpointWithPort> endpoint, OpCode opCode, Redacted`1<string> key, UInt32 opaque, Nullable`1<ConfigVersion> configVersion, bool isSent);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogCircuitBreakerState(CircuitBreakerState state);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogCircuitBreakerMarkFailure(OpCode opCode, Redacted`1<HostEndpointWithPort> endpoint, Redacted`1<string> key, UInt32 opaque, Nullable`1<ConfigVersion> configVersion);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogCircuitBreakerSendingCanary(Redacted`1<HostEndpointWithPort> endpoint);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogCircuitBreakerCanaryFailed(Exception ex, Redacted`1<HostEndpointWithPort> endpoint);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private void <.ctor>b__22_0(object _, NotifyCollectionChangedEventArgs e);
    [CompilerGeneratedAttribute]
private bool <UpdateKeyEndPoints>b__134_0(HostEndpointWithPort p);
    [CompilerGeneratedAttribute]
private void <Couchbase.Core.IO.Connections.IConnectionInitializer.InitializeConnectionAsync>b__142_0(SlicedMemoryOwner`1<byte> operationResponse);
    [CompilerGeneratedAttribute]
private void <QueueHalfOpenCircuitBreakerTest>b__145_0(IRequestSpan state);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.ClusterNodeCollection : object {
    private object _syncObj;
    private ConcurrentDictionary`2<HostEndpointWithPort, IClusterNode> _lookupDictionary;
    private HashSet`1<IClusterNode> _nodes;
    internal ConcurrentDictionary`2<HostEndpointWithPort, IClusterNode> LookupDictionary { get; }
    public int Count { get; }
    internal ConcurrentDictionary`2<HostEndpointWithPort, IClusterNode> get_LookupDictionary();
    public int get_Count();
    [NullableContextAttribute("2")]
public bool TryGet(HostEndpointWithPort endPoint, IClusterNode& node);
    public bool Add(IClusterNode node);
    public bool Remove(HostEndpointWithPort endPoint, string bucketName, IClusterNode& removedNode);
    public IList`1<IClusterNode> Clear(IBucket bucket);
    public IList`1<IClusterNode> Clear();
    private void OnKeyEndPointsChanged(object sender, NotifyCollectionChangedEventArgs e);
    public sealed virtual IEnumerator`1<IClusterNode> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.ClusterNodeList : object {
    private object _syncObj;
    private HashSet`1<IClusterNode> _nodes;
    public int Count { get; }
    public int get_Count();
    public bool Add(IClusterNode node);
    public bool Remove(IClusterNode nodeToRemove);
    public IList`1<IClusterNode> Clear(IBucket bucket);
    public IList`1<IClusterNode> Clear();
    public bool TryGet(HostEndpointWithPort endPoint, string bucketName, IClusterNode& node);
    public sealed virtual IEnumerator`1<IClusterNode> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[AttributeUsageAttribute("32767")]
public class Couchbase.Core.Compatibility.InterfaceStabilityAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Level <Level>k__BackingField;
    public Level Level { get; }
    public InterfaceStabilityAttribute(Level level);
    [CompilerGeneratedAttribute]
public Level get_Level();
}
public enum Couchbase.Core.Compatibility.Level : Enum {
    public int value__;
    public static Level Committed;
    public static Level Uncommitted;
    public static Level Volatile;
}
internal class Couchbase.Core.Configuration.Server.AlternateAddressesConfig : object {
    [CompilerGeneratedAttribute]
private ExternalAddressesConfig <External>k__BackingField;
    [JsonPropertyNameAttribute("external")]
public ExternalAddressesConfig External { get; public set; }
    public bool HasExternalAddress { get; }
    [CompilerGeneratedAttribute]
public ExternalAddressesConfig get_External();
    [CompilerGeneratedAttribute]
public void set_External(ExternalAddressesConfig value);
    public bool get_HasExternalAddress();
}
public static class Couchbase.Core.Configuration.Server.BucketCapabilities : object {
    public static string CBHELLO;
    public static string TOUCH;
    public static string COUCHAPI;
    public static string CCCP;
    public static string XDCR_CHECKPOINTING;
    public static string NODES_EXT;
    public static string DCP;
    public static string XATTR;
    public static string SNAPPY;
    public static string COLLECTIONS;
    public static string DURABLE_WRITE;
    public static string CREATE_AS_DELETED;
    public static string RANGE_SCAN;
    public static string SUBDOC_REPLICA_READ;
    public static string NON_DEDUPED_HISTORY;
}
internal class Couchbase.Core.Configuration.Server.BucketConfig : object {
    internal static string GlobalBucketName;
    private string _networkResolution;
    private List`1<string> _bucketCaps;
    private Dictionary`2<string, IEnumerable`1<string>> _clusterCaps;
    [CompilerGeneratedAttribute]
private ConfigVersion <ConfigVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreRev>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Rev>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <RevEpoch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StreamingUri>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Node> <Nodes>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<NodesExt> <NodesExt>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NodeLocator>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uuid>k__BackingField;
    [CompilerGeneratedAttribute]
private Ddocs <Ddocs>k__BackingField;
    [CompilerGeneratedAttribute]
private VBucketServerMapDto <VBucketServerMap>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BucketCapabilitiesVer>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<int> <ClusterCapabilitiesVersion>k__BackingField;
    private Nullable`1<bool> _useAlternateAddresses;
    private HashSet`1<string> _bucketCapsSet;
    private HashSet`1<string> _clusterCapsSet;
    public ConfigVersion ConfigVersion { get; private set; }
    public string NetworkResolution { get; public set; }
    [JsonIgnoreAttribute]
public bool IsGlobal { get; }
    [JsonIgnoreAttribute]
public bool IgnoreRev { get; public set; }
    [JsonPropertyNameAttribute("rev")]
public ulong Rev { get; public set; }
    [JsonPropertyNameAttribute("revEpoch")]
public ulong RevEpoch { get; public set; }
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("uri")]
public string Uri { get; public set; }
    [JsonPropertyNameAttribute("streamingUri")]
public string StreamingUri { get; public set; }
    [JsonPropertyNameAttribute("nodes")]
public List`1<Node> Nodes { get; public set; }
    [JsonPropertyNameAttribute("nodesExt")]
public List`1<NodesExt> NodesExt { get; public set; }
    [JsonPropertyNameAttribute("nodeLocator")]
public string NodeLocator { get; public set; }
    [JsonPropertyNameAttribute("uuid")]
public string Uuid { get; public set; }
    [JsonPropertyNameAttribute("ddocs")]
public Ddocs Ddocs { get; public set; }
    [JsonPropertyNameAttribute("vBucketServerMap")]
public VBucketServerMapDto VBucketServerMap { get; public set; }
    [JsonPropertyNameAttribute("bucketCapabilitiesVer")]
public string BucketCapabilitiesVer { get; public set; }
    [JsonPropertyNameAttribute("bucketCapabilities")]
public List`1<string> BucketCapabilities { get; public set; }
    [JsonPropertyNameAttribute("clusterCapabilitiesVer")]
public List`1<int> ClusterCapabilitiesVersion { get; public set; }
    [JsonPropertyNameAttribute("clusterCapabilities")]
public Dictionary`2<string, IEnumerable`1<string>> ClusterCapabilities { get; public set; }
    public bool UseAlternateAddresses { get; }
    [CompilerGeneratedAttribute]
public ConfigVersion get_ConfigVersion();
    [CompilerGeneratedAttribute]
private void set_ConfigVersion(ConfigVersion value);
    public string get_NetworkResolution();
    public void set_NetworkResolution(string value);
    public void SetEffectiveNetworkResolution(ClusterOptions options);
    public bool get_IsGlobal();
    [CompilerGeneratedAttribute]
public bool get_IgnoreRev();
    [CompilerGeneratedAttribute]
public void set_IgnoreRev(bool value);
    [CompilerGeneratedAttribute]
public ulong get_Rev();
    [CompilerGeneratedAttribute]
public void set_Rev(ulong value);
    [CompilerGeneratedAttribute]
public ulong get_RevEpoch();
    [CompilerGeneratedAttribute]
public void set_RevEpoch(ulong value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(string value);
    [CompilerGeneratedAttribute]
public string get_StreamingUri();
    [CompilerGeneratedAttribute]
public void set_StreamingUri(string value);
    [CompilerGeneratedAttribute]
public List`1<Node> get_Nodes();
    [CompilerGeneratedAttribute]
public void set_Nodes(List`1<Node> value);
    [CompilerGeneratedAttribute]
public List`1<NodesExt> get_NodesExt();
    [CompilerGeneratedAttribute]
public void set_NodesExt(List`1<NodesExt> value);
    [CompilerGeneratedAttribute]
public string get_NodeLocator();
    [CompilerGeneratedAttribute]
public void set_NodeLocator(string value);
    [CompilerGeneratedAttribute]
public string get_Uuid();
    [CompilerGeneratedAttribute]
public void set_Uuid(string value);
    [CompilerGeneratedAttribute]
public Ddocs get_Ddocs();
    [CompilerGeneratedAttribute]
public void set_Ddocs(Ddocs value);
    [CompilerGeneratedAttribute]
public VBucketServerMapDto get_VBucketServerMap();
    [CompilerGeneratedAttribute]
public void set_VBucketServerMap(VBucketServerMapDto value);
    [CompilerGeneratedAttribute]
public string get_BucketCapabilitiesVer();
    [CompilerGeneratedAttribute]
public void set_BucketCapabilitiesVer(string value);
    public List`1<string> get_BucketCapabilities();
    public void set_BucketCapabilities(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<int> get_ClusterCapabilitiesVersion();
    [CompilerGeneratedAttribute]
public void set_ClusterCapabilitiesVersion(List`1<int> value);
    public Dictionary`2<string, IEnumerable`1<string>> get_ClusterCapabilities();
    public void set_ClusterCapabilities(Dictionary`2<string, IEnumerable`1<string>> value);
    public bool HasBucketCap(string capability);
    internal void AssertBucketCap(string bucketCap, string message);
    public bool HasClusterCap(string sectionDotCapability);
    internal void AssertClusterCap(string clusterCap, string message);
    public sealed virtual bool Equals(BucketConfig other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public sealed virtual void OnDeserialized();
    public static bool op_Equality(BucketConfig left, BucketConfig right);
    public static bool op_Inequality(BucketConfig left, BucketConfig right);
    public void ResolveHostName();
    public bool get_UseAlternateAddresses();
    [CompilerGeneratedAttribute]
private bool <get_UseAlternateAddresses>b__92_0(NodesExt x);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Couchbase.Core.Configuration.Server.BucketConfigExtensions : object {
    [ExtensionAttribute]
public static bool HasVBucketMapChanged(BucketConfig config, BucketConfig other, Boolean& emptyVBucketMap);
    [ExtensionAttribute]
public static bool HasClusterNodesChanged(BucketConfig config, BucketConfig other);
    [ExtensionAttribute]
public static bool HasConfigChanges(BucketConfig newConfig, BucketConfig oldConfig, string bucketName);
    [ExtensionAttribute]
public static bool IsNewerThan(BucketConfig newConfig, BucketConfig oldConfig);
    [ExtensionAttribute]
public static IEnumerable`1<HostEndpointWithPort> GetBootstrapEndpoints(BucketConfig bucketConfig, Nullable`1<bool> enableTls);
    [ExtensionAttribute]
public static List`1<NodeAdapter> GetNodes(BucketConfig bucketConfig);
    [ExtensionAttribute]
public static ClusterCapabilities GetClusterCapabilities(BucketConfig config);
    [ExtensionAttribute]
public static void ReplacePlaceholderWithBootstrapHost(BucketConfig config, string host);
}
internal class Couchbase.Core.Configuration.Server.ClusterCapabilities : object {
    public static string SCOPED_SEARCH_INDEX;
    public static string VECTOR_SEARCH;
    [CompilerGeneratedAttribute]
private IEnumerable`1<int> <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, IEnumerable`1<string>> <Capabilities>k__BackingField;
    [JsonPropertyNameAttribute("clusterCapabilitiesVer")]
public IEnumerable`1<int> Version { get; public set; }
    [JsonPropertyNameAttribute("clusterCapabilities")]
public Dictionary`2<string, IEnumerable`1<string>> Capabilities { get; public set; }
    internal bool EnhancedPreparedStatementsEnabled { get; }
    internal bool UseReplicaEnabled { get; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<int> get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(IEnumerable`1<int> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, IEnumerable`1<string>> get_Capabilities();
    [CompilerGeneratedAttribute]
public void set_Capabilities(Dictionary`2<string, IEnumerable`1<string>> value);
    internal bool get_EnhancedPreparedStatementsEnabled();
    internal bool get_UseReplicaEnabled();
}
internal enum Couchbase.Core.Configuration.Server.ClusterCapabilityFeatures : Enum {
    public int value__;
    [DescriptionAttribute("enhancedPreparedStatements")]
public static ClusterCapabilityFeatures EnhancedPreparedStatements;
    [DescriptionAttribute("readFromReplica")]
public static ClusterCapabilityFeatures UseReplicaFeature;
}
internal class Couchbase.Core.Configuration.Server.CollectionDef : object {
    [CompilerGeneratedAttribute]
private string <name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <uid>k__BackingField;
    public string name { get; public set; }
    public string uid { get; public set; }
    [CompilerGeneratedAttribute]
public string get_name();
    [CompilerGeneratedAttribute]
public void set_name(string value);
    [CompilerGeneratedAttribute]
public string get_uid();
    [CompilerGeneratedAttribute]
public void set_uid(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.Configuration.Server.ConfigHandler : object {
    private ILogger`1<ConfigHandler> _logger;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private BufferBlock`1<BucketConfig> _configQueue;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ActionBlock`1<BucketConfig> _configHandler;
    private CancellationTokenSource _tokenSource;
    private ClusterContext _context;
    private IHttpStreamingConfigListenerFactory _configListenerFactory;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _httpConfigListeners;
    private HashSet`1<IConfigUpdateEventSink> _configChangedSubscribers;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _running;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _disposed;
    public ConfigHandler(ClusterContext context, IHttpStreamingConfigListenerFactory configListenerFactory, ILogger`1<ConfigHandler> logger);
    public sealed virtual void Start(bool withPolling);
    private void StartPoll();
    [AsyncStateMachineAttribute("Couchbase.Core.Configuration.Server.ConfigHandler/<PollAsync>d__13")]
private Task PollAsync();
    [AsyncStateMachineAttribute("Couchbase.Core.Configuration.Server.ConfigHandler/<ProcessAsync>d__14")]
private Task ProcessAsync(BucketConfig newMap);
    public sealed virtual void Publish(BucketConfig config);
    public sealed virtual void Subscribe(IConfigUpdateEventSink bucket);
    public sealed virtual void Unsubscribe(IConfigUpdateEventSink configSubscriber);
    public sealed virtual BucketConfig Get(string bucketName);
    public sealed virtual void Clear();
    public sealed virtual void Dispose();
}
internal class Couchbase.Core.Configuration.Server.ConfigPushHandler : object {
    private ILogger _logger;
    private ClusterContext _context;
    private TypedRedactor _redactor;
    private BucketBase _bucket;
    private CancellationTokenSource _continueLoopingSource;
    private object _lock;
    private SemaphoreSlim _versionReceivedEvent;
    private ConfigVersion _latestVersion;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _disposed;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`5<ILogger, Redacted`1<string>, ConfigVersion, Nullable`1<ConfigVersion>, Exception> __LogConfigPublishedCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`5<ILogger, Redacted`1<string>, ConfigVersion, ConfigVersion, Exception> __LogSkippingPushCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`3<ILogger, ConfigVersion, Exception> __LogEnteredSemaphorePushCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`3<ILogger, ConfigVersion, Exception> __LogServerPushedVersionCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`4<ILogger, ConfigVersion, ConfigVersion, Exception> __LogUpdatedLatestVersionCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`5<ILogger, Redacted`1<string>, ConfigVersion, ConfigVersion, Exception> __LogSkippingPush2Callback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`4<ILogger, ConfigVersion, ConfigVersion, Exception> __LogAttemptedButSkippedCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`4<ILogger, ConfigVersion, ConfigVersion, Exception> __LogServerReturnedNullConfigCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`3<ILogger, ConfigVersion, Exception> __LogNodeWasNullCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`5<ILogger, Redacted`1<string>, ConfigVersion, ConfigVersion, Exception> __LogFetchedConfigOlderCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`3<ILogger, ConfigVersion, Exception> __LogNoLiveKvNodesCallback;
    public ConfigPushHandler(BucketBase bucket, ClusterContext context, ILogger logger, TypedRedactor redactor);
    private static ConfigPushHandler();
    [AsyncStateMachineAttribute("Couchbase.Core.Configuration.Server.ConfigPushHandler/<ProcessConfigPushesAsync>d__10")]
private Task ProcessConfigPushesAsync(CancellationToken cancellationToken);
    public void ProcessConfigPush(ConfigVersion configVersion);
    private void TryReleaseNewVersionSemaphore();
    public sealed virtual void Dispose();
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogConfigPublished(Redacted`1<string> bucket, ConfigVersion pushedVersion, Nullable`1<ConfigVersion> currentVersion);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogSkippingPush(Redacted`1<string> bucket, ConfigVersion pushedVersion, ConfigVersion currentVersion);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogEnteredSemaphorePush(ConfigVersion pushedVersion);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogServerPushedVersion(ConfigVersion configVersion);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogUpdatedLatestVersion(ConfigVersion latestVersion, ConfigVersion configVersion);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogSkippingPush2(Redacted`1<string> bucket, ConfigVersion pushedVersion, ConfigVersion currentVersion);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogAttemptedButSkipped(ConfigVersion nextVersion, ConfigVersion publishedVersion);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogServerReturnedNullConfig(ConfigVersion pushedVersion, ConfigVersion effectiveVersion);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogNodeWasNull(ConfigVersion effectiveVersion);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogFetchedConfigOlder(Redacted`1<string> bucket, ConfigVersion fetchedVersion, ConfigVersion pushedVersion);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogNoLiveKvNodes(ConfigVersion configVersion);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.Configuration.Server.ConfigPushHandlerFactory : object {
    private ILogger`1<ConfigPushHandler> _logger;
    private TypedRedactor _redactor;
    public ConfigPushHandlerFactory(ILogger`1<ConfigPushHandler> logger, TypedRedactor redactor);
    public sealed virtual ConfigPushHandler Create(CouchbaseBucket bucket, ClusterContext clusterContext);
}
[IsReadOnlyAttribute]
internal class Couchbase.Core.Configuration.Server.ConfigVersion : ValueType {
    private string _configVersionToString;
    [CompilerGeneratedAttribute]
private ulong <Epoch>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Revision>k__BackingField;
    public ulong Epoch { get; }
    public ulong Revision { get; }
    public ConfigVersion(ulong epoch, ulong revision);
    [CompilerGeneratedAttribute]
public ulong get_Epoch();
    [CompilerGeneratedAttribute]
public ulong get_Revision();
    public sealed virtual int CompareTo(ConfigVersion other);
    public sealed virtual bool Equals(ConfigVersion other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(ConfigVersion left, ConfigVersion right);
    public static bool op_Inequality(ConfigVersion left, ConfigVersion right);
    public static bool op_GreaterThanOrEqual(ConfigVersion left, ConfigVersion right);
    public static bool op_LessThanOrEqual(ConfigVersion left, ConfigVersion right);
    public static bool op_GreaterThan(ConfigVersion left, ConfigVersion right);
    public static bool op_LessThan(ConfigVersion left, ConfigVersion right);
    public virtual string ToString();
}
public class Couchbase.Core.Configuration.Server.ContextStoppedException : Exception {
    public ContextStoppedException(string message);
    public ContextStoppedException(string message, Exception innerException);
}
internal class Couchbase.Core.Configuration.Server.Ddocs : object {
    [CompilerGeneratedAttribute]
private string <uri>k__BackingField;
    public string uri { get; public set; }
    [CompilerGeneratedAttribute]
public string get_uri();
    [CompilerGeneratedAttribute]
public void set_uri(string value);
}
internal class Couchbase.Core.Configuration.Server.ExternalAddressesConfig : object {
    [CompilerGeneratedAttribute]
private string <Hostname>k__BackingField;
    [CompilerGeneratedAttribute]
private Services <Ports>k__BackingField;
    [JsonPropertyNameAttribute("hostname")]
public string Hostname { get; public set; }
    [JsonPropertyNameAttribute("ports")]
public Services Ports { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Hostname();
    [CompilerGeneratedAttribute]
public void set_Hostname(string value);
    [CompilerGeneratedAttribute]
public Services get_Ports();
    [CompilerGeneratedAttribute]
public void set_Ports(Services value);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Core.Configuration.Server.IConfigHandler {
    public abstract virtual void Start(bool withPolling);
    public abstract virtual void Publish(BucketConfig config);
    public abstract virtual void Subscribe(IConfigUpdateEventSink configSubscriber);
    public abstract virtual void Unsubscribe(IConfigUpdateEventSink configSubscriber);
    public abstract virtual BucketConfig Get(string bucketName);
    public abstract virtual void Clear();
}
internal interface Couchbase.Core.Configuration.Server.IConfigPushHandlerFactory {
    public abstract virtual ConfigPushHandler Create(CouchbaseBucket bucket, ClusterContext clusterContext);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Core.Configuration.Server.IConfigUpdateEventSink {
    public string Name { get; }
    public IEnumerable`1<IClusterNode> ClusterNodes { get; }
    public abstract virtual Task ConfigUpdatedAsync(BucketConfig newConfig);
    public abstract virtual string get_Name();
    public abstract virtual IEnumerable`1<IClusterNode> get_ClusterNodes();
}
internal class Couchbase.Core.Configuration.Server.Manifest : object {
    [CompilerGeneratedAttribute]
private string <uid>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ScopeDef> <scopes>k__BackingField;
    public string uid { get; public set; }
    public List`1<ScopeDef> scopes { get; public set; }
    [CompilerGeneratedAttribute]
public string get_uid();
    [CompilerGeneratedAttribute]
public void set_uid(string value);
    [CompilerGeneratedAttribute]
public List`1<ScopeDef> get_scopes();
    [CompilerGeneratedAttribute]
public void set_scopes(List`1<ScopeDef> value);
}
internal class Couchbase.Core.Configuration.Server.Node : object {
    [CompilerGeneratedAttribute]
private string <CouchApiBase>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CouchApiBaseHttps>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Hostname>k__BackingField;
    [CompilerGeneratedAttribute]
private Ports <Ports>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Services>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [JsonPropertyNameAttribute("couchApiBase")]
public string CouchApiBase { get; public set; }
    [JsonPropertyNameAttribute("couchApiBaseHttps")]
public string CouchApiBaseHttps { get; public set; }
    [JsonPropertyNameAttribute("hostname")]
public string Hostname { get; public set; }
    [JsonPropertyNameAttribute("ports")]
public Ports Ports { get; public set; }
    [JsonPropertyNameAttribute("services")]
public List`1<string> Services { get; public set; }
    [JsonPropertyNameAttribute("version")]
public string Version { get; public set; }
    [CompilerGeneratedAttribute]
public string get_CouchApiBase();
    [CompilerGeneratedAttribute]
public void set_CouchApiBase(string value);
    [CompilerGeneratedAttribute]
public string get_CouchApiBaseHttps();
    [CompilerGeneratedAttribute]
public void set_CouchApiBaseHttps(string value);
    [CompilerGeneratedAttribute]
public string get_Hostname();
    [CompilerGeneratedAttribute]
public void set_Hostname(string value);
    [CompilerGeneratedAttribute]
public Ports get_Ports();
    [CompilerGeneratedAttribute]
public void set_Ports(Ports value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Services();
    [CompilerGeneratedAttribute]
public void set_Services(List`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    public sealed virtual bool Equals(Node other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(Node left, Node right);
    public static bool op_Inequality(Node left, Node right);
}
internal class Couchbase.Core.Configuration.Server.NodeAdapter : object {
    private string _mappedNodeInfo;
    [CompilerGeneratedAttribute]
private ConfigVersion <ConfigVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseAlternateAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Hostname>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CouchbaseApiBase>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CouchbaseApiBaseHttps>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MgmtApi>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MgmtApiSsl>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Views>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ViewsSsl>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Moxi>k__BackingField;
    [CompilerGeneratedAttribute]
private int <KeyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private int <KeyValueSsl>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Projector>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IndexAdmin>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IndexScan>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IndexHttp>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IndexStreamInit>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IndexStreamCatchup>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IndexStreamMaint>k__BackingField;
    [CompilerGeneratedAttribute]
private int <N1Ql>k__BackingField;
    [CompilerGeneratedAttribute]
private int <N1QlSsl>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Fts>k__BackingField;
    [CompilerGeneratedAttribute]
private int <FtsSsl>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Analytics>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AnalyticsSsl>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Eventing>k__BackingField;
    [CompilerGeneratedAttribute]
private int <EventingSsl>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsKvNode>k__BackingField;
    public ConfigVersion ConfigVersion { get; internal set; }
    private bool UseAlternateAddress { get; private set; }
    public string Hostname { get; public set; }
    public string CouchbaseApiBase { get; public set; }
    public string CouchbaseApiBaseHttps { get; public set; }
    public int MgmtApi { get; public set; }
    public int MgmtApiSsl { get; public set; }
    public int Views { get; public set; }
    public int ViewsSsl { get; public set; }
    public int Moxi { get; public set; }
    public int KeyValue { get; public set; }
    public int KeyValueSsl { get; public set; }
    public int Projector { get; public set; }
    public int IndexAdmin { get; public set; }
    public int IndexScan { get; public set; }
    public int IndexHttp { get; public set; }
    public int IndexStreamInit { get; public set; }
    public int IndexStreamCatchup { get; public set; }
    public int IndexStreamMaint { get; public set; }
    public int N1Ql { get; public set; }
    public int N1QlSsl { get; public set; }
    public int Fts { get; public set; }
    public int FtsSsl { get; public set; }
    public int Analytics { get; public set; }
    public int AnalyticsSsl { get; public set; }
    public int Eventing { get; public set; }
    public int EventingSsl { get; public set; }
    public bool IsViewNode { get; }
    public bool IsKvNode { get; private set; }
    public bool IsIndexNode { get; }
    public bool IsQueryNode { get; }
    public bool IsSearchNode { get; }
    public bool IsAnalyticsNode { get; }
    public bool IsEventingNode { get; }
    public bool IsManagementNode { get; }
    public NodeAdapter(Node node, NodesExt nodeExt, BucketConfig bucketConfig);
    [CompilerGeneratedAttribute]
public ConfigVersion get_ConfigVersion();
    [CompilerGeneratedAttribute]
internal void set_ConfigVersion(ConfigVersion value);
    [CompilerGeneratedAttribute]
private bool get_UseAlternateAddress();
    [CompilerGeneratedAttribute]
private void set_UseAlternateAddress(bool value);
    private string GetHostname(Node node, NodesExt nodeExt, BucketConfig bucketConfig);
    internal bool UseAlternateNetwork(NodesExt nodeExt, BucketConfig bucketConfig);
    internal string GetHostname(NodesExt nodeExt, BucketConfig bucketConfig);
    internal Services GetServicePorts(NodesExt nodeExt, BucketConfig bucketConfig);
    private void ConfigureServicePorts(Services services);
    [CompilerGeneratedAttribute]
public string get_Hostname();
    [CompilerGeneratedAttribute]
public void set_Hostname(string value);
    [CompilerGeneratedAttribute]
public string get_CouchbaseApiBase();
    [CompilerGeneratedAttribute]
public void set_CouchbaseApiBase(string value);
    [CompilerGeneratedAttribute]
public string get_CouchbaseApiBaseHttps();
    [CompilerGeneratedAttribute]
public void set_CouchbaseApiBaseHttps(string value);
    [CompilerGeneratedAttribute]
public int get_MgmtApi();
    [CompilerGeneratedAttribute]
public void set_MgmtApi(int value);
    [CompilerGeneratedAttribute]
public int get_MgmtApiSsl();
    [CompilerGeneratedAttribute]
public void set_MgmtApiSsl(int value);
    [CompilerGeneratedAttribute]
public int get_Views();
    [CompilerGeneratedAttribute]
public void set_Views(int value);
    [CompilerGeneratedAttribute]
public int get_ViewsSsl();
    [CompilerGeneratedAttribute]
public void set_ViewsSsl(int value);
    [CompilerGeneratedAttribute]
public int get_Moxi();
    [CompilerGeneratedAttribute]
public void set_Moxi(int value);
    [CompilerGeneratedAttribute]
public int get_KeyValue();
    [CompilerGeneratedAttribute]
public void set_KeyValue(int value);
    [CompilerGeneratedAttribute]
public int get_KeyValueSsl();
    [CompilerGeneratedAttribute]
public void set_KeyValueSsl(int value);
    [CompilerGeneratedAttribute]
public int get_Projector();
    [CompilerGeneratedAttribute]
public void set_Projector(int value);
    [CompilerGeneratedAttribute]
public int get_IndexAdmin();
    [CompilerGeneratedAttribute]
public void set_IndexAdmin(int value);
    [CompilerGeneratedAttribute]
public int get_IndexScan();
    [CompilerGeneratedAttribute]
public void set_IndexScan(int value);
    [CompilerGeneratedAttribute]
public int get_IndexHttp();
    [CompilerGeneratedAttribute]
public void set_IndexHttp(int value);
    [CompilerGeneratedAttribute]
public int get_IndexStreamInit();
    [CompilerGeneratedAttribute]
public void set_IndexStreamInit(int value);
    [CompilerGeneratedAttribute]
public int get_IndexStreamCatchup();
    [CompilerGeneratedAttribute]
public void set_IndexStreamCatchup(int value);
    [CompilerGeneratedAttribute]
public int get_IndexStreamMaint();
    [CompilerGeneratedAttribute]
public void set_IndexStreamMaint(int value);
    [CompilerGeneratedAttribute]
public int get_N1Ql();
    [CompilerGeneratedAttribute]
public void set_N1Ql(int value);
    [CompilerGeneratedAttribute]
public int get_N1QlSsl();
    [CompilerGeneratedAttribute]
public void set_N1QlSsl(int value);
    [CompilerGeneratedAttribute]
public int get_Fts();
    [CompilerGeneratedAttribute]
public void set_Fts(int value);
    [CompilerGeneratedAttribute]
public int get_FtsSsl();
    [CompilerGeneratedAttribute]
public void set_FtsSsl(int value);
    [CompilerGeneratedAttribute]
public int get_Analytics();
    [CompilerGeneratedAttribute]
public void set_Analytics(int value);
    [CompilerGeneratedAttribute]
public int get_AnalyticsSsl();
    [CompilerGeneratedAttribute]
public void set_AnalyticsSsl(int value);
    [CompilerGeneratedAttribute]
public int get_Eventing();
    [CompilerGeneratedAttribute]
public void set_Eventing(int value);
    [CompilerGeneratedAttribute]
public int get_EventingSsl();
    [CompilerGeneratedAttribute]
public void set_EventingSsl(int value);
    public bool get_IsViewNode();
    [CompilerGeneratedAttribute]
public bool get_IsKvNode();
    [CompilerGeneratedAttribute]
private void set_IsKvNode(bool value);
    public bool get_IsIndexNode();
    public bool get_IsQueryNode();
    public bool get_IsSearchNode();
    public bool get_IsAnalyticsNode();
    public bool get_IsEventingNode();
    public bool get_IsManagementNode();
    public virtual string ToString();
}
internal class Couchbase.Core.Configuration.Server.NodesExt : object {
    [CompilerGeneratedAttribute]
private bool <ThisNode>k__BackingField;
    [CompilerGeneratedAttribute]
private Services <Services>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Hostname>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, ExternalAddressesConfig> <AlternateAddresses>k__BackingField;
    [JsonPropertyNameAttribute("thisNode")]
public bool ThisNode { get; public set; }
    [JsonPropertyNameAttribute("services")]
public Services Services { get; public set; }
    [JsonPropertyNameAttribute("hostname")]
public string Hostname { get; public set; }
    [JsonPropertyNameAttribute("alternateAddresses")]
public Dictionary`2<string, ExternalAddressesConfig> AlternateAddresses { get; public set; }
    public bool HasAlternateAddress { get; }
    [CompilerGeneratedAttribute]
public bool get_ThisNode();
    [CompilerGeneratedAttribute]
public void set_ThisNode(bool value);
    [CompilerGeneratedAttribute]
public Services get_Services();
    [CompilerGeneratedAttribute]
public void set_Services(Services value);
    [CompilerGeneratedAttribute]
public string get_Hostname();
    [CompilerGeneratedAttribute]
public void set_Hostname(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, ExternalAddressesConfig> get_AlternateAddresses();
    [CompilerGeneratedAttribute]
public void set_AlternateAddresses(Dictionary`2<string, ExternalAddressesConfig> value);
    public bool get_HasAlternateAddress();
    public sealed virtual bool Equals(NodesExt other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(NodesExt left, NodesExt right);
    public static bool op_Inequality(NodesExt left, NodesExt right);
}
internal class Couchbase.Core.Configuration.Server.Ports : object {
    [CompilerGeneratedAttribute]
private int <Direct>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Proxy>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SslDirect>k__BackingField;
    [CompilerGeneratedAttribute]
private int <HttpsCapi>k__BackingField;
    [CompilerGeneratedAttribute]
private int <HttpsMgmt>k__BackingField;
    [JsonPropertyNameAttribute("direct")]
public int Direct { get; public set; }
    [JsonPropertyNameAttribute("proxy")]
public int Proxy { get; public set; }
    [JsonPropertyNameAttribute("sslDirect")]
public int SslDirect { get; public set; }
    [JsonPropertyNameAttribute("httpsCAPI")]
public int HttpsCapi { get; public set; }
    [JsonPropertyNameAttribute("httpsMgmt")]
public int HttpsMgmt { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Direct();
    [CompilerGeneratedAttribute]
public void set_Direct(int value);
    [CompilerGeneratedAttribute]
public int get_Proxy();
    [CompilerGeneratedAttribute]
public void set_Proxy(int value);
    [CompilerGeneratedAttribute]
public int get_SslDirect();
    [CompilerGeneratedAttribute]
public void set_SslDirect(int value);
    [CompilerGeneratedAttribute]
public int get_HttpsCapi();
    [CompilerGeneratedAttribute]
public void set_HttpsCapi(int value);
    [CompilerGeneratedAttribute]
public int get_HttpsMgmt();
    [CompilerGeneratedAttribute]
public void set_HttpsMgmt(int value);
    public sealed virtual bool Equals(Ports other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(Ports left, Ports right);
    public static bool op_Inequality(Ports left, Ports right);
}
internal class Couchbase.Core.Configuration.Server.ScopeDef : object {
    [CompilerGeneratedAttribute]
private string <name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <uid>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<CollectionDef> <collections>k__BackingField;
    public string name { get; public set; }
    public string uid { get; public set; }
    public List`1<CollectionDef> collections { get; public set; }
    [CompilerGeneratedAttribute]
public string get_name();
    [CompilerGeneratedAttribute]
public void set_name(string value);
    [CompilerGeneratedAttribute]
public string get_uid();
    [CompilerGeneratedAttribute]
public void set_uid(string value);
    [CompilerGeneratedAttribute]
public List`1<CollectionDef> get_collections();
    [CompilerGeneratedAttribute]
public void set_collections(List`1<CollectionDef> value);
}
internal class Couchbase.Core.Configuration.Server.Services : object {
    [CompilerGeneratedAttribute]
private int <Mgmt>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MgmtSsl>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IndexAdmin>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IndexScan>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IndexHttp>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IndexStreamInit>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IndexStreamCatchup>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IndexStreamMaint>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IndexHttps>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Kv>k__BackingField;
    [CompilerGeneratedAttribute]
private int <KvSsl>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Capi>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CapiSsl>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Projector>k__BackingField;
    [CompilerGeneratedAttribute]
private int <N1Ql>k__BackingField;
    [CompilerGeneratedAttribute]
private int <N1QlSsl>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Cbas>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CbasSsl>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Fts>k__BackingField;
    [CompilerGeneratedAttribute]
private int <FtsSsl>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Moxi>k__BackingField;
    [CompilerGeneratedAttribute]
private int <EventingAdminPort>k__BackingField;
    [CompilerGeneratedAttribute]
private int <EventingSSL>k__BackingField;
    [JsonPropertyNameAttribute("mgmt")]
public int Mgmt { get; public set; }
    [JsonPropertyNameAttribute("mgmtSSL")]
public int MgmtSsl { get; public set; }
    [JsonPropertyNameAttribute("indexAdmin")]
public int IndexAdmin { get; public set; }
    [JsonPropertyNameAttribute("indexScan")]
public int IndexScan { get; public set; }
    [JsonPropertyNameAttribute("indexHttp")]
public int IndexHttp { get; public set; }
    [JsonPropertyNameAttribute("indexStreamInit")]
public int IndexStreamInit { get; public set; }
    [JsonPropertyNameAttribute("indexStreamCatchup")]
public int IndexStreamCatchup { get; public set; }
    [JsonPropertyNameAttribute("indexStreamMaint")]
public int IndexStreamMaint { get; public set; }
    [JsonPropertyNameAttribute("indexHttps")]
public int IndexHttps { get; public set; }
    [JsonPropertyNameAttribute("kv")]
public int Kv { get; public set; }
    [JsonPropertyNameAttribute("kvSSL")]
public int KvSsl { get; public set; }
    [JsonPropertyNameAttribute("capi")]
public int Capi { get; public set; }
    [JsonPropertyNameAttribute("capiSSL")]
public int CapiSsl { get; public set; }
    [JsonPropertyNameAttribute("projector")]
public int Projector { get; public set; }
    [JsonPropertyNameAttribute("n1ql")]
public int N1Ql { get; public set; }
    [JsonPropertyNameAttribute("n1qlSSL")]
public int N1QlSsl { get; public set; }
    [JsonPropertyNameAttribute("cbas")]
public int Cbas { get; public set; }
    [JsonPropertyNameAttribute("cbasSSL")]
public int CbasSsl { get; public set; }
    [JsonPropertyNameAttribute("fts")]
public int Fts { get; public set; }
    [JsonPropertyNameAttribute("ftsSSL")]
public int FtsSsl { get; public set; }
    [JsonPropertyNameAttribute("moxi")]
public int Moxi { get; public set; }
    [JsonPropertyNameAttribute("eventingAdminPort")]
public int EventingAdminPort { get; public set; }
    [JsonPropertyNameAttribute("eventingSSL")]
public int EventingSSL { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Mgmt();
    [CompilerGeneratedAttribute]
public void set_Mgmt(int value);
    [CompilerGeneratedAttribute]
public int get_MgmtSsl();
    [CompilerGeneratedAttribute]
public void set_MgmtSsl(int value);
    [CompilerGeneratedAttribute]
public int get_IndexAdmin();
    [CompilerGeneratedAttribute]
public void set_IndexAdmin(int value);
    [CompilerGeneratedAttribute]
public int get_IndexScan();
    [CompilerGeneratedAttribute]
public void set_IndexScan(int value);
    [CompilerGeneratedAttribute]
public int get_IndexHttp();
    [CompilerGeneratedAttribute]
public void set_IndexHttp(int value);
    [CompilerGeneratedAttribute]
public int get_IndexStreamInit();
    [CompilerGeneratedAttribute]
public void set_IndexStreamInit(int value);
    [CompilerGeneratedAttribute]
public int get_IndexStreamCatchup();
    [CompilerGeneratedAttribute]
public void set_IndexStreamCatchup(int value);
    [CompilerGeneratedAttribute]
public int get_IndexStreamMaint();
    [CompilerGeneratedAttribute]
public void set_IndexStreamMaint(int value);
    [CompilerGeneratedAttribute]
public int get_IndexHttps();
    [CompilerGeneratedAttribute]
public void set_IndexHttps(int value);
    [CompilerGeneratedAttribute]
public int get_Kv();
    [CompilerGeneratedAttribute]
public void set_Kv(int value);
    [CompilerGeneratedAttribute]
public int get_KvSsl();
    [CompilerGeneratedAttribute]
public void set_KvSsl(int value);
    [CompilerGeneratedAttribute]
public int get_Capi();
    [CompilerGeneratedAttribute]
public void set_Capi(int value);
    [CompilerGeneratedAttribute]
public int get_CapiSsl();
    [CompilerGeneratedAttribute]
public void set_CapiSsl(int value);
    [CompilerGeneratedAttribute]
public int get_Projector();
    [CompilerGeneratedAttribute]
public void set_Projector(int value);
    [CompilerGeneratedAttribute]
public int get_N1Ql();
    [CompilerGeneratedAttribute]
public void set_N1Ql(int value);
    [CompilerGeneratedAttribute]
public int get_N1QlSsl();
    [CompilerGeneratedAttribute]
public void set_N1QlSsl(int value);
    [CompilerGeneratedAttribute]
public int get_Cbas();
    [CompilerGeneratedAttribute]
public void set_Cbas(int value);
    [CompilerGeneratedAttribute]
public int get_CbasSsl();
    [CompilerGeneratedAttribute]
public void set_CbasSsl(int value);
    [CompilerGeneratedAttribute]
public int get_Fts();
    [CompilerGeneratedAttribute]
public void set_Fts(int value);
    [CompilerGeneratedAttribute]
public int get_FtsSsl();
    [CompilerGeneratedAttribute]
public void set_FtsSsl(int value);
    [CompilerGeneratedAttribute]
public int get_Moxi();
    [CompilerGeneratedAttribute]
public void set_Moxi(int value);
    [CompilerGeneratedAttribute]
public int get_EventingAdminPort();
    [CompilerGeneratedAttribute]
public void set_EventingAdminPort(int value);
    [CompilerGeneratedAttribute]
public int get_EventingSSL();
    [CompilerGeneratedAttribute]
public void set_EventingSSL(int value);
    public sealed virtual bool Equals(Services other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(Services left, Services right);
    public static bool op_Inequality(Services left, Services right);
}
internal class Couchbase.Core.Configuration.Server.Streaming.HttpClusterMap : HttpClusterMapBase {
    private ICouchbaseHttpClientFactory _httpClientFactory;
    public static string Path;
    private ClusterContext _context;
    public HttpClusterMap(ICouchbaseHttpClientFactory httpClientFactory, ClusterContext context);
    [AsyncStateMachineAttribute("Couchbase.Core.Configuration.Server.Streaming.HttpClusterMap/<GetClusterMapAsync>d__4")]
public virtual Task`1<BucketConfig> GetClusterMapAsync(string bucketName, HostEndpoint hostEndpoint, CancellationToken cancellationToken);
}
internal abstract class Couchbase.Core.Configuration.Server.Streaming.HttpClusterMapBase : object {
    public abstract virtual Task`1<BucketConfig> GetClusterMapAsync(string bucketName, HostEndpoint hostEndpoint, CancellationToken cancellationToken);
}
internal class Couchbase.Core.Configuration.Server.Streaming.HttpClusterMapFactory : object {
    private ICouchbaseHttpClientFactory _couchbaseHttpClientFactory;
    public HttpClusterMapFactory(ICouchbaseHttpClientFactory couchbaseHttpClientFactory);
    public sealed virtual HttpClusterMapBase Create(ClusterContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.Configuration.Server.Streaming.HttpStreamingConfigListener : object {
    private static int InitialDelayMs;
    private static int MaxDelayMs;
    private ILogger`1<HttpStreamingConfigListener> _logger;
    private ClusterOptions _clusterOptions;
    private ICouchbaseHttpClientFactory _httpClientFactory;
    private IConfigHandler _configHandler;
    private IConfigUpdateEventSink _configSubscriber;
    private string _streamingUriPath;
    private CancellationTokenSource _cancellationTokenSource;
    [NullableAttribute("2")]
private Task _backgroundTask;
    private object _manageTaskLock;
    private bool _disposed;
    [CompilerGeneratedAttribute]
private bool <Started>k__BackingField;
    public bool Started { get; private set; }
    public HttpStreamingConfigListener(IConfigUpdateEventSink configSubscriber, ClusterOptions clusterOptions, ICouchbaseHttpClientFactory httpClientFactory, IConfigHandler configHandler, ILogger`1<HttpStreamingConfigListener> logger);
    [CompilerGeneratedAttribute]
public bool get_Started();
    [CompilerGeneratedAttribute]
private void set_Started(bool value);
    public void StartListening();
    private Task StartBackgroundTask();
    public sealed virtual void Dispose();
    [AsyncStateMachineAttribute("Couchbase.Core.Configuration.Server.Streaming.HttpStreamingConfigListener/<DisposeAsync>d__20")]
public sealed virtual ValueTask DisposeAsync();
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Couchbase.Core.Configuration.Server.Streaming.HttpStreamingConfigListener/<<StartBackgroundTask>b__18_0>d")]
[CompilerGeneratedAttribute]
private Task <StartBackgroundTask>b__18_0();
}
internal interface Couchbase.Core.Configuration.Server.Streaming.IHttpClusterMapFactory {
    public abstract virtual HttpClusterMapBase Create(ClusterContext context);
}
public interface Couchbase.Core.DataMapping.IDataMapper {
    public abstract virtual T Map(Stream stream);
    public abstract virtual ValueTask`1<T> MapAsync(Stream stream, CancellationToken cancellationToken);
}
internal class Couchbase.Core.DataMapping.JsonDataMapper : object {
    private ITypeSerializer _serializer;
    public JsonDataMapper(ITypeSerializer serializer);
    public sealed virtual T Map(Stream stream);
    public sealed virtual ValueTask`1<T> MapAsync(Stream stream, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.DI.BucketFactory : object {
    private ClusterContext _clusterContext;
    private IScopeFactory _scopeFactory;
    private IRetryOrchestrator _retryOrchestrator;
    private IVBucketKeyMapperFactory _vBucketKeyMapperFactory;
    private IKetamaKeyMapperFactory _ketamaKeyMapperFactory;
    private ILogger`1<CouchbaseBucket> _couchbaseLogger;
    private ILogger`1<MemcachedBucket> _memcachedLogger;
    private TypedRedactor _redactor;
    private IBootstrapperFactory _bootstrapperFactory;
    private IRequestTracer _tracer;
    private IOperationConfigurator _operationConfigurator;
    private IRetryStrategy _retryStrategy;
    private IHttpClusterMapFactory _httpClusterMapFactory;
    private IConfigPushHandlerFactory _configPushHandlerFactory;
    public BucketFactory(ClusterContext clusterContext, IScopeFactory scopeFactory, IRetryOrchestrator retryOrchestrator, IVBucketKeyMapperFactory vBucketKeyMapperFactory, IKetamaKeyMapperFactory ketamaKeyMapperFactory, ILogger`1<CouchbaseBucket> couchbaseLogger, ILogger`1<MemcachedBucket> memcachedLogger, TypedRedactor redactor, IBootstrapperFactory bootstrapperFactory, IRequestTracer tracer, IOperationConfigurator operationConfigurator, IRetryStrategy retryStrategy, IHttpClusterMapFactory httpClusterMapFactory, IConfigPushHandlerFactory configPushHandlerFactory);
    public sealed virtual BucketBase Create(string name, BucketType bucketType, BucketConfig config);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.DI.ClusterNodeFactory : object {
    private ClusterContext _clusterContext;
    private IConnectionPoolFactory _connectionPoolFactory;
    private ILogger`1<ClusterNode> _logger;
    private ObjectPool`1<OperationBuilder> _operationBuilderPool;
    private ICircuitBreaker _circuitBreaker;
    private ISaslMechanismFactory _saslMechanismFactory;
    private TypedRedactor _redactor;
    private IRequestTracer _tracer;
    private IOperationConfigurator _operationConfigurator;
    public ClusterNodeFactory(ClusterContext clusterContext, IConnectionPoolFactory connectionPoolFactory, ILogger`1<ClusterNode> logger, ObjectPool`1<OperationBuilder> operationBuilderPool, ICircuitBreaker circuitBreaker, ISaslMechanismFactory saslMechanismFactory, TypedRedactor redactor, IRequestTracer tracer, IOperationConfigurator operationConfigurator);
    public sealed virtual Task`1<IClusterNode> CreateAndConnectAsync(HostEndpointWithPort endPoint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Couchbase.Core.DI.ClusterNodeFactory/<CreateAndConnectAsync>d__11")]
public sealed virtual Task`1<IClusterNode> CreateAndConnectAsync(HostEndpointWithPort endPoint, NodeAdapter nodeAdapter, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.DI.CollectionFactory : object {
    private IOperationConfigurator _operationConfigurator;
    private ILogger`1<CouchbaseCollection> _logger;
    private ILogger`1<GetResult> _getLogger;
    private IRedactor _redactor;
    private IRequestTracer _tracer;
    private IFallbackTypeSerializerProvider _fallbackTypeSerializerProvider;
    private IServiceProvider _serviceProvider;
    public CollectionFactory(IOperationConfigurator operationConfigurator, ILogger`1<CouchbaseCollection> logger, ILogger`1<GetResult> getLogger, IRedactor redactor, IRequestTracer tracer, IFallbackTypeSerializerProvider fallbackTypeSerializerProvider, IServiceProvider serviceProvider);
    public sealed virtual ICouchbaseCollection Create(BucketBase bucket, IScope scope, string name);
}
internal class Couchbase.Core.DI.CouchbaseServiceProvider : object {
    [NullableAttribute("1")]
private IReadOnlyDictionary`2<Type, IServiceFactory> _services;
    public CouchbaseServiceProvider(IEnumerable`1<KeyValuePair`2<Type, IServiceFactory>> serviceFactories);
    [NullableContextAttribute("1")]
public sealed virtual object GetService(Type serviceType);
    [NullableContextAttribute("1")]
public sealed virtual bool IsService(Type serviceType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Couchbase.Core.DI.CouchbaseServiceProviderExtensions : object {
    [ExtensionAttribute]
public static object GetRequiredService(IServiceProvider serviceProvider, Type type);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static T GetService(IServiceProvider serviceProvider);
    [ExtensionAttribute]
public static T GetRequiredService(IServiceProvider serviceProvider);
    [ExtensionAttribute]
public static bool IsService(ICouchbaseServiceProvider serviceProvider);
}
internal static class Couchbase.Core.DI.DefaultServices : object {
    public static IDictionary`2<Type, IServiceFactory> GetDefaultServices();
    [IteratorStateMachineAttribute("Couchbase.Core.DI.DefaultServices/<GetDefaultServicesEnumerable>d__1")]
private static IEnumerable`1<ValueTuple`2<Type, IServiceFactory>> GetDefaultServicesEnumerable();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.DI.HttpStreamingConfigListenerFactory : object {
    private ClusterOptions _clusterOptions;
    private IServiceProvider _serviceProvider;
    private ILogger`1<HttpStreamingConfigListener> _logger;
    public HttpStreamingConfigListenerFactory(ClusterOptions clusterOptions, IServiceProvider serviceProvider, ILogger`1<HttpStreamingConfigListener> logger);
    public sealed virtual HttpStreamingConfigListener Create(IConfigUpdateEventSink configSubscriber, IConfigHandler configHandler);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Core.DI.IBucketFactory {
    public abstract virtual BucketBase Create(string name, BucketType bucketType, BucketConfig config);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Core.DI.IClusterNodeFactory {
    public abstract virtual Task`1<IClusterNode> CreateAndConnectAsync(HostEndpointWithPort endPoint, NodeAdapter nodeAdapter, CancellationToken cancellationToken);
    public abstract virtual Task`1<IClusterNode> CreateAndConnectAsync(HostEndpointWithPort endPoint, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Core.DI.ICollectionFactory {
    public abstract virtual ICouchbaseCollection Create(BucketBase bucket, IScope scope, string name);
}
internal interface Couchbase.Core.DI.ICouchbaseServiceProvider {
    public abstract virtual bool IsService(Type serviceType);
}
internal interface Couchbase.Core.DI.IHttpStreamingConfigListenerFactory {
    public abstract virtual HttpStreamingConfigListener Create(IConfigUpdateEventSink configSubscriber, IConfigHandler configHandler);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Core.DI.IKetamaKeyMapperFactory {
    public abstract virtual KetamaKeyMapper Create(BucketConfig bucketConfig);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Core.DI.ISaslMechanismFactory {
    public abstract virtual ISaslMechanism Create(MechanismType mechanismType, string username, string password);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Core.DI.IScopeFactory {
    public abstract virtual IScope CreateScope(string name, BucketBase bucket);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Core.DI.IServiceFactory {
    public abstract virtual void Initialize(IServiceProvider serviceProvider);
    public abstract virtual object CreateService(Type requestedType);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Core.DI.IVBucketFactory {
    public abstract virtual IVBucket Create(ICollection`1<HostEndpointWithPort> endPoints, short index, short primary, Int16[] replicas, ulong rev, VBucketServerMap vBucketServerMap, string bucketName, ConfigVersion configVersion);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Core.DI.IVBucketKeyMapperFactory {
    public abstract virtual IKeyMapper Create(BucketConfig bucketConfig, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.DI.KetamaKeyMapperFactory : object {
    private ClusterOptions _clusterOptions;
    private ILogger`1<KetamaKeyMapperFactory> _logger;
    public KetamaKeyMapperFactory(ClusterOptions clusterOptions, ILogger`1<KetamaKeyMapperFactory> logger);
    public sealed virtual KetamaKeyMapper Create(BucketConfig bucketConfig);
    private IList`1<HostEndpointWithPort> GetEndPoints(BucketConfig config);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Couchbase.Core.DI.LazyService`1 : Lazy`1<T> {
    public LazyService`1(IServiceProvider serviceProvider);
    public T GetValueOrThrow();
    [DoesNotReturnAttribute]
private static void ThrowServiceException();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.DI.SaslMechanismFactory : object {
    private ILogger`1<PlainSaslMechanism> _plainLogger;
    private ILogger`1<ScramShaMechanism> _scramLogger;
    private IRequestTracer _tracer;
    private IOperationConfigurator _operationConfigurator;
    public SaslMechanismFactory(ILogger`1<PlainSaslMechanism> plainLogger, ILogger`1<ScramShaMechanism> scramLogger, IRequestTracer tracer, IOperationConfigurator operationConfigurator);
    public sealed virtual ISaslMechanism Create(MechanismType mechanismType, string username, string password);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.DI.ScopeFactory : object {
    private ILogger`1<Scope> _scopeLogger;
    private ICollectionFactory _collectionFactory;
    private IEventingFunctionManagerFactory _eventingFunctionManagerFactory;
    public ScopeFactory(ILogger`1<Scope> scopeLogger, ICollectionFactory collectionFactory, IEventingFunctionManagerFactory eventingFunctionManagerFactory);
    public sealed virtual IScope CreateScope(string name, BucketBase bucket);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.DI.SingletonGenericServiceFactory : object {
    [DynamicallyAccessedMembersAttribute("3")]
private Type _genericType;
    private ConcurrentDictionary`2<Type, object> _singletons;
    [NullableAttribute("2")]
private IServiceProvider _serviceProvider;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`2<Type, object> _factoryDelegateCache;
    public SingletonGenericServiceFactory(Type genericType);
    public sealed virtual void Initialize(IServiceProvider serviceProvider);
    public sealed virtual object CreateService(Type requestedType);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2055")]
[UnconditionalSuppressMessageAttribute("Aot", "IL3050")]
private object Factory(Type requestedType);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private object <Factory>b__7_1(ParameterInfo p);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.DI.SingletonServiceFactory : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`2<IServiceProvider, object> _lambda;
    [NullableAttribute("2")]
private IServiceProvider _serviceProvider;
    [NullableAttribute("2")]
private object _singleton;
    public SingletonServiceFactory(object singleton);
    public SingletonServiceFactory(Type implementationType);
    public SingletonServiceFactory(Func`2<IServiceProvider, object> lambda);
    public sealed virtual void Initialize(IServiceProvider serviceProvider);
    public sealed virtual object CreateService(Type requestedType);
    private static Func`2<IServiceProvider, object> CreateFactory(Type implementationType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.DI.TransientServiceFactory : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`2<IServiceProvider, object> _factory;
    [NullableAttribute("2")]
private IServiceProvider _serviceProvider;
    public TransientServiceFactory(Func`2<IServiceProvider, object> factory);
    public TransientServiceFactory(Type type);
    public sealed virtual void Initialize(IServiceProvider serviceProvider);
    public sealed virtual object CreateService(Type requestedType);
    private static Func`2<IServiceProvider, object> CreateFactory(Type implementationType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.DI.VBucketFactory : object {
    private ILogger`1<VBucket> _logger;
    public VBucketFactory(ILogger`1<VBucket> logger);
    public sealed virtual IVBucket Create(ICollection`1<HostEndpointWithPort> endPoints, short index, short primary, Int16[] replicas, ulong rev, VBucketServerMap vBucketServerMap, string bucketName, ConfigVersion configVersion);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.DI.VBucketKeyMapperFactory : object {
    private IVBucketFactory _vBucketFactory;
    public VBucketKeyMapperFactory(IVBucketFactory vBucketFactory);
    public sealed virtual IKeyMapper Create(BucketConfig bucketConfig, CancellationToken cancellationToken);
}
internal class Couchbase.Core.Diagnostics.Metrics.HistogramCollector : object {
    private static int ExponentCount;
    private static int ExponentLocation;
    private static int MantissaToRetain;
    private static int MantissaShift;
    private static int MantissaMaximum;
    private static int MantissaMask;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ValueTuple`2[] Percentiles;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Nullable`1<KeyValuePair`2<string, string>> <Tag>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Int32[][] _dataBuckets;
    private int _totalCount;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Nullable`1<KeyValuePair`2<string, string>> Tag { get; }
    public HistogramCollector(KeyValuePair`2<string, string> tag);
    private static HistogramCollector();
    [CompilerGeneratedAttribute]
public Nullable`1<KeyValuePair`2<string, string>> get_Tag();
    public void AddMeasurement(double value);
    public HistogramData CollectMeasurements();
    [NullableContextAttribute("1")]
private static PercentilesUs CalculatePercentiles(Int32[][] dataBuckets, int totalCount);
    private static int GetPercentileTargetCount(int percentileIndex, int totalCount);
    private static double RebuildDouble(int exponent, int mantissa);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.Diagnostics.Metrics.HistogramCollectorSet : object {
    [NullableAttribute("2")]
private HistogramCollector _taglessHistogram;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<KeyValuePair`2<string, string>, HistogramCollector> _histograms;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; }
    public HistogramCollectorSet(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    public HistogramCollector GetOrAdd(Nullable`1<KeyValuePair`2<string, string>> tag);
    [IteratorStateMachineAttribute("Couchbase.Core.Diagnostics.Metrics.HistogramCollectorSet/<GetEnumerator>d__7")]
public sealed virtual IEnumerator`1<HistogramCollector> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Couchbase.Core.Diagnostics.Metrics.HistogramData : ValueType {
    [CompilerGeneratedAttribute]
private int <TotalCount>k__BackingField;
    [CompilerGeneratedAttribute]
private PercentilesUs <Percentiles>k__BackingField;
    public int TotalCount { get; }
    public PercentilesUs Percentiles { get; }
    public HistogramData(int totalCount, PercentilesUs percentiles);
    [CompilerGeneratedAttribute]
public int get_TotalCount();
    [CompilerGeneratedAttribute]
public PercentilesUs get_Percentiles();
}
public interface Couchbase.Core.Diagnostics.Metrics.IMeter {
    public abstract virtual IValueRecorder ValueRecorder(string name, IDictionary`2<string, string> tags);
}
public interface Couchbase.Core.Diagnostics.Metrics.IValueRecorder {
    public abstract virtual void RecordValue(UInt32 value, Nullable`1<KeyValuePair`2<string, string>> tag);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Core.Diagnostics.Metrics.LoggingMeter : object {
    [NullableAttribute("2")]
private Timer modreq(System.Runtime.CompilerServices.IsVolatile) _timer;
    private LoggingMeterOptions _options;
    private ILogger _logger;
    [NullableAttribute("2")]
private LoggingMeterValueRecorder _kvHistograms;
    [NullableAttribute("2")]
private LoggingMeterValueRecorder _n1QlQueryHistograms;
    [NullableAttribute("2")]
private LoggingMeterValueRecorder _searchQueryHistograms;
    [NullableAttribute("2")]
private LoggingMeterValueRecorder _analyticsQueryHistograms;
    [NullableAttribute("2")]
private LoggingMeterValueRecorder _viewQueryHistograms;
    private UInt32 _intervalMilliseconds;
    public LoggingMeter(ILoggerFactory loggerFactory, LoggingMeterOptions options);
    [NullableContextAttribute("2")]
private void GenerateReport(object state);
    public sealed virtual IValueRecorder ValueRecorder(string name, IDictionary`2<string, string> tags);
    private static LoggingMeterValueRecorder GetOrCreateValueRecorder(LoggingMeterValueRecorder& valueRecorder, string name);
    [IteratorStateMachineAttribute("Couchbase.Core.Diagnostics.Metrics.LoggingMeter/<System-Collections-Generic-IEnumerable<Couchbase-Core-Diagnostics-Metrics-HistogramCollectorSet>-GetEnumerator>d__13")]
private sealed virtual override IEnumerator`1<HistogramCollectorSet> System.Collections.Generic.IEnumerable<Couchbase.Core.Diagnostics.Metrics.HistogramCollectorSet>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual void Dispose();
}
public class Couchbase.Core.Diagnostics.Metrics.LoggingMeterOptions : object {
    [CompilerGeneratedAttribute]
private TimeSpan <EmitIntervalValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnabledValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ReportingEnabledValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IMeter <LoggingMeterValue>k__BackingField;
    internal TimeSpan EmitIntervalValue { get; internal set; }
    internal bool EnabledValue { get; internal set; }
    internal bool ReportingEnabledValue { get; internal set; }
    internal IMeter LoggingMeterValue { get; internal set; }
    [CompilerGeneratedAttribute]
internal TimeSpan get_EmitIntervalValue();
    [CompilerGeneratedAttribute]
internal void set_EmitIntervalValue(TimeSpan value);
    public LoggingMeterOptions EmitInterval(TimeSpan emitInterval);
    [CompilerGeneratedAttribute]
internal bool get_EnabledValue();
    [CompilerGeneratedAttribute]
internal void set_EnabledValue(bool value);
    public LoggingMeterOptions Enabled(bool enabled);
    [CompilerGeneratedAttribute]
internal bool get_ReportingEnabledValue();
    [CompilerGeneratedAttribute]
internal void set_ReportingEnabledValue(bool value);
    public LoggingMeterOptions ReportingEnabled(bool reportingEnabled);
    [CompilerGeneratedAttribute]
internal IMeter get_LoggingMeterValue();
    [CompilerGeneratedAttribute]
internal void set_LoggingMeterValue(IMeter value);
    public LoggingMeterOptions LoggingMeter(IMeter meter);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Core.Diagnostics.Metrics.LoggingMeterReport : object {
    [CompilerGeneratedAttribute]
private Meta <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private Operations <Operations>k__BackingField;
    [JsonPropertyNameAttribute("meta")]
public Meta Meta { get; public set; }
    [JsonPropertyNameAttribute("operations")]
public Operations Operations { get; public set; }
    [CompilerGeneratedAttribute]
public Meta get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(Meta value);
    [CompilerGeneratedAttribute]
public Operations get_Operations();
    [CompilerGeneratedAttribute]
public void set_Operations(Operations value);
    [NullableContextAttribute("1")]
public static LoggingMeterReport Generate(IEnumerable`1<HistogramCollectorSet> histogramCollectorSets, UInt32 interval);
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonSerializableAttribute("Couchbase.Core.Diagnostics.Metrics.LoggingMeterReport")]
[JsonSourceGenerationOptionsAttribute]
[GeneratedCodeAttribute("System.Text.Json.SourceGeneration", "8.0.10.31311")]
internal class Couchbase.Core.Diagnostics.Metrics.LoggingMeterSerializerContext : JsonSerializerContext {
    [NullableAttribute("2")]
private JsonTypeInfo`1<double> _Double;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<LoggingMeterReport> _LoggingMeterReport;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Meta> _Meta;
    [NullableAttribute("2")]
private JsonTypeInfo`1<Operation> _Operation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Operations> _Operations;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<PercentilesUs> _PercentilesUs;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Dictionary`2<string, Operation>> _DictionaryStringOperation;
    [NullableAttribute("2")]
private JsonTypeInfo`1<long> _Int64;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<string> _String;
    [NullableAttribute("2")]
private JsonTypeInfo`1<UInt32> _UInt32;
    private static JsonSerializerOptions s_defaultOptions;
    [CompilerGeneratedAttribute]
private static LoggingMeterSerializerContext <Default>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JsonSerializerOptions <GeneratedSerializerOptions>k__BackingField;
    private static JsonEncodedText PropName_meta;
    private static JsonEncodedText PropName_operations;
    private static JsonEncodedText PropName_emit_interval_s;
    private static JsonEncodedText PropName_total_count;
    private static JsonEncodedText PropName_percentiles_us;
    private static JsonEncodedText PropName_query;
    private static JsonEncodedText PropName_search;
    private static JsonEncodedText PropName_kv;
    private static JsonEncodedText PropName_analytics;
    private static JsonEncodedText PropName_views;
    private static JsonEncodedText EncodedPropName_35302E30;
    private static JsonEncodedText EncodedPropName_39302E30;
    private static JsonEncodedText EncodedPropName_39392E30;
    private static JsonEncodedText EncodedPropName_39392E39;
    private static JsonEncodedText EncodedPropName_3130302E3030;
    public JsonTypeInfo`1<double> Double { get; }
    public JsonTypeInfo`1<LoggingMeterReport> LoggingMeterReport { get; }
    public JsonTypeInfo`1<Meta> Meta { get; }
    public JsonTypeInfo`1<Operation> Operation { get; }
    public JsonTypeInfo`1<Operations> Operations { get; }
    public JsonTypeInfo`1<PercentilesUs> PercentilesUs { get; }
    public JsonTypeInfo`1<Dictionary`2<string, Operation>> DictionaryStringOperation { get; }
    public JsonTypeInfo`1<long> Int64 { get; }
    public JsonTypeInfo`1<string> String { get; }
    public JsonTypeInfo`1<UInt32> UInt32 { get; }
    public static LoggingMeterSerializerContext Default { get; }
    [NullableAttribute("2")]
protected JsonSerializerOptions GeneratedSerializerOptions { get; }
    public LoggingMeterSerializerContext(JsonSerializerOptions options);
    private static LoggingMeterSerializerContext();
    public JsonTypeInfo`1<double> get_Double();
    private JsonTypeInfo`1<double> Create_Double(JsonSerializerOptions options);
    public JsonTypeInfo`1<LoggingMeterReport> get_LoggingMeterReport();
    private JsonTypeInfo`1<LoggingMeterReport> Create_LoggingMeterReport(JsonSerializerOptions options);
    private static JsonPropertyInfo[] LoggingMeterReportPropInit(JsonSerializerOptions options);
    private void LoggingMeterReportSerializeHandler(Utf8JsonWriter writer, LoggingMeterReport value);
    public JsonTypeInfo`1<Meta> get_Meta();
    private JsonTypeInfo`1<Meta> Create_Meta(JsonSerializerOptions options);
    private static JsonPropertyInfo[] MetaPropInit(JsonSerializerOptions options);
    private void MetaSerializeHandler(Utf8JsonWriter writer, Meta value);
    public JsonTypeInfo`1<Operation> get_Operation();
    private JsonTypeInfo`1<Operation> Create_Operation(JsonSerializerOptions options);
    private static JsonPropertyInfo[] OperationPropInit(JsonSerializerOptions options);
    private void OperationSerializeHandler(Utf8JsonWriter writer, Operation value);
    public JsonTypeInfo`1<Operations> get_Operations();
    private JsonTypeInfo`1<Operations> Create_Operations(JsonSerializerOptions options);
    private static JsonPropertyInfo[] OperationsPropInit(JsonSerializerOptions options);
    private void OperationsSerializeHandler(Utf8JsonWriter writer, Operations value);
    public JsonTypeInfo`1<PercentilesUs> get_PercentilesUs();
    private JsonTypeInfo`1<PercentilesUs> Create_PercentilesUs(JsonSerializerOptions options);
    private static JsonPropertyInfo[] PercentilesUsPropInit(JsonSerializerOptions options);
    private void PercentilesUsSerializeHandler(Utf8JsonWriter writer, PercentilesUs value);
    public JsonTypeInfo`1<Dictionary`2<string, Operation>> get_DictionaryStringOperation();
    private JsonTypeInfo`1<Dictionary`2<string, Operation>> Create_DictionaryStringOperation(JsonSerializerOptions options);
    private void DictionaryStringOperationSerializeHandler(Utf8JsonWriter writer, Dictionary`2<string, Operation> value);
    public JsonTypeInfo`1<long> get_Int64();
    private JsonTypeInfo`1<long> Create_Int64(JsonSerializerOptions options);
    public JsonTypeInfo`1<string> get_String();
    private JsonTypeInfo`1<string> Create_String(JsonSerializerOptions options);
    public JsonTypeInfo`1<UInt32> get_UInt32();
    private JsonTypeInfo`1<UInt32> Create_UInt32(JsonSerializerOptions options);
    [CompilerGeneratedAttribute]
public static LoggingMeterSerializerContext get_Default();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual JsonSerializerOptions get_GeneratedSerializerOptions();
    private static bool TryGetTypeInfoForRuntimeCustomConverter(JsonSerializerOptions options, JsonTypeInfo`1& jsonTypeInfo);
    private static JsonConverter GetRuntimeConverterForType(Type type, JsonSerializerOptions options);
    private static JsonConverter ExpandConverter(Type type, JsonConverter converter, JsonSerializerOptions options, bool validateCanConvert);
    public virtual JsonTypeInfo GetTypeInfo(Type type);
    private sealed virtual override JsonTypeInfo global::System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver.GetTypeInfo(Type type, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.Diagnostics.Metrics.LoggingMeterValueRecorder : object {
    [CompilerGeneratedAttribute]
private HistogramCollectorSet <Histograms>k__BackingField;
    public HistogramCollectorSet Histograms { get; }
    public LoggingMeterValueRecorder(string name);
    [CompilerGeneratedAttribute]
public HistogramCollectorSet get_Histograms();
    public sealed virtual void RecordValue(UInt32 value, Nullable`1<KeyValuePair`2<string, string>> tag);
}
internal class Couchbase.Core.Diagnostics.Metrics.Meta : object {
    [CompilerGeneratedAttribute]
private UInt32 <EmitIntervalSeconds>k__BackingField;
    [JsonPropertyNameAttribute("emit_interval_s")]
public UInt32 EmitIntervalSeconds { get; public set; }
    [CompilerGeneratedAttribute]
public UInt32 get_EmitIntervalSeconds();
    [CompilerGeneratedAttribute]
public void set_EmitIntervalSeconds(UInt32 value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.Diagnostics.Metrics.MeterForwarder : object {
    private IMeter _meter;
    private MeterListener _listener;
    public MeterForwarder(IMeter meter);
    private void InstrumentPublished(Instrument instrument, MeterListener listener);
    private void MeasurementCallback(Instrument instrument, long measurement, ReadOnlySpan`1<KeyValuePair`2<string, object>> tags, object state);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Couchbase.Core.Diagnostics.Metrics.MetricTracker : object {
    public static string MeterName;
    private static Meter KeyValueMeter;
    private static Histogram`1<long> Operations;
    private static Counter`1<long> OperationCounts;
    private static Counter`1<long> ResponseStatus;
    private static Counter`1<long> Orphans;
    private static Counter`1<long> Retries;
    private static Counter`1<long> SendQueueFullErrors;
    private static Counter`1<long> Timeouts;
    private static MetricTracker();
    internal static string GetOutcome(Type errorType);
}
internal class Couchbase.Core.Diagnostics.Metrics.NoopMeter : object {
    [CompilerGeneratedAttribute]
private static NoopMeter <Instance>k__BackingField;
    public static NoopMeter Instance { get; }
    private static NoopMeter();
    [CompilerGeneratedAttribute]
public static NoopMeter get_Instance();
    public sealed virtual IValueRecorder ValueRecorder(string name, IDictionary`2<string, string> tags);
    public sealed virtual void Dispose();
}
internal class Couchbase.Core.Diagnostics.Metrics.NoopValueRecorder : object {
    [CompilerGeneratedAttribute]
private static IValueRecorder <Instance>k__BackingField;
    public static IValueRecorder Instance { get; }
    private static NoopValueRecorder();
    [CompilerGeneratedAttribute]
public static IValueRecorder get_Instance();
    public sealed virtual void RecordValue(UInt32 value, Nullable`1<KeyValuePair`2<string, string>> tag);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.Diagnostics.Metrics.Operation : ValueType {
    [CompilerGeneratedAttribute]
private long <TotalCount>k__BackingField;
    [CompilerGeneratedAttribute]
private PercentilesUs <Percentiles>k__BackingField;
    [JsonPropertyNameAttribute("total_count")]
public long TotalCount { get; public set; }
    [JsonPropertyNameAttribute("percentiles_us")]
public PercentilesUs Percentiles { get; public set; }
    public Operation(HistogramData histogramData);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public long get_TotalCount();
    [CompilerGeneratedAttribute]
public void set_TotalCount(long value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public PercentilesUs get_Percentiles();
    [CompilerGeneratedAttribute]
public void set_Percentiles(PercentilesUs value);
}
internal class Couchbase.Core.Diagnostics.Metrics.Operations : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, Operation> <Query>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, Operation> <Search>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, Operation> <Kv>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, Operation> <Analytics>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, Operation> <Views>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsonPropertyNameAttribute("query")]
public Dictionary`2<string, Operation> Query { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsonPropertyNameAttribute("search")]
public Dictionary`2<string, Operation> Search { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsonPropertyNameAttribute("kv")]
public Dictionary`2<string, Operation> Kv { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsonPropertyNameAttribute("analytics")]
public Dictionary`2<string, Operation> Analytics { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsonPropertyNameAttribute("views")]
public Dictionary`2<string, Operation> Views { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, Operation> get_Query();
    [CompilerGeneratedAttribute]
public void set_Query(Dictionary`2<string, Operation> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, Operation> get_Search();
    [CompilerGeneratedAttribute]
public void set_Search(Dictionary`2<string, Operation> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, Operation> get_Kv();
    [CompilerGeneratedAttribute]
public void set_Kv(Dictionary`2<string, Operation> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, Operation> get_Analytics();
    [CompilerGeneratedAttribute]
public void set_Analytics(Dictionary`2<string, Operation> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, Operation> get_Views();
    [CompilerGeneratedAttribute]
public void set_Views(Dictionary`2<string, Operation> value);
}
internal class Couchbase.Core.Diagnostics.Metrics.PercentilesUs : object {
    [CompilerGeneratedAttribute]
private double <_500>k__BackingField;
    [CompilerGeneratedAttribute]
private double <_900>k__BackingField;
    [CompilerGeneratedAttribute]
private double <_990>k__BackingField;
    [CompilerGeneratedAttribute]
private double <_999>k__BackingField;
    [CompilerGeneratedAttribute]
private double <_10000>k__BackingField;
    [JsonPropertyNameAttribute("50.0")]
public double _500 { get; public set; }
    [JsonPropertyNameAttribute("90.0")]
public double _900 { get; public set; }
    [JsonPropertyNameAttribute("99.0")]
public double _990 { get; public set; }
    [JsonPropertyNameAttribute("99.9")]
public double _999 { get; public set; }
    [JsonPropertyNameAttribute("100.00")]
public double _10000 { get; public set; }
    [CompilerGeneratedAttribute]
public double get__500();
    [CompilerGeneratedAttribute]
public void set__500(double value);
    [CompilerGeneratedAttribute]
public double get__900();
    [CompilerGeneratedAttribute]
public void set__900(double value);
    [CompilerGeneratedAttribute]
public double get__990();
    [CompilerGeneratedAttribute]
public void set__990(double value);
    [CompilerGeneratedAttribute]
public double get__999();
    [CompilerGeneratedAttribute]
public void set__999(double value);
    [CompilerGeneratedAttribute]
public double get__10000();
    [CompilerGeneratedAttribute]
public void set__10000(double value);
}
internal class Couchbase.Core.Diagnostics.Metrics.StringKeyValueComparer : object {
    [NullableAttribute("1")]
public static StringKeyValueComparer Instance;
    private static StringKeyValueComparer();
    public sealed virtual bool Equals(KeyValuePair`2<string, string> x, KeyValuePair`2<string, string> y);
    public sealed virtual int GetHashCode(KeyValuePair`2<string, string> obj);
}
[InterfaceStabilityAttribute("2")]
internal static class Couchbase.Core.Diagnostics.Tracing.InnerRequestSpans : object {
}
[NullableContextAttribute("1")]
public interface Couchbase.Core.Diagnostics.Tracing.IRequestSpan {
    [NullableAttribute("2")]
public IRequestSpan Parent { get; public set; }
    public bool CanWrite { get; }
    [NullableAttribute("2")]
public string Id { get; }
    public Nullable`1<UInt32> Duration { get; }
    public abstract virtual IRequestSpan SetAttribute(string key, bool value);
    public abstract virtual IRequestSpan SetAttribute(string key, string value);
    public abstract virtual IRequestSpan SetAttribute(string key, UInt32 value);
    public abstract virtual IRequestSpan AddEvent(string name, Nullable`1<DateTimeOffset> timestamp);
    public abstract virtual void End();
    [NullableContextAttribute("2")]
public abstract virtual IRequestSpan get_Parent();
    [NullableContextAttribute("2")]
public abstract virtual void set_Parent(IRequestSpan value);
    public abstract virtual IRequestSpan ChildSpan(string name);
    public abstract virtual bool get_CanWrite();
    [NullableContextAttribute("2")]
public abstract virtual string get_Id();
    public abstract virtual Nullable`1<UInt32> get_Duration();
}
public interface Couchbase.Core.Diagnostics.Tracing.IRequestTracer {
    public abstract virtual IRequestSpan RequestSpan(string name, IRequestSpan parentSpan);
    public abstract virtual IRequestTracer Start(TraceListener listener);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.Core.Diagnostics.Tracing.NoopRequestSpan : object {
    [NullableAttribute("1")]
public static IRequestSpan Instance;
    private IRequestTracer _tracer;
    private IRequestSpan _parentSpan;
    public IRequestSpan Parent { get; public set; }
    public bool CanWrite { get; }
    public string Id { get; }
    public Nullable`1<UInt32> Duration { get; }
    public NoopRequestSpan(IRequestTracer tracer, IRequestSpan parentSpan);
    private static NoopRequestSpan();
    public sealed virtual void Dispose();
    [NullableContextAttribute("1")]
public sealed virtual IRequestSpan SetAttribute(string key, bool value);
    [NullableContextAttribute("1")]
public sealed virtual IRequestSpan SetAttribute(string key, string value);
    [NullableContextAttribute("1")]
public sealed virtual IRequestSpan SetAttribute(string key, UInt32 value);
    [NullableContextAttribute("1")]
public sealed virtual IRequestSpan AddEvent(string name, Nullable`1<DateTimeOffset> timestamp);
    public sealed virtual void End();
    public sealed virtual IRequestSpan get_Parent();
    public sealed virtual void set_Parent(IRequestSpan value);
    [NullableContextAttribute("1")]
public sealed virtual IRequestSpan ChildSpan(string name);
    public sealed virtual bool get_CanWrite();
    public sealed virtual string get_Id();
    public sealed virtual Nullable`1<UInt32> get_Duration();
}
public class Couchbase.Core.Diagnostics.Tracing.NoopRequestTracer : object {
    [NullableAttribute("1")]
public static IRequestTracer Instance;
    private static NoopRequestTracer();
    [NullableContextAttribute("1")]
public sealed virtual IRequestSpan RequestSpan(string name, IRequestSpan parentSpan);
    [NullableContextAttribute("1")]
public sealed virtual IRequestTracer Start(TraceListener listener);
    public sealed virtual void Dispose();
}
public interface Couchbase.Core.Diagnostics.Tracing.OrphanResponseReporting.IOrphanReporter {
    public abstract virtual void Add(OrphanSummary orphanSummary);
}
internal class Couchbase.Core.Diagnostics.Tracing.OrphanResponseReporting.NullOrphanReporter : object {
    public static IOrphanReporter Instance;
    private static NullOrphanReporter();
    public sealed virtual void Add(OrphanSummary orphanSummary);
}
public class Couchbase.Core.Diagnostics.Tracing.OrphanResponseReporting.OrphanOptions : object {
    [CompilerGeneratedAttribute]
private TimeSpan <EmitInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <SampleSize>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private TraceListener <OrphanListener>k__BackingField;
    public TimeSpan EmitInterval { get; public set; }
    public UInt32 SampleSize { get; public set; }
    public bool Enabled { get; public set; }
    public TraceListener OrphanListener { get; public set; }
    [CompilerGeneratedAttribute]
public TimeSpan get_EmitInterval();
    [CompilerGeneratedAttribute]
public void set_EmitInterval(TimeSpan value);
    public OrphanOptions WithEmitInterval(TimeSpan emitInterval);
    [CompilerGeneratedAttribute]
public UInt32 get_SampleSize();
    [CompilerGeneratedAttribute]
public void set_SampleSize(UInt32 value);
    public OrphanOptions WithSampleSize(UInt32 sampleSize);
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    public OrphanOptions WithEnabled(bool enabled);
    [CompilerGeneratedAttribute]
public TraceListener get_OrphanListener();
    [CompilerGeneratedAttribute]
public void set_OrphanListener(TraceListener value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Core.Diagnostics.Tracing.OrphanResponseReporting.OrphanReport : object {
    [JsonPropertyNameAttribute("kv")]
[JsonIgnoreAttribute]
public OrphanServiceReport KeyValue;
    [JsonPropertyNameAttribute("views")]
[JsonIgnoreAttribute]
public OrphanServiceReport ViewQuery;
    [JsonPropertyNameAttribute("query")]
[JsonIgnoreAttribute]
public OrphanServiceReport N1QlQuery;
    [JsonPropertyNameAttribute("search")]
[JsonIgnoreAttribute]
public OrphanServiceReport SearchQuery;
    [JsonPropertyNameAttribute("analytics")]
[JsonIgnoreAttribute]
public OrphanServiceReport AnalyticsQuery;
    [JsonIgnoreAttribute]
public bool HasReports { get; }
    public bool get_HasReports();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.Diagnostics.Tracing.OrphanResponseReporting.OrphanReporter : object {
    private ILogger`1<OrphanReporter> _logger;
    private static int WorkerSleep;
    private CancellationTokenSource _source;
    private ConcurrentQueue`1<OrphanSummary> _queue;
    private object _lock;
    private List`1<OrphanSummary> _kvOrphans;
    private List`1<OrphanSummary> _viewOrphans;
    private List`1<OrphanSummary> _queryOrphans;
    private List`1<OrphanSummary> _searchOrphans;
    private List`1<OrphanSummary> _analyticsOrphans;
    [CompilerGeneratedAttribute]
private int <Interval>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <SampleSize>k__BackingField;
    private UInt32 _kvOrphanCount;
    private UInt32 _viewOrphanCount;
    private UInt32 _queryOrphanCount;
    private UInt32 _searchOrphanCount;
    private UInt32 _analyticsOrphanCount;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _hasOrphans;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`3<ILogger, string, Exception> __LogOrphanedResponsesCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`4<ILogger, string, string, Exception> __LogUnknownServiceCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`2<ILogger, Exception> __LogOrphanedResponseErrorCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`2<ILogger, Exception> __LogOrphanedResponseSummaryErrorCallback;
    public int Interval { get; public set; }
    public UInt32 SampleSize { get; public set; }
    internal UInt32 TotalCount { get; }
    public OrphanReporter(ILogger`1<OrphanReporter> logger, OrphanOptions options);
    private static OrphanReporter();
    [CompilerGeneratedAttribute]
public int get_Interval();
    [CompilerGeneratedAttribute]
public void set_Interval(int value);
    [CompilerGeneratedAttribute]
public UInt32 get_SampleSize();
    [CompilerGeneratedAttribute]
public void set_SampleSize(UInt32 value);
    internal UInt32 get_TotalCount();
    [AsyncStateMachineAttribute("Couchbase.Core.Diagnostics.Tracing.OrphanResponseReporting.OrphanReporter/<ProcessSummary>d__27")]
private Task ProcessSummary();
    [AsyncStateMachineAttribute("Couchbase.Core.Diagnostics.Tracing.OrphanResponseReporting.OrphanReporter/<ProcessQueue>d__28")]
private Task ProcessQueue();
    private static void AddContextToService(ICollection`1<OrphanSummary> orphanSummaries, OrphanSummary context, UInt32& serviceCount, UInt32 maxSampleSize);
    private static void AddServiceToResult(OrphanServiceReport& serviceReport, ICollection`1<OrphanSummary> serviceSample, UInt32& serviceCount);
    public void Dispose();
    public sealed virtual void Add(OrphanSummary orphanSummary);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
public void LogOrphanedResponses(string summary);
    [NullableContextAttribute("2")]
[LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
public void LogUnknownService(string serviceType, string operationId);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
public void LogOrphanedResponseError(Exception ex);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
public void LogOrphanedResponseSummaryError(Exception ex);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonSourceGenerationOptionsAttribute]
[JsonSerializableAttribute("Couchbase.Core.Diagnostics.Tracing.OrphanResponseReporting.OrphanReport")]
[GeneratedCodeAttribute("System.Text.Json.SourceGeneration", "8.0.10.31311")]
internal class Couchbase.Core.Diagnostics.Tracing.OrphanResponseReporting.OrphanReportingSerializerContext : JsonSerializerContext {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<OrphanReport> _OrphanReport;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<OrphanServiceReport> _OrphanServiceReport;
    [NullableAttribute("2")]
private JsonTypeInfo`1<OrphanSummary> _OrphanSummary;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<OrphanSummary[]> _OrphanSummaryArray;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<string> _String;
    [NullableAttribute("2")]
private JsonTypeInfo`1<UInt32> _UInt32;
    [NullableAttribute("2")]
private JsonTypeInfo`1<ulong> _UInt64;
    [NullableAttribute("2")]
private JsonTypeInfo`1<Nullable`1<ulong>> _NullableUInt64;
    private static JsonSerializerOptions s_defaultOptions;
    [CompilerGeneratedAttribute]
private static OrphanReportingSerializerContext <Default>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JsonSerializerOptions <GeneratedSerializerOptions>k__BackingField;
    private static JsonEncodedText PropName_kv;
    private static JsonEncodedText PropName_views;
    private static JsonEncodedText PropName_query;
    private static JsonEncodedText PropName_search;
    private static JsonEncodedText PropName_analytics;
    private static JsonEncodedText PropName_total_count;
    private static JsonEncodedText PropName_top_requests;
    private static JsonEncodedText PropName_total_duration_us;
    private static JsonEncodedText PropName_encode_duration_us;
    private static JsonEncodedText PropName_last_dispatch_duration_us;
    private static JsonEncodedText PropName_total_dispatch_duration_us;
    private static JsonEncodedText PropName_last_server_duration_us;
    private static JsonEncodedText PropName_total_server_duration_us;
    private static JsonEncodedText PropName_operation_name;
    private static JsonEncodedText PropName_last_local_id;
    private static JsonEncodedText PropName_operation_id;
    private static JsonEncodedText PropName_last_local_socket;
    private static JsonEncodedText PropName_last_remote_socket;
    private static JsonEncodedText PropName_timeout_ms;
    public JsonTypeInfo`1<OrphanReport> OrphanReport { get; }
    public JsonTypeInfo`1<OrphanServiceReport> OrphanServiceReport { get; }
    public JsonTypeInfo`1<OrphanSummary> OrphanSummary { get; }
    public JsonTypeInfo`1<OrphanSummary[]> OrphanSummaryArray { get; }
    public JsonTypeInfo`1<string> String { get; }
    public JsonTypeInfo`1<UInt32> UInt32 { get; }
    public JsonTypeInfo`1<ulong> UInt64 { get; }
    public JsonTypeInfo`1<Nullable`1<ulong>> NullableUInt64 { get; }
    public static OrphanReportingSerializerContext Default { get; }
    [NullableAttribute("2")]
protected JsonSerializerOptions GeneratedSerializerOptions { get; }
    public OrphanReportingSerializerContext(JsonSerializerOptions options);
    private static OrphanReportingSerializerContext();
    public JsonTypeInfo`1<OrphanReport> get_OrphanReport();
    private JsonTypeInfo`1<OrphanReport> Create_OrphanReport(JsonSerializerOptions options);
    private static JsonPropertyInfo[] OrphanReportPropInit(JsonSerializerOptions options);
    private void OrphanReportSerializeHandler(Utf8JsonWriter writer, OrphanReport value);
    public JsonTypeInfo`1<OrphanServiceReport> get_OrphanServiceReport();
    private JsonTypeInfo`1<OrphanServiceReport> Create_OrphanServiceReport(JsonSerializerOptions options);
    private static JsonPropertyInfo[] OrphanServiceReportPropInit(JsonSerializerOptions options);
    private void OrphanServiceReportSerializeHandler(Utf8JsonWriter writer, OrphanServiceReport value);
    public JsonTypeInfo`1<OrphanSummary> get_OrphanSummary();
    private JsonTypeInfo`1<OrphanSummary> Create_OrphanSummary(JsonSerializerOptions options);
    private static JsonPropertyInfo[] OrphanSummaryPropInit(JsonSerializerOptions options);
    private void OrphanSummarySerializeHandler(Utf8JsonWriter writer, OrphanSummary value);
    public JsonTypeInfo`1<OrphanSummary[]> get_OrphanSummaryArray();
    private JsonTypeInfo`1<OrphanSummary[]> Create_OrphanSummaryArray(JsonSerializerOptions options);
    private void OrphanSummaryArraySerializeHandler(Utf8JsonWriter writer, OrphanSummary[] value);
    public JsonTypeInfo`1<string> get_String();
    private JsonTypeInfo`1<string> Create_String(JsonSerializerOptions options);
    public JsonTypeInfo`1<UInt32> get_UInt32();
    private JsonTypeInfo`1<UInt32> Create_UInt32(JsonSerializerOptions options);
    public JsonTypeInfo`1<ulong> get_UInt64();
    private JsonTypeInfo`1<ulong> Create_UInt64(JsonSerializerOptions options);
    public JsonTypeInfo`1<Nullable`1<ulong>> get_NullableUInt64();
    private JsonTypeInfo`1<Nullable`1<ulong>> Create_NullableUInt64(JsonSerializerOptions options);
    [CompilerGeneratedAttribute]
public static OrphanReportingSerializerContext get_Default();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual JsonSerializerOptions get_GeneratedSerializerOptions();
    private static bool TryGetTypeInfoForRuntimeCustomConverter(JsonSerializerOptions options, JsonTypeInfo`1& jsonTypeInfo);
    private static JsonConverter GetRuntimeConverterForType(Type type, JsonSerializerOptions options);
    private static JsonConverter ExpandConverter(Type type, JsonConverter converter, JsonSerializerOptions options, bool validateCanConvert);
    public virtual JsonTypeInfo GetTypeInfo(Type type);
    private sealed virtual override JsonTypeInfo global::System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver.GetTypeInfo(Type type, JsonSerializerOptions options);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Core.Diagnostics.Tracing.OrphanResponseReporting.OrphanServiceReport : object {
    [CompilerGeneratedAttribute]
private UInt32 <TotalCount>k__BackingField;
    [CompilerGeneratedAttribute]
private OrphanSummary[] <TopRequests>k__BackingField;
    [JsonPropertyNameAttribute("total_count")]
public UInt32 TotalCount { get; public set; }
    [JsonPropertyNameAttribute("top_requests")]
public OrphanSummary[] TopRequests { get; public set; }
    [CompilerGeneratedAttribute]
public UInt32 get_TotalCount();
    [CompilerGeneratedAttribute]
public void set_TotalCount(UInt32 value);
    [CompilerGeneratedAttribute]
public OrphanSummary[] get_TopRequests();
    [CompilerGeneratedAttribute]
public void set_TopRequests(OrphanSummary[] value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.Core.Diagnostics.Tracing.OrphanResponseReporting.OrphanSummary : ValueType {
    [CompilerGeneratedAttribute]
private string <ServiceType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ulong> <total_duration_us>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ulong> <encode_duration_us>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ulong> <last_dispatch_duration_us>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ulong> <total_dispatch_duration_us>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ulong> <last_server_duration_us>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ulong> <total_server_duration_us>k__BackingField;
    [CompilerGeneratedAttribute]
private string <operation_name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <last_local_id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <operation_id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <last_local_socket>k__BackingField;
    [CompilerGeneratedAttribute]
private string <last_remote_socket>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ulong> <timeout_ms>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static KeyValuePair`2<string, string> DefaultKvp;
    [JsonIgnoreAttribute]
[JsonIgnoreAttribute]
public string ServiceType { get; public set; }
    [JsonPropertyAttribute]
[JsonIgnoreAttribute]
public Nullable`1<ulong> total_duration_us { get; public set; }
    [JsonPropertyAttribute]
[JsonIgnoreAttribute]
public Nullable`1<ulong> encode_duration_us { get; public set; }
    [JsonPropertyAttribute]
[JsonIgnoreAttribute]
public Nullable`1<ulong> last_dispatch_duration_us { get; public set; }
    [JsonPropertyAttribute]
[JsonIgnoreAttribute]
public Nullable`1<ulong> total_dispatch_duration_us { get; public set; }
    [JsonPropertyAttribute]
[JsonIgnoreAttribute]
public Nullable`1<ulong> last_server_duration_us { get; public set; }
    [JsonPropertyAttribute]
[JsonIgnoreAttribute]
public Nullable`1<ulong> total_server_duration_us { get; public set; }
    [JsonPropertyAttribute]
[JsonIgnoreAttribute]
public string operation_name { get; public set; }
    [JsonPropertyAttribute]
[JsonIgnoreAttribute]
public string last_local_id { get; public set; }
    [JsonPropertyAttribute]
[JsonIgnoreAttribute]
public string operation_id { get; public set; }
    [JsonPropertyAttribute]
[JsonIgnoreAttribute]
public string last_local_socket { get; public set; }
    [JsonPropertyAttribute]
[JsonIgnoreAttribute]
public string last_remote_socket { get; public set; }
    [JsonPropertyAttribute]
[JsonIgnoreAttribute]
public Nullable`1<ulong> timeout_ms { get; public set; }
    private static OrphanSummary();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_ServiceType();
    [CompilerGeneratedAttribute]
public void set_ServiceType(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Nullable`1<ulong> get_total_duration_us();
    [CompilerGeneratedAttribute]
public void set_total_duration_us(Nullable`1<ulong> value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Nullable`1<ulong> get_encode_duration_us();
    [CompilerGeneratedAttribute]
public void set_encode_duration_us(Nullable`1<ulong> value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Nullable`1<ulong> get_last_dispatch_duration_us();
    [CompilerGeneratedAttribute]
public void set_last_dispatch_duration_us(Nullable`1<ulong> value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Nullable`1<ulong> get_total_dispatch_duration_us();
    [CompilerGeneratedAttribute]
public void set_total_dispatch_duration_us(Nullable`1<ulong> value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Nullable`1<ulong> get_last_server_duration_us();
    [CompilerGeneratedAttribute]
public void set_last_server_duration_us(Nullable`1<ulong> value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Nullable`1<ulong> get_total_server_duration_us();
    [CompilerGeneratedAttribute]
public void set_total_server_duration_us(Nullable`1<ulong> value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_operation_name();
    [CompilerGeneratedAttribute]
public void set_operation_name(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_last_local_id();
    [CompilerGeneratedAttribute]
public void set_last_local_id(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_operation_id();
    [CompilerGeneratedAttribute]
public void set_operation_id(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_last_local_socket();
    [CompilerGeneratedAttribute]
public void set_last_local_socket(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_last_remote_socket();
    [CompilerGeneratedAttribute]
public void set_last_remote_socket(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Nullable`1<ulong> get_timeout_ms();
    [CompilerGeneratedAttribute]
public void set_timeout_ms(Nullable`1<ulong> value);
    [NullableContextAttribute("1")]
public virtual string ToString();
    public sealed virtual int CompareTo(OrphanSummary other);
    public static OrphanSummary CreateKvContext(UInt32 opaque);
    [NullableContextAttribute("1")]
public static OrphanSummary FromActivity(Activity activity);
    [NullableContextAttribute("1")]
private static string LastValueOrNull(Activity activity, string keyName);
    [NullableContextAttribute("1")]
private static Nullable`1<ulong> SumMicroseconds(Activity activity, string keyName);
    [NullableContextAttribute("1")]
private static Nullable`1<ulong> LastMicroseconds(Activity activity, string keyName);
}
internal class Couchbase.Core.Diagnostics.Tracing.OrphanResponseReporting.OrphanTraceListener : TraceListener {
    private OrphanReporter _responseReporter;
    public OrphanTraceListener(OrphanReporter responseReporter);
    public sealed virtual void Start();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private void <Start>b__2_0(Activity activity);
}
[InterfaceStabilityAttribute("2")]
public static class Couchbase.Core.Diagnostics.Tracing.OuterRequestSpans : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.Diagnostics.Tracing.RequestSpan : object {
    private static object TrueBoxed;
    private static object FalseBoxed;
    private IRequestTracer _tracer;
    private Activity _activity;
    [NullableAttribute("2")]
private IRequestSpan _parentSpan;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _disposed;
    [CompilerGeneratedAttribute]
private Nullable`1<UInt32> <Duration>k__BackingField;
    [NullableAttribute("2")]
public IRequestSpan Parent { get; public set; }
    public ActivityContext ActivityContext { get; }
    public bool CanWrite { get; }
    [NullableAttribute("2")]
public string Id { get; }
    public Nullable`1<UInt32> Duration { get; private set; }
    public RequestSpan(IRequestTracer tracer, Activity activity, IRequestSpan parentSpan);
    private static RequestSpan();
    [NullableContextAttribute("2")]
public sealed virtual IRequestSpan get_Parent();
    [NullableContextAttribute("2")]
public sealed virtual void set_Parent(IRequestSpan value);
    public ActivityContext get_ActivityContext();
    public sealed virtual IRequestSpan ChildSpan(string name);
    public sealed virtual bool get_CanWrite();
    [NullableContextAttribute("2")]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<UInt32> get_Duration();
    [CompilerGeneratedAttribute]
private void set_Duration(Nullable`1<UInt32> value);
    public sealed virtual IRequestSpan SetAttribute(string key, string value);
    public sealed virtual IRequestSpan SetAttribute(string key, UInt32 value);
    public sealed virtual IRequestSpan SetAttribute(string key, bool value);
    public sealed virtual IRequestSpan AddEvent(string name, Nullable`1<DateTimeOffset> timestamp);
    private string SetEndTimeAndDuration();
    public sealed virtual void End();
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Couchbase.Core.Diagnostics.Tracing.RequestSpanExtensions : object {
    [NullableAttribute("2")]
private static string _dnsHostName;
    [ExtensionAttribute]
public static IRequestSpan LogOrphaned(IRequestSpan span);
    [ExtensionAttribute]
public static IRequestSpan WithCommonTags(IRequestSpan span);
    [ExtensionAttribute]
public static IRequestSpan RequestSpan(IRequestTracer tracer, string serviceName, string operation);
    [ExtensionAttribute]
internal static IRequestSpan WithOperationId(IRequestSpan span, IOperation operation);
    [ExtensionAttribute]
internal static IRequestSpan WithOperationId(IRequestSpan span, QueryOptions options);
    [ExtensionAttribute]
internal static IRequestSpan WithOperationId(IRequestSpan span, AnalyticsOptions request);
    [ExtensionAttribute]
internal static IRequestSpan CompressionSpan(IRequestSpan parentSpan);
    [ExtensionAttribute]
internal static IRequestSpan DecompressionSpan(IRequestSpan parentSpan);
    [ExtensionAttribute]
internal static IRequestSpan EncodingSpan(IRequestSpan parentSpan);
    [ExtensionAttribute]
internal static IRequestSpan DispatchSpan(IRequestSpan parentSpan);
    [ExtensionAttribute]
internal static IRequestSpan DispatchSpan(IRequestSpan parentSpan, FtsSearchRequest request);
    [ExtensionAttribute]
internal static IRequestSpan DispatchSpan(IRequestSpan parentSpan, QueryOptions options);
    [ExtensionAttribute]
internal static IRequestSpan DispatchSpan(IRequestSpan parentSpan, AnalyticsOptions request);
    [ExtensionAttribute]
internal static IRequestSpan DispatchSpan(IRequestSpan parentSpan, IViewQuery viewQuery);
    [ExtensionAttribute]
internal static IRequestSpan DispatchSpan(IRequestSpan parentSpan, FunctionOptionsBase eventingFunctionOptions);
    [ExtensionAttribute]
internal static IRequestSpan DispatchSpan(IRequestSpan parentSpan, IOperation operation);
    [ExtensionAttribute]
internal static IRequestSpan WithRemoteAddress(IRequestSpan span, Uri remoteUri);
    [ExtensionAttribute]
internal static IRequestSpan WithLocalAddress(IRequestSpan span);
    [ExtensionAttribute]
internal static IRequestSpan WithStatement(IRequestSpan span, string statement);
    [ExtensionAttribute]
internal static IRequestSpan WithOperation(IRequestSpan span, string operation);
    [ExtensionAttribute]
internal static IRequestSpan WithOperation(IRequestSpan span, IViewQuery viewQuery);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.Diagnostics.Tracing.RequestTracer : object {
    internal static string ActivitySourceName;
    private static ActivitySource ActivitySource;
    private NoopRequestSpan _noopRootSpan;
    private static RequestTracer();
    public sealed virtual IRequestSpan RequestSpan(string name, IRequestSpan parentSpan);
    public sealed virtual IRequestTracer Start(TraceListener listener);
    public sealed virtual void Dispose();
    private IRequestSpan CreateNoopSpan(IRequestSpan parentSpan);
}
public static class Couchbase.Core.Diagnostics.Tracing.ServiceIdentifier : object {
    public static ISet`1<string> CoreServices;
    public static string Data;
    public static string Query;
    public static string Search;
    public static string Views;
    public static string Analytics;
    public static string Management;
    private static ServiceIdentifier();
}
public class Couchbase.Core.Diagnostics.Tracing.ThresholdTracing.ThresholdOptions : object {
    public static int DefaultSampleSize;
    [CompilerGeneratedAttribute]
private TimeSpan <EmitInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <KvThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <QueryThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ViewsThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <SearchThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <AnalyticsThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <SampleSize>k__BackingField;
    [CompilerGeneratedAttribute]
private TraceListener <ThresholdListener>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    public TimeSpan EmitInterval { get; public set; }
    internal TimeSpan KvThreshold { get; internal set; }
    internal TimeSpan QueryThreshold { get; internal set; }
    internal TimeSpan ViewsThreshold { get; internal set; }
    internal TimeSpan SearchThreshold { get; internal set; }
    internal TimeSpan AnalyticsThreshold { get; internal set; }
    internal UInt32 SampleSize { get; internal set; }
    public TraceListener ThresholdListener { get; public set; }
    public bool Enabled { get; public set; }
    private static ThresholdOptions();
    [CompilerGeneratedAttribute]
public TimeSpan get_EmitInterval();
    [CompilerGeneratedAttribute]
public void set_EmitInterval(TimeSpan value);
    public ThresholdOptions WithEmitInterval(TimeSpan emitInterval);
    [CompilerGeneratedAttribute]
internal TimeSpan get_KvThreshold();
    [CompilerGeneratedAttribute]
internal void set_KvThreshold(TimeSpan value);
    public ThresholdOptions WithKvThreshold(TimeSpan kvThreshold);
    [CompilerGeneratedAttribute]
internal TimeSpan get_QueryThreshold();
    [CompilerGeneratedAttribute]
internal void set_QueryThreshold(TimeSpan value);
    public ThresholdOptions WithQueryThreshold(TimeSpan queryThreshold);
    [CompilerGeneratedAttribute]
internal TimeSpan get_ViewsThreshold();
    [CompilerGeneratedAttribute]
internal void set_ViewsThreshold(TimeSpan value);
    public ThresholdOptions WithViewsThreshold(TimeSpan viewsThreshold);
    [CompilerGeneratedAttribute]
internal TimeSpan get_SearchThreshold();
    [CompilerGeneratedAttribute]
internal void set_SearchThreshold(TimeSpan value);
    public ThresholdOptions WithSearchThreshold(TimeSpan searchThreshold);
    [CompilerGeneratedAttribute]
internal TimeSpan get_AnalyticsThreshold();
    [CompilerGeneratedAttribute]
internal void set_AnalyticsThreshold(TimeSpan value);
    public ThresholdOptions WithAnalyticsThreshold(TimeSpan analyticsThreshold);
    [CompilerGeneratedAttribute]
internal UInt32 get_SampleSize();
    [CompilerGeneratedAttribute]
internal void set_SampleSize(UInt32 value);
    public ThresholdOptions WithSampleSize(UInt32 sampleSize);
    [CompilerGeneratedAttribute]
public TraceListener get_ThresholdListener();
    [CompilerGeneratedAttribute]
public void set_ThresholdListener(TraceListener value);
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    public IReadOnlyDictionary`2<string, TimeSpan> GetServiceThresholds();
}
internal class Couchbase.Core.Diagnostics.Tracing.ThresholdTracing.ThresholdServiceQueue : object {
    private int _sampleSize;
    private long _sampleCount;
    private ConcurrentQueue`1<ThresholdSummary> _latestEvents;
    private static ManualResetEventSlim ReportIdle;
    internal static IReadOnlyDictionary`2<string, ThresholdServiceQueue> CoreQueues;
    [CompilerGeneratedAttribute]
private string <ServiceName>k__BackingField;
    internal string ServiceName { get; }
    internal ThresholdServiceQueue(string serviceName);
    private static ThresholdServiceQueue();
    [CompilerGeneratedAttribute]
internal string get_ServiceName();
    private void Add(ThresholdSummary overThresholdEvent);
    public static bool AddByService(string serviceName, ThresholdSummary overThresholdSummary);
    private ThresholdSummaryReport ReportAndReset();
    internal static void SetSampleSize(int sampleSize);
    public static IDictionary`2<string, ThresholdSummaryReport> ReportSummaries();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Core.Diagnostics.Tracing.ThresholdTracing.ThresholdSummary : ValueType {
    [CompilerGeneratedAttribute]
private Nullable`1<ulong> <total_duration_us>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ulong> <encode_duration_us>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ulong> <last_dispatch_duration_us>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ulong> <total_dispatch_duration_us>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ulong> <last_server_duration_us>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ulong> <total_server_duration_us>k__BackingField;
    [CompilerGeneratedAttribute]
private string <operation_name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <last_local_id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <operation_id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <last_local_socket>k__BackingField;
    [CompilerGeneratedAttribute]
private string <last_remote_socket>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ulong> <timeout_ms>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static KeyValuePair`2<string, string> DefaultKvp;
    [JsonIgnoreAttribute]
public Nullable`1<ulong> total_duration_us { get; public set; }
    [JsonIgnoreAttribute]
public Nullable`1<ulong> encode_duration_us { get; public set; }
    [JsonIgnoreAttribute]
public Nullable`1<ulong> last_dispatch_duration_us { get; public set; }
    [JsonIgnoreAttribute]
public Nullable`1<ulong> total_dispatch_duration_us { get; public set; }
    [JsonIgnoreAttribute]
public Nullable`1<ulong> last_server_duration_us { get; public set; }
    [JsonIgnoreAttribute]
public Nullable`1<ulong> total_server_duration_us { get; public set; }
    [JsonIgnoreAttribute]
public string operation_name { get; public set; }
    [JsonIgnoreAttribute]
public string last_local_id { get; public set; }
    [JsonIgnoreAttribute]
public string operation_id { get; public set; }
    [JsonIgnoreAttribute]
public string last_local_socket { get; public set; }
    [JsonIgnoreAttribute]
public string last_remote_socket { get; public set; }
    [JsonIgnoreAttribute]
public Nullable`1<ulong> timeout_ms { get; public set; }
    private static ThresholdSummary();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Nullable`1<ulong> get_total_duration_us();
    [CompilerGeneratedAttribute]
public void set_total_duration_us(Nullable`1<ulong> value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Nullable`1<ulong> get_encode_duration_us();
    [CompilerGeneratedAttribute]
public void set_encode_duration_us(Nullable`1<ulong> value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Nullable`1<ulong> get_last_dispatch_duration_us();
    [CompilerGeneratedAttribute]
public void set_last_dispatch_duration_us(Nullable`1<ulong> value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Nullable`1<ulong> get_total_dispatch_duration_us();
    [CompilerGeneratedAttribute]
public void set_total_dispatch_duration_us(Nullable`1<ulong> value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Nullable`1<ulong> get_last_server_duration_us();
    [CompilerGeneratedAttribute]
public void set_last_server_duration_us(Nullable`1<ulong> value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Nullable`1<ulong> get_total_server_duration_us();
    [CompilerGeneratedAttribute]
public void set_total_server_duration_us(Nullable`1<ulong> value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_operation_name();
    [CompilerGeneratedAttribute]
public void set_operation_name(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_last_local_id();
    [CompilerGeneratedAttribute]
public void set_last_local_id(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_operation_id();
    [CompilerGeneratedAttribute]
public void set_operation_id(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_last_local_socket();
    [CompilerGeneratedAttribute]
public void set_last_local_socket(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_last_remote_socket();
    [CompilerGeneratedAttribute]
public void set_last_remote_socket(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Nullable`1<ulong> get_timeout_ms();
    [CompilerGeneratedAttribute]
public void set_timeout_ms(Nullable`1<ulong> value);
    [NullableContextAttribute("1")]
public static ThresholdSummary FromActivity(Activity activity);
    private static string FormatSocket(string hostName, string port);
    [NullableContextAttribute("1")]
private static Nullable`1<ulong> MillisecondsOrNull(Activity activity, string keyName);
    [NullableContextAttribute("1")]
private static string LastValueOrNull(Activity activity, string keyName);
    [NullableContextAttribute("1")]
private static Nullable`1<ulong> SumMicroseconds(Activity activity, string keyName);
    [NullableContextAttribute("1")]
private static Nullable`1<ulong> LastMicroseconds(Activity activity, string keyName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Couchbase.Core.Diagnostics.Tracing.ThresholdTracing.ThresholdSummaryReport : ValueType {
    [CompilerGeneratedAttribute]
private string <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalCount>k__BackingField;
    [CompilerGeneratedAttribute]
private ThresholdSummary[] <TopRequests>k__BackingField;
    [JsonIgnoreAttribute]
[JsonPropertyNameAttribute("service")]
public string Service { get; }
    [JsonPropertyNameAttribute("total_count")]
public int TotalCount { get; }
    [JsonPropertyNameAttribute("top_requests")]
public ThresholdSummary[] TopRequests { get; }
    public ThresholdSummaryReport(string service, int count, ThresholdSummary[] top);
    [CompilerGeneratedAttribute]
public string get_Service();
    [CompilerGeneratedAttribute]
public int get_TotalCount();
    [CompilerGeneratedAttribute]
public ThresholdSummary[] get_TopRequests();
}
public static class Couchbase.Core.Diagnostics.Tracing.ThresholdTracing.ThresholdTags : object {
    private static string InternalObsoleteReason;
    internal static string TotalDurationTag;
    [ObsoleteAttribute("This field is no longer used and will be removed in a future release.")]
public static string TotalDuration;
    internal static string EncodeDurationTag;
    [ObsoleteAttribute("This field is no longer used and will be removed in a future release.")]
public static string EncodeDuration;
    internal static string DispatchDurationTag;
    [ObsoleteAttribute("This field is no longer used and will be removed in a future release.")]
public static string DispatchDuration;
    private static ThresholdTags();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.Diagnostics.Tracing.ThresholdTracing.ThresholdTraceListener : TraceListener {
    private IReadOnlyDictionary`2<string, TimeSpan> _serviceThresholds;
    private Timer _timer;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`3<ILogger, string, Exception> __LogThresholdEventCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`2<ILogger, Exception> __LogReportErrorCallback;
    public ThresholdTraceListener(ILoggerFactory loggerFactory, ThresholdOptions options);
    private static ThresholdTraceListener();
    [NullableContextAttribute("2")]
private static void GenerateAndLogReport(object state);
    public sealed virtual void Start();
    public virtual void Dispose();
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static void LogThresholdEvent(ILogger logger, string message);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static void LogReportError(ILogger logger, Exception ex);
    [CompilerGeneratedAttribute]
private void <Start>b__4_0(Activity activity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonSerializableAttribute("System.Collections.Generic.IDictionary`2<System.String,Couchbase.Core.Diagnostics.Tracing.ThresholdTracing.ThresholdSummaryReport>")]
[GeneratedCodeAttribute("System.Text.Json.SourceGeneration", "8.0.10.31311")]
internal class Couchbase.Core.Diagnostics.Tracing.ThresholdTracing.ThresholdTracingSerializerContext : JsonSerializerContext {
    [NullableAttribute("2")]
private JsonTypeInfo`1<ThresholdSummary> _ThresholdSummary;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<ThresholdSummary[]> _ThresholdSummaryArray;
    [NullableAttribute("2")]
private JsonTypeInfo`1<ThresholdSummaryReport> _ThresholdSummaryReport;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IDictionary`2<string, ThresholdSummaryReport>> _IDictionaryStringThresholdSummaryReport;
    [NullableAttribute("2")]
private JsonTypeInfo`1<int> _Int32;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<string> _String;
    [NullableAttribute("2")]
private JsonTypeInfo`1<ulong> _UInt64;
    [NullableAttribute("2")]
private JsonTypeInfo`1<Nullable`1<ulong>> _NullableUInt64;
    private static JsonSerializerOptions s_defaultOptions;
    [CompilerGeneratedAttribute]
private static ThresholdTracingSerializerContext <Default>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JsonSerializerOptions <GeneratedSerializerOptions>k__BackingField;
    private static JsonEncodedText PropName_total_duration_us;
    private static JsonEncodedText PropName_encode_duration_us;
    private static JsonEncodedText PropName_last_dispatch_duration_us;
    private static JsonEncodedText PropName_total_dispatch_duration_us;
    private static JsonEncodedText PropName_last_server_duration_us;
    private static JsonEncodedText PropName_total_server_duration_us;
    private static JsonEncodedText PropName_operation_name;
    private static JsonEncodedText PropName_last_local_id;
    private static JsonEncodedText PropName_operation_id;
    private static JsonEncodedText PropName_last_local_socket;
    private static JsonEncodedText PropName_last_remote_socket;
    private static JsonEncodedText PropName_timeout_ms;
    private static JsonEncodedText PropName_total_count;
    private static JsonEncodedText PropName_top_requests;
    public JsonTypeInfo`1<ThresholdSummary> ThresholdSummary { get; }
    public JsonTypeInfo`1<ThresholdSummary[]> ThresholdSummaryArray { get; }
    public JsonTypeInfo`1<ThresholdSummaryReport> ThresholdSummaryReport { get; }
    public JsonTypeInfo`1<IDictionary`2<string, ThresholdSummaryReport>> IDictionaryStringThresholdSummaryReport { get; }
    public JsonTypeInfo`1<int> Int32 { get; }
    public JsonTypeInfo`1<string> String { get; }
    public JsonTypeInfo`1<ulong> UInt64 { get; }
    public JsonTypeInfo`1<Nullable`1<ulong>> NullableUInt64 { get; }
    public static ThresholdTracingSerializerContext Default { get; }
    [NullableAttribute("2")]
protected JsonSerializerOptions GeneratedSerializerOptions { get; }
    public ThresholdTracingSerializerContext(JsonSerializerOptions options);
    private static ThresholdTracingSerializerContext();
    public JsonTypeInfo`1<ThresholdSummary> get_ThresholdSummary();
    private JsonTypeInfo`1<ThresholdSummary> Create_ThresholdSummary(JsonSerializerOptions options);
    private static JsonPropertyInfo[] ThresholdSummaryPropInit(JsonSerializerOptions options);
    private void ThresholdSummarySerializeHandler(Utf8JsonWriter writer, ThresholdSummary value);
    public JsonTypeInfo`1<ThresholdSummary[]> get_ThresholdSummaryArray();
    private JsonTypeInfo`1<ThresholdSummary[]> Create_ThresholdSummaryArray(JsonSerializerOptions options);
    private void ThresholdSummaryArraySerializeHandler(Utf8JsonWriter writer, ThresholdSummary[] value);
    public JsonTypeInfo`1<ThresholdSummaryReport> get_ThresholdSummaryReport();
    private JsonTypeInfo`1<ThresholdSummaryReport> Create_ThresholdSummaryReport(JsonSerializerOptions options);
    private static JsonPropertyInfo[] ThresholdSummaryReportPropInit(JsonSerializerOptions options);
    private void ThresholdSummaryReportSerializeHandler(Utf8JsonWriter writer, ThresholdSummaryReport value);
    public JsonTypeInfo`1<IDictionary`2<string, ThresholdSummaryReport>> get_IDictionaryStringThresholdSummaryReport();
    private JsonTypeInfo`1<IDictionary`2<string, ThresholdSummaryReport>> Create_IDictionaryStringThresholdSummaryReport(JsonSerializerOptions options);
    private void IDictionaryStringThresholdSummaryReportSerializeHandler(Utf8JsonWriter writer, IDictionary`2<string, ThresholdSummaryReport> value);
    public JsonTypeInfo`1<int> get_Int32();
    private JsonTypeInfo`1<int> Create_Int32(JsonSerializerOptions options);
    public JsonTypeInfo`1<string> get_String();
    private JsonTypeInfo`1<string> Create_String(JsonSerializerOptions options);
    public JsonTypeInfo`1<ulong> get_UInt64();
    private JsonTypeInfo`1<ulong> Create_UInt64(JsonSerializerOptions options);
    public JsonTypeInfo`1<Nullable`1<ulong>> get_NullableUInt64();
    private JsonTypeInfo`1<Nullable`1<ulong>> Create_NullableUInt64(JsonSerializerOptions options);
    [CompilerGeneratedAttribute]
public static ThresholdTracingSerializerContext get_Default();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual JsonSerializerOptions get_GeneratedSerializerOptions();
    private static bool TryGetTypeInfoForRuntimeCustomConverter(JsonSerializerOptions options, JsonTypeInfo`1& jsonTypeInfo);
    private static JsonConverter GetRuntimeConverterForType(Type type, JsonSerializerOptions options);
    private static JsonConverter ExpandConverter(Type type, JsonConverter converter, JsonSerializerOptions options, bool validateCanConvert);
    public virtual JsonTypeInfo GetTypeInfo(Type type);
    private sealed virtual override JsonTypeInfo global::System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver.GetTypeInfo(Type type, JsonSerializerOptions options);
}
public abstract class Couchbase.Core.Diagnostics.Tracing.TraceListener : object {
    [CompilerGeneratedAttribute]
private ActivityListener <Listener>k__BackingField;
    public ActivityListener Listener { get; }
    [CompilerGeneratedAttribute]
public ActivityListener get_Listener();
    public abstract virtual void Start();
    public virtual void Dispose();
}
public class Couchbase.Core.Diagnostics.Tracing.TracingConfiguration : object {
    [CompilerGeneratedAttribute]
private TimeSpan <EmitInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <SampleSize>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Threshold>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceName>k__BackingField;
    public TimeSpan EmitInterval { get; public set; }
    internal UInt32 SampleSize { get; internal set; }
    internal TimeSpan Threshold { get; internal set; }
    internal string ServiceName { get; internal set; }
    [CompilerGeneratedAttribute]
public TimeSpan get_EmitInterval();
    [CompilerGeneratedAttribute]
public void set_EmitInterval(TimeSpan value);
    public TracingConfiguration WithEmitInterval(TimeSpan emitInterval);
    [CompilerGeneratedAttribute]
internal UInt32 get_SampleSize();
    [CompilerGeneratedAttribute]
internal void set_SampleSize(UInt32 value);
    public TracingConfiguration WithSampleSize(UInt32 sampleSize);
    [CompilerGeneratedAttribute]
internal TimeSpan get_Threshold();
    [CompilerGeneratedAttribute]
internal void set_Threshold(TimeSpan value);
    public TracingConfiguration WithThreshold(TimeSpan threshold);
    [CompilerGeneratedAttribute]
internal string get_ServiceName();
    [CompilerGeneratedAttribute]
internal void set_ServiceName(string value);
    public TracingConfiguration WithService(string service);
}
public class Couchbase.Core.Diagnostics.Tracing.TracingOptions : object {
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestTracer <RequestTracer>k__BackingField;
    public bool Enabled { get; public set; }
    public IRequestTracer RequestTracer { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    public TracingOptions WithEnabled(bool enabled);
    [CompilerGeneratedAttribute]
public IRequestTracer get_RequestTracer();
    [CompilerGeneratedAttribute]
public void set_RequestTracer(IRequestTracer value);
    public TracingOptions WithTracer(IRequestTracer requestTracer);
}
public class Couchbase.Core.Exceptions.AmbiguousTimeoutException : TimeoutException {
    [CompilerGeneratedAttribute]
private List`1<RetryReason> <RetryReasons>k__BackingField;
    public List`1<RetryReason> RetryReasons { get; }
    public AmbiguousTimeoutException(IErrorContext context);
    public AmbiguousTimeoutException(string message);
    public AmbiguousTimeoutException(string message, IErrorContext context);
    public AmbiguousTimeoutException(string message, Exception innerException);
    [CompilerGeneratedAttribute]
public List`1<RetryReason> get_RetryReasons();
    internal static void ThrowWithRetryReasons(IRequest request, Exception innerException);
}
[ExtensionAttribute]
internal static class Couchbase.Core.Exceptions.Analytics.AnalyticResultsExtensions : object {
    [ExtensionAttribute]
public static bool CompilationFailure(AnalyticsResultBase`1<T> result);
    [ExtensionAttribute]
public static bool JobQueueFull(AnalyticsResultBase`1<T> result);
    [ExtensionAttribute]
public static bool DataSetNotFound(AnalyticsResultBase`1<T> result);
    [ExtensionAttribute]
public static bool DataverseNotFound(AnalyticsResultBase`1<T> result);
    [ExtensionAttribute]
public static bool DatasetExists(AnalyticsResultBase`1<T> result);
    [ExtensionAttribute]
public static bool DataverseExists(AnalyticsResultBase`1<T> result);
    [ExtensionAttribute]
public static bool LinkNotFound(AnalyticsResultBase`1<T> result);
    [ExtensionAttribute]
public static bool LinkExists(AnalyticsResultBase`1<T> result);
    [ExtensionAttribute]
public static bool InternalServerFailure(AnalyticsResultBase`1<T> result);
    [ExtensionAttribute]
public static bool AuthenticationFailure(AnalyticsResultBase`1<T> result);
    [ExtensionAttribute]
public static bool TemporaryFailure(AnalyticsResultBase`1<T> result);
    [ExtensionAttribute]
public static bool ParsingFailure(AnalyticsResultBase`1<T> result);
    [ExtensionAttribute]
public static bool IndexNotFound(AnalyticsResultBase`1<T> result);
    [ExtensionAttribute]
public static bool IndexExists(AnalyticsResultBase`1<T> result);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("1")]
[DebuggerDisplayAttribute("{DebuggerDisplay:nq}")]
public class Couchbase.Core.Exceptions.Analytics.AnalyticsErrorContext : object {
    [CompilerGeneratedAttribute]
private string <Statement>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpStatusCode <HttpStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientContextId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Parameters>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private List`1<Error> <Errors>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RetryReason> <RetryReasons>k__BackingField;
    public string Statement { get; internal set; }
    [JsonConverterAttribute("System.Text.Json.Serialization.JsonStringEnumConverter`1<System.Net.HttpStatusCode>")]
public HttpStatusCode HttpStatus { get; internal set; }
    public string ClientContextId { get; internal set; }
    public string Message { get; internal set; }
    public string Parameters { get; internal set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public List`1<Error> Errors { get; internal set; }
    public List`1<RetryReason> RetryReasons { get; internal set; }
    [NullableAttribute("1")]
private string DebuggerDisplay { get; }
    [CompilerGeneratedAttribute]
public string get_Statement();
    [CompilerGeneratedAttribute]
internal void set_Statement(string value);
    [CompilerGeneratedAttribute]
public HttpStatusCode get_HttpStatus();
    [CompilerGeneratedAttribute]
internal void set_HttpStatus(HttpStatusCode value);
    [CompilerGeneratedAttribute]
public string get_ClientContextId();
    [CompilerGeneratedAttribute]
internal void set_ClientContextId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Message();
    [CompilerGeneratedAttribute]
internal void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Parameters();
    [CompilerGeneratedAttribute]
internal void set_Parameters(string value);
    [CompilerGeneratedAttribute]
public List`1<Error> get_Errors();
    [CompilerGeneratedAttribute]
internal void set_Errors(List`1<Error> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<RetryReason> get_RetryReasons();
    [CompilerGeneratedAttribute]
internal void set_RetryReasons(List`1<RetryReason> value);
    [NullableContextAttribute("1")]
[RequiresUnreferencedCodeAttribute("The Error object may contain Newtonsoft.Json.Linq.JToken objects in the AdditionalData property.")]
[RequiresDynamicCodeAttribute("The Error object may contain Newtonsoft.Json.Linq.JToken objects in the AdditionalData property.")]
private string get_DebuggerDisplay();
}
public class Couchbase.Core.Exceptions.Analytics.CompilationFailureException : CouchbaseException {
    public CompilationFailureException(IErrorContext context);
    public CompilationFailureException(string message);
    public CompilationFailureException(string message, Exception innerException);
}
public class Couchbase.Core.Exceptions.Analytics.DatasetExistsException : CouchbaseException {
    public DatasetExistsException(IErrorContext context);
    public DatasetExistsException(string message);
    public DatasetExistsException(string message, Exception innerException);
}
public class Couchbase.Core.Exceptions.Analytics.DatasetNotFoundException : CouchbaseException {
    public DatasetNotFoundException(IErrorContext context);
    public DatasetNotFoundException(string message);
    public DatasetNotFoundException(string message, Exception innerException);
}
public class Couchbase.Core.Exceptions.Analytics.DataverseExistsException : CouchbaseException {
    public DataverseExistsException(IErrorContext context);
    public DataverseExistsException(string message);
    public DataverseExistsException(string message, Exception innerException);
}
public class Couchbase.Core.Exceptions.Analytics.DataverseNotFoundException : CouchbaseException {
    public DataverseNotFoundException(IErrorContext context);
    public DataverseNotFoundException(string message);
    public DataverseNotFoundException(string message, Exception innerException);
}
public class Couchbase.Core.Exceptions.Analytics.JobQueueFullException : CouchbaseException {
    public JobQueueFullException(IErrorContext context);
    public JobQueueFullException(string message);
    public JobQueueFullException(string message, Exception innerException);
}
public class Couchbase.Core.Exceptions.Analytics.LinkExistsException : CouchbaseException {
    public LinkExistsException(IErrorContext context);
    public LinkExistsException(string message);
    public LinkExistsException(string message, Exception innerException);
}
public class Couchbase.Core.Exceptions.Analytics.LinkNotFoundException : CouchbaseException {
    public LinkNotFoundException(IErrorContext context);
    public LinkNotFoundException(string message);
    public LinkNotFoundException(string message, Exception innerException);
}
public class Couchbase.Core.Exceptions.BucketNotFoundException : CouchbaseException {
    public BucketNotFoundException(IErrorContext context);
    public BucketNotFoundException(string message);
    public BucketNotFoundException(string message, Exception innerException);
}
public class Couchbase.Core.Exceptions.CasMismatchException : CouchbaseException {
    public CasMismatchException(IErrorContext context);
}
public class Couchbase.Core.Exceptions.CollectionNotFoundException : CouchbaseException {
    public CollectionNotFoundException(IErrorContext context);
    public CollectionNotFoundException(string message);
    public CollectionNotFoundException(string message, Exception innerException);
}
public class Couchbase.Core.Exceptions.ConnectException : CouchbaseException {
    public ConnectException(string message);
    public ConnectException(string message, Exception innerException);
}
public class Couchbase.Core.Exceptions.DecodingFailureException : CouchbaseException {
    public DecodingFailureException(string message);
}
public class Couchbase.Core.Exceptions.EncodingFailureException : CouchbaseException {
}
public class Couchbase.Core.Exceptions.FeatureNotAvailableException : CouchbaseException {
    public FeatureNotAvailableException(string msg);
}
public class Couchbase.Core.Exceptions.IndexExistsException : CouchbaseException {
    public IndexExistsException(IErrorContext context);
    public IndexExistsException(string message);
    public IndexExistsException(string message, Exception innerException);
}
public class Couchbase.Core.Exceptions.IndexFailureException : CouchbaseException {
    public IndexFailureException(QueryErrorContext context);
}
public class Couchbase.Core.Exceptions.IndexNotFoundException : CouchbaseException {
    public IndexNotFoundException(IErrorContext context);
    public IndexNotFoundException(string message);
    public IndexNotFoundException(string message, Exception innerException);
}
public class Couchbase.Core.Exceptions.InternalServerFailureException : CouchbaseException {
    public InternalServerFailureException(IErrorContext context);
    public InternalServerFailureException(string message);
    public InternalServerFailureException(string message, Exception innerException);
}
public class Couchbase.Core.Exceptions.InvalidArgumentException : CouchbaseException {
    public InvalidArgumentException(string message);
    public InvalidArgumentException(string message, Exception innerException);
    public InvalidArgumentException(IErrorContext context);
}
public class Couchbase.Core.Exceptions.InvalidIndexException : CouchbaseException {
    public InvalidIndexException(string message);
    public InvalidIndexException(string message, Exception innerException);
}
public class Couchbase.Core.Exceptions.KeyValue.DeltaInvalidException : KeyValueException {
}
public class Couchbase.Core.Exceptions.KeyValue.DocumentExistsException : KeyValueException {
    public DocumentExistsException(IErrorContext context);
    public DocumentExistsException(IKeyValueErrorContext context);
    public DocumentExistsException(string message);
    public DocumentExistsException(string message, Exception innerException);
}
public class Couchbase.Core.Exceptions.KeyValue.DocumentLockedException : KeyValueException {
    public DocumentLockedException(IErrorContext context);
}
public class Couchbase.Core.Exceptions.KeyValue.DocumentNotFoundException : KeyValueException {
    public DocumentNotFoundException(IErrorContext context);
    public DocumentNotFoundException(IKeyValueErrorContext context);
    public DocumentNotFoundException(string message);
    public DocumentNotFoundException(string message, Exception innerException);
}
public class Couchbase.Core.Exceptions.KeyValue.DocumentNotJsonException : KeyValueException {
    public DocumentNotJsonException(IErrorContext context);
}
public class Couchbase.Core.Exceptions.KeyValue.DocumentNotLockedException : CouchbaseException {
    public DocumentNotLockedException(string message);
    public DocumentNotLockedException(string message, Exception exception);
}
public class Couchbase.Core.Exceptions.KeyValue.DocumentTooDeepException : KeyValueException {
    public DocumentTooDeepException(IErrorContext context);
}
public class Couchbase.Core.Exceptions.KeyValue.DocumentUnretrievableException : KeyValueException {
    [CompilerGeneratedAttribute]
private ReadOnlyCollection`1<Exception> <InnerExceptions>k__BackingField;
    public ReadOnlyCollection`1<Exception> InnerExceptions { get; }
    public DocumentUnretrievableException(AggregateException aggregate);
    [CompilerGeneratedAttribute]
public ReadOnlyCollection`1<Exception> get_InnerExceptions();
}
public class Couchbase.Core.Exceptions.KeyValue.DurabilityAmbiguousException : KeyValueException {
}
public class Couchbase.Core.Exceptions.KeyValue.DurabilityImpossibleException : KeyValueException {
}
public class Couchbase.Core.Exceptions.KeyValue.DurabilityLevelNotAvailableException : KeyValueException {
}
public class Couchbase.Core.Exceptions.KeyValue.DurableWriteInProgressException : KeyValueException {
}
public class Couchbase.Core.Exceptions.KeyValue.DurableWriteReCommitInProgressException : KeyValueException {
}
[NullableContextAttribute("2")]
[InterfaceStabilityAttribute("1")]
public interface Couchbase.Core.Exceptions.KeyValue.IKeyValueErrorContext {
    public string DispatchedFrom { get; }
    public string DispatchedTo { get; }
    public string DocumentKey { get; }
    public string ClientContextId { get; }
    public ulong Cas { get; }
    public ResponseStatus Status { get; }
    public string BucketName { get; }
    public string CollectionName { get; }
    public string ScopeName { get; }
    public OpCode OpCode { get; public set; }
    public abstract virtual string get_DispatchedFrom();
    public abstract virtual string get_DispatchedTo();
    public abstract virtual string get_DocumentKey();
    public abstract virtual string get_ClientContextId();
    public abstract virtual ulong get_Cas();
    public abstract virtual ResponseStatus get_Status();
    public abstract virtual string get_BucketName();
    public abstract virtual string get_CollectionName();
    public abstract virtual string get_ScopeName();
    public abstract virtual OpCode get_OpCode();
    public abstract virtual void set_OpCode(OpCode value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("1")]
public class Couchbase.Core.Exceptions.KeyValue.KeyValueErrorContext : object {
    [CompilerGeneratedAttribute]
private string <DispatchedFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DispatchedTo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DocumentKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientContextId>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Cas>k__BackingField;
    [CompilerGeneratedAttribute]
private ResponseStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BucketName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CollectionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScopeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private OpCode <OpCode>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RetryReason> <RetryReasons>k__BackingField;
    public string DispatchedFrom { get; public set; }
    public string DispatchedTo { get; public set; }
    public string DocumentKey { get; public set; }
    public string ClientContextId { get; public set; }
    public ulong Cas { get; public set; }
    [JsonConverterAttribute("Couchbase.Core.IO.Serializers.SystemTextJson.CamelCaseStringEnumConverter`1<Couchbase.Core.IO.Operations.ResponseStatus>")]
public ResponseStatus Status { get; public set; }
    public string BucketName { get; public set; }
    public string CollectionName { get; public set; }
    public string ScopeName { get; public set; }
    public string Message { get; public set; }
    [JsonConverterAttribute("Couchbase.Core.IO.Serializers.SystemTextJson.CamelCaseStringEnumConverter`1<Couchbase.Core.IO.Operations.OpCode>")]
public OpCode OpCode { get; public set; }
    public List`1<RetryReason> RetryReasons { get; internal set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_DispatchedFrom();
    [CompilerGeneratedAttribute]
public void set_DispatchedFrom(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DispatchedTo();
    [CompilerGeneratedAttribute]
public void set_DispatchedTo(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DocumentKey();
    [CompilerGeneratedAttribute]
public void set_DocumentKey(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ClientContextId();
    [CompilerGeneratedAttribute]
public void set_ClientContextId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual ulong get_Cas();
    [CompilerGeneratedAttribute]
public void set_Cas(ulong value);
    [CompilerGeneratedAttribute]
public sealed virtual ResponseStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(ResponseStatus value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_BucketName();
    [CompilerGeneratedAttribute]
public void set_BucketName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_CollectionName();
    [CompilerGeneratedAttribute]
public void set_CollectionName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ScopeName();
    [CompilerGeneratedAttribute]
public void set_ScopeName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public sealed virtual OpCode get_OpCode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OpCode(OpCode value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<RetryReason> get_RetryReasons();
    [CompilerGeneratedAttribute]
internal void set_RetryReasons(List`1<RetryReason> value);
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Couchbase.Core.Exceptions.KeyValue.KeyValueException : CouchbaseException`1<IKeyValueErrorContext> {
    protected KeyValueException(IErrorContext context);
    protected KeyValueException(IKeyValueErrorContext context);
    protected KeyValueException(string message);
    protected KeyValueException(string message, Exception innerException);
}
public class Couchbase.Core.Exceptions.KeyValue.MutationLostException : KeyValueException {
}
public class Couchbase.Core.Exceptions.KeyValue.NumberTooBigException : KeyValueException {
}
public class Couchbase.Core.Exceptions.KeyValue.PathExistsException : SubDocException {
    public PathExistsException(IErrorContext context);
}
public class Couchbase.Core.Exceptions.KeyValue.PathInvalidException : SubDocException {
}
public class Couchbase.Core.Exceptions.KeyValue.PathMismatchException : SubDocException {
    public PathMismatchException(IErrorContext context);
}
public class Couchbase.Core.Exceptions.KeyValue.PathNotFoundException : SubDocException {
    public PathNotFoundException(IErrorContext context);
}
public class Couchbase.Core.Exceptions.KeyValue.PathTooBigException : SubDocException {
}
public class Couchbase.Core.Exceptions.KeyValue.PathTooDeepException : SubDocException {
}
public class Couchbase.Core.Exceptions.KeyValue.SendQueueFullException : KeyValueException {
}
public class Couchbase.Core.Exceptions.KeyValue.ServerOutOfMemoryException : KeyValueException {
}
public class Couchbase.Core.Exceptions.KeyValue.SocketNotAvailableException : KeyValueException {
    public SocketNotAvailableException(string message);
}
public class Couchbase.Core.Exceptions.KeyValue.SubDocException : SubdocExceptionException {
    public SubDocException(IErrorContext context);
}
[ObsoleteAttribute("This class has been made obsolete and will be removed in a later version.")]
public class Couchbase.Core.Exceptions.KeyValue.SubdocExceptionException : KeyValueException {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <SubDocumentErrorIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private ResponseStatus <SubDocumentStatus>k__BackingField;
    public Nullable`1<int> SubDocumentErrorIndex { get; internal set; }
    public ResponseStatus SubDocumentStatus { get; internal set; }
    public SubdocExceptionException(IErrorContext context);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_SubDocumentErrorIndex();
    [CompilerGeneratedAttribute]
internal void set_SubDocumentErrorIndex(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public virtual ResponseStatus get_SubDocumentStatus();
    [CompilerGeneratedAttribute]
internal virtual void set_SubDocumentStatus(ResponseStatus value);
}
public class Couchbase.Core.Exceptions.KeyValue.ValueInvalidException : KeyValueException {
}
public class Couchbase.Core.Exceptions.KeyValue.ValueNotJsonException : KeyValueException {
}
public class Couchbase.Core.Exceptions.KeyValue.ValueTooDeepException : SubDocException {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Core.Exceptions.KeyValue.ValueToolargeException : KeyValueException {
    [ObsoleteAttribute("Use the IKeyValueErrorContext overload")]
public ValueToolargeException(IErrorContext context);
    public ValueToolargeException(IKeyValueErrorContext context);
    public ValueToolargeException(string message);
    public ValueToolargeException(string message, Exception innerException);
}
public class Couchbase.Core.Exceptions.KeyValue.XattrCannotModifyVirtualAttributeException : object {
}
public class Couchbase.Core.Exceptions.KeyValue.XattrException : KeyValueException {
}
public class Couchbase.Core.Exceptions.KeyValue.XattrInvalidFlagComboException : KeyValueException {
}
public class Couchbase.Core.Exceptions.KeyValue.XattrInvalidKeyComboException : KeyValueException {
}
public class Couchbase.Core.Exceptions.KeyValue.XattrInvalidOrderException : KeyValueException {
}
public class Couchbase.Core.Exceptions.KeyValue.XattrUnknownMacroException : KeyValueException {
}
public class Couchbase.Core.Exceptions.KeyValue.XattrUnknownVirtualAttributeException : object {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("1")]
public class Couchbase.Core.Exceptions.ManagementErrorContext : object {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Statement>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientContextId>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpStatusCode <HttpStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RetryReason> <RetryReasons>k__BackingField;
    public string Message { get; public set; }
    public string Statement { get; public set; }
    public string ClientContextId { get; public set; }
    [JsonConverterAttribute("System.Text.Json.Serialization.JsonStringEnumConverter`1<System.Net.HttpStatusCode>")]
public HttpStatusCode HttpStatus { get; public set; }
    public List`1<RetryReason> RetryReasons { get; internal set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Statement();
    [CompilerGeneratedAttribute]
public void set_Statement(string value);
    [CompilerGeneratedAttribute]
public string get_ClientContextId();
    [CompilerGeneratedAttribute]
public void set_ClientContextId(string value);
    [CompilerGeneratedAttribute]
public HttpStatusCode get_HttpStatus();
    [CompilerGeneratedAttribute]
public void set_HttpStatus(HttpStatusCode value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<RetryReason> get_RetryReasons();
    [CompilerGeneratedAttribute]
internal void set_RetryReasons(List`1<RetryReason> value);
    [NullableContextAttribute("1")]
public virtual string ToString();
}
public class Couchbase.Core.Exceptions.ParsingFailureException : CouchbaseException {
    public ParsingFailureException(IErrorContext context);
    public ParsingFailureException(string message);
    public ParsingFailureException(string message, Exception innerException);
}
public class Couchbase.Core.Exceptions.PlanningFailureException : CouchbaseException {
    public PlanningFailureException(QueryErrorContext context);
}
public class Couchbase.Core.Exceptions.Query.DmlFailureException : QueryException {
    public DmlFailureException(QueryErrorContext context);
}
[NullableContextAttribute("2")]
[InterfaceStabilityAttribute("1")]
public interface Couchbase.Core.Exceptions.Query.IQueryErrorContext {
    public string Statement { get; }
    public string ClientContextId { get; }
    public string Parameters { get; }
    public HttpStatusCode HttpStatus { get; }
    public QueryStatus QueryStatus { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public List`1<Error> Errors { get; }
    public abstract virtual string get_Statement();
    public abstract virtual string get_ClientContextId();
    public abstract virtual string get_Parameters();
    public abstract virtual HttpStatusCode get_HttpStatus();
    public abstract virtual QueryStatus get_QueryStatus();
    public abstract virtual List`1<Error> get_Errors();
}
public class Couchbase.Core.Exceptions.Query.PreparedStatementException : QueryException {
    public PreparedStatementException(QueryErrorContext context);
}
[InterfaceStabilityAttribute("1")]
public class Couchbase.Core.Exceptions.Query.QueryContextMissingException : QueryException {
    public QueryContextMissingException(QueryErrorContext context);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("1")]
[DebuggerDisplayAttribute("{DebuggerDisplay,nq}")]
public class Couchbase.Core.Exceptions.Query.QueryErrorContext : object {
    [CompilerGeneratedAttribute]
private string <Statement>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientContextId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpStatusCode <HttpStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryStatus <QueryStatus>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private List`1<Error> <Errors>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RetryReason> <RetryReasons>k__BackingField;
    [CompilerGeneratedAttribute]
private OpCode <Couchbase.Core.Exceptions.KeyValue.IKeyValueErrorContext.OpCode>k__BackingField;
    [JsonIncludeAttribute]
public string Statement { get; public set; }
    [JsonIncludeAttribute]
public string ClientContextId { get; public set; }
    [JsonIncludeAttribute]
public string Parameters { get; public set; }
    [JsonIncludeAttribute]
[JsonConverterAttribute("System.Text.Json.Serialization.JsonStringEnumConverter`1<System.Net.HttpStatusCode>")]
public HttpStatusCode HttpStatus { get; public set; }
    [JsonIncludeAttribute]
[JsonConverterAttribute("Couchbase.Core.IO.Serializers.SystemTextJson.CamelCaseStringEnumConverter`1<Couchbase.Query.QueryStatus>")]
public QueryStatus QueryStatus { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsonIncludeAttribute]
public List`1<Error> Errors { get; public set; }
    [JsonIncludeAttribute]
public string Message { get; public set; }
    [NullableAttribute("1")]
private string DebuggerDisplay { get; }
    public List`1<RetryReason> RetryReasons { get; internal set; }
    [JsonIgnoreAttribute]
private string Couchbase.Core.Exceptions.KeyValue.IKeyValueErrorContext.DispatchedFrom { get; }
    [JsonIgnoreAttribute]
private string Couchbase.Core.Exceptions.KeyValue.IKeyValueErrorContext.DispatchedTo { get; }
    [JsonIgnoreAttribute]
private string Couchbase.Core.Exceptions.KeyValue.IKeyValueErrorContext.DocumentKey { get; }
    [JsonIgnoreAttribute]
private string Couchbase.Core.Exceptions.KeyValue.IKeyValueErrorContext.ClientContextId { get; }
    [JsonIgnoreAttribute]
private ulong Couchbase.Core.Exceptions.KeyValue.IKeyValueErrorContext.Cas { get; }
    [JsonIgnoreAttribute]
private ResponseStatus Couchbase.Core.Exceptions.KeyValue.IKeyValueErrorContext.Status { get; }
    [JsonIgnoreAttribute]
private string Couchbase.Core.Exceptions.KeyValue.IKeyValueErrorContext.BucketName { get; }
    [JsonIgnoreAttribute]
private string Couchbase.Core.Exceptions.KeyValue.IKeyValueErrorContext.CollectionName { get; }
    [JsonIgnoreAttribute]
private string Couchbase.Core.Exceptions.KeyValue.IKeyValueErrorContext.ScopeName { get; }
    [JsonIgnoreAttribute]
private OpCode Couchbase.Core.Exceptions.KeyValue.IKeyValueErrorContext.OpCode { get; private set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Statement();
    [CompilerGeneratedAttribute]
public void set_Statement(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ClientContextId();
    [CompilerGeneratedAttribute]
public void set_ClientContextId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(string value);
    [CompilerGeneratedAttribute]
public sealed virtual HttpStatusCode get_HttpStatus();
    [CompilerGeneratedAttribute]
public void set_HttpStatus(HttpStatusCode value);
    [CompilerGeneratedAttribute]
public sealed virtual QueryStatus get_QueryStatus();
    [CompilerGeneratedAttribute]
public void set_QueryStatus(QueryStatus value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<Error> get_Errors();
    [CompilerGeneratedAttribute]
public void set_Errors(List`1<Error> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [NullableContextAttribute("1")]
[RequiresUnreferencedCodeAttribute("The Error object may contain Newtonsoft.Json.Linq.JToken objects in the AdditionalData property.")]
[RequiresDynamicCodeAttribute("The Error object may contain Newtonsoft.Json.Linq.JToken objects in the AdditionalData property.")]
private string get_DebuggerDisplay();
    [CompilerGeneratedAttribute]
public sealed virtual List`1<RetryReason> get_RetryReasons();
    [CompilerGeneratedAttribute]
internal void set_RetryReasons(List`1<RetryReason> value);
    private sealed virtual override string Couchbase.Core.Exceptions.KeyValue.IKeyValueErrorContext.get_DispatchedFrom();
    private sealed virtual override string Couchbase.Core.Exceptions.KeyValue.IKeyValueErrorContext.get_DispatchedTo();
    private sealed virtual override string Couchbase.Core.Exceptions.KeyValue.IKeyValueErrorContext.get_DocumentKey();
    private sealed virtual override string Couchbase.Core.Exceptions.KeyValue.IKeyValueErrorContext.get_ClientContextId();
    private sealed virtual override ulong Couchbase.Core.Exceptions.KeyValue.IKeyValueErrorContext.get_Cas();
    private sealed virtual override ResponseStatus Couchbase.Core.Exceptions.KeyValue.IKeyValueErrorContext.get_Status();
    private sealed virtual override string Couchbase.Core.Exceptions.KeyValue.IKeyValueErrorContext.get_BucketName();
    private sealed virtual override string Couchbase.Core.Exceptions.KeyValue.IKeyValueErrorContext.get_CollectionName();
    private sealed virtual override string Couchbase.Core.Exceptions.KeyValue.IKeyValueErrorContext.get_ScopeName();
    [CompilerGeneratedAttribute]
private sealed virtual override OpCode Couchbase.Core.Exceptions.KeyValue.IKeyValueErrorContext.get_OpCode();
    [CompilerGeneratedAttribute]
private sealed virtual override void Couchbase.Core.Exceptions.KeyValue.IKeyValueErrorContext.set_OpCode(OpCode value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Couchbase.Core.Exceptions.Query.QueryException : CouchbaseException`1<IQueryErrorContext> {
    protected QueryException(IQueryErrorContext context);
    protected QueryException(string message);
    protected QueryException(string message, Exception innerException);
}
public class Couchbase.Core.Exceptions.RequestCanceledException : CouchbaseException {
    public RequestCanceledException(string message);
    public RequestCanceledException(string message, Exception innerException);
}
public class Couchbase.Core.Exceptions.ScopeNotFoundException : CouchbaseException {
    public ScopeNotFoundException(IErrorContext context);
    public ScopeNotFoundException(string message);
    public ScopeNotFoundException(string message, Exception innerException);
    internal static ScopeNotFoundException FromScopeName(string scopeName);
}
[NullableContextAttribute("2")]
[InterfaceStabilityAttribute("1")]
public interface Couchbase.Core.Exceptions.Search.ISearchErrorContext {
    public string IndexName { get; }
    public string Query { get; }
    public string Parameters { get; }
    public HttpStatusCode HttpStatus { get; }
    public string ClientContextId { get; }
    public string Statement { get; }
    public string Errors { get; }
    public abstract virtual string get_IndexName();
    public abstract virtual string get_Query();
    public abstract virtual string get_Parameters();
    public abstract virtual HttpStatusCode get_HttpStatus();
    public abstract virtual string get_ClientContextId();
    public abstract virtual string get_Statement();
    public abstract virtual string get_Errors();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("1")]
public class Couchbase.Core.Exceptions.Search.SearchErrorContext : object {
    [CompilerGeneratedAttribute]
private string <IndexName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpStatusCode <HttpStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientContextId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Statement>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Errors>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RetryReason> <RetryReasons>k__BackingField;
    public string IndexName { get; public set; }
    public string Query { get; public set; }
    public string Parameters { get; public set; }
    [JsonConverterAttribute("System.Text.Json.Serialization.JsonStringEnumConverter`1<System.Net.HttpStatusCode>")]
public HttpStatusCode HttpStatus { get; public set; }
    public string ClientContextId { get; public set; }
    public string Statement { get; public set; }
    public string Message { get; public set; }
    public string Errors { get; public set; }
    public List`1<RetryReason> RetryReasons { get; internal set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_IndexName();
    [CompilerGeneratedAttribute]
public void set_IndexName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Query();
    [CompilerGeneratedAttribute]
public void set_Query(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(string value);
    [CompilerGeneratedAttribute]
public sealed virtual HttpStatusCode get_HttpStatus();
    [CompilerGeneratedAttribute]
public void set_HttpStatus(HttpStatusCode value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ClientContextId();
    [CompilerGeneratedAttribute]
public void set_ClientContextId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Statement();
    [CompilerGeneratedAttribute]
public void set_Statement(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Errors();
    [CompilerGeneratedAttribute]
public void set_Errors(string value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<RetryReason> get_RetryReasons();
    [CompilerGeneratedAttribute]
internal void set_RetryReasons(List`1<RetryReason> value);
    [NullableContextAttribute("1")]
public virtual string ToString();
}
public class Couchbase.Core.Exceptions.StreamAlreadyReadException : CouchbaseException {
    private static string DefaultMessage;
    public StreamAlreadyReadException(string message);
    public StreamAlreadyReadException(string message, Exception innerException);
}
public class Couchbase.Core.Exceptions.TemporaryFailureException : CouchbaseException {
    public TemporaryFailureException(string message);
    public TemporaryFailureException(string message, Exception innerException);
    public TemporaryFailureException(IErrorContext context);
}
public class Couchbase.Core.Exceptions.TimeoutException : CouchbaseException {
    public TimeoutException(IErrorContext context);
    public TimeoutException(string message);
    public TimeoutException(string message, Exception innerException);
    public TimeoutException(string message, IErrorContext errorContext);
}
public class Couchbase.Core.Exceptions.UnambiguousTimeoutException : TimeoutException {
    [CompilerGeneratedAttribute]
private List`1<RetryReason> <RetryReasons>k__BackingField;
    public List`1<RetryReason> RetryReasons { get; }
    public UnambiguousTimeoutException(string message);
    public UnambiguousTimeoutException(string message, IErrorContext context);
    public UnambiguousTimeoutException(string message, Exception innerException);
    public UnambiguousTimeoutException(string message, QueryErrorContext errorContext);
    [CompilerGeneratedAttribute]
public List`1<RetryReason> get_RetryReasons();
    internal static void ThrowWithRetryReasons(IRequest request, Exception innerException);
}
public class Couchbase.Core.Exceptions.UnsupportedException : CouchbaseException {
    public UnsupportedException(string message);
    public UnsupportedException(string message, Exception innerException);
}
public class Couchbase.Core.Exceptions.View.DesignDocumentNotFoundException : ViewException {
}
[NullableContextAttribute("2")]
[InterfaceStabilityAttribute("1")]
public interface Couchbase.Core.Exceptions.View.IViewErrorContext {
    public string DesignDocumentName { get; }
    public string Parameters { get; }
    public string ViewName { get; }
    public HttpStatusCode HttpStatus { get; }
    public string ClientContextId { get; }
    public string Errors { get; }
    public abstract virtual string get_DesignDocumentName();
    public abstract virtual string get_Parameters();
    public abstract virtual string get_ViewName();
    public abstract virtual HttpStatusCode get_HttpStatus();
    public abstract virtual string get_ClientContextId();
    public abstract virtual string get_Errors();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("1")]
public class Couchbase.Core.Exceptions.View.ViewContextError : object {
    [CompilerGeneratedAttribute]
private string <DesignDocumentName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ViewName>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpStatusCode <HttpStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientContextId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Errors>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RetryReason> <RetryReasons>k__BackingField;
    public string DesignDocumentName { get; public set; }
    public string Parameters { get; public set; }
    public string ViewName { get; public set; }
    [JsonConverterAttribute("System.Text.Json.Serialization.JsonStringEnumConverter`1<System.Net.HttpStatusCode>")]
public HttpStatusCode HttpStatus { get; public set; }
    public string ClientContextId { get; public set; }
    public string Message { get; public set; }
    public string Errors { get; public set; }
    public List`1<RetryReason> RetryReasons { get; internal set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_DesignDocumentName();
    [CompilerGeneratedAttribute]
public void set_DesignDocumentName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ViewName();
    [CompilerGeneratedAttribute]
public void set_ViewName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual HttpStatusCode get_HttpStatus();
    [CompilerGeneratedAttribute]
public void set_HttpStatus(HttpStatusCode value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ClientContextId();
    [CompilerGeneratedAttribute]
public void set_ClientContextId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Errors();
    [CompilerGeneratedAttribute]
public void set_Errors(string value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<RetryReason> get_RetryReasons();
    [CompilerGeneratedAttribute]
internal void set_RetryReasons(List`1<RetryReason> value);
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Couchbase.Core.Exceptions.View.ViewException : CouchbaseException`1<IViewErrorContext> {
    protected ViewException(IViewErrorContext context);
    protected ViewException(string message);
    protected ViewException(string message, Exception innerException);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Core.Exceptions.View.ViewNotFoundException : ViewException {
    public ViewNotFoundException(ViewContextError context);
    public ViewNotFoundException(string message);
    public ViewNotFoundException(string message, Exception innerException);
}
[ExtensionAttribute]
internal static class Couchbase.Core.Exceptions.View.ViewResultExtensions : object {
    [ExtensionAttribute]
public static bool ViewNotFound(ViewResultBase`2<TKey, TValue> result);
}
internal interface Couchbase.Core.IClusterNode {
    public IBucket Owner { get; public set; }
    public NodeAdapter NodesAdapter { get; public set; }
    public HostEndpointWithPort EndPoint { get; }
    public BucketType BucketType { get; }
    public string BucketName { get; }
    public IReadOnlyCollection`1<HostEndpointWithPort> KeyEndPoints { get; }
    public Uri EventingUri { get; public set; }
    public Uri QueryUri { get; public set; }
    public Uri AnalyticsUri { get; public set; }
    public Uri SearchUri { get; public set; }
    public Uri ViewsUri { get; public set; }
    public Uri ManagementUri { get; public set; }
    public ErrorMap ErrorMap { get; public set; }
    public ServerFeatureSet ServerFeatures { get; }
    public IConnectionPool ConnectionPool { get; }
    public List`1<Exception> Exceptions { get; public set; }
    public bool IsAssigned { get; }
    public bool HasViews { get; }
    public bool HasAnalytics { get; }
    public bool HasQuery { get; }
    public bool HasSearch { get; }
    public bool HasKv { get; }
    public bool HasEventing { get; }
    public bool HasManagement { get; }
    public Nullable`1<DateTime> LastViewActivity { get; }
    public Nullable`1<DateTime> LastQueryActivity { get; }
    public Nullable`1<DateTime> LastSearchActivity { get; }
    public Nullable`1<DateTime> LastAnalyticsActivity { get; }
    public Nullable`1<DateTime> LastKvActivity { get; }
    public Nullable`1<DateTime> LastEventingActivity { get; }
    public bool IsDead { get; }
    public abstract virtual IBucket get_Owner();
    public abstract virtual void set_Owner(IBucket value);
    public abstract virtual NodeAdapter get_NodesAdapter();
    public abstract virtual void set_NodesAdapter(NodeAdapter value);
    public abstract virtual HostEndpointWithPort get_EndPoint();
    public abstract virtual BucketType get_BucketType();
    public abstract virtual string get_BucketName();
    public abstract virtual IReadOnlyCollection`1<HostEndpointWithPort> get_KeyEndPoints();
    public abstract virtual Uri get_EventingUri();
    public abstract virtual void set_EventingUri(Uri value);
    public abstract virtual Uri get_QueryUri();
    public abstract virtual void set_QueryUri(Uri value);
    public abstract virtual Uri get_AnalyticsUri();
    public abstract virtual void set_AnalyticsUri(Uri value);
    public abstract virtual Uri get_SearchUri();
    public abstract virtual void set_SearchUri(Uri value);
    public abstract virtual Uri get_ViewsUri();
    public abstract virtual void set_ViewsUri(Uri value);
    public abstract virtual Uri get_ManagementUri();
    public abstract virtual void set_ManagementUri(Uri value);
    public abstract virtual ErrorMap get_ErrorMap();
    public abstract virtual void set_ErrorMap(ErrorMap value);
    public abstract virtual ServerFeatureSet get_ServerFeatures();
    public abstract virtual IConnectionPool get_ConnectionPool();
    public abstract virtual List`1<Exception> get_Exceptions();
    public abstract virtual void set_Exceptions(List`1<Exception> value);
    public abstract virtual Task HelloHello();
    public abstract virtual bool get_IsAssigned();
    public abstract virtual bool get_HasViews();
    public abstract virtual bool get_HasAnalytics();
    public abstract virtual bool get_HasQuery();
    public abstract virtual bool get_HasSearch();
    public abstract virtual bool get_HasKv();
    public abstract virtual bool get_HasEventing();
    public abstract virtual bool get_HasManagement();
    public abstract virtual Nullable`1<DateTime> get_LastViewActivity();
    public abstract virtual Nullable`1<DateTime> get_LastQueryActivity();
    public abstract virtual Nullable`1<DateTime> get_LastSearchActivity();
    public abstract virtual Nullable`1<DateTime> get_LastAnalyticsActivity();
    public abstract virtual Nullable`1<DateTime> get_LastKvActivity();
    public abstract virtual Nullable`1<DateTime> get_LastEventingActivity();
    public abstract virtual Task`1<Manifest> GetManifest();
    public abstract virtual Task SelectBucketAsync(string bucketName, CancellationToken cancellationToken);
    public abstract virtual Task`1<BucketConfig> GetClusterMap(Nullable`1<ConfigVersion> latestVersionOnClient, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResponseStatus> ExecuteOp(IConnection connection, IOperation op, CancellationTokenPair tokenPair);
    public abstract virtual Task`1<ResponseStatus> SendAsync(IOperation op, CancellationTokenPair tokenPair);
    [CompilerGeneratedAttribute]
public abstract virtual void add_KeyEndPointsChanged(NotifyCollectionChangedEventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_KeyEndPointsChanged(NotifyCollectionChangedEventHandler value);
    public abstract virtual bool get_IsDead();
}
[InterfaceStabilityAttribute("1")]
public interface Couchbase.Core.IErrorContext {
    public string Message { get; }
    public List`1<RetryReason> RetryReasons { get; }
    public abstract virtual string get_Message();
    public abstract virtual List`1<RetryReason> get_RetryReasons();
}
internal interface Couchbase.Core.IMappedNode {
    public ulong Rev { get; }
    public abstract virtual Nullable`1<HostEndpointWithPort> LocatePrimary();
    public abstract virtual ulong get_Rev();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonSourceGenerationOptionsAttribute]
[JsonSerializableAttribute("Couchbase.Core.Configuration.Server.BucketConfig")]
[JsonSerializableAttribute("Couchbase.Core.IO.Operations.Errors.ErrorMapDto")]
[JsonSerializableAttribute("Couchbase.Core.IO.Operations.Hello/HelloKey")]
[JsonSerializableAttribute("Couchbase.Core.Configuration.Server.Manifest")]
[JsonSerializableAttribute("Couchbase.Core.IO.Serializers.SystemTextJson.TypeSerializerWrapper")]
[JsonSerializableAttribute("Couchbase.Analytics.WarningData")]
[JsonSerializableAttribute("Couchbase.Analytics.MetricsData")]
[JsonSerializableAttribute("Couchbase.Core.Version.ClusterVersionProvider/Pools")]
[JsonSerializableAttribute("Couchbase.Core.Exceptions.KeyValue.KeyValueErrorContext")]
[JsonSerializableAttribute("Couchbase.Core.Exceptions.Analytics.AnalyticsErrorContext")]
[JsonSerializableAttribute("Couchbase.Core.Exceptions.Search.SearchErrorContext")]
[JsonSerializableAttribute("Couchbase.Core.Exceptions.View.ViewContextError")]
[JsonSerializableAttribute("System.Int64")]
[GeneratedCodeAttribute("System.Text.Json.SourceGeneration", "8.0.10.31311")]
internal class Couchbase.Core.InternalSerializationContext : JsonSerializerContext {
    [NullableAttribute("2")]
private static SystemTextJsonSerializer _defaultTypeSerializer;
    [NullableAttribute("2")]
private JsonTypeInfo`1<bool> _Boolean;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<MetricsData> _AnalyticsMetricsData;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<WarningData> _AnalyticsWarningData;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<BucketConfig> _BucketConfig;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<CollectionDef> _CollectionDef;
    [NullableAttribute("2")]
private JsonTypeInfo`1<ConfigVersion> _ConfigVersion;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Ddocs> _Ddocs;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<ExternalAddressesConfig> _ExternalAddressesConfig;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Manifest> _Manifest;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Node> _Node;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Node[]> _NodeArray;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<NodesExt> _NodesExt;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Ports> _Ports;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<ScopeDef> _ScopeDef;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Services> _Services;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<AnalyticsErrorContext> _AnalyticsErrorContext;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<KeyValueErrorContext> _KeyValueErrorContext;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<SearchErrorContext> _SearchErrorContext;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<ViewContextError> _ViewContextError;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<ErrorCode> _ErrorCode;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<ErrorMapDto> _ErrorMapDto;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<RetrySpec> _RetrySpec;
    [NullableAttribute("2")]
private JsonTypeInfo`1<RetryStrategy> _RetryStrategy;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<HelloKey> _HelloKey;
    [NullableAttribute("2")]
private JsonTypeInfo`1<OpCode> _OpCode;
    [NullableAttribute("2")]
private JsonTypeInfo`1<ResponseStatus> _ResponseStatus;
    [NullableAttribute("2")]
private JsonTypeInfo`1<TypeSerializerWrapper> _TypeSerializerWrapper;
    [NullableAttribute("2")]
private JsonTypeInfo`1<RetryReason> _RetryReason;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<VBucketServerMapDto> _VBucketServerMapDto;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Pools> _Pools;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Error> _Error;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Reason> _Reason;
    [NullableAttribute("2")]
private JsonTypeInfo`1<Severity> _Severity;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Dictionary`2<string, ExternalAddressesConfig>> _DictionaryStringExternalAddressesConfig;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Dictionary`2<string, ErrorCode>> _DictionaryStringErrorCode;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Dictionary`2<string, IEnumerable`1<string>>> _DictionaryStringIEnumerableString;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IDictionary`2<string, object>> _IDictionaryStringObject;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IEnumerable`1<string>> _IEnumerableString;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<CollectionDef>> _ListCollectionDef;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<Node>> _ListNode;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<NodesExt>> _ListNodesExt;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<ScopeDef>> _ListScopeDef;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<RetryReason>> _ListRetryReason;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<Error>> _ListError;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<int>> _ListInt32;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<string>> _ListString;
    [NullableAttribute("2")]
private JsonTypeInfo`1<HttpStatusCode> _HttpStatusCode;
    [NullableAttribute("2")]
private JsonTypeInfo`1<int> _Int32;
    [NullableAttribute("2")]
private JsonTypeInfo`1<Nullable`1<int>> _NullableInt32;
    [NullableAttribute("2")]
private JsonTypeInfo`1<long> _Int64;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<object> _Object;
    [NullableAttribute("2")]
private JsonTypeInfo`1<short> _Int16;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Int16[]> _Int16Array;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Int16[][]> _Int16ArrayArray;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<string> _String;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<String[]> _StringArray;
    [NullableAttribute("2")]
private JsonTypeInfo`1<UInt32> _UInt32;
    [NullableAttribute("2")]
private JsonTypeInfo`1<ulong> _UInt64;
    private static JsonSerializerOptions s_defaultOptions;
    [CompilerGeneratedAttribute]
private static InternalSerializationContext <Default>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JsonSerializerOptions <GeneratedSerializerOptions>k__BackingField;
    private static JsonEncodedText PropName_elapsedTime;
    private static JsonEncodedText PropName_executionTime;
    private static JsonEncodedText PropName_resultCount;
    private static JsonEncodedText PropName_resultSize;
    private static JsonEncodedText PropName_mutationCount;
    private static JsonEncodedText PropName_errorCount;
    private static JsonEncodedText PropName_warningCount;
    private static JsonEncodedText PropName_sortCount;
    private static JsonEncodedText PropName_msg;
    private static JsonEncodedText PropName_code;
    private static JsonEncodedText PropName_configVersion;
    private static JsonEncodedText PropName_networkResolution;
    private static JsonEncodedText PropName_rev;
    private static JsonEncodedText PropName_revEpoch;
    private static JsonEncodedText PropName_name;
    private static JsonEncodedText PropName_uri;
    private static JsonEncodedText PropName_streamingUri;
    private static JsonEncodedText PropName_nodes;
    private static JsonEncodedText PropName_nodesExt;
    private static JsonEncodedText PropName_nodeLocator;
    private static JsonEncodedText PropName_uuid;
    private static JsonEncodedText PropName_ddocs;
    private static JsonEncodedText PropName_vBucketServerMap;
    private static JsonEncodedText PropName_bucketCapabilitiesVer;
    private static JsonEncodedText PropName_bucketCapabilities;
    private static JsonEncodedText PropName_clusterCapabilitiesVer;
    private static JsonEncodedText PropName_clusterCapabilities;
    private static JsonEncodedText PropName_useAlternateAddresses;
    private static JsonEncodedText PropName_uid;
    private static JsonEncodedText PropName_epoch;
    private static JsonEncodedText PropName_revision;
    private static JsonEncodedText PropName_hostname;
    private static JsonEncodedText PropName_ports;
    private static JsonEncodedText PropName_scopes;
    private static JsonEncodedText PropName_couchApiBase;
    private static JsonEncodedText PropName_couchApiBaseHttps;
    private static JsonEncodedText PropName_services;
    private static JsonEncodedText PropName_version;
    private static JsonEncodedText PropName_thisNode;
    private static JsonEncodedText PropName_alternateAddresses;
    private static JsonEncodedText PropName_hasAlternateAddress;
    private static JsonEncodedText PropName_direct;
    private static JsonEncodedText PropName_proxy;
    private static JsonEncodedText PropName_sslDirect;
    private static JsonEncodedText PropName_httpsCAPI;
    private static JsonEncodedText PropName_httpsMgmt;
    private static JsonEncodedText PropName_collections;
    private static JsonEncodedText PropName_mgmt;
    private static JsonEncodedText PropName_mgmtSSL;
    private static JsonEncodedText PropName_indexAdmin;
    private static JsonEncodedText PropName_indexScan;
    private static JsonEncodedText PropName_indexHttp;
    private static JsonEncodedText PropName_indexStreamInit;
    private static JsonEncodedText PropName_indexStreamCatchup;
    private static JsonEncodedText PropName_indexStreamMaint;
    private static JsonEncodedText PropName_indexHttps;
    private static JsonEncodedText PropName_kv;
    private static JsonEncodedText PropName_kvSSL;
    private static JsonEncodedText PropName_capi;
    private static JsonEncodedText PropName_capiSSL;
    private static JsonEncodedText PropName_projector;
    private static JsonEncodedText PropName_n1ql;
    private static JsonEncodedText PropName_n1qlSSL;
    private static JsonEncodedText PropName_cbas;
    private static JsonEncodedText PropName_cbasSSL;
    private static JsonEncodedText PropName_fts;
    private static JsonEncodedText PropName_ftsSSL;
    private static JsonEncodedText PropName_moxi;
    private static JsonEncodedText PropName_eventingAdminPort;
    private static JsonEncodedText PropName_eventingSSL;
    private static JsonEncodedText PropName_desc;
    private static JsonEncodedText PropName_attrs;
    private static JsonEncodedText PropName_retry;
    private static JsonEncodedText PropName_errors;
    private static JsonEncodedText PropName_strategy;
    private static JsonEncodedText PropName_interval;
    private static JsonEncodedText PropName_ceil;
    private static JsonEncodedText PropName_after;
    private static JsonEncodedText EncodedPropName_6D61782D6475726174696F6E;
    private static JsonEncodedText PropName_i;
    private static JsonEncodedText PropName_a;
    private static JsonEncodedText PropName_caller;
    private static JsonEncodedText PropName_key;
    private static JsonEncodedText PropName_message;
    public static SystemTextJsonSerializer DefaultTypeSerializer { get; }
    public JsonTypeInfo`1<bool> Boolean { get; }
    public JsonTypeInfo`1<MetricsData> AnalyticsMetricsData { get; }
    public JsonTypeInfo`1<WarningData> AnalyticsWarningData { get; }
    public JsonTypeInfo`1<BucketConfig> BucketConfig { get; }
    public JsonTypeInfo`1<CollectionDef> CollectionDef { get; }
    public JsonTypeInfo`1<ConfigVersion> ConfigVersion { get; }
    public JsonTypeInfo`1<Ddocs> Ddocs { get; }
    public JsonTypeInfo`1<ExternalAddressesConfig> ExternalAddressesConfig { get; }
    public JsonTypeInfo`1<Manifest> Manifest { get; }
    public JsonTypeInfo`1<Node> Node { get; }
    public JsonTypeInfo`1<Node[]> NodeArray { get; }
    public JsonTypeInfo`1<NodesExt> NodesExt { get; }
    public JsonTypeInfo`1<Ports> Ports { get; }
    public JsonTypeInfo`1<ScopeDef> ScopeDef { get; }
    public JsonTypeInfo`1<Services> Services { get; }
    public JsonTypeInfo`1<AnalyticsErrorContext> AnalyticsErrorContext { get; }
    public JsonTypeInfo`1<KeyValueErrorContext> KeyValueErrorContext { get; }
    public JsonTypeInfo`1<SearchErrorContext> SearchErrorContext { get; }
    public JsonTypeInfo`1<ViewContextError> ViewContextError { get; }
    public JsonTypeInfo`1<ErrorCode> ErrorCode { get; }
    public JsonTypeInfo`1<ErrorMapDto> ErrorMapDto { get; }
    public JsonTypeInfo`1<RetrySpec> RetrySpec { get; }
    public JsonTypeInfo`1<RetryStrategy> RetryStrategy { get; }
    public JsonTypeInfo`1<HelloKey> HelloKey { get; }
    public JsonTypeInfo`1<OpCode> OpCode { get; }
    public JsonTypeInfo`1<ResponseStatus> ResponseStatus { get; }
    public JsonTypeInfo`1<TypeSerializerWrapper> TypeSerializerWrapper { get; }
    public JsonTypeInfo`1<RetryReason> RetryReason { get; }
    public JsonTypeInfo`1<VBucketServerMapDto> VBucketServerMapDto { get; }
    public JsonTypeInfo`1<Pools> Pools { get; }
    public JsonTypeInfo`1<Error> Error { get; }
    public JsonTypeInfo`1<Reason> Reason { get; }
    public JsonTypeInfo`1<Severity> Severity { get; }
    public JsonTypeInfo`1<Dictionary`2<string, ExternalAddressesConfig>> DictionaryStringExternalAddressesConfig { get; }
    public JsonTypeInfo`1<Dictionary`2<string, ErrorCode>> DictionaryStringErrorCode { get; }
    public JsonTypeInfo`1<Dictionary`2<string, IEnumerable`1<string>>> DictionaryStringIEnumerableString { get; }
    public JsonTypeInfo`1<IDictionary`2<string, object>> IDictionaryStringObject { get; }
    public JsonTypeInfo`1<IEnumerable`1<string>> IEnumerableString { get; }
    public JsonTypeInfo`1<List`1<CollectionDef>> ListCollectionDef { get; }
    public JsonTypeInfo`1<List`1<Node>> ListNode { get; }
    public JsonTypeInfo`1<List`1<NodesExt>> ListNodesExt { get; }
    public JsonTypeInfo`1<List`1<ScopeDef>> ListScopeDef { get; }
    public JsonTypeInfo`1<List`1<RetryReason>> ListRetryReason { get; }
    public JsonTypeInfo`1<List`1<Error>> ListError { get; }
    public JsonTypeInfo`1<List`1<int>> ListInt32 { get; }
    public JsonTypeInfo`1<List`1<string>> ListString { get; }
    public JsonTypeInfo`1<HttpStatusCode> HttpStatusCode { get; }
    public JsonTypeInfo`1<int> Int32 { get; }
    public JsonTypeInfo`1<Nullable`1<int>> NullableInt32 { get; }
    public JsonTypeInfo`1<long> Int64 { get; }
    public JsonTypeInfo`1<object> Object { get; }
    public JsonTypeInfo`1<short> Int16 { get; }
    public JsonTypeInfo`1<Int16[]> Int16Array { get; }
    public JsonTypeInfo`1<Int16[][]> Int16ArrayArray { get; }
    public JsonTypeInfo`1<string> String { get; }
    public JsonTypeInfo`1<String[]> StringArray { get; }
    public JsonTypeInfo`1<UInt32> UInt32 { get; }
    public JsonTypeInfo`1<ulong> UInt64 { get; }
    public static InternalSerializationContext Default { get; }
    [NullableAttribute("2")]
protected JsonSerializerOptions GeneratedSerializerOptions { get; }
    public InternalSerializationContext(JsonSerializerOptions options);
    private static InternalSerializationContext();
    public static SystemTextJsonSerializer get_DefaultTypeSerializer();
    [RequiresUnreferencedCodeAttribute("The DefaultSerializer uses Newtonsoft.Json which requires unreferenced code and is incompatible with trimming.")]
[RequiresDynamicCodeAttribute("The DefaultSerializer uses Newtonsoft.Json which requires dynamic code and is incompatible with AOT.")]
public static string SerializeWithFallback(TValue value, JsonTypeInfo`1<TValue> jsonTypeInfo);
    public static void SerializeWithFallback(Stream stream, TValue value, JsonTypeInfo`1<TValue> jsonTypeInfo, IFallbackTypeSerializerProvider fallbackTypeSerializerProvider);
    public JsonTypeInfo`1<bool> get_Boolean();
    private JsonTypeInfo`1<bool> Create_Boolean(JsonSerializerOptions options);
    public JsonTypeInfo`1<MetricsData> get_AnalyticsMetricsData();
    private JsonTypeInfo`1<MetricsData> Create_AnalyticsMetricsData(JsonSerializerOptions options);
    private static JsonPropertyInfo[] AnalyticsMetricsDataPropInit(JsonSerializerOptions options);
    private void AnalyticsMetricsDataSerializeHandler(Utf8JsonWriter writer, MetricsData value);
    public JsonTypeInfo`1<WarningData> get_AnalyticsWarningData();
    private JsonTypeInfo`1<WarningData> Create_AnalyticsWarningData(JsonSerializerOptions options);
    private static JsonPropertyInfo[] AnalyticsWarningDataPropInit(JsonSerializerOptions options);
    private void AnalyticsWarningDataSerializeHandler(Utf8JsonWriter writer, WarningData value);
    public JsonTypeInfo`1<BucketConfig> get_BucketConfig();
    private JsonTypeInfo`1<BucketConfig> Create_BucketConfig(JsonSerializerOptions options);
    private static JsonPropertyInfo[] BucketConfigPropInit(JsonSerializerOptions options);
    private void BucketConfigSerializeHandler(Utf8JsonWriter writer, BucketConfig value);
    public JsonTypeInfo`1<CollectionDef> get_CollectionDef();
    private JsonTypeInfo`1<CollectionDef> Create_CollectionDef(JsonSerializerOptions options);
    private static JsonPropertyInfo[] CollectionDefPropInit(JsonSerializerOptions options);
    private void CollectionDefSerializeHandler(Utf8JsonWriter writer, CollectionDef value);
    public JsonTypeInfo`1<ConfigVersion> get_ConfigVersion();
    private JsonTypeInfo`1<ConfigVersion> Create_ConfigVersion(JsonSerializerOptions options);
    private static JsonPropertyInfo[] ConfigVersionPropInit(JsonSerializerOptions options);
    private void ConfigVersionSerializeHandler(Utf8JsonWriter writer, ConfigVersion value);
    public JsonTypeInfo`1<Ddocs> get_Ddocs();
    private JsonTypeInfo`1<Ddocs> Create_Ddocs(JsonSerializerOptions options);
    private static JsonPropertyInfo[] DdocsPropInit(JsonSerializerOptions options);
    private void DdocsSerializeHandler(Utf8JsonWriter writer, Ddocs value);
    public JsonTypeInfo`1<ExternalAddressesConfig> get_ExternalAddressesConfig();
    private JsonTypeInfo`1<ExternalAddressesConfig> Create_ExternalAddressesConfig(JsonSerializerOptions options);
    private static JsonPropertyInfo[] ExternalAddressesConfigPropInit(JsonSerializerOptions options);
    private void ExternalAddressesConfigSerializeHandler(Utf8JsonWriter writer, ExternalAddressesConfig value);
    public JsonTypeInfo`1<Manifest> get_Manifest();
    private JsonTypeInfo`1<Manifest> Create_Manifest(JsonSerializerOptions options);
    private static JsonPropertyInfo[] ManifestPropInit(JsonSerializerOptions options);
    private void ManifestSerializeHandler(Utf8JsonWriter writer, Manifest value);
    public JsonTypeInfo`1<Node> get_Node();
    private JsonTypeInfo`1<Node> Create_Node(JsonSerializerOptions options);
    private static JsonPropertyInfo[] NodePropInit(JsonSerializerOptions options);
    private void NodeSerializeHandler(Utf8JsonWriter writer, Node value);
    public JsonTypeInfo`1<Node[]> get_NodeArray();
    private JsonTypeInfo`1<Node[]> Create_NodeArray(JsonSerializerOptions options);
    private void NodeArraySerializeHandler(Utf8JsonWriter writer, Node[] value);
    public JsonTypeInfo`1<NodesExt> get_NodesExt();
    private JsonTypeInfo`1<NodesExt> Create_NodesExt(JsonSerializerOptions options);
    private static JsonPropertyInfo[] NodesExtPropInit(JsonSerializerOptions options);
    private void NodesExtSerializeHandler(Utf8JsonWriter writer, NodesExt value);
    public JsonTypeInfo`1<Ports> get_Ports();
    private JsonTypeInfo`1<Ports> Create_Ports(JsonSerializerOptions options);
    private static JsonPropertyInfo[] PortsPropInit(JsonSerializerOptions options);
    private void PortsSerializeHandler(Utf8JsonWriter writer, Ports value);
    public JsonTypeInfo`1<ScopeDef> get_ScopeDef();
    private JsonTypeInfo`1<ScopeDef> Create_ScopeDef(JsonSerializerOptions options);
    private static JsonPropertyInfo[] ScopeDefPropInit(JsonSerializerOptions options);
    private void ScopeDefSerializeHandler(Utf8JsonWriter writer, ScopeDef value);
    public JsonTypeInfo`1<Services> get_Services();
    private JsonTypeInfo`1<Services> Create_Services(JsonSerializerOptions options);
    private static JsonPropertyInfo[] ServicesPropInit(JsonSerializerOptions options);
    private void ServicesSerializeHandler(Utf8JsonWriter writer, Services value);
    public JsonTypeInfo`1<AnalyticsErrorContext> get_AnalyticsErrorContext();
    private JsonTypeInfo`1<AnalyticsErrorContext> Create_AnalyticsErrorContext(JsonSerializerOptions options);
    private static JsonPropertyInfo[] AnalyticsErrorContextPropInit(JsonSerializerOptions options);
    public JsonTypeInfo`1<KeyValueErrorContext> get_KeyValueErrorContext();
    private JsonTypeInfo`1<KeyValueErrorContext> Create_KeyValueErrorContext(JsonSerializerOptions options);
    private static JsonPropertyInfo[] KeyValueErrorContextPropInit(JsonSerializerOptions options);
    public JsonTypeInfo`1<SearchErrorContext> get_SearchErrorContext();
    private JsonTypeInfo`1<SearchErrorContext> Create_SearchErrorContext(JsonSerializerOptions options);
    private static JsonPropertyInfo[] SearchErrorContextPropInit(JsonSerializerOptions options);
    public JsonTypeInfo`1<ViewContextError> get_ViewContextError();
    private JsonTypeInfo`1<ViewContextError> Create_ViewContextError(JsonSerializerOptions options);
    private static JsonPropertyInfo[] ViewContextErrorPropInit(JsonSerializerOptions options);
    public JsonTypeInfo`1<ErrorCode> get_ErrorCode();
    private JsonTypeInfo`1<ErrorCode> Create_ErrorCode(JsonSerializerOptions options);
    private static JsonPropertyInfo[] ErrorCodePropInit(JsonSerializerOptions options);
    private void ErrorCodeSerializeHandler(Utf8JsonWriter writer, ErrorCode value);
    public JsonTypeInfo`1<ErrorMapDto> get_ErrorMapDto();
    private JsonTypeInfo`1<ErrorMapDto> Create_ErrorMapDto(JsonSerializerOptions options);
    private static JsonPropertyInfo[] ErrorMapDtoPropInit(JsonSerializerOptions options);
    private void ErrorMapDtoSerializeHandler(Utf8JsonWriter writer, ErrorMapDto value);
    public JsonTypeInfo`1<RetrySpec> get_RetrySpec();
    private JsonTypeInfo`1<RetrySpec> Create_RetrySpec(JsonSerializerOptions options);
    private static JsonPropertyInfo[] RetrySpecPropInit(JsonSerializerOptions options);
    private void RetrySpecSerializeHandler(Utf8JsonWriter writer, RetrySpec value);
    public JsonTypeInfo`1<RetryStrategy> get_RetryStrategy();
    private JsonTypeInfo`1<RetryStrategy> Create_RetryStrategy(JsonSerializerOptions options);
    public JsonTypeInfo`1<HelloKey> get_HelloKey();
    private JsonTypeInfo`1<HelloKey> Create_HelloKey(JsonSerializerOptions options);
    private static JsonPropertyInfo[] HelloKeyPropInit(JsonSerializerOptions options);
    private void HelloKeySerializeHandler(Utf8JsonWriter writer, HelloKey value);
    public JsonTypeInfo`1<OpCode> get_OpCode();
    private JsonTypeInfo`1<OpCode> Create_OpCode(JsonSerializerOptions options);
    public JsonTypeInfo`1<ResponseStatus> get_ResponseStatus();
    private JsonTypeInfo`1<ResponseStatus> Create_ResponseStatus(JsonSerializerOptions options);
    public JsonTypeInfo`1<TypeSerializerWrapper> get_TypeSerializerWrapper();
    private JsonTypeInfo`1<TypeSerializerWrapper> Create_TypeSerializerWrapper(JsonSerializerOptions options);
    public JsonTypeInfo`1<RetryReason> get_RetryReason();
    private JsonTypeInfo`1<RetryReason> Create_RetryReason(JsonSerializerOptions options);
    public JsonTypeInfo`1<VBucketServerMapDto> get_VBucketServerMapDto();
    private JsonTypeInfo`1<VBucketServerMapDto> Create_VBucketServerMapDto(JsonSerializerOptions options);
    private static JsonPropertyInfo[] VBucketServerMapDtoPropInit(JsonSerializerOptions options);
    public JsonTypeInfo`1<Pools> get_Pools();
    private JsonTypeInfo`1<Pools> Create_Pools(JsonSerializerOptions options);
    private static JsonPropertyInfo[] PoolsPropInit(JsonSerializerOptions options);
    private void PoolsSerializeHandler(Utf8JsonWriter writer, Pools value);
    public JsonTypeInfo`1<Error> get_Error();
    private JsonTypeInfo`1<Error> Create_Error(JsonSerializerOptions options);
    private static JsonPropertyInfo[] ErrorPropInit(JsonSerializerOptions options);
    public JsonTypeInfo`1<Reason> get_Reason();
    private JsonTypeInfo`1<Reason> Create_Reason(JsonSerializerOptions options);
    private static JsonPropertyInfo[] ReasonPropInit(JsonSerializerOptions options);
    private void ReasonSerializeHandler(Utf8JsonWriter writer, Reason value);
    public JsonTypeInfo`1<Severity> get_Severity();
    private JsonTypeInfo`1<Severity> Create_Severity(JsonSerializerOptions options);
    public JsonTypeInfo`1<Dictionary`2<string, ExternalAddressesConfig>> get_DictionaryStringExternalAddressesConfig();
    private JsonTypeInfo`1<Dictionary`2<string, ExternalAddressesConfig>> Create_DictionaryStringExternalAddressesConfig(JsonSerializerOptions options);
    private void DictionaryStringExternalAddressesConfigSerializeHandler(Utf8JsonWriter writer, Dictionary`2<string, ExternalAddressesConfig> value);
    public JsonTypeInfo`1<Dictionary`2<string, ErrorCode>> get_DictionaryStringErrorCode();
    private JsonTypeInfo`1<Dictionary`2<string, ErrorCode>> Create_DictionaryStringErrorCode(JsonSerializerOptions options);
    private void DictionaryStringErrorCodeSerializeHandler(Utf8JsonWriter writer, Dictionary`2<string, ErrorCode> value);
    public JsonTypeInfo`1<Dictionary`2<string, IEnumerable`1<string>>> get_DictionaryStringIEnumerableString();
    private JsonTypeInfo`1<Dictionary`2<string, IEnumerable`1<string>>> Create_DictionaryStringIEnumerableString(JsonSerializerOptions options);
    private void DictionaryStringIEnumerableStringSerializeHandler(Utf8JsonWriter writer, Dictionary`2<string, IEnumerable`1<string>> value);
    public JsonTypeInfo`1<IDictionary`2<string, object>> get_IDictionaryStringObject();
    private JsonTypeInfo`1<IDictionary`2<string, object>> Create_IDictionaryStringObject(JsonSerializerOptions options);
    public JsonTypeInfo`1<IEnumerable`1<string>> get_IEnumerableString();
    private JsonTypeInfo`1<IEnumerable`1<string>> Create_IEnumerableString(JsonSerializerOptions options);
    private void IEnumerableStringSerializeHandler(Utf8JsonWriter writer, IEnumerable`1<string> value);
    public JsonTypeInfo`1<List`1<CollectionDef>> get_ListCollectionDef();
    private JsonTypeInfo`1<List`1<CollectionDef>> Create_ListCollectionDef(JsonSerializerOptions options);
    private void ListCollectionDefSerializeHandler(Utf8JsonWriter writer, List`1<CollectionDef> value);
    public JsonTypeInfo`1<List`1<Node>> get_ListNode();
    private JsonTypeInfo`1<List`1<Node>> Create_ListNode(JsonSerializerOptions options);
    private void ListNodeSerializeHandler(Utf8JsonWriter writer, List`1<Node> value);
    public JsonTypeInfo`1<List`1<NodesExt>> get_ListNodesExt();
    private JsonTypeInfo`1<List`1<NodesExt>> Create_ListNodesExt(JsonSerializerOptions options);
    private void ListNodesExtSerializeHandler(Utf8JsonWriter writer, List`1<NodesExt> value);
    public JsonTypeInfo`1<List`1<ScopeDef>> get_ListScopeDef();
    private JsonTypeInfo`1<List`1<ScopeDef>> Create_ListScopeDef(JsonSerializerOptions options);
    private void ListScopeDefSerializeHandler(Utf8JsonWriter writer, List`1<ScopeDef> value);
    public JsonTypeInfo`1<List`1<RetryReason>> get_ListRetryReason();
    private JsonTypeInfo`1<List`1<RetryReason>> Create_ListRetryReason(JsonSerializerOptions options);
    private void ListRetryReasonSerializeHandler(Utf8JsonWriter writer, List`1<RetryReason> value);
    public JsonTypeInfo`1<List`1<Error>> get_ListError();
    private JsonTypeInfo`1<List`1<Error>> Create_ListError(JsonSerializerOptions options);
    private void ListErrorSerializeHandler(Utf8JsonWriter writer, List`1<Error> value);
    public JsonTypeInfo`1<List`1<int>> get_ListInt32();
    private JsonTypeInfo`1<List`1<int>> Create_ListInt32(JsonSerializerOptions options);
    private void ListInt32SerializeHandler(Utf8JsonWriter writer, List`1<int> value);
    public JsonTypeInfo`1<List`1<string>> get_ListString();
    private JsonTypeInfo`1<List`1<string>> Create_ListString(JsonSerializerOptions options);
    private void ListStringSerializeHandler(Utf8JsonWriter writer, List`1<string> value);
    public JsonTypeInfo`1<HttpStatusCode> get_HttpStatusCode();
    private JsonTypeInfo`1<HttpStatusCode> Create_HttpStatusCode(JsonSerializerOptions options);
    public JsonTypeInfo`1<int> get_Int32();
    private JsonTypeInfo`1<int> Create_Int32(JsonSerializerOptions options);
    public JsonTypeInfo`1<Nullable`1<int>> get_NullableInt32();
    private JsonTypeInfo`1<Nullable`1<int>> Create_NullableInt32(JsonSerializerOptions options);
    public JsonTypeInfo`1<long> get_Int64();
    private JsonTypeInfo`1<long> Create_Int64(JsonSerializerOptions options);
    public JsonTypeInfo`1<object> get_Object();
    private JsonTypeInfo`1<object> Create_Object(JsonSerializerOptions options);
    public JsonTypeInfo`1<short> get_Int16();
    private JsonTypeInfo`1<short> Create_Int16(JsonSerializerOptions options);
    public JsonTypeInfo`1<Int16[]> get_Int16Array();
    private JsonTypeInfo`1<Int16[]> Create_Int16Array(JsonSerializerOptions options);
    private void Int16ArraySerializeHandler(Utf8JsonWriter writer, Int16[] value);
    public JsonTypeInfo`1<Int16[][]> get_Int16ArrayArray();
    private JsonTypeInfo`1<Int16[][]> Create_Int16ArrayArray(JsonSerializerOptions options);
    private void Int16ArrayArraySerializeHandler(Utf8JsonWriter writer, Int16[][] value);
    public JsonTypeInfo`1<string> get_String();
    private JsonTypeInfo`1<string> Create_String(JsonSerializerOptions options);
    public JsonTypeInfo`1<String[]> get_StringArray();
    private JsonTypeInfo`1<String[]> Create_StringArray(JsonSerializerOptions options);
    private void StringArraySerializeHandler(Utf8JsonWriter writer, String[] value);
    public JsonTypeInfo`1<UInt32> get_UInt32();
    private JsonTypeInfo`1<UInt32> Create_UInt32(JsonSerializerOptions options);
    public JsonTypeInfo`1<ulong> get_UInt64();
    private JsonTypeInfo`1<ulong> Create_UInt64(JsonSerializerOptions options);
    [CompilerGeneratedAttribute]
public static InternalSerializationContext get_Default();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual JsonSerializerOptions get_GeneratedSerializerOptions();
    private static bool TryGetTypeInfoForRuntimeCustomConverter(JsonSerializerOptions options, JsonTypeInfo`1& jsonTypeInfo);
    private static JsonConverter GetRuntimeConverterForType(Type type, JsonSerializerOptions options);
    private static JsonConverter ExpandConverter(Type type, JsonConverter converter, JsonSerializerOptions options, bool validateCanConvert);
    public virtual JsonTypeInfo GetTypeInfo(Type type);
    private sealed virtual override JsonTypeInfo global::System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver.GetTypeInfo(Type type, JsonSerializerOptions options);
}
internal class Couchbase.Core.IO.AsyncState : AsyncStateBase {
    [NullableContextAttribute("1")]
public AsyncState(IOperation operation);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.AsyncStateBase : object {
    protected TaskCompletionSource`1 modreq(System.Runtime.CompilerServices.IsVolatile) _tcs;
    protected Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _isCompleted;
    private LightweightStopwatch _stopwatch;
    [CompilerGeneratedAttribute]
private EndPoint <EndPoint>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IOperation <Operation>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <ConnectionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LocalEndpoint>k__BackingField;
    [NullableAttribute("0")]
internal SlicedMemoryOwner`1<byte> _response;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`1<object> SendResponseInternalAction;
    public EndPoint EndPoint { get; public set; }
    [NullableAttribute("1")]
public IOperation Operation { get; public set; }
    public UInt32 Opaque { get; }
    public ulong ConnectionId { get; public set; }
    public string LocalEndpoint { get; public set; }
    public TimeSpan TimeInFlight { get; }
    [NullableAttribute("1")]
public Task CompletionTask { get; }
    [NullableContextAttribute("1")]
public AsyncStateBase(IOperation operation);
    private static AsyncStateBase();
    [CompilerGeneratedAttribute]
public EndPoint get_EndPoint();
    [CompilerGeneratedAttribute]
public void set_EndPoint(EndPoint value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IOperation get_Operation();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Operation(IOperation value);
    public UInt32 get_Opaque();
    [CompilerGeneratedAttribute]
public ulong get_ConnectionId();
    [CompilerGeneratedAttribute]
public void set_ConnectionId(ulong value);
    [CompilerGeneratedAttribute]
public string get_LocalEndpoint();
    [CompilerGeneratedAttribute]
public void set_LocalEndpoint(string value);
    public TimeSpan get_TimeInFlight();
    [NullableContextAttribute("1")]
public Task get_CompletionTask();
    [NullableContextAttribute("0")]
public virtual bool Complete(SlicedMemoryOwner`1& modreq(System.Runtime.InteropServices.InAttribute) response);
    public sealed virtual void Dispose();
    [NullableContextAttribute("0")]
internal static SlicedMemoryOwner`1<byte> BuildErrorResponse(UInt32 opaque, ResponseStatus status);
    [NullableContextAttribute("0")]
protected void SendResponse(SlicedMemoryOwner`1& response);
    protected static void SendResponseInternal(object response);
}
internal class Couchbase.Core.IO.AsyncStateStreaming : AsyncStateBase {
    private ILogger`1<MultiplexingConnection> _logger;
    private static bool StreamMoreExpected;
    private static bool StreamEnded;
    public AsyncStateStreaming(IOperation operation, ILogger`1<MultiplexingConnection> logger);
    public virtual bool Complete(SlicedMemoryOwner`1& modreq(System.Runtime.InteropServices.InAttribute) response);
    private bool CompleteEarlyIfErrorsDuringSamplingScan(ResponseStatus status, RangeScanContinue observer, SlicedMemoryOwner`1<byte> response);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Core.IO.Authentication.ISaslMechanism {
    public MechanismType MechanismType { get; }
    public abstract virtual MechanismType get_MechanismType();
    public abstract virtual Task AuthenticateAsync(IConnection connection, CancellationToken cancellationToken);
}
public enum Couchbase.Core.IO.Authentication.MechanismType : Enum {
    public int value__;
    [DescriptionAttribute("SCRAM-SHA512")]
public static MechanismType ScramSha512;
    [DescriptionAttribute("SCRAM-SHA256")]
public static MechanismType ScramSha256;
    [DescriptionAttribute("SCRAM-SHA1")]
public static MechanismType ScramSha1;
    [DescriptionAttribute("CRAM-MD5")]
public static MechanismType CramMd5;
    [DescriptionAttribute("PLAIN")]
public static MechanismType Plain;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Authentication.PlainSaslMechanism : SaslMechanismBase {
    private string _username;
    private string _password;
    public PlainSaslMechanism(string username, string password, ILogger`1<PlainSaslMechanism> logger, IRequestTracer tracer, IOperationConfigurator operationConfigurator);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Authentication.PlainSaslMechanism/<AuthenticateAsync>d__3")]
public virtual Task AuthenticateAsync(IConnection connection, CancellationToken cancellationToken);
    private static string GetAuthData(string userName, string passWord);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Couchbase.Core.IO.Authentication.SaslMechanismBase : object {
    [CompilerGeneratedAttribute]
private IRequestTracer <Tracer>k__BackingField;
    [NullableAttribute("2")]
protected ILogger Logger;
    [CompilerGeneratedAttribute]
private TimeSpan <Timeout>k__BackingField;
    protected IOperationConfigurator OperationConfigurator;
    [CompilerGeneratedAttribute]
private MechanismType <MechanismType>k__BackingField;
    public IRequestTracer Tracer { get; }
    protected TimeSpan Timeout { get; protected set; }
    public MechanismType MechanismType { get; internal set; }
    protected SaslMechanismBase(IRequestTracer tracer, IOperationConfigurator operationConfigurator);
    [CompilerGeneratedAttribute]
public IRequestTracer get_Tracer();
    [CompilerGeneratedAttribute]
protected TimeSpan get_Timeout();
    [CompilerGeneratedAttribute]
protected void set_Timeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public sealed virtual MechanismType get_MechanismType();
    [CompilerGeneratedAttribute]
internal void set_MechanismType(MechanismType value);
    public abstract virtual Task AuthenticateAsync(IConnection connection, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Authentication.SaslMechanismBase/<SaslStart>d__15")]
protected Task`1<string> SaslStart(IConnection connection, string message, IRequestSpan span, CancellationToken token);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Authentication.SaslMechanismBase/<SaslStep>d__16")]
protected Task`1<string> SaslStep(IConnection connection, string message, IRequestSpan span, CancellationToken token);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Authentication.SaslMechanismBase/<SaslList>d__17")]
protected Task`1<string> SaslList(IConnection connection, IRequestSpan span, CancellationToken token);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Authentication.SaslMechanismBase/<SendAsync>d__18`1")]
protected Task`1<T> SendAsync(IOperation`1<T> op, IConnection connection, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Authentication.ScramShaMechanism : SaslMechanismBase {
    private static string ClientKey;
    private static int ShaByteLength;
    private string _username;
    private string _password;
    [CompilerGeneratedAttribute]
private string <ClientNonce>k__BackingField;
    internal string ClientNonce { get; internal set; }
    public ScramShaMechanism(MechanismType mechanismType, string password, string username, ILogger`1<ScramShaMechanism> logger, IRequestTracer tracer, IOperationConfigurator operationConfigurator);
    [CompilerGeneratedAttribute]
internal string get_ClientNonce();
    [CompilerGeneratedAttribute]
internal void set_ClientNonce(string value);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Authentication.ScramShaMechanism/<AuthenticateAsync>d__9")]
public virtual Task AuthenticateAsync(IConnection connection, CancellationToken cancellationToken);
    internal Byte[] GetSaltedPassword(string password, Byte[] salt, int iterationCount);
    internal IDictionary`2<string, string> DecodeResponse(string message);
    internal Byte[] ComputeHash(Byte[] key, string data);
    internal Byte[] ComputeDigest(Byte[] key);
    internal Byte[] GetClientProof(Byte[] saltedPassword, string authMessage);
    [NullableContextAttribute("0")]
internal void XorInPlace(Span`1<byte> result, ReadOnlySpan`1<byte> other);
    internal string GenerateClientNonce();
    private IRequestSpan RootSpan(string operation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Couchbase.Core.IO.Authentication.X509.CertificateFactory : object {
    internal static string CapellaCaCertPem;
    [InterfaceStabilityAttribute("2")]
internal static X509Certificate2 CapellaCaCert;
    [InterfaceStabilityAttribute("2")]
public static IReadOnlyList`1<X509Certificate2> DefaultCertificates;
    private static X509Certificate2Collection DefaultCertificatesCollection;
    private static CertificateFactory();
    public static ICertificateFactory GetCertificatesByPathAndPassword(string path, string password);
    public static ICertificateFactory GetCertificatesFromStore(CertificateStoreSearchCriteria searchCriteria);
    public static ICertificateFactory FromCertificates(X509Certificate2[] certs);
    [NullableContextAttribute("2")]
[InterfaceStabilityAttribute("2")]
public static bool ValidatorWithIgnoreNameMismatch(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors, ILogger logger, IRedactor redactor);
    [NullableContextAttribute("2")]
[InterfaceStabilityAttribute("2")]
public static SslPolicyErrors WithoutNameMismatch(SslPolicyErrors errors, ILogger logger);
    internal static RemoteCertificateValidationCallback GetValidatorWithPredefinedCertificates(X509Certificate2Collection certs, ILogger logger, IRedactor redactor);
    [NullableContextAttribute("2")]
internal static RemoteCertificateValidationCallback GetValidatorWithDefaultCertificates(ILogger logger, IRedactor redactor);
}
public class Couchbase.Core.IO.Authentication.X509.CertificatePathFactory : object {
    private string _path;
    private string _password;
    public CertificatePathFactory(string path, string password);
    public sealed virtual X509Certificate2Collection GetCertificates();
}
public class Couchbase.Core.IO.Authentication.X509.CertificateStoreFactory : object {
    private CertificateStoreSearchCriteria _searchCriteria;
    public CertificateStoreFactory(CertificateStoreSearchCriteria searchCriteria);
    public sealed virtual X509Certificate2Collection GetCertificates();
}
public class Couchbase.Core.IO.Authentication.X509.CertificateStoreSearchCriteria : object {
    [CompilerGeneratedAttribute]
private StoreName <StoreName>k__BackingField;
    [CompilerGeneratedAttribute]
private StoreLocation <StoreLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private X509FindType <X509FindType>k__BackingField;
    [CompilerGeneratedAttribute]
private object <FindValue>k__BackingField;
    public StoreName StoreName { get; public set; }
    public StoreLocation StoreLocation { get; public set; }
    public X509FindType X509FindType { get; public set; }
    public object FindValue { get; public set; }
    [CompilerGeneratedAttribute]
public StoreName get_StoreName();
    [CompilerGeneratedAttribute]
public void set_StoreName(StoreName value);
    [CompilerGeneratedAttribute]
public StoreLocation get_StoreLocation();
    [CompilerGeneratedAttribute]
public void set_StoreLocation(StoreLocation value);
    [CompilerGeneratedAttribute]
public X509FindType get_X509FindType();
    [CompilerGeneratedAttribute]
public void set_X509FindType(X509FindType value);
    [CompilerGeneratedAttribute]
public object get_FindValue();
    [CompilerGeneratedAttribute]
public void set_FindValue(object value);
}
public interface Couchbase.Core.IO.Authentication.X509.ICertificateFactory {
    public abstract virtual X509Certificate2Collection GetCertificates();
}
[InterfaceStabilityAttribute("2")]
public class Couchbase.Core.IO.Authentication.X509.PredefinedCertificateFactory : object {
    private X509Certificate2[] _certs;
    public PredefinedCertificateFactory(X509Certificate2[] certs);
    public PredefinedCertificateFactory(IEnumerable`1<X509Certificate2> certs);
    public sealed virtual X509Certificate2Collection GetCertificates();
}
[InterfaceStabilityAttribute("2")]
public enum Couchbase.Core.IO.Compression.CompressionAlgorithm : Enum {
    public int value__;
    public static CompressionAlgorithm None;
    public static CompressionAlgorithm Snappy;
}
[InterfaceStabilityAttribute("2")]
public interface Couchbase.Core.IO.Compression.ICompressionAlgorithm {
    public CompressionAlgorithm Algorithm { get; }
    public abstract virtual CompressionAlgorithm get_Algorithm();
    public abstract virtual IMemoryOwner`1<byte> Compress(ReadOnlyMemory`1<byte> input);
    public abstract virtual IMemoryOwner`1<byte> Decompress(ReadOnlyMemory`1<byte> input);
}
internal interface Couchbase.Core.IO.Compression.IOperationCompressor {
    public abstract virtual IMemoryOwner`1<byte> Compress(ReadOnlyMemory`1<byte> input, IRequestSpan parentSpan);
    [NullableContextAttribute("1")]
public abstract virtual IMemoryOwner`1<byte> Decompress(ReadOnlyMemory`1<byte> input, IRequestSpan parentSpan);
}
internal class Couchbase.Core.IO.Compression.NullCompressionAlgorithm : object {
    public CompressionAlgorithm Algorithm { get; }
    public sealed virtual CompressionAlgorithm get_Algorithm();
    public sealed virtual IMemoryOwner`1<byte> Compress(ReadOnlyMemory`1<byte> input);
    public sealed virtual IMemoryOwner`1<byte> Decompress(ReadOnlyMemory`1<byte> input);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Compression.OperationCompressor : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`4<ILogger, int, int, Exception> LogSkipLength;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`4<ILogger, float, float, Exception> LogSkipCompressionRatio;
    private ICompressionAlgorithm _compressionAlgorithm;
    private ClusterOptions _clusterOptions;
    private ILogger`1<OperationCompressor> _logger;
    public OperationCompressor(ICompressionAlgorithm compressionAlgorithm, ClusterOptions clusterOptions, ILogger`1<OperationCompressor> logger);
    private static OperationCompressor();
    [NullableContextAttribute("0")]
public sealed virtual IMemoryOwner`1<byte> Compress(ReadOnlyMemory`1<byte> input, IRequestSpan parentSpan);
    public sealed virtual IMemoryOwner`1<byte> Decompress(ReadOnlyMemory`1<byte> input, IRequestSpan parentSpan);
    private static void AddCompressionTags(IRequestSpan span, double ratio, bool used);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Connections.Channels.ChannelConnectionPool : ConnectionPoolBase {
    private static Random _random;
    private IConnectionPoolScaleController _scaleController;
    private IRedactor _redactor;
    private ILogger`1<ChannelConnectionPool> _logger;
    private CancellationTokenSource _cts;
    private SemaphoreSlim _lock;
    private List`1<ChannelConnectionProcessor> _connections;
    private Channel`1<ChannelQueueItem> _sendQueue;
    private bool _initialized;
    [CompilerGeneratedAttribute]
private int <MinimumSize>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaximumSize>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`4<ILogger, object, int, Exception> __InitializedConnectionPoolCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`3<ILogger, HostEndpointWithPort, Exception> __LogConnectionToEndpointSuccessCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`3<ILogger, HostEndpointWithPort, Exception> __LogConnectionToEndpointErrorCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`3<ILogger, HostEndpointWithPort, Exception> __LogDisposeConnectionPoolCallback;
    public int Size { get; }
    public int MinimumSize { get; public set; }
    public int MaximumSize { get; public set; }
    public int PendingSends { get; }
    public ChannelConnectionPool(IConnectionInitializer connectionInitializer, IConnectionFactory connectionFactory, IConnectionPoolScaleController scaleController, IRedactor redactor, ILogger`1<ChannelConnectionPool> logger, int sendQueueCapacity);
    internal ChannelConnectionPool(IConnectionInitializer connectionInitializer, IConnectionFactory connectionFactory, IConnectionPoolScaleController scaleController, IRedactor redactor, ILogger`1<ChannelConnectionPool> logger, Channel`1<ChannelQueueItem> channel);
    private static ChannelConnectionPool();
    public virtual int get_Size();
    [CompilerGeneratedAttribute]
public virtual int get_MinimumSize();
    [CompilerGeneratedAttribute]
public virtual void set_MinimumSize(int value);
    [CompilerGeneratedAttribute]
public virtual int get_MaximumSize();
    [CompilerGeneratedAttribute]
public virtual void set_MaximumSize(int value);
    public virtual int get_PendingSends();
    private static Channel`1<ChannelQueueItem> CreateDefaultChannel(int sendQueueCapacity);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.Channels.ChannelConnectionPool/<InitializeAsync>d__24")]
public virtual Task InitializeAsync(CancellationToken cancellationToken);
    public virtual Task SendAsync(IOperation operation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.Channels.ChannelConnectionPool/<TrySendImmediatelyAsync>d__26")]
public virtual Task`1<bool> TrySendImmediatelyAsync(IOperation op, CancellationToken cancellationToken);
    public virtual IEnumerable`1<IConnection> GetConnections();
    private IEnumerable`1<IConnection> GetConnectionsCore();
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.Channels.ChannelConnectionPool/<ScaleAsync>d__29")]
public virtual Task ScaleAsync(int delta);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.Channels.ChannelConnectionPool/<FreezePoolAsync>d__30")]
public virtual ValueTask`1<IAsyncDisposable> FreezePoolAsync(CancellationToken cancellationToken);
    private void EnsureNotDisposed();
    public virtual void Dispose();
    private Task AddConnectionsAsync(int count, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.Channels.ChannelConnectionPool/<RemoveConnectionAsync>d__34")]
public ValueTask RemoveConnectionAsync(ChannelConnectionProcessor connection);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void InitializedConnectionPool(object endpoint, int size);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogConnectionToEndpointSuccess(HostEndpointWithPort endpoint);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogConnectionToEndpointError(HostEndpointWithPort endpoint);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogDisposeConnectionPool(HostEndpointWithPort endpoint);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Connections.Channels.ChannelConnectionPoolFactory : object {
    private IConnectionFactory _connectionFactory;
    private ClusterOptions _clusterOptions;
    private IConnectionPoolScaleControllerFactory _scaleControllerFactory;
    private IRedactor _redactor;
    private ILogger`1<ChannelConnectionPool> _channelPoolLogger;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`3<ILogger, string, Exception> __LogUsingConnectionPoolCallback;
    public ChannelConnectionPoolFactory(IConnectionFactory connectionFactory, ClusterOptions clusterOptions, IConnectionPoolScaleControllerFactory scaleControllerFactory, IRedactor redactor, ILogger`1<ChannelConnectionPool> channelPoolLogger);
    private static ChannelConnectionPoolFactory();
    public sealed virtual IConnectionPool Create(ClusterNode clusterNode);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogUsingConnectionPool(string type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Connections.Channels.ChannelConnectionProcessor : object {
    private static TimeSpan CloseTimeout;
    private ChannelConnectionPool _connectionPool;
    private ChannelReader`1<ChannelQueueItem> _channelReader;
    private ILogger`1<ChannelConnectionPool> _logger;
    private TaskCompletionSource`1<bool> _completion;
    [NullableAttribute("2")]
private CancellationTokenSource _cts;
    [CompilerGeneratedAttribute]
private IConnection <Connection>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`3<ILogger, ulong, Exception> __LogConnectionNotRemovedCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`4<ILogger, ulong, bool, Exception> __LogDoneProcessingOperationsCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`5<ILogger, string, UInt32, ulong, Exception> __LogSendOperationsCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`3<ILogger, ulong, Exception> __LogOperationsAvailableCallback;
    public IConnection Connection { get; }
    public Task Completion { get; }
    public bool IsComplete { get; }
    public ChannelConnectionProcessor(IConnection connection, ChannelConnectionPool connectionPool, ChannelReader`1<ChannelQueueItem> channelReader, ILogger`1<ChannelConnectionPool> logger);
    private static ChannelConnectionProcessor();
    [CompilerGeneratedAttribute]
public IConnection get_Connection();
    public Task get_Completion();
    public bool get_IsComplete();
    public ChannelConnectionProcessor Start();
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.Channels.ChannelConnectionProcessor/<Process>d__15")]
internal Task Process();
    public Task CompleteAsync();
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogConnectionNotRemoved(ulong cid);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogDoneProcessingOperations(ulong cid, bool isDead);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogSendOperations(string status, UInt32 opaque, ulong cid);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogOperationsAvailable(ulong cid);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Couchbase.Core.IO.Connections.Channels.ChannelQueueItem : ValueType {
    [CompilerGeneratedAttribute]
private IOperation <Operation>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <CancellationToken>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ExecutionContext <CapturedContext>k__BackingField;
    public IOperation Operation { get; }
    public CancellationToken CancellationToken { get; }
    [NullableAttribute("2")]
public ExecutionContext CapturedContext { get; }
    public ChannelQueueItem(IOperation operation, CancellationToken cancellationToken, bool captureContext);
    [CompilerGeneratedAttribute]
public IOperation get_Operation();
    [CompilerGeneratedAttribute]
public CancellationToken get_CancellationToken();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ExecutionContext get_CapturedContext();
    public Task SendAsync(IConnection connection);
    [NullableContextAttribute("2")]
private static void SendCallback(object state);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Connections.ConnectionFactory : object {
    private ClusterOptions _clusterOptions;
    private IIpEndPointService _ipEndPointService;
    private ILogger`1<MultiplexingConnection> _multiplexLogger;
    private ILogger`1<SslConnection> _sslLogger;
    private IRedactor _redactor;
    public ConnectionFactory(ClusterOptions clusterOptions, IIpEndPointService ipEndPointService, ILogger`1<MultiplexingConnection> multiplexLogger, ILogger`1<SslConnection> sslLogger, IRedactor redactor);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.ConnectionFactory/<CreateAndConnectAsync>d__6")]
public sealed virtual Task`1<IConnection> CreateAndConnectAsync(HostEndpointWithPort hostEndpoint, CancellationToken cancellationToken);
}
internal static class Couchbase.Core.IO.Connections.ConnectionIdProvider : object {
    [NullableAttribute("1")]
private static Random Random;
    private static long _connectionId;
    private static ConnectionIdProvider();
    public static ulong GetNextId();
    public static ulong GetRandomLong();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Couchbase.Core.IO.Connections.ConnectionPoolBase : object {
    private static ConcurrentBag`1<WeakReference`1<ConnectionPoolBase>> _connectionPools;
    private IConnectionInitializer _connectionInitializer;
    private IConnectionFactory _connectionFactory;
    private ILogger`1<IConnectionPool> _logger;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <BucketName>k__BackingField;
    public HostEndpointWithPort EndPoint { get; }
    public int Size { get; }
    public int MinimumSize { get; public set; }
    public int MaximumSize { get; public set; }
    public int PendingSends { get; }
    [NullableAttribute("2")]
protected string BucketName { get; protected set; }
    protected ConnectionPoolBase(IConnectionInitializer connectionInitializer, IConnectionFactory connectionFactory, ILogger`1<IConnectionPool> logger);
    private static ConnectionPoolBase();
    protected void TrackConnectionPool(ConnectionPoolBase connectionPool);
    public static int GetSendQueueLength();
    public sealed virtual HostEndpointWithPort get_EndPoint();
    public abstract virtual int get_Size();
    public abstract virtual int get_MinimumSize();
    public abstract virtual void set_MinimumSize(int value);
    public abstract virtual int get_MaximumSize();
    public abstract virtual void set_MaximumSize(int value);
    public abstract virtual int get_PendingSends();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected string get_BucketName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected void set_BucketName(string value);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.ConnectionPoolBase/<CreateConnectionAsync>d__23")]
protected Task`1<IConnection> CreateConnectionAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.ConnectionPoolBase/<SelectBucketAsync>d__24")]
public virtual Task SelectBucketAsync(string name, CancellationToken cancellationToken);
    public virtual ValueTask`1<IAsyncDisposable> FreezePoolAsync(CancellationToken cancellationToken);
    public abstract virtual Task InitializeAsync(CancellationToken cancellationToken);
    public abstract virtual Task SendAsync(IOperation operation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.ConnectionPoolBase/<TrySendImmediatelyAsync>d__28")]
public virtual Task`1<bool> TrySendImmediatelyAsync(IOperation op, CancellationToken cancellationToken);
    public abstract virtual IEnumerable`1<IConnection> GetConnections();
    public abstract virtual Task ScaleAsync(int delta);
    public abstract virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Connections.ConnectionPoolFactory : object {
    private IConnectionFactory _connectionFactory;
    private ClusterOptions _clusterOptions;
    private IConnectionPoolScaleControllerFactory _scaleControllerFactory;
    private IRedactor _redactor;
    private ILogger`1<DataFlowConnectionPool> _dataFlowLogger;
    public ConnectionPoolFactory(IConnectionFactory connectionFactory, ClusterOptions clusterOptions, IConnectionPoolScaleControllerFactory scaleControllerFactory, IRedactor redactor, ILogger`1<DataFlowConnectionPool> dataFlowLogger);
    public sealed virtual IConnectionPool Create(ClusterNode clusterNode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Connections.ConnectionPoolScaleControllerFactory : object {
    private ClusterOptions _clusterOptions;
    private IRedactor _redactor;
    private ILogger`1<DefaultConnectionPoolScaleController> _logger;
    public ConnectionPoolScaleControllerFactory(ClusterOptions clusterOptions, IRedactor redactor, ILogger`1<DefaultConnectionPoolScaleController> logger);
    public sealed virtual IConnectionPoolScaleController Create();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Connections.DataFlow.DataFlowConnectionPool : ConnectionPoolBase {
    private IConnectionPoolScaleController _scaleController;
    private IRedactor _redactor;
    private ILogger`1<DataFlowConnectionPool> _logger;
    private UInt32 _kvSendQueueCapacity;
    private CancellationTokenSource _cts;
    private SemaphoreSlim _lock;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<ValueTuple`2<IConnection, ActionBlock`1<QueueItem>>> _connections;
    private BufferBlock`1<QueueItem> _sendQueue;
    private bool _initialized;
    [CompilerGeneratedAttribute]
private int <MinimumSize>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaximumSize>k__BackingField;
    public int Size { get; }
    public int MinimumSize { get; public set; }
    public int MaximumSize { get; public set; }
    public int PendingSends { get; }
    public DataFlowConnectionPool(IConnectionInitializer connectionInitializer, IConnectionFactory connectionFactory, IConnectionPoolScaleController scaleController, IRedactor redactor, ILogger`1<DataFlowConnectionPool> logger, UInt32 kvSendQueueCapacity);
    public sealed virtual int get_Size();
    [CompilerGeneratedAttribute]
public sealed virtual int get_MinimumSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinimumSize(int value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_MaximumSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaximumSize(int value);
    public sealed virtual int get_PendingSends();
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.DataFlow.DataFlowConnectionPool/<InitializeAsync>d__22")]
public virtual Task InitializeAsync(CancellationToken cancellationToken);
    public virtual Task SendAsync(IOperation operation, CancellationToken cancellationToken);
    public virtual IEnumerable`1<IConnection> GetConnections();
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.DataFlow.DataFlowConnectionPool/<ScaleAsync>d__25")]
public virtual Task ScaleAsync(int delta);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.DataFlow.DataFlowConnectionPool/<FreezePoolAsync>d__26")]
public virtual ValueTask`1<IAsyncDisposable> FreezePoolAsync(CancellationToken cancellationToken);
    private void EnsureNotDisposed();
    public virtual void Dispose();
    protected internal void CompleteSendQueue();
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.DataFlow.DataFlowConnectionPool/<AddConnectionsAsync>d__30")]
private Task AddConnectionsAsync(int count, CancellationToken cancellationToken);
    private Func`2<QueueItem, Task> BuildHandler(IConnection connection);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.DataFlow.DataFlowConnectionPool/<CleanupDeadConnectionsAsync>d__32")]
private Task CleanupDeadConnectionsAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Connections.DefaultConnectionPoolScaleController : object {
    private IRedactor _redactor;
    private ILogger`1<DefaultConnectionPoolScaleController> _logger;
    private CancellationTokenSource _cts;
    [NullableAttribute("2")]
private IConnectionPool _connectionPool;
    private bool _disposed;
    [CompilerGeneratedAttribute]
private TimeSpan <PollInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <IdleConnectionTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private int <BackPressureThreshold>k__BackingField;
    public TimeSpan PollInterval { get; public set; }
    public TimeSpan IdleConnectionTimeout { get; public set; }
    public int BackPressureThreshold { get; public set; }
    public DefaultConnectionPoolScaleController(IRedactor redactor, ILogger`1<DefaultConnectionPoolScaleController> logger);
    [CompilerGeneratedAttribute]
public TimeSpan get_PollInterval();
    [CompilerGeneratedAttribute]
public void set_PollInterval(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_IdleConnectionTimeout();
    [CompilerGeneratedAttribute]
public void set_IdleConnectionTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public int get_BackPressureThreshold();
    [CompilerGeneratedAttribute]
public void set_BackPressureThreshold(int value);
    public sealed virtual void Start(IConnectionPool connectionPool);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.DefaultConnectionPoolScaleController/<MonitorAsync>d__19")]
protected virtual Task MonitorAsync();
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.DefaultConnectionPoolScaleController/<RunScalingLogic>d__20")]
protected Task RunScalingLogic(IConnectionPool connectionPool);
    public sealed virtual void Dispose();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <RunScalingLogic>b__20_0(IConnection p);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Core.IO.Connections.IConnection {
    public string ContextId { get; }
    public ulong ConnectionId { get; }
    public bool IsAuthenticated { get; public set; }
    public bool IsSecure { get; }
    public bool IsConnected { get; }
    public EndPoint EndPoint { get; }
    public EndPoint LocalEndPoint { get; }
    public EndpointState EndpointState { get; public set; }
    public bool IsDead { get; }
    public TimeSpan IdleTime { get; }
    public ServerFeatureSet ServerFeatures { get; public set; }
    public string RemoteHost { get; }
    public string LocalHost { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<SlicedMemoryOwner`1<byte>> OnClusterMapChangeNotification { get; public set; }
    public abstract virtual string get_ContextId();
    public abstract virtual ulong get_ConnectionId();
    public abstract virtual bool get_IsAuthenticated();
    public abstract virtual void set_IsAuthenticated(bool value);
    public abstract virtual bool get_IsSecure();
    public abstract virtual bool get_IsConnected();
    public abstract virtual EndPoint get_EndPoint();
    public abstract virtual EndPoint get_LocalEndPoint();
    public abstract virtual EndpointState get_EndpointState();
    public abstract virtual void set_EndpointState(EndpointState value);
    public abstract virtual bool get_IsDead();
    public abstract virtual TimeSpan get_IdleTime();
    public abstract virtual ServerFeatureSet get_ServerFeatures();
    public abstract virtual void set_ServerFeatures(ServerFeatureSet value);
    [NullableContextAttribute("0")]
public abstract virtual ValueTask SendAsync(ReadOnlyMemory`1<byte> buffer, IOperation operation, CancellationToken cancellationToken);
    public abstract virtual ValueTask CloseAsync(TimeSpan timeout);
    public abstract virtual void AddTags(IRequestSpan span);
    public abstract virtual string get_RemoteHost();
    public abstract virtual string get_LocalHost();
    public abstract virtual Action`1<SlicedMemoryOwner`1<byte>> get_OnClusterMapChangeNotification();
    public abstract virtual void set_OnClusterMapChangeNotification(Action`1<SlicedMemoryOwner`1<byte>> value);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Core.IO.Connections.IConnectionFactory {
    public abstract virtual Task`1<IConnection> CreateAndConnectAsync(HostEndpointWithPort hostEndpoint, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Core.IO.Connections.IConnectionInitializer {
    public HostEndpointWithPort EndPoint { get; }
    public abstract virtual HostEndpointWithPort get_EndPoint();
    public abstract virtual Task InitializeConnectionAsync(IConnection connection, CancellationToken cancellationToken);
    public abstract virtual Task SelectBucketAsync(IConnection connection, string name, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Core.IO.Connections.IConnectionPool {
    public HostEndpointWithPort EndPoint { get; }
    public int Size { get; }
    public int MinimumSize { get; }
    public int MaximumSize { get; }
    public int PendingSends { get; }
    public abstract virtual HostEndpointWithPort get_EndPoint();
    public abstract virtual int get_Size();
    public abstract virtual int get_MinimumSize();
    public abstract virtual int get_MaximumSize();
    public abstract virtual int get_PendingSends();
    public abstract virtual Task InitializeAsync(CancellationToken cancellationToken);
    public abstract virtual Task SendAsync(IOperation op, CancellationToken cancellationToken);
    public abstract virtual Task`1<bool> TrySendImmediatelyAsync(IOperation op, CancellationToken cancellationToken);
    public abstract virtual ValueTask`1<IAsyncDisposable> FreezePoolAsync(CancellationToken cancellationToken);
    public abstract virtual Task SelectBucketAsync(string name, CancellationToken cancellationToken);
    public abstract virtual IEnumerable`1<IConnection> GetConnections();
    public abstract virtual Task ScaleAsync(int delta);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Core.IO.Connections.IConnectionPoolFactory {
    public abstract virtual IConnectionPool Create(ClusterNode clusterNode);
}
internal interface Couchbase.Core.IO.Connections.IConnectionPoolScaleController {
    [NullableContextAttribute("1")]
public abstract virtual void Start(IConnectionPool connectionPool);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Core.IO.Connections.IConnectionPoolScaleControllerFactory {
    public abstract virtual IConnectionPoolScaleController Create();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Connections.InFlightOperationSet : object {
    private ConcurrentDictionary`2<UInt32, AsyncStateBase> _statesInFlight;
    private SemaphoreSlim _semaphore;
    [NullableAttribute("2")]
private CancellationTokenSource modreq(System.Runtime.CompilerServices.IsVolatile) _cts;
    [CompilerGeneratedAttribute]
private int <MaximumOperations>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <CleanupInterval>k__BackingField;
    public int Count { get; }
    public int MaximumOperations { get; }
    public TimeSpan Timeout { get; }
    public TimeSpan CleanupInterval { get; }
    public InFlightOperationSet(int maximumOperations, TimeSpan timeout, Nullable`1<TimeSpan> cleanupInterval);
    public int get_Count();
    [CompilerGeneratedAttribute]
public int get_MaximumOperations();
    [CompilerGeneratedAttribute]
public TimeSpan get_Timeout();
    [CompilerGeneratedAttribute]
public TimeSpan get_CleanupInterval();
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.InFlightOperationSet/<AddAsync>d__15")]
public Task AddAsync(AsyncStateBase state, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public bool TryRemove(UInt32 opaque, AsyncStateBase& state);
    [NullableContextAttribute("2")]
public bool TryGet(UInt32 opaque, AsyncStateBase& state);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.InFlightOperationSet/<WaitForAllOperationsAsync>d__18")]
public ValueTask WaitForAllOperationsAsync(TimeSpan timeout);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.InFlightOperationSet/<CleanupLoop>d__19")]
private Task CleanupLoop();
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Connections.MultiplexingConnection : object {
    private static ConcurrentBag`1<WeakReference`1<MultiplexingConnection>> _connections;
    private static UInt32 MaxDocSize;
    private Stream _stream;
    private ILogger`1<MultiplexingConnection> _logger;
    private InFlightOperationSet _statesInFlight;
    private LightweightStopwatch _stopwatch;
    private int _disposed;
    private string _remoteHostString;
    private string _localHostString;
    private string _remotePortString;
    private string _localPortString;
    private SemaphoreSlim _writeMutex;
    [CompilerGeneratedAttribute]
private string <ContextId>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <ConnectionId>k__BackingField;
    [CompilerGeneratedAttribute]
private EndPoint <EndPoint>k__BackingField;
    [CompilerGeneratedAttribute]
private EndPoint <LocalEndPoint>k__BackingField;
    [CompilerGeneratedAttribute]
private EndpointState <EndpointState>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAuthenticated>k__BackingField;
    [CompilerGeneratedAttribute]
private ServerFeatureSet <ServerFeatures>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`1<SlicedMemoryOwner`1<byte>> <OnClusterMapChangeNotification>k__BackingField;
    public string ContextId { get; }
    public ulong ConnectionId { get; }
    public bool IsConnected { get; }
    public EndPoint EndPoint { get; }
    public EndPoint LocalEndPoint { get; }
    public EndpointState EndpointState { get; public set; }
    public bool IsAuthenticated { get; public set; }
    public bool IsSecure { get; }
    public bool IsDead { get; }
    public ServerFeatureSet ServerFeatures { get; public set; }
    public TimeSpan IdleTime { get; }
    public string RemoteHost { get; }
    public string LocalHost { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<SlicedMemoryOwner`1<byte>> OnClusterMapChangeNotification { get; public set; }
    public MultiplexingConnection(Socket socket, int maximumInFlightOperations, ILogger`1<MultiplexingConnection> logger);
    public MultiplexingConnection(Stream stream, int maximumInFlightOperations, EndPoint localEndPoint, EndPoint remoteEndPoint, ILogger`1<MultiplexingConnection> logger);
    private static MultiplexingConnection();
    public static int GetConnectionCount();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ContextId();
    [CompilerGeneratedAttribute]
public sealed virtual ulong get_ConnectionId();
    public sealed virtual bool get_IsConnected();
    [CompilerGeneratedAttribute]
public sealed virtual EndPoint get_EndPoint();
    [CompilerGeneratedAttribute]
public sealed virtual EndPoint get_LocalEndPoint();
    [CompilerGeneratedAttribute]
public sealed virtual EndpointState get_EndpointState();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EndpointState(EndpointState value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsAuthenticated();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsAuthenticated(bool value);
    public sealed virtual bool get_IsSecure();
    public sealed virtual bool get_IsDead();
    [CompilerGeneratedAttribute]
public sealed virtual ServerFeatureSet get_ServerFeatures();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ServerFeatures(ServerFeatureSet value);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.MultiplexingConnection/<SendAsync>d__45")]
public sealed virtual ValueTask SendAsync(ReadOnlyMemory`1<byte> request, IOperation operation, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.MultiplexingConnection/<ReceiveResponsesAsync>d__46")]
internal Task ReceiveResponsesAsync();
    [NullableContextAttribute("0")]
internal bool TryReadOperation(ReadOnlySequence`1& buffer, SlicedMemoryOwner`1& operationResponse);
    [NullableContextAttribute("2")]
private void HandleDisconnect(Exception exception);
    public sealed virtual TimeSpan get_IdleTime();
    public sealed virtual string get_RemoteHost();
    public sealed virtual string get_LocalHost();
    [CompilerGeneratedAttribute]
public sealed virtual Action`1<SlicedMemoryOwner`1<byte>> get_OnClusterMapChangeNotification();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OnClusterMapChangeNotification(Action`1<SlicedMemoryOwner`1<byte>> value);
    private void UpdateLastActivity();
    public void Close();
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.MultiplexingConnection/<CloseAsync>d__61")]
public sealed virtual ValueTask CloseAsync(TimeSpan timeout);
    public sealed virtual void Dispose();
    public sealed virtual void AddTags(IRequestSpan span);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Connections.SingleConnectionPool : ConnectionPoolBase {
    [NullableAttribute("2")]
private IConnection _connection;
    public int Size { get; }
    public int MinimumSize { get; public set; }
    public int MaximumSize { get; public set; }
    public int PendingSends { get; }
    public SingleConnectionPool(IConnectionInitializer connectionInitializer, IConnectionFactory connectionFactory, ILogger`1<IConnectionPool> logger);
    public sealed virtual int get_Size();
    public sealed virtual int get_MinimumSize();
    public sealed virtual void set_MinimumSize(int value);
    public sealed virtual int get_MaximumSize();
    public sealed virtual void set_MaximumSize(int value);
    public sealed virtual int get_PendingSends();
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.SingleConnectionPool/<InitializeAsync>d__12")]
public virtual Task InitializeAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.SingleConnectionPool/<SendAsync>d__13")]
public virtual Task SendAsync(IOperation operation, CancellationToken cancellationToken);
    [IteratorStateMachineAttribute("Couchbase.Core.IO.Connections.SingleConnectionPool/<GetConnections>d__14")]
public virtual IEnumerable`1<IConnection> GetConnections();
    public virtual Task ScaleAsync(int delta);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Connections.SingleConnectionPool/<CheckConnectionAsync>d__16")]
private ValueTask CheckConnectionAsync();
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Connections.SslConnection : object {
    private ILogger`1<SslConnection> _logger;
    private SslStream _sslStream;
    private MultiplexingConnection _multiplexingConnection;
    public string ContextId { get; }
    public ulong ConnectionId { get; }
    public bool IsConnected { get; }
    public EndPoint EndPoint { get; }
    public EndPoint LocalEndPoint { get; }
    public EndpointState EndpointState { get; public set; }
    public bool IsAuthenticated { get; public set; }
    public bool IsSecure { get; }
    public bool IsDead { get; }
    public TimeSpan IdleTime { get; }
    public ServerFeatureSet ServerFeatures { get; public set; }
    public string RemoteHost { get; }
    public string LocalHost { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<SlicedMemoryOwner`1<byte>> OnClusterMapChangeNotification { get; public set; }
    public SslConnection(SslStream stream, int maximumInFlightOperations, EndPoint localEndPoint, EndPoint remoteEndPoint, ILogger`1<SslConnection> logger, ILogger`1<MultiplexingConnection> multiplexingLogger);
    public sealed virtual string get_ContextId();
    public sealed virtual ulong get_ConnectionId();
    public sealed virtual bool get_IsConnected();
    public sealed virtual EndPoint get_EndPoint();
    public sealed virtual EndPoint get_LocalEndPoint();
    public sealed virtual EndpointState get_EndpointState();
    public sealed virtual void set_EndpointState(EndpointState value);
    public sealed virtual bool get_IsAuthenticated();
    public sealed virtual void set_IsAuthenticated(bool value);
    public sealed virtual bool get_IsSecure();
    public sealed virtual bool get_IsDead();
    public sealed virtual TimeSpan get_IdleTime();
    public sealed virtual ServerFeatureSet get_ServerFeatures();
    public sealed virtual void set_ServerFeatures(ServerFeatureSet value);
    public sealed virtual string get_RemoteHost();
    public sealed virtual string get_LocalHost();
    public sealed virtual Action`1<SlicedMemoryOwner`1<byte>> get_OnClusterMapChangeNotification();
    public sealed virtual void set_OnClusterMapChangeNotification(Action`1<SlicedMemoryOwner`1<byte>> value);
    [NullableContextAttribute("0")]
public sealed virtual ValueTask SendAsync(ReadOnlyMemory`1<byte> request, IOperation operation, CancellationToken cancellationToken);
    public sealed virtual void Dispose();
    public sealed virtual ValueTask CloseAsync(TimeSpan timeout);
    public sealed virtual void AddTags(IRequestSpan span);
}
public static class Couchbase.Core.IO.Converters.ByteConverter : object {
    private static T Read(ReadOnlySpan`1<byte> src, bool useNbo);
    public static bool ToBoolean(ReadOnlySpan`1<byte> buffer, bool useNbo);
    public static float ToSingle(ReadOnlySpan`1<byte> buffer, bool useNbo);
    public static DateTime ToDateTime(ReadOnlySpan`1<byte> buffer, bool useNbo);
    public static double ToDouble(ReadOnlySpan`1<byte> buffer, bool useNbo);
    public static short ToInt16(ReadOnlySpan`1<byte> buffer, bool useNbo);
    public static ushort ToUInt16(ReadOnlySpan`1<byte> buffer, bool useNbo);
    public static int ToInt32(ReadOnlySpan`1<byte> buffer, bool useNbo);
    public static UInt32 ToUInt32(ReadOnlySpan`1<byte> buffer, bool useNbo);
    public static long ToInt64(ReadOnlySpan`1<byte> buffer, bool useNbo);
    public static ulong ToUInt64(ReadOnlySpan`1<byte> buffer, bool useNbo);
    public static string ToString(ReadOnlySpan`1<byte> buffer);
    public static void FromInt16(short value, Span`1<byte> buffer, bool useNbo);
    public static void FromUInt16(ushort value, Span`1<byte> buffer, bool useNbo);
    public static void FromInt32(int value, Span`1<byte> buffer, bool useNbo);
    public static void FromUInt32(UInt32 value, Span`1<byte> buffer, bool useNbo);
    public static void FromInt64(long value, Span`1<byte> buffer, bool useNbo);
    public static void FromUInt64(ulong value, Span`1<byte> buffer, bool useNbo);
    public static int GetStringByteCount(string value);
    public static int FromString(string value, Span`1<byte> buffer);
    public static short ToInt16(ReadOnlySpan`1<byte> buffer);
    public static ushort ToUInt16(ReadOnlySpan`1<byte> buffer);
    public static int ToInt32(ReadOnlySpan`1<byte> buffer);
    public static UInt32 ToUInt32(ReadOnlySpan`1<byte> buffer);
    public static long ToInt64(ReadOnlySpan`1<byte> buffer);
    public static ulong ToUInt64(ReadOnlySpan`1<byte> buffer);
    public static void FromInt16(short value, Span`1<byte> buffer);
    public static void FromUInt16(ushort value, Span`1<byte> buffer);
    public static void FromInt32(int value, Span`1<byte> buffer);
    public static void FromUInt32(UInt32 value, Span`1<byte> buffer);
    public static void FromInt64(long value, Span`1<byte> buffer);
    public static void FromUInt64(ulong value, Span`1<byte> buffer);
}
internal static class Couchbase.Core.IO.HeaderOffsets : object {
    public static byte MagicValue;
    public static int Magic;
    public static int Opcode;
    public static int KeyLength;
    public static int ExtrasLength;
    public static int Datatype;
    public static int Status;
    public static int VBucket;
    public static int Body;
    public static int BodyLength;
    public static int Opaque;
    public static int Cas;
    public static int FramingExtras;
    public static int AltKeyLength;
    public static int HeaderLength;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.HTTP.AuthenticatingHttpMessageHandler : DelegatingHandler {
    private static string BasicScheme;
    [NullableAttribute("2")]
private string _headerValue;
    public AuthenticatingHttpMessageHandler(HttpMessageHandler innerHandler);
    public AuthenticatingHttpMessageHandler(HttpMessageHandler innerHandler, ClusterContext context);
    public AuthenticatingHttpMessageHandler(HttpMessageHandler innerHandler, string username, string password);
    protected virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.HTTP.CouchbaseHttpClientFactory : object {
    private ClusterContext _context;
    private ILogger`1<CouchbaseHttpClientFactory> _logger;
    private IRedactor _redactor;
    private HttpMessageHandler _sharedHandler;
    [CompilerGeneratedAttribute]
private HttpCompletionOption <DefaultCompletionOption>k__BackingField;
    private static string ClientAuthenticationOid;
    public HttpCompletionOption DefaultCompletionOption { get; }
    public CouchbaseHttpClientFactory(ClusterContext context, ILogger`1<CouchbaseHttpClientFactory> logger, IRedactor redactor);
    [CompilerGeneratedAttribute]
public sealed virtual HttpCompletionOption get_DefaultCompletionOption();
    public sealed virtual HttpClient Create();
    private HttpMessageHandler CreateClientHandler();
    private static X509Certificate2 GetClientCertificate(X509Certificate2Collection candidateCerts);
    private static bool IsValidClientCertificate(X509Certificate2 cert);
    private static bool IsValidForClientAuthentication(X509EnhancedKeyUsageExtension enhancedKeyUsageExtension);
    private static bool IsValidForDigitalSignatureUsage(X509KeyUsageExtension keyUsageExtenstion);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Couchbase.Core.IO.HTTP.HttpServiceBase : object {
    private static string ConnectionIdHeaderName;
    [CompilerGeneratedAttribute]
private ICouchbaseHttpClientFactory <HttpClientFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastActivity>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <ConnectionId>k__BackingField;
    protected ICouchbaseHttpClientFactory HttpClientFactory { get; protected set; }
    public Nullable`1<DateTime> LastActivity { get; private set; }
    public ulong ConnectionId { get; }
    protected HttpServiceBase(ICouchbaseHttpClientFactory httpClientFactory);
    [CompilerGeneratedAttribute]
protected ICouchbaseHttpClientFactory get_HttpClientFactory();
    [CompilerGeneratedAttribute]
protected void set_HttpClientFactory(ICouchbaseHttpClientFactory value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_LastActivity();
    [CompilerGeneratedAttribute]
private void set_LastActivity(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public ulong get_ConnectionId();
    protected void UpdateLastActivity();
    protected HttpClient CreateHttpClient(Nullable`1<TimeSpan> timeout);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Core.IO.HTTP.ICouchbaseHttpClientFactory {
    public HttpCompletionOption DefaultCompletionOption { get; }
    public abstract virtual HttpClient Create();
    public abstract virtual HttpCompletionOption get_DefaultCompletionOption();
}
public static class Couchbase.Core.IO.HTTP.MediaType : object {
    public static string Form;
    public static string Json;
}
[ExtensionAttribute]
public static class Couchbase.Core.IO.HTTP.UriExtensions : object {
    [ExtensionAttribute]
public static Uri SetServicePointOptions(Uri uri, ClusterOptions options, ILogger logger);
}
internal class Couchbase.Core.IO.Operations.Add`1 : MutationOperationBase`1<T> {
    public OpCode OpCode { get; }
    protected bool SupportsRequestCompression { get; }
    internal Add`1(string bucketName, string key);
    public virtual OpCode get_OpCode();
    protected virtual bool get_SupportsRequestCompression();
}
internal class Couchbase.Core.IO.Operations.Append`1 : MutationOperationBase`1<T> {
    public OpCode OpCode { get; }
    protected bool SupportsRequestCompression { get; }
    internal Append`1(string bucketName, string key);
    protected virtual void BeginSend();
    protected virtual void WriteExtras(OperationBuilder builder);
    public virtual OpCode get_OpCode();
    protected virtual bool get_SupportsRequestCompression();
}
internal class Couchbase.Core.IO.Operations.Authentication.SaslList : OperationBase`1<string> {
    public OpCode OpCode { get; }
    protected virtual void WriteExtras(OperationBuilder builder);
    protected virtual void ReadExtras(ReadOnlySpan`1<byte> buffer);
    public virtual OpCode get_OpCode();
    protected virtual void BeginSend();
}
internal class Couchbase.Core.IO.Operations.Authentication.SaslStart : OperationBase`1<string> {
    public OpCode OpCode { get; }
    public virtual OpCode get_OpCode();
    protected virtual void WriteExtras(OperationBuilder builder);
    protected virtual void ReadExtras(ReadOnlySpan`1<byte> buffer);
    protected virtual void BeginSend();
}
internal class Couchbase.Core.IO.Operations.Authentication.SaslStep : SaslStart {
    public OpCode OpCode { get; }
    public virtual OpCode get_OpCode();
}
internal class Couchbase.Core.IO.Operations.Authentication.SelectBucket : OperationBase {
    public OpCode OpCode { get; }
    public virtual OpCode get_OpCode();
}
[ExtensionAttribute]
internal static class Couchbase.Core.IO.Operations.BufferExtensions : object {
    [ExtensionAttribute]
public static OpCode ToOpCode(byte value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Couchbase.Core.IO.Operations.CancellationTokenPair : ValueType {
    private CancellationTokenPairSource _source;
    public CancellationToken ExternalToken { get; }
    public CancellationToken InternalToken { get; }
    public CancellationToken GlobalToken { get; }
    public bool CanBeCanceled { get; }
    public bool IsCancellationRequested { get; }
    public bool IsExternalCancellation { get; }
    public bool IsInternalCancellation { get; }
    public CancellationToken CanceledToken { get; }
    [NullableContextAttribute("1")]
public CancellationTokenPair(CancellationTokenPairSource source);
    public CancellationToken get_ExternalToken();
    public CancellationToken get_InternalToken();
    public CancellationToken get_GlobalToken();
    public bool get_CanBeCanceled();
    public bool get_IsCancellationRequested();
    public bool get_IsExternalCancellation();
    public bool get_IsInternalCancellation();
    public CancellationToken get_CanceledToken();
    public void ThrowIfCancellationRequested();
    [NullableContextAttribute("1")]
public CancellationTokenRegistration Register(Action callback);
    public CancellationTokenRegistration Register(Action`1<object> callback, object state);
    public CancellationTokenRegistration UnsafeRegister(Action`1<object> callback, object state);
    public static CancellationToken op_Implicit(CancellationTokenPair cancellationTokenPair);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Operations.CancellationTokenPairSource : object {
    [NullableAttribute("2")]
private CancellationTokenSource _globalCts;
    [NullableAttribute("2")]
private CancellationTokenSource _timeoutCts;
    [CompilerGeneratedAttribute]
private CancellationToken <ExternalToken>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <InternalToken>k__BackingField;
    public CancellationToken ExternalToken { get; }
    public CancellationToken InternalToken { get; }
    public CancellationToken GlobalToken { get; }
    public CancellationTokenPair TokenPair { get; }
    public bool CanBeCanceled { get; }
    public bool IsCancellationRequested { get; }
    public bool IsExternalCancellation { get; }
    public bool IsInternalCancellation { get; }
    public CancellationToken CanceledToken { get; }
    public CancellationTokenPairSource(CancellationToken externalToken, CancellationToken internalToken);
    [CompilerGeneratedAttribute]
public CancellationToken get_ExternalToken();
    [CompilerGeneratedAttribute]
public CancellationToken get_InternalToken();
    public CancellationToken get_GlobalToken();
    public CancellationTokenPair get_TokenPair();
    public bool get_CanBeCanceled();
    public bool get_IsCancellationRequested();
    public bool get_IsExternalCancellation();
    public bool get_IsInternalCancellation();
    public CancellationToken get_CanceledToken();
    public sealed virtual void Dispose();
    public void ThrowIfCancellationRequested();
    public CancellationTokenRegistration Register(Action callback);
    [NullableContextAttribute("2")]
public CancellationTokenRegistration Register(Action`1<object> callback, object state);
    [NullableContextAttribute("2")]
public CancellationTokenRegistration UnsafeRegister(Action`1<object> callback, object state);
    public static CancellationTokenPairSource FromExternalToken(CancellationToken externalToken);
    public static CancellationTokenPairSource FromInternalToken(CancellationToken internalToken);
    public static CancellationTokenPairSource FromTimeout(TimeSpan timeout, CancellationToken externalToken);
}
internal class Couchbase.Core.IO.Operations.Collections.GetCid : OperationBase`1<string> {
    public string CoerceKey { get; }
    public bool RequiresVBucketId { get; }
    public OpCode OpCode { get; }
    public string get_CoerceKey();
    public virtual bool get_RequiresVBucketId();
    public virtual OpCode get_OpCode();
    public virtual string GetValue();
    public Nullable`1<UInt32> GetValueAsUint();
    protected virtual void WriteExtras(OperationBuilder builder);
}
internal class Couchbase.Core.IO.Operations.Collections.GetManifest : OperationBase`1<Manifest> {
    public OpCode OpCode { get; }
    public virtual OpCode get_OpCode();
    protected virtual void BeginSend();
    protected virtual void WriteExtras(OperationBuilder builder);
    protected virtual void ReadExtras(ReadOnlySpan`1<byte> buffer);
}
internal class Couchbase.Core.IO.Operations.Collections.GetSid : OperationBase`1<Nullable`1<UInt32>> {
    public bool RequiresVBucketId { get; }
    public OpCode OpCode { get; }
    public virtual bool get_RequiresVBucketId();
    public virtual OpCode get_OpCode();
    public virtual Nullable`1<UInt32> GetValue();
    protected virtual void WriteExtras(OperationBuilder builder);
    protected virtual void WriteBody(OperationBuilder builder);
}
public enum Couchbase.Core.IO.Operations.Compression : Enum {
    public int value__;
    public static Compression None;
}
internal class Couchbase.Core.IO.Operations.Config : OperationBase`1<BucketConfig> {
    [CompilerGeneratedAttribute]
private HostEndpointWithPort <EndPoint>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ulong> <Epoch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ulong> <Revision>k__BackingField;
    internal HostEndpointWithPort EndPoint { get; internal set; }
    internal Nullable`1<ulong> Epoch { get; internal set; }
    internal Nullable`1<ulong> Revision { get; internal set; }
    public OpCode OpCode { get; }
    [CompilerGeneratedAttribute]
internal HostEndpointWithPort get_EndPoint();
    [CompilerGeneratedAttribute]
internal void set_EndPoint(HostEndpointWithPort value);
    [CompilerGeneratedAttribute]
internal Nullable`1<ulong> get_Epoch();
    [CompilerGeneratedAttribute]
internal void set_Epoch(Nullable`1<ulong> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<ulong> get_Revision();
    [CompilerGeneratedAttribute]
internal void set_Revision(Nullable`1<ulong> value);
    protected virtual void BeginSend();
    protected virtual void WriteExtras(OperationBuilder builder);
    protected virtual void ReadExtras(ReadOnlySpan`1<byte> buffer);
    public virtual OpCode get_OpCode();
    public virtual BucketConfig GetValue();
}
internal class Couchbase.Core.IO.Operations.Configuration.ClusterMapChangeNotification : OperationBase`1<BucketConfig> {
    [CompilerGeneratedAttribute]
private ulong <Revision>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Epoch>k__BackingField;
    public OpCode OpCode { get; }
    public bool HasExtras { get; }
    private ulong Revision { get; private set; }
    private ulong Epoch { get; private set; }
    public ConfigVersion GetConfigVersion { get; }
    public virtual OpCode get_OpCode();
    protected virtual void ReadExtras(ReadOnlySpan`1<byte> buffer);
    public virtual BucketConfig GetValue();
    public bool get_HasExtras();
    [CompilerGeneratedAttribute]
private ulong get_Revision();
    [CompilerGeneratedAttribute]
private void set_Revision(ulong value);
    [CompilerGeneratedAttribute]
private ulong get_Epoch();
    [CompilerGeneratedAttribute]
private void set_Epoch(ulong value);
    public ConfigVersion get_GetConfigVersion();
}
public enum Couchbase.Core.IO.Operations.DataFormat : Enum {
    public byte value__;
    public static DataFormat Reserved;
    public static DataFormat Private;
    public static DataFormat Json;
    public static DataFormat Binary;
    public static DataFormat String;
}
[FlagsAttribute]
public enum Couchbase.Core.IO.Operations.DataType : Enum {
    public byte value__;
    public static DataType None;
    public static DataType Json;
    public static DataType Snappy;
    public static DataType XAttr;
}
internal class Couchbase.Core.IO.Operations.Decrement : MutationOperationBase`1<ulong> {
    [CompilerGeneratedAttribute]
private ulong <Delta>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ulong> <Initial>k__BackingField;
    public ulong Delta { get; public set; }
    public Nullable`1<ulong> Initial { get; public set; }
    public OpCode OpCode { get; }
    internal Decrement(string bucketName, string key);
    [CompilerGeneratedAttribute]
public ulong get_Delta();
    [CompilerGeneratedAttribute]
public void set_Delta(ulong value);
    [CompilerGeneratedAttribute]
public Nullable`1<ulong> get_Initial();
    [CompilerGeneratedAttribute]
public void set_Initial(Nullable`1<ulong> value);
    public virtual OpCode get_OpCode();
    protected virtual void WriteExtras(OperationBuilder builder);
    protected virtual void WriteBody(OperationBuilder builder);
}
internal class Couchbase.Core.IO.Operations.Delete : MutationOperationBase {
    public OpCode OpCode { get; }
    public virtual OpCode get_OpCode();
    protected virtual void WriteExtras(OperationBuilder builder);
    protected virtual void WriteFramingExtras(OperationBuilder builder);
}
public enum Couchbase.Core.IO.Operations.Durability : Enum {
    public int value__;
    public static Durability Satisfied;
    public static Durability NotSatisfied;
    public static Durability Unspecified;
}
internal enum Couchbase.Core.IO.Operations.Errors.ErrorAttribute : Enum {
    public int value__;
    [DescriptionAttribute("item-only")]
public static ErrorAttribute ItemOnly;
    [DescriptionAttribute("invalid-input")]
public static ErrorAttribute InvalidInput;
    [DescriptionAttribute("fetch-config")]
public static ErrorAttribute FetchConfig;
    [DescriptionAttribute("conn-state-invalidated")]
public static ErrorAttribute ConnStateInvalid;
    [DescriptionAttribute("auth")]
public static ErrorAttribute Auth;
    [DescriptionAttribute("special-handling")]
public static ErrorAttribute SpecialHandling;
    [DescriptionAttribute("support")]
public static ErrorAttribute Support;
    [DescriptionAttribute("temp")]
public static ErrorAttribute Temp;
    [DescriptionAttribute("internal")]
public static ErrorAttribute Internal;
    [DescriptionAttribute("retry-now")]
public static ErrorAttribute RetryNow;
    [DescriptionAttribute("retry-later")]
public static ErrorAttribute RetryLater;
    [DescriptionAttribute("subdoc")]
public static ErrorAttribute SubDoc;
    [DescriptionAttribute("dcp")]
public static ErrorAttribute DCP;
}
public class Couchbase.Core.IO.Operations.Errors.ErrorCode : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Desc>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Attrs>k__BackingField;
    [CompilerGeneratedAttribute]
private RetrySpec <Retry>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("desc")]
public string Desc { get; public set; }
    [JsonPropertyNameAttribute("attrs")]
public IEnumerable`1<string> Attrs { get; public set; }
    [JsonPropertyNameAttribute("retry")]
public RetrySpec Retry { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Desc();
    [CompilerGeneratedAttribute]
public void set_Desc(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Attrs();
    [CompilerGeneratedAttribute]
public void set_Attrs(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public RetrySpec get_Retry();
    [CompilerGeneratedAttribute]
public void set_Retry(RetrySpec value);
    public virtual string ToString();
    public bool HasTimedOut(double duration);
    public int GetNextInterval(UInt32 attempts, int defaultTimeout);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Operations.Errors.ErrorMap : object {
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Revision>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<short, ErrorCode> <Errors>k__BackingField;
    public int Version { get; }
    public int Revision { get; }
    public Dictionary`2<short, ErrorCode> Errors { get; }
    public ErrorMap(ErrorMapDto source);
    public ErrorMap(int version, int revision, Dictionary`2<short, ErrorCode> errors);
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
public int get_Revision();
    [CompilerGeneratedAttribute]
public Dictionary`2<short, ErrorCode> get_Errors();
    [NullableContextAttribute("2")]
public bool TryGetGetErrorCode(short code, ErrorCode& errorCode);
}
internal class Couchbase.Core.IO.Operations.Errors.ErrorMapDto : object {
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Revision>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, ErrorCode> <Errors>k__BackingField;
    [JsonPropertyNameAttribute("version")]
public int Version { get; public set; }
    [JsonPropertyNameAttribute("revision")]
public int Revision { get; public set; }
    [JsonPropertyNameAttribute("errors")]
public Dictionary`2<string, ErrorCode> Errors { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(int value);
    [CompilerGeneratedAttribute]
public int get_Revision();
    [CompilerGeneratedAttribute]
public void set_Revision(int value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, ErrorCode> get_Errors();
    [CompilerGeneratedAttribute]
public void set_Errors(Dictionary`2<string, ErrorCode> value);
    public virtual string ToString();
}
public class Couchbase.Core.IO.Operations.Errors.ErrorMapRetryException : CouchbaseException {
    public ErrorMapRetryException(string message);
    public ErrorMapRetryException(string message, Exception innerException);
}
internal class Couchbase.Core.IO.Operations.Errors.GetErrorMap : OperationBase`1<ErrorMapDto> {
    private static int DefaultVersion;
    [CompilerGeneratedAttribute]
private ErrorMap <ErrorMap>k__BackingField;
    public ErrorMap ErrorMap { get; public set; }
    public OpCode OpCode { get; }
    [CompilerGeneratedAttribute]
public ErrorMap get_ErrorMap();
    [CompilerGeneratedAttribute]
public void set_ErrorMap(ErrorMap value);
    protected virtual void WriteKey(OperationBuilder builder);
    protected virtual void WriteExtras(OperationBuilder builder);
    protected virtual void WriteBody(OperationBuilder builder);
    protected virtual void ReadExtras(ReadOnlySpan`1<byte> buffer);
    public virtual OpCode get_OpCode();
}
public class Couchbase.Core.IO.Operations.Errors.RetrySpec : object {
    [CompilerGeneratedAttribute]
private RetryStrategy <Strategy>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Interval>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Ceiling>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <FirstRetryDelay>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <RetryTimeout>k__BackingField;
    [JsonPropertyNameAttribute("strategy")]
public RetryStrategy Strategy { get; public set; }
    [JsonPropertyNameAttribute("interval")]
public int Interval { get; public set; }
    [JsonPropertyNameAttribute("ceil")]
public Nullable`1<int> Ceiling { get; public set; }
    [JsonPropertyNameAttribute("after")]
public Nullable`1<int> FirstRetryDelay { get; public set; }
    [JsonPropertyNameAttribute("max-duration")]
public Nullable`1<int> RetryTimeout { get; public set; }
    [CompilerGeneratedAttribute]
public RetryStrategy get_Strategy();
    [CompilerGeneratedAttribute]
public void set_Strategy(RetryStrategy value);
    [CompilerGeneratedAttribute]
public int get_Interval();
    [CompilerGeneratedAttribute]
public void set_Interval(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Ceiling();
    [CompilerGeneratedAttribute]
public void set_Ceiling(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_FirstRetryDelay();
    [CompilerGeneratedAttribute]
public void set_FirstRetryDelay(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_RetryTimeout();
    [CompilerGeneratedAttribute]
public void set_RetryTimeout(Nullable`1<int> value);
    public int GetNextInterval(UInt32 attempts);
}
public enum Couchbase.Core.IO.Operations.Errors.RetryStrategy : Enum {
    public int value__;
    public static RetryStrategy None;
    public static RetryStrategy Constant;
    public static RetryStrategy Linear;
    public static RetryStrategy Exponential;
}
public class Couchbase.Core.IO.Operations.Flags : ValueType {
    [CompilerGeneratedAttribute]
private DataFormat <DataFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private Compression <Compression>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeCode <TypeCode>k__BackingField;
    public DataFormat DataFormat { get; public set; }
    public Compression Compression { get; public set; }
    public TypeCode TypeCode { get; public set; }
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public DataFormat get_DataFormat();
    [CompilerGeneratedAttribute]
public void set_DataFormat(DataFormat value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Compression get_Compression();
    [CompilerGeneratedAttribute]
public void set_Compression(Compression value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public TypeCode get_TypeCode();
    [CompilerGeneratedAttribute]
public void set_TypeCode(TypeCode value);
    internal static Flags Read(ReadOnlySpan`1<byte> buffer);
    [IsReadOnlyAttribute]
internal void Write(Span`1<byte> buffer);
    private static void ThrowArgumentException();
}
[IsReadOnlyAttribute]
internal class Couchbase.Core.IO.Operations.FramingExtraInfo : ValueType {
    [CompilerGeneratedAttribute]
private byte <Byte>k__BackingField;
    public byte Byte { get; }
    public byte Type { get; }
    public byte Length { get; }
    public FramingExtraInfo(RequestFramingExtraType type, byte length);
    [CompilerGeneratedAttribute]
public byte get_Byte();
    public byte get_Type();
    public byte get_Length();
}
internal class Couchbase.Core.IO.Operations.Get`1 : OperationBase`1<T> {
    public OpCode OpCode { get; }
    public virtual OpCode get_OpCode();
    protected virtual void WriteExtras(OperationBuilder builder);
    protected virtual void WriteBody(OperationBuilder builder);
    protected virtual void ReadExtras(ReadOnlySpan`1<byte> buffer);
}
internal class Couchbase.Core.IO.Operations.GetK`1 : Get`1<T> {
    public OpCode OpCode { get; }
    public virtual OpCode get_OpCode();
}
internal class Couchbase.Core.IO.Operations.GetL`1 : Get`1<T> {
    [CompilerGeneratedAttribute]
private UInt32 <Expiry>k__BackingField;
    public bool IsReadOnly { get; }
    public UInt32 Expiry { get; public set; }
    public OpCode OpCode { get; }
    public virtual bool get_IsReadOnly();
    protected virtual void WriteExtras(OperationBuilder builder);
    protected virtual void WriteBody(OperationBuilder builder);
    [CompilerGeneratedAttribute]
public UInt32 get_Expiry();
    [CompilerGeneratedAttribute]
public void set_Expiry(UInt32 value);
    public virtual OpCode get_OpCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Couchbase.Core.IO.Operations.GetMeta : OperationBase`1<MetaData> {
    public OpCode OpCode { get; }
    public virtual OpCode get_OpCode();
    protected virtual void WriteExtras(OperationBuilder builder);
    public virtual MetaData GetValue();
}
internal class Couchbase.Core.IO.Operations.GetQ`1 : Get`1<T> {
    public OpCode OpCode { get; }
    public virtual OpCode get_OpCode();
}
internal class Couchbase.Core.IO.Operations.GetT`1 : MutationOperationBase`1<T> {
    public OpCode OpCode { get; }
    internal GetT`1(string bucketName, string key);
    protected virtual void WriteExtras(OperationBuilder builder);
    protected virtual void WriteBody(OperationBuilder builder);
    protected virtual void ReadExtras(ReadOnlySpan`1<byte> buffer);
    public virtual OpCode get_OpCode();
}
internal class Couchbase.Core.IO.Operations.Hello : OperationBase`1<ServerFeatures[]> {
    public OpCode OpCode { get; }
    public virtual OpCode get_OpCode();
    protected virtual void WriteBody(OperationBuilder builder);
    protected virtual void WriteExtras(OperationBuilder builder);
    public virtual ServerFeatures[] GetValue();
    internal static string BuildHelloKey(ulong connectionId);
}
internal class Couchbase.Core.IO.Operations.Increment : MutationOperationBase`1<ulong> {
    [CompilerGeneratedAttribute]
private ulong <Delta>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ulong> <Initial>k__BackingField;
    public ulong Delta { get; public set; }
    public Nullable`1<ulong> Initial { get; public set; }
    public OpCode OpCode { get; }
    internal Increment(string bucketName, string key);
    [CompilerGeneratedAttribute]
public ulong get_Delta();
    [CompilerGeneratedAttribute]
public void set_Delta(ulong value);
    [CompilerGeneratedAttribute]
public Nullable`1<ulong> get_Initial();
    [CompilerGeneratedAttribute]
public void set_Initial(Nullable`1<ulong> value);
    public virtual OpCode get_OpCode();
    protected virtual void WriteExtras(OperationBuilder builder);
    protected virtual void WriteBody(OperationBuilder builder);
}
[NullableContextAttribute("2")]
internal interface Couchbase.Core.IO.Operations.IOperation {
    public bool PreferReturns { get; }
    public bool CanStream { get; }
    public bool PreserveTtl { get; }
    public OpCode OpCode { get; }
    public string BucketName { get; }
    public string SName { get; }
    public string CName { get; }
    public Nullable`1<UInt32> Cid { get; public set; }
    [NullableAttribute("1")]
public string Key { get; }
    public Byte[] EncodedKey { get; }
    public bool RequiresVBucketId { get; }
    public Nullable`1<short> VBucketId { get; public set; }
    public Nullable`1<short> ReplicaIdx { get; }
    public UInt32 Opaque { get; }
    public ulong Cas { get; }
    public OperationHeader Header { get; }
    [NullableAttribute("1")]
public IRequestSpan Span { get; }
    public bool HasDurability { get; }
    public bool IsReadOnly { get; }
    public bool IsSent { get; }
    public CancellationTokenPair TokenPair { get; public set; }
    [NullableAttribute("0")]
public ValueTask`1<ResponseStatus> Completed { get; }
    public Nullable`1<long> LastServerDuration { get; }
    public string LastDispatchedFrom { get; }
    public string LastDispatchedTo { get; }
    public bool IsCompleted { get; }
    public ErrorCode LastErrorCode { get; public set; }
    public Nullable`1<ConfigVersion> ConfigVersion { get; public set; }
    public abstract virtual bool get_PreferReturns();
    public abstract virtual bool get_CanStream();
    public abstract virtual bool get_PreserveTtl();
    public abstract virtual OpCode get_OpCode();
    public abstract virtual string get_BucketName();
    public abstract virtual string get_SName();
    public abstract virtual string get_CName();
    public abstract virtual Nullable`1<UInt32> get_Cid();
    public abstract virtual void set_Cid(Nullable`1<UInt32> value);
    [NullableContextAttribute("1")]
public abstract virtual string get_Key();
    public abstract virtual Byte[] get_EncodedKey();
    public abstract virtual bool get_RequiresVBucketId();
    public abstract virtual Nullable`1<short> get_VBucketId();
    public abstract virtual void set_VBucketId(Nullable`1<short> value);
    public abstract virtual Nullable`1<short> get_ReplicaIdx();
    public abstract virtual UInt32 get_Opaque();
    public abstract virtual ulong get_Cas();
    public abstract virtual OperationHeader get_Header();
    [NullableContextAttribute("1")]
public abstract virtual IRequestSpan get_Span();
    public abstract virtual bool get_HasDurability();
    public abstract virtual bool get_IsReadOnly();
    public abstract virtual bool get_IsSent();
    public abstract virtual CancellationTokenPair get_TokenPair();
    public abstract virtual void set_TokenPair(CancellationTokenPair value);
    [NullableContextAttribute("0")]
public abstract virtual ValueTask`1<ResponseStatus> get_Completed();
    public abstract virtual void Reset();
    [NullableContextAttribute("1")]
public abstract virtual Task SendAsync(IConnection connection, CancellationToken cancellationToken);
    public abstract virtual bool TrySetCanceled(CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
public abstract virtual bool TrySetException(Exception ex);
    [NullableContextAttribute("0")]
public abstract virtual void HandleOperationCompleted(SlicedMemoryOwner`1& modreq(System.Runtime.InteropServices.InAttribute) data);
    [NullableContextAttribute("0")]
public abstract virtual SlicedMemoryOwner`1<byte> ExtractBody();
    [NullableContextAttribute("1")]
public abstract virtual BucketConfig ReadConfig(ITypeTranscoder transcoder);
    public abstract virtual bool WasNmvb();
    public abstract virtual Nullable`1<long> get_LastServerDuration();
    public abstract virtual string get_LastDispatchedFrom();
    public abstract virtual string get_LastDispatchedTo();
    public abstract virtual bool get_IsCompleted();
    public abstract virtual ErrorCode get_LastErrorCode();
    public abstract virtual void set_LastErrorCode(ErrorCode value);
    public abstract virtual bool RetryNow();
    public abstract virtual Nullable`1<ConfigVersion> get_ConfigVersion();
    public abstract virtual void set_ConfigVersion(Nullable`1<ConfigVersion> value);
}
internal interface Couchbase.Core.IO.Operations.IOperation`1 {
    [NullableContextAttribute("1")]
public abstract virtual T GetValue();
}
[NullableContextAttribute("1")]
internal interface Couchbase.Core.IO.Operations.IOperationConfigurator {
    public abstract virtual void Configure(OperationBase operation, IKeyValueOptions options);
}
[NullableContextAttribute("2")]
[ObsoleteAttribute("This interface is not required and will be removed in a future release.")]
public interface Couchbase.Core.IO.Operations.IOperationResult {
    public MutationToken Token { get; }
    public ulong Cas { get; public set; }
    public ResponseStatus Status { get; }
    public Durability Durability { get; public set; }
    public string Id { get; }
    public OpCode OpCode { get; }
    public abstract virtual MutationToken get_Token();
    public abstract virtual ulong get_Cas();
    public abstract virtual void set_Cas(ulong value);
    public abstract virtual ResponseStatus get_Status();
    public abstract virtual Durability get_Durability();
    public abstract virtual void set_Durability(Durability value);
    public abstract virtual bool IsNmv();
    public abstract virtual string get_Id();
    public abstract virtual OpCode get_OpCode();
}
[NullableContextAttribute("2")]
[ObsoleteAttribute("This interface is not required and will be removed in a future release.")]
public interface Couchbase.Core.IO.Operations.IOperationResult`1 {
    public T Content { get; }
    public abstract virtual T get_Content();
}
public interface Couchbase.Core.IO.Operations.IResult {
    public bool Success { get; }
    public string Message { get; }
    public Exception Exception { get; }
    public abstract virtual bool get_Success();
    public abstract virtual string get_Message();
    public abstract virtual Exception get_Exception();
    public abstract virtual bool ShouldRetry();
}
public interface Couchbase.Core.IO.Operations.IResult`1 {
    public T Value { get; }
    public abstract virtual T get_Value();
}
public enum Couchbase.Core.IO.Operations.KeyState : Enum {
    public byte value__;
    public static KeyState FoundNotPersisted;
    public static KeyState FoundPersisted;
    public static KeyState NotFound;
    public static KeyState LogicalDeleted;
}
internal enum Couchbase.Core.IO.Operations.Magic : Enum {
    public byte value__;
    public static Magic ClientRequest;
    public static Magic ClientResponse;
    public static Magic AltResponse;
    public static Magic AltRequest;
    public static Magic ServerRequest;
    public static Magic ServerResponse;
}
internal static class Couchbase.Core.IO.Operations.MemoryStreamFactory : object {
    private static int DefaultStreamCapacity;
    private static Func`1<MemoryStream> _factoryFunc;
    private static MemoryStreamFactory();
    public static void SetFactoryFunc(Func`1<MemoryStream> factoryFunc);
    public static MemoryStream GetMemoryStream();
}
internal class Couchbase.Core.IO.Operations.MetaData : object {
    [CompilerGeneratedAttribute]
private bool <Deleted>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <Flags>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <Expiry>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <SeqNo>k__BackingField;
    [CompilerGeneratedAttribute]
private DataType <DataType>k__BackingField;
    public bool Deleted { get; internal set; }
    public UInt32 Flags { get; internal set; }
    public UInt32 Expiry { get; internal set; }
    public ulong SeqNo { get; public set; }
    public DataType DataType { get; internal set; }
    [CompilerGeneratedAttribute]
public bool get_Deleted();
    [CompilerGeneratedAttribute]
internal void set_Deleted(bool value);
    [CompilerGeneratedAttribute]
public UInt32 get_Flags();
    [CompilerGeneratedAttribute]
internal void set_Flags(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_Expiry();
    [CompilerGeneratedAttribute]
internal void set_Expiry(UInt32 value);
    [CompilerGeneratedAttribute]
public ulong get_SeqNo();
    [CompilerGeneratedAttribute]
public void set_SeqNo(ulong value);
    [CompilerGeneratedAttribute]
public DataType get_DataType();
    [CompilerGeneratedAttribute]
internal void set_DataType(DataType value);
}
internal abstract class Couchbase.Core.IO.Operations.MutationOperationBase : OperationBase {
    private ushort SyncReplicationTimeoutFloorMs;
    [CompilerGeneratedAttribute]
private DurabilityLevel <DurabilityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <DurabilityTimeout>k__BackingField;
    public DurabilityLevel DurabilityLevel { get; public set; }
    public Nullable`1<TimeSpan> DurabilityTimeout { get; public set; }
    public bool IsReadOnly { get; }
    [CompilerGeneratedAttribute]
public DurabilityLevel get_DurabilityLevel();
    [CompilerGeneratedAttribute]
public void set_DurabilityLevel(DurabilityLevel value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_DurabilityTimeout();
    [CompilerGeneratedAttribute]
public void set_DurabilityTimeout(Nullable`1<TimeSpan> value);
    public virtual bool get_IsReadOnly();
    protected virtual void ReadExtras(ReadOnlySpan`1<byte> buffer);
    protected virtual void WriteFramingExtras(OperationBuilder builder);
}
internal abstract class Couchbase.Core.IO.Operations.MutationOperationBase`1 : OperationBase`1<T> {
    [CompilerGeneratedAttribute]
private DurabilityLevel <DurabilityLevel>k__BackingField;
    public bool IsReadOnly { get; }
    public DurabilityLevel DurabilityLevel { get; public set; }
    public bool HasDurability { get; }
    protected MutationOperationBase`1(string bucketName, string key);
    public virtual bool get_IsReadOnly();
    [CompilerGeneratedAttribute]
public DurabilityLevel get_DurabilityLevel();
    [CompilerGeneratedAttribute]
public void set_DurabilityLevel(DurabilityLevel value);
    public virtual bool get_HasDurability();
    protected virtual void ReadExtras(ReadOnlySpan`1<byte> buffer);
    protected virtual void WriteFramingExtras(OperationBuilder builder);
}
internal class Couchbase.Core.IO.Operations.Noop : OperationBase {
    public OpCode OpCode { get; }
    public virtual OpCode get_OpCode();
    protected virtual void WriteKey(OperationBuilder builder);
}
internal class Couchbase.Core.IO.Operations.Observe : OperationBase`1<ObserveState> {
    public OpCode OpCode { get; }
    protected virtual void WriteExtras(OperationBuilder builder);
    protected virtual void WriteFramingExtras(OperationBuilder builder);
    protected virtual void WriteKey(OperationBuilder builder);
    [SkipLocalsInitAttribute]
protected virtual void WriteBody(OperationBuilder builder);
    public virtual ObserveState GetValue();
    public virtual OpCode get_OpCode();
}
public enum Couchbase.Core.IO.Operations.ObserveResponse : Enum {
    public int value__;
    public static ObserveResponse DurabilitySatisfied;
    public static ObserveResponse DurabilityNotSatisfied;
}
public class Couchbase.Core.IO.Operations.ObserveState : object {
    [CompilerGeneratedAttribute]
private UInt32 <PersistStat>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <ReplState>k__BackingField;
    [CompilerGeneratedAttribute]
private int <VBucket>k__BackingField;
    [CompilerGeneratedAttribute]
private int <KeyLength>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private KeyState <KeyState>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Cas>k__BackingField;
    public UInt32 PersistStat { get; public set; }
    public UInt32 ReplState { get; public set; }
    public int VBucket { get; public set; }
    public int KeyLength { get; public set; }
    public string Key { get; public set; }
    public KeyState KeyState { get; public set; }
    public ulong Cas { get; public set; }
    [CompilerGeneratedAttribute]
public UInt32 get_PersistStat();
    [CompilerGeneratedAttribute]
public void set_PersistStat(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_ReplState();
    [CompilerGeneratedAttribute]
public void set_ReplState(UInt32 value);
    [CompilerGeneratedAttribute]
public int get_VBucket();
    [CompilerGeneratedAttribute]
public void set_VBucket(int value);
    [CompilerGeneratedAttribute]
public int get_KeyLength();
    [CompilerGeneratedAttribute]
public void set_KeyLength(int value);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public KeyState get_KeyState();
    [CompilerGeneratedAttribute]
public void set_KeyState(KeyState value);
    [CompilerGeneratedAttribute]
public ulong get_Cas();
    [CompilerGeneratedAttribute]
public void set_Cas(ulong value);
    public virtual string ToString();
}
public enum Couchbase.Core.IO.Operations.OpCode : Enum {
    public byte value__;
    public static OpCode Get;
    public static OpCode Set;
    public static OpCode Add;
    public static OpCode Replace;
    public static OpCode Delete;
    public static OpCode Increment;
    public static OpCode Decrement;
    public static OpCode Quit;
    public static OpCode Flush;
    public static OpCode GetQ;
    public static OpCode NoOp;
    public static OpCode Version;
    public static OpCode GetK;
    public static OpCode GetKQ;
    public static OpCode Append;
    public static OpCode Prepend;
    public static OpCode Stat;
    public static OpCode SetQ;
    public static OpCode AddQ;
    public static OpCode ReplaceQ;
    public static OpCode DeleteQ;
    public static OpCode IncrementQ;
    public static OpCode DecrementQ;
    public static OpCode QuitQ;
    public static OpCode FlushQ;
    public static OpCode AppendQ;
    public static OpCode PrependQ;
    public static OpCode Touch;
    public static OpCode GAT;
    public static OpCode GATQ;
    public static OpCode SaslList;
    public static OpCode SaslStart;
    public static OpCode SaslStep;
    public static OpCode GetClusterConfig;
    public static OpCode Observe;
    public static OpCode GetL;
    public static OpCode Unlock;
    public static OpCode ReplicaRead;
    public static OpCode SelectBucket;
    public static OpCode GetErrorMap;
    public static OpCode ObserveSeqNo;
    public static OpCode Helo;
    public static OpCode SubGet;
    public static OpCode SubExist;
    public static OpCode SubDictAdd;
    public static OpCode SubDictUpsert;
    public static OpCode SubDelete;
    public static OpCode SubReplace;
    public static OpCode SubArrayPushLast;
    public static OpCode SubArrayPushFirst;
    public static OpCode SubArrayInsert;
    public static OpCode SubArrayAddUnique;
    public static OpCode SubCounter;
    public static OpCode MultiLookup;
    public static OpCode SubMultiMutation;
    public static OpCode SubGetCount;
    public static OpCode GetCollectionsManifest;
    public static OpCode GetCidByName;
    public static OpCode GetSidByName;
    public static OpCode GetMeta;
    public static OpCode RangeScanCreate;
    public static OpCode RangeScanContinue;
    public static OpCode RangeScanCancel;
    public static OpCode ClusterMapChangeNotification;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal abstract class Couchbase.Core.IO.Operations.OperationBase : object {
    [NullableAttribute("0")]
private SlicedMemoryOwner`1<byte> _data;
    private IRequestSpan _span;
    private List`1<RetryReason> _retryReasons;
    private IRetryStrategy _retryStrategy;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _isSent;
    private IRequestSpan _dispatchSpan;
    private bool _isOrphaned;
    private String modreq(System.Runtime.CompilerServices.IsVolatile) _lastDispatchedFrom;
    private String modreq(System.Runtime.CompilerServices.IsVolatile) _lastDispatchedTo;
    private string _key;
    private LightweightStopwatch _stopwatch;
    [CompilerGeneratedAttribute]
private bool <PreferReturns>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PreserveTtl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BucketName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<UInt32> <Cid>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <EncodedKey>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <Opaque>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Cas>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<short> <VBucketId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<short> <ReplicaIdx>k__BackingField;
    [CompilerGeneratedAttribute]
private OperationHeader <Header>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <Attempts>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationTokenPair <TokenPair>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <Expires>k__BackingField;
    [CompilerGeneratedAttribute]
private Flags <Flags>k__BackingField;
    [CompilerGeneratedAttribute]
private MutationToken <MutationToken>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ITypeTranscoder <Transcoder>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IOperationCompressor <OperationCompressor>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ObjectPool`1<OperationBuilder> <OperationBuilderPool>k__BackingField;
    private Nullable`1<TimeSpan> _elapsed;
    [CompilerGeneratedAttribute]
private ExceptionDispatchInfo <Exception>k__BackingField;
    private Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _isCompleted;
    [NullableAttribute("0")]
private ManualResetValueTaskSourceCore`1<ResponseStatus> _valueTaskSource;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <LastServerDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LastErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorCode <LastErrorCode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ConfigVersion> <ConfigVersion>k__BackingField;
    private bool _disposed;
    public bool PreferReturns { get; internal set; }
    public bool PreserveTtl { get; public set; }
    public OpCode OpCode { get; }
    public string BucketName { get; public set; }
    public string SName { get; public set; }
    public string CName { get; public set; }
    public Nullable`1<UInt32> Cid { get; public set; }
    public Byte[] EncodedKey { get; public set; }
    [NullableAttribute("1")]
public string Key { get; public set; }
    public UInt32 Opaque { get; public set; }
    public ulong Cas { get; public set; }
    public Nullable`1<short> VBucketId { get; public set; }
    public Nullable`1<short> ReplicaIdx { get; protected set; }
    public OperationHeader Header { get; public set; }
    [NullableAttribute("1")]
public IRequestSpan Span { get; internal set; }
    [NullableAttribute("1")]
[ObsoleteAttribute("Unused, will be removed in a future version.")]
public IValueRecorder Recorder { get; public set; }
    public bool HasDurability { get; }
    public bool IsReadOnly { get; }
    public bool IsSent { get; internal set; }
    [NullableAttribute("0")]
public ValueTask`1<ResponseStatus> Completed { get; }
    public bool RequiresVBucketId { get; }
    public UInt32 Attempts { get; public set; }
    private bool Couchbase.Core.Retry.IRequest.Idempotent { get; }
    [NullableAttribute("1")]
public List`1<RetryReason> RetryReasons { get; public set; }
    [NullableAttribute("1")]
public IRetryStrategy RetryStrategy { get; public set; }
    public TimeSpan Timeout { get; public set; }
    public CancellationTokenPair TokenPair { get; public set; }
    public CancellationToken Token { get; public set; }
    public string ClientContextId { get; public set; }
    public string Statement { get; public set; }
    public UInt32 Expires { get; public set; }
    public Flags Flags { get; protected set; }
    public MutationToken MutationToken { get; public set; }
    [NullableAttribute("1")]
public ITypeTranscoder Transcoder { get; public set; }
    [NullableAttribute("1")]
public IOperationCompressor OperationCompressor { get; public set; }
    [NullableAttribute("1")]
public ObjectPool`1<OperationBuilder> OperationBuilderPool { get; public set; }
    public TimeSpan Elapsed { get; }
    public ExceptionDispatchInfo Exception { get; protected set; }
    [NullableAttribute("0")]
protected ReadOnlyMemory`1<byte> Data { get; }
    protected bool SupportsRequestCompression { get; }
    protected bool SupportsJsonDataType { get; }
    public Nullable`1<long> LastServerDuration { get; protected set; }
    public string LastDispatchedFrom { get; }
    public string LastDispatchedTo { get; }
    public string LastErrorMessage { get; public set; }
    public bool CanStream { get; }
    public bool IsCompleted { get; }
    public ErrorCode LastErrorCode { get; public set; }
    public Nullable`1<ConfigVersion> ConfigVersion { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual bool get_PreferReturns();
    [CompilerGeneratedAttribute]
internal void set_PreferReturns(bool value);
    [CompilerGeneratedAttribute]
public virtual bool get_PreserveTtl();
    [CompilerGeneratedAttribute]
public virtual void set_PreserveTtl(bool value);
    public abstract virtual OpCode get_OpCode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_BucketName();
    [CompilerGeneratedAttribute]
public void set_BucketName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SName();
    [CompilerGeneratedAttribute]
public void set_SName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_CName();
    [CompilerGeneratedAttribute]
public void set_CName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<UInt32> get_Cid();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Cid(Nullable`1<UInt32> value);
    [CompilerGeneratedAttribute]
public sealed virtual Byte[] get_EncodedKey();
    [CompilerGeneratedAttribute]
public void set_EncodedKey(Byte[] value);
    [NullableContextAttribute("1")]
public sealed virtual string get_Key();
    [NullableContextAttribute("1")]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public sealed virtual UInt32 get_Opaque();
    [CompilerGeneratedAttribute]
public void set_Opaque(UInt32 value);
    [CompilerGeneratedAttribute]
public sealed virtual ulong get_Cas();
    [CompilerGeneratedAttribute]
public void set_Cas(ulong value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<short> get_VBucketId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_VBucketId(Nullable`1<short> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<short> get_ReplicaIdx();
    [CompilerGeneratedAttribute]
protected void set_ReplicaIdx(Nullable`1<short> value);
    [CompilerGeneratedAttribute]
public sealed virtual OperationHeader get_Header();
    [CompilerGeneratedAttribute]
public void set_Header(OperationHeader value);
    [NullableContextAttribute("1")]
public sealed virtual IRequestSpan get_Span();
    [NullableContextAttribute("1")]
internal void set_Span(IRequestSpan value);
    [NullableContextAttribute("1")]
public sealed virtual IValueRecorder get_Recorder();
    [NullableContextAttribute("1")]
public sealed virtual void set_Recorder(IValueRecorder value);
    public virtual bool get_HasDurability();
    public virtual bool get_IsReadOnly();
    public sealed virtual bool get_IsSent();
    internal void set_IsSent(bool value);
    [NullableContextAttribute("0")]
public sealed virtual ValueTask`1<ResponseStatus> get_Completed();
    public virtual bool get_RequiresVBucketId();
    [CompilerGeneratedAttribute]
public sealed virtual UInt32 get_Attempts();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Attempts(UInt32 value);
    private sealed virtual override bool Couchbase.Core.Retry.IRequest.get_Idempotent();
    [NullableContextAttribute("1")]
public sealed virtual List`1<RetryReason> get_RetryReasons();
    [NullableContextAttribute("1")]
public sealed virtual void set_RetryReasons(List`1<RetryReason> value);
    [NullableContextAttribute("1")]
public sealed virtual IRetryStrategy get_RetryStrategy();
    [NullableContextAttribute("1")]
public sealed virtual void set_RetryStrategy(IRetryStrategy value);
    [CompilerGeneratedAttribute]
public sealed virtual TimeSpan get_Timeout();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Timeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public sealed virtual CancellationTokenPair get_TokenPair();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TokenPair(CancellationTokenPair value);
    public sealed virtual CancellationToken get_Token();
    public sealed virtual void set_Token(CancellationToken value);
    public sealed virtual string get_ClientContextId();
    public sealed virtual void set_ClientContextId(string value);
    public sealed virtual string get_Statement();
    public sealed virtual void set_Statement(string value);
    [CompilerGeneratedAttribute]
public UInt32 get_Expires();
    [CompilerGeneratedAttribute]
public void set_Expires(UInt32 value);
    [CompilerGeneratedAttribute]
public Flags get_Flags();
    [CompilerGeneratedAttribute]
protected void set_Flags(Flags value);
    [CompilerGeneratedAttribute]
public MutationToken get_MutationToken();
    [CompilerGeneratedAttribute]
public void set_MutationToken(MutationToken value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public ITypeTranscoder get_Transcoder();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Transcoder(ITypeTranscoder value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IOperationCompressor get_OperationCompressor();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_OperationCompressor(IOperationCompressor value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public ObjectPool`1<OperationBuilder> get_OperationBuilderPool();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_OperationBuilderPool(ObjectPool`1<OperationBuilder> value);
    public sealed virtual TimeSpan get_Elapsed();
    [CompilerGeneratedAttribute]
public ExceptionDispatchInfo get_Exception();
    [CompilerGeneratedAttribute]
protected void set_Exception(ExceptionDispatchInfo value);
    [NullableContextAttribute("0")]
protected ReadOnlyMemory`1<byte> get_Data();
    protected virtual bool get_SupportsRequestCompression();
    protected virtual bool get_SupportsJsonDataType();
    public sealed virtual ResponseStatus GetResult(short token);
    public sealed virtual ValueTaskSourceStatus GetStatus(short token);
    public sealed virtual void OnCompleted(Action`1<object> continuation, object state, short token, ValueTaskSourceOnCompletedFlags flags);
    public virtual void Reset();
    protected void ResetAllButValueTask();
    private void Reset(ResponseStatus status);
    [NullableContextAttribute("0")]
public void Read(SlicedMemoryOwner`1& buffer);
    [NullableContextAttribute("0")]
protected virtual void ReadExtras(ReadOnlySpan`1<byte> buffer);
    [NullableContextAttribute("0")]
protected void TryReadServerDuration(ReadOnlySpan`1<byte> buffer);
    [NullableContextAttribute("0")]
protected void TryReadMutationToken(ReadOnlySpan`1<byte> buffer);
    [NullableContextAttribute("1")]
public sealed virtual BucketConfig ReadConfig(ITypeTranscoder transcoder);
    public sealed virtual void LogOrphaned();
    [NullableContextAttribute("0")]
public sealed virtual SlicedMemoryOwner`1<byte> ExtractBody();
    [NullableContextAttribute("1")]
protected virtual void HandleClientError(string message, ResponseStatus responseStatus);
    public bool GetSuccess();
    public ResponseStatus GetResponseStatus();
    private OperationRequestHeader CreateHeader(DataType dataType);
    [NullableContextAttribute("1")]
[SkipLocalsInitAttribute]
protected virtual void WriteKey(OperationBuilder builder);
    [NullableContextAttribute("0")]
protected int WriteKey(Span`1<byte> buffer);
    [NullableContextAttribute("1")]
protected virtual void WriteExtras(OperationBuilder builder);
    [NullableContextAttribute("1")]
protected virtual void WriteFramingExtras(OperationBuilder builder);
    [NullableContextAttribute("1")]
protected virtual void WriteBody(OperationBuilder builder);
    protected virtual void BeginSend();
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Couchbase.Core.IO.Operations.OperationBase/<SendAsync>d__173")]
public virtual Task SendAsync(IConnection connection, CancellationToken cancellationToken);
    public sealed virtual bool TrySetCanceled(CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
public sealed virtual bool TrySetException(Exception ex);
    [NullableContextAttribute("1")]
private bool TrySetException(Exception ex, bool ignoreIsCompleted);
    [NullableContextAttribute("0")]
public void HandleOperationCompleted(SlicedMemoryOwner`1& data);
    public sealed virtual bool WasNmvb();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_LastServerDuration();
    [CompilerGeneratedAttribute]
protected void set_LastServerDuration(Nullable`1<long> value);
    public sealed virtual string get_LastDispatchedFrom();
    public sealed virtual string get_LastDispatchedTo();
    [CompilerGeneratedAttribute]
public string get_LastErrorMessage();
    [CompilerGeneratedAttribute]
public void set_LastErrorMessage(string value);
    public virtual bool get_CanStream();
    public sealed virtual bool get_IsCompleted();
    [CompilerGeneratedAttribute]
public sealed virtual ErrorCode get_LastErrorCode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LastErrorCode(ErrorCode value);
    public sealed virtual bool RetryNow();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<ConfigVersion> get_ConfigVersion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConfigVersion(Nullable`1<ConfigVersion> value);
    public virtual void StopRecording();
    public virtual void StopRecording(Type errorType);
    public sealed virtual void Dispose();
    protected void EnsureNotDisposed();
    private sealed virtual override void Couchbase.Core.IO.Operations.IOperation.HandleOperationCompleted(SlicedMemoryOwner`1& modreq(System.Runtime.InteropServices.InAttribute) data);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Couchbase.Core.IO.Operations.OperationBase`1 : OperationBase {
    [CompilerGeneratedAttribute]
private T <Content>k__BackingField;
    public T Content { get; public set; }
    [CompilerGeneratedAttribute]
public T get_Content();
    [CompilerGeneratedAttribute]
public void set_Content(T value);
    protected virtual void WriteBody(OperationBuilder builder);
    public virtual T GetValue();
    protected virtual void WriteExtras(OperationBuilder builder);
    private sealed virtual override void Couchbase.Core.IO.Operations.IOperation.HandleOperationCompleted(SlicedMemoryOwner`1& modreq(System.Runtime.InteropServices.InAttribute) data);
}
internal class Couchbase.Core.IO.Operations.OperationBuilder : Stream {
    private MemoryStream _stream;
    private int _framingExtrasLength;
    private int _extrasLength;
    private int _keyLength;
    private int _bodyLength;
    private int _operationSpecStartPosition;
    private bool _operationSpecIsMutation;
    private int _operationSpecPathLength;
    private int _operationSpecFragmentLength;
    private bool _headerWritten;
    [CompilerGeneratedAttribute]
private OperationSegment <CurrentSegment>k__BackingField;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public long Capacity { get; }
    public OperationSegment CurrentSegment { get; private set; }
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public long get_Capacity();
    [CompilerGeneratedAttribute]
public OperationSegment get_CurrentSegment();
    [CompilerGeneratedAttribute]
private void set_CurrentSegment(OperationSegment value);
    public void AdvanceToSegment(OperationSegment segment);
    public virtual void Flush();
    public ReadOnlyMemory`1<byte> GetBuffer();
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual void Write(ReadOnlySpan`1<byte> buffer);
    public void WriteHeader(OperationRequestHeader& header);
    public void BeginOperationSpec(bool isMutation);
    public void Reset();
    public void CompleteOperationSpec(OperationSpec spec);
    public bool AttemptBodyCompression(IOperationCompressor operationCompressor, IRequestSpan parentSpan);
    private void Advance(int bytes);
    private void EnsureHeaderNotWritten();
    protected virtual void Dispose(bool disposing);
}
internal class Couchbase.Core.IO.Operations.OperationBuilderPoolPolicy : PooledObjectPolicy`1<OperationBuilder> {
    [CompilerGeneratedAttribute]
private int <MaximumOperationBuilderCapacity>k__BackingField;
    public int MaximumOperationBuilderCapacity { get; public set; }
    [CompilerGeneratedAttribute]
public int get_MaximumOperationBuilderCapacity();
    [CompilerGeneratedAttribute]
public void set_MaximumOperationBuilderCapacity(int value);
    public virtual OperationBuilder Create();
    public virtual bool Return(OperationBuilder obj);
}
internal class Couchbase.Core.IO.Operations.OperationCancellationRegistration : ValueType {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`1<object> HandleExternalCancellationAction;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`1<object> HandleInternalCancellationAction;
    private CancellationTokenRegistration _internalRegistration;
    private CancellationTokenRegistration _externalRegistration;
    [NullableContextAttribute("1")]
public OperationCancellationRegistration(IOperation operation, CancellationTokenPair tokenPair);
    private static OperationCancellationRegistration();
    public sealed virtual void Dispose();
    [NullableContextAttribute("2")]
private static void HandleExternalCancellation(object state);
    [NullableContextAttribute("2")]
private static void HandleInternalCancellation(object state);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Operations.OperationConfigurator : object {
    private ITypeTranscoder _typeTranscoder;
    private IOperationCompressor _operationCompressor;
    private ObjectPool`1<OperationBuilder> _operationBuilderPool;
    private IRetryStrategy _retryStrategy;
    public OperationConfigurator(ITypeTranscoder typeTranscoder, IOperationCompressor operationCompressor, ObjectPool`1<OperationBuilder> operationBuilderPool, IRetryStrategy retryStrategy);
    public sealed virtual void Configure(OperationBase operation, IKeyValueOptions options);
}
[IsReadOnlyAttribute]
internal class Couchbase.Core.IO.Operations.OperationHeader : ValueType {
    public static int Length;
    public static int MaxKeyLength;
    [CompilerGeneratedAttribute]
private int <Magic>k__BackingField;
    [CompilerGeneratedAttribute]
private OpCode <OpCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ExtrasLength>k__BackingField;
    [CompilerGeneratedAttribute]
private int <FramingExtrasLength>k__BackingField;
    [CompilerGeneratedAttribute]
private DataType <DataType>k__BackingField;
    [CompilerGeneratedAttribute]
private ResponseStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private int <KeyLength>k__BackingField;
    [CompilerGeneratedAttribute]
private int <BodyLength>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <Opaque>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Cas>k__BackingField;
    public int Magic { get; public set; }
    public OpCode OpCode { get; public set; }
    public string Key { get; public set; }
    public int ExtrasLength { get; public set; }
    public int FramingExtrasLength { get; public set; }
    public DataType DataType { get; public set; }
    public ResponseStatus Status { get; public set; }
    public int KeyLength { get; public set; }
    public int BodyLength { get; public set; }
    public UInt32 Opaque { get; public set; }
    public ulong Cas { get; public set; }
    public int TotalLength { get; }
    public int ExtrasOffset { get; }
    public int BodyOffset { get; }
    [CompilerGeneratedAttribute]
public int get_Magic();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Magic(int value);
    [CompilerGeneratedAttribute]
public OpCode get_OpCode();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_OpCode(OpCode value);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Key(string value);
    [CompilerGeneratedAttribute]
public int get_ExtrasLength();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ExtrasLength(int value);
    [CompilerGeneratedAttribute]
public int get_FramingExtrasLength();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FramingExtrasLength(int value);
    [CompilerGeneratedAttribute]
public DataType get_DataType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DataType(DataType value);
    [CompilerGeneratedAttribute]
public ResponseStatus get_Status();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Status(ResponseStatus value);
    [CompilerGeneratedAttribute]
public int get_KeyLength();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_KeyLength(int value);
    [CompilerGeneratedAttribute]
public int get_BodyLength();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_BodyLength(int value);
    [CompilerGeneratedAttribute]
public UInt32 get_Opaque();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Opaque(UInt32 value);
    [CompilerGeneratedAttribute]
public ulong get_Cas();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Cas(ulong value);
    public int get_TotalLength();
    public int get_ExtrasOffset();
    public int get_BodyOffset();
}
[ExtensionAttribute]
internal static class Couchbase.Core.IO.Operations.OperationHeaderExtensions : object {
    private static HashSet`1<ResponseStatus> ValidResponseStatuses;
    private static OperationHeaderExtensions();
    [ExtensionAttribute]
internal static OperationHeader CreateHeader(Span`1<byte> buffer);
    [ExtensionAttribute]
internal static OperationHeader CreateHeader(ReadOnlySpan`1<byte> buffer);
    internal static ResponseStatus GetResponseStatus(short code);
    [ExtensionAttribute]
internal static Nullable`1<long> GetServerDuration(OperationHeader header, ReadOnlySpan`1<byte> buffer);
    internal static Nullable`1<long> GetServerDuration(ReadOnlySpan`1<byte> buffer);
}
[IsReadOnlyAttribute]
internal class Couchbase.Core.IO.Operations.OperationRequestHeader : ValueType {
    public static int Length;
    [CompilerGeneratedAttribute]
private OpCode <OpCode>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <Opaque>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Cas>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<short> <VBucketId>k__BackingField;
    [CompilerGeneratedAttribute]
private DataType <DataType>k__BackingField;
    public OpCode OpCode { get; public set; }
    public UInt32 Opaque { get; public set; }
    public ulong Cas { get; public set; }
    public Nullable`1<short> VBucketId { get; public set; }
    public DataType DataType { get; public set; }
    [CompilerGeneratedAttribute]
public OpCode get_OpCode();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_OpCode(OpCode value);
    [CompilerGeneratedAttribute]
public UInt32 get_Opaque();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Opaque(UInt32 value);
    [CompilerGeneratedAttribute]
public ulong get_Cas();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Cas(ulong value);
    [CompilerGeneratedAttribute]
public Nullable`1<short> get_VBucketId();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_VBucketId(Nullable`1<short> value);
    [CompilerGeneratedAttribute]
public DataType get_DataType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DataType(DataType value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is not required and will be removed in a future release.")]
public class Couchbase.Core.IO.Operations.OperationResult : object {
    [CompilerGeneratedAttribute]
private bool <Success>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private MutationToken <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Cas>k__BackingField;
    [CompilerGeneratedAttribute]
private ResponseStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private Durability <Durability>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private OpCode <OpCode>k__BackingField;
    public bool Success { get; internal set; }
    public string Message { get; internal set; }
    public MutationToken Token { get; internal set; }
    public ulong Cas { get; public set; }
    public ResponseStatus Status { get; internal set; }
    public Durability Durability { get; public set; }
    public Exception Exception { get; public set; }
    public string Id { get; internal set; }
    public OpCode OpCode { get; internal set; }
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Success();
    [CompilerGeneratedAttribute]
internal void set_Success(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Message();
    [CompilerGeneratedAttribute]
internal void set_Message(string value);
    [CompilerGeneratedAttribute]
public sealed virtual MutationToken get_Token();
    [CompilerGeneratedAttribute]
internal void set_Token(MutationToken value);
    [CompilerGeneratedAttribute]
public sealed virtual ulong get_Cas();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Cas(ulong value);
    [CompilerGeneratedAttribute]
public sealed virtual ResponseStatus get_Status();
    [CompilerGeneratedAttribute]
internal void set_Status(ResponseStatus value);
    [CompilerGeneratedAttribute]
public sealed virtual Durability get_Durability();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Durability(Durability value);
    [CompilerGeneratedAttribute]
public sealed virtual Exception get_Exception();
    [CompilerGeneratedAttribute]
public void set_Exception(Exception value);
    public sealed virtual bool ShouldRetry();
    private bool IsClientFailureRetriable();
    public sealed virtual bool IsNmv();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual OpCode get_OpCode();
    [CompilerGeneratedAttribute]
internal void set_OpCode(OpCode value);
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is not required and will be removed in a future release.")]
public class Couchbase.Core.IO.Operations.OperationResult`1 : OperationResult {
    [CompilerGeneratedAttribute]
private T <Content>k__BackingField;
    public T Content { get; internal set; }
    [CompilerGeneratedAttribute]
public sealed virtual T get_Content();
    [CompilerGeneratedAttribute]
internal void set_Content(T value);
}
internal enum Couchbase.Core.IO.Operations.OperationSegment : Enum {
    public int value__;
    public static OperationSegment FramingExtras;
    public static OperationSegment Extras;
    public static OperationSegment Key;
    public static OperationSegment Body;
    public static OperationSegment OperationSpecPath;
    public static OperationSegment OperationSpecFragment;
}
internal class Couchbase.Core.IO.Operations.Prepend`1 : MutationOperationBase`1<T> {
    public OpCode OpCode { get; }
    protected bool SupportsRequestCompression { get; }
    internal Prepend`1(string bucketName, string key);
    protected virtual void BeginSend();
    protected virtual void WriteExtras(OperationBuilder builder);
    public virtual OpCode get_OpCode();
    protected virtual bool get_SupportsRequestCompression();
}
internal class Couchbase.Core.IO.Operations.RangeScan.RangeScanCancel : OperationBase`1<SlicedMemoryOwner`1<byte>> {
    public OpCode OpCode { get; }
    public bool RequiresVBucketId { get; }
    public virtual OpCode get_OpCode();
    public virtual bool get_RequiresVBucketId();
    protected virtual void WriteBody(OperationBuilder builder);
    protected virtual void WriteKey(OperationBuilder builder);
    protected virtual void WriteExtras(OperationBuilder builder);
}
internal class Couchbase.Core.IO.Operations.RangeScan.RangeScanContinue : OperationBase`1<IDictionary`2<string, IScanResult>> {
    private List`1<SlicedMemoryOwner`1<byte>> _responses;
    [CompilerGeneratedAttribute]
private UInt32 <ItemLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSampling>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <TimeLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <ByteLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private SlicedMemoryOwner`1<byte> <Uuid>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IdsOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger`1<GetResult> <Logger>k__BackingField;
    public UInt32 ItemLimit { get; public set; }
    public bool IsSampling { get; public set; }
    public UInt32 TimeLimit { get; public set; }
    public UInt32 ByteLimit { get; public set; }
    private SlicedMemoryOwner`1<byte> Uuid { get; public set; }
    public OpCode OpCode { get; }
    public bool RequiresVBucketId { get; }
    public bool CanStream { get; }
    public bool IdsOnly { get; public set; }
    public ILogger`1<GetResult> Logger { get; public set; }
    [CompilerGeneratedAttribute]
public UInt32 get_ItemLimit();
    [CompilerGeneratedAttribute]
public void set_ItemLimit(UInt32 value);
    [CompilerGeneratedAttribute]
public bool get_IsSampling();
    [CompilerGeneratedAttribute]
public void set_IsSampling(bool value);
    [CompilerGeneratedAttribute]
public UInt32 get_TimeLimit();
    [CompilerGeneratedAttribute]
public void set_TimeLimit(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_ByteLimit();
    [CompilerGeneratedAttribute]
public void set_ByteLimit(UInt32 value);
    [CompilerGeneratedAttribute]
private SlicedMemoryOwner`1<byte> get_Uuid();
    [CompilerGeneratedAttribute]
public void set_Uuid(SlicedMemoryOwner`1<byte> value);
    public virtual OpCode get_OpCode();
    public virtual bool get_RequiresVBucketId();
    public virtual bool get_CanStream();
    [CompilerGeneratedAttribute]
public bool get_IdsOnly();
    [CompilerGeneratedAttribute]
public void set_IdsOnly(bool value);
    [CompilerGeneratedAttribute]
public ILogger`1<GetResult> get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(ILogger`1<GetResult> value);
    protected virtual void WriteKey(OperationBuilder builder);
    protected virtual void WriteBody(OperationBuilder builder);
    protected virtual void WriteExtras(OperationBuilder builder);
    protected virtual void ReadExtras(ReadOnlySpan`1<byte> buffer);
    public virtual void Reset();
    public sealed virtual void OnCompleted();
    public sealed virtual void OnError(Exception error);
    public sealed virtual void OnNext(SlicedMemoryOwner`1<byte> value);
    private void ReadKeys();
    private void ReadKeysAndBody();
}
internal class Couchbase.Core.IO.Operations.RangeScan.RangeScanCreate : OperationBase`1<IScanTypeExt> {
    [CompilerGeneratedAttribute]
private bool <KeyOnly>k__BackingField;
    public bool RequiresVBucketId { get; }
    public OpCode OpCode { get; }
    private bool KeyOnly { get; public set; }
    protected bool SupportsJsonDataType { get; }
    public virtual bool get_RequiresVBucketId();
    public virtual OpCode get_OpCode();
    [CompilerGeneratedAttribute]
private bool get_KeyOnly();
    [CompilerGeneratedAttribute]
public void set_KeyOnly(bool value);
    protected virtual void WriteExtras(OperationBuilder builder);
    protected virtual void WriteKey(OperationBuilder builder);
    protected virtual bool get_SupportsJsonDataType();
    protected virtual void WriteBody(OperationBuilder builder);
}
internal class Couchbase.Core.IO.Operations.Replace`1 : MutationOperationBase`1<T> {
    public OpCode OpCode { get; }
    protected bool SupportsRequestCompression { get; }
    internal Replace`1(string bucketName, string key);
    public virtual OpCode get_OpCode();
    protected virtual bool get_SupportsRequestCompression();
}
internal class Couchbase.Core.IO.Operations.ReplicaRead`1 : OperationBase`1<T> {
    public OpCode OpCode { get; }
    public ReplicaRead`1(string key, short replicaIndex);
    public virtual OpCode get_OpCode();
    protected virtual void WriteExtras(OperationBuilder builder);
    protected virtual void WriteFramingExtras(OperationBuilder builder);
    protected virtual void WriteBody(OperationBuilder builder);
}
[FlagsAttribute]
public enum Couchbase.Core.IO.Operations.RequestFramingExtraType : Enum {
    public int value__;
    public static RequestFramingExtraType DurabilityRequirements;
}
[FlagsAttribute]
public enum Couchbase.Core.IO.Operations.ResponseFramingExtraType : Enum {
    public int value__;
    public static ResponseFramingExtraType ServerDuration;
}
public enum Couchbase.Core.IO.Operations.ResponseStatus : Enum {
    public int value__;
    public static ResponseStatus None;
    public static ResponseStatus UnknownError;
    public static ResponseStatus Failure;
    public static ResponseStatus CircuitBreakerOpen;
    public static ResponseStatus Success;
    public static ResponseStatus KeyNotFound;
    public static ResponseStatus KeyExists;
    public static ResponseStatus ValueTooLarge;
    public static ResponseStatus InvalidArguments;
    public static ResponseStatus ItemNotStored;
    public static ResponseStatus IncrDecrOnNonNumericValue;
    public static ResponseStatus VBucketBelongsToAnotherServer;
    public static ResponseStatus BucketNotConnected;
    public static ResponseStatus Locked;
    public static ResponseStatus AuthStale;
    public static ResponseStatus AuthenticationError;
    public static ResponseStatus AuthenticationContinue;
    public static ResponseStatus InvalidRange;
    public static ResponseStatus Rollback;
    public static ResponseStatus Eaccess;
    public static ResponseStatus NotInitialized;
    public static ResponseStatus UnknownCommand;
    public static ResponseStatus OutOfMemory;
    public static ResponseStatus NotSupported;
    public static ResponseStatus InternalError;
    public static ResponseStatus Busy;
    public static ResponseStatus TemporaryFailure;
    public static ResponseStatus ClientFailure;
    public static ResponseStatus OperationTimeout;
    public static ResponseStatus NoReplicasFound;
    public static ResponseStatus NodeUnavailable;
    public static ResponseStatus TransportFailure;
    public static ResponseStatus DocumentMutationLost;
    public static ResponseStatus DocumentMutationDetected;
    public static ResponseStatus SubDocPathNotFound;
    public static ResponseStatus SubDocPathMismatch;
    public static ResponseStatus SubDocPathInvalid;
    public static ResponseStatus SubDocPathTooBig;
    public static ResponseStatus SubDocDocTooDeep;
    public static ResponseStatus SubDocCannotInsert;
    public static ResponseStatus SubDocDocNotJson;
    public static ResponseStatus SubDocNumRange;
    public static ResponseStatus SubDocDeltaRange;
    public static ResponseStatus SubDocPathExists;
    public static ResponseStatus SubDocValueTooDeep;
    public static ResponseStatus SubDocInvalidCombo;
    public static ResponseStatus SubDocMultiPathFailure;
    public static ResponseStatus SubDocSuccessDeletedDocument;
    public static ResponseStatus SubDocXattrInvalidFlagCombo;
    public static ResponseStatus SubDocXattrInvalidKeyCombo;
    public static ResponseStatus SubdocXattrUnknownMacro;
    public static ResponseStatus SubdocXattrUnknownVattr;
    public static ResponseStatus SubdocXattrCantModifyVattr;
    public static ResponseStatus SubdocMultiPathFailureDeleted;
    public static ResponseStatus SubdocInvalidXattrOrder;
    public static ResponseStatus UnknownCollection;
    public static ResponseStatus UnknownScope;
    public static ResponseStatus DurabilityInvalidLevel;
    public static ResponseStatus DurabilityImpossible;
    public static ResponseStatus SyncWriteInProgress;
    public static ResponseStatus SyncWriteAmbiguous;
    public static ResponseStatus SyncWriteReCommitInProgress;
    public static ResponseStatus RangeScanCanceled;
    public static ResponseStatus NoCollectionsManifest;
    public static ResponseStatus RateLimitedNetworkIngress;
    public static ResponseStatus RateLimitedNetworkEgress;
    public static ResponseStatus RateLimitedMaxConnections;
    public static ResponseStatus RateLimitedMaxCommands;
    public static ResponseStatus ScopeSizeLimitExceeded;
    public static ResponseStatus RangeScanMore;
    public static ResponseStatus RangeScanComplete;
    public static ResponseStatus EConfigOnly;
    public static ResponseStatus DocumentNotLocked;
    public static ResponseStatus Cancelled;
}
[ExtensionAttribute]
internal static class Couchbase.Core.IO.Operations.ResponseStatusExtensions : object {
    [ExtensionAttribute]
internal static bool SuccessOrContinue(ResponseStatus status);
    [ExtensionAttribute]
internal static bool Failure(ResponseStatus status, OpCode opcode);
}
internal static class Couchbase.Core.IO.Operations.SequenceGenerator : object {
    private static Random Random;
    private static int _sequenceId;
    private static SequenceGenerator();
    public static UInt32 GetNext();
    public static void Reset();
    public static ulong GetRandomLong();
}
internal enum Couchbase.Core.IO.Operations.ServerFeatures : Enum {
    public short value__;
    public static ServerFeatures Datatype;
    public static ServerFeatures TcpNoDelay;
    public static ServerFeatures MutationSeqno;
    public static ServerFeatures TcpDelay;
    public static ServerFeatures SubdocXAttributes;
    public static ServerFeatures XError;
    public static ServerFeatures SelectBucket;
    public static ServerFeatures SnappyCompression;
    public static ServerFeatures ServerDuration;
    public static ServerFeatures AlternateRequestSupport;
    public static ServerFeatures SynchronousReplication;
    public static ServerFeatures Collections;
    public static ServerFeatures UnorderedExecution;
    public static ServerFeatures CreateAsDeleted;
    public static ServerFeatures PreserveTtl;
    public static ServerFeatures JSON;
    public static ServerFeatures SubDocReplicaRead;
    public static ServerFeatures ClustermapChangeNotificationBrief;
    public static ServerFeatures Duplex;
    public static ServerFeatures GetClusterConfigWithKnownVersion;
    public static ServerFeatures SnappyEverywhere;
    public static ServerFeatures ClustermapChangeNotification;
    public static ServerFeatures DedupeNotMyVbucketClustermap;
}
internal class Couchbase.Core.IO.Operations.Set`1 : MutationOperationBase`1<T> {
    public OpCode OpCode { get; }
    protected bool SupportsRequestCompression { get; }
    internal Set`1(string bucketName, string key);
    public virtual OpCode get_OpCode();
    protected virtual bool get_SupportsRequestCompression();
}
[ObsoleteAttribute("This class is not required and will be removed in a future release.")]
public class Couchbase.Core.IO.Operations.SubDocument.DocumentFragment`1 : OperationResult {
    private ITypeSerializerProvider _sourceTypeSerializerProvider;
    [CompilerGeneratedAttribute]
private UInt32 <Expiry>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<OperationSpec> <Value>k__BackingField;
    public ITypeSerializer Serializer { get; }
    public UInt32 Expiry { get; public set; }
    [ObsoleteAttribute("For backwards compatibility with regular K/V and Document API internals. Do not use.")]
private TDocument Couchbase.Core.IO.Operations.IOperationResult<TDocument>.Content { get; }
    internal IList`1<OperationSpec> Value { get; internal set; }
    public DocumentFragment`1(ITypeSerializerProvider sourceTypeSerializerProvider);
    public sealed virtual ITypeSerializer get_Serializer();
    [CompilerGeneratedAttribute]
public sealed virtual UInt32 get_Expiry();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Expiry(UInt32 value);
    public sealed virtual TContent Content(string path);
    public sealed virtual TContent Content(int index);
    public sealed virtual object Content(string path);
    public sealed virtual object Content(int index);
    public sealed virtual bool Exists(string path);
    public sealed virtual int Count();
    public sealed virtual ResponseStatus OpStatus(string path);
    public sealed virtual ResponseStatus OpStatus(int index);
    private sealed virtual override TDocument Couchbase.Core.IO.Operations.IOperationResult<TDocument>.get_Content();
    [CompilerGeneratedAttribute]
internal IList`1<OperationSpec> get_Value();
    [CompilerGeneratedAttribute]
internal void set_Value(IList`1<OperationSpec> value);
}
[ObsoleteAttribute("This interface is not required and will be removed in a future release.")]
public interface Couchbase.Core.IO.Operations.SubDocument.IDocumentFragment {
    public abstract virtual TContent Content(string path);
    public abstract virtual TContent Content(int index);
    public abstract virtual object Content(string path);
    public abstract virtual object Content(int index);
    public abstract virtual bool Exists(string path);
    public abstract virtual int Count();
    public abstract virtual ResponseStatus OpStatus(string path);
    public abstract virtual ResponseStatus OpStatus(int index);
}
[ObsoleteAttribute("This interface is not required and will be removed in a future release.")]
public interface Couchbase.Core.IO.Operations.SubDocument.IDocumentFragment`1 {
    public UInt32 Expiry { get; public set; }
    public abstract virtual UInt32 get_Expiry();
    public abstract virtual void set_Expiry(UInt32 value);
}
[ObsoleteAttribute("This interface is not required and will be removed in a future release.")]
public interface Couchbase.Core.IO.Operations.SubDocument.ILookupInBuilder`1 {
    public abstract virtual ILookupInBuilder`1<TDocument> Get(string path);
    public abstract virtual ILookupInBuilder`1<TDocument> Get(string path, SubdocPathFlags pathFlags, SubdocDocFlags docFlags);
    public abstract virtual ILookupInBuilder`1<TDocument> Exists(string path);
    public abstract virtual ILookupInBuilder`1<TDocument> Exists(string path, SubdocPathFlags pathFlags, SubdocDocFlags docFlags);
    public abstract virtual ILookupInBuilder`1<TDocument> GetCount(string path);
    public abstract virtual ILookupInBuilder`1<TDocument> GetCount(string path, SubdocPathFlags pathFlags, SubdocDocFlags docFlags);
    public abstract virtual ILookupInBuilder`1<TDocument> WithTimeout(TimeSpan timeout);
}
[ObsoleteAttribute("This interface is not required and will be removed in a future release.")]
public interface Couchbase.Core.IO.Operations.SubDocument.IMutateInBuilder`1 {
    public ulong Cas { get; }
    public TimeSpan Expiry { get; }
    public PersistTo PersistTo { get; }
    public ReplicateTo ReplicateTo { get; }
    public abstract virtual ulong get_Cas();
    public abstract virtual TimeSpan get_Expiry();
    public abstract virtual PersistTo get_PersistTo();
    public abstract virtual ReplicateTo get_ReplicateTo();
    public abstract virtual IMutateInBuilder`1<TDocument> Insert(string path, object value, bool createParents);
    public abstract virtual IMutateInBuilder`1<TDocument> Insert(string path, object value, SubdocPathFlags pathFlags, SubdocDocFlags docFlags);
    public abstract virtual IMutateInBuilder`1<TDocument> Upsert(string path, object value, bool createParents);
    public abstract virtual IMutateInBuilder`1<TDocument> Upsert(string path, object value, SubdocPathFlags pathFlags, SubdocDocFlags docFlags);
    public abstract virtual IMutateInBuilder`1<TDocument> Replace(string path, object value);
    public abstract virtual IMutateInBuilder`1<TDocument> Replace(string path, object value, SubdocPathFlags pathFlags, SubdocDocFlags docFlags);
    public abstract virtual IMutateInBuilder`1<TDocument> Remove(string path);
    public abstract virtual IMutateInBuilder`1<TDocument> Remove(string path, SubdocPathFlags pathFlags, SubdocDocFlags docFlags);
    public abstract virtual IMutateInBuilder`1<TDocument> ArrayAppend(object value, bool createParents);
    public abstract virtual IMutateInBuilder`1<TDocument> ArrayAppend(bool createParents, Object[] values);
    public abstract virtual IMutateInBuilder`1<TDocument> ArrayAppend(string path, object value, bool createParents);
    public abstract virtual IMutateInBuilder`1<TDocument> ArrayAppend(string path, object value, SubdocPathFlags pathFlags, SubdocDocFlags docFlags);
    public abstract virtual IMutateInBuilder`1<TDocument> ArrayAppend(string path, bool createParents, Object[] values);
    public abstract virtual IMutateInBuilder`1<TDocument> ArrayAppend(string path, SubdocPathFlags pathFlags, SubdocDocFlags docFlags, Object[] values);
    public abstract virtual IMutateInBuilder`1<TDocument> ArrayPrepend(object value, bool createParents);
    public abstract virtual IMutateInBuilder`1<TDocument> ArrayPrepend(bool createParents, Object[] values);
    public abstract virtual IMutateInBuilder`1<TDocument> ArrayPrepend(string path, object value, bool createParents);
    public abstract virtual IMutateInBuilder`1<TDocument> ArrayPrepend(string path, object value, SubdocPathFlags pathFlags, SubdocDocFlags docFlags);
    public abstract virtual IMutateInBuilder`1<TDocument> ArrayPrepend(string path, bool createParents, Object[] values);
    public abstract virtual IMutateInBuilder`1<TDocument> ArrayPrepend(string path, SubdocPathFlags pathFlags, SubdocDocFlags docFlags, Object[] values);
    public abstract virtual IMutateInBuilder`1<TDocument> ArrayInsert(string path, object value);
    public abstract virtual IMutateInBuilder`1<TDocument> ArrayInsert(string path, object value, SubdocPathFlags pathFlags, SubdocDocFlags docFlags);
    public abstract virtual IMutateInBuilder`1<TDocument> ArrayInsert(string path, Object[] values);
    public abstract virtual IMutateInBuilder`1<TDocument> ArrayInsert(string path, SubdocPathFlags pathFlags, SubdocDocFlags docFlags, Object[] values);
    public abstract virtual IMutateInBuilder`1<TDocument> ArrayAddUnique(object value, bool createParents);
    public abstract virtual IMutateInBuilder`1<TDocument> ArrayAddUnique(string path, object value, bool createParents);
    public abstract virtual IMutateInBuilder`1<TDocument> ArrayAddUnique(string path, object value, SubdocPathFlags pathFlags, SubdocDocFlags docFlags);
    public abstract virtual IMutateInBuilder`1<TDocument> Counter(string path, long delta, bool createParents);
    public abstract virtual IMutateInBuilder`1<TDocument> Counter(string path, long delta, SubdocPathFlags pathFlags, SubdocDocFlags docFlags);
    public abstract virtual IMutateInBuilder`1<TDocument> WithExpiry(TimeSpan expiry);
    public abstract virtual IMutateInBuilder`1<TDocument> WithCas(long cas);
    public abstract virtual IMutateInBuilder`1<TDocument> WithCas(ulong cas);
    public abstract virtual IMutateInBuilder`1<TDocument> WithDurability(PersistTo persistTo);
    public abstract virtual IMutateInBuilder`1<TDocument> WithDurability(ReplicateTo replicateTo);
    public abstract virtual IMutateInBuilder`1<TDocument> WithDurability(PersistTo persistTo, ReplicateTo replicateTo);
    public abstract virtual IMutateInBuilder`1<TDocument> WithTimeout(TimeSpan timeout);
}
[ObsoleteAttribute("This interface is not required and will be removed in a future release.")]
public interface Couchbase.Core.IO.Operations.SubDocument.ISubDocBuilder`1 {
    public string Key { get; }
    public int Count { get; }
    public Nullable`1<TimeSpan> Timeout { get; }
    public abstract virtual IDocumentFragment`1<TDocument> Execute();
    public abstract virtual Task`1<IDocumentFragment`1<TDocument>> ExecuteAsync();
    public abstract virtual string get_Key();
    public abstract virtual int get_Count();
    public abstract virtual Nullable`1<TimeSpan> get_Timeout();
}
[ObsoleteAttribute("This class is not required and will be removed in a future release.")]
public class Couchbase.Core.IO.Operations.SubDocument.LookupInBuilder`1 : object {
    private ConcurrentQueue`1<OperationSpec> _commands;
    private Func`1<ITypeSerializer> _serializer;
    private ITypeSerializer _cachedSerializer;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Timeout>k__BackingField;
    public ITypeSerializer Serializer { get; }
    public string Key { get; internal set; }
    public int Count { get; }
    public Nullable`1<TimeSpan> Timeout { get; private set; }
    internal LookupInBuilder`1(Func`1<ITypeSerializer> serializer, string key);
    public sealed virtual ITypeSerializer get_Serializer();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Key();
    [CompilerGeneratedAttribute]
internal void set_Key(string value);
    public sealed virtual int get_Count();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TimeSpan> get_Timeout();
    [CompilerGeneratedAttribute]
private void set_Timeout(Nullable`1<TimeSpan> value);
    public sealed virtual ILookupInBuilder`1<TDocument> Get(string path);
    public sealed virtual ILookupInBuilder`1<TDocument> Get(string path, SubdocPathFlags pathFlags, SubdocDocFlags docFlags);
    public sealed virtual ILookupInBuilder`1<TDocument> Exists(string path);
    public sealed virtual ILookupInBuilder`1<TDocument> Exists(string path, SubdocPathFlags pathFlags, SubdocDocFlags docFlags);
    public sealed virtual ILookupInBuilder`1<TDocument> GetCount(string path);
    public sealed virtual ILookupInBuilder`1<TDocument> GetCount(string path, SubdocPathFlags pathFlags, SubdocDocFlags docFlags);
    public sealed virtual IDocumentFragment`1<TDocument> Execute();
    public sealed virtual Task`1<IDocumentFragment`1<TDocument>> ExecuteAsync();
    private sealed virtual override IEnumerator`1<OperationSpec> System.Collections.Generic.IEnumerable<Couchbase.Core.IO.Operations.SubDocument.OperationSpec>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual bool Equals(LookupInBuilder`1<TDocument> other);
    public sealed virtual ILookupInBuilder`1<TDocument> WithTimeout(TimeSpan timeout);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Couchbase.Core.IO.Operations.SubDocument.MultiLookup`1 : OperationBase`1<T> {
    [CompilerGeneratedAttribute]
private ReadOnlyCollection`1<LookupInSpec> <LookupCommands>k__BackingField;
    [CompilerGeneratedAttribute]
private SubdocDocFlags <DocFlags>k__BackingField;
    public ReadOnlyCollection`1<LookupInSpec> LookupCommands { get; }
    public SubdocDocFlags DocFlags { get; public set; }
    public OpCode OpCode { get; }
    public MultiLookup`1(string key, IEnumerable`1<LookupInSpec> specs, Nullable`1<short> replicaIndex);
    [CompilerGeneratedAttribute]
public ReadOnlyCollection`1<LookupInSpec> get_LookupCommands();
    [CompilerGeneratedAttribute]
public SubdocDocFlags get_DocFlags();
    [CompilerGeneratedAttribute]
public void set_DocFlags(SubdocDocFlags value);
    protected virtual void WriteExtras(OperationBuilder builder);
    protected virtual void WriteFramingExtras(OperationBuilder builder);
    protected virtual void WriteBody(OperationBuilder builder);
    public virtual OpCode get_OpCode();
    public IDisposable ParseCommandValues();
    public sealed virtual bool Equals(MultiLookup`1<T> other);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Couchbase.Core.IO.Operations.SubDocument.MultiMutation`1 : OperationBase`1<T> {
    [CompilerGeneratedAttribute]
private ReadOnlyCollection`1<MutateInSpec> <MutateCommands>k__BackingField;
    [CompilerGeneratedAttribute]
private DurabilityLevel <DurabilityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <DurabilityTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private SubdocDocFlags <DocFlags>k__BackingField;
    public ReadOnlyCollection`1<MutateInSpec> MutateCommands { get; }
    public DurabilityLevel DurabilityLevel { get; public set; }
    public Nullable`1<TimeSpan> DurabilityTimeout { get; public set; }
    public SubdocDocFlags DocFlags { get; public set; }
    public bool IsReadOnly { get; }
    public OpCode OpCode { get; }
    public MultiMutation`1(string key, IEnumerable`1<MutateInSpec> specs);
    [CompilerGeneratedAttribute]
public ReadOnlyCollection`1<MutateInSpec> get_MutateCommands();
    [CompilerGeneratedAttribute]
public DurabilityLevel get_DurabilityLevel();
    [CompilerGeneratedAttribute]
public void set_DurabilityLevel(DurabilityLevel value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_DurabilityTimeout();
    [CompilerGeneratedAttribute]
public void set_DurabilityTimeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public SubdocDocFlags get_DocFlags();
    [CompilerGeneratedAttribute]
public void set_DocFlags(SubdocDocFlags value);
    public virtual bool get_IsReadOnly();
    protected virtual void WriteExtras(OperationBuilder builder);
    protected virtual void WriteFramingExtras(OperationBuilder builder);
    protected virtual void WriteBody(OperationBuilder builder);
    [NullableContextAttribute("0")]
protected virtual void ReadExtras(ReadOnlySpan`1<byte> buffer);
    public IDisposable ParseCommandValues();
    public virtual OpCode get_OpCode();
    public sealed virtual bool Equals(MultiMutation`1<T> other);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Couchbase.Core.IO.Operations.SubDocument.OperationSpec : object {
    private string _path;
    internal static int MaxPathLength;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OriginalIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private OpCode <OpCode>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [NullableAttribute("0")]
[CompilerGeneratedAttribute]
private ReadOnlyMemory`1<byte> <Bytes>k__BackingField;
    [CompilerGeneratedAttribute]
private SubdocPathFlags <PathFlags>k__BackingField;
    [CompilerGeneratedAttribute]
private SubdocDocFlags <DocFlags>k__BackingField;
    [CompilerGeneratedAttribute]
private ResponseStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RemoveBrackets>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ValueIsJson>k__BackingField;
    [CompilerGeneratedAttribute]
private static XattrFirstComparer <ByXattr>k__BackingField;
    public string Path { get; internal set; }
    internal Nullable`1<int> OriginalIndex { get; internal set; }
    public OpCode OpCode { get; internal set; }
    [NullableAttribute("2")]
public object Value { get; internal set; }
    [NullableAttribute("0")]
internal ReadOnlyMemory`1<byte> Bytes { get; internal set; }
    public SubdocPathFlags PathFlags { get; internal set; }
    internal SubdocDocFlags DocFlags { get; internal set; }
    internal ResponseStatus Status { get; internal set; }
    internal bool RemoveBrackets { get; internal set; }
    internal bool ValueIsJson { get; internal set; }
    internal static XattrFirstComparer ByXattr { get; }
    private static OperationSpec();
    public string get_Path();
    internal void set_Path(string value);
    [CompilerGeneratedAttribute]
internal Nullable`1<int> get_OriginalIndex();
    [CompilerGeneratedAttribute]
internal void set_OriginalIndex(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public OpCode get_OpCode();
    [CompilerGeneratedAttribute]
internal void set_OpCode(OpCode value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public object get_Value();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_Value(object value);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal ReadOnlyMemory`1<byte> get_Bytes();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal void set_Bytes(ReadOnlyMemory`1<byte> value);
    [CompilerGeneratedAttribute]
public SubdocPathFlags get_PathFlags();
    [CompilerGeneratedAttribute]
internal void set_PathFlags(SubdocPathFlags value);
    [CompilerGeneratedAttribute]
internal SubdocDocFlags get_DocFlags();
    [CompilerGeneratedAttribute]
internal void set_DocFlags(SubdocDocFlags value);
    [CompilerGeneratedAttribute]
internal ResponseStatus get_Status();
    [CompilerGeneratedAttribute]
internal void set_Status(ResponseStatus value);
    [CompilerGeneratedAttribute]
internal bool get_RemoveBrackets();
    [CompilerGeneratedAttribute]
internal void set_RemoveBrackets(bool value);
    [CompilerGeneratedAttribute]
internal bool get_ValueIsJson();
    [CompilerGeneratedAttribute]
internal void set_ValueIsJson(bool value);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(object x, object y);
    public sealed virtual int GetHashCode(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    [CompilerGeneratedAttribute]
internal static XattrFirstComparer get_ByXattr();
}
internal class Couchbase.Core.IO.Operations.Touch : MutationOperationBase {
    public OpCode OpCode { get; }
    internal static void WriteExpiry(OperationBuilder builder, UInt32 expires);
    internal static bool TryReadNewExpiry(ReadOnlySpan`1<byte> buffer, int extrasLength, int extrasOffset, UInt32& expiry);
    protected virtual void WriteExtras(OperationBuilder builder);
    protected virtual void WriteBody(OperationBuilder builder);
    protected virtual void ReadExtras(ReadOnlySpan`1<byte> buffer);
    public virtual OpCode get_OpCode();
}
internal class Couchbase.Core.IO.Operations.Unlock : OperationBase {
    public bool IsReadOnly { get; }
    public OpCode OpCode { get; }
    public virtual bool get_IsReadOnly();
    public virtual OpCode get_OpCode();
}
[ExtensionAttribute]
internal static class Couchbase.Core.IO.ResponseStatusExtensions : object {
    [ExtensionAttribute]
public static RetryReason ResolveRetryReason(ResponseStatus status);
    [ExtensionAttribute]
public static bool IsRetriable(ResponseStatus status, IOperation op);
    [ExtensionAttribute]
public static Exception CreateException(ResponseStatus status, IOperation op, IBucket bucket);
    [ExtensionAttribute]
public static Exception CreateException(ResponseStatus status, IOperation op, string bucketName);
    [ExtensionAttribute]
public static Exception CreateException(ResponseStatus status, KeyValueErrorContext ctx, IOperation op);
    private static SubDocException SubDocPathException(KeyValueErrorContext ctx, IOperation op);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiresUnreferencedCodeAttribute("The DefaultSerializer uses Newtonsoft.Json which requires unreferenced code and is incompatible with trimming.")]
[RequiresDynamicCodeAttribute("The DefaultSerializer uses Newtonsoft.Json which requires dynamic code and is incompatible with AOT.")]
internal class Couchbase.Core.IO.Serializers.DefaultFallbackTypeSerializerProvider : object {
    [NullableAttribute("2")]
private static DefaultFallbackTypeSerializerProvider _instance;
    public static DefaultFallbackTypeSerializerProvider Instance { get; }
    public ITypeSerializer Serializer { get; }
    public static DefaultFallbackTypeSerializerProvider get_Instance();
    public sealed virtual ITypeSerializer get_Serializer();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiresUnreferencedCodeAttribute("The DefaultSerializer uses Newtonsoft.Json which requires unreferenced code and is incompatible with trimming.")]
[RequiresDynamicCodeAttribute("The DefaultSerializer uses Newtonsoft.Json which requires dynamic code and is incompatible with AOT.")]
public class Couchbase.Core.IO.Serializers.DefaultJsonStreamReader : object {
    private JsonTextReader _reader;
    [CompilerGeneratedAttribute]
private JsonSerializer <Deserializer>k__BackingField;
    public JsonSerializer Deserializer { get; }
    [NullableAttribute("2")]
public Type ValueType { get; }
    [NullableAttribute("2")]
public object Value { get; }
    public int Depth { get; }
    public DefaultJsonStreamReader(Stream stream, JsonSerializer deserializer);
    [CompilerGeneratedAttribute]
public JsonSerializer get_Deserializer();
    [NullableContextAttribute("2")]
public sealed virtual Type get_ValueType();
    [NullableContextAttribute("2")]
public sealed virtual object get_Value();
    public sealed virtual int get_Depth();
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Serializers.DefaultJsonStreamReader/<InitializeAsync>d__11")]
public sealed virtual Task`1<bool> InitializeAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Serializers.DefaultJsonStreamReader/<ReadToNextAttributeAsync>d__12")]
public sealed virtual Task`1<string> ReadToNextAttributeAsync(CancellationToken cancellationToken);
    public sealed virtual Task`1<T> ReadObjectAsync(CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("Couchbase.Core.IO.Serializers.DefaultJsonStreamReader/<ReadArrayAsync>d__14`1")]
public sealed virtual IAsyncEnumerable`1<T> ReadArrayAsync(Func`3<IJsonStreamReader, CancellationToken, Task`1<T>> readElement, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Serializers.DefaultJsonStreamReader/<ReadTokenAsync>d__15")]
public sealed virtual Task`1<IJsonToken> ReadTokenAsync(CancellationToken cancellationToken);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Core.IO.Serializers.DefaultSerializer : object {
    public static string UnreferencedCodeMessage;
    public static string RequiresDynamicCodeMessage;
    [NullableAttribute("2")]
private static DefaultSerializer _instance;
    private JsonSerializerSettings _serializationSettings;
    private JsonSerializerSettings _deserializationSettings;
    [NullableAttribute("2")]
private DeserializationOptions _deserializationOptions;
    private JsonSerializer _serializer;
    private JsonSerializer _deserializer;
    private static SupportedDeserializationOptions StaticSupportedDeserializationOptions;
    [CompilerGeneratedAttribute]
private JsonSerializerSettings <EffectiveDeserializationSettings>k__BackingField;
    internal static DefaultSerializer Instance { get; }
    public SupportedDeserializationOptions SupportedDeserializationOptions { get; }
    public JsonSerializerSettings SerializerSettings { get; private set; }
    public JsonSerializerSettings DeserializationSettings { get; private set; }
    [NullableAttribute("2")]
public DeserializationOptions DeserializationOptions { get; public set; }
    internal JsonSerializerSettings EffectiveDeserializationSettings { get; internal set; }
    [RequiresUnreferencedCodeAttribute("The DefaultSerializer uses Newtonsoft.Json which requires unreferenced code and is incompatible with trimming.")]
[RequiresDynamicCodeAttribute("The DefaultSerializer uses Newtonsoft.Json which requires dynamic code and is incompatible with AOT.")]
public DefaultSerializer(JsonSerializerSettings deserializationSettings, JsonSerializerSettings serializerSettings);
    private static DefaultSerializer();
    [RequiresUnreferencedCodeAttribute("The DefaultSerializer uses Newtonsoft.Json which requires unreferenced code and is incompatible with trimming.")]
[RequiresDynamicCodeAttribute("The DefaultSerializer uses Newtonsoft.Json which requires dynamic code and is incompatible with AOT.")]
internal static DefaultSerializer get_Instance();
    [RequiresUnreferencedCodeAttribute("The DefaultSerializer uses Newtonsoft.Json which requires unreferenced code and is incompatible with trimming.")]
[RequiresDynamicCodeAttribute("The DefaultSerializer uses Newtonsoft.Json which requires dynamic code and is incompatible with AOT.")]
private static IContractResolver GetDefaultContractResolver();
    public sealed virtual SupportedDeserializationOptions get_SupportedDeserializationOptions();
    public JsonSerializerSettings get_SerializerSettings();
    private void set_SerializerSettings(JsonSerializerSettings value);
    public JsonSerializerSettings get_DeserializationSettings();
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
private void set_DeserializationSettings(JsonSerializerSettings value);
    [NullableContextAttribute("2")]
public sealed virtual DeserializationOptions get_DeserializationOptions();
    [NullableContextAttribute("2")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public sealed virtual void set_DeserializationOptions(DeserializationOptions value);
    [CompilerGeneratedAttribute]
internal JsonSerializerSettings get_EffectiveDeserializationSettings();
    [CompilerGeneratedAttribute]
internal void set_EffectiveDeserializationSettings(JsonSerializerSettings value);
    [NullableContextAttribute("2")]
[UnconditionalSuppressMessageAttribute("Aot", "IL3050")]
public sealed virtual T Deserialize(ReadOnlyMemory`1<byte> buffer);
    public sealed virtual ValueTask`1<T> DeserializeAsync(Stream stream, CancellationToken cancellationToken);
    public sealed virtual void Serialize(Stream stream, object obj);
    public sealed virtual ValueTask SerializeAsync(Stream stream, object obj, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public sealed virtual T Deserialize(Stream stream);
    public sealed virtual string GetMemberName(MemberInfo member);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("Aot", "IL3050")]
public sealed virtual IJsonStreamReader CreateJsonStreamReader(Stream stream);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("Aot", "IL3050")]
public sealed virtual IProjectionBuilder CreateProjectionBuilder(ILogger logger);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
protected internal virtual JsonSerializerSettings GetDeserializationSettings(JsonSerializerSettings baseSettings, DeserializationOptions options);
}
public class Couchbase.Core.IO.Serializers.DeserializationOptions : object {
    [CompilerGeneratedAttribute]
private ICustomObjectCreator <CustomObjectCreator>k__BackingField;
    public bool HasSettings { get; }
    public ICustomObjectCreator CustomObjectCreator { get; public set; }
    public bool get_HasSettings();
    [CompilerGeneratedAttribute]
public ICustomObjectCreator get_CustomObjectCreator();
    [CompilerGeneratedAttribute]
public void set_CustomObjectCreator(ICustomObjectCreator value);
}
public interface Couchbase.Core.IO.Serializers.ICustomObjectCreator {
    public abstract virtual bool CanCreateObject(Type type);
    public abstract virtual object CreateObject(Type type);
}
[NullableContextAttribute("1")]
public interface Couchbase.Core.IO.Serializers.IExtendedTypeSerializer {
    public SupportedDeserializationOptions SupportedDeserializationOptions { get; }
    [NullableAttribute("2")]
public DeserializationOptions DeserializationOptions { get; public set; }
    public abstract virtual SupportedDeserializationOptions get_SupportedDeserializationOptions();
    [NullableContextAttribute("2")]
public abstract virtual DeserializationOptions get_DeserializationOptions();
    [NullableContextAttribute("2")]
public abstract virtual void set_DeserializationOptions(DeserializationOptions value);
    public abstract virtual string GetMemberName(MemberInfo member);
}
[NullableContextAttribute("2")]
internal interface Couchbase.Core.IO.Serializers.IFallbackTypeSerializerProvider {
    public ITypeSerializer Serializer { get; }
    public abstract virtual ITypeSerializer get_Serializer();
}
[NullableContextAttribute("1")]
public interface Couchbase.Core.IO.Serializers.IJsonStreamReader {
    [NullableAttribute("2")]
public Type ValueType { get; }
    [NullableAttribute("2")]
public object Value { get; }
    public int Depth { get; }
    [NullableContextAttribute("2")]
public abstract virtual Type get_ValueType();
    [NullableContextAttribute("2")]
public abstract virtual object get_Value();
    public abstract virtual int get_Depth();
    public abstract virtual Task`1<bool> InitializeAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<string> ReadToNextAttributeAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<T> ReadObjectAsync(CancellationToken cancellationToken);
    public abstract virtual IAsyncEnumerable`1<T> ReadArrayAsync(Func`3<IJsonStreamReader, CancellationToken, Task`1<T>> readElement, CancellationToken cancellationToken);
    public abstract virtual Task`1<IJsonToken> ReadTokenAsync(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[DefaultMemberAttribute("Item")]
public interface Couchbase.Core.IO.Serializers.IJsonToken {
    [NullableAttribute("2")]
public IJsonToken Item { get; }
    public abstract virtual IJsonToken get_Item(string key);
    public abstract virtual T ToObject();
    public abstract virtual T Value();
    public abstract virtual object ToDynamic();
}
public interface Couchbase.Core.IO.Serializers.IProjectableTypeDeserializer {
    public abstract virtual IProjectionBuilder CreateProjectionBuilder(ILogger logger);
}
public interface Couchbase.Core.IO.Serializers.IProjectionBuilder {
    public abstract virtual void AddPath(string path, ReadOnlyMemory`1<byte> specValue);
    public abstract virtual void AddChildren(IReadOnlyCollection`1<string> children, ReadOnlyMemory`1<byte> specValue);
    public abstract virtual T ToObject();
    public abstract virtual T ToPrimitive();
}
public interface Couchbase.Core.IO.Serializers.IStreamingTypeDeserializer {
    [NullableContextAttribute("1")]
public abstract virtual IJsonStreamReader CreateJsonStreamReader(Stream stream);
}
[NullableContextAttribute("1")]
public interface Couchbase.Core.IO.Serializers.ITypeSerializer {
    [NullableContextAttribute("2")]
public abstract virtual T Deserialize(ReadOnlyMemory`1<byte> buffer);
    [NullableContextAttribute("2")]
public abstract virtual T Deserialize(Stream stream);
    public abstract virtual ValueTask`1<T> DeserializeAsync(Stream stream, CancellationToken cancellationToken);
    public abstract virtual void Serialize(Stream stream, object obj);
    public abstract virtual ValueTask SerializeAsync(Stream stream, object obj, CancellationToken cancellationToken);
    public virtual void Serialize(Stream stream, T obj);
    public virtual ValueTask SerializeAsync(Stream stream, T obj, CancellationToken cancellationToken);
}
public interface Couchbase.Core.IO.Serializers.ITypeSerializerProvider {
    public ITypeSerializer Serializer { get; }
    public abstract virtual ITypeSerializer get_Serializer();
}
internal class Couchbase.Core.IO.Serializers.JsonArrayPool : object {
    [CompilerGeneratedAttribute]
private static JsonArrayPool <Instance>k__BackingField;
    private ArrayPool`1<char> _pool;
    public static JsonArrayPool Instance { get; }
    public JsonArrayPool(ArrayPool`1<char> pool);
    private static JsonArrayPool();
    [CompilerGeneratedAttribute]
public static JsonArrayPool get_Instance();
    public sealed virtual Char[] Rent(int minimumLength);
    public sealed virtual void Return(Char[] array);
}
[RequiresUnreferencedCodeAttribute("The DefaultSerializer uses Newtonsoft.Json which requires unreferenced code and is incompatible with trimming.")]
internal class Couchbase.Core.IO.Serializers.JsonNetCustomObjectCreatorWrapper : JsonConverter {
    private ICustomObjectCreator _creator;
    public JsonNetCustomObjectCreatorWrapper(ICustomObjectCreator creator);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
[ExtensionAttribute]
public static class Couchbase.Core.IO.Serializers.JsonStreamDeserializerExtensions : object {
    [ExtensionAttribute]
public static IAsyncEnumerable`1<IJsonToken> ReadTokensAsync(IJsonStreamReader reader, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<T> ReadObjectsAsync(IJsonStreamReader reader, CancellationToken cancellationToken);
    private static Task`1<IJsonToken> ReadTokenElement(IJsonStreamReader reader, CancellationToken cancellationToken);
    private static Task`1<T> ReadObjectElement(IJsonStreamReader reader, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[RequiresUnreferencedCodeAttribute("The DefaultSerializer uses Newtonsoft.Json which requires unreferenced code and is incompatible with trimming.")]
[RequiresDynamicCodeAttribute("The DefaultSerializer uses Newtonsoft.Json which requires dynamic code and is incompatible with AOT.")]
internal class Couchbase.Core.IO.Serializers.NewtonsoftJsonToken : object {
    private JToken _token;
    private JsonSerializer _deserializer;
    [NullableAttribute("2")]
public IJsonToken Item { get; }
    public NewtonsoftJsonToken(JToken token, JsonSerializer deserializer);
    public sealed virtual IJsonToken get_Item(string key);
    public sealed virtual T ToObject();
    public sealed virtual T Value();
    public sealed virtual object ToDynamic();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiresUnreferencedCodeAttribute("The DefaultSerializer uses Newtonsoft.Json which requires unreferenced code and is incompatible with trimming.")]
[RequiresDynamicCodeAttribute("The DefaultSerializer uses Newtonsoft.Json which requires dynamic code and is incompatible with AOT.")]
internal class Couchbase.Core.IO.Serializers.NewtonsoftProjectionBuilder : object {
    private DefaultSerializer _serializer;
    private ILogger _logger;
    private JObject _root;
    public NewtonsoftProjectionBuilder(DefaultSerializer serializer, ILogger logger);
    [NullableContextAttribute("0")]
public sealed virtual void AddPath(string path, ReadOnlyMemory`1<byte> specValue);
    [NullableContextAttribute("0")]
public sealed virtual void AddChildren(IReadOnlyCollection`1<string> children, ReadOnlyMemory`1<byte> specValue);
    public sealed virtual T ToObject();
    public sealed virtual T ToPrimitive();
    private static void BuildPath(JToken token, string name, JToken content);
    private static JObject CreateProjection(string path, JToken content);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Serializers.NullFallbackTypeSerializerProvider : object {
    private static NullFallbackTypeSerializerProvider _instance;
    [NullableAttribute("1")]
public static NullFallbackTypeSerializerProvider Instance { get; }
    public ITypeSerializer Serializer { get; }
    [NullableContextAttribute("1")]
public static NullFallbackTypeSerializerProvider get_Instance();
    public sealed virtual ITypeSerializer get_Serializer();
}
public class Couchbase.Core.IO.Serializers.SupportedDeserializationOptions : object {
    [CompilerGeneratedAttribute]
private bool <CustomObjectCreator>k__BackingField;
    public bool CustomObjectCreator { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_CustomObjectCreator();
    [CompilerGeneratedAttribute]
public void set_CustomObjectCreator(bool value);
}
internal class Couchbase.Core.IO.Serializers.SystemTextJson.CamelCaseStringEnumConverter`1 : JsonStringEnumConverter`1<T> {
}
[ExtensionAttribute]
internal static class Couchbase.Core.IO.Serializers.SystemTextJson.ContextHelpers : object {
    [ExtensionAttribute]
public static JsonTypeInfo`1<T> GetTypeInfo(JsonSerializerContext context);
    [ExtensionAttribute]
public static bool TryGetTypeInfo(JsonSerializerContext context, JsonTypeInfo`1& typeInfo);
    [DoesNotReturnAttribute]
internal static void ThrowNoMetadataForType(Type type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Serializers.SystemTextJson.ContextSystemTextJsonProjectionBuilder : SystemTextJsonProjectionBuilder {
    private JsonSerializerContext _context;
    public ContextSystemTextJsonProjectionBuilder(JsonSerializerContext context, ILogger logger);
    [NullableContextAttribute("2")]
public virtual T ToObject();
    [NullableContextAttribute("2")]
public virtual T ToPrimitive();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Serializers.SystemTextJson.ContextSystemTextJsonSerializer : SystemTextJsonSerializer {
    [CompilerGeneratedAttribute]
private JsonSerializerContext <Context>k__BackingField;
    public JsonSerializerOptions Options { get; }
    public JsonSerializerContext Context { get; }
    public ContextSystemTextJsonSerializer(JsonSerializerContext context);
    public virtual JsonSerializerOptions get_Options();
    [CompilerGeneratedAttribute]
public JsonSerializerContext get_Context();
    [NullableContextAttribute("2")]
public virtual T Deserialize(ReadOnlyMemory`1<byte> buffer);
    [NullableContextAttribute("2")]
public virtual T Deserialize(Stream stream);
    public virtual ValueTask`1<T> DeserializeAsync(Stream stream, CancellationToken cancellationToken);
    public virtual void Serialize(Stream stream, object obj);
    public virtual ValueTask SerializeAsync(Stream stream, object obj, CancellationToken cancellationToken);
    public virtual void Serialize(Utf8JsonWriter writer, object obj);
    public virtual void Serialize(Stream stream, T obj);
    public virtual ValueTask SerializeAsync(Stream stream, T obj, CancellationToken cancellationToken);
    public virtual void Serialize(Utf8JsonWriter writer, T obj);
    public virtual IProjectionBuilder CreateProjectionBuilder(ILogger logger);
    public virtual IJsonStreamReader CreateJsonStreamReader(Stream stream);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Serializers.SystemTextJson.ContextSystemTextJsonStreamReader : SystemTextJsonStreamReader {
    private JsonSerializerContext _context;
    public ContextSystemTextJsonStreamReader(Stream stream, JsonSerializerContext context);
    [NullableContextAttribute("2")]
public virtual T Deserialize(JsonElement element);
    [NullableContextAttribute("2")]
protected virtual T Deserialize(Utf8JsonReader& reader);
    private JsonTypeInfo`1<T> GetTypeInfo();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Serializers.SystemTextJson.EnumDescriptionJsonConverter`1 : JsonConverter`1<T> {
    public virtual T Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, T value, JsonSerializerOptions options);
}
[ExtensionAttribute]
internal static class Couchbase.Core.IO.Serializers.SystemTextJson.JsonElementExtensions : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static bool TryGetValue(JsonElement element, T& value);
}
internal class Couchbase.Core.IO.Serializers.SystemTextJson.MillisecondsStringJsonConverter : JsonConverter`1<Nullable`1<TimeSpan>> {
    public virtual Nullable`1<TimeSpan> Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, Nullable`1<TimeSpan> value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Serializers.SystemTextJson.NullableEnumDescriptionJsonConverter`1 : JsonConverter`1<Nullable`1<T>> {
    public virtual Nullable`1<T> Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, Nullable`1<T> value, JsonSerializerOptions options);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Serializers.SystemTextJson.ReflectionSystemTextJsonProjectionBuilder : SystemTextJsonProjectionBuilder {
    [NullableContextAttribute("1")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonSerializerContext.")]
public ReflectionSystemTextJsonProjectionBuilder(JsonSerializerOptions options, ILogger logger);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050")]
public virtual T ToObject();
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050")]
public virtual T ToPrimitive();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Serializers.SystemTextJson.ReflectionSystemTextJsonSerializer : SystemTextJsonSerializer {
    internal static string SerializationUnreferencedCodeMessage;
    internal static string SerializationDynamicCodeMessage;
    [CompilerGeneratedAttribute]
private JsonSerializerOptions <Options>k__BackingField;
    public JsonSerializerOptions Options { get; }
    [RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonSerializerContext.")]
public ReflectionSystemTextJsonSerializer(bool increasedNewtonsoftCompatibility);
    [RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonSerializerContext.")]
public ReflectionSystemTextJsonSerializer(JsonSerializerOptions options);
    [CompilerGeneratedAttribute]
public virtual JsonSerializerOptions get_Options();
    [NullableContextAttribute("2")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050")]
public virtual T Deserialize(ReadOnlyMemory`1<byte> buffer);
    [NullableContextAttribute("2")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050")]
public virtual T Deserialize(Stream stream);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050")]
public virtual ValueTask`1<T> DeserializeAsync(Stream stream, CancellationToken cancellationToken);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050")]
public virtual void Serialize(Stream stream, object obj);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050")]
public virtual ValueTask SerializeAsync(Stream stream, object obj, CancellationToken cancellationToken);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050")]
public virtual void Serialize(Utf8JsonWriter writer, object obj);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050")]
public virtual void Serialize(Stream stream, T obj);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050")]
public virtual ValueTask SerializeAsync(Stream stream, T obj, CancellationToken cancellationToken);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050")]
public virtual void Serialize(Utf8JsonWriter writer, T obj);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050")]
public virtual IProjectionBuilder CreateProjectionBuilder(ILogger logger);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050")]
public virtual IJsonStreamReader CreateJsonStreamReader(Stream stream);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Serializers.SystemTextJson.ReflectionSystemTextJsonStreamReader : SystemTextJsonStreamReader {
    private JsonSerializerOptions _options;
    [RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonSerializerContext.")]
public ReflectionSystemTextJsonStreamReader(Stream stream, JsonSerializerOptions options);
    [NullableContextAttribute("2")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050")]
public virtual T Deserialize(JsonElement element);
    [NullableContextAttribute("2")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050")]
protected virtual T Deserialize(Utf8JsonReader& reader);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Couchbase.Core.IO.Serializers.SystemTextJson.SystemTextJsonProjectionBuilder : object {
    [CompilerGeneratedAttribute]
private JsonSerializerOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonObject <RootNode>k__BackingField;
    protected JsonSerializerOptions Options { get; }
    protected ILogger Logger { get; }
    protected JsonObject RootNode { get; }
    protected SystemTextJsonProjectionBuilder(JsonSerializerOptions options, ILogger logger);
    [CompilerGeneratedAttribute]
protected JsonSerializerOptions get_Options();
    [CompilerGeneratedAttribute]
protected ILogger get_Logger();
    [CompilerGeneratedAttribute]
protected JsonObject get_RootNode();
    [NullableContextAttribute("0")]
public sealed virtual void AddPath(string path, ReadOnlyMemory`1<byte> specValue);
    [NullableContextAttribute("0")]
public sealed virtual void AddChildren(IReadOnlyCollection`1<string> children, ReadOnlyMemory`1<byte> specValue);
    [NullableContextAttribute("2")]
public abstract virtual T ToObject();
    [NullableContextAttribute("2")]
public abstract virtual T ToPrimitive();
    private void AddChild(string path, JsonElement element);
    private void AddChild(JsonObject node, ReadOnlySpan`1<string> path, JsonElement element);
    private void AddChild(JsonObject node, string propertyName, JsonElement element);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Couchbase.Core.IO.Serializers.SystemTextJson.SystemTextJsonStreamReader : object {
    private static byte Utf8DecimalChar;
    private Stream _stream;
    private JsonReaderState _state;
    private JsonBuffer _buffer;
    private JsonTokenType _tokenType;
    private bool _tokenHasDecimalPlace;
    private PathState _pathState;
    [CompilerGeneratedAttribute]
private int <Depth>k__BackingField;
    public int Depth { get; private set; }
    [NullableAttribute("2")]
public Type ValueType { get; }
    [NullableAttribute("2")]
public object Value { get; }
    protected SystemTextJsonStreamReader(Stream stream, JsonSerializerOptions options);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Depth();
    [CompilerGeneratedAttribute]
private void set_Depth(int value);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Serializers.SystemTextJson.SystemTextJsonStreamReader/<InitializeAsync>d__12")]
public sealed virtual Task`1<bool> InitializeAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Serializers.SystemTextJson.SystemTextJsonStreamReader/<ReadToNextAttributeAsync>d__13")]
public sealed virtual Task`1<string> ReadToNextAttributeAsync(CancellationToken cancellationToken);
    private bool ReadToNextAttribute();
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Serializers.SystemTextJson.SystemTextJsonStreamReader/<ReadObjectAsync>d__15`1")]
public sealed virtual Task`1<T> ReadObjectAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
private bool ReadObject(T& obj);
    [AsyncIteratorStateMachineAttribute("Couchbase.Core.IO.Serializers.SystemTextJson.SystemTextJsonStreamReader/<ReadArrayAsync>d__17`1")]
public sealed virtual IAsyncEnumerable`1<T> ReadArrayAsync(Func`3<IJsonStreamReader, CancellationToken, Task`1<T>> readElement, CancellationToken cancellationToken);
    private bool ReadArrayStart();
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Serializers.SystemTextJson.SystemTextJsonStreamReader/<ReadTokenAsync>d__19")]
public sealed virtual Task`1<IJsonToken> ReadTokenAsync(CancellationToken cancellationToken);
    private bool ReadToken(Nullable`1& element);
    [NullableContextAttribute("2")]
public sealed virtual Type get_ValueType();
    [NullableContextAttribute("2")]
public sealed virtual object get_Value();
    private bool PeekNextToken(JsonTokenType& nextTokenType, Boolean& tokenHasDecimalPlace);
    private static bool ReaderHasDecimalPlace(Utf8JsonReader& reader);
    [NullableContextAttribute("2")]
public abstract virtual T Deserialize(JsonElement element);
    [NullableContextAttribute("2")]
protected abstract virtual T Deserialize(Utf8JsonReader& reader);
    public sealed virtual void Dispose();
    private void UpdateState(Utf8JsonReader& reader);
    [AsyncStateMachineAttribute("Couchbase.Core.IO.Serializers.SystemTextJson.SystemTextJsonStreamReader/<ReadFromStreamAsync>d__33")]
private Task ReadFromStreamAsync(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
internal class Couchbase.Core.IO.Serializers.SystemTextJson.SystemTextJsonToken : object {
    private JsonElement _element;
    private SystemTextJsonStreamReader _streamReader;
    [NullableAttribute("2")]
public IJsonToken Item { get; }
    public SystemTextJsonToken(JsonElement element, SystemTextJsonStreamReader streamReader);
    public sealed virtual IJsonToken get_Item(string key);
    public sealed virtual T ToObject();
    public sealed virtual T Value();
    public sealed virtual object ToDynamic();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
[JsonConverterAttribute("Couchbase.Core.IO.Serializers.SystemTextJson.TypeSerializerWrapperConverter")]
internal class Couchbase.Core.IO.Serializers.SystemTextJson.TypeSerializerWrapper : ValueType {
    [CompilerGeneratedAttribute]
private ITypeSerializer <Serializer>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    public ITypeSerializer Serializer { get; }
    [NullableAttribute("2")]
public object Value { get; }
    public TypeSerializerWrapper(ITypeSerializer serializer, object value);
    [CompilerGeneratedAttribute]
public ITypeSerializer get_Serializer();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public object get_Value();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.IO.Serializers.SystemTextJson.TypeSerializerWrapperConverter : JsonConverter`1<TypeSerializerWrapper> {
    public bool HandleNull { get; }
    public virtual bool get_HandleNull();
    public virtual TypeSerializerWrapper Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, TypeSerializerWrapper value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("2")]
public abstract class Couchbase.Core.IO.Serializers.SystemTextJsonSerializer : object {
    private static SupportedDeserializationOptions SupportedDeserializationOptionsStatic;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private DeserializationOptions <DeserializationOptions>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<MemberInfo, string> _memberNameCache;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`2<MemberInfo, string> _getMemberNameAction;
    public JsonSerializerOptions Options { get; }
    public SupportedDeserializationOptions SupportedDeserializationOptions { get; }
    [NullableAttribute("2")]
public DeserializationOptions DeserializationOptions { get; public set; }
    private static SystemTextJsonSerializer();
    public abstract virtual JsonSerializerOptions get_Options();
    public sealed virtual SupportedDeserializationOptions get_SupportedDeserializationOptions();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual DeserializationOptions get_DeserializationOptions();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual void set_DeserializationOptions(DeserializationOptions value);
    [NullableContextAttribute("2")]
public abstract virtual T Deserialize(ReadOnlyMemory`1<byte> buffer);
    [NullableContextAttribute("2")]
public abstract virtual T Deserialize(Stream stream);
    public abstract virtual ValueTask`1<T> DeserializeAsync(Stream stream, CancellationToken cancellationToken);
    public abstract virtual void Serialize(Stream stream, object obj);
    public abstract virtual ValueTask SerializeAsync(Stream stream, object obj, CancellationToken cancellationToken);
    public abstract virtual void Serialize(Utf8JsonWriter stream, object obj);
    public abstract virtual void Serialize(Stream stream, T obj);
    public abstract virtual ValueTask SerializeAsync(Stream stream, T obj, CancellationToken cancellationToken);
    public abstract virtual void Serialize(Utf8JsonWriter stream, T obj);
    public sealed virtual string GetMemberName(MemberInfo member);
    private string GetMemberNameCore(MemberInfo member);
    [RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonSerializerContext.")]
public static SystemTextJsonSerializer Create(bool increasedNewtonsoftCompatibility);
    [RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonSerializerContext.")]
public static SystemTextJsonSerializer Create(JsonSerializerOptions options);
    public static SystemTextJsonSerializer Create(JsonSerializerContext context);
    public abstract virtual IProjectionBuilder CreateProjectionBuilder(ILogger logger);
    public abstract virtual IJsonStreamReader CreateJsonStreamReader(Stream stream);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Couchbase.Core.IO.Serializers.TypeSerializerExtensions : object {
    [ExtensionAttribute]
[ObsoleteAttribute("Use the ReadOnlyMemory<byte> based overload of Deserialize<T>.")]
public static T Deserialize(ITypeSerializer typeSerializer, Byte[] buffer, int offset, int length);
    [ExtensionAttribute]
public static Byte[] Serialize(ITypeSerializer typeSerializer, object obj);
}
public class Couchbase.Core.IO.Serializers.UnixMillisecondsConverter : JsonConverter {
    private static DateTime UnixEpoch;
    private static UnixMillisecondsConverter();
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
public class Couchbase.Core.IO.SocketClosedException : CouchbaseException {
    public SocketClosedException(string message);
    public SocketClosedException(string message, Exception innerException);
}
[ExtensionAttribute]
internal static class Couchbase.Core.IO.SocketExtensions : object {
    [SupportedOSPlatformAttribute("windows")]
private static void SetKeepAlives(Socket socket, bool on, UInt32 time, UInt32 interval);
    [ExtensionAttribute]
internal static bool TrySetKeepAlives(Socket socket, bool on, UInt32 time, UInt32 interval, String& message);
    [ExtensionAttribute]
internal static bool TryEnableKeepAlives(Socket socket, bool enableKeepAlives, int keepAliveTimeInSeconds, int keepAliveIntervalInSeconds, String& message);
}
public abstract class Couchbase.Core.IO.Transcoders.BaseTranscoder : object {
    private long _mutationSentinal;
    [NullableAttribute("2")]
private ITypeSerializer _serializer;
    [NullableAttribute("2")]
public ITypeSerializer Serializer { get; public set; }
    internal void MakeImmutable();
    [NullableContextAttribute("1")]
public abstract virtual Flags GetFormat(T value);
    [NullableContextAttribute("1")]
public abstract virtual void Encode(Stream stream, T value, Flags flags, OpCode opcode);
    [NullableContextAttribute("2")]
public abstract virtual T Decode(ReadOnlyMemory`1<byte> buffer, Flags flags, OpCode opcode);
    [NullableContextAttribute("2")]
public sealed virtual ITypeSerializer get_Serializer();
    [NullableContextAttribute("2")]
public sealed virtual void set_Serializer(ITypeSerializer value);
    [NullableContextAttribute("2")]
public virtual T DeserializeAsJson(ReadOnlyMemory`1<byte> buffer);
    [NullableContextAttribute("1")]
public void SerializeAsJson(Stream stream, object value);
    [NullableContextAttribute("1")]
public void SerializeAsJson(Stream stream, T value);
    protected string DecodeString(ReadOnlySpan`1<byte> buffer);
    protected char DecodeChar(ReadOnlySpan`1<byte> buffer);
    protected Byte[] DecodeBinary(ReadOnlySpan`1<byte> buffer);
    protected void WriteHelper(Stream stream, ReadOnlySpan`1<byte> buffer);
}
[NullableContextAttribute("2")]
public interface Couchbase.Core.IO.Transcoders.ITypeTranscoder {
    public ITypeSerializer Serializer { get; public set; }
    [NullableContextAttribute("1")]
public abstract virtual Flags GetFormat(T value);
    [NullableContextAttribute("1")]
public abstract virtual void Encode(Stream stream, T value, Flags flags, OpCode opcode);
    public abstract virtual T Decode(ReadOnlyMemory`1<byte> buffer, Flags flags, OpCode opcode);
    public abstract virtual ITypeSerializer get_Serializer();
    public abstract virtual void set_Serializer(ITypeSerializer value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Core.IO.Transcoders.JsonTranscoder : BaseTranscoder {
    public JsonTranscoder(ITypeSerializer serializer);
    public virtual Flags GetFormat(T value);
    public virtual void Encode(Stream stream, T value, Flags flags, OpCode opcode);
    [NullableContextAttribute("0")]
public virtual T Decode(ReadOnlyMemory`1<byte> buffer, Flags flags, OpCode opcode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Core.IO.Transcoders.LegacyTranscoder : BaseTranscoder {
    public LegacyTranscoder(ITypeSerializer serializer);
    public virtual Flags GetFormat(T value);
    public virtual void Encode(Stream stream, T value, Flags flags, OpCode opcode);
    public virtual void Encode(Stream stream, T value, TypeCode typeCode, OpCode opcode);
    [NullableContextAttribute("0")]
public virtual T Decode(ReadOnlyMemory`1<byte> buffer, Flags flags, OpCode opcode);
    [NullableContextAttribute("2")]
public virtual T Decode(ReadOnlyMemory`1<byte> buffer, OpCode opcode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Core.IO.Transcoders.RawBinaryTranscoder : BaseTranscoder {
    public RawBinaryTranscoder(ITypeSerializer serializer);
    public virtual Flags GetFormat(T value);
    public virtual void Encode(Stream stream, T value, Flags flags, OpCode opcode);
    [NullableContextAttribute("0")]
public virtual T Decode(ReadOnlyMemory`1<byte> buffer, Flags flags, OpCode opcode);
}
public class Couchbase.Core.IO.Transcoders.RawJsonTranscoder : BaseTranscoder {
    private static int BufferSize;
    [NullableContextAttribute("1")]
public virtual Flags GetFormat(T value);
    [NullableContextAttribute("1")]
public virtual void Encode(Stream stream, T value, Flags flags, OpCode opcode);
    public virtual T Decode(ReadOnlyMemory`1<byte> buffer, Flags flags, OpCode opcode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Core.IO.Transcoders.RawStringTranscoder : BaseTranscoder {
    private static int BufferSize;
    public RawStringTranscoder(ITypeSerializer serializer);
    public virtual Flags GetFormat(T value);
    public virtual void Encode(Stream stream, T value, Flags flags, OpCode opcode);
    [NullableContextAttribute("0")]
public virtual T Decode(ReadOnlyMemory`1<byte> buffer, Flags flags, OpCode opcode);
}
public interface Couchbase.Core.IServer {
}
[NullableContextAttribute("1")]
internal interface Couchbase.Core.IServiceUriProvider {
    public abstract virtual Uri GetRandomAnalyticsUri();
    public abstract virtual Uri GetRandomQueryUri();
    public abstract virtual Uri GetRandomSearchUri();
    public abstract virtual Uri GetRandomManagementUri();
    public abstract virtual Uri GetRandomViewsUri(string bucketName);
    public abstract virtual Uri GetRandomEventingUri();
}
public class Couchbase.Core.Lifespan : ValueType {
    [CompilerGeneratedAttribute]
private DateTime <CreationTime>k__BackingField;
    private bool _timedOut;
    [CompilerGeneratedAttribute]
private UInt32 <Duration>k__BackingField;
    public DateTime CreationTime { get; public set; }
    public UInt32 Duration { get; public set; }
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public DateTime get_CreationTime();
    [CompilerGeneratedAttribute]
public void set_CreationTime(DateTime value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public UInt32 get_Duration();
    [CompilerGeneratedAttribute]
public void set_Duration(UInt32 value);
    public bool TimedOut();
}
[NullableContextAttribute("2")]
public interface Couchbase.Core.Logging.IRedactor {
    public abstract virtual object UserData(object message);
    public abstract virtual object MetaData(object message);
    public abstract virtual object SystemData(object message);
}
public static class Couchbase.Core.Logging.LoggingEvents : object {
    public static int QueryEvent;
    public static int KvEvent;
    public static int ViewEvent;
    public static int SearchEvent;
    public static int AnalyticsEvent;
    public static int AuthenticationEvent;
    public static int ConfigEvent;
    public static int BootstrapEvent;
    public static int ThresholdEvent;
    public static int ChannelConnectionEvent;
}
[IsReadOnlyAttribute]
internal class Couchbase.Core.Logging.Redacted`1 : ValueType {
    [NullableAttribute("1")]
private T _value;
    [NullableAttribute("2")]
private string _redactionType;
    [NullableContextAttribute("1")]
public Redacted`1(T value);
    [NullableContextAttribute("1")]
public Redacted`1(T value, string redactionType);
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("2")]
public sealed virtual string ToString(string format, IFormatProvider formatProvider);
    public sealed virtual bool TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider);
}
public enum Couchbase.Core.Logging.RedactionLevel : Enum {
    public int value__;
    public static RedactionLevel None;
    public static RedactionLevel Partial;
    public static RedactionLevel Full;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Core.Logging.Redactor : object {
    [NullableAttribute("1")]
private TypedRedactor _typedRedactor;
    public RedactionLevel RedactionLevel { get; }
    [NullableContextAttribute("1")]
public Redactor(TypedRedactor typedRedactor);
    public RedactionLevel get_RedactionLevel();
    public sealed virtual object UserData(object message);
    public sealed virtual object MetaData(object message);
    public sealed virtual object SystemData(object message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.Logging.TypedRedactor : object {
    private static string _user;
    private static string _meta;
    private static string _system;
    [CompilerGeneratedAttribute]
private RedactionLevel <RedactionLevel>k__BackingField;
    public RedactionLevel RedactionLevel { get; }
    public TypedRedactor(ClusterOptions options);
    internal TypedRedactor(RedactionLevel redactionLevel);
    [CompilerGeneratedAttribute]
public RedactionLevel get_RedactionLevel();
    public Redacted`1<T> UserData(T message);
    public Redacted`1<T> MetaData(T message);
    public Redacted`1<T> SystemData(T message);
    private Redacted`1<T> RedactMessage(T message, string redactionType);
    [DoesNotReturnAttribute]
private static void ThrowArgumentOutOfRangeException(RedactionLevel redactionLevel);
}
public class Couchbase.Core.MutationToken : object {
    [CompilerGeneratedAttribute]
private short <VBucketId>k__BackingField;
    [CompilerGeneratedAttribute]
private long <VBucketUuid>k__BackingField;
    [CompilerGeneratedAttribute]
private long <SequenceNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BucketRef>k__BackingField;
    public short VBucketId { get; }
    public long VBucketUuid { get; }
    public long SequenceNumber { get; }
    public string BucketRef { get; }
    internal bool IsSet { get; }
    public static MutationToken Empty { get; }
    public MutationToken(string bucketRef, short vBucketId, long vBucketUuid, long sequenceNumber);
    [CompilerGeneratedAttribute]
public short get_VBucketId();
    [CompilerGeneratedAttribute]
public long get_VBucketUuid();
    [CompilerGeneratedAttribute]
public long get_SequenceNumber();
    [CompilerGeneratedAttribute]
public string get_BucketRef();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    internal bool get_IsSet();
    public static MutationToken get_Empty();
}
[InterfaceStabilityAttribute("1")]
public class Couchbase.Core.RateLimiting.QuotaLimitedException : CouchbaseException {
    [CompilerGeneratedAttribute]
private QuotaLimitedReason <Reason>k__BackingField;
    public QuotaLimitedReason Reason { get; private set; }
    public QuotaLimitedException(QuotaLimitedReason reason);
    public QuotaLimitedException(QuotaLimitedReason reason, string message);
    public QuotaLimitedException(QuotaLimitedReason reason, IErrorContext ctx);
    [CompilerGeneratedAttribute]
public QuotaLimitedReason get_Reason();
    [CompilerGeneratedAttribute]
private void set_Reason(QuotaLimitedReason value);
}
[InterfaceStabilityAttribute("1")]
public enum Couchbase.Core.RateLimiting.QuotaLimitedReason : Enum {
    public int value__;
    public static QuotaLimitedReason MaximumNumberOfCollectionsReached;
    public static QuotaLimitedReason MaximumNumberOfIndexesReached;
    public static QuotaLimitedReason ScopeSizeLimitExceeded;
}
[InterfaceStabilityAttribute("1")]
public class Couchbase.Core.RateLimiting.RateLimitedException : CouchbaseException {
    [CompilerGeneratedAttribute]
private RateLimitedReason <Reason>k__BackingField;
    public RateLimitedReason Reason { get; }
    public RateLimitedException(RateLimitedReason reason, IErrorContext ctx);
    [CompilerGeneratedAttribute]
public RateLimitedReason get_Reason();
}
[InterfaceStabilityAttribute("1")]
public enum Couchbase.Core.RateLimiting.RateLimitedReason : Enum {
    public int value__;
    public static RateLimitedReason NetworkIngressRateLimitReached;
    public static RateLimitedReason NetworkEgressRateLimitReached;
    public static RateLimitedReason MaximumConnectionsReached;
    public static RateLimitedReason RequestRateLimitReached;
    public static RateLimitedReason ConcurrentRequestLimitReached;
}
public class Couchbase.Core.Retry.BestEffortRetryStrategy : object {
    private IBackoffCalculator _backoffCalculator;
    public BestEffortRetryStrategy(IBackoffCalculator calculator);
    public virtual RetryAction RetryAfter(IRequest request, RetryReason reason);
}
[IsReadOnlyAttribute]
public class Couchbase.Core.Retry.ControlledBackoff : ValueType {
    public sealed virtual Task Delay(IRequest request);
    public sealed virtual TimeSpan CalculateBackoff(IRequest request);
    internal static TimeSpan CalculateBackoffCore(IRequest request);
    public static ControlledBackoff Create();
}
[ExtensionAttribute]
public static class Couchbase.Core.Retry.ExceptionExtensions : object {
    [ExtensionAttribute]
public static RetryReason ResolveRetryReason(CouchbaseException e);
}
[IsReadOnlyAttribute]
public class Couchbase.Core.Retry.ExponentialBackoff : ValueType {
    private int _maxRetries;
    private int _delayMillis;
    private int _maxDelayMillis;
    public ExponentialBackoff(int maxRetries, int delayMillis, int maxDelayMillis);
    public sealed virtual Task Delay(IRequest request);
    public sealed virtual TimeSpan CalculateBackoff(IRequest request);
    public static ExponentialBackoff Create(int maxRetries, int delayMillis, int maxDelayMillis);
}
public class Couchbase.Core.Retry.FailFastRetryStrategy : object {
    public sealed virtual RetryAction RetryAfter(IRequest request, RetryReason reason);
}
public interface Couchbase.Core.Retry.IBackoffCalculator {
    public abstract virtual Task Delay(IRequest request);
    public abstract virtual TimeSpan CalculateBackoff(IRequest request);
}
[NullableContextAttribute("1")]
public interface Couchbase.Core.Retry.IRequest {
    public UInt32 Attempts { get; public set; }
    public bool Idempotent { get; }
    public List`1<RetryReason> RetryReasons { get; public set; }
    public IRetryStrategy RetryStrategy { get; public set; }
    public TimeSpan Timeout { get; public set; }
    public TimeSpan Elapsed { get; }
    public CancellationToken Token { get; public set; }
    [NullableAttribute("2")]
public string ClientContextId { get; public set; }
    [NullableAttribute("2")]
public string Statement { get; public set; }
    [ObsoleteAttribute("Unused, will be removed in a future version.")]
public IValueRecorder Recorder { get; public set; }
    public abstract virtual UInt32 get_Attempts();
    public abstract virtual void set_Attempts(UInt32 value);
    public abstract virtual bool get_Idempotent();
    public abstract virtual List`1<RetryReason> get_RetryReasons();
    public abstract virtual void set_RetryReasons(List`1<RetryReason> value);
    public abstract virtual IRetryStrategy get_RetryStrategy();
    public abstract virtual void set_RetryStrategy(IRetryStrategy value);
    public abstract virtual TimeSpan get_Timeout();
    public abstract virtual void set_Timeout(TimeSpan value);
    public abstract virtual TimeSpan get_Elapsed();
    public abstract virtual CancellationToken get_Token();
    [ObsoleteAttribute]
public abstract virtual void set_Token(CancellationToken value);
    [NullableContextAttribute("2")]
public abstract virtual string get_ClientContextId();
    [NullableContextAttribute("2")]
public abstract virtual void set_ClientContextId(string value);
    [NullableContextAttribute("2")]
public abstract virtual string get_Statement();
    [NullableContextAttribute("2")]
public abstract virtual void set_Statement(string value);
    public abstract virtual void StopRecording();
    [NullableContextAttribute("2")]
public virtual void StopRecording(Type errorType);
    public abstract virtual IValueRecorder get_Recorder();
    public abstract virtual void set_Recorder(IValueRecorder value);
    public abstract virtual void LogOrphaned();
}
public interface Couchbase.Core.Retry.IRetryable {
}
internal interface Couchbase.Core.Retry.IRetryOrchestrator {
    public abstract virtual Task`1<T> RetryAsync(Func`1<Task`1<T>> send, IRequest request);
    public abstract virtual Task`1<ResponseStatus> RetryAsync(BucketBase bucket, IOperation operation, CancellationTokenPair tokenPair);
}
public interface Couchbase.Core.Retry.IRetryStrategy {
    public abstract virtual RetryAction RetryAfter(IRequest request, RetryReason reason);
}
internal class Couchbase.Core.Retry.Query.QueryRequest : RequestBase {
    [CompilerGeneratedAttribute]
private QueryOptions <Options>k__BackingField;
    public QueryOptions Options { get; public set; }
    public bool Idempotent { get; }
    [CompilerGeneratedAttribute]
public QueryOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(QueryOptions value);
    public virtual bool get_Idempotent();
    public sealed virtual void StopRecording();
    [NullableContextAttribute("2")]
public sealed virtual void StopRecording(Type errorType);
}
[ExtensionAttribute]
public static class Couchbase.Core.Retry.Query.RequestExtensions : object {
    [ExtensionAttribute]
public static void IncrementAttempts(IRequest request, RetryReason reason);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class Couchbase.Core.Retry.RequestBase : object {
    private protected Stopwatch Stopwatch;
    private IRetryStrategy _retryStrategy;
    [CompilerGeneratedAttribute]
private UInt32 <Attempts>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientContextId>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private List`1<RetryReason> <RetryReasons>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Statement>k__BackingField;
    public UInt32 Attempts { get; public set; }
    [NullableAttribute("1")]
public IRetryStrategy RetryStrategy { get; public set; }
    public TimeSpan Timeout { get; public set; }
    public TimeSpan Elapsed { get; }
    public CancellationToken Token { get; public set; }
    public string ClientContextId { get; public set; }
    public bool Idempotent { get; }
    [NullableAttribute("1")]
public List`1<RetryReason> RetryReasons { get; public set; }
    public string Statement { get; public set; }
    [NullableAttribute("1")]
[ObsoleteAttribute("Unused, will be removed in a future version.")]
public IValueRecorder Recorder { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual UInt32 get_Attempts();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Attempts(UInt32 value);
    [NullableContextAttribute("1")]
public sealed virtual IRetryStrategy get_RetryStrategy();
    [NullableContextAttribute("1")]
public sealed virtual void set_RetryStrategy(IRetryStrategy value);
    [CompilerGeneratedAttribute]
public sealed virtual TimeSpan get_Timeout();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Timeout(TimeSpan value);
    public sealed virtual TimeSpan get_Elapsed();
    [CompilerGeneratedAttribute]
public sealed virtual CancellationToken get_Token();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Token(CancellationToken value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ClientContextId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ClientContextId(string value);
    public abstract virtual bool get_Idempotent();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual List`1<RetryReason> get_RetryReasons();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual void set_RetryReasons(List`1<RetryReason> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Statement();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Statement(string value);
    public abstract virtual void StopRecording();
    public virtual void StopRecording(Type errorType);
    [NullableContextAttribute("1")]
public sealed virtual IValueRecorder get_Recorder();
    [NullableContextAttribute("1")]
public sealed virtual void set_Recorder(IValueRecorder value);
    public sealed virtual void LogOrphaned();
}
public class Couchbase.Core.Retry.RetryAction : object {
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <DurationValue>k__BackingField;
    public Nullable`1<TimeSpan> DurationValue { get; }
    public bool Retry { get; }
    public RetryAction(Nullable`1<TimeSpan> duration);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_DurationValue();
    public static RetryAction Duration(Nullable`1<TimeSpan> duration);
    public bool get_Retry();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.Retry.RetryOrchestrator : object {
    private ILogger`1<RetryOrchestrator> _logger;
    private TypedRedactor _redactor;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`6<ILogger, UInt32, Redacted`1<string>, RetryReason, Nullable`1<ConfigVersion>, Exception> __LogRetryDueToAlwaysRetryCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`5<ILogger, UInt32, Redacted`1<string>, RetryReason, Exception> __LogRetryDueToDurationCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`5<ILogger, string, Redacted`1<string>, RetryReason, Exception> __LogRetryQueryCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`2<ILogger, Exception> __LogRefreshingCollectionIdCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`2<ILogger, Exception> __LogErrorGettingCollectionIdCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`3<ILogger, long, Exception> __LogRequestCanceledCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`6<ILogger, string, double, double, long, Exception> __LogQueryDurationsCallback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private static Action`5<ILogger, string, double, long, Exception> __LogCappedQueryDurationCallback;
    public RetryOrchestrator(ILogger`1<RetryOrchestrator> logger, TypedRedactor redactor);
    private static RetryOrchestrator();
    [AsyncStateMachineAttribute("Couchbase.Core.Retry.RetryOrchestrator/<RetryAsync>d__3`1")]
public sealed virtual Task`1<T> RetryAsync(Func`1<Task`1<T>> send, IRequest request);
    [AsyncStateMachineAttribute("Couchbase.Core.Retry.RetryOrchestrator/<RetryAsync>d__4")]
public sealed virtual Task`1<ResponseStatus> RetryAsync(BucketBase bucket, IOperation operation, CancellationTokenPair tokenPair);
    [AsyncStateMachineAttribute("Couchbase.Core.Retry.RetryOrchestrator/<RefreshCollectionId>d__5")]
protected internal virtual Task`1<bool> RefreshCollectionId(BucketBase bucket, IOperation op);
    [AsyncStateMachineAttribute("Couchbase.Core.Retry.RetryOrchestrator/<TryPrepareOperationForRetryAndWaitAsync>d__6")]
private Task`1<bool> TryPrepareOperationForRetryAndWaitAsync(IOperation operation, RetryReason reason, CancellationTokenPair tokenPair);
    private static void ResetAndIncrementAttempts(IOperation operation, RetryReason reason);
    private static KeyValueErrorContext CreateKeyValueErrorContext(BucketBase bucket, IOperation operation, ResponseStatus status);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogRetryDueToAlwaysRetry(UInt32 opaque, Redacted`1<string> key, RetryReason reason, Nullable`1<ConfigVersion> configVersion);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogRetryDueToDuration(UInt32 opaque, Redacted`1<string> key, RetryReason reason);
    [NullableContextAttribute("2")]
[LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogRetryQuery(string clientContextId, Redacted`1<string> statement, RetryReason reason);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogRefreshingCollectionId(Exception ex);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogErrorGettingCollectionId(Exception ex);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogRequestCanceled(long elapsed);
    [NullableContextAttribute("2")]
[LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogQueryDurations(string clientContextId, double timeout, double duration, long elapsed);
    [NullableContextAttribute("2")]
[LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.6.12309")]
private void LogCappedQueryDuration(string clientContextId, double duration, long elapsed);
}
[InterfaceStabilityAttribute("2")]
[JsonConverterAttribute("System.Text.Json.Serialization.JsonStringEnumConverter`1<Couchbase.Core.Retry.RetryReason>")]
public enum Couchbase.Core.Retry.RetryReason : Enum {
    public int value__;
    public static RetryReason NoRetry;
    public static RetryReason Unknown;
    public static RetryReason SocketNotAvailable;
    public static RetryReason ServiceNotAvailable;
    public static RetryReason NodeNotAvailable;
    public static RetryReason KvNotMyVBucket;
    [ObsoleteAttribute("Use ScopeNotFound or CollectionNotFound.")]
public static RetryReason KvCollectionOutdated;
    public static RetryReason KvErrorMapRetryIndicated;
    public static RetryReason KvLocked;
    public static RetryReason KvTemporaryFailure;
    public static RetryReason KvSyncWriteInProgress;
    public static RetryReason KvSyncWriteReCommitInProgress;
    public static RetryReason ServiceResponseCodeIndicated;
    public static RetryReason SocketClosedWhileInFlight;
    public static RetryReason CircuitBreakerOpen;
    public static RetryReason QueryPreparedStatementFailure;
    public static RetryReason QueryIndexNotFound;
    public static RetryReason AnalyticsTemporaryFailure;
    public static RetryReason SearchTooManyRequests;
    public static RetryReason ViewsTemporaryFailure;
    public static RetryReason ViewsNoActivePartition;
    public static RetryReason SendQueueFull;
    public static RetryReason CollectionNotFound;
    public static RetryReason ScopeNotFound;
    public static RetryReason QueryErrorRetryable;
}
[ExtensionAttribute]
public static class Couchbase.Core.Retry.RetryReasonExtensions : object {
    [ExtensionAttribute]
public static bool AllowsNonIdempotentRetries(RetryReason reason);
    [ExtensionAttribute]
public static bool AlwaysRetry(RetryReason reason);
}
internal class Couchbase.Core.Retry.Search.FtsSearchRequest : RequestBase {
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private ISearchQuery <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private SearchOptions <Options>k__BackingField;
    public bool Idempotent { get; }
    public string Index { get; public set; }
    public ISearchQuery Query { get; public set; }
    public SearchOptions Options { get; public set; }
    public virtual bool get_Idempotent();
    [CompilerGeneratedAttribute]
public string get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(string value);
    [CompilerGeneratedAttribute]
public ISearchQuery get_Query();
    [CompilerGeneratedAttribute]
public void set_Query(ISearchQuery value);
    [CompilerGeneratedAttribute]
public SearchOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(SearchOptions value);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public string ToJson();
    internal JObject ToJObject();
    public sealed virtual void StopRecording();
    [NullableContextAttribute("2")]
public sealed virtual void StopRecording(Type errorType);
}
[ExtensionAttribute]
internal static class Couchbase.Core.Retry.TimespanExtensions : object {
    [ExtensionAttribute]
public static TimeSpan CappedDuration(TimeSpan lifetime, TimeSpan duration, TimeSpan elapsed);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.ServerFeatureSet : object {
    [CompilerGeneratedAttribute]
private static ServerFeatureSet <Empty>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<ServerFeatures> <Features>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DataType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TcpNoDelay>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <MutationSeqno>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TcpDelay>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SubdocXAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <XError>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ServerDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SelectBucket>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SnappyCompression>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AlternateRequestSupport>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SynchronousReplication>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Collections>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UnorderedExecution>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CreateAsDeleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PreserveTtl>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Json>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SubDocReplicaRead>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ClustermapChangeNotificationBrief>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Duplex>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <GetClusterConfigWithKnownVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SnappyEverywhere>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ClustermapChangeNotification>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DedupeNotMyVbucketClustermap>k__BackingField;
    public static ServerFeatureSet Empty { get; }
    public IReadOnlyCollection`1<ServerFeatures> Features { get; }
    public bool DataType { get; private set; }
    public bool TcpNoDelay { get; private set; }
    public bool MutationSeqno { get; private set; }
    public bool TcpDelay { get; private set; }
    public bool SubdocXAttributes { get; private set; }
    public bool XError { get; private set; }
    public bool ServerDuration { get; private set; }
    public bool SelectBucket { get; private set; }
    public bool SnappyCompression { get; private set; }
    public bool AlternateRequestSupport { get; private set; }
    public bool SynchronousReplication { get; private set; }
    public bool Collections { get; private set; }
    public bool UnorderedExecution { get; private set; }
    public bool CreateAsDeleted { get; private set; }
    public bool PreserveTtl { get; private set; }
    public bool Json { get; private set; }
    public bool SubDocReplicaRead { get; private set; }
    public bool ClustermapChangeNotificationBrief { get; private set; }
    public bool Duplex { get; private set; }
    public bool GetClusterConfigWithKnownVersion { get; private set; }
    public bool SnappyEverywhere { get; private set; }
    public bool ClustermapChangeNotification { get; private set; }
    public bool DedupeNotMyVbucketClustermap { get; private set; }
    public ServerFeatureSet(ServerFeatures[] features);
    private static ServerFeatureSet();
    [CompilerGeneratedAttribute]
public static ServerFeatureSet get_Empty();
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<ServerFeatures> get_Features();
    [CompilerGeneratedAttribute]
public bool get_DataType();
    [CompilerGeneratedAttribute]
private void set_DataType(bool value);
    [CompilerGeneratedAttribute]
public bool get_TcpNoDelay();
    [CompilerGeneratedAttribute]
private void set_TcpNoDelay(bool value);
    [CompilerGeneratedAttribute]
public bool get_MutationSeqno();
    [CompilerGeneratedAttribute]
private void set_MutationSeqno(bool value);
    [CompilerGeneratedAttribute]
public bool get_TcpDelay();
    [CompilerGeneratedAttribute]
private void set_TcpDelay(bool value);
    [CompilerGeneratedAttribute]
public bool get_SubdocXAttributes();
    [CompilerGeneratedAttribute]
private void set_SubdocXAttributes(bool value);
    [CompilerGeneratedAttribute]
public bool get_XError();
    [CompilerGeneratedAttribute]
private void set_XError(bool value);
    [CompilerGeneratedAttribute]
public bool get_ServerDuration();
    [CompilerGeneratedAttribute]
private void set_ServerDuration(bool value);
    [CompilerGeneratedAttribute]
public bool get_SelectBucket();
    [CompilerGeneratedAttribute]
private void set_SelectBucket(bool value);
    [CompilerGeneratedAttribute]
public bool get_SnappyCompression();
    [CompilerGeneratedAttribute]
private void set_SnappyCompression(bool value);
    [CompilerGeneratedAttribute]
public bool get_AlternateRequestSupport();
    [CompilerGeneratedAttribute]
private void set_AlternateRequestSupport(bool value);
    [CompilerGeneratedAttribute]
public bool get_SynchronousReplication();
    [CompilerGeneratedAttribute]
private void set_SynchronousReplication(bool value);
    [CompilerGeneratedAttribute]
public bool get_Collections();
    [CompilerGeneratedAttribute]
private void set_Collections(bool value);
    [CompilerGeneratedAttribute]
public bool get_UnorderedExecution();
    [CompilerGeneratedAttribute]
private void set_UnorderedExecution(bool value);
    [CompilerGeneratedAttribute]
public bool get_CreateAsDeleted();
    [CompilerGeneratedAttribute]
private void set_CreateAsDeleted(bool value);
    [CompilerGeneratedAttribute]
public bool get_PreserveTtl();
    [CompilerGeneratedAttribute]
private void set_PreserveTtl(bool value);
    [CompilerGeneratedAttribute]
public bool get_Json();
    [CompilerGeneratedAttribute]
private void set_Json(bool value);
    [CompilerGeneratedAttribute]
public bool get_SubDocReplicaRead();
    [CompilerGeneratedAttribute]
private void set_SubDocReplicaRead(bool value);
    [CompilerGeneratedAttribute]
public bool get_ClustermapChangeNotificationBrief();
    [CompilerGeneratedAttribute]
private void set_ClustermapChangeNotificationBrief(bool value);
    [CompilerGeneratedAttribute]
public bool get_Duplex();
    [CompilerGeneratedAttribute]
private void set_Duplex(bool value);
    [CompilerGeneratedAttribute]
public bool get_GetClusterConfigWithKnownVersion();
    [CompilerGeneratedAttribute]
private void set_GetClusterConfigWithKnownVersion(bool value);
    [CompilerGeneratedAttribute]
public bool get_SnappyEverywhere();
    [CompilerGeneratedAttribute]
private void set_SnappyEverywhere(bool value);
    [CompilerGeneratedAttribute]
public bool get_ClustermapChangeNotification();
    [CompilerGeneratedAttribute]
private void set_ClustermapChangeNotification(bool value);
    [CompilerGeneratedAttribute]
public bool get_DedupeNotMyVbucketClustermap();
    [CompilerGeneratedAttribute]
private void set_DedupeNotMyVbucketClustermap(bool value);
    public bool Supports(ServerFeatures feature);
    private void ParseFeatures(IEnumerable`1<ServerFeatures> features);
    [NullableContextAttribute("2")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.ServiceUriProvider : object {
    private ClusterContext _clusterContext;
    public ServiceUriProvider(ClusterContext clusterContext);
    public sealed virtual Uri GetRandomAnalyticsUri();
    public sealed virtual Uri GetRandomQueryUri();
    public sealed virtual Uri GetRandomSearchUri();
    public sealed virtual Uri GetRandomManagementUri();
    public sealed virtual Uri GetRandomViewsUri(string bucketName);
    public sealed virtual Uri GetRandomEventingUri();
}
internal static class Couchbase.Core.Sharding.Crc32 : object {
    public static UInt32 ComputeHash(ReadOnlySpan`1<byte> bytes);
}
internal interface Couchbase.Core.Sharding.IKeyMapper {
    public ulong Rev { get; public set; }
    public abstract virtual IMappedNode MapKey(string key);
    public abstract virtual IMappedNode MapKey(string key, bool notMyVBucket);
    public abstract virtual IMappedNode MapKey(Byte[] key);
    public abstract virtual IMappedNode MapKey(Byte[] key, bool notMyVBucket);
    public abstract virtual ulong get_Rev();
    public abstract virtual void set_Rev(ulong value);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Core.Sharding.IVBucket {
    public Int16[] Replicas { get; }
    public short Index { get; }
    public short Primary { get; }
    public bool HasReplicas { get; }
    public string BucketName { get; }
    public abstract virtual Nullable`1<HostEndpointWithPort> LocateReplica(short index);
    public abstract virtual Int16[] get_Replicas();
    public abstract virtual short get_Index();
    public abstract virtual short get_Primary();
    public abstract virtual bool get_HasReplicas();
    public abstract virtual string get_BucketName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.Sharding.KetamaKeyMapper : object {
    private SortedDictionary`2<long, KetamaNode> _hashes;
    private Int64[] _sortedKeys;
    [CompilerGeneratedAttribute]
private ulong <Rev>k__BackingField;
    public ulong Rev { get; public set; }
    public KetamaKeyMapper(IEnumerable`1<HostEndpointWithPort> servers);
    public sealed virtual IMappedNode MapKey(string key);
    public sealed virtual IMappedNode MapKey(Byte[] key);
    public sealed virtual IMappedNode MapKey(string key, bool notMyVBucket);
    public sealed virtual IMappedNode MapKey(Byte[] key, bool notMyVBucket);
    public int FindIndex(long key);
    public long GetHash(string key);
    public long GetHash(Byte[] key);
    [MemberNotNullAttribute("_sortedKeys")]
public void Initialize(IEnumerable`1<KetamaNode> nodes);
    [CompilerGeneratedAttribute]
public sealed virtual ulong get_Rev();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Rev(ulong value);
}
internal class Couchbase.Core.Sharding.KetamaNode : object {
    [CompilerGeneratedAttribute]
private HostEndpointWithPort <Server>k__BackingField;
    public HostEndpointWithPort Server { get; }
    public ulong Rev { get; }
    public KetamaNode(HostEndpointWithPort server);
    [CompilerGeneratedAttribute]
public HostEndpointWithPort get_Server();
    private sealed virtual override Nullable`1<HostEndpointWithPort> Couchbase.Core.IMappedNode.LocatePrimary();
    public sealed virtual ulong get_Rev();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.Sharding.VBucket : object {
    private Int16[] _replicas;
    private VBucketServerMap _vBucketServerMap;
    private ILogger`1<VBucket> _logger;
    private ICollection`1<HostEndpointWithPort> _endPoints;
    private string _vbucketIdToString;
    [CompilerGeneratedAttribute]
private short <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private short <Primary>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Rev>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BucketName>k__BackingField;
    public Int16[] Replicas { get; }
    public short Index { get; }
    public short Primary { get; }
    public ulong Rev { get; internal set; }
    public bool HasReplicas { get; }
    public string BucketName { get; }
    public VBucket(ICollection`1<HostEndpointWithPort> endPoints, short index, short primary, Int16[] replicas, ulong rev, VBucketServerMap vBucketServerMap, string bucketName, ILogger`1<VBucket> logger, ConfigVersion configVersion);
    public sealed virtual Nullable`1<HostEndpointWithPort> LocatePrimary();
    public sealed virtual Nullable`1<HostEndpointWithPort> LocateReplica(short index);
    public sealed virtual Int16[] get_Replicas();
    [CompilerGeneratedAttribute]
public sealed virtual short get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual short get_Primary();
    [CompilerGeneratedAttribute]
public sealed virtual ulong get_Rev();
    [CompilerGeneratedAttribute]
internal void set_Rev(ulong value);
    public sealed virtual bool get_HasReplicas();
    [CompilerGeneratedAttribute]
public sealed virtual string get_BucketName();
    public virtual string ToString();
}
[DefaultMemberAttribute("Item")]
internal class Couchbase.Core.Sharding.VBucketKeyMapper : object {
    private short _mask;
    private IVBucketFactory _vBucketFactory;
    private Dictionary`2<short, IVBucket> _vBuckets;
    private Dictionary`2<short, IVBucket> _vForwardBuckets;
    private VBucketServerMap _vBucketServerMap;
    private ICollection`1<HostEndpointWithPort> _endPoints;
    private string _bucketName;
    private ConfigVersion _configVersion;
    [CompilerGeneratedAttribute]
private ulong <Rev>k__BackingField;
    public IVBucket Item { get; }
    public ulong Rev { get; public set; }
    public VBucketKeyMapper(BucketConfig config, VBucketServerMap vBucketServerMap, IVBucketFactory vBucketFactory);
    public IVBucket get_Item(short index);
    public sealed virtual IMappedNode MapKey(string key);
    public sealed virtual IMappedNode MapKey(string key, bool notMyVBucket);
    public sealed virtual IMappedNode MapKey(Byte[] key);
    public sealed virtual IMappedNode MapKey(Byte[] key, bool notMyVBucket);
    private bool HasForwardMap();
    public short GetIndex(string key);
    public short GetIndex(Byte[] key);
    private Dictionary`2<short, IVBucket> CreateVBucketMap();
    private Dictionary`2<short, IVBucket> CreateVBucketMapForwards();
    internal Dictionary`2<short, IVBucket> GetVBuckets();
    internal Dictionary`2<short, IVBucket> GetVBucketsForwards();
    [CompilerGeneratedAttribute]
public sealed virtual ulong get_Rev();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Rev(ulong value);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Couchbase.Core.Sharding.VBucketMapJsonConverter : JsonConverter`1<Int16[][]> {
    private static int ExpectedVBucketCount;
    public virtual Int16[][] Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    private Int16[] ReadInnerList(Utf8JsonReader& reader, Int32& expectedReplicaCount);
    public virtual void Write(Utf8JsonWriter writer, Int16[][] value, JsonSerializerOptions options);
}
[InterfaceStabilityAttribute("2")]
public static class Couchbase.Core.Sharding.VBucketMapper : object {
    public static short GetMask(int vBucketCount);
    [SkipLocalsInitAttribute]
public static short GetVBucketId(string key, short mask);
    public static short GetVBucketId(ReadOnlySpan`1<byte> keyBytes, int vBucketCount);
    public static short GetVBucketId(ReadOnlySpan`1<byte> keyBytes, short mask);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.Sharding.VBucketServerMap : object {
    [CompilerGeneratedAttribute]
private string <HashAlgorithm>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <ServerList>k__BackingField;
    [CompilerGeneratedAttribute]
private Int16[][] <VBucketMap>k__BackingField;
    [CompilerGeneratedAttribute]
private Int16[][] <VBucketMapForward>k__BackingField;
    [CompilerGeneratedAttribute]
private ReadOnlyCollection`1<HostEndpointWithPort> <EndPoints>k__BackingField;
    public string HashAlgorithm { get; }
    public int NumReplicas { get; }
    public String[] ServerList { get; }
    public Int16[][] VBucketMap { get; }
    public Int16[][] VBucketMapForward { get; }
    public ReadOnlyCollection`1<HostEndpointWithPort> EndPoints { get; }
    public VBucketServerMap(VBucketServerMapDto serverMapDto);
    [CompilerGeneratedAttribute]
public string get_HashAlgorithm();
    [CompilerGeneratedAttribute]
public int get_NumReplicas();
    [CompilerGeneratedAttribute]
public String[] get_ServerList();
    [CompilerGeneratedAttribute]
public Int16[][] get_VBucketMap();
    [CompilerGeneratedAttribute]
public Int16[][] get_VBucketMapForward();
    [CompilerGeneratedAttribute]
public ReadOnlyCollection`1<HostEndpointWithPort> get_EndPoints();
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(VBucketServerMap other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Core.Sharding.VBucketServerMapDto : object {
    [CompilerGeneratedAttribute]
private string <HashAlgorithm>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <ServerList>k__BackingField;
    [CompilerGeneratedAttribute]
private Int16[][] <VBucketMap>k__BackingField;
    [CompilerGeneratedAttribute]
private Int16[][] <VBucketMapForward>k__BackingField;
    [JsonPropertyNameAttribute("hashAlgorithm")]
public string HashAlgorithm { get; public set; }
    [JsonPropertyNameAttribute("numReplicas")]
public int NumReplicas { get; public set; }
    [JsonPropertyNameAttribute("serverList")]
public String[] ServerList { get; public set; }
    [JsonPropertyNameAttribute("vBucketMap")]
[JsonConverterAttribute("Couchbase.Core.Sharding.VBucketMapJsonConverter")]
public Int16[][] VBucketMap { get; public set; }
    [JsonPropertyNameAttribute("vBucketMapForward")]
[JsonConverterAttribute("Couchbase.Core.Sharding.VBucketMapJsonConverter")]
public Int16[][] VBucketMapForward { get; public set; }
    [CompilerGeneratedAttribute]
public string get_HashAlgorithm();
    [CompilerGeneratedAttribute]
public void set_HashAlgorithm(string value);
    [CompilerGeneratedAttribute]
public int get_NumReplicas();
    [CompilerGeneratedAttribute]
public void set_NumReplicas(int value);
    [CompilerGeneratedAttribute]
public String[] get_ServerList();
    [CompilerGeneratedAttribute]
public void set_ServerList(String[] value);
    [CompilerGeneratedAttribute]
public Int16[][] get_VBucketMap();
    [CompilerGeneratedAttribute]
public void set_VBucketMap(Int16[][] value);
    [CompilerGeneratedAttribute]
public Int16[][] get_VBucketMapForward();
    [CompilerGeneratedAttribute]
public void set_VBucketMapForward(Int16[][] value);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(VBucketServerMapDto other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
internal static class Couchbase.Core.Utils.Leb128 : object {
    public static int MaxLength;
    public static int Write(Span`1<byte> buffer, UInt32 value);
    private static int WriteSlow(Span`1<byte> buffer, UInt32 value);
    private static int WriteFast(Byte& buffer, UInt32 value);
    private static ulong Spread7BitGroupsIntoBytes(UInt32 value);
    public static ValueTuple`2<long, short> Read(ReadOnlySpan`1<byte> bytes);
    public static int WrittenSize(UInt32 value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Couchbase.Core.Utils.StringExtensions : object {
    [ExtensionAttribute]
public static string ToHexString(UInt32 opaque);
    [ExtensionAttribute]
public static string EscapeIfRequired(string value);
    [ExtensionAttribute]
public static bool Contains(string source, string value, StringComparison comparison);
    [ExtensionAttribute]
public static string ToStringInvariant(int num);
    [ExtensionAttribute]
public static string ToStringInvariant(UInt32 num);
    [ExtensionAttribute]
public static string ToStringInvariant(long num);
    [ExtensionAttribute]
public static string ToStringInvariant(ulong num);
    [ExtensionAttribute]
public static string ToStringInvariant(short num);
    [ExtensionAttribute]
public static string ToStringInvariant(double num);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Couchbase.Core.Version.ClusterVersion : ValueType {
    [CompilerGeneratedAttribute]
private Version <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Build>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Suffix>k__BackingField;
    public Version Version { get; }
    public int Build { get; }
    public string Suffix { get; }
    public ClusterVersion(Version version, int build, string suffix);
    [CompilerGeneratedAttribute]
public Version get_Version();
    [CompilerGeneratedAttribute]
public int get_Build();
    [CompilerGeneratedAttribute]
public string get_Suffix();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public void Deconstruct(Version& version, Int32& build);
    public void Deconstruct(Version& version, Int32& build, String& suffix);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ClusterVersion other);
    public virtual int GetHashCode();
    public sealed virtual int CompareTo(ClusterVersion other);
    public static bool op_Equality(ClusterVersion left, ClusterVersion right);
    public static bool op_Inequality(ClusterVersion left, ClusterVersion right);
    public static bool op_LessThan(ClusterVersion left, ClusterVersion right);
    public static bool op_GreaterThan(ClusterVersion left, ClusterVersion right);
    public static bool op_LessThanOrEqual(ClusterVersion left, ClusterVersion right);
    public static bool op_GreaterThanOrEqual(ClusterVersion left, ClusterVersion right);
    [NullableContextAttribute("1")]
public static ClusterVersion Parse(string versionString);
    [NullableContextAttribute("1")]
public static bool TryParse(string versionString, ClusterVersion& version);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Core.Version.ClusterVersionProvider : object {
    private ClusterContext _clusterContext;
    private ILogger`1<ClusterVersionProvider> _logger;
    private Nullable`1<ClusterVersion> _cachedVersion;
    public ClusterVersionProvider(ClusterContext clusterContext, ILogger`1<ClusterVersionProvider> logger);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Couchbase.Core.Version.ClusterVersionProvider/<GetVersionAsync>d__4")]
public sealed virtual ValueTask`1<Nullable`1<ClusterVersion>> GetVersionAsync();
    public sealed virtual void ClearCache();
    [AsyncStateMachineAttribute("Couchbase.Core.Version.ClusterVersionProvider/<GetVersionAsync>d__6")]
private Task`1<Nullable`1<ClusterVersion>> GetVersionAsync(IEnumerable`1<Uri> servers, HttpClient httpClient);
    [AsyncStateMachineAttribute("Couchbase.Core.Version.ClusterVersionProvider/<DownloadConfigAsync>d__7")]
protected virtual Task`1<Pools> DownloadConfigAsync(HttpClient httpClient, Uri server);
}
public interface Couchbase.Core.Version.IClusterVersionProvider {
    public abstract virtual ValueTask`1<Nullable`1<ClusterVersion>> GetVersionAsync();
    public abstract virtual void ClearCache();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.CouchbaseBucket : BucketBase {
    private IVBucketKeyMapperFactory _vBucketKeyMapperFactory;
    private LazyService`1<IViewClient> _viewClientLazy;
    private LazyService`1<IViewIndexManagerFactory> _viewManagerLazy;
    private LazyService`1<ICollectionManagerFactory> _collectionManagerLazy;
    private SemaphoreSlim _configMutex;
    [NullableAttribute("2")]
private IViewIndexManager _viewIndexManager;
    [NullableAttribute("2")]
private ICouchbaseCollectionManager _collectionManager;
    private ConfigPushHandler _configPushHandler;
    private Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _disposed;
    private object _currentConfigLock;
    private BucketConfig _tempConfig;
    public IViewIndexManager ViewIndexes { get; }
    public ICouchbaseCollectionManager Collections { get; }
    internal CouchbaseBucket(string name, ClusterContext context, IScopeFactory scopeFactory, IRetryOrchestrator retryOrchestrator, IVBucketKeyMapperFactory vBucketKeyMapperFactory, ILogger`1<CouchbaseBucket> logger, TypedRedactor redactor, IBootstrapperFactory bootstrapperFactory, IRequestTracer tracer, IOperationConfigurator operationConfigurator, IRetryStrategy retryStrategy, BucketConfig config, IConfigPushHandlerFactory configPushHandlerFactory);
    public virtual IViewIndexManager get_ViewIndexes();
    public virtual ICouchbaseCollectionManager get_Collections();
    [AsyncStateMachineAttribute("Couchbase.CouchbaseBucket/<ConfigUpdatedAsync>d__16")]
public virtual Task ConfigUpdatedAsync(BucketConfig newConfig);
    [AsyncStateMachineAttribute("Couchbase.CouchbaseBucket/<ForceConfigUpdateAsync>d__17")]
public virtual Task ForceConfigUpdateAsync();
    private Uri GetViewUri();
    [AsyncStateMachineAttribute("Couchbase.CouchbaseBucket/<ViewQueryAsync>d__19`2")]
public virtual Task`1<IViewResult`2<TKey, TValue>> ViewQueryAsync(string designDocument, string viewName, ViewOptions options);
    [AsyncStateMachineAttribute("Couchbase.CouchbaseBucket/<SendAsync>d__20")]
internal virtual Task`1<ResponseStatus> SendAsync(IOperation op, CancellationTokenPair tokenPair);
    private VBucket MapVBucket(IOperation op);
    [AsyncStateMachineAttribute("Couchbase.CouchbaseBucket/<BootstrapAsync>d__22")]
internal virtual Task BootstrapAsync(IClusterNode node);
    public void ProcessConfigPush(ConfigVersion configVersion);
    private void ClearErrors();
    public virtual void Dispose();
    public virtual ValueTask DisposeAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.CouchbaseException : Exception {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IErrorContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsReadOnly>k__BackingField;
    [NullableAttribute("2")]
public IErrorContext Context { get; public set; }
    internal bool IsReadOnly { get; internal set; }
    public CouchbaseException(IErrorContext context);
    public CouchbaseException(IErrorContext context, string message);
    public CouchbaseException(string message);
    public CouchbaseException(string message, Exception innerException);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public IErrorContext get_Context();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Context(IErrorContext value);
    [CompilerGeneratedAttribute]
internal bool get_IsReadOnly();
    [CompilerGeneratedAttribute]
internal void set_IsReadOnly(bool value);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Couchbase.CouchbaseException`1 : CouchbaseException {
    [NullableAttribute("2")]
public TContext Context { get; public set; }
    protected CouchbaseException`1(IErrorContext context);
    protected CouchbaseException`1(TContext context);
    protected CouchbaseException`1(string message);
    protected CouchbaseException`1(string message, Exception innerException);
    [NullableContextAttribute("2")]
public TContext get_Context();
    [NullableContextAttribute("2")]
public void set_Context(TContext value);
}
internal static class Couchbase.CStringParams : object {
    public static string KvConnectTimeout;
    public static string KvTimeout;
    public static string KvDurableTimeout;
    public static string ViewTimeout;
    public static string QueryTimeout;
    public static string AnalyticsTimeout;
    public static string SearchTimeout;
    public static string ManagementTimeout;
    public static string EnableTls;
    public static string EnableMutationTokens;
    public static string TcpKeepAliveTime;
    public static string TcpKeepAliveInterval;
    public static string EnableTcpKeepAlives;
    public static string ForceIpv4;
    public static string ConfigPollInterval;
    public static string ConfigPollFloorInterval;
    public static string ConfigIdleRedialTimeout;
    public static string NumKvConnections;
    public static string MaxKvConnections;
    public static string MaxHttpConnections;
    public static string IdleHttpConnectionTimeout;
    public static string Compression;
    public static string CompressionMinSize;
    public static string CompressionMinRatio;
    public static string NetworkResolution;
}
[NullableContextAttribute("1")]
public interface Couchbase.DataStructures.IPersistentDictionary`1 {
    public Task`1<int> CountAsync { get; }
    public Task`1<ICollection`1<string>> KeysAsync { get; }
    public Task`1<ICollection`1<TValue>> ValuesAsync { get; }
    public abstract virtual Task AddAsync(KeyValuePair`2<string, TValue> item);
    public abstract virtual Task ClearAsync();
    public abstract virtual Task`1<bool> ContainsAsync(KeyValuePair`2<string, TValue> item);
    public abstract virtual Task`1<bool> RemoveAsync(KeyValuePair`2<string, TValue> item);
    public abstract virtual Task`1<int> get_CountAsync();
    public abstract virtual Task AddAsync(string key, TValue value);
    public abstract virtual Task`1<bool> ContainsKeyAsync(string key);
    public abstract virtual Task`1<TValue> GetAsync(string key);
    public abstract virtual Task`1<bool> RemoveAsync(string key);
    public abstract virtual Task SetAsync(string key, TValue value);
    public abstract virtual Task`1<ICollection`1<string>> get_KeysAsync();
    public abstract virtual Task`1<ICollection`1<TValue>> get_ValuesAsync();
}
[NullableContextAttribute("1")]
public interface Couchbase.DataStructures.IPersistentList`1 {
    public Task`1<int> CountAsync { get; }
    public abstract virtual Task CopyToAsync(Array array, int index);
    public abstract virtual Task AddAsync(T item);
    public abstract virtual Task ClearAsync();
    public abstract virtual Task`1<bool> ContainsAsync(T item);
    public abstract virtual Task CopyToAsync(T[] array, int arrayIndex);
    public abstract virtual Task`1<bool> RemoveAsync(T item);
    public abstract virtual Task`1<int> get_CountAsync();
    public abstract virtual Task`1<int> IndexOfAsync(T item);
    public abstract virtual Task InsertAsync(int index, T item);
    public abstract virtual Task RemoveAtAsync(int index);
}
[NullableContextAttribute("1")]
public interface Couchbase.DataStructures.IPersistentQueue`1 {
    public Task`1<int> CountAsync { get; }
    [NullableContextAttribute("2")]
public abstract virtual T Dequeue();
    public abstract virtual Task`1<T> DequeueAsync();
    public abstract virtual void Enqueue(T item);
    public abstract virtual Task EnqueueAsync(T item);
    [NullableContextAttribute("2")]
public abstract virtual T Peek();
    public abstract virtual Task`1<T> PeekAsync();
    public abstract virtual void Clear();
    public abstract virtual Task ClearAsync();
    public abstract virtual Task`1<int> get_CountAsync();
}
[NullableContextAttribute("1")]
public interface Couchbase.DataStructures.IPersistentSet`1 {
    public Task`1<int> CountAsync { get; }
    public abstract virtual Task`1<bool> AddAsync(TValue item);
    public abstract virtual Task ExceptWithAsync(IEnumerable`1<TValue> other);
    public abstract virtual Task IntersectWithAsync(IEnumerable`1<TValue> other);
    public abstract virtual Task`1<bool> IsProperSubsetOfAsync(IEnumerable`1<TValue> other);
    public abstract virtual Task`1<bool> IsProperSupersetOfAsync(IEnumerable`1<TValue> other);
    public abstract virtual Task`1<bool> IsSubsetOfAsync(IEnumerable`1<TValue> other);
    public abstract virtual Task`1<bool> IsSupersetOfAsync(IEnumerable`1<TValue> other);
    public abstract virtual Task`1<bool> OverlapsAsync(IEnumerable`1<TValue> other);
    public abstract virtual Task`1<bool> SetEqualsAsync(IEnumerable`1<TValue> other);
    public abstract virtual Task SymmetricExceptWithAsync(IEnumerable`1<TValue> other);
    public abstract virtual Task UnionWithAsync(IEnumerable`1<TValue> other);
    public abstract virtual Task ClearAsync();
    public abstract virtual Task`1<bool> ContainsAsync(TValue item);
    public abstract virtual Task CopyToAsync(TValue[] array, int arrayIndex);
    public abstract virtual Task`1<bool> RemoveAsync(TValue item);
    public abstract virtual Task`1<int> get_CountAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class Couchbase.DataStructures.PersistentDictionary`1 : object {
    [NullableAttribute("2")]
private ILogger _logger;
    [NullableAttribute("2")]
private IRedactor _redactor;
    [CompilerGeneratedAttribute]
private ICouchbaseCollection <Collection>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DocId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <BackingStoreChecked>k__BackingField;
    private ICouchbaseCollection Collection { get; }
    private string DocId { get; }
    private bool BackingStoreChecked { get; private set; }
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public int Count { get; }
    public bool IsReadOnly { get; }
    [ObsoleteAttribute("This method is blocking; please use the async equivalent instead.")]
public TValue Item { get; public set; }
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public ICollection`1<string> Keys { get; }
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public ICollection`1<TValue> Values { get; }
    public Task`1<int> CountAsync { get; }
    public Task`1<ICollection`1<string>> KeysAsync { get; }
    public Task`1<ICollection`1<TValue>> ValuesAsync { get; }
    internal PersistentDictionary`1(ICouchbaseCollection collection, string docId, ILogger logger, IRedactor redactor);
    [CompilerGeneratedAttribute]
private ICouchbaseCollection get_Collection();
    [CompilerGeneratedAttribute]
private string get_DocId();
    [CompilerGeneratedAttribute]
private bool get_BackingStoreChecked();
    [CompilerGeneratedAttribute]
private void set_BackingStoreChecked(bool value);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentDictionary`1/<CreateBackingStoreAsync>d__13")]
private ValueTask CreateBackingStoreAsync();
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual IEnumerator`1<KeyValuePair`2<string, TValue>> GetEnumerator();
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [AsyncIteratorStateMachineAttribute("Couchbase.DataStructures.PersistentDictionary`1/<GetAsyncEnumerator>d__16")]
public sealed virtual IAsyncEnumerator`1<KeyValuePair`2<string, TValue>> GetAsyncEnumerator(CancellationToken cancellationToken);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual void Add(KeyValuePair`2<string, TValue> item);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual void Clear();
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual bool Contains(KeyValuePair`2<string, TValue> item);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual void CopyTo(KeyValuePair`2[] array, int arrayIndex);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual bool Remove(KeyValuePair`2<string, TValue> item);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual void Add(string key, TValue value);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual bool ContainsKey(string key);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual bool Remove(string key);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual bool TryGetValue(string key, TValue& value);
    public sealed virtual TValue get_Item(string key);
    public sealed virtual void set_Item(string key, TValue value);
    public sealed virtual ICollection`1<string> get_Keys();
    public sealed virtual ICollection`1<TValue> get_Values();
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentDictionary`1/<AddAsync>d__37")]
public sealed virtual Task AddAsync(KeyValuePair`2<string, TValue> item);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentDictionary`1/<ClearAsync>d__38")]
public sealed virtual Task ClearAsync();
    public sealed virtual Task`1<bool> ContainsAsync(KeyValuePair`2<string, TValue> item);
    public sealed virtual Task`1<bool> RemoveAsync(KeyValuePair`2<string, TValue> item);
    public sealed virtual Task`1<int> get_CountAsync();
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentDictionary`1/<AddAsync>d__43")]
public sealed virtual Task AddAsync(string key, TValue value);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentDictionary`1/<ContainsKeyAsync>d__44")]
public sealed virtual Task`1<bool> ContainsKeyAsync(string key);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentDictionary`1/<GetAsync>d__45")]
public sealed virtual Task`1<TValue> GetAsync(string key);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentDictionary`1/<RemoveAsync>d__46")]
public sealed virtual Task`1<bool> RemoveAsync(string key);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentDictionary`1/<SetAsync>d__47")]
public sealed virtual Task SetAsync(string key, TValue value);
    public sealed virtual Task`1<ICollection`1<string>> get_KeysAsync();
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentDictionary`1/<KeysInternalAsync>d__50")]
private Task`1<ICollection`1<string>> KeysInternalAsync();
    public sealed virtual Task`1<ICollection`1<TValue>> get_ValuesAsync();
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentDictionary`1/<ValuesInternalAsync>d__53")]
private Task`1<ICollection`1<TValue>> ValuesInternalAsync();
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentDictionary`1/<<get_CountAsync>b__42_0>d")]
[CompilerGeneratedAttribute]
private Task`1<int> <get_CountAsync>b__42_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DefaultMemberAttribute("Item")]
public class Couchbase.DataStructures.PersistentList`1 : PersistentStoreBase`1<TValue> {
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
private int System.Collections.Generic.ICollection<TValue>.Count { get; }
    public bool IsReadOnly { get; }
    [ObsoleteAttribute("This method is blocking; please use the async equivalent instead.")]
public TValue Item { get; public set; }
    internal PersistentList`1(ICouchbaseCollection collection, string key, ILogger logger, IRedactor redactor);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual IEnumerator`1<TValue> GetEnumerator();
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual void Add(TValue item);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual bool Contains(TValue item);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual void CopyTo(TValue[] array, int arrayIndex);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual bool Remove(TValue item);
    private sealed virtual override int System.Collections.Generic.ICollection<TValue>.get_Count();
    public sealed virtual bool get_IsReadOnly();
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual int IndexOf(TValue item);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual void Insert(int index, TValue item);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual void RemoveAt(int index);
    public sealed virtual TValue get_Item(int index);
    public sealed virtual void set_Item(int index, TValue value);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentList`1/<AddAsync>d__16")]
public sealed virtual Task AddAsync(TValue item);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentList`1/<ContainsAsync>d__17")]
public sealed virtual Task`1<bool> ContainsAsync(TValue item);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentList`1/<RemoveAsync>d__18")]
public sealed virtual Task`1<bool> RemoveAsync(TValue item);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentList`1/<IndexOfAsync>d__19")]
public sealed virtual Task`1<int> IndexOfAsync(TValue item);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentList`1/<InsertAsync>d__20")]
public sealed virtual Task InsertAsync(int index, TValue item);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentList`1/<SetAsync>d__21")]
public Task SetAsync(int index, TValue item);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentList`1/<RemoveAtAsync>d__22")]
public sealed virtual Task RemoveAtAsync(int index);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Couchbase.DataStructures.PersistentQueue`1 : PersistentStoreBase`1<TValue> {
    private QueueOptions _options;
    internal PersistentQueue`1(ICouchbaseCollection collection, string key, QueueOptions options, ILogger logger, IRedactor redactor);
    [NullableContextAttribute("2")]
public sealed virtual TValue Dequeue();
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentQueue`1/<DequeueAsync>d__3")]
public sealed virtual Task`1<TValue> DequeueAsync();
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual void Enqueue(TValue item);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentQueue`1/<EnqueueAsync>d__5")]
public sealed virtual Task EnqueueAsync(TValue item);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual TValue Peek();
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentQueue`1/<PeekAsync>d__7")]
public sealed virtual Task`1<TValue> PeekAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Couchbase.DataStructures.PersistentSet`1 : PersistentStoreBase`1<TValue> {
    public bool IsReadOnly { get; }
    internal PersistentSet`1(ICouchbaseCollection collection, string key, ILogger logger, IRedactor redactor);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentSet`1/<CreateBackingStoreAsync>d__1")]
protected virtual ValueTask CreateBackingStoreAsync();
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
private ISet`1<TValue> GetList();
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentSet`1/<GetListAsync>d__3")]
private Task`1<ISet`1<TValue>> GetListAsync();
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual IEnumerator`1<TValue> GetEnumerator();
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual bool Add(TValue item);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentSet`1/<AddAsync>d__7")]
public sealed virtual Task`1<bool> AddAsync(TValue item);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual void ExceptWith(IEnumerable`1<TValue> other);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual void IntersectWith(IEnumerable`1<TValue> other);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual bool IsProperSubsetOf(IEnumerable`1<TValue> other);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual bool IsProperSupersetOf(IEnumerable`1<TValue> other);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual bool IsSubsetOf(IEnumerable`1<TValue> other);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual bool IsSupersetOf(IEnumerable`1<TValue> other);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual bool Overlaps(IEnumerable`1<TValue> other);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual bool SetEquals(IEnumerable`1<TValue> other);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual void SymmetricExceptWith(IEnumerable`1<TValue> other);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual void UnionWith(IEnumerable`1<TValue> other);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual bool Contains(TValue item);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual void CopyTo(TValue[] array, int arrayIndex);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual bool Remove(TValue item);
    public sealed virtual bool get_IsReadOnly();
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
private sealed virtual override void System.Collections.Generic.ICollection<TValue>.Add(TValue item);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentSet`1/<ExceptWithAsync>d__24")]
public sealed virtual Task ExceptWithAsync(IEnumerable`1<TValue> other);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentSet`1/<IntersectWithAsync>d__25")]
public sealed virtual Task IntersectWithAsync(IEnumerable`1<TValue> other);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentSet`1/<IsProperSubsetOfAsync>d__26")]
public sealed virtual Task`1<bool> IsProperSubsetOfAsync(IEnumerable`1<TValue> other);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentSet`1/<IsProperSupersetOfAsync>d__27")]
public sealed virtual Task`1<bool> IsProperSupersetOfAsync(IEnumerable`1<TValue> other);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentSet`1/<IsSubsetOfAsync>d__28")]
public sealed virtual Task`1<bool> IsSubsetOfAsync(IEnumerable`1<TValue> other);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentSet`1/<IsSupersetOfAsync>d__29")]
public sealed virtual Task`1<bool> IsSupersetOfAsync(IEnumerable`1<TValue> other);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentSet`1/<OverlapsAsync>d__30")]
public sealed virtual Task`1<bool> OverlapsAsync(IEnumerable`1<TValue> other);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentSet`1/<SetEqualsAsync>d__31")]
public sealed virtual Task`1<bool> SetEqualsAsync(IEnumerable`1<TValue> other);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentSet`1/<SymmetricExceptWithAsync>d__32")]
public sealed virtual Task SymmetricExceptWithAsync(IEnumerable`1<TValue> other);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentSet`1/<UnionWithAsync>d__33")]
public sealed virtual Task UnionWithAsync(IEnumerable`1<TValue> other);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentSet`1/<ContainsAsync>d__34")]
public sealed virtual Task`1<bool> ContainsAsync(TValue item);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentSet`1/<RemoveAsync>d__35")]
public sealed virtual Task`1<bool> RemoveAsync(TValue item);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Couchbase.DataStructures.PersistentStoreBase`1 : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ILogger <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private ICouchbaseCollection <Collection>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <BackingStoreChecked>k__BackingField;
    [NullableAttribute("2")]
internal IRedactor Redactor;
    [CompilerGeneratedAttribute]
private bool <IsSynchronized>k__BackingField;
    [CompilerGeneratedAttribute]
private object <SyncRoot>k__BackingField;
    [NullableAttribute("2")]
protected ILogger Logger { get; }
    protected ICouchbaseCollection Collection { get; }
    protected string Key { get; }
    protected bool BackingStoreChecked { get; protected set; }
    public Task`1<int> CountAsync { get; }
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public int Count { get; }
    public bool IsSynchronized { get; }
    public object SyncRoot { get; }
    internal PersistentStoreBase`1(ICouchbaseCollection collection, string key, ILogger logger, IRedactor redactor, object syncRoot, bool isSynchronized);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected ILogger get_Logger();
    [CompilerGeneratedAttribute]
protected ICouchbaseCollection get_Collection();
    [CompilerGeneratedAttribute]
protected string get_Key();
    [CompilerGeneratedAttribute]
protected bool get_BackingStoreChecked();
    [CompilerGeneratedAttribute]
protected void set_BackingStoreChecked(bool value);
    [ObsoleteAttribute("Use asynchronous overload.")]
protected virtual void CreateBackingStore();
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentStoreBase`1/<CreateBackingStoreAsync>d__16")]
protected virtual ValueTask CreateBackingStoreAsync();
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
protected virtual IList`1<TValue> GetList();
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentStoreBase`1/<GetListAsync>d__18")]
protected Task`1<IList`1<TValue>> GetListAsync();
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual void Clear();
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentStoreBase`1/<ClearAsync>d__20")]
public sealed virtual Task ClearAsync();
    public sealed virtual Task CopyToAsync(Array array, int index);
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
public sealed virtual void CopyTo(Array array, int index);
    [AsyncStateMachineAttribute("Couchbase.DataStructures.PersistentStoreBase`1/<CopyToAsync>d__23")]
public sealed virtual Task CopyToAsync(TValue[] array, int arrayIndex);
    public sealed virtual Task`1<int> get_CountAsync();
    public sealed virtual int get_Count();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsSynchronized();
    [CompilerGeneratedAttribute]
public sealed virtual object get_SyncRoot();
    [ObsoleteAttribute("This method is blocking; please use the async version instead.")]
private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [AsyncIteratorStateMachineAttribute("Couchbase.DataStructures.PersistentStoreBase`1/<GetAsyncEnumerator>d__35")]
public sealed virtual IAsyncEnumerator`1<TValue> GetAsyncEnumerator(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.DataStructures.QueueOptions : object {
    [CompilerGeneratedAttribute]
private int <CasMismatchRetries>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Timeout>k__BackingField;
    public static int DefaultCasMismatchRetries;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public int CasMismatchRetries { get; public set; }
    public Nullable`1<TimeSpan> Timeout { get; public set; }
    public QueueOptions(int CasMismatchRetries, Nullable`1<TimeSpan> Timeout);
    [CompilerGeneratedAttribute]
private QueueOptions(QueueOptions original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public int get_CasMismatchRetries();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CasMismatchRetries(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_Timeout();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Timeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(QueueOptions left, QueueOptions right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(QueueOptions left, QueueOptions right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(QueueOptions other);
    [CompilerGeneratedAttribute]
public QueueOptions <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Int32& CasMismatchRetries, Nullable`1& Timeout);
}
public enum Couchbase.Diagnostics.ClusterState : Enum {
    public int value__;
    public static ClusterState Online;
    public static ClusterState Degraded;
    public static ClusterState Offline;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.Diagnostics.DiagnosticsOptions : object {
    [CompilerGeneratedAttribute]
private string <ReportIdValue>k__BackingField;
    internal string ReportIdValue { get; internal set; }
    [CompilerGeneratedAttribute]
internal string get_ReportIdValue();
    [CompilerGeneratedAttribute]
internal void set_ReportIdValue(string value);
    [NullableContextAttribute("1")]
public DiagnosticsOptions ReportId(string reportId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Diagnostics.DiagnosticsReport : object {
    [CompilerGeneratedAttribute]
private DateTime <CreatedAt>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private short <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Sdk>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IEnumerable`1<IEndpointDiagnostics>> <Services>k__BackingField;
    [JsonIgnoreAttribute]
public DateTime CreatedAt { get; }
    [JsonPropertyAttribute("id")]
public string Id { get; }
    [JsonPropertyAttribute("version")]
public short Version { get; }
    [JsonPropertyAttribute("sdk")]
public string Sdk { get; }
    [JsonPropertyAttribute("services")]
public IDictionary`2<string, IEnumerable`1<IEndpointDiagnostics>> Services { get; }
    internal DiagnosticsReport(string reportId, IDictionary`2<string, IEnumerable`1<IEndpointDiagnostics>> services);
    [CompilerGeneratedAttribute]
public DateTime get_CreatedAt();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual short get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Sdk();
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, IEnumerable`1<IEndpointDiagnostics>> get_Services();
    public virtual string ToString();
}
internal static class Couchbase.Diagnostics.DiagnosticsReportProvider : object {
    internal static string UnknownEndpointValue;
    private static long TicksPerMicrosecond;
    private static ServiceType[] AllServiceTypes;
    private static DiagnosticsReportProvider();
    [AsyncStateMachineAttribute("Couchbase.Diagnostics.DiagnosticsReportProvider/<CreatePingReportAsync>d__3")]
internal static Task`1<IPingReport> CreatePingReportAsync(ClusterContext context, BucketConfig config, PingOptions options);
    [AsyncStateMachineAttribute("Couchbase.Diagnostics.DiagnosticsReportProvider/<CreateDiagnosticsReportAsync>d__4")]
internal static Task`1<IDiagnosticsReport> CreateDiagnosticsReportAsync(ClusterContext context, string reportId);
    [AsyncStateMachineAttribute("Couchbase.Diagnostics.DiagnosticsReportProvider/<GetEndpointDiagnosticsAsync>d__5")]
private static Task`1<ConcurrentDictionary`2<string, IEnumerable`1<IEndpointDiagnostics>>> GetEndpointDiagnosticsAsync(ClusterContext context, IEnumerable`1<IClusterNode> clusterNodes, bool ping, ICollection`1<ServiceType> serviceTypes, CancellationToken token);
    private static EndpointDiagnostics CreateEndpointHealth(string bucketName, DateTime createdAt, IConnection connection, bool ping);
    internal static EndpointDiagnostics CreateEndpointHealth(string bucketName, ServiceType serviceType, DateTime createdAt, Nullable`1<DateTime> lastActivity, Nullable`1<HostEndpointWithPort> endPoint, bool ping);
    [AsyncStateMachineAttribute("Couchbase.Diagnostics.DiagnosticsReportProvider/<RecordLatencyAsync>d__8")]
internal static Task RecordLatencyAsync(EndpointDiagnostics endpoint, Func`1<Task> action);
    internal static long CalculateLastActivity(DateTime createdAt, Nullable`1<DateTime> lastActivity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonSourceGenerationOptionsAttribute]
[JsonSerializableAttribute("Couchbase.Diagnostics.IDiagnosticsReport")]
[JsonSerializableAttribute("Couchbase.Diagnostics.IPingReport")]
[JsonSerializableAttribute("Couchbase.Diagnostics.IEndpointDiagnostics")]
[GeneratedCodeAttribute("System.Text.Json.SourceGeneration", "8.0.10.31311")]
internal class Couchbase.Diagnostics.DiagnoticsSerializerContext : JsonSerializerContext {
    [NullableAttribute("2")]
private JsonTypeInfo`1<EndpointState> _EndpointState;
    [NullableAttribute("2")]
private JsonTypeInfo`1<Nullable`1<EndpointState>> _NullableEndpointState;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IDiagnosticsReport> _IDiagnosticsReport;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IEndpointDiagnostics> _IEndpointDiagnostics;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IPingReport> _IPingReport;
    [NullableAttribute("2")]
private JsonTypeInfo`1<ServiceState> _ServiceState;
    [NullableAttribute("2")]
private JsonTypeInfo`1<Nullable`1<ServiceState>> _NullableServiceState;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IDictionary`2<string, IEnumerable`1<IEndpointDiagnostics>>> _IDictionaryStringIEnumerableIEndpointDiagnostics;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IEnumerable`1<IEndpointDiagnostics>> _IEnumerableIEndpointDiagnostics;
    [NullableAttribute("2")]
private JsonTypeInfo`1<long> _Int64;
    [NullableAttribute("2")]
private JsonTypeInfo`1<Nullable`1<long>> _NullableInt64;
    [NullableAttribute("2")]
private JsonTypeInfo`1<short> _Int16;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<string> _String;
    [NullableAttribute("2")]
private JsonTypeInfo`1<ulong> _UInt64;
    private static JsonSerializerOptions s_defaultOptions;
    [CompilerGeneratedAttribute]
private static DiagnoticsSerializerContext <Default>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JsonSerializerOptions <GeneratedSerializerOptions>k__BackingField;
    private static JsonEncodedText PropName_id;
    private static JsonEncodedText PropName_version;
    private static JsonEncodedText PropName_sdk;
    private static JsonEncodedText PropName_services;
    private static JsonEncodedText PropName_local;
    private static JsonEncodedText PropName_remote;
    private static JsonEncodedText PropName_last_activity_us;
    private static JsonEncodedText PropName_latency_us;
    private static JsonEncodedText PropName_scope;
    private static JsonEncodedText PropName_state;
    private static JsonEncodedText PropName_endpoint_state;
    private static JsonEncodedText PropName_config_rev;
    public JsonTypeInfo`1<EndpointState> EndpointState { get; }
    public JsonTypeInfo`1<Nullable`1<EndpointState>> NullableEndpointState { get; }
    public JsonTypeInfo`1<IDiagnosticsReport> IDiagnosticsReport { get; }
    public JsonTypeInfo`1<IEndpointDiagnostics> IEndpointDiagnostics { get; }
    public JsonTypeInfo`1<IPingReport> IPingReport { get; }
    public JsonTypeInfo`1<ServiceState> ServiceState { get; }
    public JsonTypeInfo`1<Nullable`1<ServiceState>> NullableServiceState { get; }
    public JsonTypeInfo`1<IDictionary`2<string, IEnumerable`1<IEndpointDiagnostics>>> IDictionaryStringIEnumerableIEndpointDiagnostics { get; }
    public JsonTypeInfo`1<IEnumerable`1<IEndpointDiagnostics>> IEnumerableIEndpointDiagnostics { get; }
    public JsonTypeInfo`1<long> Int64 { get; }
    public JsonTypeInfo`1<Nullable`1<long>> NullableInt64 { get; }
    public JsonTypeInfo`1<short> Int16 { get; }
    public JsonTypeInfo`1<string> String { get; }
    public JsonTypeInfo`1<ulong> UInt64 { get; }
    public static DiagnoticsSerializerContext Default { get; }
    [NullableAttribute("2")]
protected JsonSerializerOptions GeneratedSerializerOptions { get; }
    public DiagnoticsSerializerContext(JsonSerializerOptions options);
    private static DiagnoticsSerializerContext();
    public JsonTypeInfo`1<EndpointState> get_EndpointState();
    private JsonTypeInfo`1<EndpointState> Create_EndpointState(JsonSerializerOptions options);
    public JsonTypeInfo`1<Nullable`1<EndpointState>> get_NullableEndpointState();
    private JsonTypeInfo`1<Nullable`1<EndpointState>> Create_NullableEndpointState(JsonSerializerOptions options);
    public JsonTypeInfo`1<IDiagnosticsReport> get_IDiagnosticsReport();
    private JsonTypeInfo`1<IDiagnosticsReport> Create_IDiagnosticsReport(JsonSerializerOptions options);
    private static JsonPropertyInfo[] IDiagnosticsReportPropInit(JsonSerializerOptions options);
    private void IDiagnosticsReportSerializeHandler(Utf8JsonWriter writer, IDiagnosticsReport value);
    public JsonTypeInfo`1<IEndpointDiagnostics> get_IEndpointDiagnostics();
    private JsonTypeInfo`1<IEndpointDiagnostics> Create_IEndpointDiagnostics(JsonSerializerOptions options);
    private static JsonPropertyInfo[] IEndpointDiagnosticsPropInit(JsonSerializerOptions options);
    private void IEndpointDiagnosticsSerializeHandler(Utf8JsonWriter writer, IEndpointDiagnostics value);
    public JsonTypeInfo`1<IPingReport> get_IPingReport();
    private JsonTypeInfo`1<IPingReport> Create_IPingReport(JsonSerializerOptions options);
    private static JsonPropertyInfo[] IPingReportPropInit(JsonSerializerOptions options);
    private void IPingReportSerializeHandler(Utf8JsonWriter writer, IPingReport value);
    public JsonTypeInfo`1<ServiceState> get_ServiceState();
    private JsonTypeInfo`1<ServiceState> Create_ServiceState(JsonSerializerOptions options);
    public JsonTypeInfo`1<Nullable`1<ServiceState>> get_NullableServiceState();
    private JsonTypeInfo`1<Nullable`1<ServiceState>> Create_NullableServiceState(JsonSerializerOptions options);
    public JsonTypeInfo`1<IDictionary`2<string, IEnumerable`1<IEndpointDiagnostics>>> get_IDictionaryStringIEnumerableIEndpointDiagnostics();
    private JsonTypeInfo`1<IDictionary`2<string, IEnumerable`1<IEndpointDiagnostics>>> Create_IDictionaryStringIEnumerableIEndpointDiagnostics(JsonSerializerOptions options);
    private void IDictionaryStringIEnumerableIEndpointDiagnosticsSerializeHandler(Utf8JsonWriter writer, IDictionary`2<string, IEnumerable`1<IEndpointDiagnostics>> value);
    public JsonTypeInfo`1<IEnumerable`1<IEndpointDiagnostics>> get_IEnumerableIEndpointDiagnostics();
    private JsonTypeInfo`1<IEnumerable`1<IEndpointDiagnostics>> Create_IEnumerableIEndpointDiagnostics(JsonSerializerOptions options);
    private void IEnumerableIEndpointDiagnosticsSerializeHandler(Utf8JsonWriter writer, IEnumerable`1<IEndpointDiagnostics> value);
    public JsonTypeInfo`1<long> get_Int64();
    private JsonTypeInfo`1<long> Create_Int64(JsonSerializerOptions options);
    public JsonTypeInfo`1<Nullable`1<long>> get_NullableInt64();
    private JsonTypeInfo`1<Nullable`1<long>> Create_NullableInt64(JsonSerializerOptions options);
    public JsonTypeInfo`1<short> get_Int16();
    private JsonTypeInfo`1<short> Create_Int16(JsonSerializerOptions options);
    public JsonTypeInfo`1<string> get_String();
    private JsonTypeInfo`1<string> Create_String(JsonSerializerOptions options);
    public JsonTypeInfo`1<ulong> get_UInt64();
    private JsonTypeInfo`1<ulong> Create_UInt64(JsonSerializerOptions options);
    [CompilerGeneratedAttribute]
public static DiagnoticsSerializerContext get_Default();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual JsonSerializerOptions get_GeneratedSerializerOptions();
    private static bool TryGetTypeInfoForRuntimeCustomConverter(JsonSerializerOptions options, JsonTypeInfo`1& jsonTypeInfo);
    private static JsonConverter GetRuntimeConverterForType(Type type, JsonSerializerOptions options);
    private static JsonConverter ExpandConverter(Type type, JsonConverter converter, JsonSerializerOptions options, bool validateCanConvert);
    public virtual JsonTypeInfo GetTypeInfo(Type type);
    private sealed virtual override JsonTypeInfo global::System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver.GetTypeInfo(Type type, JsonSerializerOptions options);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Diagnostics.EndpointDiagnostics : object {
    [CompilerGeneratedAttribute]
private ServiceType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ServiceState> <State>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<EndpointState> <EndpointState>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Local>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Remote>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <LastActivity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Latency>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [JsonIgnoreAttribute]
public ServiceType Type { get; internal set; }
    [JsonPropertyAttribute]
public string Id { get; internal set; }
    [JsonPropertyAttribute]
[JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public Nullable`1<ServiceState> State { get; internal set; }
    [JsonPropertyAttribute]
[JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public Nullable`1<EndpointState> EndpointState { get; internal set; }
    [JsonPropertyAttribute]
public string Local { get; internal set; }
    [JsonPropertyAttribute]
public string Remote { get; internal set; }
    [JsonPropertyAttribute]
public Nullable`1<long> LastActivity { get; internal set; }
    [JsonPropertyAttribute]
public Nullable`1<long> Latency { get; internal set; }
    [JsonPropertyAttribute]
public string Scope { get; internal set; }
    [CompilerGeneratedAttribute]
public sealed virtual ServiceType get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(ServiceType value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<ServiceState> get_State();
    [CompilerGeneratedAttribute]
internal void set_State(Nullable`1<ServiceState> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<EndpointState> get_EndpointState();
    [CompilerGeneratedAttribute]
internal void set_EndpointState(Nullable`1<EndpointState> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Local();
    [CompilerGeneratedAttribute]
internal void set_Local(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Remote();
    [CompilerGeneratedAttribute]
internal void set_Remote(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_LastActivity();
    [CompilerGeneratedAttribute]
internal void set_LastActivity(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_Latency();
    [CompilerGeneratedAttribute]
internal void set_Latency(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Scope();
    [CompilerGeneratedAttribute]
internal void set_Scope(string value);
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[JsonConverterAttribute("Couchbase.Core.IO.Serializers.SystemTextJson.CamelCaseStringEnumConverter`1<Couchbase.Diagnostics.EndpointState>")]
public enum Couchbase.Diagnostics.EndpointState : Enum {
    public int value__;
    [EnumMemberAttribute]
public static EndpointState Disconnected;
    [EnumMemberAttribute]
public static EndpointState Connecting;
    [EnumMemberAttribute]
public static EndpointState Connected;
    [EnumMemberAttribute]
public static EndpointState Disconnecting;
}
[NullableContextAttribute("1")]
public interface Couchbase.Diagnostics.IDiagnosticsReport {
    [JsonPropertyNameAttribute("id")]
public string Id { get; }
    [JsonPropertyNameAttribute("version")]
public short Version { get; }
    [JsonPropertyNameAttribute("sdk")]
public string Sdk { get; }
    [JsonPropertyNameAttribute("services")]
public IDictionary`2<string, IEnumerable`1<IEndpointDiagnostics>> Services { get; }
    public abstract virtual string get_Id();
    public abstract virtual short get_Version();
    public abstract virtual string get_Sdk();
    public abstract virtual IDictionary`2<string, IEnumerable`1<IEndpointDiagnostics>> get_Services();
}
[NullableContextAttribute("2")]
public interface Couchbase.Diagnostics.IEndpointDiagnostics {
    [JsonIgnoreAttribute]
public ServiceType Type { get; }
    [JsonPropertyNameAttribute("id")]
[JsonIgnoreAttribute]
public string Id { get; }
    [JsonPropertyNameAttribute("local")]
[JsonIgnoreAttribute]
public string Local { get; }
    [JsonPropertyNameAttribute("remote")]
[JsonIgnoreAttribute]
public string Remote { get; }
    [JsonPropertyNameAttribute("last_activity_us")]
[JsonIgnoreAttribute]
public Nullable`1<long> LastActivity { get; }
    [JsonPropertyNameAttribute("latency_us")]
[JsonIgnoreAttribute]
public Nullable`1<long> Latency { get; }
    [JsonPropertyNameAttribute("scope")]
[JsonIgnoreAttribute]
public string Scope { get; }
    [JsonPropertyNameAttribute("state")]
[JsonIgnoreAttribute]
public Nullable`1<ServiceState> State { get; }
    [JsonPropertyNameAttribute("endpoint_state")]
[JsonIgnoreAttribute]
public Nullable`1<EndpointState> EndpointState { get; }
    public abstract virtual ServiceType get_Type();
    public abstract virtual string get_Id();
    public abstract virtual string get_Local();
    public abstract virtual string get_Remote();
    public abstract virtual Nullable`1<long> get_LastActivity();
    public abstract virtual Nullable`1<long> get_Latency();
    public abstract virtual string get_Scope();
    public abstract virtual Nullable`1<ServiceState> get_State();
    public abstract virtual Nullable`1<EndpointState> get_EndpointState();
}
[NullableContextAttribute("1")]
public interface Couchbase.Diagnostics.IPingReport {
    [JsonPropertyNameAttribute("id")]
public string Id { get; }
    [JsonPropertyNameAttribute("version")]
public short Version { get; }
    [JsonPropertyNameAttribute("config_rev")]
public ulong ConfigRev { get; }
    [JsonPropertyNameAttribute("sdk")]
public string Sdk { get; }
    [JsonPropertyNameAttribute("services")]
public IDictionary`2<string, IEnumerable`1<IEndpointDiagnostics>> Services { get; }
    public abstract virtual string get_Id();
    public abstract virtual short get_Version();
    public abstract virtual ulong get_ConfigRev();
    public abstract virtual string get_Sdk();
    public abstract virtual IDictionary`2<string, IEnumerable`1<IEndpointDiagnostics>> get_Services();
}
public class Couchbase.Diagnostics.PingOptions : object {
    internal static IList`1<ServiceType> DefaultServiceTypeValues;
    [CompilerGeneratedAttribute]
private string <ReportIdValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ServiceType> <ServiceTypesValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <Token>k__BackingField;
    internal string ReportIdValue { get; internal set; }
    internal IList`1<ServiceType> ServiceTypesValue { get; internal set; }
    internal CancellationToken Token { get; internal set; }
    private static PingOptions();
    [CompilerGeneratedAttribute]
internal string get_ReportIdValue();
    [CompilerGeneratedAttribute]
internal void set_ReportIdValue(string value);
    [CompilerGeneratedAttribute]
internal IList`1<ServiceType> get_ServiceTypesValue();
    [CompilerGeneratedAttribute]
internal void set_ServiceTypesValue(IList`1<ServiceType> value);
    [CompilerGeneratedAttribute]
internal CancellationToken get_Token();
    [CompilerGeneratedAttribute]
internal void set_Token(CancellationToken value);
    public PingOptions ReportId(string reportId);
    public PingOptions ServiceTypes(ServiceType[] serviceTypes);
    public PingOptions CancellationToken(CancellationToken token);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Diagnostics.PingReport : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private short <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <ConfigRev>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Sdk>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IEnumerable`1<IEndpointDiagnostics>> <Services>k__BackingField;
    [JsonPropertyAttribute("id")]
public string Id { get; }
    [JsonPropertyAttribute("version")]
public short Version { get; }
    [JsonPropertyAttribute("config_rev")]
public ulong ConfigRev { get; }
    [JsonPropertyAttribute("sdk")]
public string Sdk { get; }
    [JsonPropertyAttribute("services")]
public IDictionary`2<string, IEnumerable`1<IEndpointDiagnostics>> Services { get; }
    internal PingReport(string reportId, ulong configRev, IDictionary`2<string, IEnumerable`1<IEndpointDiagnostics>> services);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual short get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual ulong get_ConfigRev();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Sdk();
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, IEnumerable`1<IEndpointDiagnostics>> get_Services();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Diagnostics.QueryUriTester : UriTesterBase {
    protected string NodeType { get; }
    public QueryUriTester(HttpClient httpClient, ILogger`1<QueryUriTester> logger, IRedactor redactor);
    protected virtual string get_NodeType();
    protected virtual Uri GetPingUri(FailureCountingUri uri);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Diagnostics.SearchUriTester : UriTesterBase {
    protected string NodeType { get; }
    public SearchUriTester(HttpClient httpClient, ILogger`1<SearchUriTester> logger, IRedactor redactor);
    protected virtual string get_NodeType();
    protected virtual Uri GetPingUri(FailureCountingUri uri);
}
[JsonConverterAttribute("Couchbase.Core.IO.Serializers.SystemTextJson.CamelCaseStringEnumConverter`1<Couchbase.Diagnostics.ServiceState>")]
public enum Couchbase.Diagnostics.ServiceState : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ServiceState Unknown;
    [EnumMemberAttribute]
public static ServiceState New;
    [EnumMemberAttribute]
public static ServiceState Connecting;
    [EnumMemberAttribute]
public static ServiceState Authenticating;
    [EnumMemberAttribute]
public static ServiceState Connected;
    [EnumMemberAttribute]
public static ServiceState Disconnected;
    [EnumMemberAttribute]
public static ServiceState Ok;
    [EnumMemberAttribute]
public static ServiceState Timeout;
    [EnumMemberAttribute]
public static ServiceState Error;
    [EnumMemberAttribute]
public static ServiceState Active;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Couchbase.Diagnostics.UriTesterBase : object {
    private HttpClient _httpClient;
    private ILogger _logger;
    private IRedactor _redactor;
    protected string NodeType { get; }
    protected UriTesterBase(HttpClient httpClient, ILogger logger, IRedactor redactor);
    protected abstract virtual string get_NodeType();
    protected abstract virtual Uri GetPingUri(FailureCountingUri uri);
    [AsyncStateMachineAttribute("Couchbase.Diagnostics.UriTesterBase/<TestUri>d__7")]
public virtual Task TestUri(FailureCountingUri uri, CancellationToken cancellationToken);
}
public class Couchbase.Diagnostics.WaitUntilReadyOptions : object {
    private static IList`1<ServiceType> DefaultServiceTypes;
    [CompilerGeneratedAttribute]
private ClusterState <DesiredStateValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ServiceType> <ExplicitServiceTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <CancellationTokenValue>k__BackingField;
    internal ClusterState DesiredStateValue { get; internal set; }
    internal IList`1<ServiceType> ExplicitServiceTypes { get; internal set; }
    internal CancellationToken CancellationTokenValue { get; internal set; }
    private static WaitUntilReadyOptions();
    [CompilerGeneratedAttribute]
internal ClusterState get_DesiredStateValue();
    [CompilerGeneratedAttribute]
internal void set_DesiredStateValue(ClusterState value);
    [CompilerGeneratedAttribute]
internal IList`1<ServiceType> get_ExplicitServiceTypes();
    [CompilerGeneratedAttribute]
internal void set_ExplicitServiceTypes(IList`1<ServiceType> value);
    [CompilerGeneratedAttribute]
internal CancellationToken get_CancellationTokenValue();
    [CompilerGeneratedAttribute]
internal void set_CancellationTokenValue(CancellationToken value);
    public WaitUntilReadyOptions DesiredState(ClusterState clusterState);
    public WaitUntilReadyOptions ServiceTypes(ServiceType[] serviceTypes);
    public WaitUntilReadyOptions CancellationToken(CancellationToken cancellationToken);
    internal IEnumerable`1<ServiceType> EffectiveServiceTypes(ClusterContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.DnsClientDnsResolver : object {
    private static string DefaultServicePrefix;
    private static string TlsServicePrefix;
    private ILookupClient _lookupClient;
    private IDotNetDnsClient _dotNetDnsClient;
    private ILogger`1<DnsClientDnsResolver> _logger;
    [CompilerGeneratedAttribute]
private IpAddressMode <IpAddressMode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableDnsSrvResolution>k__BackingField;
    public IpAddressMode IpAddressMode { get; public set; }
    public bool EnableDnsSrvResolution { get; public set; }
    public DnsClientDnsResolver(ILookupClient lookupClient, IDotNetDnsClient dotNetDnsClient, ILogger`1<DnsClientDnsResolver> logger);
    [CompilerGeneratedAttribute]
public IpAddressMode get_IpAddressMode();
    [CompilerGeneratedAttribute]
public void set_IpAddressMode(IpAddressMode value);
    [CompilerGeneratedAttribute]
public bool get_EnableDnsSrvResolution();
    [CompilerGeneratedAttribute]
public void set_EnableDnsSrvResolution(bool value);
    [AsyncStateMachineAttribute("Couchbase.DnsClientDnsResolver/<GetIpAddressAsync>d__14")]
public sealed virtual Task`1<IPAddress> GetIpAddressAsync(string hostName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Couchbase.DnsClientDnsResolver/<GetDnsSrvEntriesAsync>d__15")]
public sealed virtual Task`1<IEnumerable`1<HostEndpoint>> GetDnsSrvEntriesAsync(Uri bootstrapUri, CancellationToken cancellationToken);
}
public class Couchbase.ExperimentalOptions : object {
    [CompilerGeneratedAttribute]
private bool <ChannelConnectionPools>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableHttpVersion2>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnablePushConfig>k__BackingField;
    [InterfaceStabilityAttribute("2")]
[ObsoleteAttribute("ChannelConnectionPool is now the default pool since 3.3.0. To revert back to the DataFlowConnectionPool set this to false.")]
public bool ChannelConnectionPools { get; public set; }
    [InterfaceStabilityAttribute("2")]
public bool EnableHttpVersion2 { get; public set; }
    [InterfaceStabilityAttribute("2")]
public bool EnablePushConfig { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_ChannelConnectionPools();
    [CompilerGeneratedAttribute]
public void set_ChannelConnectionPools(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableHttpVersion2();
    [CompilerGeneratedAttribute]
public void set_EnableHttpVersion2(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnablePushConfig();
    [CompilerGeneratedAttribute]
public void set_EnablePushConfig(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Couchbase.HostEndpoint : ValueType {
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Port>k__BackingField;
    public string Host { get; }
    public Nullable`1<int> Port { get; }
    public HostEndpoint(string host, Nullable`1<int> port);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Port();
    public void Deconstruct(String& host);
    public void Deconstruct(String& host, Nullable`1& port);
    public virtual string ToString();
    public sealed virtual bool Equals(HostEndpoint other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(HostEndpoint left, HostEndpoint right);
    public static bool op_Inequality(HostEndpoint left, HostEndpoint right);
    public static HostEndpoint Parse(string server);
    private static HostEndpoint ParseBasicServer(string server);
    private static HostEndpoint ParseIpv6Server(string server);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Couchbase.HostEndpointWithPort : ValueType {
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    public string Host { get; }
    public int Port { get; }
    public HostEndpointWithPort(string host, int port);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public int get_Port();
    public void Deconstruct(String& host);
    public void Deconstruct(String& host, Int32& port);
    public virtual string ToString();
    [NullableContextAttribute("2")]
public sealed virtual string ToString(string format, IFormatProvider formatProvider);
    [NullableContextAttribute("0")]
public sealed virtual bool TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider);
    public sealed virtual bool Equals(HostEndpointWithPort other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(HostEndpointWithPort left, HostEndpointWithPort right);
    public static bool op_Inequality(HostEndpointWithPort left, HostEndpointWithPort right);
    public static HostEndpointWithPort Parse(string server);
    private static HostEndpointWithPort ParseBasicServer(string server);
    private static HostEndpointWithPort ParseIpv6Server(string server);
    public static HostEndpointWithPort Create(NodeAdapter nodeAdapter, ClusterOptions options);
    public static HostEndpointWithPort Create(NodesExt nodeExt, ClusterOptions options);
    public static HostEndpointWithPort Create(ExternalAddressesConfig extAddressConfig, ClusterOptions options);
    public static HostEndpoint op_Implicit(HostEndpointWithPort hostEndpointWithPort);
}
[AttributeUsageAttribute("2432")]
internal class Couchbase.HtmlAttributeValueAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NotNullAttribute]
public string Name { get; private set; }
    public HtmlAttributeValueAttribute(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
}
[AttributeUsageAttribute("2432")]
internal class Couchbase.HtmlElementAttributesAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NotNullAttribute]
public string Name { get; private set; }
    public HtmlElementAttributesAttribute(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
}
[NullableContextAttribute("1")]
public interface Couchbase.IBucket {
    public bool SupportsCollections { get; }
    public string Name { get; }
    public ICluster Cluster { get; }
    public IViewIndexManager ViewIndexes { get; }
    public ICouchbaseCollectionManager Collections { get; }
    public abstract virtual bool get_SupportsCollections();
    public abstract virtual string get_Name();
    public abstract virtual ICluster get_Cluster();
    public abstract virtual IScope Scope(string scopeName);
    public abstract virtual ValueTask`1<IScope> ScopeAsync(string scopeName);
    public abstract virtual IScope DefaultScope();
    public abstract virtual ValueTask`1<IScope> DefaultScopeAsync();
    public abstract virtual ICouchbaseCollection DefaultCollection();
    public abstract virtual ValueTask`1<ICouchbaseCollection> DefaultCollectionAsync();
    public abstract virtual ICouchbaseCollection Collection(string collectionName);
    public abstract virtual ValueTask`1<ICouchbaseCollection> CollectionAsync(string collectionName);
    public abstract virtual Task`1<IViewResult`2<TKey, TValue>> ViewQueryAsync(string designDocument, string viewName, ViewOptions options);
    public abstract virtual IViewIndexManager get_ViewIndexes();
    public abstract virtual ICouchbaseCollectionManager get_Collections();
    public abstract virtual Task`1<IPingReport> PingAsync(PingOptions options);
    public abstract virtual Task WaitUntilReadyAsync(TimeSpan timeout, WaitUntilReadyOptions options);
}
[NullableContextAttribute("1")]
public interface Couchbase.ICluster {
    public IServiceProvider ClusterServices { get; }
    public IQueryIndexManager QueryIndexes { get; }
    public IAnalyticsIndexManager AnalyticsIndexes { get; }
    public ISearchIndexManager SearchIndexes { get; }
    public IBucketManager Buckets { get; }
    public IUserManager Users { get; }
    public IEventingFunctionManager EventingFunctions { get; }
    [InterfaceStabilityAttribute("2")]
public Transactions Transactions { get; }
    public abstract virtual IServiceProvider get_ClusterServices();
    public abstract virtual ValueTask`1<IBucket> BucketAsync(string name);
    public abstract virtual Task`1<IPingReport> PingAsync(PingOptions options);
    public abstract virtual Task WaitUntilReadyAsync(TimeSpan timeout, WaitUntilReadyOptions options);
    public abstract virtual Task`1<IDiagnosticsReport> DiagnosticsAsync(DiagnosticsOptions options);
    public abstract virtual Task`1<IQueryResult`1<T>> QueryAsync(string statement, QueryOptions options);
    public abstract virtual Task`1<IAnalyticsResult`1<T>> AnalyticsQueryAsync(string statement, AnalyticsOptions options);
    public abstract virtual Task`1<ISearchResult> SearchQueryAsync(string indexName, ISearchQuery query, SearchOptions options);
    public abstract virtual IQueryIndexManager get_QueryIndexes();
    public abstract virtual IAnalyticsIndexManager get_AnalyticsIndexes();
    public abstract virtual ISearchIndexManager get_SearchIndexes();
    public abstract virtual IBucketManager get_Buckets();
    public abstract virtual IUserManager get_Users();
    public abstract virtual IEventingFunctionManager get_EventingFunctions();
    public abstract virtual Transactions get_Transactions();
}
internal interface Couchbase.IClusterExtended {
    public abstract virtual void RemoveBucket(string bucketName);
    public abstract virtual bool BucketExists(string bucketName);
}
[NullableContextAttribute("1")]
public interface Couchbase.IDnsResolver {
    public abstract virtual Task`1<IPAddress> GetIpAddressAsync(string hostName, CancellationToken cancellationToken);
    public abstract virtual Task`1<IEnumerable`1<HostEndpoint>> GetDnsSrvEntriesAsync(Uri bootstrapUri, CancellationToken cancellationToken);
}
internal interface Couchbase.IInternalScope {
    public abstract virtual Task`1<Nullable`1<UInt32>> GetCidAsync(string fullyQualifiedName);
}
[FlagsAttribute]
internal enum Couchbase.ImplicitUseKindFlags : Enum {
    public int value__;
    public static ImplicitUseKindFlags Default;
    public static ImplicitUseKindFlags Access;
    public static ImplicitUseKindFlags Assign;
    public static ImplicitUseKindFlags InstantiatedWithFixedConstructorSignature;
    public static ImplicitUseKindFlags InstantiatedNoFixedConstructorSignature;
}
[FlagsAttribute]
internal enum Couchbase.ImplicitUseTargetFlags : Enum {
    public int value__;
    public static ImplicitUseTargetFlags Default;
    public static ImplicitUseTargetFlags Itself;
    public static ImplicitUseTargetFlags Members;
    public static ImplicitUseTargetFlags WithMembers;
}
[AttributeUsageAttribute("2048")]
internal class Couchbase.InstantHandleAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Couchbase.Integrated.Transactions.ActiveTransactionRecords.AtrIds : object {
    public static int NUM_VBUCKETS;
    public static int NUM_ATRS_DEFAULT;
    public static int MAX_ATR_BLOCKS;
    public static int MAX_ATRS;
    private static int VBucketPartitionCount;
    private static short VBucketMask;
    private static List`1<string> AllAtrIds;
    public static int NumAtrs { get; }
    private static AtrIds();
    public static int get_NumAtrs();
    public static string GetAtrId(string key);
    public static string GetAtrId(int vBucketId);
    public static int GetVBucketId(string key);
    [IteratorStateMachineAttribute("Couchbase.Integrated.Transactions.ActiveTransactionRecords.AtrIds/<Nth>d__12")]
public static IEnumerable`1<string> Nth(int startIndex, int n);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("2")]
public class Couchbase.Integrated.Transactions.AttemptContext : object {
    private static TimeSpan ExpiryThreshold;
    private static TimeSpan WriteWriteConflictTimeLimit;
    private TransactionContext _overallContext;
    private MergedTransactionConfig _config;
    private ITestHooks _testHooks;
    [CompilerGeneratedAttribute]
private IRedactor <Redactor>k__BackingField;
    private AttemptStates _state;
    private ErrorTriage _triage;
    private StagedMutationCollection _stagedMutations;
    private object _initAtrLock;
    [NullableAttribute("2")]
private AtrRepository _atr;
    private DocumentRepository _docs;
    private DurabilityLevel _effectiveDurabilityLevel;
    private List`1<MutationToken> _finalMutations;
    private ConcurrentDictionary`2<long, TransactionOperationFailedException> _previousErrors;
    private bool _expirationOvertimeMode;
    private ILoggerFactory _loggerFactory;
    private ICluster _cluster;
    private ITypeSerializer _nonStreamingTypeSerializer;
    private IRequestTracer _requestTracer;
    private bool _queryMode;
    [NullableAttribute("2")]
private Uri _lastDispatchedQueryNode;
    private bool _singleQueryTransactionMode;
    [NullableAttribute("2")]
private IScope _queryContextScope;
    [CompilerGeneratedAttribute]
private string <AttemptId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UnstagingComplete>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger`1<AttemptContext> <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDone>k__BackingField;
    internal IRedactor Redactor { get; }
    public string AttemptId { get; }
    public string TransactionId { get; }
    internal bool UnstagingComplete { get; private set; }
    public ILogger`1<AttemptContext> Logger { get; }
    private bool IsDone { get; private set; }
    internal AttemptContext(TransactionContext overallContext, string attemptId, ITestHooks testHooks, IRedactor redactor, ILoggerFactory loggerFactory, ICluster cluster, DocumentRepository documentRepository, AtrRepository atrRepository, IRequestTracer requestTracer, bool singleQueryTransactionMode);
    private static AttemptContext();
    [CompilerGeneratedAttribute]
internal IRedactor get_Redactor();
    [CompilerGeneratedAttribute]
public string get_AttemptId();
    public string get_TransactionId();
    [CompilerGeneratedAttribute]
internal bool get_UnstagingComplete();
    [CompilerGeneratedAttribute]
private void set_UnstagingComplete(bool value);
    [CompilerGeneratedAttribute]
public ILogger`1<AttemptContext> get_Logger();
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<GetAsync>d__39")]
public Task`1<TransactionGetResult> GetAsync(ICouchbaseCollection collection, string id);
    public Task`1<TransactionGetResult> GetOptionalAsync(ICouchbaseCollection collection, string id, IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<GetWithKv>d__41")]
private Task`1<TransactionGetResult> GetWithKv(ICouchbaseCollection collection, string id, IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<GetWithQuery>d__42")]
private Task`1<TransactionGetResult> GetWithQuery(ICouchbaseCollection collection, string id, IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<GetWithMav>d__43")]
private Task`1<TransactionGetResult> GetWithMav(ICouchbaseCollection collection, string id, string resolveMissingAtrEntry, IRequestSpan parentSpan);
    private void CheckErrors();
    public Task`1<TransactionGetResult> ReplaceAsync(TransactionGetResult doc, object content, IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<ReplaceWithKv>d__46")]
private Task`1<TransactionGetResult> ReplaceWithKv(TransactionGetResult doc, object content, IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<ReplaceWithQuery>d__47")]
private Task`1<TransactionGetResult> ReplaceWithQuery(TransactionGetResult doc, object content, IRequestSpan parentSpan);
    private static JObject TxDataForReplaceAndRemove(TransactionGetResult doc);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<SetAtrPendingIfFirstMutation>d__49")]
private Task SetAtrPendingIfFirstMutation(ICouchbaseCollection collection, IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<CreateStagedReplace>d__50")]
private Task`1<TransactionGetResult> CreateStagedReplace(TransactionGetResult doc, object content, bool accessDeleted, IRequestSpan parentSpan);
    public Task`1<TransactionGetResult> InsertAsync(ICouchbaseCollection collection, string id, object content, IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<InsertWithKv>d__52")]
private Task`1<TransactionGetResult> InsertWithKv(ICouchbaseCollection collection, string id, object content, IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<InsertWithQuery>d__53")]
private Task`1<TransactionGetResult> InsertWithQuery(ICouchbaseCollection collection, string id, object content, IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<CreateStagedInsert>d__54")]
private Task`1<TransactionGetResult> CreateStagedInsert(ICouchbaseCollection collection, string id, object content, Nullable`1<ulong> cas, IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<SetAtrPending>d__55")]
private Task SetAtrPending(IRequestSpan parentSpan);
    public Task RemoveAsync(TransactionGetResult doc, IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<RemoveWithKv>d__57")]
private Task RemoveWithKv(TransactionGetResult doc, IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<RemoveWithQuery>d__58")]
private Task RemoveWithQuery(TransactionGetResult doc, IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<CreateStagedRemove>d__59")]
private Task CreateStagedRemove(TransactionGetResult doc, IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<RemoveStagedInsert>d__60")]
private Task RemoveStagedInsert(TransactionGetResult doc, IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<AutoCommit>d__61")]
internal Task AutoCommit(IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<CommitAsync>d__62")]
public Task CommitAsync(IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<CommitWithKv>d__63")]
private Task CommitWithKv(IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<CommitWithQuery>d__64")]
private Task CommitWithQuery(IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<SetAtrComplete>d__65")]
private Task SetAtrComplete(IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<UnstageDocs>d__66")]
private Task UnstageDocs(IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<UnstageRemove>d__67")]
private Task UnstageRemove(StagedMutation sm, bool ambiguityResolutionMode, IRequestSpan parentSpan);
    private Task`1<ValueTuple`2<ulong, object>> FetchIfNeededBeforeUnstage(StagedMutation sm);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<UnstageInsertOrReplace>d__69")]
private Task UnstageInsertOrReplace(StagedMutation sm, ulong cas, object content, bool insertMode, bool ambiguityResolutionMode, IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<SetAtrCommit>d__70")]
private Task SetAtrCommit(IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<ResolveSetAtrCommitAmbiguity>d__71")]
private Task`1<RepeatAction> ResolveSetAtrCommitAmbiguity(IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<SetAtrAborted>d__72")]
private Task SetAtrAborted(bool isAppRollback, IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<SetAtrRolledBack>d__73")]
private Task SetAtrRolledBack(IRequestSpan parentSpan);
    public Task RollbackAsync(IRequestSpan parentSpan);
    public Task`1<IQueryResult`1<T>> QueryAsync(string statement, TransactionQueryOptions options, IScope scope, IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<QueryAsync>d__76`1")]
internal Task`1<IQueryResult`1<T>> QueryAsync(string statement, TransactionQueryOptions options, bool txImplicit, IScope scope, IRequestSpan parentSpan);
    [CompilerGeneratedAttribute]
private bool get_IsDone();
    [CompilerGeneratedAttribute]
private void set_IsDone(bool value);
    internal Task RollbackInternal(bool isAppRollback, IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<RollbackWithKv>d__82")]
internal Task RollbackWithKv(bool isAppRollback, IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<RollbackWithQuery>d__83")]
internal Task RollbackWithQuery(bool isAppRollback, IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<RollbackStagedInsert>d__84")]
private Task RollbackStagedInsert(StagedMutation sm, IRequestSpan parentSpan);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<RollbackStagedReplaceOrRemove>d__85")]
private Task RollbackStagedReplaceOrRemove(StagedMutation sm, IRequestSpan parentSpan);
    private void DoneCheck();
    private void BailoutIfInOvertime(bool rollback, string caller);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<InitAtrIfNeeded>d__88")]
private Task InitAtrIfNeeded(ICouchbaseCollection collection, string id, IRequestSpan parentSpan);
    private void CheckExpiryAndThrow(string docId, string hookPoint);
    private void ErrorIfExpiredAndNotInExpiryOvertimeMode(string hookPoint, string docId, string caller);
    internal bool HasExpiredClientSide(string docId, string hookPoint);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<CheckWriteWriteConflict>d__92")]
internal Task CheckWriteWriteConflict(TransactionGetResult gr, string interactionPoint, IRequestSpan parentSpan);
    private QueryOptions NonStreamingQuery();
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<QueryWrapper>d__94`1")]
private Task`1<IQueryResult`1<T>> QueryWrapper(long statementId, IScope scope, string statement, QueryOptions options, string hookPoint, IRequestSpan parentSpan, bool isBeginWork, bool existingErrorCheck, JObject txdata, bool txImplicit);
    private QueryTxData CreateBeginWorkTxData();
    private void QueryPreCheck(string statement, string hookPoint, bool existingErrorCheck);
    [InterfaceStabilityAttribute("2")]
public Exception ConvertQueryError(Exception err);
    private Error ChooseQueryError(QueryErrorContext qec);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<QueryBeginWork>d__99")]
private Task QueryBeginWork(IRequestSpan parentSpan, IScope scope);
    private QueryOptions InitializeBeginWorkQueryOptions(QueryOptions queryOptions);
    internal void SaveErrorWrapper(TransactionOperationFailedException ex);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<GetAtrCollection>d__103")]
private Task`1<ICouchbaseCollection> GetAtrCollection(AtrRef atrRef, ICouchbaseCollection anyCollection);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<RepeatUntilSuccessOrThrow>d__104`1")]
private Task`1<T> RepeatUntilSuccessOrThrow(Func`1<Task`1<ValueTuple`2<RepeatAction, T>>> func, int retryLimit, string caller);
    private Task RepeatUntilSuccessOrThrow(Func`1<Task`1<RepeatAction>> func, int retryLimit, string caller);
    private Task OpRetryDelay();
    [NullableContextAttribute("2")]
internal CleanupRequest GetCleanupRequest();
    private DelegatingDisposable`1<IRequestSpan> TraceSpan(string method, IRequestSpan parent);
    private Exception Error(ErrorClass ec, Exception err, Nullable`1<bool> retry, Nullable`1<bool> rollback, Nullable`1<FinalError> raise);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<<SetAtrPending>b__55_0>d")]
[CompilerGeneratedAttribute]
private Task`1<RepeatAction> <SetAtrPending>b__55_0();
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<<ResolveSetAtrCommitAmbiguity>b__71_0>d")]
[CompilerGeneratedAttribute]
private Task`1<ValueTuple`2<RepeatAction, RepeatAction>> <ResolveSetAtrCommitAmbiguity>b__71_0();
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<<SetAtrAborted>b__72_0>d")]
[CompilerGeneratedAttribute]
private Task`1<RepeatAction> <SetAtrAborted>b__72_0();
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.AttemptContext/<<SetAtrRolledBack>b__73_0>d")]
[CompilerGeneratedAttribute]
private Task`1<RepeatAction> <SetAtrRolledBack>b__73_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Cleanup.Cleaner : object {
    [CompilerGeneratedAttribute]
private ICleanupTestHooks <TestHooks>k__BackingField;
    public static Task NothingToDo;
    private ICluster _cluster;
    private string _creatorName;
    private ILogger`1<Cleaner> _logger;
    public ICleanupTestHooks TestHooks { get; public set; }
    public Cleaner(ICluster cluster, ILoggerFactory loggerFactory, string creatorName);
    private static Cleaner();
    [CompilerGeneratedAttribute]
public ICleanupTestHooks get_TestHooks();
    [CompilerGeneratedAttribute]
public void set_TestHooks(ICleanupTestHooks value);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.Cleanup.Cleaner/<ProcessCleanupRequest>d__9")]
public Task`1<TransactionCleanupAttempt> ProcessCleanupRequest(CleanupRequest cleanupRequest, bool isRegular);
    private Task CleanupDocs(CleanupRequest cleanupRequest);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.Cleanup.Cleaner/<CleanupAtrEntry>d__11")]
private Task CleanupAtrEntry(CleanupRequest cleanupRequest);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.Cleanup.Cleaner/<CleanupDocsAborted>d__12")]
private Task CleanupDocsAborted(CleanupRequest cleanupRequest);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.Cleanup.Cleaner/<CleanupDocsCommitted>d__13")]
private Task CleanupDocsCommitted(CleanupRequest cleanupRequest);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.Cleanup.Cleaner/<CleanupDoc>d__14")]
public Task CleanupDoc(DocRecord dr, bool requireCrc32ToMatchStaging, Func`2<DocumentLookupResult, Task> perDoc, string attemptId);
}
internal class Couchbase.Integrated.Transactions.Cleanup.CleanupFailedException : Exception {
    [NullableContextAttribute("1")]
public CleanupFailedException(Exception cause);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Cleanup.CleanupRequest : object {
    [CompilerGeneratedAttribute]
private string <AttemptId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AtrId>k__BackingField;
    [CompilerGeneratedAttribute]
private ICouchbaseCollection <AtrCollection>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DocRecord> <InsertedIds>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DocRecord> <ReplacedIds>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DocRecord> <RemovedIds>k__BackingField;
    [CompilerGeneratedAttribute]
private AttemptStates <State>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <WhenReadyToBeProcessed>k__BackingField;
    [CompilerGeneratedAttribute]
private ConcurrentQueue`1<Exception> <ProcessingErrors>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JObject <ForwardCompatibility>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <DurabilityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string AttemptId { get; public set; }
    public string AtrId { get; public set; }
    public ICouchbaseCollection AtrCollection { get; public set; }
    public List`1<DocRecord> InsertedIds { get; public set; }
    public List`1<DocRecord> ReplacedIds { get; public set; }
    public List`1<DocRecord> RemovedIds { get; public set; }
    public AttemptStates State { get; public set; }
    public DateTimeOffset WhenReadyToBeProcessed { get; public set; }
    public ConcurrentQueue`1<Exception> ProcessingErrors { get; public set; }
    [NullableAttribute("2")]
public JObject ForwardCompatibility { get; public set; }
    [NullableAttribute("2")]
public string DurabilityLevel { get; public set; }
    public CleanupRequest(string AttemptId, string AtrId, ICouchbaseCollection AtrCollection, List`1<DocRecord> InsertedIds, List`1<DocRecord> ReplacedIds, List`1<DocRecord> RemovedIds, AttemptStates State, DateTimeOffset WhenReadyToBeProcessed, ConcurrentQueue`1<Exception> ProcessingErrors, JObject ForwardCompatibility, string DurabilityLevel);
    [CompilerGeneratedAttribute]
protected CleanupRequest(CleanupRequest original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_AttemptId();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AttemptId(string value);
    [CompilerGeneratedAttribute]
public string get_AtrId();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AtrId(string value);
    [CompilerGeneratedAttribute]
public ICouchbaseCollection get_AtrCollection();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AtrCollection(ICouchbaseCollection value);
    [CompilerGeneratedAttribute]
public List`1<DocRecord> get_InsertedIds();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_InsertedIds(List`1<DocRecord> value);
    [CompilerGeneratedAttribute]
public List`1<DocRecord> get_ReplacedIds();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ReplacedIds(List`1<DocRecord> value);
    [CompilerGeneratedAttribute]
public List`1<DocRecord> get_RemovedIds();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_RemovedIds(List`1<DocRecord> value);
    [CompilerGeneratedAttribute]
public AttemptStates get_State();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_State(AttemptStates value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_WhenReadyToBeProcessed();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WhenReadyToBeProcessed(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public ConcurrentQueue`1<Exception> get_ProcessingErrors();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ProcessingErrors(ConcurrentQueue`1<Exception> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public JObject get_ForwardCompatibility();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ForwardCompatibility(JObject value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_DurabilityLevel();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DurabilityLevel(string value);
    public DurabilityLevel GetDurabilityLevel();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(CleanupRequest left, CleanupRequest right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(CleanupRequest left, CleanupRequest right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(CleanupRequest other);
    [CompilerGeneratedAttribute]
public virtual CleanupRequest <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& AttemptId, String& AtrId, ICouchbaseCollection& AtrCollection, List`1& InsertedIds, List`1& ReplacedIds, List`1& RemovedIds, AttemptStates& State, DateTimeOffset& WhenReadyToBeProcessed, ConcurrentQueue`1& ProcessingErrors, JObject& ForwardCompatibility, String& DurabilityLevel);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Cleanup.CleanupWorkQueue : object {
    public static int MaxCleanupQueueDepth;
    private CancellationTokenSource _forceFlush;
    private Channel`1<CleanupRequest> _workQueue;
    private ILogger`1<CleanupWorkQueue> _logger;
    private Cleaner _cleaner;
    private ICleanupTestHooks _testHooks;
    public ICleanupTestHooks TestHooks { get; public set; }
    public CleanupWorkQueue(ICluster cluster, ILoggerFactory loggerFactory, bool runCleanup);
    public ICleanupTestHooks get_TestHooks();
    public void set_TestHooks(ICleanupTestHooks value);
    internal bool TryAddCleanupRequest(CleanupRequest cleanupRequest);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.Cleanup.CleanupWorkQueue/<ConsumeWork>d__11")]
private ValueTask ConsumeWork(ChannelReader`1<CleanupRequest> reader);
    internal void StopProcessing();
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Cleanup.LostTransactions.ClientRecordDetails : object {
    public static long NanosecondsPerMillisecond;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <SortedActiveClientIds>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <ExpiredClientIds>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <ActiveClientIds>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <AtrsHandledByThisClient>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <CheckAtrTimeWindow>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IndexOfThisClient>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OverrideEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <OverrideExpires>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OverrideActive>k__BackingField;
    [CompilerGeneratedAttribute]
private long <CasNowNanos>k__BackingField;
    public IReadOnlyList`1<string> SortedActiveClientIds { get; }
    public IReadOnlyList`1<string> ExpiredClientIds { get; }
    public IReadOnlyList`1<string> ActiveClientIds { get; }
    [JsonIgnoreAttribute]
public IReadOnlyList`1<string> AtrsHandledByThisClient { get; }
    public TimeSpan CheckAtrTimeWindow { get; }
    public int NumActiveClients { get; }
    public int NumExpiredClients { get; }
    public int NumExistingClients { get; }
    public int IndexOfThisClient { get; }
    public bool OverrideEnabled { get; }
    public Nullable`1<DateTimeOffset> OverrideExpires { get; }
    public bool OverrideActive { get; }
    public long CasNowNanos { get; }
    public ClientRecordDetails(ClientRecordsIndex clientRecord, ParsedHLC parsedHlc, string clientUuid, TimeSpan cleanupWindow);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_SortedActiveClientIds();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_ExpiredClientIds();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_ActiveClientIds();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_AtrsHandledByThisClient();
    [CompilerGeneratedAttribute]
public TimeSpan get_CheckAtrTimeWindow();
    public int get_NumActiveClients();
    public int get_NumExpiredClients();
    public int get_NumExistingClients();
    [CompilerGeneratedAttribute]
public int get_IndexOfThisClient();
    [CompilerGeneratedAttribute]
public bool get_OverrideEnabled();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_OverrideExpires();
    [CompilerGeneratedAttribute]
public bool get_OverrideActive();
    [CompilerGeneratedAttribute]
public long get_CasNowNanos();
    [IteratorStateMachineAttribute("Couchbase.Integrated.Transactions.Cleanup.LostTransactions.ClientRecordDetails/<GetAtrsHandledByThisClient>d__38")]
private IEnumerable`1<string> GetAtrsHandledByThisClient();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Cleanup.LostTransactions.LostTransactionManager : object {
    private static int DiscoverBucketsPeriodMs;
    private ILogger`1<LostTransactionManager> _logger;
    private ILoggerFactory _loggerFactory;
    private ICluster _cluster;
    private TimeSpan _cleanupWindow;
    private CancellationTokenSource _overallCancellation;
    private ConcurrentDictionary`2<KeySpace, PerCollectionCleaner> _collectionsToClean;
    [CompilerGeneratedAttribute]
private string <ClientUuid>k__BackingField;
    [CompilerGeneratedAttribute]
private ICleanupTestHooks <TestHooks>k__BackingField;
    public string ClientUuid { get; }
    public ICleanupTestHooks TestHooks { get; public set; }
    public int RunningCount { get; }
    public long TotalRunCount { get; }
    internal LostTransactionManager(ICluster cluster, ILoggerFactory loggerFactory, TimeSpan cleanupWindow, string clientUuid, bool startDisabled, KeySpace metadataCollection);
    [CompilerGeneratedAttribute]
public string get_ClientUuid();
    [CompilerGeneratedAttribute]
public ICleanupTestHooks get_TestHooks();
    [CompilerGeneratedAttribute]
public void set_TestHooks(ICleanupTestHooks value);
    public int get_RunningCount();
    public long get_TotalRunCount();
    public void TrackCollectionForCleanup(KeySpace collection);
    public void Start();
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.Cleanup.LostTransactions.LostTransactionManager/<DisposeAsync>d__21")]
public sealed virtual ValueTask DisposeAsync();
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.Cleanup.LostTransactions.LostTransactionManager/<RemoveClientEntries>d__22")]
private Task RemoveClientEntries();
    private PerCollectionCleaner CleanerForCollection(KeySpace collection, bool startDisabled);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Cleanup.LostTransactions.PerCollectionCleaner : object {
    [CompilerGeneratedAttribute]
private string <ClientUuid>k__BackingField;
    private Cleaner _cleaner;
    private CleanerRepository _repository;
    private TimeSpan _cleanupWindow;
    private ILogger`1<PerCollectionCleaner> _logger;
    private Timer _processCleanupTimer;
    private CancellationTokenSource _cts;
    private Random _jitter;
    private SemaphoreSlim _timerCallbackMutex;
    private long _runCount;
    private object _atrsToCleanLock;
    private ConcurrentBag`1<string> _atrsToClean;
    [CompilerGeneratedAttribute]
private ICleanupTestHooks <TestHooks>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FullBucketName>k__BackingField;
    public string ClientUuid { get; }
    public ICleanupTestHooks TestHooks { get; public set; }
    public long RunCount { get; }
    public bool Running { get; }
    public KeySpace KeySpace { get; }
    public string FullBucketName { get; }
    public PerCollectionCleaner(string clientUuid, Cleaner cleaner, CleanerRepository repository, TimeSpan cleanupWindow, ILoggerFactory loggerFactory, bool startDisabled);
    [CompilerGeneratedAttribute]
public string get_ClientUuid();
    [CompilerGeneratedAttribute]
public ICleanupTestHooks get_TestHooks();
    [CompilerGeneratedAttribute]
public void set_TestHooks(ICleanupTestHooks value);
    public long get_RunCount();
    public bool get_Running();
    public void Start();
    public void Stop();
    public KeySpace get_KeySpace();
    [CompilerGeneratedAttribute]
public string get_FullBucketName();
    public virtual string ToString();
    public void Dispose();
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.Cleanup.LostTransactions.PerCollectionCleaner/<DisposeAsync>d__33")]
public sealed virtual ValueTask DisposeAsync();
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.Cleanup.LostTransactions.PerCollectionCleaner/<TimerCallback>d__34")]
private void TimerCallback(object state);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.Cleanup.LostTransactions.PerCollectionCleaner/<ProcessClient>d__35")]
internal Task`1<ClientRecordDetails> ProcessClient(bool cleanupAtrs);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.Cleanup.LostTransactions.PerCollectionCleaner/<EnsureClientRecordIsUpToDate>d__36")]
private Task`1<ClientRecordDetails> EnsureClientRecordIsUpToDate();
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.Cleanup.LostTransactions.PerCollectionCleaner/<HandleGetRecordFailure>d__37")]
private Task`1<ValueTuple`2<bool, bool>> HandleGetRecordFailure(Exception ex, Nullable`1<ulong> pathNotFoundCas);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.Cleanup.LostTransactions.PerCollectionCleaner/<CleanupAtr>d__38")]
private Task CleanupAtr(string atrId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.Cleanup.LostTransactions.PerCollectionCleaner/<RemoveClient>d__39")]
private Task RemoveClient();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Cleanup.TransactionCleanupAttempt : object {
    [CompilerGeneratedAttribute]
private bool <Success>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRegular>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AttemptId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AtrId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AtrBucketName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AtrCollectionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AtrScopeName>k__BackingField;
    [CompilerGeneratedAttribute]
private CleanupRequest <Request>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Exception <FailureReason>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public bool Success { get; public set; }
    public bool IsRegular { get; public set; }
    public string AttemptId { get; public set; }
    public string AtrId { get; public set; }
    public string AtrBucketName { get; public set; }
    public string AtrCollectionName { get; public set; }
    public string AtrScopeName { get; public set; }
    public CleanupRequest Request { get; public set; }
    [NullableAttribute("2")]
public Exception FailureReason { get; public set; }
    public TransactionCleanupAttempt(bool Success, bool IsRegular, string AttemptId, string AtrId, string AtrBucketName, string AtrCollectionName, string AtrScopeName, CleanupRequest Request, Exception FailureReason);
    [CompilerGeneratedAttribute]
protected TransactionCleanupAttempt(TransactionCleanupAttempt original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public bool get_Success();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Success(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsRegular();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsRegular(bool value);
    [CompilerGeneratedAttribute]
public string get_AttemptId();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AttemptId(string value);
    [CompilerGeneratedAttribute]
public string get_AtrId();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AtrId(string value);
    [CompilerGeneratedAttribute]
public string get_AtrBucketName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AtrBucketName(string value);
    [CompilerGeneratedAttribute]
public string get_AtrCollectionName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AtrCollectionName(string value);
    [CompilerGeneratedAttribute]
public string get_AtrScopeName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AtrScopeName(string value);
    [CompilerGeneratedAttribute]
public CleanupRequest get_Request();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Request(CleanupRequest value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Exception get_FailureReason();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FailureReason(Exception value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(TransactionCleanupAttempt left, TransactionCleanupAttempt right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(TransactionCleanupAttempt left, TransactionCleanupAttempt right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(TransactionCleanupAttempt other);
    [CompilerGeneratedAttribute]
public virtual TransactionCleanupAttempt <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Boolean& Success, Boolean& IsRegular, String& AttemptId, String& AtrId, String& AtrBucketName, String& AtrCollectionName, String& AtrScopeName, CleanupRequest& Request, Exception& FailureReason);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("Use AtrEntry instead.")]
internal class Couchbase.Integrated.Transactions.Components.ActiveTransactionRecord : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, AtrEntry> <Attempts>k__BackingField;
    [JsonPropertyAttribute("attempts")]
public Dictionary`2<string, AtrEntry> Attempts { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, AtrEntry> get_Attempts();
    [CompilerGeneratedAttribute]
public void set_Attempts(Dictionary`2<string, AtrEntry> value);
    public static AtrEntry CreateFrom(string bucketName, string atrId, JToken entry, string attemptId, string transactionId, Nullable`1<ulong> cas);
    [NullableContextAttribute("2")]
internal static Nullable`1<DateTimeOffset> ParseMutationCasField(string casString);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Components.AtrEntry : object {
    [NullableAttribute("1")]
private static IList`1<DocRecord> EmptyDocRecords;
    [CompilerGeneratedAttribute]
private string <TransactionId>k__BackingField;
    [CompilerGeneratedAttribute]
private AttemptStates <State>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TimestampStartCas>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TimestampCommitCas>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TimestampCompleteCas>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TimestampRollBackCas>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TimestampRolledBackCas>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ExpiresAfterMsecs>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IList`1<DocRecord> <InsertedIds>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IList`1<DocRecord> <ReplacedIds>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IList`1<DocRecord> <RemovedIds>k__BackingField;
    [CompilerGeneratedAttribute]
private JObject <ForwardCompatibility>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DurabilityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ulong> <Cas>k__BackingField;
    [JsonPropertyAttribute("tid")]
public string TransactionId { get; public set; }
    [JsonPropertyAttribute("st")]
public AttemptStates State { get; public set; }
    [JsonPropertyAttribute("tst")]
public string TimestampStartCas { get; public set; }
    [JsonIgnoreAttribute]
public Nullable`1<DateTimeOffset> TimestampStartMsecs { get; }
    [JsonPropertyAttribute("tsc")]
public string TimestampCommitCas { get; }
    [JsonIgnoreAttribute]
public Nullable`1<DateTimeOffset> TimestampCommitMsecs { get; }
    [JsonPropertyAttribute("tsco")]
public string TimestampCompleteCas { get; public set; }
    [JsonIgnoreAttribute]
public Nullable`1<DateTimeOffset> TimestampCompleteMsecs { get; }
    [JsonPropertyAttribute("tsrs")]
public string TimestampRollBackCas { get; public set; }
    [JsonIgnoreAttribute]
public Nullable`1<DateTimeOffset> TimestampRollBackMsecs { get; }
    [JsonPropertyAttribute("tsrc")]
public string TimestampRolledBackCas { get; public set; }
    [JsonIgnoreAttribute]
public Nullable`1<DateTimeOffset> TimestampRolledBackMsecs { get; }
    [JsonPropertyAttribute("exp")]
public Nullable`1<int> ExpiresAfterMsecs { get; public set; }
    [NullableAttribute("1")]
[JsonPropertyAttribute("ins")]
public IList`1<DocRecord> InsertedIds { get; public set; }
    [NullableAttribute("1")]
[JsonPropertyAttribute("rep")]
public IList`1<DocRecord> ReplacedIds { get; public set; }
    [NullableAttribute("1")]
[JsonPropertyAttribute("rem")]
public IList`1<DocRecord> RemovedIds { get; public set; }
    [JsonPropertyAttribute("fc")]
public JObject ForwardCompatibility { get; public set; }
    [JsonPropertyAttribute("d")]
public string DurabilityLevel { get; public set; }
    public Nullable`1<ulong> Cas { get; }
    public Nullable`1<bool> IsExpired { get; }
    private static AtrEntry();
    [CompilerGeneratedAttribute]
public string get_TransactionId();
    [CompilerGeneratedAttribute]
public void set_TransactionId(string value);
    [CompilerGeneratedAttribute]
public AttemptStates get_State();
    [CompilerGeneratedAttribute]
public void set_State(AttemptStates value);
    [CompilerGeneratedAttribute]
public string get_TimestampStartCas();
    [CompilerGeneratedAttribute]
public void set_TimestampStartCas(string value);
    public Nullable`1<DateTimeOffset> get_TimestampStartMsecs();
    [CompilerGeneratedAttribute]
public string get_TimestampCommitCas();
    public Nullable`1<DateTimeOffset> get_TimestampCommitMsecs();
    [CompilerGeneratedAttribute]
public string get_TimestampCompleteCas();
    [CompilerGeneratedAttribute]
public void set_TimestampCompleteCas(string value);
    public Nullable`1<DateTimeOffset> get_TimestampCompleteMsecs();
    [CompilerGeneratedAttribute]
public string get_TimestampRollBackCas();
    [CompilerGeneratedAttribute]
public void set_TimestampRollBackCas(string value);
    public Nullable`1<DateTimeOffset> get_TimestampRollBackMsecs();
    [CompilerGeneratedAttribute]
public string get_TimestampRolledBackCas();
    [CompilerGeneratedAttribute]
public void set_TimestampRolledBackCas(string value);
    public Nullable`1<DateTimeOffset> get_TimestampRolledBackMsecs();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ExpiresAfterMsecs();
    [CompilerGeneratedAttribute]
public void set_ExpiresAfterMsecs(Nullable`1<int> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IList`1<DocRecord> get_InsertedIds();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_InsertedIds(IList`1<DocRecord> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IList`1<DocRecord> get_ReplacedIds();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_ReplacedIds(IList`1<DocRecord> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IList`1<DocRecord> get_RemovedIds();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_RemovedIds(IList`1<DocRecord> value);
    [CompilerGeneratedAttribute]
public JObject get_ForwardCompatibility();
    [CompilerGeneratedAttribute]
public void set_ForwardCompatibility(JObject value);
    [CompilerGeneratedAttribute]
public string get_DurabilityLevel();
    [CompilerGeneratedAttribute]
public void set_DurabilityLevel(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<ulong> get_Cas();
    public Nullable`1<bool> get_IsExpired();
    [NullableContextAttribute("1")]
public static AtrEntry CreateFrom(JToken entry);
    internal static Nullable`1<DateTimeOffset> ParseMutationCasField(string casString);
    internal static Nullable`1<DateTimeOffset> ParseMutationCasFieldNoThrow(string casString);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Components.DocRecord : object {
    [CompilerGeneratedAttribute]
private string <BucketName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScopeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CollectionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [JsonPropertyAttribute("bkt")]
public string BucketName { get; }
    [JsonPropertyAttribute("scp")]
public string ScopeName { get; }
    [JsonPropertyAttribute("col")]
public string CollectionName { get; }
    [JsonPropertyAttribute("id")]
public string Id { get; }
    [JsonConstructorAttribute]
public DocRecord(string bkt, string scp, string col, string id);
    [CompilerGeneratedAttribute]
public string get_BucketName();
    [CompilerGeneratedAttribute]
public string get_ScopeName();
    [CompilerGeneratedAttribute]
public string get_CollectionName();
    [CompilerGeneratedAttribute]
public string get_Id();
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.Components.DocRecord/<GetCollection>d__13")]
public Task`1<ICouchbaseCollection> GetCollection(ICluster cluster);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("2")]
public class Couchbase.Integrated.Transactions.Components.DocumentMetadata : object {
    [CompilerGeneratedAttribute]
private string <Cas>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RevId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ulong> <ExpTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Crc32c>k__BackingField;
    [JsonPropertyAttribute("CAS")]
public string Cas { get; internal set; }
    [JsonPropertyAttribute("revid")]
public string RevId { get; internal set; }
    [JsonPropertyAttribute("exptime")]
public Nullable`1<ulong> ExpTime { get; internal set; }
    [JsonPropertyAttribute("value_crc32c")]
public string Crc32c { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Cas();
    [CompilerGeneratedAttribute]
internal void set_Cas(string value);
    [CompilerGeneratedAttribute]
public string get_RevId();
    [CompilerGeneratedAttribute]
internal void set_RevId(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<ulong> get_ExpTime();
    [CompilerGeneratedAttribute]
internal void set_ExpTime(Nullable`1<ulong> value);
    [CompilerGeneratedAttribute]
public string get_Crc32c();
    [CompilerGeneratedAttribute]
internal void set_Crc32c(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Components.StagedMutation : object {
    [CompilerGeneratedAttribute]
private TransactionGetResult <Doc>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private object <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private StagedMutationType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private MutationToken <MutationToken>k__BackingField;
    public TransactionGetResult Doc { get; }
    [NullableAttribute("2")]
public object Content { get; }
    public StagedMutationType Type { get; }
    public MutationToken MutationToken { get; }
    public StagedMutation(TransactionGetResult doc, object content, StagedMutationType type, MutationToken mutationToken);
    [CompilerGeneratedAttribute]
public TransactionGetResult get_Doc();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public object get_Content();
    [CompilerGeneratedAttribute]
public StagedMutationType get_Type();
    [CompilerGeneratedAttribute]
public MutationToken get_MutationToken();
    public JObject ForAtr();
    public DocRecord AsDocRecord();
    public TxDataMutation AsTxData();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Components.StagedMutationCollection : object {
    private Dictionary`2<string, StagedMutation> _stagedMutations;
    private object _smLock;
    public bool IsEmpty { get; }
    public bool get_IsEmpty();
    public IReadOnlyCollection`1<StagedMutation> ToList();
    public IEnumerable`1<StagedMutation> Inserts();
    public IEnumerable`1<StagedMutation> Replaces();
    public IEnumerable`1<StagedMutation> Removes();
    public bool Contains(string fullyQualifiedId);
    public bool Contains(ICouchbaseCollection collection, string id);
    internal StagedMutation Find(ICouchbaseCollection collection, string id);
    internal StagedMutation Find(TransactionGetResult doc);
    internal void Add(StagedMutation stagedMutation);
    internal void Remove(StagedMutation stagedMutation);
    internal void Remove(TransactionGetResult doc);
}
internal enum Couchbase.Integrated.Transactions.Components.StagedMutationType : Enum {
    public int value__;
    public static StagedMutationType Undefined;
    public static StagedMutationType Insert;
    public static StagedMutationType Remove;
    public static StagedMutationType Replace;
}
[ExtensionAttribute]
internal static class Couchbase.Integrated.Transactions.Config.Extensions : object {
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.Config.Extensions/<QueryAsync>d__0`1")]
[ExtensionAttribute]
public static Task`1<IQueryResult`1<T>> QueryAsync(AttemptContext ctx, string statement, Action`1<TransactionQueryOptions> configure, IScope scope);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Config.MergedTransactionConfig : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private TransactionCleanupConfig <CleanupConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private DurabilityLevel <DurabilityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private ILoggerFactory <LoggerFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private KeySpace <MetadataCollection>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<QueryScanConsistency> <ScanConsistency>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [NullableAttribute("1")]
public TransactionCleanupConfig CleanupConfig { get; public set; }
    public DurabilityLevel DurabilityLevel { get; public set; }
    public TimeSpan Timeout { get; public set; }
    public ILoggerFactory LoggerFactory { get; public set; }
    public KeySpace MetadataCollection { get; public set; }
    public Nullable`1<QueryScanConsistency> ScanConsistency { get; public set; }
    public MergedTransactionConfig(TransactionCleanupConfig CleanupConfig, DurabilityLevel DurabilityLevel, TimeSpan Timeout, ILoggerFactory LoggerFactory, KeySpace MetadataCollection, Nullable`1<QueryScanConsistency> ScanConsistency);
    [CompilerGeneratedAttribute]
protected MergedTransactionConfig(MergedTransactionConfig original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public TransactionCleanupConfig get_CleanupConfig();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CleanupConfig(TransactionCleanupConfig value);
    [CompilerGeneratedAttribute]
public DurabilityLevel get_DurabilityLevel();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DurabilityLevel(DurabilityLevel value);
    [CompilerGeneratedAttribute]
public TimeSpan get_Timeout();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Timeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public ILoggerFactory get_LoggerFactory();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_LoggerFactory(ILoggerFactory value);
    [CompilerGeneratedAttribute]
public KeySpace get_MetadataCollection();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MetadataCollection(KeySpace value);
    [CompilerGeneratedAttribute]
public Nullable`1<QueryScanConsistency> get_ScanConsistency();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ScanConsistency(Nullable`1<QueryScanConsistency> value);
    [NullableContextAttribute("1")]
public static MergedTransactionConfig Create(TransactionConfig config, PerTransactionConfig perConfig);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(MergedTransactionConfig left, MergedTransactionConfig right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(MergedTransactionConfig left, MergedTransactionConfig right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public virtual bool Equals(MergedTransactionConfig other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual MergedTransactionConfig <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(TransactionCleanupConfig& CleanupConfig, DurabilityLevel& DurabilityLevel, TimeSpan& Timeout, ILoggerFactory& LoggerFactory, KeySpace& MetadataCollection, Nullable`1& ScanConsistency);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("2")]
public class Couchbase.Integrated.Transactions.Config.PerTransactionConfig : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DurabilityLevel> <DurabilityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <KeyValueTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<QueryScanConsistency> <ScanConsistency>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public Nullable`1<DurabilityLevel> DurabilityLevel { get; public set; }
    public Nullable`1<TimeSpan> Timeout { get; public set; }
    public Nullable`1<TimeSpan> KeyValueTimeout { get; public set; }
    public Nullable`1<QueryScanConsistency> ScanConsistency { get; public set; }
    [CompilerGeneratedAttribute]
protected PerTransactionConfig(PerTransactionConfig original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public Nullable`1<DurabilityLevel> get_DurabilityLevel();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DurabilityLevel(Nullable`1<DurabilityLevel> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_Timeout();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Timeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_KeyValueTimeout();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_KeyValueTimeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<QueryScanConsistency> get_ScanConsistency();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ScanConsistency(Nullable`1<QueryScanConsistency> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(PerTransactionConfig left, PerTransactionConfig right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(PerTransactionConfig left, PerTransactionConfig right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(PerTransactionConfig other);
    [CompilerGeneratedAttribute]
public virtual PerTransactionConfig <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Config.PerTransactionQueryConfig : object {
    [CompilerGeneratedAttribute]
private Nullable`1<QueryScanConsistency> <ScanConsistency>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public Nullable`1<QueryScanConsistency> ScanConsistency { get; public set; }
    [CompilerGeneratedAttribute]
protected PerTransactionQueryConfig(PerTransactionQueryConfig original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public Nullable`1<QueryScanConsistency> get_ScanConsistency();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ScanConsistency(Nullable`1<QueryScanConsistency> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(PerTransactionQueryConfig left, PerTransactionQueryConfig right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(PerTransactionQueryConfig left, PerTransactionQueryConfig right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(PerTransactionQueryConfig other);
    [CompilerGeneratedAttribute]
public virtual PerTransactionQueryConfig <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("2")]
public class Couchbase.Integrated.Transactions.Config.SingeQueryTransactionConfig : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DurabilityLevel> <DurabilityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public Nullable`1<DurabilityLevel> DurabilityLevel { get; public set; }
    public SingeQueryTransactionConfig(Nullable`1<DurabilityLevel> DurabilityLevel);
    [CompilerGeneratedAttribute]
protected SingeQueryTransactionConfig(SingeQueryTransactionConfig original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public Nullable`1<DurabilityLevel> get_DurabilityLevel();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DurabilityLevel(Nullable`1<DurabilityLevel> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(SingeQueryTransactionConfig left, SingeQueryTransactionConfig right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(SingeQueryTransactionConfig left, SingeQueryTransactionConfig right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(SingeQueryTransactionConfig other);
    [CompilerGeneratedAttribute]
public virtual SingeQueryTransactionConfig <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Nullable`1& DurabilityLevel);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("2")]
public class Couchbase.Integrated.Transactions.Config.TransactionCleanupConfig : object {
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <CleanupWindow>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CleanupClientAttempts>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CleanupLostAttempts>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<KeySpace> <Collections>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public Nullable`1<TimeSpan> CleanupWindow { get; public set; }
    public bool CleanupClientAttempts { get; public set; }
    public bool CleanupLostAttempts { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<KeySpace> Collections { get; public set; }
    public TransactionCleanupConfig(Nullable`1<TimeSpan> CleanupWindow, bool CleanupClientAttempts, bool CleanupLostAttempts, IEnumerable`1<KeySpace> Collections);
    [CompilerGeneratedAttribute]
protected TransactionCleanupConfig(TransactionCleanupConfig original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_CleanupWindow();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CleanupWindow(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public bool get_CleanupClientAttempts();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CleanupClientAttempts(bool value);
    [CompilerGeneratedAttribute]
public bool get_CleanupLostAttempts();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CleanupLostAttempts(bool value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<KeySpace> get_Collections();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Collections(IEnumerable`1<KeySpace> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(TransactionCleanupConfig left, TransactionCleanupConfig right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(TransactionCleanupConfig left, TransactionCleanupConfig right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(TransactionCleanupConfig other);
    [CompilerGeneratedAttribute]
public virtual TransactionCleanupConfig <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Nullable`1& CleanupWindow, Boolean& CleanupClientAttempts, Boolean& CleanupLostAttempts, IEnumerable`1& Collections);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("2")]
public class Couchbase.Integrated.Transactions.Config.TransactionConfig : object {
    [CompilerGeneratedAttribute]
private DurabilityLevel <DurabilityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<QueryScanConsistency> <ScanConsistency>k__BackingField;
    [CompilerGeneratedAttribute]
private KeySpace <MetadataCollection>k__BackingField;
    [CompilerGeneratedAttribute]
private TransactionCleanupConfig <CleanupConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private ILoggerFactory <LoggerFactory>k__BackingField;
    public static DurabilityLevel DefaultDurabilityLevel;
    public static int DefaultTimeoutMilliseconds;
    public static TimeSpan DefaultTimeout;
    public static int DefaultCleanupWindowMilliseconds;
    public static TimeSpan DefaultCleanupWindow;
    public static bool DefaultCleanupLostAttempts;
    public static bool DefaultCleanupClientAttempts;
    public static Severity DefaultLogOnFailure;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public DurabilityLevel DurabilityLevel { get; public set; }
    public Nullable`1<TimeSpan> Timeout { get; public set; }
    public Nullable`1<QueryScanConsistency> ScanConsistency { get; public set; }
    public KeySpace MetadataCollection { get; public set; }
    public TransactionCleanupConfig CleanupConfig { get; public set; }
    public ILoggerFactory LoggerFactory { get; public set; }
    public TransactionConfig(DurabilityLevel DurabilityLevel, Nullable`1<TimeSpan> Timeout, Nullable`1<QueryScanConsistency> ScanConsistency, KeySpace MetadataCollection, TransactionCleanupConfig CleanupConfig, ILoggerFactory LoggerFactory);
    [CompilerGeneratedAttribute]
protected TransactionConfig(TransactionConfig original);
    private static TransactionConfig();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public DurabilityLevel get_DurabilityLevel();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DurabilityLevel(DurabilityLevel value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_Timeout();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Timeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<QueryScanConsistency> get_ScanConsistency();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ScanConsistency(Nullable`1<QueryScanConsistency> value);
    [CompilerGeneratedAttribute]
public KeySpace get_MetadataCollection();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MetadataCollection(KeySpace value);
    [CompilerGeneratedAttribute]
public TransactionCleanupConfig get_CleanupConfig();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CleanupConfig(TransactionCleanupConfig value);
    [CompilerGeneratedAttribute]
public ILoggerFactory get_LoggerFactory();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_LoggerFactory(ILoggerFactory value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(TransactionConfig left, TransactionConfig right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(TransactionConfig left, TransactionConfig right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public virtual bool Equals(TransactionConfig other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual TransactionConfig <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(DurabilityLevel& DurabilityLevel, Nullable`1& Timeout, Nullable`1& ScanConsistency, KeySpace& MetadataCollection, TransactionCleanupConfig& CleanupConfig, ILoggerFactory& LoggerFactory);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("2")]
public class Couchbase.Integrated.Transactions.Config.TransactionQueryOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<QueryScanConsistency> <ScanConsistency>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public Nullable`1<QueryScanConsistency> ScanConsistency { get; public set; }
    public TransactionQueryOptions(Nullable`1<QueryScanConsistency> ScanConsistency);
    [CompilerGeneratedAttribute]
protected TransactionQueryOptions(TransactionQueryOptions original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public Nullable`1<QueryScanConsistency> get_ScanConsistency();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ScanConsistency(Nullable`1<QueryScanConsistency> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(TransactionQueryOptions left, TransactionQueryOptions right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(TransactionQueryOptions left, TransactionQueryOptions right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(TransactionQueryOptions other);
    [CompilerGeneratedAttribute]
public virtual TransactionQueryOptions <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Nullable`1& ScanConsistency);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.DataAccess.AtrRepository : object {
    private string _attemptId;
    private TransactionContext _overallContext;
    private string _prefixedAtrFieldDocsInserted;
    private string _prefixedAtrFieldDocsRemoved;
    private string _prefixedAtrFieldDocsReplaced;
    private string _prefixedAtrFieldExpiresAfterMsecs;
    private string _prefixedAtrFieldsPendingSentinel;
    private string _prefixedAtrFieldStartCommit;
    private string _prefixedAtrFieldStartTimestamp;
    private string _prefixedAtrFieldStatus;
    private string _prefixedAtrFieldTimestampComplete;
    private string _prefixedAtrFieldTimestampRollbackComplete;
    private string _prefixedAtrFieldTimestampRollbackStart;
    private string _prefixedAtrFieldTransactionId;
    private string _prefixedAtrFieldDurability;
    private Nullable`1<DurabilityLevel> _atrDurability;
    private ILogger _logger;
    [CompilerGeneratedAttribute]
private string <AtrId>k__BackingField;
    private string _atrRoot;
    [CompilerGeneratedAttribute]
private ICouchbaseCollection <Collection>k__BackingField;
    public string AtrId { get; }
    public ICouchbaseCollection Collection { get; }
    public string ScopeName { get; }
    public string BucketName { get; }
    public string CollectionName { get; }
    public string FullPath { get; }
    public AtrRef AtrRef { get; }
    public AtrRepository(string attemptId, TransactionContext overallContext, ICouchbaseCollection atrCollection, string atrId, Nullable`1<DurabilityLevel> atrDurability, ILoggerFactory loggerFactory, string testHookAtrId);
    [CompilerGeneratedAttribute]
public string get_AtrId();
    [CompilerGeneratedAttribute]
public ICouchbaseCollection get_Collection();
    public string get_ScopeName();
    public string get_BucketName();
    public string get_CollectionName();
    public string get_FullPath();
    public AtrRef get_AtrRef();
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.DataAccess.AtrRepository/<FindEntryForTransaction>d__35")]
public static Task`1<AtrEntry> FindEntryForTransaction(ICouchbaseCollection atrCollection, string atrId, string attemptId);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.DataAccess.AtrRepository/<GetAtrCollection>d__36")]
public static Task`1<ICouchbaseCollection> GetAtrCollection(AtrRef atrRef, ICouchbaseCollection anyCollection);
    public Task`1<ICouchbaseCollection> GetAtrCollection(AtrRef atrRef);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.DataAccess.AtrRepository/<MutateAtrComplete>d__38")]
public Task MutateAtrComplete();
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.DataAccess.AtrRepository/<MutateAtrPending>d__39")]
public Task MutateAtrPending(ulong exp, DurabilityLevel documentDurability);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.DataAccess.AtrRepository/<MutateAtrCommit>d__40")]
public Task MutateAtrCommit(IEnumerable`1<StagedMutation> stagedMutations);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.DataAccess.AtrRepository/<MutateAtrAborted>d__41")]
public Task MutateAtrAborted(IEnumerable`1<StagedMutation> stagedMutations);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.DataAccess.AtrRepository/<MutateAtrRolledBack>d__42")]
public Task MutateAtrRolledBack();
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.DataAccess.AtrRepository/<LookupAtrState>d__43")]
public Task`1<string> LookupAtrState();
    private ValueTuple`3<JArray, JArray, JArray> SplitMutationsForStaging(IEnumerable`1<StagedMutation> stagedMutations);
    private LookupInOptions GetLookupOpts();
    private MutateInOptions GetMutateOpts(StoreSemantics storeSemantics);
    [CompilerGeneratedAttribute]
private void <LookupAtrState>b__43_0(LookupInSpecBuilder specs);
    [CompilerGeneratedAttribute]
private void <LookupAtrState>b__43_1(LookupInOptions opts);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.DataAccess.CleanerRepository : object {
    [CompilerGeneratedAttribute]
private KeySpace <KeySpace>k__BackingField;
    private ICluster _cluster;
    private static int ExpiresSafetyMarginMillis;
    private static TimeSpan RemoveClientTimeout;
    private static object PlaceholderEmptyJObject;
    [NullableAttribute("2")]
private ICouchbaseCollection _collection;
    public KeySpace KeySpace { get; }
    public CleanerRepository(KeySpace keySpaceToClean, ICluster cluster);
    private static CleanerRepository();
    [CompilerGeneratedAttribute]
public KeySpace get_KeySpace();
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.DataAccess.CleanerRepository/<GetCollection>d__9")]
public Task`1<ICouchbaseCollection> GetCollection();
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.DataAccess.CleanerRepository/<CreatePlaceholderClientRecord>d__10")]
public Task CreatePlaceholderClientRecord(Nullable`1<ulong> cas);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.DataAccess.CleanerRepository/<GetClientRecord>d__11")]
public Task`1<ValueTuple`3<ClientRecordsIndex, ParsedHLC, Nullable`1<ulong>>> GetClientRecord();
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.DataAccess.CleanerRepository/<LookupAttempts>d__12")]
public Task`1<ValueTuple`2<Dictionary`2<string, AtrEntry>, ParsedHLC>> LookupAttempts(string atrId);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.DataAccess.CleanerRepository/<RemoveClient>d__13")]
public Task RemoveClient(string clientUuid, DurabilityLevel durability);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.DataAccess.CleanerRepository/<UpdateClientRecord>d__14")]
public Task UpdateClientRecord(string clientUuid, TimeSpan cleanupWindow, int numAtrs, IReadOnlyList`1<string> expiredClientIds);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Couchbase.Integrated.Transactions.DataAccess.DefaultOptions : object {
    public static IRetryStrategy RetryStrategy;
    private static DefaultOptions();
    [ExtensionAttribute]
public static LookupInOptions Defaults(LookupInOptions opts);
    [ExtensionAttribute]
public static MutateInOptions Defaults(MutateInOptions opts, Nullable`1<DurabilityLevel> durability);
    [ExtensionAttribute]
public static InsertOptions Defaults(InsertOptions opts, Nullable`1<DurabilityLevel> durability);
    [ExtensionAttribute]
public static RemoveOptions Defaults(RemoveOptions opts, Nullable`1<DurabilityLevel> durability);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.DataAccess.DocumentRepository : object {
    private TransactionContext _overallContext;
    private DurabilityLevel _durability;
    private string _attemptId;
    private JsonSerializer _metadataSerializer;
    private ITypeTranscoder _userDataTranscoder;
    public DocumentRepository(TransactionContext overallContext, DurabilityLevel durability, string attemptId, ITypeSerializer userDataSerializer);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.DataAccess.DocumentRepository/<MutateStagedInsert>d__6")]
public Task`1<ValueTuple`2<ulong, MutationToken>> MutateStagedInsert(ICouchbaseCollection collection, string docId, object content, AtrRepository atr, Nullable`1<ulong> cas);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.DataAccess.DocumentRepository/<MutateStagedReplace>d__7")]
public Task`1<ValueTuple`2<ulong, MutationToken>> MutateStagedReplace(TransactionGetResult doc, object content, AtrRepository atr, bool accessDeleted);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.DataAccess.DocumentRepository/<MutateStagedRemove>d__8")]
public Task`1<ValueTuple`2<ulong, MutationToken>> MutateStagedRemove(TransactionGetResult doc, AtrRepository atr);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.DataAccess.DocumentRepository/<RemoveStagedInsert>d__9")]
public Task`1<ValueTuple`2<ulong, MutationToken>> RemoveStagedInsert(TransactionGetResult doc);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.DataAccess.DocumentRepository/<UnstageInsertOrReplace>d__10")]
public Task`1<ValueTuple`2<ulong, MutationToken>> UnstageInsertOrReplace(ICouchbaseCollection collection, string docId, ulong cas, object finalDoc, bool insertMode);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.DataAccess.DocumentRepository/<UnstageRemove>d__11")]
public Task UnstageRemove(ICouchbaseCollection collection, string docId, ulong cas);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.DataAccess.DocumentRepository/<ClearTransactionMetadata>d__12")]
public Task ClearTransactionMetadata(ICouchbaseCollection collection, string docId, ulong cas, bool isDeleted);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.DataAccess.DocumentRepository/<LookupDocumentAsync>d__13")]
public Task`1<DocumentLookupResult> LookupDocumentAsync(ICouchbaseCollection collection, string docId, bool fullDocument);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.DataAccess.DocumentRepository/<LookupDocumentStaticAsync>d__14")]
internal static Task`1<DocumentLookupResult> LookupDocumentStaticAsync(ICouchbaseCollection collection, string docId, bool fullDocument);
    private MutateInOptions GetMutateInOptions(StoreSemantics storeSemantics);
    private List`1<MutateInSpec> CreateMutationSpecs(AtrRepository atr, string opType, object content, DocumentMetadata dm);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.DataModel.AtrRef : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BucketName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScopeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CollectionName>k__BackingField;
    [JsonPropertyAttribute("id")]
public string Id { get; public set; }
    [JsonPropertyAttribute("bkt")]
public string BucketName { get; public set; }
    [JsonPropertyAttribute("scp")]
public string ScopeName { get; public set; }
    [JsonPropertyAttribute("coll")]
public string CollectionName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_BucketName();
    [CompilerGeneratedAttribute]
public void set_BucketName(string value);
    [CompilerGeneratedAttribute]
public string get_ScopeName();
    [CompilerGeneratedAttribute]
public void set_ScopeName(string value);
    [CompilerGeneratedAttribute]
public string get_CollectionName();
    [CompilerGeneratedAttribute]
public void set_CollectionName(string value);
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.DataModel.ClientRecordEntry : object {
    private static string FIELD_HEARTBEAT;
    private static string FIELD_EXPIRES;
    private static string FIELD_NUM_ATRS;
    [CompilerGeneratedAttribute]
private string <HeartbeatMutationCas>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ExpiresMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumAtrs>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [JsonPropertyAttribute("heartbeat_ms")]
public string HeartbeatMutationCas { get; public set; }
    [JsonPropertyAttribute("expires_ms")]
public long ExpiresMilliseconds { get; public set; }
    [JsonIgnoreAttribute]
public Nullable`1<DateTimeOffset> ParsedMutationCas { get; }
    [JsonIgnoreAttribute]
public Nullable`1<DateTimeOffset> Expires { get; }
    [JsonPropertyAttribute("num_atrs")]
public int NumAtrs { get; public set; }
    [CompilerGeneratedAttribute]
protected ClientRecordEntry(ClientRecordEntry original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    public static string PathForEntry(string clientUuid);
    public static string PathForHeartbeat(string clientUuid);
    public static string PathForExpires(string clientUuid);
    public static string PathForNumAtrs(string clientUuid);
    [CompilerGeneratedAttribute]
public string get_HeartbeatMutationCas();
    [CompilerGeneratedAttribute]
public void set_HeartbeatMutationCas(string value);
    [CompilerGeneratedAttribute]
public long get_ExpiresMilliseconds();
    [CompilerGeneratedAttribute]
public void set_ExpiresMilliseconds(long value);
    public Nullable`1<DateTimeOffset> get_ParsedMutationCas();
    public Nullable`1<DateTimeOffset> get_Expires();
    [CompilerGeneratedAttribute]
public int get_NumAtrs();
    [CompilerGeneratedAttribute]
public void set_NumAtrs(int value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(ClientRecordEntry left, ClientRecordEntry right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(ClientRecordEntry left, ClientRecordEntry right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(ClientRecordEntry other);
    [CompilerGeneratedAttribute]
public virtual ClientRecordEntry <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.DataModel.ClientRecordsIndex : object {
    public static string CLIENT_RECORD_DOC_ID;
    public static string VBUCKET_HLC;
    public static string FIELD_RECORDS;
    public static string FIELD_CLIENTS;
    public static string FIELD_CLIENTS_FULL;
    public static string FIELD_OVERRIDE;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, ClientRecordEntry> <Clients>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ClientRecordsOverride <Override>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [JsonPropertyAttribute("clients")]
public Dictionary`2<string, ClientRecordEntry> Clients { get; public set; }
    [NullableAttribute("2")]
[JsonPropertyAttribute("override")]
public ClientRecordsOverride Override { get; public set; }
    [CompilerGeneratedAttribute]
protected ClientRecordsIndex(ClientRecordsIndex original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, ClientRecordEntry> get_Clients();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Clients(Dictionary`2<string, ClientRecordEntry> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ClientRecordsOverride get_Override();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Override(ClientRecordsOverride value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(ClientRecordsIndex left, ClientRecordsIndex right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(ClientRecordsIndex left, ClientRecordsIndex right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(ClientRecordsIndex other);
    [CompilerGeneratedAttribute]
public virtual ClientRecordsIndex <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.DataModel.ClientRecordsOverride : object {
    public static string FIELD_OVERRIDE_ENABLED;
    public static string FIELD_OVERRIDE_EXPIRES;
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ExpiresUnixNanos>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [JsonPropertyAttribute("enabled")]
public bool Enabled { get; public set; }
    [JsonPropertyAttribute("expires")]
public long ExpiresUnixNanos { get; public set; }
    [JsonIgnoreAttribute]
public DateTimeOffset Expires { get; }
    [CompilerGeneratedAttribute]
protected ClientRecordsOverride(ClientRecordsOverride original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public long get_ExpiresUnixNanos();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ExpiresUnixNanos(long value);
    public DateTimeOffset get_Expires();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(ClientRecordsOverride left, ClientRecordsOverride right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(ClientRecordsOverride left, ClientRecordsOverride right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(ClientRecordsOverride other);
    [CompilerGeneratedAttribute]
public virtual ClientRecordsOverride <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.DataModel.CompositeId : object {
    [CompilerGeneratedAttribute]
private string <Transactionid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AttemptId>k__BackingField;
    [JsonPropertyAttribute("txn")]
public string Transactionid { get; public set; }
    [JsonPropertyAttribute("atmpt")]
public string AttemptId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Transactionid();
    [CompilerGeneratedAttribute]
public void set_Transactionid(string value);
    [CompilerGeneratedAttribute]
public string get_AttemptId();
    [CompilerGeneratedAttribute]
public void set_AttemptId(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonSourceGenerationOptionsAttribute]
[JsonSerializableAttribute("Couchbase.Integrated.Transactions.DataModel.QueryErrorCause")]
[GeneratedCodeAttribute("System.Text.Json.SourceGeneration", "8.0.10.31311")]
internal class Couchbase.Integrated.Transactions.DataModel.DataModelSerializerContext : JsonSerializerContext {
    [NullableAttribute("2")]
private JsonTypeInfo`1<bool> _Boolean;
    [NullableAttribute("2")]
private JsonTypeInfo`1<Nullable`1<bool>> _NullableBoolean;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<QueryErrorCause> _QueryErrorCause;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<object> _Object;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<string> _String;
    private static JsonSerializerOptions s_defaultOptions;
    [CompilerGeneratedAttribute]
private static DataModelSerializerContext <Default>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JsonSerializerOptions <GeneratedSerializerOptions>k__BackingField;
    public JsonTypeInfo`1<bool> Boolean { get; }
    public JsonTypeInfo`1<Nullable`1<bool>> NullableBoolean { get; }
    public JsonTypeInfo`1<QueryErrorCause> QueryErrorCause { get; }
    public JsonTypeInfo`1<object> Object { get; }
    public JsonTypeInfo`1<string> String { get; }
    public static DataModelSerializerContext Default { get; }
    [NullableAttribute("2")]
protected JsonSerializerOptions GeneratedSerializerOptions { get; }
    public DataModelSerializerContext(JsonSerializerOptions options);
    private static DataModelSerializerContext();
    public JsonTypeInfo`1<bool> get_Boolean();
    private JsonTypeInfo`1<bool> Create_Boolean(JsonSerializerOptions options);
    public JsonTypeInfo`1<Nullable`1<bool>> get_NullableBoolean();
    private JsonTypeInfo`1<Nullable`1<bool>> Create_NullableBoolean(JsonSerializerOptions options);
    public JsonTypeInfo`1<QueryErrorCause> get_QueryErrorCause();
    private JsonTypeInfo`1<QueryErrorCause> Create_QueryErrorCause(JsonSerializerOptions options);
    private static JsonPropertyInfo[] QueryErrorCausePropInit(JsonSerializerOptions options);
    private static JsonParameterInfoValues[] QueryErrorCauseCtorParamInit();
    public JsonTypeInfo`1<object> get_Object();
    private JsonTypeInfo`1<object> Create_Object(JsonSerializerOptions options);
    public JsonTypeInfo`1<string> get_String();
    private JsonTypeInfo`1<string> Create_String(JsonSerializerOptions options);
    [CompilerGeneratedAttribute]
public static DataModelSerializerContext get_Default();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual JsonSerializerOptions get_GeneratedSerializerOptions();
    private static bool TryGetTypeInfoForRuntimeCustomConverter(JsonSerializerOptions options, JsonTypeInfo`1& jsonTypeInfo);
    private static JsonConverter GetRuntimeConverterForType(Type type, JsonSerializerOptions options);
    private static JsonConverter ExpandConverter(Type type, JsonConverter converter, JsonSerializerOptions options, bool validateCanConvert);
    public virtual JsonTypeInfo GetTypeInfo(Type type);
    private sealed virtual override JsonTypeInfo global::System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver.GetTypeInfo(Type type, JsonSerializerOptions options);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.DataModel.DocumentLookupResult : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ILookupInResult <LookupInResult>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private TransactionXattrs <TransactionXattrs>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentMetadata <DocumentMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IContentAsWrapper <UnstagedContent>k__BackingField;
    [CompilerGeneratedAttribute]
private IContentAsWrapper <StagedContent>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ICouchbaseCollection <DocumentCollection>k__BackingField;
    [NullableAttribute("1")]
private ILookupInResult LookupInResult { get; }
    [NullableAttribute("1")]
public string Id { get; }
    public TransactionXattrs TransactionXattrs { get; public set; }
    public DocumentMetadata DocumentMetadata { get; }
    public bool IsDeleted { get; }
    public ulong Cas { get; }
    internal IContentAsWrapper UnstagedContent { get; }
    internal IContentAsWrapper StagedContent { get; }
    [NullableAttribute("1")]
internal ICouchbaseCollection DocumentCollection { get; }
    [NullableContextAttribute("1")]
internal DocumentLookupResult(string id, IContentAsWrapper unstagedContent, IContentAsWrapper stagedContent, ILookupInResult lookupInResult, DocumentMetadata documentMetadata, ICouchbaseCollection documentCollection);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private ILookupInResult get_LookupInResult();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public TransactionXattrs get_TransactionXattrs();
    [CompilerGeneratedAttribute]
public void set_TransactionXattrs(TransactionXattrs value);
    [CompilerGeneratedAttribute]
public DocumentMetadata get_DocumentMetadata();
    public bool get_IsDeleted();
    public ulong get_Cas();
    [CompilerGeneratedAttribute]
internal IContentAsWrapper get_UnstagedContent();
    [CompilerGeneratedAttribute]
internal IContentAsWrapper get_StagedContent();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal ICouchbaseCollection get_DocumentCollection();
    [NullableContextAttribute("1")]
public TransactionGetResult GetPreTransactionResult();
    [NullableContextAttribute("1")]
public TransactionGetResult GetPostTransactionResult();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.DataModel.ParsedHLC : object {
    [CompilerGeneratedAttribute]
private string <now>k__BackingField;
    [CompilerGeneratedAttribute]
private string <mode>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string now { get; public set; }
    public string mode { get; public set; }
    [JsonIgnoreAttribute]
public DateTimeOffset NowTime { get; }
    [JsonIgnoreAttribute]
public CasMode CasModeParsed { get; }
    public ParsedHLC(string now, string mode);
    [CompilerGeneratedAttribute]
protected ParsedHLC(ParsedHLC original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_now();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_now(string value);
    [CompilerGeneratedAttribute]
public string get_mode();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_mode(string value);
    public DateTimeOffset get_NowTime();
    public CasMode get_CasModeParsed();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(ParsedHLC left, ParsedHLC right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(ParsedHLC left, ParsedHLC right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(ParsedHLC other);
    [CompilerGeneratedAttribute]
public virtual ParsedHLC <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& now, String& mode);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.DataModel.QueryBeginWorkResponse : object {
    [CompilerGeneratedAttribute]
private string <txid>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string txid { get; public set; }
    public QueryBeginWorkResponse(string txid);
    [CompilerGeneratedAttribute]
protected QueryBeginWorkResponse(QueryBeginWorkResponse original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_txid();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_txid(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(QueryBeginWorkResponse left, QueryBeginWorkResponse right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(QueryBeginWorkResponse left, QueryBeginWorkResponse right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public virtual bool Equals(QueryBeginWorkResponse other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual QueryBeginWorkResponse <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& txid);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.DataModel.QueryErrorCause : object {
    [CompilerGeneratedAttribute]
private object <cause>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <rollback>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <retry>k__BackingField;
    [CompilerGeneratedAttribute]
private string <raise>k__BackingField;
    public object cause { get; }
    public Nullable`1<bool> rollback { get; }
    public Nullable`1<bool> retry { get; }
    public string raise { get; }
    public QueryErrorCause(object cause, Nullable`1<bool> rollback, Nullable`1<bool> retry, string raise);
    [CompilerGeneratedAttribute]
public object get_cause();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_rollback();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_retry();
    [CompilerGeneratedAttribute]
public string get_raise();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.DataModel.QueryGetResult : object {
    [CompilerGeneratedAttribute]
private string <scas>k__BackingField;
    [CompilerGeneratedAttribute]
private object <doc>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JObject <txnMeta>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, object> <extras>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string scas { get; public set; }
    public object doc { get; public set; }
    [NullableAttribute("2")]
public JObject txnMeta { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsonExtensionDataAttribute]
private IDictionary`2<string, object> extras { get; private set; }
    public QueryGetResult(string scas, object doc, JObject txnMeta);
    [CompilerGeneratedAttribute]
protected QueryGetResult(QueryGetResult original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_scas();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_scas(string value);
    [CompilerGeneratedAttribute]
public object get_doc();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_doc(object value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public JObject get_txnMeta();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_txnMeta(JObject value);
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> get_extras();
    [CompilerGeneratedAttribute]
private void set_extras(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(QueryGetResult left, QueryGetResult right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(QueryGetResult left, QueryGetResult right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(QueryGetResult other);
    [CompilerGeneratedAttribute]
public virtual QueryGetResult <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& scas, Object& doc, JObject& txnMeta);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.DataModel.QueryInsertResult : object {
    [CompilerGeneratedAttribute]
private string <scas>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string scas { get; public set; }
    public QueryInsertResult(string scas);
    [CompilerGeneratedAttribute]
protected QueryInsertResult(QueryInsertResult original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_scas();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_scas(string value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(QueryInsertResult left, QueryInsertResult right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(QueryInsertResult left, QueryInsertResult right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(QueryInsertResult other);
    [CompilerGeneratedAttribute]
public virtual QueryInsertResult <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& scas);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.DataModel.QueryTxData : object {
    [CompilerGeneratedAttribute]
private CompositeId <id>k__BackingField;
    [CompilerGeneratedAttribute]
private TxDataState <state>k__BackingField;
    [CompilerGeneratedAttribute]
private TxDataReportedConfig <config>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private AtrRef <atr>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<TxDataMutation> <mutations>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public CompositeId id { get; public set; }
    public TxDataState state { get; public set; }
    public TxDataReportedConfig config { get; public set; }
    [NullableAttribute("2")]
public AtrRef atr { get; public set; }
    public IEnumerable`1<TxDataMutation> mutations { get; public set; }
    public QueryTxData(CompositeId id, TxDataState state, TxDataReportedConfig config, AtrRef atr, IEnumerable`1<TxDataMutation> mutations);
    [CompilerGeneratedAttribute]
protected QueryTxData(QueryTxData original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public CompositeId get_id();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_id(CompositeId value);
    [CompilerGeneratedAttribute]
public TxDataState get_state();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_state(TxDataState value);
    [CompilerGeneratedAttribute]
public TxDataReportedConfig get_config();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_config(TxDataReportedConfig value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public AtrRef get_atr();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_atr(AtrRef value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<TxDataMutation> get_mutations();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_mutations(IEnumerable`1<TxDataMutation> value);
    public JObject ToJson();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(QueryTxData left, QueryTxData right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(QueryTxData left, QueryTxData right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(QueryTxData other);
    [CompilerGeneratedAttribute]
public virtual QueryTxData <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(CompositeId& id, TxDataState& state, TxDataReportedConfig& config, AtrRef& atr, IEnumerable`1& mutations);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.DataModel.ShortStringDurabilityLevel : object {
    [CompilerGeneratedAttribute]
private DurabilityLevel <Value>k__BackingField;
    public static ShortStringDurabilityLevel Majority;
    public static ShortStringDurabilityLevel MajorityAndPersistToActive;
    public static ShortStringDurabilityLevel PersistToMajority;
    public static ShortStringDurabilityLevel None;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public DurabilityLevel Value { get; public set; }
    public ShortStringDurabilityLevel(DurabilityLevel Value);
    [CompilerGeneratedAttribute]
protected ShortStringDurabilityLevel(ShortStringDurabilityLevel original);
    private static ShortStringDurabilityLevel();
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public DurabilityLevel get_Value();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Value(DurabilityLevel value);
    [NullableContextAttribute("2")]
public static ShortStringDurabilityLevel FromString(string s);
    public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(ShortStringDurabilityLevel left, ShortStringDurabilityLevel right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(ShortStringDurabilityLevel left, ShortStringDurabilityLevel right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(ShortStringDurabilityLevel other);
    [CompilerGeneratedAttribute]
public virtual ShortStringDurabilityLevel <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(DurabilityLevel& Value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.DataModel.StagedOperation : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private object <StagedDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Crc32>k__BackingField;
    [JsonPropertyAttribute("type")]
public string Type { get; public set; }
    [JsonPropertyAttribute("stgd")]
public object StagedDocument { get; public set; }
    [JsonPropertyAttribute("crc32")]
public string Crc32 { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public object get_StagedDocument();
    [CompilerGeneratedAttribute]
public void set_StagedDocument(object value);
    [CompilerGeneratedAttribute]
public string get_Crc32();
    [CompilerGeneratedAttribute]
public void set_Crc32(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.DataModel.TransactionXattrs : object {
    [CompilerGeneratedAttribute]
private CompositeId <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private AtrRef <AtrRef>k__BackingField;
    [CompilerGeneratedAttribute]
private StagedOperation <Operation>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentMetadata <RestoreMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private JObject <ForwardCompatibility>k__BackingField;
    [JsonPropertyAttribute("id")]
public CompositeId Id { get; public set; }
    [JsonPropertyAttribute("atr")]
public AtrRef AtrRef { get; public set; }
    [JsonPropertyAttribute("op")]
public StagedOperation Operation { get; public set; }
    [JsonPropertyAttribute("restore")]
public DocumentMetadata RestoreMetadata { get; public set; }
    [JsonPropertyAttribute("fc")]
public JObject ForwardCompatibility { get; public set; }
    [CompilerGeneratedAttribute]
public CompositeId get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(CompositeId value);
    [CompilerGeneratedAttribute]
public AtrRef get_AtrRef();
    [CompilerGeneratedAttribute]
public void set_AtrRef(AtrRef value);
    [CompilerGeneratedAttribute]
public StagedOperation get_Operation();
    [CompilerGeneratedAttribute]
public void set_Operation(StagedOperation value);
    [CompilerGeneratedAttribute]
public DocumentMetadata get_RestoreMetadata();
    [CompilerGeneratedAttribute]
public void set_RestoreMetadata(DocumentMetadata value);
    [CompilerGeneratedAttribute]
public JObject get_ForwardCompatibility();
    [CompilerGeneratedAttribute]
public void set_ForwardCompatibility(JObject value);
    internal void ValidateMinimum();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.DataModel.TxDataMutation : object {
    [CompilerGeneratedAttribute]
private string <scp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <coll>k__BackingField;
    [CompilerGeneratedAttribute]
private string <bkt>k__BackingField;
    [CompilerGeneratedAttribute]
private string <id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <cas>k__BackingField;
    [CompilerGeneratedAttribute]
private string <type>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string scp { get; public set; }
    public string coll { get; public set; }
    public string bkt { get; public set; }
    public string id { get; public set; }
    public string cas { get; public set; }
    public string type { get; public set; }
    public TxDataMutation(string scp, string coll, string bkt, string id, string cas, string type);
    [CompilerGeneratedAttribute]
protected TxDataMutation(TxDataMutation original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_scp();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_scp(string value);
    [CompilerGeneratedAttribute]
public string get_coll();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_coll(string value);
    [CompilerGeneratedAttribute]
public string get_bkt();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_bkt(string value);
    [CompilerGeneratedAttribute]
public string get_id();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_id(string value);
    [CompilerGeneratedAttribute]
public string get_cas();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_cas(string value);
    [CompilerGeneratedAttribute]
public string get_type();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_type(string value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(TxDataMutation left, TxDataMutation right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(TxDataMutation left, TxDataMutation right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(TxDataMutation other);
    [CompilerGeneratedAttribute]
public virtual TxDataMutation <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& scp, String& coll, String& bkt, String& id, String& cas, String& type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.DataModel.TxDataReportedConfig : object {
    [CompilerGeneratedAttribute]
private long <kvTimeoutMs>k__BackingField;
    [CompilerGeneratedAttribute]
private int <numAtrs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <durabilityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public long kvTimeoutMs { get; public set; }
    public int numAtrs { get; public set; }
    public string durabilityLevel { get; public set; }
    public TxDataReportedConfig(long kvTimeoutMs, int numAtrs, string durabilityLevel);
    [CompilerGeneratedAttribute]
protected TxDataReportedConfig(TxDataReportedConfig original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public long get_kvTimeoutMs();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_kvTimeoutMs(long value);
    [CompilerGeneratedAttribute]
public int get_numAtrs();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_numAtrs(int value);
    [CompilerGeneratedAttribute]
public string get_durabilityLevel();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_durabilityLevel(string value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(TxDataReportedConfig left, TxDataReportedConfig right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(TxDataReportedConfig left, TxDataReportedConfig right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(TxDataReportedConfig other);
    [CompilerGeneratedAttribute]
public virtual TxDataReportedConfig <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Int64& kvTimeoutMs, Int32& numAtrs, String& durabilityLevel);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.DataModel.TxDataState : object {
    [CompilerGeneratedAttribute]
private long <timeLeftMs>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public long timeLeftMs { get; public set; }
    public TxDataState(long timeLeftMs);
    [CompilerGeneratedAttribute]
protected TxDataState(TxDataState original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public long get_timeLeftMs();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_timeLeftMs(long value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(TxDataState left, TxDataState right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(TxDataState left, TxDataState right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(TxDataState other);
    [CompilerGeneratedAttribute]
public virtual TxDataState <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Int64& timeLeftMs);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Error.Attempts.ActiveTransactionRecordEntryNotFoundException : CouchbaseException {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public string Id { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Id(string value);
}
internal class Couchbase.Integrated.Transactions.Error.Attempts.ActiveTransactionRecordNotFoundException : CouchbaseException {
}
internal class Couchbase.Integrated.Transactions.Error.Attempts.ActiveTransactionRecordsFullException : AttemptException {
    [NullableContextAttribute("1")]
internal ActiveTransactionRecordsFullException(AttemptContext ctx, string msg);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Error.Attempts.AttemptException : CouchbaseException {
    private AttemptContext _ctx;
    public AttemptException(AttemptContext ctx, string msg);
    public AttemptException(AttemptContext ctx, string msg, Exception innerException);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Error.Attempts.AttemptExpiredException : AttemptException {
    public AttemptExpiredException(AttemptContext ctx, string msg);
    public AttemptExpiredException(AttemptContext ctx, string msg, Exception innerException);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Error.Attempts.DocumentAlreadyInTransactionException : AttemptException {
    [CompilerGeneratedAttribute]
private TransactionGetResult <Doc>k__BackingField;
    public TransactionGetResult Doc { get; }
    private DocumentAlreadyInTransactionException(AttemptContext ctx, TransactionGetResult doc, string msg);
    [CompilerGeneratedAttribute]
public TransactionGetResult get_Doc();
    public static DocumentAlreadyInTransactionException Create(AttemptContext ctx, TransactionGetResult doc);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Error.Attempts.ErrorTriage : object {
    private AttemptContext _ctx;
    [NullableAttribute("2")]
private ILogger _logger;
    public ErrorTriage(AttemptContext ctx, ILoggerFactory loggerFactory);
    public TransactionOperationFailedException AssertNotNull(TransactionOperationFailedException toThrow, ErrorClass ec, Exception innerException);
    public TransactionOperationFailedException AssertNotNull(ValueTuple`2<ErrorClass, TransactionOperationFailedException> triageResult, Exception innerException);
    private ErrorBuilder Error(ErrorClass ec, Exception err, Nullable`1<bool> retry, Nullable`1<bool> rollback, Nullable`1<FinalError> raise);
    public ValueTuple`2<ErrorClass, TransactionOperationFailedException> TriageGetErrors(Exception err);
    public ValueTuple`2<ErrorClass, TransactionOperationFailedException> TriageCreateStagedRemoveOrReplaceError(Exception err);
    public ValueTuple`2<ErrorClass, TransactionOperationFailedException> TriageCreateStagedInsertErrors(Exception err, Boolean& expirationOvertimeMode);
    public ValueTuple`2<ErrorClass, TransactionOperationFailedException> TriageDocExistsOnStagedInsertErrors(Exception err);
    public ValueTuple`2<ErrorClass, TransactionOperationFailedException> TriageSetAtrPendingErrors(Exception err, Boolean& expirationOvertimeMode);
    internal void ThrowIfCommitWithPreviousErrors(IEnumerable`1<TransactionOperationFailedException> previousErrorOperations);
    public ValueTuple`2<ErrorClass, TransactionOperationFailedException> TriageSetAtrCompleteErrors(Exception err);
    public ValueTuple`2<ErrorClass, TransactionOperationFailedException> TriageUnstageRemoveErrors(Exception err, Boolean& expirationOvertimeMode);
    public ValueTuple`2<ErrorClass, TransactionOperationFailedException> TriageUnstageInsertOrReplaceErrors(Exception err, Boolean& expirationOvertimeMode);
    public ValueTuple`2<ErrorClass, TransactionOperationFailedException> TriageSetAtrAbortedErrors(Exception err);
    public ValueTuple`2<ErrorClass, TransactionOperationFailedException> TriageSetAtrRolledBackErrors(Exception err);
    public ValueTuple`2<ErrorClass, TransactionOperationFailedException> TriageRollbackStagedInsertErrors(Exception err);
    internal ValueTuple`2<ErrorClass, TransactionOperationFailedException> TriageRollbackStagedRemoveOrReplaceErrors(Exception err);
    internal ValueTuple`2<ErrorClass, TransactionOperationFailedException> TriageAtrLookupInMavErrors(Exception err);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Error.ErrorBuilder : object {
    [NullableAttribute("2")]
public static ErrorBuilder None;
    [NullableAttribute("2")]
private AttemptContext _ctx;
    private ErrorClass _causingErrorClass;
    private FinalError _toRaise;
    private bool _rollbackAttempt;
    private bool _retryTransaction;
    private Exception _cause;
    [NullableContextAttribute("2")]
private ErrorBuilder(AttemptContext ctx, ErrorClass causingErrorClass);
    [NullableContextAttribute("2")]
public static ErrorBuilder CreateError(AttemptContext ctx, ErrorClass causingErrorClass, Exception causingException);
    public ErrorBuilder RaiseException(FinalError finalErrorToRaise);
    public ErrorBuilder DoNotRollbackAttempt();
    public ErrorBuilder RetryTransaction();
    public ErrorBuilder Cause(Exception cause);
    public TransactionOperationFailedException Build();
}
public enum Couchbase.Integrated.Transactions.Error.ErrorClass : Enum {
    public int value__;
    public static ErrorClass Undefined;
    public static ErrorClass FailTransient;
    public static ErrorClass FailHard;
    public static ErrorClass FailOther;
    public static ErrorClass FailAmbiguous;
    public static ErrorClass FailDocAlreadyExists;
    public static ErrorClass FailDocNotFound;
    public static ErrorClass FailPathAlreadyExists;
    public static ErrorClass FailPathNotFound;
    public static ErrorClass FailCasMismatch;
    public static ErrorClass FailExpiry;
    public static ErrorClass FailWriteWriteConflict;
    public static ErrorClass FailAtrFull;
    public static ErrorClass TransactionOperationFailed;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Couchbase.Integrated.Transactions.Error.ErrorClassExtensions : object {
    [ExtensionAttribute]
public static ErrorClass Classify(Exception ex);
    [ExtensionAttribute]
internal static bool IsFailTransient(Exception ex);
    [ExtensionAttribute]
internal static bool IsFailAmbiguous(Exception ex);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Error.External.ForwardCompatibilityFailureException : Exception {
    public ForwardCompatibilityFailureException(string message);
    public ForwardCompatibilityFailureException(string message, Exception innerException);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Error.External.ForwardCompatibilityFailureRequiresRetryException : Exception {
    public ForwardCompatibilityFailureRequiresRetryException(string message);
    public ForwardCompatibilityFailureRequiresRetryException(string message, Exception innerException);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Error.External.PreviousOperationFailedException : Exception {
    [CompilerGeneratedAttribute]
private IEnumerable`1<Exception> <Causes>k__BackingField;
    private IEnumerable`1<Exception> Causes { get; }
    public PreviousOperationFailedException(IEnumerable`1<Exception> causes);
    [CompilerGeneratedAttribute]
private IEnumerable`1<Exception> get_Causes();
}
internal class Couchbase.Integrated.Transactions.Error.External.TransactionAbortedExternallyException : Exception {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Error.External.TransactionOperationFailedException : CouchbaseException {
    [NullableAttribute("2")]
public static TransactionOperationFailedException None;
    private static long ExceptionCount;
    [CompilerGeneratedAttribute]
private long <ExceptionNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorClass <CausingErrorClass>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AutoRollbackAttempt>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RetryTransaction>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Cause>k__BackingField;
    [CompilerGeneratedAttribute]
private FinalError <FinalErrorToRaise>k__BackingField;
    public long ExceptionNumber { get; }
    public ErrorClass CausingErrorClass { get; }
    public bool AutoRollbackAttempt { get; }
    public bool RetryTransaction { get; }
    public Exception Cause { get; }
    public FinalError FinalErrorToRaise { get; }
    public TransactionOperationFailedException(ErrorClass causingErrorClass, bool autoRollbackAttempt, bool retryTransaction, Exception cause, FinalError finalErrorToRaise);
    [CompilerGeneratedAttribute]
public long get_ExceptionNumber();
    [CompilerGeneratedAttribute]
public sealed virtual ErrorClass get_CausingErrorClass();
    [CompilerGeneratedAttribute]
public bool get_AutoRollbackAttempt();
    [CompilerGeneratedAttribute]
public bool get_RetryTransaction();
    [CompilerGeneratedAttribute]
public Exception get_Cause();
    [CompilerGeneratedAttribute]
public FinalError get_FinalErrorToRaise();
}
internal class Couchbase.Integrated.Transactions.Error.Internal.AttemptNotFoundOnQueryException : Exception {
}
internal interface Couchbase.Integrated.Transactions.Error.Internal.IClassifiedTransactionError {
    public ErrorClass CausingErrorClass { get; }
    public abstract virtual ErrorClass get_CausingErrorClass();
}
internal class Couchbase.Integrated.Transactions.Error.Internal.LostCleanupFailedException : Exception {
    [CompilerGeneratedAttribute]
private ErrorClass <CausingErrorClass>k__BackingField;
    public ErrorClass CausingErrorClass { get; public set; }
    [NullableContextAttribute("1")]
public LostCleanupFailedException(string message, Exception innerException);
    [NullableContextAttribute("1")]
public LostCleanupFailedException(string message);
    [CompilerGeneratedAttribute]
public sealed virtual ErrorClass get_CausingErrorClass();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CausingErrorClass(ErrorClass value);
}
internal class Couchbase.Integrated.Transactions.Error.TransactionCommitAmbiguousException : TransactionFailedException {
    [NullableContextAttribute("1")]
public TransactionCommitAmbiguousException(string message, Exception innerException, TransactionResult result);
}
internal class Couchbase.Integrated.Transactions.Error.TransactionExpiredException : TransactionFailedException {
    public ErrorClass CausingErrorClass { get; }
    [NullableContextAttribute("1")]
public TransactionExpiredException(string message, Exception innerException, TransactionResult result);
    public sealed virtual ErrorClass get_CausingErrorClass();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Error.TransactionFailedException : CouchbaseException {
    [CompilerGeneratedAttribute]
private TransactionResult <Result>k__BackingField;
    public TransactionResult Result { get; }
    [NullableContextAttribute("1")]
public TransactionFailedException(string message, Exception innerException, TransactionResult result);
    [CompilerGeneratedAttribute]
public TransactionResult get_Result();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Forwards.CompatibilityCheck : object {
    public static char CheckBehaviorRetry;
    [CompilerGeneratedAttribute]
private Nullable`1<decimal> <ProtocolVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<char> <Behavior>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExtensionCheck>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <RetryDelay>k__BackingField;
    [JsonPropertyAttribute("p")]
public Nullable`1<decimal> ProtocolVersion { get; public set; }
    [JsonPropertyAttribute("b")]
public Nullable`1<char> Behavior { get; public set; }
    [JsonPropertyAttribute("e")]
public string ExtensionCheck { get; public set; }
    [JsonPropertyAttribute("ra")]
public Nullable`1<int> RetryDelay { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<decimal> get_ProtocolVersion();
    [CompilerGeneratedAttribute]
public void set_ProtocolVersion(Nullable`1<decimal> value);
    [CompilerGeneratedAttribute]
public Nullable`1<char> get_Behavior();
    [CompilerGeneratedAttribute]
public void set_Behavior(Nullable`1<char> value);
    [CompilerGeneratedAttribute]
public string get_ExtensionCheck();
    [CompilerGeneratedAttribute]
public void set_ExtensionCheck(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_RetryDelay();
    [CompilerGeneratedAttribute]
public void set_RetryDelay(Nullable`1<int> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Forwards.ForwardCompatibility : object {
    public static string WriteWriteConflictReadingAtr;
    public static string WriteWriteConflictReplacing;
    public static string WriteWriteConflictRemoving;
    public static string WriteWriteConflictInserting;
    public static string WriteWriteConflictInsertingGet;
    public static string Gets;
    public static string GetsReadingAtr;
    public static string CleanupEntry;
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.Forwards.ForwardCompatibility/<Check>d__8")]
public static Task Check(AttemptContext ctx, string interactionPoint, JObject fc);
}
[NullableContextAttribute("2")]
internal interface Couchbase.Integrated.Transactions.Internal.IContentAsWrapper {
    public abstract virtual T ContentAs();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Internal.JObjectContentWrapper : object {
    private object _originalContent;
    public JObjectContentWrapper(object originalContent);
    public sealed virtual T ContentAs();
}
internal class Couchbase.Integrated.Transactions.Internal.LookupInContentAsWrapper : object {
    [NullableAttribute("1")]
private ILookupInResult _lookupInResult;
    private int _specIndex;
    [NullableContextAttribute("1")]
public LookupInContentAsWrapper(ILookupInResult lookupInResult, int specIndex);
    [NullableContextAttribute("2")]
public sealed virtual T ContentAs();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Internal.NonStreamingSerializerWrapper : object {
    private ITypeSerializer _serializer;
    public NonStreamingSerializerWrapper(ITypeSerializer serializer);
    public static ITypeSerializer FromCluster(ICluster cluster);
    [NullableContextAttribute("2")]
public sealed virtual T Deserialize(ReadOnlyMemory`1<byte> buffer);
    [NullableContextAttribute("2")]
public sealed virtual T Deserialize(Stream stream);
    public sealed virtual ValueTask`1<T> DeserializeAsync(Stream stream, CancellationToken cancellationToken);
    public sealed virtual void Serialize(Stream stream, object obj);
    public sealed virtual ValueTask SerializeAsync(Stream stream, object obj, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Internal.SingleQueryResultWrapper`1 : object {
    private IQueryResult`1<T> _wrapped;
    private AttemptContext _ctx;
    public IAsyncEnumerable`1<T> Rows { get; }
    [NullableAttribute("2")]
public QueryMetaData MetaData { get; }
    public List`1<Error> Errors { get; }
    public RetryReason RetryReason { get; }
    public SingleQueryResultWrapper`1(IQueryResult`1<T> wrapped, AttemptContext ctx);
    public sealed virtual IAsyncEnumerable`1<T> get_Rows();
    [NullableContextAttribute("2")]
public sealed virtual QueryMetaData get_MetaData();
    public sealed virtual List`1<Error> get_Errors();
    public sealed virtual RetryReason get_RetryReason();
    public sealed virtual void Dispose();
    public sealed virtual IAsyncEnumerator`1<T> GetAsyncEnumerator(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Internal.Test.DefaultCleanupTestHooks : object {
    public static ICleanupTestHooks Instance;
    private static DefaultCleanupTestHooks();
    public sealed virtual Task`1<Nullable`1<int>> BeforeCommitDoc(string id);
    public sealed virtual Task`1<Nullable`1<int>> BeforeDocGet(string id);
    public sealed virtual Task`1<Nullable`1<int>> BeforeRemoveDocStagedForRemoval(string id);
    public sealed virtual Task`1<Nullable`1<int>> BeforeRemoveDoc(string id);
    public Task`1<Nullable`1<int>> BeforeAtrGet(string id);
    public sealed virtual Task`1<Nullable`1<int>> BeforeAtrRemove(string id);
    public sealed virtual Task`1<Nullable`1<int>> BeforeRemoveLinks(string id);
    public sealed virtual Task`1<Nullable`1<int>> BeforeGetRecord(string clientUuid);
    public sealed virtual Task`1<Nullable`1<int>> BeforeUpdateRecord(string clientUuid);
    public sealed virtual Task`1<Nullable`1<int>> BeforeCreateRecord(string clientUuid);
    public sealed virtual Task`1<Nullable`1<int>> BeforeRemoveClient(string clientUuid);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.Internal.Test.DefaultTestHooks : object {
    public static ITestHooks Instance;
    public static string HOOK_ROLLBACK;
    public static string HOOK_GET;
    public static string HOOK_INSERT;
    public static string HOOK_REPLACE;
    public static string HOOK_REMOVE;
    public static string HOOK_BEFORE_COMMIT;
    public static string HOOK_ABORT_GET_ATR;
    public static string HOOK_ROLLBACK_DOC;
    public static string HOOK_DELETE_INSERTED;
    public static string HOOK_CREATE_STAGED_INSERT;
    public static string HOOK_INSERT_QUERY;
    public static string HOOK_REMOVE_DOC;
    public static string HOOK_COMMIT_DOC;
    public static string HOOK_QUERY;
    public static string HOOK_ATR_COMMIT;
    public static string HOOK_ATR_COMMIT_AMBIGUITY_RESOLUTION;
    public static string HOOK_ATR_ABORT;
    public static string HOOK_ATR_ROLLBACK_COMPLETE;
    public static string HOOK_ATR_PENDING;
    public static string HOOK_ATR_COMPLETE;
    public static string HOOK_CHECK_WRITE_WRITE_CONFLICT;
    public static string HOOK_BEFORE_QUERY;
    public static string HOOK_AFTER_QUERY;
    public static string HOOK_QUERY_BEGIN_WORK;
    public static string HOOK_QUERY_COMMIT;
    public static string HOOK_QUERY_KV_GET;
    public static string HOOK_QUERY_KV_REPLACE;
    public static string HOOK_QUERY_KV_REMOVE;
    public static string HOOK_QUERY_KV_INSERT;
    public static string HOOK_QUERY_ROLLBACK;
    private static DefaultTestHooks();
    public sealed virtual Task`1<Nullable`1<int>> BeforeAtrCommit(AttemptContext self);
    public sealed virtual Task`1<Nullable`1<int>> AfterAtrCommit(AttemptContext self);
    public sealed virtual Task`1<Nullable`1<int>> BeforeDocCommitted(AttemptContext self, string id);
    public sealed virtual Task`1<Nullable`1<int>> BeforeDocRolledBack(AttemptContext self, string id);
    public sealed virtual Task`1<Nullable`1<int>> AfterDocCommittedBeforeSavingCas(AttemptContext self, string id);
    public sealed virtual Task`1<Nullable`1<int>> AfterDocCommitted(AttemptContext self, string id);
    public sealed virtual Task`1<Nullable`1<int>> AfterDocsCommitted(AttemptContext self);
    public sealed virtual Task`1<Nullable`1<int>> BeforeDocRemoved(AttemptContext self, string id);
    public sealed virtual Task`1<Nullable`1<int>> AfterDocRemovedPreRetry(AttemptContext self, string id);
    public sealed virtual Task`1<Nullable`1<int>> AfterDocRemovedPostRetry(AttemptContext self, string id);
    public sealed virtual Task`1<Nullable`1<int>> AfterDocsRemoved(AttemptContext self);
    public sealed virtual Task`1<Nullable`1<int>> BeforeAtrPending(AttemptContext self);
    public sealed virtual Task`1<Nullable`1<int>> AfterAtrPending(AttemptContext self);
    public sealed virtual Task`1<Nullable`1<int>> AfterAtrComplete(AttemptContext self);
    public sealed virtual Task`1<Nullable`1<int>> BeforeAtrComplete(AttemptContext self);
    public sealed virtual Task`1<Nullable`1<int>> BeforeAtrRolledBack(AttemptContext self);
    public sealed virtual Task`1<Nullable`1<int>> AfterGetComplete(AttemptContext self, string id);
    public sealed virtual Task`1<Nullable`1<int>> BeforeRollbackDeleteInserted(AttemptContext self, string id);
    public sealed virtual Task`1<Nullable`1<int>> AfterStagedReplaceComplete(AttemptContext self, string id);
    public sealed virtual Task`1<Nullable`1<int>> AfterStagedRemoveComplete(AttemptContext self, string id);
    public sealed virtual Task`1<Nullable`1<int>> BeforeStagedInsert(AttemptContext self, string id);
    public sealed virtual Task`1<Nullable`1<int>> BeforeStagedRemove(AttemptContext self, string id);
    public sealed virtual Task`1<Nullable`1<int>> BeforeStagedReplace(AttemptContext self, string id);
    public sealed virtual Task`1<Nullable`1<int>> AfterStagedInsertComplete(AttemptContext self, string id);
    public sealed virtual Task`1<Nullable`1<int>> BeforeGetAtrForAbort(AttemptContext self);
    public sealed virtual Task`1<Nullable`1<int>> BeforeAtrAborted(AttemptContext self);
    public sealed virtual Task`1<Nullable`1<int>> AfterAtrAborted(AttemptContext self);
    public sealed virtual Task`1<Nullable`1<int>> AfterAtrRolledBack(AttemptContext self);
    public sealed virtual Task`1<Nullable`1<int>> AfterRollbackReplaceOrRemove(AttemptContext self, string id);
    public sealed virtual Task`1<Nullable`1<int>> AfterRollbackDeleteInserted(AttemptContext self, string id);
    public sealed virtual Task`1<Nullable`1<int>> BeforeRemovingDocDuringStagedInsert(AttemptContext self, string id);
    public sealed virtual Task`1<Nullable`1<int>> BeforeCheckAtrEntryForBlockingDoc(AttemptContext self, string id);
    public sealed virtual Task`1<Nullable`1<int>> BeforeDocGet(AttemptContext self, string id);
    public sealed virtual Task`1<Nullable`1<int>> BeforeGetDocInExistsDuringStagedInsert(AttemptContext self, string id);
    public sealed virtual bool HasExpiredClientSideHook(AttemptContext self, string place, string docId);
    public sealed virtual Task`1<Nullable`1<int>> BeforeAtrCommitAmbiguityResolution(AttemptContext attemptContext);
    public sealed virtual Task`1<string> AtrIdForVBucket(AttemptContext self, int vbucketId);
    public sealed virtual Task`1<Nullable`1<int>> BeforeQuery(AttemptContext self, string statement);
    public sealed virtual Task`1<Nullable`1<int>> AfterQuery(AttemptContext self, string statement);
    public sealed virtual Task`1<Nullable`1<int>> BeforeRemoveStagedInsert(AttemptContext self, string id);
    public sealed virtual Task`1<Nullable`1<int>> AfterRemoveStagedInsert(AttemptContext self, string id);
}
[NullableContextAttribute("1")]
[InterfaceStabilityAttribute("2")]
internal interface Couchbase.Integrated.Transactions.Internal.Test.ICleanupTestHooks {
    public abstract virtual Task`1<Nullable`1<int>> BeforeCommitDoc(string id);
    public abstract virtual Task`1<Nullable`1<int>> BeforeDocGet(string id);
    public abstract virtual Task`1<Nullable`1<int>> BeforeRemoveDocStagedForRemoval(string id);
    public abstract virtual Task`1<Nullable`1<int>> BeforeRemoveDoc(string id);
    public abstract virtual Task`1<Nullable`1<int>> BeforeAtrRemove(string id);
    public abstract virtual Task`1<Nullable`1<int>> BeforeRemoveLinks(string id);
    public abstract virtual Task`1<Nullable`1<int>> BeforeGetRecord(string clientUuid);
    public abstract virtual Task`1<Nullable`1<int>> BeforeUpdateRecord(string clientUuid);
    public abstract virtual Task`1<Nullable`1<int>> BeforeCreateRecord(string clientUuid);
    public abstract virtual Task`1<Nullable`1<int>> BeforeRemoveClient(string clientUuid);
}
[NullableContextAttribute("1")]
[InterfaceStabilityAttribute("2")]
internal interface Couchbase.Integrated.Transactions.Internal.Test.ITestHooks {
    public abstract virtual Task`1<Nullable`1<int>> BeforeAtrCommit(AttemptContext self);
    public abstract virtual Task`1<Nullable`1<int>> AfterAtrCommit(AttemptContext self);
    public abstract virtual Task`1<Nullable`1<int>> BeforeDocCommitted(AttemptContext self, string id);
    public abstract virtual Task`1<Nullable`1<int>> BeforeDocRolledBack(AttemptContext self, string id);
    public abstract virtual Task`1<Nullable`1<int>> AfterDocCommittedBeforeSavingCas(AttemptContext self, string id);
    public abstract virtual Task`1<Nullable`1<int>> AfterDocCommitted(AttemptContext self, string id);
    public abstract virtual Task`1<Nullable`1<int>> AfterDocsCommitted(AttemptContext self);
    public abstract virtual Task`1<Nullable`1<int>> BeforeDocRemoved(AttemptContext self, string id);
    public abstract virtual Task`1<Nullable`1<int>> AfterDocRemovedPreRetry(AttemptContext self, string id);
    public abstract virtual Task`1<Nullable`1<int>> AfterDocRemovedPostRetry(AttemptContext self, string id);
    public abstract virtual Task`1<Nullable`1<int>> AfterDocsRemoved(AttemptContext self);
    public abstract virtual Task`1<Nullable`1<int>> BeforeAtrPending(AttemptContext self);
    public abstract virtual Task`1<Nullable`1<int>> AfterAtrPending(AttemptContext self);
    public abstract virtual Task`1<Nullable`1<int>> AfterAtrComplete(AttemptContext self);
    public abstract virtual Task`1<Nullable`1<int>> BeforeAtrComplete(AttemptContext self);
    public abstract virtual Task`1<Nullable`1<int>> BeforeAtrRolledBack(AttemptContext self);
    public abstract virtual Task`1<Nullable`1<int>> AfterGetComplete(AttemptContext self, string id);
    public abstract virtual Task`1<Nullable`1<int>> BeforeRollbackDeleteInserted(AttemptContext self, string id);
    public abstract virtual Task`1<Nullable`1<int>> AfterStagedReplaceComplete(AttemptContext self, string id);
    public abstract virtual Task`1<Nullable`1<int>> AfterStagedRemoveComplete(AttemptContext self, string id);
    public abstract virtual Task`1<Nullable`1<int>> BeforeStagedInsert(AttemptContext self, string id);
    public abstract virtual Task`1<Nullable`1<int>> BeforeStagedRemove(AttemptContext self, string id);
    public abstract virtual Task`1<Nullable`1<int>> BeforeStagedReplace(AttemptContext self, string id);
    public abstract virtual Task`1<Nullable`1<int>> AfterStagedInsertComplete(AttemptContext self, string id);
    public abstract virtual Task`1<Nullable`1<int>> BeforeGetAtrForAbort(AttemptContext self);
    public abstract virtual Task`1<Nullable`1<int>> BeforeAtrAborted(AttemptContext self);
    public abstract virtual Task`1<Nullable`1<int>> AfterAtrAborted(AttemptContext self);
    public abstract virtual Task`1<Nullable`1<int>> AfterAtrRolledBack(AttemptContext self);
    public abstract virtual Task`1<Nullable`1<int>> AfterRollbackReplaceOrRemove(AttemptContext self, string id);
    public abstract virtual Task`1<Nullable`1<int>> AfterRollbackDeleteInserted(AttemptContext self, string id);
    public abstract virtual Task`1<Nullable`1<int>> BeforeRemovingDocDuringStagedInsert(AttemptContext self, string id);
    public abstract virtual Task`1<Nullable`1<int>> BeforeCheckAtrEntryForBlockingDoc(AttemptContext self, string id);
    public abstract virtual Task`1<Nullable`1<int>> BeforeDocGet(AttemptContext self, string id);
    public abstract virtual Task`1<Nullable`1<int>> BeforeGetDocInExistsDuringStagedInsert(AttemptContext self, string id);
    public abstract virtual bool HasExpiredClientSideHook(AttemptContext self, string place, string docId);
    public abstract virtual Task`1<Nullable`1<int>> BeforeAtrCommitAmbiguityResolution(AttemptContext attemptContext);
    public abstract virtual Task`1<string> AtrIdForVBucket(AttemptContext self, int vbucketId);
    public abstract virtual Task`1<Nullable`1<int>> BeforeQuery(AttemptContext self, string statement);
    public abstract virtual Task`1<Nullable`1<int>> AfterQuery(AttemptContext self, string statement);
    public abstract virtual Task`1<Nullable`1<int>> BeforeRemoveStagedInsert(AttemptContext self, string id);
    public abstract virtual Task`1<Nullable`1<int>> AfterRemoveStagedInsert(AttemptContext self, string id);
}
[InterfaceStabilityAttribute("2")]
public class Couchbase.Integrated.Transactions.KeySpace : object {
    [CompilerGeneratedAttribute]
private string <Bucket>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Collection>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string Bucket { get; public set; }
    public string Scope { get; public set; }
    public string Collection { get; public set; }
    public KeySpace(string Bucket, string Scope, string Collection);
    [CompilerGeneratedAttribute]
protected KeySpace(KeySpace original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_Bucket();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Bucket(string value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Scope(string value);
    [CompilerGeneratedAttribute]
public string get_Collection();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Collection(string value);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.KeySpace/<GetCollectionAsync>d__15")]
public Task`1<ICouchbaseCollection> GetCollectionAsync(ICluster cluster);
    public static KeySpace FromCollection(ICouchbaseCollection collection);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(KeySpace left, KeySpace right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(KeySpace left, KeySpace right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(KeySpace other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual KeySpace <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& Bucket, String& Scope, String& Collection);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.LogUtil.DelegatingDisposable`1 : object {
    private IDisposable _delegated;
    [CompilerGeneratedAttribute]
private T <Item>k__BackingField;
    public T Item { get; }
    [NullableContextAttribute("1")]
public DelegatingDisposable`1(T item, IDisposable delegated);
    [CompilerGeneratedAttribute]
public T get_Item();
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Couchbase.Integrated.Transactions.LogUtil.LoggingExtensions : object {
    [ExtensionAttribute]
internal static string SafeSubstring(string str, int maxChars);
    [ExtensionAttribute]
internal static IDisposable BeginMethodScope(ILogger logger, string method);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.LogUtil.TransactionsLogger : object {
    private ILogger _otherLogger;
    private TransactionContext _overallContext;
    internal TransactionsLogger(ILogger otherLogger, TransactionContext overallContext);
    public sealed virtual IDisposable BeginScope(TState state);
    public sealed virtual bool IsEnabled(LogLevel logLevel);
    [NullableContextAttribute("2")]
public sealed virtual void Log(LogLevel logLevel, EventId eventId, TState state, Exception exception, Func`3<TState, Exception, string> formatter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.LogUtil.TransactionsLoggerFactory : object {
    private ILoggerFactory _otherLoggerFactory;
    private TransactionContext _overallContext;
    public TransactionsLoggerFactory(ILoggerFactory otherLoggerFactory, TransactionContext overallContext);
    public sealed virtual void AddProvider(ILoggerProvider provider);
    public sealed virtual ILogger CreateLogger(string categoryName);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Couchbase.Integrated.Transactions.ProtocolVersion : object {
    public static decimal SupportedVersion;
    private static Lazy`1<HashSet`1<string>> SupportedShortCodes { get; }
    private static ProtocolVersion();
    [IteratorStateMachineAttribute("Couchbase.Integrated.Transactions.ProtocolVersion/<ExtensionsSupported>d__1")]
public static IEnumerable`1<ExtensionName> ExtensionsSupported();
    internal static bool Supported(string shortCode);
    private static Lazy`1<HashSet`1<string>> get_SupportedShortCodes();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("2")]
public class Couchbase.Integrated.Transactions.SingleQueryTransactionResult`1 : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IQueryResult`1<T> <QueryResult>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Logs>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UnstagingComplete>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IQueryResult`1<T> QueryResult { get; internal set; }
    public IEnumerable`1<string> Logs { get; internal set; }
    public bool UnstagingComplete { get; internal set; }
    [CompilerGeneratedAttribute]
public IQueryResult`1<T> get_QueryResult();
    [CompilerGeneratedAttribute]
internal void set_QueryResult(IQueryResult`1<T> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Logs();
    [CompilerGeneratedAttribute]
internal void set_Logs(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_UnstagingComplete();
    [CompilerGeneratedAttribute]
internal void set_UnstagingComplete(bool value);
}
public enum Couchbase.Integrated.Transactions.Support.AttemptStates : Enum {
    public int value__;
    public static AttemptStates NOTHING_WRITTEN;
    public static AttemptStates PENDING;
    public static AttemptStates ABORTED;
    public static AttemptStates COMMITTED;
    public static AttemptStates COMPLETED;
    public static AttemptStates ROLLED_BACK;
    public static AttemptStates UNKNOWN;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Couchbase.Integrated.Transactions.Support.CollectionExtensions : object {
    [ExtensionAttribute]
public static RemoveOptions Timeout(RemoveOptions opts, Nullable`1<TimeSpan> timeout);
    [ExtensionAttribute]
public static MutateInOptions Timeout(MutateInOptions opts, Nullable`1<TimeSpan> timeout);
    [ExtensionAttribute]
public static LookupInOptions Timeout(LookupInOptions opts, Nullable`1<TimeSpan> timeout);
    [ExtensionAttribute]
public static MutateInOptions Durability(MutateInOptions opts, Nullable`1<DurabilityLevel> durability);
    [ExtensionAttribute]
internal static string MakeKeyspace(ICouchbaseCollection collection);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Couchbase.Integrated.Transactions.Support.TransactionFields : object {
    public static string AtrFieldAttempts;
    public static string AtrFieldTransactionId;
    public static string AtrFieldStatus;
    public static string AtrFieldStartTimestamp;
    public static string AtrFieldExpiresAfterMsecs;
    public static string AtrFieldStartCommit;
    public static string AtrFieldTimestampComplete;
    public static string AtrFieldTimestampRollbackStart;
    public static string AtrFieldTimestampRollbackComplete;
    public static string AtrFieldDocsInserted;
    public static string AtrFieldDocsReplaced;
    public static string AtrFieldDocsRemoved;
    public static string AtrFieldPerDocId;
    public static string AtrFieldPerDocBucket;
    public static string AtrFieldPerDocScope;
    public static string AtrFieldPerDocCollection;
    public static string AtrFieldPendingSentinel;
    public static string AtrFieldDurability;
    public static string TransactionInterfacePrefixOnly;
    public static string TransactionInterfacePrefix;
    public static string TransactionRestorePrefixOnly;
    public static string TransactionRestorePrefix;
    public static string TransactionId;
    public static string AttemptId;
    public static string AtrId;
    public static string AtrBucketName;
    public static string AtrScopeName;
    public static string AtrCollName;
    public static string StagedData;
    public static string Type;
    public static string Crc32;
    public static string PreTxnCas;
    public static string PreTxnRevid;
    public static string PreTxnExptime;
    public static string StagedDataRemoveKeyword;
    public static Byte[] StagedDataRemoveKeywordBytes;
    private static TransactionFields();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Couchbase.Integrated.Transactions.TaskExtensions : object {
    [ExtensionAttribute]
public static ConfiguredTaskAwaitable CAF(Task awaitable);
    [ExtensionAttribute]
public static ConfiguredTaskAwaitable`1<T> CAF(Task`1<T> awaitable);
    [ExtensionAttribute]
public static ConfiguredValueTaskAwaitable CAF(ValueTask awaitable);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ConfiguredValueTaskAwaitable`1<T> CAF(ValueTask`1<T> awaitable);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Integrated.Transactions.TransactionContext : object {
    private ConcurrentQueue`1<string> _logs;
    [CompilerGeneratedAttribute]
private string <TransactionId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private MergedTransactionConfig <Config>k__BackingField;
    public string TransactionId { get; }
    public DateTimeOffset StartTime { get; }
    public MergedTransactionConfig Config { get; }
    public DateTimeOffset AbsoluteExpiration { get; }
    public bool IsExpired { get; }
    public TimeSpan RemainingUntilExpiration { get; }
    internal IEnumerable`1<string> Logs { get; }
    public TransactionContext(string transactionId, DateTimeOffset startTime, TransactionConfig config, PerTransactionConfig perConfig);
    [CompilerGeneratedAttribute]
public string get_TransactionId();
    [CompilerGeneratedAttribute]
public DateTimeOffset get_StartTime();
    [CompilerGeneratedAttribute]
public MergedTransactionConfig get_Config();
    public DateTimeOffset get_AbsoluteExpiration();
    public bool get_IsExpired();
    public TimeSpan get_RemainingUntilExpiration();
    internal void AddLog(string msg);
    internal IEnumerable`1<string> get_Logs();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("2")]
public class Couchbase.Integrated.Transactions.TransactionGetResult : object {
    private IContentAsWrapper _content;
    [NullableAttribute("2")]
public static TransactionGetResult Empty;
    [CompilerGeneratedAttribute]
private bool <IsDeleted>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private TransactionXattrs <TransactionXattrs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FullyQualifiedId>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Cas>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private DocumentMetadata <DocumentMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private ICouchbaseCollection <Collection>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JObject <TxnMeta>k__BackingField;
    internal bool IsDeleted { get; }
    [NullableAttribute("2")]
internal TransactionXattrs TransactionXattrs { get; }
    public string Id { get; }
    internal string FullyQualifiedId { get; }
    public ulong Cas { get; internal set; }
    [NullableAttribute("2")]
public DocumentMetadata DocumentMetadata { get; }
    public ICouchbaseCollection Collection { get; }
    [NullableAttribute("2")]
internal JObject TxnMeta { get; internal set; }
    [NullableContextAttribute("2")]
private TransactionGetResult(string id, IContentAsWrapper content, ulong cas, ICouchbaseCollection collection, TransactionXattrs transactionXattrs, DocumentMetadata documentMetadata, bool isTombstone);
    [CompilerGeneratedAttribute]
internal bool get_IsDeleted();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal TransactionXattrs get_TransactionXattrs();
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
internal string get_FullyQualifiedId();
    [CompilerGeneratedAttribute]
public ulong get_Cas();
    [CompilerGeneratedAttribute]
internal void set_Cas(ulong value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public DocumentMetadata get_DocumentMetadata();
    [CompilerGeneratedAttribute]
public ICouchbaseCollection get_Collection();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal JObject get_TxnMeta();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_TxnMeta(JObject value);
    [NullableContextAttribute("2")]
public T ContentAs();
    internal static string GetFullyQualifiedId(ICouchbaseCollection collection, string id);
    internal static TransactionGetResult FromInsert(ICouchbaseCollection collection, string id, IContentAsWrapper content, string transactionId, string attemptId, string atrId, string atrBucketName, string atrScopeName, string atrCollectionName, ulong updatedCas, bool isDeleted);
    internal static TransactionGetResult FromOther(TransactionGetResult doc, IContentAsWrapper content);
    internal static TransactionGetResult FromNonTransactionDoc(ICouchbaseCollection collection, string id, IContentAsWrapper content, ulong cas, DocumentMetadata documentMetadata, bool isDeleted, TransactionXattrs transactionXattrs);
    internal static TransactionGetResult FromStaged(ICouchbaseCollection collection, string id, IContentAsWrapper stagedContent, ulong cas, DocumentMetadata documentMetadata, TransactionXattrs txn, bool isTombstone);
    internal static TransactionGetResult FromQueryGet(ICouchbaseCollection collection, string id, QueryGetResult queryResult);
    internal static TransactionGetResult FromQueryInsert(ICouchbaseCollection collection, string id, object originalDoc, QueryInsertResult queryResult);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("2")]
public class Couchbase.Integrated.Transactions.TransactionResult : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <TransactionId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UnstagingComplete>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Logs>k__BackingField;
    [NullableAttribute("2")]
public string TransactionId { get; internal set; }
    public bool UnstagingComplete { get; internal set; }
    public IEnumerable`1<string> Logs { get; internal set; }
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_TransactionId();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_TransactionId(string value);
    [CompilerGeneratedAttribute]
public bool get_UnstagingComplete();
    [CompilerGeneratedAttribute]
internal void set_UnstagingComplete(bool value);
    public virtual string ToString();
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Logs();
    [CompilerGeneratedAttribute]
internal void set_Logs(IEnumerable`1<string> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("2")]
public class Couchbase.Integrated.Transactions.Transactions : object {
    public static TimeSpan OpRetryDelay;
    internal static ITypeSerializer MetadataSerializer;
    internal static ITypeTranscoder MetadataTranscoder;
    private static long InstancesCreated;
    private static long InstancesCreatedDoingBackgroundCleanup;
    private ICluster _cluster;
    private bool _disposedValue;
    private IRedactor _redactor;
    private ILoggerFactory loggerFactory;
    private ILogger`1<Transactions> _logger;
    private CleanupWorkQueue _cleanupWorkQueue;
    private Cleaner _cleaner;
    [NullableAttribute("2")]
private LostTransactionManager _lostTransactionsCleanup;
    private IRequestTracer _requestTracer;
    [CompilerGeneratedAttribute]
private TransactionConfig <Config>k__BackingField;
    [CompilerGeneratedAttribute]
private ITestHooks <TestHooks>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private DocumentRepository <DocumentRepository>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private AtrRepository <AtrRepository>k__BackingField;
    public TransactionConfig Config { get; }
    internal ICluster Cluster { get; }
    internal ITestHooks TestHooks { get; internal set; }
    [NullableAttribute("2")]
internal DocumentRepository DocumentRepository { get; internal set; }
    [NullableAttribute("2")]
internal AtrRepository AtrRepository { get; internal set; }
    internal ICleanupTestHooks CleanupTestHooks { get; internal set; }
    private Transactions(ICluster cluster, TransactionConfig config);
    private static Transactions();
    [CompilerGeneratedAttribute]
public TransactionConfig get_Config();
    internal ICluster get_Cluster();
    [CompilerGeneratedAttribute]
internal ITestHooks get_TestHooks();
    [CompilerGeneratedAttribute]
internal void set_TestHooks(ITestHooks value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal DocumentRepository get_DocumentRepository();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_DocumentRepository(DocumentRepository value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal AtrRepository get_AtrRepository();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_AtrRepository(AtrRepository value);
    internal ICleanupTestHooks get_CleanupTestHooks();
    internal void set_CleanupTestHooks(ICleanupTestHooks value);
    [InterfaceStabilityAttribute("2")]
internal void ConfigureTestHooks(ITestHooks testHooks, ICleanupTestHooks cleanupHooks);
    internal static Transactions Create(ICluster cluster);
    internal static Transactions Create(ICluster cluster, TransactionConfig config);
    public Task`1<TransactionResult> RunAsync(Func`2<AttemptContext, Task> transactionLogic, PerTransactionConfig perConfig);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.Transactions/<RunAsync>d__39")]
internal Task`1<TransactionResult> RunAsync(Func`2<AttemptContext, Task> transactionLogic, PerTransactionConfig perConfig, bool singleQueryTransactionMode);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.Transactions/<QueryAsync>d__40`1")]
public Task`1<SingleQueryTransactionResult`1<T>> QueryAsync(string statement, PerTransactionConfig config, TransactionQueryOptions options, IScope scope);
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.Transactions/<ExecuteApplicationLambda>d__41")]
private Task ExecuteApplicationLambda(Func`2<AttemptContext, Task> transactionLogic, TransactionContext overallContext, ILoggerFactory instanceLoggerFactory, TransactionResult result, IRequestSpan parentSpan, bool singleQueryTransactionMode);
    private void AddCleanupRequest(AttemptContext ctx, CleanupRequest cleanupRequest);
    internal void TrackCollectionForCleanup(KeySpace collection);
    internal void TrackForCleanup(MergedTransactionConfig config);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
    [AsyncStateMachineAttribute("Couchbase.Integrated.Transactions.Transactions/<DisposeAsync>d__47")]
public sealed virtual ValueTask DisposeAsync();
}
public class Couchbase.InvalidConfigurationException : CouchbaseException {
    public Exception Reason { get; }
    public InvalidConfigurationException(string message);
    public InvalidConfigurationException(string message, Exception innerException);
    public Exception get_Reason();
}
[AttributeUsageAttribute("2048")]
internal class Couchbase.InvokerParameterNameAttribute : Attribute {
}
internal enum Couchbase.IpAddressMode : Enum {
    public int value__;
    public static IpAddressMode Default;
    public static IpAddressMode ForceIpv4;
    public static IpAddressMode PreferIpv4;
    public static IpAddressMode ForceIpv6;
    public static IpAddressMode PreferIpv6;
}
public interface Couchbase.IServiceResult {
    public RetryReason RetryReason { get; }
    public abstract virtual RetryReason get_RetryReason();
}
[NullableContextAttribute("2")]
internal interface Couchbase.IServiceResultExceptionInfo {
    public Exception NoRetryException { get; public set; }
    public abstract virtual Exception get_NoRetryException();
    public abstract virtual void set_NoRetryException(Exception value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.AppendOptions : object {
    [CompilerGeneratedAttribute]
private static AppendOptions <Default>k__BackingField;
    public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private ulong <CasValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ReplicateTo <ReplicateTo>k__BackingField;
    [CompilerGeneratedAttribute]
private PersistTo <PersistTo>k__BackingField;
    [CompilerGeneratedAttribute]
private DurabilityLevel <DurabilityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    internal static AppendOptions Default { get; }
    internal ulong CasValue { get; private set; }
    internal ReplicateTo ReplicateTo { get; private set; }
    internal PersistTo PersistTo { get; private set; }
    internal DurabilityLevel DurabilityLevel { get; private set; }
    internal Nullable`1<TimeSpan> TimeoutValue { get; private set; }
    private Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.Timeout { get; }
    internal CancellationToken TokenValue { get; private set; }
    private CancellationToken Couchbase.KeyValue.ITimeoutOptions.Token { get; }
    [NullableAttribute("2")]
internal IRetryStrategy RetryStrategyValue { get; private set; }
    [NullableAttribute("2")]
private IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.RetryStrategy { get; }
    [NullableAttribute("2")]
internal IRequestSpan RequestSpanValue { get; private set; }
    private static AppendOptions();
    [CompilerGeneratedAttribute]
internal static AppendOptions get_Default();
    [CompilerGeneratedAttribute]
internal ulong get_CasValue();
    [CompilerGeneratedAttribute]
private void set_CasValue(ulong value);
    [CompilerGeneratedAttribute]
internal ReplicateTo get_ReplicateTo();
    [CompilerGeneratedAttribute]
private void set_ReplicateTo(ReplicateTo value);
    [CompilerGeneratedAttribute]
internal PersistTo get_PersistTo();
    [CompilerGeneratedAttribute]
private void set_PersistTo(PersistTo value);
    [CompilerGeneratedAttribute]
internal DurabilityLevel get_DurabilityLevel();
    [CompilerGeneratedAttribute]
private void set_DurabilityLevel(DurabilityLevel value);
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_TimeoutValue();
    [CompilerGeneratedAttribute]
private void set_TimeoutValue(Nullable`1<TimeSpan> value);
    private sealed virtual override Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.get_Timeout();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    private sealed virtual override CancellationToken Couchbase.KeyValue.ITimeoutOptions.get_Token();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_RetryStrategyValue(IRetryStrategy value);
    [NullableContextAttribute("2")]
private sealed virtual override IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.get_RetryStrategy();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    public AppendOptions RequestSpan(IRequestSpan span);
    public AppendOptions RetryStrategy(IRetryStrategy retryStrategy);
    public AppendOptions Cas(ulong cas);
    public AppendOptions Durability(PersistTo persistTo, ReplicateTo replicateTo);
    public AppendOptions Durability(DurabilityLevel durabilityLevel);
    public AppendOptions Timeout(TimeSpan timeout);
    public AppendOptions CancellationToken(CancellationToken token);
    [NullableContextAttribute("2")]
public void Deconstruct(UInt64& cas, ReplicateTo& replicateTo, PersistTo& persistTo, DurabilityLevel& durabilityLevel, Nullable`1& timeout, CancellationToken& token, IRetryStrategy& retryStrategy, IRequestSpan& requestSpan);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Couchbase.KeyValue.BinaryCollectionExtensions : object {
    [ExtensionAttribute]
public static Task`1<IMutationResult> AppendAsync(IBinaryCollection binaryCollection, string id, Byte[] value);
    [ExtensionAttribute]
public static Task`1<IMutationResult> AppendAsync(IBinaryCollection binaryCollection, string id, Byte[] value, Action`1<AppendOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<IMutationResult> PrependAsync(IBinaryCollection binaryCollection, string id, Byte[] value);
    [ExtensionAttribute]
public static Task`1<IMutationResult> PrependAsync(IBinaryCollection binaryCollection, string id, Byte[] value, Action`1<PrependOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<ICounterResult> IncrementAsync(IBinaryCollection binaryCollection, string id);
    [ExtensionAttribute]
public static Task`1<ICounterResult> IncrementAsync(IBinaryCollection binaryCollection, string id, Action`1<IncrementOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<ICounterResult> DecrementAsync(IBinaryCollection binaryCollection, string id);
    [ExtensionAttribute]
public static Task`1<ICounterResult> DecrementAsync(IBinaryCollection binaryCollection, string id, Action`1<DecrementOptions> configureOptions);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Couchbase.KeyValue.CollectionExtensions : object {
    private static GetOptions GetOptionsPreferReturn;
    private static GetAndLockOptions GetAndLockOptionsPreferReturns;
    private static GetAndTouchOptions GetAndTouchOptionsPreferReturns;
    private static ReplaceOptions ReplaceOptionsPreferReturns;
    private static TouchOptions TouchOptionsPreferReturns;
    private static CollectionExtensions();
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CollectionExtensions/<TryGetAsync>d__5")]
[ExtensionAttribute]
public static Task`1<ITryGetResult> TryGetAsync(ICouchbaseCollection collection, string id);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CollectionExtensions/<TryGetAsync>d__6")]
[ExtensionAttribute]
public static Task`1<ITryGetResult> TryGetAsync(ICouchbaseCollection collection, string id, Action`1<GetOptions> configureOptions);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CollectionExtensions/<TryGetAndLockAsync>d__7")]
[ExtensionAttribute]
public static Task`1<ITryGetResult> TryGetAndLockAsync(ICouchbaseCollection collection, string id, TimeSpan expires);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CollectionExtensions/<TryGetAndLockAsync>d__8")]
[ExtensionAttribute]
public static Task`1<ITryGetResult> TryGetAndLockAsync(ICouchbaseCollection collection, string id, TimeSpan expires, Action`1<GetAndLockOptions> configureOptions);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CollectionExtensions/<TryGetAndTouchAsync>d__9")]
[ExtensionAttribute]
public static Task`1<ITryGetResult> TryGetAndTouchAsync(ICouchbaseCollection collection, string id, TimeSpan expires);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CollectionExtensions/<TryGetAndTouchAsync>d__10")]
[ExtensionAttribute]
public static Task`1<ITryGetResult> TryGetAndTouchAsync(ICouchbaseCollection collection, string id, TimeSpan expires, GetAndTouchOptions configureOptions);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CollectionExtensions/<TryGetAndTouchAsync>d__11")]
[ExtensionAttribute]
public static Task`1<ITryGetResult> TryGetAndTouchAsync(ICouchbaseCollection collection, string id, TimeSpan expires, Action`1<GetAndTouchOptions> configureOptions);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CollectionExtensions/<TryTouchAsync>d__12")]
[ExtensionAttribute]
public static Task`1<ITryTouchResult> TryTouchAsync(ICouchbaseCollection collection, string id, TimeSpan expiry, Action`1<TouchOptions> configureOptions);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CollectionExtensions/<TryTouchAsync>d__13")]
[ExtensionAttribute]
public static Task`1<ITryTouchResult> TryTouchAsync(ICouchbaseCollection collection, string id, TimeSpan expiry);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CollectionExtensions/<TryReplaceAsync>d__14`1")]
[ExtensionAttribute]
public static Task`1<ITryMutationResult> TryReplaceAsync(ICouchbaseCollection collection, string id, T content);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CollectionExtensions/<TryReplaceAsync>d__15`1")]
[ExtensionAttribute]
public static Task`1<ITryMutationResult> TryReplaceAsync(ICouchbaseCollection collection, string id, T content, Action`1<ReplaceOptions> configureOptions);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CollectionExtensions/<TryRemoveAsync>d__16")]
[ExtensionAttribute]
public static Task`1<ITryRemoveResult> TryRemoveAsync(ICouchbaseCollection collection, string id);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CollectionExtensions/<TryRemoveAsync>d__17")]
[ExtensionAttribute]
public static Task`1<ITryRemoveResult> TryRemoveAsync(ICouchbaseCollection collection, string id, Action`1<RemoveOptions> configureOptions);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CollectionExtensions/<TryUnlockAsync>d__18")]
[ExtensionAttribute]
public static Task`1<ITryUnlockResult> TryUnlockAsync(ICouchbaseCollection collection, string id, ulong cas);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CollectionExtensions/<TryUnlockAsync>d__19")]
[ExtensionAttribute]
public static Task`1<ITryUnlockResult> TryUnlockAsync(ICouchbaseCollection collection, string id, ulong cas, Action`1<UnlockOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<IGetResult> GetAsync(ICouchbaseCollection collection, string id);
    [ExtensionAttribute]
public static Task`1<IGetResult> GetAsync(ICouchbaseCollection collection, string id, Action`1<GetOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<IGetReplicaResult> GetAnyReplicaAsync(ICouchbaseCollection collection, string id);
    [ExtensionAttribute]
public static Task`1<IGetReplicaResult> GetAnyReplicaAsync(ICouchbaseCollection collection, string id, Action`1<GetAnyReplicaOptions> configureOptions);
    [ExtensionAttribute]
public static IEnumerable`1<Task`1<IGetReplicaResult>> GetAllReplicasAsync(ICouchbaseCollection collection, string id);
    [ExtensionAttribute]
public static IEnumerable`1<Task`1<IGetReplicaResult>> GetAllReplicasAsync(ICouchbaseCollection collection, string id, Action`1<GetAllReplicasOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<IExistsResult> ExistsAsync(ICouchbaseCollection collection, string id);
    [ExtensionAttribute]
public static Task`1<IExistsResult> ExistsAsync(ICouchbaseCollection collection, string id, Action`1<ExistsOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<IMutationResult> UpsertAsync(ICouchbaseCollection collection, string id, T content);
    [ExtensionAttribute]
public static Task`1<IMutationResult> UpsertAsync(ICouchbaseCollection collection, string id, T content, Action`1<UpsertOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<IMutationResult> InsertAsync(ICouchbaseCollection collection, string id, T content);
    [ExtensionAttribute]
public static Task`1<IMutationResult> InsertAsync(ICouchbaseCollection collection, string id, T content, Action`1<InsertOptions> optionsAction);
    [ExtensionAttribute]
public static Task`1<IMutationResult> ReplaceAsync(ICouchbaseCollection collection, string id, T content);
    [ExtensionAttribute]
public static Task`1<IMutationResult> ReplaceAsync(ICouchbaseCollection collection, string id, T content, Action`1<ReplaceOptions> configureOptions);
    [ExtensionAttribute]
public static Task RemoveAsync(ICouchbaseCollection collection, string id);
    [ExtensionAttribute]
public static Task RemoveAsync(ICouchbaseCollection collection, string id, Action`1<RemoveOptions> configureOptions);
    [ExtensionAttribute]
[ObsoleteAttribute("Use overload that does not have a Type parameter T.")]
public static Task UnlockAsync(ICouchbaseCollection collection, string id, ulong cas);
    [ExtensionAttribute]
[ObsoleteAttribute("Use overload that does not have a Type parameter T.")]
public static Task UnlockAsync(ICouchbaseCollection collection, string id, ulong cas, Action`1<UnlockOptions> configureOptions);
    [ExtensionAttribute]
public static Task UnlockAsync(ICouchbaseCollection collection, string id, ulong cas);
    [ExtensionAttribute]
public static Task UnlockAsync(ICouchbaseCollection collection, string id, ulong cas, Action`1<UnlockOptions> configureOptions);
    [ExtensionAttribute]
public static Task TouchAsync(ICouchbaseCollection collection, string id, TimeSpan expiry);
    [ExtensionAttribute]
public static Task TouchAsync(ICouchbaseCollection collection, string id, TimeSpan expiry, Action`1<TouchOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<IMutationResult> TouchWithCasAsync(ICouchbaseCollection collection, string id, TimeSpan expiry);
    [ExtensionAttribute]
public static Task`1<IMutationResult> TouchWithCasAsync(ICouchbaseCollection collection, string id, TimeSpan expiry, Action`1<TouchOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<IGetResult> GetAndTouchAsync(ICouchbaseCollection collection, string id, TimeSpan expiry);
    [ExtensionAttribute]
public static Task`1<IGetResult> GetAndTouchAsync(ICouchbaseCollection collection, string id, TimeSpan expiry, Action`1<GetAndTouchOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<IGetResult> GetAndLockAsync(ICouchbaseCollection collection, string id, TimeSpan expiry);
    [ExtensionAttribute]
public static Task`1<IGetResult> GetAndLockAsync(ICouchbaseCollection collection, string id, TimeSpan expiry, Action`1<GetAndLockOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<ILookupInResult> LookupInAsync(ICouchbaseCollection collection, string id, Action`1<LookupInSpecBuilder> configureBuilder);
    [ExtensionAttribute]
public static Task`1<ILookupInResult> LookupInAsync(ICouchbaseCollection collection, string id, Action`1<LookupInSpecBuilder> configureBuilder, Action`1<LookupInOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<ILookupInResult> LookupInAsync(ICouchbaseCollection collection, string id, Action`1<LookupInSpecBuilder> configureBuilder, LookupInOptions options);
    [ExtensionAttribute]
public static Task`1<ILookupInResult> LookupInAsync(ICouchbaseCollection collection, string id, IEnumerable`1<LookupInSpec> specs);
    [ExtensionAttribute]
public static Task`1<ILookupInResult> LookupInAsync(ICouchbaseCollection collection, string id, IEnumerable`1<LookupInSpec> specs, Action`1<LookupInOptions> configureOptions);
    [ExtensionAttribute]
[InterfaceStabilityAttribute("2")]
public static Task`1<ILookupInResult`1<TDocument>> LookupInAsync(ICouchbaseCollection collection, string id, Action`1<LookupInSpecBuilder`1<TDocument>> configureBuilder, Action`1<LookupInOptions> configureOptions);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CollectionExtensions/<LookupInAsync>d__54`1")]
[ExtensionAttribute]
[InterfaceStabilityAttribute("2")]
public static Task`1<ILookupInResult`1<TDocument>> LookupInAsync(ICouchbaseCollection collection, string id, Action`1<LookupInSpecBuilder`1<TDocument>> configureBuilder, LookupInOptions options);
    [ExtensionAttribute]
[InterfaceStabilityAttribute("2")]
public static Task`1<ILookupInReplicaResult> LookupInAnyReplicaAsync(ICouchbaseCollection collection, string id, IEnumerable`1<LookupInSpec> specs, Action`1<LookupInAnyReplicaOptions> configureOptions);
    [ExtensionAttribute]
[InterfaceStabilityAttribute("2")]
public static Task`1<ILookupInReplicaResult> LookupInAnyReplicaAsync(ICouchbaseCollection collection, string id, Action`1<LookupInSpecBuilder> configureBuilder, LookupInAnyReplicaOptions options);
    [ExtensionAttribute]
[InterfaceStabilityAttribute("2")]
public static Task`1<ILookupInReplicaResult> LookupInAnyReplicaAsync(ICouchbaseCollection collection, string id, Action`1<LookupInSpecBuilder> configureBuilder, Action`1<LookupInAnyReplicaOptions> configureOptions);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<ILookupInReplicaResult> LookupInAllReplicasAsync(ICouchbaseCollection collection, string id, Action`1<LookupInSpecBuilder> configureBuilder, LookupInAllReplicasOptions options);
    [ExtensionAttribute]
[InterfaceStabilityAttribute("2")]
public static IAsyncEnumerable`1<ILookupInReplicaResult> LookupInAllReplicasAsync(ICouchbaseCollection collection, string id, IEnumerable`1<LookupInSpec> specs, Action`1<LookupInAllReplicasOptions> configureOptions);
    [ExtensionAttribute]
[InterfaceStabilityAttribute("2")]
public static IAsyncEnumerable`1<ILookupInReplicaResult> LookupInAllReplicasAsync(ICouchbaseCollection collection, string id, Action`1<LookupInSpecBuilder> configureBuilder, Action`1<LookupInAllReplicasOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<IMutateInResult> MutateInAsync(ICouchbaseCollection collection, string id, Action`1<MutateInSpecBuilder> configureBuilder);
    [ExtensionAttribute]
public static Task`1<IMutateInResult> MutateInAsync(ICouchbaseCollection collection, string id, Action`1<MutateInSpecBuilder> configureBuilder, Action`1<MutateInOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<IMutateInResult> MutateInAsync(ICouchbaseCollection collection, string id, Action`1<MutateInSpecBuilder> configureBuilder, MutateInOptions options);
    [ExtensionAttribute]
public static Task`1<IMutateInResult> MutateInAsync(ICouchbaseCollection collection, string id, IEnumerable`1<MutateInSpec> specs);
    [ExtensionAttribute]
public static Task`1<IMutateInResult> MutateInAsync(ICouchbaseCollection collection, string id, IEnumerable`1<MutateInSpec> specs, Action`1<MutateInOptions> configureOptions);
    [ExtensionAttribute]
[InterfaceStabilityAttribute("2")]
public static Task`1<IMutateInResult`1<TDocument>> MutateInAsync(ICouchbaseCollection collection, string id, Action`1<MutateInSpecBuilder`1<TDocument>> configureBuilder, Action`1<MutateInOptions> configureOptions);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CollectionExtensions/<MutateInAsync>d__67`1")]
[ExtensionAttribute]
[InterfaceStabilityAttribute("2")]
public static Task`1<IMutateInResult`1<TDocument>> MutateInAsync(ICouchbaseCollection collection, string id, Action`1<MutateInSpecBuilder`1<TDocument>> configureBuilder, MutateInOptions options);
    [ExtensionAttribute]
public static IPersistentSet`1<T> Set(ICouchbaseCollection collection, string docId);
    [ExtensionAttribute]
public static IPersistentList`1<T> List(ICouchbaseCollection collection, string docId);
    [ExtensionAttribute]
public static IPersistentQueue`1<T> Queue(ICouchbaseCollection collection, string docId, QueueOptions options);
    [ExtensionAttribute]
public static IPersistentDictionary`1<TValue> Dictionary(ICouchbaseCollection collection, string docId);
}
public class Couchbase.KeyValue.CollectionOutdatedException : CouchbaseException {
    public CollectionOutdatedException(string message);
    public CollectionOutdatedException(string message, Exception innerException);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.KeyValue.CouchbaseCollection : object {
    public static string DefaultCollectionName;
    private bool _rangeScanSupported;
    private BucketBase _bucket;
    private ILogger`1<GetResult> _getLogger;
    private IOperationConfigurator _operationConfigurator;
    private IRequestTracer _tracer;
    private ITypeTranscoder _rawStringTranscoder;
    private IFallbackTypeSerializerProvider _fallbackTypeSerializerProvider;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Lazy`1<Task`1<Nullable`1<UInt32>>> GetCidLazyRetry;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Lazy`1<Task`1<Nullable`1<UInt32>>> GetCidLazyNoRetry;
    private object _cidLock;
    [CompilerGeneratedAttribute]
private IRedactor <Redactor>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<UInt32> <Cid>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger`1<CouchbaseCollection> <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IScope <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDefaultCollection>k__BackingField;
    private LazyService`1<ICollectionQueryIndexManagerFactory> _lazyQueryIndexManagerFactory;
    [NullableAttribute("2")]
private ICollectionQueryIndexManager _queryIndexManager;
    internal IRedactor Redactor { get; }
    public string ScopeName { get; }
    public Nullable`1<UInt32> Cid { get; public set; }
    public ILogger`1<CouchbaseCollection> Logger { get; }
    public string Name { get; }
    public IScope Scope { get; }
    public IBinaryCollection Binary { get; }
    public bool IsDefaultCollection { get; }
    public ICollectionQueryIndexManager QueryIndexes { get; }
    internal CouchbaseCollection(BucketBase bucket, IOperationConfigurator operationConfigurator, ILogger`1<CouchbaseCollection> logger, ILogger`1<GetResult> getLogger, IRedactor redactor, string name, IScope scope, IRequestTracer tracer, IFallbackTypeSerializerProvider fallbackTypeSerializerProvider, IServiceProvider serviceProvider);
    [CompilerGeneratedAttribute]
internal IRedactor get_Redactor();
    public string get_ScopeName();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<UInt32> get_Cid();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Cid(Nullable`1<UInt32> value);
    [CompilerGeneratedAttribute]
public ILogger`1<CouchbaseCollection> get_Logger();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual IScope get_Scope();
    public sealed virtual IBinaryCollection get_Binary();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsDefaultCollection();
    [AsyncIteratorStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<ScanAsync>d__35")]
[InterfaceStabilityAttribute("2")]
public sealed virtual IAsyncEnumerable`1<IScanResult> ScanAsync(IScanType scanType, ScanOptions options);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<CloseAll>d__36")]
private Task CloseAll(List`1<PartitionScan> partitionScans);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<GetAsync>d__37")]
public sealed virtual Task`1<IGetResult> GetAsync(string id, GetOptions options);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<ExistsAsync>d__38")]
public sealed virtual Task`1<IExistsResult> ExistsAsync(string id, ExistsOptions options);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<InsertAsync>d__39`1")]
public sealed virtual Task`1<IMutationResult> InsertAsync(string id, T content, InsertOptions options);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<ReplaceAsync>d__40`1")]
public sealed virtual Task`1<IMutationResult> ReplaceAsync(string id, T content, ReplaceOptions options);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<RemoveAsync>d__41")]
public sealed virtual Task RemoveAsync(string id, RemoveOptions options);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<UnlockAsync>d__42`1")]
[ObsoleteAttribute("Use overload that does not have a Type parameter T.")]
public sealed virtual Task UnlockAsync(string id, ulong cas, UnlockOptions options);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<UnlockAsync>d__43")]
public sealed virtual Task UnlockAsync(string id, ulong cas, UnlockOptions options);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<TouchAsync>d__44")]
public sealed virtual Task TouchAsync(string id, TimeSpan expiry, TouchOptions options);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<TouchWithCasAsync>d__45")]
public sealed virtual Task`1<IMutationResult> TouchWithCasAsync(string id, TimeSpan expiry, TouchOptions options);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<GetAndTouchAsync>d__46")]
public sealed virtual Task`1<IGetResult> GetAndTouchAsync(string id, TimeSpan expiry, GetAndTouchOptions options);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<GetAndLockAsync>d__47")]
public sealed virtual Task`1<IGetResult> GetAndLockAsync(string id, TimeSpan lockTime, GetAndLockOptions options);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<UpsertAsync>d__48`1")]
public sealed virtual Task`1<IMutationResult> UpsertAsync(string id, T content, UpsertOptions options);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<LookupInAsync>d__49")]
public sealed virtual Task`1<ILookupInResult> LookupInAsync(string id, IEnumerable`1<LookupInSpec> specs, LookupInOptions options);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<LookupInAnyReplicaAsync>d__50")]
public sealed virtual Task`1<ILookupInReplicaResult> LookupInAnyReplicaAsync(string id, IEnumerable`1<LookupInSpec> specs, LookupInAnyReplicaOptions options);
    [AsyncIteratorStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<LookupInAllReplicasAsync>d__51")]
public sealed virtual IAsyncEnumerable`1<ILookupInReplicaResult> LookupInAllReplicasAsync(string id, IEnumerable`1<LookupInSpec> specs, LookupInAllReplicasOptions options);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<ExecuteLookupIn>d__52")]
private Task`1<MultiLookup`1<Byte[]>> ExecuteLookupIn(string id, IEnumerable`1<LookupInSpec> specs, ReadOnly options, IRequestSpan span);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<MutateInAsync>d__53")]
public sealed virtual Task`1<IMutateInResult> MutateInAsync(string id, IEnumerable`1<MutateInSpec> specs, MutateInOptions options);
    private TimeSpan GetTimeout(Nullable`1<TimeSpan> optionsTimeout, IOperation op);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<AppendAsync>d__55")]
public sealed virtual Task`1<IMutationResult> AppendAsync(string id, Byte[] value, AppendOptions options);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<PrependAsync>d__56")]
public sealed virtual Task`1<IMutationResult> PrependAsync(string id, Byte[] value, PrependOptions options);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<IncrementAsync>d__57")]
public sealed virtual Task`1<ICounterResult> IncrementAsync(string id, IncrementOptions options);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<DecrementAsync>d__58")]
public sealed virtual Task`1<ICounterResult> DecrementAsync(string id, DecrementOptions options);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<GetAnyReplicaAsync>d__59")]
public sealed virtual Task`1<IGetReplicaResult> GetAnyReplicaAsync(string id, GetAnyReplicaOptions options);
    private VBucket VBucketForReplicas(string id, string caller);
    public sealed virtual IEnumerable`1<Task`1<IGetReplicaResult>> GetAllReplicasAsync(string id, GetAllReplicasOptions options);
    private static List`1<short> GetReplicaIndexes(VBucket vBucket);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<GetPrimary>d__63")]
private Task`1<IGetReplicaResult> GetPrimary(string id, IRequestSpan span, CancellationToken cancellationToken, ITranscoderOverrideOptions options);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<GetReplica>d__64")]
private Task`1<IGetReplicaResult> GetReplica(string id, short index, IRequestSpan span, CancellationToken cancellationToken, ITranscoderOverrideOptions options);
    private bool RequiresCid();
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<PopulateCidAsync>d__66")]
public sealed virtual ValueTask PopulateCidAsync(bool retryIfFailure, bool forceUpdate);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<GetCidAsync>d__67")]
private Task`1<Nullable`1<UInt32>> GetCidAsync(string fullyQualifiedName, bool sendAsBody, bool retryIfFailure);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.CouchbaseCollection/<GetCidWithFallbackAsync>d__68")]
private Task`1<Nullable`1<UInt32>> GetCidWithFallbackAsync(bool retryIfFailure);
    private IRequestSpan RootSpan(string operation, IRequestSpan parentSpan);
    private CancellationTokenPairSource CreateRetryTimeoutCancellationTokenSource(ITimeoutOptions options, IOperation op);
    public sealed virtual ICollectionQueryIndexManager get_QueryIndexes();
    [CompilerGeneratedAttribute]
private Task`1<Nullable`1<UInt32>> <PopulateCidAsync>b__66_0();
    [CompilerGeneratedAttribute]
private Task`1<Nullable`1<UInt32>> <PopulateCidAsync>b__66_1();
}
internal class Couchbase.KeyValue.CounterResult : MutationResult {
    [CompilerGeneratedAttribute]
private ulong <Content>k__BackingField;
    public ulong Content { get; }
    [NullableContextAttribute("2")]
internal CounterResult(ulong value, ulong cas, Nullable`1<TimeSpan> expiry, MutationToken token);
    [CompilerGeneratedAttribute]
public sealed virtual ulong get_Content();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.DecrementOptions : object {
    [CompilerGeneratedAttribute]
private static DecrementOptions <Default>k__BackingField;
    public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private Nullable`1<ulong> <InitialValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <DeltaValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <CasValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ReplicateTo <ReplicateTo>k__BackingField;
    [CompilerGeneratedAttribute]
private PersistTo <PersistTo>k__BackingField;
    [CompilerGeneratedAttribute]
private DurabilityLevel <DurabilityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ExpiryValue>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    internal static DecrementOptions Default { get; }
    internal Nullable`1<ulong> InitialValue { get; private set; }
    internal ulong DeltaValue { get; private set; }
    [ObsoleteAttribute("CAS is not supported by the server for the Increment operation.")]
internal ulong CasValue { get; private set; }
    internal ReplicateTo ReplicateTo { get; private set; }
    internal PersistTo PersistTo { get; private set; }
    internal DurabilityLevel DurabilityLevel { get; private set; }
    internal Nullable`1<TimeSpan> TimeoutValue { get; private set; }
    private Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.Timeout { get; }
    internal CancellationToken TokenValue { get; private set; }
    private CancellationToken Couchbase.KeyValue.ITimeoutOptions.Token { get; }
    internal TimeSpan ExpiryValue { get; private set; }
    [NullableAttribute("2")]
internal IRequestSpan RequestSpanValue { get; private set; }
    [NullableAttribute("2")]
internal IRetryStrategy RetryStrategyValue { get; private set; }
    [NullableAttribute("2")]
private IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.RetryStrategy { get; }
    private static DecrementOptions();
    [CompilerGeneratedAttribute]
internal static DecrementOptions get_Default();
    [CompilerGeneratedAttribute]
internal Nullable`1<ulong> get_InitialValue();
    [CompilerGeneratedAttribute]
private void set_InitialValue(Nullable`1<ulong> value);
    [CompilerGeneratedAttribute]
internal ulong get_DeltaValue();
    [CompilerGeneratedAttribute]
private void set_DeltaValue(ulong value);
    [CompilerGeneratedAttribute]
internal ulong get_CasValue();
    [CompilerGeneratedAttribute]
private void set_CasValue(ulong value);
    [CompilerGeneratedAttribute]
internal ReplicateTo get_ReplicateTo();
    [CompilerGeneratedAttribute]
private void set_ReplicateTo(ReplicateTo value);
    [CompilerGeneratedAttribute]
internal PersistTo get_PersistTo();
    [CompilerGeneratedAttribute]
private void set_PersistTo(PersistTo value);
    [CompilerGeneratedAttribute]
internal DurabilityLevel get_DurabilityLevel();
    [CompilerGeneratedAttribute]
private void set_DurabilityLevel(DurabilityLevel value);
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_TimeoutValue();
    [CompilerGeneratedAttribute]
private void set_TimeoutValue(Nullable`1<TimeSpan> value);
    private sealed virtual override Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.get_Timeout();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    private sealed virtual override CancellationToken Couchbase.KeyValue.ITimeoutOptions.get_Token();
    [CompilerGeneratedAttribute]
internal TimeSpan get_ExpiryValue();
    [CompilerGeneratedAttribute]
private void set_ExpiryValue(TimeSpan value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    public DecrementOptions RequestSpan(IRequestSpan span);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_RetryStrategyValue(IRetryStrategy value);
    [NullableContextAttribute("2")]
private sealed virtual override IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.get_RetryStrategy();
    public DecrementOptions RetryStrategy(IRetryStrategy retryStrategy);
    public DecrementOptions Expiry(TimeSpan expiry);
    public DecrementOptions Initial(ulong initial);
    public DecrementOptions Delta(ulong delta);
    [ObsoleteAttribute("CAS is not supported by the server for the Increment operation.")]
public DecrementOptions Cas(ulong cas);
    public DecrementOptions Durability(PersistTo persistTo, ReplicateTo replicateTo);
    public DecrementOptions Durability(DurabilityLevel durabilityLevel);
    public DecrementOptions Timeout(TimeSpan timeout);
    public DecrementOptions CancellationToken(CancellationToken token);
    [NullableContextAttribute("2")]
public void Deconstruct(Nullable`1& initial, UInt64& delta, ReplicateTo& replicateTo, PersistTo& persistTo, DurabilityLevel& durabilityLevel, Nullable`1& timeout, CancellationToken& token, TimeSpan& expiry, IRequestSpan& requestSpan, IRetryStrategy& retryStrategy);
    public ReadOnly AsReadOnly();
}
public enum Couchbase.KeyValue.DurabilityLevel : Enum {
    public byte value__;
    [DescriptionAttribute("none")]
public static DurabilityLevel None;
    [DescriptionAttribute("majority")]
public static DurabilityLevel Majority;
    [DescriptionAttribute("majorityAndPersistActive")]
public static DurabilityLevel MajorityAndPersistToActive;
    [DescriptionAttribute("persistToMajority")]
public static DurabilityLevel PersistToMajority;
}
public class Couchbase.KeyValue.DurabilityRequirement : object {
    [CompilerGeneratedAttribute]
private DurabilityLevel <Level>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Timeout>k__BackingField;
    public DurabilityLevel Level { get; public set; }
    public TimeSpan Timeout { get; public set; }
    [CompilerGeneratedAttribute]
public DurabilityLevel get_Level();
    [CompilerGeneratedAttribute]
public void set_Level(DurabilityLevel value);
    [CompilerGeneratedAttribute]
public TimeSpan get_Timeout();
    [CompilerGeneratedAttribute]
public void set_Timeout(TimeSpan value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.ExistsOptions : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private static ExistsOptions <Default>k__BackingField;
    [NullableAttribute("1")]
public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    [NullableAttribute("1")]
internal static ExistsOptions Default { get; }
    internal Nullable`1<TimeSpan> TimeoutValue { get; private set; }
    private Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.Timeout { get; }
    internal CancellationToken TokenValue { get; private set; }
    private CancellationToken Couchbase.KeyValue.ITimeoutOptions.Token { get; }
    internal IRetryStrategy RetryStrategyValue { get; private set; }
    private IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.RetryStrategy { get; }
    internal IRequestSpan RequestSpanValue { get; private set; }
    private static ExistsOptions();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static ExistsOptions get_Default();
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_TimeoutValue();
    [CompilerGeneratedAttribute]
private void set_TimeoutValue(Nullable`1<TimeSpan> value);
    private sealed virtual override Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.get_Timeout();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    private sealed virtual override CancellationToken Couchbase.KeyValue.ITimeoutOptions.get_Token();
    [CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [CompilerGeneratedAttribute]
private void set_RetryStrategyValue(IRetryStrategy value);
    private sealed virtual override IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.get_RetryStrategy();
    [CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    [NullableContextAttribute("1")]
public ExistsOptions RequestSpan(IRequestSpan span);
    [NullableContextAttribute("1")]
public ExistsOptions RetryStrategy(IRetryStrategy retryStrategy);
    [NullableContextAttribute("1")]
public ExistsOptions Timeout(TimeSpan timeout);
    [NullableContextAttribute("1")]
public ExistsOptions CancellationToken(CancellationToken token);
    public void Deconstruct(Nullable`1& timeout, CancellationToken& token, IRetryStrategy& retryStrategy, IRequestSpan& requestSpan);
    [NullableContextAttribute("1")]
public ReadOnly AsReadOnly();
}
internal class Couchbase.KeyValue.ExistsResult : object {
    [CompilerGeneratedAttribute]
private bool <Exists>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Cas>k__BackingField;
    public bool Exists { get; public set; }
    public ulong Cas { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Exists();
    [CompilerGeneratedAttribute]
public void set_Exists(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual ulong get_Cas();
    [CompilerGeneratedAttribute]
public void set_Cas(ulong value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.KeyValue.ExpressionVisitors.LambdaSimplifyingExpressionVisitor : ExpressionVisitor {
    private bool _isEvaluatable;
    public static Expression Simplify(Expression expression);
    [NullableContextAttribute("2")]
public virtual Expression Visit(Expression node);
    [NullableContextAttribute("2")]
private bool IsChildEvaluatable(Expression& child);
    [NullableContextAttribute("2")]
private void VisitChildren(Expression& child1, Expression& child2);
    [NullableContextAttribute("2")]
private void VisitChildren(Expression& child1, Expression& child2, Expression& child3);
    private void VisitChildren(Span`1<Expression> children);
    protected virtual Expression VisitParameter(ParameterExpression node);
    protected virtual Expression VisitBinary(BinaryExpression node);
    protected virtual Expression VisitConditional(ConditionalExpression node);
    protected virtual Expression VisitMethodCall(MethodCallExpression node);
    private static ConstantExpression ConvertToConstant(Expression node);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.KeyValue.ExpressionVisitors.SubDocumentPathExpressionVisitor : ExpressionVisitor {
    private static Type[] IntegralTypes;
    private static Boolean[] EscapeCharacters;
    private IExtendedTypeSerializer _serializer;
    private StringBuilder _path;
    [NullableAttribute("2")]
private ParameterExpression _parameter;
    private SpecialExpressionType _inSpecialExpression;
    private bool _parameterEncountered;
    public string Path { get; }
    private static SubDocumentPathExpressionVisitor();
    private SubDocumentPathExpressionVisitor(IExtendedTypeSerializer serializer);
    public string get_Path();
    [NullableContextAttribute("2")]
public static string GetPath(ITypeSerializerProvider typeSerializerProvider, Expression`1<Func`2<TDocument, TContent>> path);
    public static string GetPath(IExtendedTypeSerializer serializer, Expression`1<Func`2<TDocument, TContent>> path);
    [NullableContextAttribute("2")]
public virtual Expression Visit(Expression node);
    protected virtual Expression VisitLambda(Expression`1<T> node);
    protected virtual Expression VisitParameter(ParameterExpression node);
    protected virtual Expression VisitConstant(ConstantExpression node);
    protected virtual Expression VisitMember(MemberExpression node);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2075")]
protected virtual Expression VisitMethodCall(MethodCallExpression node);
    private Expression VisitArrayIndex(BinaryExpression node);
    protected virtual Expression VisitBinary(BinaryExpression node);
    protected virtual Expression VisitBlock(BlockExpression node);
    protected virtual Expression VisitConditional(ConditionalExpression node);
    protected virtual Expression VisitDefault(DefaultExpression node);
    protected virtual Expression VisitExtension(Expression node);
    protected virtual Expression VisitIndex(IndexExpression node);
    protected virtual Expression VisitListInit(ListInitExpression node);
    protected virtual Expression VisitNew(NewExpression node);
    protected virtual Expression VisitNewArray(NewArrayExpression node);
    protected virtual Expression VisitMemberInit(MemberInitExpression node);
    protected virtual Expression VisitUnary(UnaryExpression node);
    private string GetMemberName(MemberInfo member);
    private void PrependDotSmart(Expression precedingExpression);
    private void WriteEscapedString(string str);
    [RequiresUnreferencedCodeAttribute("The DefaultSerializer uses Newtonsoft.Json which requires unreferenced code and is incompatible with trimming.")]
[RequiresDynamicCodeAttribute("The DefaultSerializer uses Newtonsoft.Json which requires dynamic code and is incompatible with AOT.")]
internal static string GetEscapedString(string str);
    private void EnsureNotInSpecialExpression();
    private static NotSupportedException CreateExpressionNotSupportedException(Expression node);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.GetAllReplicasOptions : object {
    [NullableAttribute("1")]
public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeTranscoder <TranscoderValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private static GetAllReplicasOptions <Default>k__BackingField;
    private Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.Timeout { get; }
    internal CancellationToken TokenValue { get; private set; }
    private CancellationToken Couchbase.KeyValue.ITimeoutOptions.Token { get; }
    internal ITypeTranscoder TranscoderValue { get; private set; }
    private ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.Transcoder { get; }
    internal IRetryStrategy RetryStrategyValue { get; private set; }
    private IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.RetryStrategy { get; }
    internal IRequestSpan RequestSpanValue { get; private set; }
    [NullableAttribute("1")]
public static GetAllReplicasOptions Default { get; }
    private static GetAllReplicasOptions();
    private sealed virtual override Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.get_Timeout();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    private sealed virtual override CancellationToken Couchbase.KeyValue.ITimeoutOptions.get_Token();
    [CompilerGeneratedAttribute]
internal ITypeTranscoder get_TranscoderValue();
    [CompilerGeneratedAttribute]
private void set_TranscoderValue(ITypeTranscoder value);
    private sealed virtual override ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.get_Transcoder();
    [CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [CompilerGeneratedAttribute]
private void set_RetryStrategyValue(IRetryStrategy value);
    private sealed virtual override IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.get_RetryStrategy();
    [CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    [NullableContextAttribute("1")]
public GetAllReplicasOptions RequestSpan(IRequestSpan span);
    [NullableContextAttribute("1")]
public GetAllReplicasOptions RetryStrategy(IRetryStrategy retryStrategy);
    [NullableContextAttribute("1")]
public GetAllReplicasOptions Transcoder(ITypeTranscoder transcoder);
    [NullableContextAttribute("1")]
public GetAllReplicasOptions CancellationToken(CancellationToken token);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public static GetAllReplicasOptions get_Default();
    public void Deconstruct(CancellationToken& token, ITypeTranscoder& transcoder, IRetryStrategy& retryStrategy, IRequestSpan& requestSpan);
    [NullableContextAttribute("1")]
public ReadOnly AsReadOnly();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.GetAndLockOptions : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private static GetAndLockOptions <Default>k__BackingField;
    [NullableAttribute("1")]
public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeTranscoder <TranscoderValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PreferReturn>k__BackingField;
    [NullableAttribute("1")]
internal static GetAndLockOptions Default { get; }
    internal Nullable`1<TimeSpan> TimeoutValue { get; private set; }
    private Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.Timeout { get; }
    internal CancellationToken TokenValue { get; private set; }
    private CancellationToken Couchbase.KeyValue.ITimeoutOptions.Token { get; }
    internal ITypeTranscoder TranscoderValue { get; private set; }
    private ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.Transcoder { get; }
    internal IRetryStrategy RetryStrategyValue { get; private set; }
    private IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.RetryStrategy { get; }
    internal IRequestSpan RequestSpanValue { get; private set; }
    internal bool PreferReturn { get; internal set; }
    private static GetAndLockOptions();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static GetAndLockOptions get_Default();
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_TimeoutValue();
    [CompilerGeneratedAttribute]
private void set_TimeoutValue(Nullable`1<TimeSpan> value);
    private sealed virtual override Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.get_Timeout();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    private sealed virtual override CancellationToken Couchbase.KeyValue.ITimeoutOptions.get_Token();
    [CompilerGeneratedAttribute]
internal ITypeTranscoder get_TranscoderValue();
    [CompilerGeneratedAttribute]
private void set_TranscoderValue(ITypeTranscoder value);
    private sealed virtual override ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.get_Transcoder();
    [CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [CompilerGeneratedAttribute]
private void set_RetryStrategyValue(IRetryStrategy value);
    private sealed virtual override IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.get_RetryStrategy();
    [CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    [CompilerGeneratedAttribute]
internal bool get_PreferReturn();
    [CompilerGeneratedAttribute]
internal void set_PreferReturn(bool value);
    [NullableContextAttribute("1")]
public GetAndLockOptions RequestSpan(IRequestSpan span);
    [NullableContextAttribute("1")]
public GetAndLockOptions RetryStrategy(IRetryStrategy retryStrategy);
    [NullableContextAttribute("1")]
public GetAndLockOptions Transcoder(ITypeTranscoder transcoder);
    [NullableContextAttribute("1")]
public GetAndLockOptions Timeout(TimeSpan timeout);
    [NullableContextAttribute("1")]
public GetAndLockOptions CancellationToken(CancellationToken token);
    public void Deconstruct(Nullable`1& timeout, CancellationToken& token, ITypeTranscoder& transcoder, IRetryStrategy& retryStrategy, IRequestSpan& requestSpan);
    [NullableContextAttribute("1")]
public ReadOnly AsReadOnly();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.GetAndTouchOptions : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private static GetAndTouchOptions <Default>k__BackingField;
    [NullableAttribute("1")]
public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeTranscoder <TranscoderValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PreferReturn>k__BackingField;
    [NullableAttribute("1")]
internal static GetAndTouchOptions Default { get; }
    internal Nullable`1<TimeSpan> TimeoutValue { get; private set; }
    private Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.Timeout { get; }
    internal CancellationToken TokenValue { get; private set; }
    private CancellationToken Couchbase.KeyValue.ITimeoutOptions.Token { get; }
    internal ITypeTranscoder TranscoderValue { get; private set; }
    private ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.Transcoder { get; }
    internal IRetryStrategy RetryStrategyValue { get; private set; }
    private IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.RetryStrategy { get; }
    internal IRequestSpan RequestSpanValue { get; private set; }
    internal bool PreferReturn { get; internal set; }
    private static GetAndTouchOptions();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static GetAndTouchOptions get_Default();
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_TimeoutValue();
    [CompilerGeneratedAttribute]
private void set_TimeoutValue(Nullable`1<TimeSpan> value);
    private sealed virtual override Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.get_Timeout();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    private sealed virtual override CancellationToken Couchbase.KeyValue.ITimeoutOptions.get_Token();
    [CompilerGeneratedAttribute]
internal ITypeTranscoder get_TranscoderValue();
    [CompilerGeneratedAttribute]
private void set_TranscoderValue(ITypeTranscoder value);
    private sealed virtual override ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.get_Transcoder();
    [CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [CompilerGeneratedAttribute]
private void set_RetryStrategyValue(IRetryStrategy value);
    private sealed virtual override IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.get_RetryStrategy();
    [CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    [CompilerGeneratedAttribute]
internal bool get_PreferReturn();
    [CompilerGeneratedAttribute]
internal void set_PreferReturn(bool value);
    [NullableContextAttribute("1")]
public GetAndTouchOptions RequestSpan(IRequestSpan span);
    [NullableContextAttribute("1")]
public GetAndTouchOptions RetryStrategy(IRetryStrategy retryStrategy);
    [NullableContextAttribute("1")]
public GetAndTouchOptions Transcoder(ITypeTranscoder transcoder);
    [NullableContextAttribute("1")]
public GetAndTouchOptions Timeout(TimeSpan timeout);
    [NullableContextAttribute("1")]
public GetAndTouchOptions CancellationToken(CancellationToken token);
    public void Deconstruct(Nullable`1& timeout, CancellationToken& token, ITypeTranscoder& transcoder, IRetryStrategy& retryStrategy, IRequestSpan& requestSpan);
    [NullableContextAttribute("1")]
public ReadOnly AsReadOnly();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.GetAnyReplicaOptions : object {
    [NullableAttribute("1")]
public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private ITypeTranscoder <TranscoderValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private static GetAnyReplicaOptions <Default>k__BackingField;
    private Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.Timeout { get; }
    internal ITypeTranscoder TranscoderValue { get; private set; }
    private ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.Transcoder { get; }
    internal IRetryStrategy RetryStrategyValue { get; private set; }
    private IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.RetryStrategy { get; }
    internal IRequestSpan RequestSpanValue { get; private set; }
    internal CancellationToken TokenValue { get; private set; }
    private CancellationToken Couchbase.KeyValue.ITimeoutOptions.Token { get; }
    [NullableAttribute("1")]
public static GetAnyReplicaOptions Default { get; }
    private static GetAnyReplicaOptions();
    private sealed virtual override Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.get_Timeout();
    [CompilerGeneratedAttribute]
internal ITypeTranscoder get_TranscoderValue();
    [CompilerGeneratedAttribute]
private void set_TranscoderValue(ITypeTranscoder value);
    private sealed virtual override ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.get_Transcoder();
    [CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [CompilerGeneratedAttribute]
private void set_RetryStrategyValue(IRetryStrategy value);
    private sealed virtual override IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.get_RetryStrategy();
    [CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    [NullableContextAttribute("1")]
public GetAnyReplicaOptions RequestSpan(IRequestSpan span);
    [NullableContextAttribute("1")]
public GetAnyReplicaOptions RetryStrategy(IRetryStrategy retryStrategy);
    [NullableContextAttribute("1")]
public GetAnyReplicaOptions Transcoder(ITypeTranscoder transcoder);
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    private sealed virtual override CancellationToken Couchbase.KeyValue.ITimeoutOptions.get_Token();
    [NullableContextAttribute("1")]
public GetAnyReplicaOptions CancellationToken(CancellationToken token);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public static GetAnyReplicaOptions get_Default();
    public void Deconstruct(ITypeTranscoder& transcoder, IRetryStrategy& retryStrategy, IRequestSpan& requestSpan, CancellationToken& token);
    [NullableContextAttribute("1")]
public ReadOnly AsReadOnly();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.GetOptions : object {
    [NullableAttribute("1")]
private static ReadOnlyCollection`1<string> EmptyProjectList;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private static GetOptions <Default>k__BackingField;
    [NullableAttribute("1")]
public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private bool <PreferReturn>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeExpiryValue>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ReadOnlyCollection`1<string> <ProjectListValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeTranscoder <TranscoderValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    [NullableAttribute("1")]
internal static GetOptions Default { get; }
    internal bool PreferReturn { get; internal set; }
    internal bool IncludeExpiryValue { get; private set; }
    [NullableAttribute("1")]
internal ReadOnlyCollection`1<string> ProjectListValue { get; private set; }
    internal Nullable`1<TimeSpan> TimeoutValue { get; private set; }
    private Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.Timeout { get; }
    internal CancellationToken TokenValue { get; private set; }
    private CancellationToken Couchbase.KeyValue.ITimeoutOptions.Token { get; }
    internal ITypeTranscoder TranscoderValue { get; private set; }
    private ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.Transcoder { get; }
    internal IRetryStrategy RetryStrategyValue { get; private set; }
    private IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.RetryStrategy { get; }
    internal IRequestSpan RequestSpanValue { get; private set; }
    private static GetOptions();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static GetOptions get_Default();
    [CompilerGeneratedAttribute]
internal bool get_PreferReturn();
    [CompilerGeneratedAttribute]
internal void set_PreferReturn(bool value);
    [CompilerGeneratedAttribute]
internal bool get_IncludeExpiryValue();
    [CompilerGeneratedAttribute]
private void set_IncludeExpiryValue(bool value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal ReadOnlyCollection`1<string> get_ProjectListValue();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private void set_ProjectListValue(ReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_TimeoutValue();
    [CompilerGeneratedAttribute]
private void set_TimeoutValue(Nullable`1<TimeSpan> value);
    private sealed virtual override Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.get_Timeout();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    private sealed virtual override CancellationToken Couchbase.KeyValue.ITimeoutOptions.get_Token();
    [CompilerGeneratedAttribute]
internal ITypeTranscoder get_TranscoderValue();
    [CompilerGeneratedAttribute]
private void set_TranscoderValue(ITypeTranscoder value);
    private sealed virtual override ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.get_Transcoder();
    [CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [CompilerGeneratedAttribute]
private void set_RetryStrategyValue(IRetryStrategy value);
    private sealed virtual override IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.get_RetryStrategy();
    [CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    [NullableContextAttribute("1")]
public GetOptions RequestSpan(IRequestSpan span);
    [NullableContextAttribute("1")]
public GetOptions RetryStrategy(IRetryStrategy retryStrategy);
    [NullableContextAttribute("1")]
public GetOptions Transcoder(ITypeTranscoder transcoder);
    [NullableContextAttribute("1")]
public GetOptions Expiry();
    [NullableContextAttribute("1")]
public GetOptions Projection(String[] fields);
    [NullableContextAttribute("1")]
public GetOptions Timeout(TimeSpan timeout);
    [NullableContextAttribute("1")]
public GetOptions CancellationToken(CancellationToken token);
    public void Deconstruct(Boolean& includeExpiry, ReadOnlyCollection`1& projectList, Nullable`1& timeout, CancellationToken& token, ITypeTranscoder& transcoder, IRetryStrategy& retryStrategy, IRequestSpan& requestSpan, Boolean& preferReturn);
    [NullableContextAttribute("1")]
public ReadOnly AsReadOnly();
}
internal class Couchbase.KeyValue.GetReplicaResult : GetResult {
    [CompilerGeneratedAttribute]
private bool <IsActive>k__BackingField;
    public bool IsActive { get; internal set; }
    [NullableContextAttribute("1")]
public GetReplicaResult(SlicedMemoryOwner`1& contentBytes, ITypeTranscoder transcoder, ILogger`1<GetResult> logger, IFallbackTypeSerializerProvider fallbackTypeSerializerProvider);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsActive();
    [CompilerGeneratedAttribute]
internal void set_IsActive(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.KeyValue.GetResult : object {
    [NullableAttribute("0")]
private SlicedMemoryOwner`1<byte> _contentBytes;
    private IList`1<LookupInSpec> _specs;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IReadOnlyCollection`1<string> _projectList;
    private ITypeTranscoder _transcoder;
    [NullableAttribute("2")]
private ITypeSerializer _serializer;
    private ILogger`1<GetResult> _logger;
    private IFallbackTypeSerializerProvider _fallbackTypeSerializerProvider;
    private ResponseStatus _status;
    private bool _isParsed;
    private Nullable`1<TimeSpan> _expiry;
    private Nullable`1<DateTime> _expiryTime;
    [CompilerGeneratedAttribute]
private OperationHeader <Header>k__BackingField;
    [CompilerGeneratedAttribute]
private OpCode <OpCode>k__BackingField;
    [CompilerGeneratedAttribute]
private Flags <Flags>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Cas>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <Opaque>k__BackingField;
    private bool _disposed;
    private ResponseStatus Couchbase.KeyValue.IResponseStatus.Status { get; }
    internal OperationHeader Header { get; internal set; }
    internal OpCode OpCode { get; internal set; }
    internal Flags Flags { get; internal set; }
    [NullableAttribute("2")]
public string Id { get; internal set; }
    public ulong Cas { get; internal set; }
    public Nullable`1<TimeSpan> Expiry { get; }
    public Nullable`1<DateTime> ExpiryTime { get; }
    internal UInt32 Opaque { get; internal set; }
    internal GetResult(SlicedMemoryOwner`1& contentBytes, ITypeTranscoder transcoder, ILogger`1<GetResult> logger, IFallbackTypeSerializerProvider fallbackTypeSerializerProvider, ResponseStatus status, List`1<LookupInSpec> specs, IReadOnlyCollection`1<string> projectList);
    internal GetResult(SlicedMemoryOwner`1& contentBytes, ITypeTranscoder transcoder, ILogger`1<GetResult> logger, IFallbackTypeSerializerProvider fallbackTypeSerializerProvider, List`1<LookupInSpec> specs, IReadOnlyCollection`1<string> projectList);
    private sealed virtual override ResponseStatus Couchbase.KeyValue.IResponseStatus.get_Status();
    [CompilerGeneratedAttribute]
internal OperationHeader get_Header();
    [CompilerGeneratedAttribute]
internal void set_Header(OperationHeader value);
    [CompilerGeneratedAttribute]
internal OpCode get_OpCode();
    [CompilerGeneratedAttribute]
internal void set_OpCode(OpCode value);
    [CompilerGeneratedAttribute]
internal Flags get_Flags();
    [CompilerGeneratedAttribute]
internal void set_Flags(Flags value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Id();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual ulong get_Cas();
    [CompilerGeneratedAttribute]
internal void set_Cas(ulong value);
    public sealed virtual Nullable`1<TimeSpan> get_Expiry();
    public sealed virtual Nullable`1<DateTime> get_ExpiryTime();
    [CompilerGeneratedAttribute]
internal UInt32 get_Opaque();
    [CompilerGeneratedAttribute]
internal void set_Opaque(UInt32 value);
    [NullableContextAttribute("2")]
public sealed virtual T ContentAs();
    private void ParseSpecs();
    private IProjectionBuilder GetProjectionBuilder();
    protected virtual override void Finalize();
    public sealed virtual void Dispose();
    private void Dispose(bool disposing);
    protected void EnsureNotDisposed();
}
[NullableContextAttribute("1")]
public interface Couchbase.KeyValue.IBinaryCollection {
    public abstract virtual Task`1<IMutationResult> AppendAsync(string id, Byte[] value, AppendOptions options);
    public abstract virtual Task`1<IMutationResult> PrependAsync(string id, Byte[] value, PrependOptions options);
    public abstract virtual Task`1<ICounterResult> IncrementAsync(string id, IncrementOptions options);
    public abstract virtual Task`1<ICounterResult> DecrementAsync(string id, DecrementOptions options);
}
[NullableContextAttribute("1")]
public interface Couchbase.KeyValue.ICouchbaseCollection {
    public Nullable`1<UInt32> Cid { get; }
    public string Name { get; }
    public IScope Scope { get; }
    public IBinaryCollection Binary { get; }
    public bool IsDefaultCollection { get; }
    [InterfaceStabilityAttribute("2")]
public ICollectionQueryIndexManager QueryIndexes { get; }
    public abstract virtual Nullable`1<UInt32> get_Cid();
    public abstract virtual string get_Name();
    public abstract virtual IScope get_Scope();
    public abstract virtual IBinaryCollection get_Binary();
    public abstract virtual bool get_IsDefaultCollection();
    public abstract virtual Task`1<IGetResult> GetAsync(string id, GetOptions options);
    public abstract virtual Task`1<IExistsResult> ExistsAsync(string id, ExistsOptions options);
    public abstract virtual Task`1<IMutationResult> UpsertAsync(string id, T content, UpsertOptions options);
    public abstract virtual Task`1<IMutationResult> InsertAsync(string id, T content, InsertOptions options);
    public abstract virtual Task`1<IMutationResult> ReplaceAsync(string id, T content, ReplaceOptions options);
    public abstract virtual Task RemoveAsync(string id, RemoveOptions options);
    [ObsoleteAttribute("Use overload that does not have a Type parameter T.")]
public abstract virtual Task UnlockAsync(string id, ulong cas, UnlockOptions options);
    public abstract virtual Task UnlockAsync(string id, ulong cas, UnlockOptions options);
    public abstract virtual Task TouchAsync(string id, TimeSpan expiry, TouchOptions options);
    public abstract virtual Task`1<IMutationResult> TouchWithCasAsync(string id, TimeSpan expiry, TouchOptions options);
    public abstract virtual Task`1<IGetResult> GetAndTouchAsync(string id, TimeSpan expiry, GetAndTouchOptions options);
    public abstract virtual Task`1<IGetResult> GetAndLockAsync(string id, TimeSpan expiry, GetAndLockOptions options);
    public abstract virtual Task`1<IGetReplicaResult> GetAnyReplicaAsync(string id, GetAnyReplicaOptions options);
    public abstract virtual IEnumerable`1<Task`1<IGetReplicaResult>> GetAllReplicasAsync(string id, GetAllReplicasOptions options);
    public abstract virtual Task`1<ILookupInResult> LookupInAsync(string id, IEnumerable`1<LookupInSpec> specs, LookupInOptions options);
    [InterfaceStabilityAttribute("2")]
public abstract virtual Task`1<ILookupInReplicaResult> LookupInAnyReplicaAsync(string id, IEnumerable`1<LookupInSpec> specs, LookupInAnyReplicaOptions options);
    [InterfaceStabilityAttribute("2")]
public abstract virtual IAsyncEnumerable`1<ILookupInReplicaResult> LookupInAllReplicasAsync(string id, IEnumerable`1<LookupInSpec> specs, LookupInAllReplicasOptions options);
    public abstract virtual Task`1<IMutateInResult> MutateInAsync(string id, IEnumerable`1<MutateInSpec> specs, MutateInOptions options);
    public abstract virtual IAsyncEnumerable`1<IScanResult> ScanAsync(IScanType scanType, ScanOptions options);
    public abstract virtual ICollectionQueryIndexManager get_QueryIndexes();
}
public interface Couchbase.KeyValue.ICounterResult {
    public ulong Content { get; }
    public abstract virtual ulong get_Content();
}
public interface Couchbase.KeyValue.IExistsResult {
    public bool Exists { get; }
    public abstract virtual bool get_Exists();
}
public interface Couchbase.KeyValue.IGetReplicaResult {
    public bool IsActive { get; }
    public abstract virtual bool get_IsActive();
}
public interface Couchbase.KeyValue.IGetResult {
    [ObsoleteAttribute("This property is no longer supported; use ExpiryTime instead.")]
public Nullable`1<TimeSpan> Expiry { get; }
    public Nullable`1<DateTime> ExpiryTime { get; }
    [NullableContextAttribute("2")]
public abstract virtual T ContentAs();
    public abstract virtual Nullable`1<TimeSpan> get_Expiry();
    public abstract virtual Nullable`1<DateTime> get_ExpiryTime();
}
internal interface Couchbase.KeyValue.IInternalCollection {
    public Nullable`1<UInt32> Cid { get; public set; }
    public abstract virtual Nullable`1<UInt32> get_Cid();
    public abstract virtual void set_Cid(Nullable`1<UInt32> value);
    public abstract virtual ValueTask PopulateCidAsync(bool retryIfFailure, bool forceUpdate);
}
[NullableContextAttribute("2")]
internal interface Couchbase.KeyValue.IKeyValueOptions {
    internal IRetryStrategy RetryStrategy { get; }
    internal abstract virtual IRetryStrategy get_RetryStrategy();
}
[InterfaceStabilityAttribute("2")]
public interface Couchbase.KeyValue.ILookupInReplicaResult {
    public Nullable`1<bool> IsReplica { get; }
    public abstract virtual Nullable`1<bool> get_IsReplica();
}
[InterfaceStabilityAttribute("2")]
public interface Couchbase.KeyValue.ILookupInReplicaResult`1 {
}
public interface Couchbase.KeyValue.ILookupInResult {
    public bool IsDeleted { get; }
    public abstract virtual bool Exists(int index);
    public abstract virtual bool get_IsDeleted();
    [NullableContextAttribute("2")]
public abstract virtual T ContentAs(int index);
    [NullableContextAttribute("1")]
[InterfaceStabilityAttribute("2")]
public abstract virtual int IndexOf(string path);
}
[InterfaceStabilityAttribute("2")]
public interface Couchbase.KeyValue.ILookupInResult`1 {
}
public interface Couchbase.KeyValue.IMutateInResult {
    [NullableContextAttribute("2")]
public abstract virtual T ContentAs(int index);
    [NullableContextAttribute("1")]
[InterfaceStabilityAttribute("2")]
public abstract virtual int IndexOf(string path);
}
[InterfaceStabilityAttribute("2")]
public interface Couchbase.KeyValue.IMutateInResult`1 {
}
public interface Couchbase.KeyValue.IMutationMacro {
}
[NullableContextAttribute("1")]
public interface Couchbase.KeyValue.IMutationResult {
    public MutationToken MutationToken { get; public set; }
    public abstract virtual MutationToken get_MutationToken();
    public abstract virtual void set_MutationToken(MutationToken value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.IncrementOptions : object {
    [CompilerGeneratedAttribute]
private static IncrementOptions <Default>k__BackingField;
    public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private Nullable`1<ulong> <InitialValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <DeltaValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <CasValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ReplicateTo <ReplicateTo>k__BackingField;
    [CompilerGeneratedAttribute]
private PersistTo <PersistTo>k__BackingField;
    [CompilerGeneratedAttribute]
private DurabilityLevel <DurabilityLevel>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ExpiryValue>k__BackingField;
    internal static IncrementOptions Default { get; }
    internal Nullable`1<ulong> InitialValue { get; private set; }
    internal ulong DeltaValue { get; private set; }
    [ObsoleteAttribute("CAS is not supported by the server for the Increment operation.")]
internal ulong CasValue { get; private set; }
    internal ReplicateTo ReplicateTo { get; private set; }
    internal PersistTo PersistTo { get; private set; }
    internal DurabilityLevel DurabilityLevel { get; private set; }
    [NullableAttribute("2")]
internal IRetryStrategy RetryStrategyValue { get; private set; }
    [NullableAttribute("2")]
private IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.RetryStrategy { get; }
    [NullableAttribute("2")]
internal IRequestSpan RequestSpanValue { get; private set; }
    internal Nullable`1<TimeSpan> TimeoutValue { get; private set; }
    private Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.Timeout { get; }
    internal CancellationToken TokenValue { get; private set; }
    private CancellationToken Couchbase.KeyValue.ITimeoutOptions.Token { get; }
    internal TimeSpan ExpiryValue { get; private set; }
    private static IncrementOptions();
    [CompilerGeneratedAttribute]
internal static IncrementOptions get_Default();
    [CompilerGeneratedAttribute]
internal Nullable`1<ulong> get_InitialValue();
    [CompilerGeneratedAttribute]
private void set_InitialValue(Nullable`1<ulong> value);
    [CompilerGeneratedAttribute]
internal ulong get_DeltaValue();
    [CompilerGeneratedAttribute]
private void set_DeltaValue(ulong value);
    [CompilerGeneratedAttribute]
internal ulong get_CasValue();
    [CompilerGeneratedAttribute]
private void set_CasValue(ulong value);
    [CompilerGeneratedAttribute]
internal ReplicateTo get_ReplicateTo();
    [CompilerGeneratedAttribute]
private void set_ReplicateTo(ReplicateTo value);
    [CompilerGeneratedAttribute]
internal PersistTo get_PersistTo();
    [CompilerGeneratedAttribute]
private void set_PersistTo(PersistTo value);
    [CompilerGeneratedAttribute]
internal DurabilityLevel get_DurabilityLevel();
    [CompilerGeneratedAttribute]
private void set_DurabilityLevel(DurabilityLevel value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_RetryStrategyValue(IRetryStrategy value);
    [NullableContextAttribute("2")]
private sealed virtual override IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.get_RetryStrategy();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    public IncrementOptions RequestSpan(IRequestSpan span);
    public IncrementOptions RetryStrategy(IRetryStrategy retryStrategy);
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_TimeoutValue();
    [CompilerGeneratedAttribute]
private void set_TimeoutValue(Nullable`1<TimeSpan> value);
    private sealed virtual override Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.get_Timeout();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    private sealed virtual override CancellationToken Couchbase.KeyValue.ITimeoutOptions.get_Token();
    [CompilerGeneratedAttribute]
internal TimeSpan get_ExpiryValue();
    [CompilerGeneratedAttribute]
private void set_ExpiryValue(TimeSpan value);
    public IncrementOptions Expiry(TimeSpan expiry);
    public IncrementOptions Initial(ulong initial);
    public IncrementOptions Delta(ulong delta);
    [ObsoleteAttribute("CAS is not supported by the server for the Increment operation.")]
public IncrementOptions Cas(ulong cas);
    public IncrementOptions Durability(PersistTo persistTo, ReplicateTo replicateTo);
    public IncrementOptions Durability(DurabilityLevel durabilityLevel);
    public IncrementOptions Timeout(TimeSpan timeout);
    public IncrementOptions CancellationToken(CancellationToken token);
    [NullableContextAttribute("2")]
public void Deconstruct(Nullable`1& initial, UInt64& delta, ReplicateTo& replicateTo, PersistTo& persistTo, DurabilityLevel& durabilityLevel, IRetryStrategy& retryStrategy, IRequestSpan& requestSpan, Nullable`1& timeout, CancellationToken& token, TimeSpan& expiry);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.InsertOptions : object {
    [NullableAttribute("1")]
public static ReadOnly DefaultReadOnly;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private static InsertOptions <Default>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ExpiryValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ReplicateTo <ReplicateTo>k__BackingField;
    [CompilerGeneratedAttribute]
private PersistTo <PersistTo>k__BackingField;
    [CompilerGeneratedAttribute]
private DurabilityLevel <DurabilityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeTranscoder <TranscoderValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    [NullableAttribute("1")]
internal static InsertOptions Default { get; }
    internal TimeSpan ExpiryValue { get; private set; }
    internal ReplicateTo ReplicateTo { get; private set; }
    internal PersistTo PersistTo { get; private set; }
    internal DurabilityLevel DurabilityLevel { get; private set; }
    internal Nullable`1<TimeSpan> TimeoutValue { get; private set; }
    private Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.Timeout { get; }
    internal CancellationToken TokenValue { get; private set; }
    private CancellationToken Couchbase.KeyValue.ITimeoutOptions.Token { get; }
    internal ITypeTranscoder TranscoderValue { get; private set; }
    private ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.Transcoder { get; }
    internal IRetryStrategy RetryStrategyValue { get; private set; }
    private IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.RetryStrategy { get; }
    internal IRequestSpan RequestSpanValue { get; private set; }
    private static InsertOptions();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static InsertOptions get_Default();
    [CompilerGeneratedAttribute]
internal TimeSpan get_ExpiryValue();
    [CompilerGeneratedAttribute]
private void set_ExpiryValue(TimeSpan value);
    [CompilerGeneratedAttribute]
internal ReplicateTo get_ReplicateTo();
    [CompilerGeneratedAttribute]
private void set_ReplicateTo(ReplicateTo value);
    [CompilerGeneratedAttribute]
internal PersistTo get_PersistTo();
    [CompilerGeneratedAttribute]
private void set_PersistTo(PersistTo value);
    [CompilerGeneratedAttribute]
internal DurabilityLevel get_DurabilityLevel();
    [CompilerGeneratedAttribute]
private void set_DurabilityLevel(DurabilityLevel value);
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_TimeoutValue();
    [CompilerGeneratedAttribute]
private void set_TimeoutValue(Nullable`1<TimeSpan> value);
    private sealed virtual override Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.get_Timeout();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    private sealed virtual override CancellationToken Couchbase.KeyValue.ITimeoutOptions.get_Token();
    [CompilerGeneratedAttribute]
internal ITypeTranscoder get_TranscoderValue();
    [CompilerGeneratedAttribute]
private void set_TranscoderValue(ITypeTranscoder value);
    private sealed virtual override ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.get_Transcoder();
    [CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [CompilerGeneratedAttribute]
private void set_RetryStrategyValue(IRetryStrategy value);
    private sealed virtual override IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.get_RetryStrategy();
    [CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    [NullableContextAttribute("1")]
public InsertOptions RequestSpan(IRequestSpan span);
    [NullableContextAttribute("1")]
public InsertOptions RetryStrategy(IRetryStrategy retryStrategy);
    [NullableContextAttribute("1")]
public InsertOptions Transcoder(ITypeTranscoder transcoder);
    [NullableContextAttribute("1")]
public InsertOptions Expiry(TimeSpan expiry);
    [NullableContextAttribute("1")]
public InsertOptions Durability(PersistTo persistTo, ReplicateTo replicateTo);
    [NullableContextAttribute("1")]
public InsertOptions Durability(DurabilityLevel durabilityLevel);
    [NullableContextAttribute("1")]
public InsertOptions Timeout(TimeSpan timeout);
    [NullableContextAttribute("1")]
public InsertOptions CancellationToken(CancellationToken token);
    public void Deconstruct(TimeSpan& expiry, ReplicateTo& replicateTo, PersistTo& persistTo, DurabilityLevel& durabilityLevel, Nullable`1& timeout, CancellationToken& token, ITypeTranscoder& transcoder, IRetryStrategy& retryStrategy, IRequestSpan& requestSpan);
    [NullableContextAttribute("1")]
public ReadOnly AsReadOnly();
}
internal interface Couchbase.KeyValue.IPreMappedVBucketOperation {
    public Nullable`1<short> VBucketId { get; }
    public abstract virtual Nullable`1<short> get_VBucketId();
}
[InterfaceStabilityAttribute("2")]
public interface Couchbase.KeyValue.IResponseStatus {
    public ResponseStatus Status { get; }
    public abstract virtual ResponseStatus get_Status();
}
public interface Couchbase.KeyValue.IResult {
    public ulong Cas { get; }
    public abstract virtual ulong get_Cas();
}
[NullableContextAttribute("1")]
[DefaultMemberAttribute("Item")]
public interface Couchbase.KeyValue.IScope {
    public string Name { get; }
    public IBucket Bucket { get; }
    public bool IsDefaultScope { get; }
    public ICouchbaseCollection Item { get; }
    public ISearchIndexManager SearchIndexes { get; }
    public IEventingFunctionManager EventingFunctions { get; }
    public abstract virtual string get_Name();
    public abstract virtual IBucket get_Bucket();
    public abstract virtual bool get_IsDefaultScope();
    public abstract virtual ICouchbaseCollection get_Item(string name);
    public abstract virtual ICouchbaseCollection Collection(string collectionName);
    public abstract virtual ValueTask`1<ICouchbaseCollection> CollectionAsync(string collectionName);
    public abstract virtual Task`1<IQueryResult`1<T>> QueryAsync(string statement, QueryOptions options);
    public abstract virtual Task`1<IAnalyticsResult`1<T>> AnalyticsQueryAsync(string statement, AnalyticsOptions options);
    public abstract virtual ISearchIndexManager get_SearchIndexes();
    public abstract virtual IEventingFunctionManager get_EventingFunctions();
}
internal interface Couchbase.KeyValue.ITimeoutOptions {
    internal Nullable`1<TimeSpan> Timeout { get; }
    internal CancellationToken Token { get; }
    internal abstract virtual Nullable`1<TimeSpan> get_Timeout();
    internal abstract virtual CancellationToken get_Token();
}
[NullableContextAttribute("2")]
internal interface Couchbase.KeyValue.ITranscoderOverrideOptions {
    public ITypeTranscoder Transcoder { get; }
    public abstract virtual ITypeTranscoder get_Transcoder();
}
public interface Couchbase.KeyValue.ITryGetResult {
    public bool Exists { get; }
    public abstract virtual bool get_Exists();
}
public interface Couchbase.KeyValue.ITryMutationResult {
    public bool Exists { get; }
    public abstract virtual bool get_Exists();
}
public interface Couchbase.KeyValue.ITryRemoveResult {
    public bool Exists { get; }
    public abstract virtual bool get_Exists();
}
[NullableContextAttribute("2")]
public interface Couchbase.KeyValue.ITryTouchResult {
    public bool Exists { get; }
    public IMutationResult MutationResult { get; }
    public abstract virtual bool get_Exists();
    public abstract virtual IMutationResult get_MutationResult();
}
public interface Couchbase.KeyValue.ITryUnlockResult {
    public bool Exists { get; }
    public abstract virtual bool get_Exists();
}
public class Couchbase.KeyValue.KvErrorMapRetryException : CouchbaseException {
    public KvErrorMapRetryException(string message);
    public KvErrorMapRetryException(string message, Exception innerException);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.LookupInAllReplicasOptions : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private static LookupInAllReplicasOptions <Default>k__BackingField;
    [NullableAttribute("1")]
public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeSerializer <SerializerValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeTranscoder <TranscoderValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    [NullableAttribute("1")]
internal static LookupInAllReplicasOptions Default { get; }
    internal Nullable`1<TimeSpan> TimeoutValue { get; private set; }
    private Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.Timeout { get; }
    internal CancellationToken TokenValue { get; private set; }
    private CancellationToken Couchbase.KeyValue.ITimeoutOptions.Token { get; }
    internal ITypeSerializer SerializerValue { get; private set; }
    internal ITypeTranscoder TranscoderValue { get; private set; }
    private ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.Transcoder { get; }
    internal IRetryStrategy RetryStrategyValue { get; private set; }
    private IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.RetryStrategy { get; }
    internal IRequestSpan RequestSpanValue { get; private set; }
    private static LookupInAllReplicasOptions();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static LookupInAllReplicasOptions get_Default();
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_TimeoutValue();
    [CompilerGeneratedAttribute]
private void set_TimeoutValue(Nullable`1<TimeSpan> value);
    private sealed virtual override Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.get_Timeout();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    private sealed virtual override CancellationToken Couchbase.KeyValue.ITimeoutOptions.get_Token();
    [CompilerGeneratedAttribute]
internal ITypeSerializer get_SerializerValue();
    [CompilerGeneratedAttribute]
private void set_SerializerValue(ITypeSerializer value);
    [CompilerGeneratedAttribute]
internal ITypeTranscoder get_TranscoderValue();
    [CompilerGeneratedAttribute]
private void set_TranscoderValue(ITypeTranscoder value);
    private sealed virtual override ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.get_Transcoder();
    [CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [CompilerGeneratedAttribute]
private void set_RetryStrategyValue(IRetryStrategy value);
    private sealed virtual override IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.get_RetryStrategy();
    [CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    [NullableContextAttribute("1")]
public LookupInAllReplicasOptions RequestSpan(IRequestSpan span);
    [NullableContextAttribute("1")]
public LookupInAllReplicasOptions RetryStrategy(IRetryStrategy retryStrategy);
    [NullableContextAttribute("1")]
public LookupInAllReplicasOptions Serializer(ITypeSerializer serializer);
    [NullableContextAttribute("1")]
public LookupInAllReplicasOptions Transcoder(ITypeTranscoder transcoder);
    [NullableContextAttribute("1")]
public LookupInAllReplicasOptions Timeout(Nullable`1<TimeSpan> timeout);
    [NullableContextAttribute("1")]
public LookupInAllReplicasOptions CancellationToken(CancellationToken token);
    public void Deconstruct(Nullable`1& timeout, CancellationToken& token, ITypeSerializer& serializer, ITypeTranscoder& transcoder, IRetryStrategy& retryStrategy, IRequestSpan& requestSpan);
    [NullableContextAttribute("1")]
public ReadOnly AsReadOnly();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.LookupInAnyReplicaOptions : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private static LookupInAnyReplicaOptions <Default>k__BackingField;
    [NullableAttribute("1")]
public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeSerializer <SerializerValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeTranscoder <TranscoderValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    [NullableAttribute("1")]
internal static LookupInAnyReplicaOptions Default { get; }
    internal Nullable`1<TimeSpan> TimeoutValue { get; private set; }
    private Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.Timeout { get; }
    internal CancellationToken TokenValue { get; private set; }
    private CancellationToken Couchbase.KeyValue.ITimeoutOptions.Token { get; }
    internal ITypeSerializer SerializerValue { get; private set; }
    internal ITypeTranscoder TranscoderValue { get; private set; }
    private ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.Transcoder { get; }
    internal IRetryStrategy RetryStrategyValue { get; private set; }
    private IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.RetryStrategy { get; }
    internal IRequestSpan RequestSpanValue { get; private set; }
    private static LookupInAnyReplicaOptions();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static LookupInAnyReplicaOptions get_Default();
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_TimeoutValue();
    [CompilerGeneratedAttribute]
private void set_TimeoutValue(Nullable`1<TimeSpan> value);
    private sealed virtual override Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.get_Timeout();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    private sealed virtual override CancellationToken Couchbase.KeyValue.ITimeoutOptions.get_Token();
    [CompilerGeneratedAttribute]
internal ITypeSerializer get_SerializerValue();
    [CompilerGeneratedAttribute]
private void set_SerializerValue(ITypeSerializer value);
    [CompilerGeneratedAttribute]
internal ITypeTranscoder get_TranscoderValue();
    [CompilerGeneratedAttribute]
private void set_TranscoderValue(ITypeTranscoder value);
    private sealed virtual override ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.get_Transcoder();
    [CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [CompilerGeneratedAttribute]
private void set_RetryStrategyValue(IRetryStrategy value);
    private sealed virtual override IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.get_RetryStrategy();
    [CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    [NullableContextAttribute("1")]
public LookupInAnyReplicaOptions RequestSpan(IRequestSpan span);
    [NullableContextAttribute("1")]
public LookupInAnyReplicaOptions RetryStrategy(IRetryStrategy retryStrategy);
    [NullableContextAttribute("1")]
public LookupInAnyReplicaOptions Serializer(ITypeSerializer serializer);
    [NullableContextAttribute("1")]
public LookupInAnyReplicaOptions Transcoder(ITypeTranscoder transcoder);
    [NullableContextAttribute("1")]
public LookupInAnyReplicaOptions Timeout(Nullable`1<TimeSpan> timeout);
    [NullableContextAttribute("1")]
public LookupInAnyReplicaOptions CancellationToken(CancellationToken token);
    public void Deconstruct(Nullable`1& timeout, CancellationToken& token, ITypeSerializer& serializer, ITypeTranscoder& transcoder, IRetryStrategy& retryStrategy, IRequestSpan& requestSpan);
    [NullableContextAttribute("1")]
public ReadOnly AsReadOnly();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.LookupInOptions : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private static LookupInOptions <Default>k__BackingField;
    [NullableAttribute("1")]
public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExpiryValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeSerializer <SerializerValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeTranscoder <TranscoderValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AccessDeletedValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    [NullableAttribute("1")]
internal static LookupInOptions Default { get; }
    internal Nullable`1<TimeSpan> TimeoutValue { get; private set; }
    private Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.Timeout { get; }
    internal CancellationToken TokenValue { get; private set; }
    private CancellationToken Couchbase.KeyValue.ITimeoutOptions.Token { get; }
    internal bool ExpiryValue { get; private set; }
    internal ITypeSerializer SerializerValue { get; private set; }
    internal ITypeTranscoder TranscoderValue { get; private set; }
    private ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.Transcoder { get; }
    internal bool AccessDeletedValue { get; private set; }
    internal IRetryStrategy RetryStrategyValue { get; private set; }
    private IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.RetryStrategy { get; }
    internal IRequestSpan RequestSpanValue { get; private set; }
    private static LookupInOptions();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static LookupInOptions get_Default();
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_TimeoutValue();
    [CompilerGeneratedAttribute]
private void set_TimeoutValue(Nullable`1<TimeSpan> value);
    private sealed virtual override Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.get_Timeout();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    private sealed virtual override CancellationToken Couchbase.KeyValue.ITimeoutOptions.get_Token();
    [CompilerGeneratedAttribute]
internal bool get_ExpiryValue();
    [CompilerGeneratedAttribute]
private void set_ExpiryValue(bool value);
    [CompilerGeneratedAttribute]
internal ITypeSerializer get_SerializerValue();
    [CompilerGeneratedAttribute]
private void set_SerializerValue(ITypeSerializer value);
    [CompilerGeneratedAttribute]
internal ITypeTranscoder get_TranscoderValue();
    [CompilerGeneratedAttribute]
private void set_TranscoderValue(ITypeTranscoder value);
    private sealed virtual override ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.get_Transcoder();
    [CompilerGeneratedAttribute]
internal bool get_AccessDeletedValue();
    [CompilerGeneratedAttribute]
private void set_AccessDeletedValue(bool value);
    [CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [CompilerGeneratedAttribute]
private void set_RetryStrategyValue(IRetryStrategy value);
    private sealed virtual override IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.get_RetryStrategy();
    [CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    [NullableContextAttribute("1")]
public LookupInOptions RequestSpan(IRequestSpan span);
    [NullableContextAttribute("1")]
public LookupInOptions RetryStrategy(IRetryStrategy retryStrategy);
    [NullableContextAttribute("1")]
public LookupInOptions Serializer(ITypeSerializer serializer);
    [NullableContextAttribute("1")]
public LookupInOptions Transcoder(ITypeTranscoder transcoder);
    [NullableContextAttribute("1")]
public LookupInOptions Timeout(Nullable`1<TimeSpan> timeout);
    [NullableContextAttribute("1")]
public LookupInOptions CancellationToken(CancellationToken token);
    [NullableContextAttribute("1")]
public LookupInOptions Expiry(bool expiry);
    [NullableContextAttribute("1")]
public LookupInOptions AccessDeleted(bool accessDeleted);
    public void Deconstruct(Nullable`1& timeout, CancellationToken& token, Boolean& expiry, ITypeSerializer& serializer, ITypeTranscoder& transcoder, Boolean& accessDeleted, IRetryStrategy& retryStrategy, IRequestSpan& requestSpan);
    [NullableContextAttribute("1")]
public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.KeyValue.LookupInResult : object {
    private IList`1<LookupInSpec> _specs;
    private Flags _flags;
    private ITypeTranscoder _transcoder;
    [NullableAttribute("2")]
private IDisposable _bufferCleanup;
    [CompilerGeneratedAttribute]
private ITypeSerializer <Serializer>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Cas>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Expiry>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDeleted>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsReplica>k__BackingField;
    public ITypeSerializer Serializer { get; }
    public ulong Cas { get; }
    public Nullable`1<TimeSpan> Expiry { get; }
    public bool IsDeleted { get; }
    public Nullable`1<bool> IsReplica { get; }
    internal LookupInResult(MultiLookup`1<Byte[]> lookup, bool isDeleted, Nullable`1<bool> isReplica, Nullable`1<TimeSpan> expiry);
    [CompilerGeneratedAttribute]
public sealed virtual ITypeSerializer get_Serializer();
    [CompilerGeneratedAttribute]
public sealed virtual ulong get_Cas();
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_Expiry();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsDeleted();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IsReplica();
    [NullableContextAttribute("2")]
public sealed virtual T ContentAs(int index);
    public sealed virtual bool Exists(int index);
    public sealed virtual int IndexOf(string path);
    private CouchbaseException GetSubdocError(LookupInSpec spec, int index);
    private T CreateSubDocException(LookupInSpec spec, int index);
    public sealed virtual void Dispose();
    private void EnsureNotDisposed();
}
internal class Couchbase.KeyValue.LookupInResult`1 : object {
    [NullableAttribute("1")]
private ILookupInResult _inner;
    public ulong Cas { get; }
    public bool IsDeleted { get; }
    [NullableAttribute("1")]
public ITypeSerializer Serializer { get; }
    [NullableContextAttribute("1")]
public LookupInResult`1(ILookupInResult inner);
    public sealed virtual ulong get_Cas();
    public sealed virtual bool Exists(int index);
    public sealed virtual bool get_IsDeleted();
    [NullableContextAttribute("2")]
public sealed virtual T ContentAs(int index);
    [NullableContextAttribute("1")]
public sealed virtual int IndexOf(string path);
    [NullableContextAttribute("1")]
public sealed virtual ITypeSerializer get_Serializer();
    public sealed virtual void Dispose();
}
[ExtensionAttribute]
public static class Couchbase.KeyValue.LookupInResultExtensions : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static TContent ContentAs(ILookupInResult`1<TDocument> result, Expression`1<Func`2<TDocument, TContent>> path);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool Exists(ILookupInResult`1<TDocument> result, Expression`1<Func`2<TDocument, TContent>> path);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.LookupInSpec : OperationSpec {
    private static LookupInSpec CreateSpec(OpCode opCode, string path, bool isXattr);
    public static LookupInSpec Get(string path, bool isXattr);
    public static LookupInSpec Exists(string path, bool isXattr);
    public static LookupInSpec Count(string path, bool isXattr);
    public static LookupInSpec GetFull();
    internal OperationSpec Clone();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.LookupInSpecBuilder : object {
    internal List`1<LookupInSpec> Specs;
    public LookupInSpecBuilder Get(string path, bool isXattr);
    public LookupInSpecBuilder Exists(string path, bool isXattr);
    public LookupInSpecBuilder Count(string path, bool isXattr);
    public LookupInSpecBuilder GetFull();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.LookupInSpecBuilder`1 : LookupInSpecBuilder {
    [CompilerGeneratedAttribute]
private ITypeSerializer <Serializer>k__BackingField;
    public ITypeSerializer Serializer { get; }
    public LookupInSpecBuilder`1(ITypeSerializer serializer);
    [CompilerGeneratedAttribute]
public sealed virtual ITypeSerializer get_Serializer();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Couchbase.KeyValue.LookupInSpecBuilderExtensions : object {
    [ExtensionAttribute]
public static LookupInSpecBuilder`1<TDocument> Get(LookupInSpecBuilder`1<TDocument> builder, Expression`1<Func`2<TDocument, TContent>> path);
    [ExtensionAttribute]
public static LookupInSpecBuilder`1<TDocument> Exists(LookupInSpecBuilder`1<TDocument> builder, Expression`1<Func`2<TDocument, TContent>> path);
    [ExtensionAttribute]
public static LookupInSpecBuilder`1<TDocument> Count(LookupInSpecBuilder`1<TDocument> builder, Expression`1<Func`2<TDocument, TContent>> path);
}
public class Couchbase.KeyValue.MutateInArrayAddUniqueOptions : MutateInOperationOptions {
}
public class Couchbase.KeyValue.MutateInArrayAppendOptions : MutateInOperationOptions {
}
public class Couchbase.KeyValue.MutateInArrayInsertOptions : MutateInOperationOptions {
}
public class Couchbase.KeyValue.MutateInArrayPrependOptions : MutateInOperationOptions {
}
public class Couchbase.KeyValue.MutateInDecrementOptions : MutateInOperationOptions {
}
public class Couchbase.KeyValue.MutateInIncrementOptions : MutateInOperationOptions {
}
public class Couchbase.KeyValue.MutateInInsertOptions : MutateInOperationOptions {
}
public abstract class Couchbase.KeyValue.MutateInOperationOptions : MutateInXattrOperation {
    [CompilerGeneratedAttribute]
private bool <CreatePathValue>k__BackingField;
    internal bool CreatePathValue { get; private set; }
    [CompilerGeneratedAttribute]
internal bool get_CreatePathValue();
    [CompilerGeneratedAttribute]
private void set_CreatePathValue(bool value);
    [NullableContextAttribute("1")]
public MutateInOperationOptions CreatePath();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.MutateInOptions : object {
    [CompilerGeneratedAttribute]
private static MutateInOptions <Default>k__BackingField;
    public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private TimeSpan <ExpiryValue>k__BackingField;
    [CompilerGeneratedAttribute]
private StoreSemantics <StoreSemanticsValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <CasValue>k__BackingField;
    [NullableAttribute("0")]
[CompilerGeneratedAttribute]
private ValueTuple`2<PersistTo, ReplicateTo> <DurabilityValue>k__BackingField;
    [CompilerGeneratedAttribute]
private DurabilityLevel <DurabilityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CreateAsDeletedValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AccessDeletedValue>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PreserveTtlValue>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ITypeTranscoder <TranscoderValue>k__BackingField;
    internal static MutateInOptions Default { get; }
    internal TimeSpan ExpiryValue { get; private set; }
    internal StoreSemantics StoreSemanticsValue { get; private set; }
    internal ulong CasValue { get; private set; }
    [NullableAttribute("0")]
internal ValueTuple`2<PersistTo, ReplicateTo> DurabilityValue { get; private set; }
    internal DurabilityLevel DurabilityLevel { get; private set; }
    internal Nullable`1<TimeSpan> TimeoutValue { get; private set; }
    private Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.Timeout { get; }
    internal CancellationToken TokenValue { get; private set; }
    private CancellationToken Couchbase.KeyValue.ITimeoutOptions.Token { get; }
    internal bool CreateAsDeletedValue { get; private set; }
    internal bool AccessDeletedValue { get; private set; }
    [NullableAttribute("2")]
internal IRetryStrategy RetryStrategyValue { get; private set; }
    [NullableAttribute("2")]
private IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.RetryStrategy { get; }
    [NullableAttribute("2")]
internal IRequestSpan RequestSpanValue { get; private set; }
    internal bool PreserveTtlValue { get; private set; }
    [NullableAttribute("2")]
internal ITypeTranscoder TranscoderValue { get; private set; }
    [NullableAttribute("2")]
private ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.Transcoder { get; }
    private static MutateInOptions();
    [CompilerGeneratedAttribute]
internal static MutateInOptions get_Default();
    [CompilerGeneratedAttribute]
internal TimeSpan get_ExpiryValue();
    [CompilerGeneratedAttribute]
private void set_ExpiryValue(TimeSpan value);
    [CompilerGeneratedAttribute]
internal StoreSemantics get_StoreSemanticsValue();
    [CompilerGeneratedAttribute]
private void set_StoreSemanticsValue(StoreSemantics value);
    [CompilerGeneratedAttribute]
internal ulong get_CasValue();
    [CompilerGeneratedAttribute]
private void set_CasValue(ulong value);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal ValueTuple`2<PersistTo, ReplicateTo> get_DurabilityValue();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void set_DurabilityValue(ValueTuple`2<PersistTo, ReplicateTo> value);
    [CompilerGeneratedAttribute]
internal DurabilityLevel get_DurabilityLevel();
    [CompilerGeneratedAttribute]
private void set_DurabilityLevel(DurabilityLevel value);
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_TimeoutValue();
    [CompilerGeneratedAttribute]
private void set_TimeoutValue(Nullable`1<TimeSpan> value);
    private sealed virtual override Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.get_Timeout();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    private sealed virtual override CancellationToken Couchbase.KeyValue.ITimeoutOptions.get_Token();
    [CompilerGeneratedAttribute]
internal bool get_CreateAsDeletedValue();
    [CompilerGeneratedAttribute]
private void set_CreateAsDeletedValue(bool value);
    [CompilerGeneratedAttribute]
internal bool get_AccessDeletedValue();
    [CompilerGeneratedAttribute]
private void set_AccessDeletedValue(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_RetryStrategyValue(IRetryStrategy value);
    [NullableContextAttribute("2")]
private sealed virtual override IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.get_RetryStrategy();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    [CompilerGeneratedAttribute]
internal bool get_PreserveTtlValue();
    [CompilerGeneratedAttribute]
private void set_PreserveTtlValue(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal ITypeTranscoder get_TranscoderValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_TranscoderValue(ITypeTranscoder value);
    [NullableContextAttribute("2")]
private sealed virtual override ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.get_Transcoder();
    public MutateInOptions PreserveTtl(bool preserveTtl);
    public MutateInOptions RequestSpan(IRequestSpan span);
    public MutateInOptions RetryStrategy(IRetryStrategy retryStrategy);
    public MutateInOptions StoreSemantics(StoreSemantics storeSemantics);
    [ObsoleteAttribute("Use Transcoder instead.")]
public MutateInOptions Serializer(ITypeSerializer serializer);
    public MutateInOptions Transcoder(ITypeTranscoder transcoder);
    public MutateInOptions Expiry(TimeSpan expiry);
    public MutateInOptions Cas(ulong cas);
    public MutateInOptions Durability(PersistTo persistTo, ReplicateTo replicateTo);
    public MutateInOptions Durability(DurabilityLevel durabilityLevel);
    public MutateInOptions Timeout(TimeSpan timeout);
    public MutateInOptions CancellationToken(CancellationToken token);
    public MutateInOptions CreateAsDeleted(bool createAsDeleted);
    public MutateInOptions AccessDeleted(bool accessDeleted);
    [NullableContextAttribute("2")]
public void Deconstruct(TimeSpan& expiry, StoreSemantics& storeSemantics, UInt64& cas, ValueTuple`2& durability, DurabilityLevel& durabilityLevel, Nullable`1& timeout, CancellationToken& token, ITypeSerializer& serializer, Boolean& createAsDeleted, Boolean& accessDeleted, IRetryStrategy& retryStrategy, IRequestSpan& requestSpan, Boolean& preserveTtl, ITypeTranscoder& transcoder);
    public ReadOnly AsReadOnly();
}
public class Couchbase.KeyValue.MutateInRemoveOptions : MutateInXattrOperation {
}
public class Couchbase.KeyValue.MutateInReplaceOptions : MutateInXattrOperation {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class will be made internal in a future release.")]
public class Couchbase.KeyValue.MutateInResult : object {
    private IList`1<MutateInSpec> _specs;
    [NullableAttribute("2")]
private IDisposable _bufferCleanup;
    [CompilerGeneratedAttribute]
private ITypeSerializer <Serializer>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Cas>k__BackingField;
    [CompilerGeneratedAttribute]
private MutationToken <MutationToken>k__BackingField;
    public ITypeSerializer Serializer { get; }
    public ulong Cas { get; }
    public MutationToken MutationToken { get; public set; }
    public MutateInResult(IList`1<OperationSpec> specs, ulong cas, MutationToken token, ITypeSerializer serializer);
    public MutateInResult(IList`1<MutateInSpec> specs, ulong cas, MutationToken token, ITypeSerializer serializer);
    internal MutateInResult(MultiMutation`1<Byte[]> mutation);
    [CompilerGeneratedAttribute]
public sealed virtual ITypeSerializer get_Serializer();
    [CompilerGeneratedAttribute]
public sealed virtual ulong get_Cas();
    [CompilerGeneratedAttribute]
public sealed virtual MutationToken get_MutationToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MutationToken(MutationToken value);
    [NullableContextAttribute("2")]
public sealed virtual T ContentAs(int index);
    [InterfaceStabilityAttribute("2")]
public sealed virtual int IndexOf(string path);
    public sealed virtual void Dispose();
    private void EnsureNotDisposed();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.KeyValue.MutateInResult`1 : object {
    private IMutateInResult _inner;
    public ulong Cas { get; }
    public MutationToken MutationToken { get; public set; }
    public ITypeSerializer Serializer { get; }
    public MutateInResult`1(IMutateInResult inner);
    public sealed virtual ulong get_Cas();
    public sealed virtual MutationToken get_MutationToken();
    public sealed virtual void set_MutationToken(MutationToken value);
    public sealed virtual ITypeSerializer get_Serializer();
    [NullableContextAttribute("2")]
public sealed virtual T ContentAs(int index);
    public sealed virtual int IndexOf(string path);
    public sealed virtual void Dispose();
}
[ExtensionAttribute]
public static class Couchbase.KeyValue.MutateInResultExtensions : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static TContent ContentAs(IMutateInResult`1<TDocument> result, Expression`1<Func`2<TDocument, TContent>> path);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.MutateInSpec : OperationSpec {
    internal MutateInSpec(OpCode opCode, string path);
    private static MutateInSpec CreateSpec(OpCode opCode, string path, bool createPath, bool isXattr, bool removeBrackets);
    private static MutateInSpec CreateSpec(OpCode opCode, string path, T value, bool createPath, bool isXattr, bool removeBrackets);
    public static MutateInSpec Insert(string path, T value, bool createPath, bool isXattr, bool removeBrackets);
    public static MutateInSpec Upsert(string path, T value, bool createPath, bool isXattr, bool removeBrackets);
    public static MutateInSpec Replace(string path, T value, bool isXattr, bool removeBrackets);
    public static MutateInSpec SetDoc(T value);
    public static MutateInSpec Remove(string path, bool isXattr, bool removeBrackets);
    public static MutateInSpec ArrayAppend(string path, T[] values, bool createPath, bool isXattr, bool removeBrackets);
    public static MutateInSpec ArrayAppend(string path, T value, bool createPath, bool isXattr, bool removeBrackets);
    public static MutateInSpec ArrayPrepend(string path, T value, bool createPath, bool isXattr, bool removeBrackets);
    public static MutateInSpec ArrayPrepend(string path, T[] values, bool createPath, bool isXattr, bool removeBrackets);
    public static MutateInSpec ArrayInsert(string path, T value, bool createPath, bool isXattr, bool removeBrackets);
    public static MutateInSpec ArrayInsert(string path, T[] values, bool createPath, bool isXattr, bool removeBrackets);
    public static MutateInSpec ArrayAddUnique(string path, T value, bool createPath, bool isXattr, bool removeBrackets);
    [ObsoleteAttribute("Use the Increment overload which accepts an unsigned long.")]
public static MutateInSpec Increment(string path, long delta, bool createPath, bool isXattr, bool removeBrackets);
    public static MutateInSpec Increment(string path, ulong delta, bool createPath, bool isXattr, bool removeBrackets);
    [ObsoleteAttribute("Use the Decrement overload which accepts an unsigned long. Negative signed long deltas may produce unexpected results.")]
public static MutateInSpec Decrement(string path, long delta, bool createPath, bool isXattr, bool removeBrackets);
    public static MutateInSpec Decrement(string path, ulong delta, bool createPath, bool isXattr, bool removeBrackets);
    internal virtual void WriteSpecValue(OperationBuilder builder, ITypeTranscoder transcoder);
    internal virtual OperationSpec Clone();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.KeyValue.MutateInSpec`1 : MutateInSpec {
    public MutateInSpec`1(OpCode opCode, string path, T value);
    [NullableContextAttribute("2")]
private bool TryGetTypedValue(T& value);
    internal virtual void WriteSpecValue(OperationBuilder builder, ITypeTranscoder transcoder);
    internal virtual OperationSpec Clone();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.MutateInSpecBuilder : object {
    internal List`1<MutateInSpec> Specs;
    public MutateInSpecBuilder Insert(string path, T value, bool createPath, bool isXattr);
    public MutateInSpecBuilder Upsert(string path, T value, bool createPath, bool isXattr);
    public MutateInSpecBuilder Replace(string path, T value, bool isXattr);
    public MutateInSpecBuilder SetDoc(T value);
    public MutateInSpecBuilder Remove(string path, bool isXattr);
    public MutateInSpecBuilder ArrayAppend(string path, T[] values, bool createPath, bool isXattr);
    public MutateInSpecBuilder ArrayAppend(string path, T value, bool createPath, bool isXattr);
    public MutateInSpecBuilder ArrayPrepend(string path, T[] values, bool createParents, bool isXattr);
    public MutateInSpecBuilder ArrayPrepend(string path, T value, bool createParents, bool isXattr);
    public MutateInSpecBuilder ArrayInsert(string path, T[] values, bool createParents, bool isXattr);
    public MutateInSpecBuilder ArrayInsert(string path, T value, bool createParents, bool isXattr);
    public MutateInSpecBuilder ArrayAddUnique(string path, T value, bool createPath, bool isXattr);
    [ObsoleteAttribute("Use the Increment overload which accepts an unsigned long.")]
public MutateInSpecBuilder Increment(string path, long delta, bool createPath, bool isXattr);
    public MutateInSpecBuilder Increment(string path, ulong delta, bool createPath, bool isXattr);
    [ObsoleteAttribute("Use the Decrement overload which accepts an unsigned long. Negative signed long deltas may produce unexpected results.")]
public MutateInSpecBuilder Decrement(string path, long delta, bool createPath, bool isXattr);
    public MutateInSpecBuilder Decrement(string path, ulong delta, bool createPath, bool isXattr);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.MutateInSpecBuilder`1 : MutateInSpecBuilder {
    [CompilerGeneratedAttribute]
private ITypeSerializer <Serializer>k__BackingField;
    public ITypeSerializer Serializer { get; }
    public MutateInSpecBuilder`1(ITypeSerializer serializer);
    [CompilerGeneratedAttribute]
public sealed virtual ITypeSerializer get_Serializer();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Couchbase.KeyValue.MutateInSpecBuilderExtensions : object {
    [ExtensionAttribute]
public static MutateInSpecBuilder`1<TDocument> Insert(MutateInSpecBuilder`1<TDocument> builder, Expression`1<Func`2<TDocument, TContent>> path, TContent value, bool createPath);
    [ExtensionAttribute]
public static MutateInSpecBuilder`1<TDocument> Upsert(MutateInSpecBuilder`1<TDocument> builder, Expression`1<Func`2<TDocument, TContent>> path, TContent value, bool createPath);
    [ExtensionAttribute]
public static MutateInSpecBuilder`1<TDocument> Replace(MutateInSpecBuilder`1<TDocument> builder, Expression`1<Func`2<TDocument, TContent>> path, TContent value);
    [ExtensionAttribute]
public static MutateInSpecBuilder`1<TDocument> Remove(MutateInSpecBuilder`1<TDocument> builder, Expression`1<Func`2<TDocument, TContent>> path);
    [ExtensionAttribute]
public static MutateInSpecBuilder`1<TDocument> ArrayAppend(MutateInSpecBuilder`1<TDocument> builder, Expression`1<Func`2<TDocument, TContent>> path, TElement value, bool createPath);
    [ExtensionAttribute]
public static MutateInSpecBuilder`1<TDocument> ArrayPrepend(MutateInSpecBuilder`1<TDocument> builder, Expression`1<Func`2<TDocument, TContent>> path, TElement value, bool createPath);
    [ExtensionAttribute]
public static MutateInSpecBuilder`1<TDocument> ArrayInsert(MutateInSpecBuilder`1<TDocument> builder, Expression`1<Func`2<TDocument, TElement>> path, TElement value);
    [ExtensionAttribute]
public static MutateInSpecBuilder`1<TDocument> ArrayAddUnique(MutateInSpecBuilder`1<TDocument> builder, Expression`1<Func`2<TDocument, TContent>> path, TElement value, bool createPath);
    [ExtensionAttribute]
[ObsoleteAttribute("Use the Increment overload which accepts an unsigned long.")]
public static MutateInSpecBuilder`1<TDocument> Increment(MutateInSpecBuilder`1<TDocument> builder, Expression`1<Func`2<TDocument, TContent>> path, long delta, bool createPath);
    [ExtensionAttribute]
public static MutateInSpecBuilder`1<TDocument> Increment(MutateInSpecBuilder`1<TDocument> builder, Expression`1<Func`2<TDocument, TContent>> path, ulong delta, bool createPath);
    [ExtensionAttribute]
[ObsoleteAttribute("Use the Decrement overload which accepts an unsigned long. Negative signed long deltas may produce unexpected results.")]
public static MutateInSpecBuilder`1<TDocument> Decrement(MutateInSpecBuilder`1<TDocument> builder, Expression`1<Func`2<TDocument, TContent>> path, long delta, bool createPath);
    [ExtensionAttribute]
public static MutateInSpecBuilder`1<TDocument> Decrement(MutateInSpecBuilder`1<TDocument> builder, Expression`1<Func`2<TDocument, TContent>> path, ulong delta, bool createPath);
}
public class Couchbase.KeyValue.MutateInUpsertOptions : MutateInOperationOptions {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class Couchbase.KeyValue.MutateInXattrOperation : object {
    [CompilerGeneratedAttribute]
private bool <XAttrValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    internal bool XAttrValue { get; private set; }
    internal IRetryStrategy RetryStrategyValue { get; private set; }
    private IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.RetryStrategy { get; }
    internal IRequestSpan RequestSpanValue { get; private set; }
    [CompilerGeneratedAttribute]
internal bool get_XAttrValue();
    [CompilerGeneratedAttribute]
private void set_XAttrValue(bool value);
    [CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [CompilerGeneratedAttribute]
private void set_RetryStrategyValue(IRetryStrategy value);
    private sealed virtual override IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.get_RetryStrategy();
    [CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    [NullableContextAttribute("1")]
public MutateInXattrOperation RequestSpan(IRequestSpan span);
    [NullableContextAttribute("1")]
public MutateInXattrOperation RetryStrategy(IRetryStrategy retryStrategy);
    [NullableContextAttribute("1")]
public MutateInXattrOperation XAttr();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Couchbase.KeyValue.MutationMacro : object {
    public static IMutationMacro Cas { get; }
    public static IMutationMacro SeqNo { get; }
    public static IMutationMacro ValueCRC32c { get; }
    public static IMutationMacro get_Cas();
    public static IMutationMacro get_SeqNo();
    public static IMutationMacro get_ValueCRC32c();
}
internal class Couchbase.KeyValue.MutationMacroCas : object {
    [NullableContextAttribute("1")]
public virtual string ToString();
}
internal class Couchbase.KeyValue.MutationMacroSeqNo : object {
    [NullableContextAttribute("1")]
public virtual string ToString();
}
internal class Couchbase.KeyValue.MutationMacroValueCrc32C : object {
    [NullableContextAttribute("1")]
public virtual string ToString();
}
internal class Couchbase.KeyValue.MutationResult : object {
    private ResponseStatus _status;
    [CompilerGeneratedAttribute]
private ulong <Cas>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Expiry>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private MutationToken <MutationToken>k__BackingField;
    public ulong Cas { get; }
    public Nullable`1<TimeSpan> Expiry { get; }
    [NullableAttribute("1")]
public MutationToken MutationToken { get; public set; }
    private ResponseStatus Couchbase.KeyValue.IResponseStatus.Status { get; }
    [NullableContextAttribute("2")]
internal MutationResult(ulong cas, Nullable`1<TimeSpan> expiry, MutationToken token, ResponseStatus status);
    [NullableContextAttribute("2")]
internal MutationResult(ulong cas, Nullable`1<TimeSpan> expiry, MutationToken token);
    [CompilerGeneratedAttribute]
public sealed virtual ulong get_Cas();
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_Expiry();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual MutationToken get_MutationToken();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual void set_MutationToken(MutationToken value);
    private sealed virtual override ResponseStatus Couchbase.KeyValue.IResponseStatus.get_Status();
}
public class Couchbase.KeyValue.NotMyVBucketException : CouchbaseException {
    public NotMyVBucketException(string message);
    public NotMyVBucketException(string message, Exception innerException);
}
public enum Couchbase.KeyValue.PersistTo : Enum {
    public int value__;
    public static PersistTo None;
    public static PersistTo One;
    public static PersistTo Two;
    public static PersistTo Three;
    public static PersistTo Four;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.PrependOptions : object {
    [CompilerGeneratedAttribute]
private static PrependOptions <Default>k__BackingField;
    public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private ulong <CasValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ReplicateTo <ReplicateTo>k__BackingField;
    [CompilerGeneratedAttribute]
private PersistTo <PersistTo>k__BackingField;
    [CompilerGeneratedAttribute]
private DurabilityLevel <DurabilityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    internal static PrependOptions Default { get; }
    internal ulong CasValue { get; private set; }
    internal ReplicateTo ReplicateTo { get; private set; }
    internal PersistTo PersistTo { get; private set; }
    internal DurabilityLevel DurabilityLevel { get; private set; }
    internal Nullable`1<TimeSpan> TimeoutValue { get; private set; }
    private Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.Timeout { get; }
    internal CancellationToken TokenValue { get; private set; }
    private CancellationToken Couchbase.KeyValue.ITimeoutOptions.Token { get; }
    [NullableAttribute("2")]
internal IRetryStrategy RetryStrategyValue { get; private set; }
    [NullableAttribute("2")]
private IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.RetryStrategy { get; }
    [NullableAttribute("2")]
internal IRequestSpan RequestSpanValue { get; private set; }
    private static PrependOptions();
    [CompilerGeneratedAttribute]
internal static PrependOptions get_Default();
    [CompilerGeneratedAttribute]
internal ulong get_CasValue();
    [CompilerGeneratedAttribute]
private void set_CasValue(ulong value);
    [CompilerGeneratedAttribute]
internal ReplicateTo get_ReplicateTo();
    [CompilerGeneratedAttribute]
private void set_ReplicateTo(ReplicateTo value);
    [CompilerGeneratedAttribute]
internal PersistTo get_PersistTo();
    [CompilerGeneratedAttribute]
private void set_PersistTo(PersistTo value);
    [CompilerGeneratedAttribute]
internal DurabilityLevel get_DurabilityLevel();
    [CompilerGeneratedAttribute]
private void set_DurabilityLevel(DurabilityLevel value);
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_TimeoutValue();
    [CompilerGeneratedAttribute]
private void set_TimeoutValue(Nullable`1<TimeSpan> value);
    private sealed virtual override Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.get_Timeout();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    private sealed virtual override CancellationToken Couchbase.KeyValue.ITimeoutOptions.get_Token();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_RetryStrategyValue(IRetryStrategy value);
    [NullableContextAttribute("2")]
private sealed virtual override IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.get_RetryStrategy();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    public PrependOptions RequestSpan(IRequestSpan span);
    public PrependOptions RetryStrategy(IRetryStrategy retryStrategy);
    public PrependOptions Cas(ulong cas);
    public PrependOptions Durability(PersistTo persistTo, ReplicateTo replicateTo);
    public PrependOptions Durability(DurabilityLevel durabilityLevel);
    public PrependOptions Timeout(TimeSpan timeout);
    public PrependOptions CancellationToken(CancellationToken token);
    [NullableContextAttribute("2")]
public void Deconstruct(UInt64& cas, ReplicateTo& replicateTo, PersistTo& persistTo, DurabilityLevel& durabilityLevel, Nullable`1& timeout, CancellationToken& token, IRetryStrategy& retryStrategy, IRequestSpan& requestSpan);
    public ReadOnly AsReadOnly();
}
public interface Couchbase.KeyValue.RangeScan.IScanResult {
    public bool IdOnly { get; }
    public string Id { get; }
    public Nullable`1<DateTime> ExpiryTime { get; }
    public ulong Cas { get; }
    public abstract virtual bool get_IdOnly();
    public abstract virtual string get_Id();
    public abstract virtual T ContentAs();
    public abstract virtual Byte[] ContentAsBytes();
    public abstract virtual string ContentAsString();
    public abstract virtual Nullable`1<DateTime> get_ExpiryTime();
    public abstract virtual ulong get_Cas();
}
[NullableContextAttribute("1")]
public interface Couchbase.KeyValue.RangeScan.IScanType {
    public abstract virtual RangeScan RangeScan(ScanTerm from, ScanTerm to);
    public abstract virtual PrefixScan PrefixScan(string prefix);
    [NullableContextAttribute("2")]
public abstract virtual SamplingScan SamplingScan(ulong limit);
    [NullableContextAttribute("2")]
public abstract virtual SamplingScan SamplingScan(ulong limit, ulong seed);
}
[NullableContextAttribute("2")]
internal interface Couchbase.KeyValue.RangeScan.IScanTypeExt {
    public string CollectionName { get; public set; }
    public bool IsSampling { get; }
    public abstract virtual string get_CollectionName();
    public abstract virtual void set_CollectionName(string value);
    [NullableContextAttribute("1")]
public abstract virtual Byte[] Serialize(bool keyOnly, TimeSpan timeout, MutationToken token);
    public abstract virtual bool get_IsSampling();
}
internal class Couchbase.KeyValue.RangeScan.PartitionScan : object {
    private IOperationConfigurator _operationConfigurator;
    private BucketBase _bucket;
    private ICouchbaseCollection _collection;
    private ILogger`1<GetResult> _getLogger;
    private ScanOptions _options;
    private IScanType _scanType;
    private short _partitionId;
    private Nullable`1<SlicedMemoryOwner`1<byte>> _uuid;
    [CompilerGeneratedAttribute]
private MutationToken <MutationToken>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IScanResult> <Results>k__BackingField;
    [CompilerGeneratedAttribute]
private ResponseStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanBeCanceled>k__BackingField;
    public MutationToken MutationToken { get; public set; }
    public IDictionary`2<string, IScanResult> Results { get; private set; }
    public ResponseStatus Status { get; public set; }
    public bool CanBeCanceled { get; private set; }
    public PartitionScan(IOperationConfigurator operationConfigurator, BucketBase bucket, ICouchbaseCollection collection, ILogger`1<GetResult> getLogger, ScanOptions options, IScanType scanType, short partitionId);
    [CompilerGeneratedAttribute]
public MutationToken get_MutationToken();
    [CompilerGeneratedAttribute]
public void set_MutationToken(MutationToken value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, IScanResult> get_Results();
    [CompilerGeneratedAttribute]
private void set_Results(IDictionary`2<string, IScanResult> value);
    [CompilerGeneratedAttribute]
public ResponseStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(ResponseStatus value);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.RangeScan.PartitionScan/<ScanAsync>d__21")]
public Task`1<PartitionScan> ScanAsync();
    [CompilerGeneratedAttribute]
public bool get_CanBeCanceled();
    [CompilerGeneratedAttribute]
private void set_CanBeCanceled(bool value);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.RangeScan.PartitionScan/<CancelAsync>d__26")]
public Task CancelAsync();
    private CancellationTokenPairSource CreateRetryTimeoutCancellationTokenSource(ITimeoutOptions options, IOperation op);
    private TimeSpan GetTimeout(Nullable`1<TimeSpan> optionsTimeout, IOperation op);
}
[InterfaceStabilityAttribute("2")]
public class Couchbase.KeyValue.RangeScan.PrefixScan : RangeScan {
    public PrefixScan(string prefix);
}
[InterfaceStabilityAttribute("2")]
public class Couchbase.KeyValue.RangeScan.RangeScan : ScanType {
    [CompilerGeneratedAttribute]
private ScanTerm <From>k__BackingField;
    [CompilerGeneratedAttribute]
private ScanTerm <To>k__BackingField;
    private string _collectionName;
    public ScanTerm From { get; public set; }
    public ScanTerm To { get; public set; }
    private string Couchbase.KeyValue.RangeScan.IScanTypeExt.CollectionName { get; private set; }
    private bool Couchbase.KeyValue.RangeScan.IScanTypeExt.IsSampling { get; }
    public RangeScan(ScanTerm from, ScanTerm to);
    public RangeScan(ScanTerm from, ScanTerm to, string collectionName);
    public RangeScan(ScanTerm from, string collectionName);
    [CompilerGeneratedAttribute]
public ScanTerm get_From();
    [CompilerGeneratedAttribute]
public void set_From(ScanTerm value);
    [CompilerGeneratedAttribute]
public ScanTerm get_To();
    [CompilerGeneratedAttribute]
public void set_To(ScanTerm value);
    private sealed virtual override string Couchbase.KeyValue.RangeScan.IScanTypeExt.get_CollectionName();
    private sealed virtual override void Couchbase.KeyValue.RangeScan.IScanTypeExt.set_CollectionName(string value);
    private sealed virtual override bool Couchbase.KeyValue.RangeScan.IScanTypeExt.get_IsSampling();
    private sealed virtual override Byte[] Couchbase.KeyValue.RangeScan.IScanTypeExt.Serialize(bool keyOnly, TimeSpan timeout, MutationToken token);
}
[InterfaceStabilityAttribute("2")]
public class Couchbase.KeyValue.RangeScan.SamplingScan : ScanType {
    [CompilerGeneratedAttribute]
private ulong <Limit>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Seed>k__BackingField;
    private string _collectionName;
    public ulong Limit { get; public set; }
    public ulong Seed { get; public set; }
    private string Couchbase.KeyValue.RangeScan.IScanTypeExt.CollectionName { get; private set; }
    private bool Couchbase.KeyValue.RangeScan.IScanTypeExt.IsSampling { get; }
    public SamplingScan(ulong limit);
    public SamplingScan(ulong limit, ulong seed);
    public SamplingScan(ulong limit, ulong seed, string collectionName);
    [CompilerGeneratedAttribute]
public ulong get_Limit();
    [CompilerGeneratedAttribute]
public void set_Limit(ulong value);
    [CompilerGeneratedAttribute]
public ulong get_Seed();
    [CompilerGeneratedAttribute]
public void set_Seed(ulong value);
    private sealed virtual override string Couchbase.KeyValue.RangeScan.IScanTypeExt.get_CollectionName();
    private sealed virtual override void Couchbase.KeyValue.RangeScan.IScanTypeExt.set_CollectionName(string value);
    private sealed virtual override bool Couchbase.KeyValue.RangeScan.IScanTypeExt.get_IsSampling();
    private sealed virtual override Byte[] Couchbase.KeyValue.RangeScan.IScanTypeExt.Serialize(bool keyOnly, TimeSpan timeout, MutationToken token);
    private static ulong GenerateRandomLong();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("2")]
public class Couchbase.KeyValue.RangeScan.ScanOptions : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private static ScanOptions <Default>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeTranscoder <TranscoderValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestSpan <ParentSpanValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IdsOnlyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private MutationState <ConsistentWithValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <BatchItemLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <BatchByteLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <BatchTimeLimit>k__BackingField;
    [NullableAttribute("1")]
internal static ScanOptions Default { get; }
    internal TimeSpan TimeoutValue { get; internal set; }
    internal ITypeTranscoder TranscoderValue { get; internal set; }
    internal IRetryStrategy RetryStrategyValue { get; internal set; }
    internal IRequestSpan ParentSpanValue { get; internal set; }
    internal bool IdsOnlyValue { get; internal set; }
    internal MutationState ConsistentWithValue { get; internal set; }
    internal CancellationToken TokenValue { get; private set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal Dictionary`2<short, MutationToken> ConsistencyTokens { get; }
    internal UInt32 BatchItemLimit { get; internal set; }
    internal UInt32 BatchByteLimit { get; internal set; }
    internal UInt32 BatchTimeLimit { get; internal set; }
    private ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.Transcoder { get; }
    private IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.RetryStrategy { get; }
    private Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.Timeout { get; }
    private CancellationToken Couchbase.KeyValue.ITimeoutOptions.Token { get; }
    private static ScanOptions();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static ScanOptions get_Default();
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    [CompilerGeneratedAttribute]
internal ITypeTranscoder get_TranscoderValue();
    [CompilerGeneratedAttribute]
internal void set_TranscoderValue(ITypeTranscoder value);
    [CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [CompilerGeneratedAttribute]
internal void set_RetryStrategyValue(IRetryStrategy value);
    [CompilerGeneratedAttribute]
internal IRequestSpan get_ParentSpanValue();
    [CompilerGeneratedAttribute]
internal void set_ParentSpanValue(IRequestSpan value);
    [CompilerGeneratedAttribute]
internal bool get_IdsOnlyValue();
    [CompilerGeneratedAttribute]
internal void set_IdsOnlyValue(bool value);
    [CompilerGeneratedAttribute]
internal MutationState get_ConsistentWithValue();
    [CompilerGeneratedAttribute]
internal void set_ConsistentWithValue(MutationState value);
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    internal Dictionary`2<short, MutationToken> get_ConsistencyTokens();
    [CompilerGeneratedAttribute]
internal UInt32 get_BatchItemLimit();
    [CompilerGeneratedAttribute]
internal void set_BatchItemLimit(UInt32 value);
    [CompilerGeneratedAttribute]
internal UInt32 get_BatchByteLimit();
    [CompilerGeneratedAttribute]
internal void set_BatchByteLimit(UInt32 value);
    [CompilerGeneratedAttribute]
internal UInt32 get_BatchTimeLimit();
    [CompilerGeneratedAttribute]
internal void set_BatchTimeLimit(UInt32 value);
    private sealed virtual override ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.get_Transcoder();
    private sealed virtual override IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.get_RetryStrategy();
    private sealed virtual override Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.get_Timeout();
    private sealed virtual override CancellationToken Couchbase.KeyValue.ITimeoutOptions.get_Token();
    [NullableContextAttribute("1")]
public ScanOptions Timeout(TimeSpan timeSpan);
    [NullableContextAttribute("1")]
public ScanOptions Transcoder(ITypeTranscoder transcoder);
    [NullableContextAttribute("1")]
public ScanOptions RetryStrategy(IRetryStrategy retryStrategy);
    [NullableContextAttribute("1")]
public ScanOptions ParentSpan(IRequestSpan parentSpan);
    [NullableContextAttribute("1")]
public ScanOptions IdsOnly(bool withoutContent);
    [NullableContextAttribute("1")]
public ScanOptions ConsistentWith(MutationState mutationState);
    [NullableContextAttribute("1")]
public ScanOptions Token(CancellationToken token);
    [NullableContextAttribute("1")]
public ScanOptions ItemLimit(UInt32 limit);
    [NullableContextAttribute("1")]
public ScanOptions ByteLimit(UInt32 limit);
    [NullableContextAttribute("1")]
public ScanOptions TimeLimit(UInt32 limit);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.RangeScan.ScanResult : object {
    [NullableAttribute("0")]
private SlicedMemoryOwner`1<byte> _body;
    private string _id;
    private Nullable`1<DateTime> _expiryTime;
    private int _seqno;
    private ulong _cas;
    private bool _idOnly;
    private ITypeTranscoder _transcoder;
    private Nullable`1<Flags> _flags;
    private OpCode _opCode;
    public bool IdOnly { get; }
    public string Id { get; }
    [NullableAttribute("0")]
internal ReadOnlyMemory`1<byte> Body { get; }
    public Nullable`1<DateTime> ExpiryTime { get; }
    public ulong Cas { get; }
    internal ScanResult(SlicedMemoryOwner`1<byte> body, string id, bool idOnly, Nullable`1<DateTime> expiryTime, int seqno, ulong cas, OpCode opCode, ITypeTranscoder transcoder, Nullable`1<Flags> flags);
    private void RequireBody();
    public bool IsEmpty();
    public sealed virtual bool get_IdOnly();
    public sealed virtual string get_Id();
    [NullableContextAttribute("0")]
internal ReadOnlyMemory`1<byte> get_Body();
    public sealed virtual Nullable`1<DateTime> get_ExpiryTime();
    public sealed virtual ulong get_Cas();
    public sealed virtual Byte[] ContentAsBytes();
    public sealed virtual string ContentAsString();
    [NullableContextAttribute("2")]
public sealed virtual T ContentAs();
    public virtual string ToString();
}
[InterfaceStabilityAttribute("2")]
public class Couchbase.KeyValue.RangeScan.ScanTerm : object {
    internal static ScanTerm Minimum;
    internal static ScanTerm Maximum;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsExclusive>k__BackingField;
    internal Byte[] ByteId { get; }
    public string Id { get; private set; }
    public bool IsExclusive { get; private set; }
    private ScanTerm(string id, bool exclusive);
    private static ScanTerm();
    internal Byte[] get_ByteId();
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    [CompilerGeneratedAttribute]
public bool get_IsExclusive();
    [CompilerGeneratedAttribute]
private void set_IsExclusive(bool value);
    public static ScanTerm Exclusive(string id);
    public static ScanTerm Inclusive(string id);
}
[InterfaceStabilityAttribute("2")]
public abstract class Couchbase.KeyValue.RangeScan.ScanType : object {
    public sealed virtual RangeScan RangeScan(ScanTerm from, ScanTerm to);
    public sealed virtual PrefixScan PrefixScan(string prefix);
    public sealed virtual SamplingScan SamplingScan(ulong limit);
    public sealed virtual SamplingScan SamplingScan(ulong limit, ulong seed);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.RemoveOptions : object {
    [CompilerGeneratedAttribute]
private static RemoveOptions <Default>k__BackingField;
    public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private ulong <CasValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ReplicateTo <ReplicateTo>k__BackingField;
    [CompilerGeneratedAttribute]
private PersistTo <PersistTo>k__BackingField;
    [CompilerGeneratedAttribute]
private DurabilityLevel <DurabilityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PreferReturn>k__BackingField;
    [CompilerGeneratedAttribute]
private ResponseStatus <Status>k__BackingField;
    internal static RemoveOptions Default { get; }
    internal ulong CasValue { get; private set; }
    internal ReplicateTo ReplicateTo { get; private set; }
    internal PersistTo PersistTo { get; private set; }
    internal DurabilityLevel DurabilityLevel { get; private set; }
    internal Nullable`1<TimeSpan> TimeoutValue { get; private set; }
    private Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.Timeout { get; }
    internal CancellationToken TokenValue { get; private set; }
    private CancellationToken Couchbase.KeyValue.ITimeoutOptions.Token { get; }
    [NullableAttribute("2")]
internal IRetryStrategy RetryStrategyValue { get; private set; }
    [NullableAttribute("2")]
private IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.RetryStrategy { get; }
    [NullableAttribute("2")]
internal IRequestSpan RequestSpanValue { get; private set; }
    internal bool PreferReturn { get; internal set; }
    internal ResponseStatus Status { get; internal set; }
    private static RemoveOptions();
    [CompilerGeneratedAttribute]
internal static RemoveOptions get_Default();
    [CompilerGeneratedAttribute]
internal ulong get_CasValue();
    [CompilerGeneratedAttribute]
private void set_CasValue(ulong value);
    [CompilerGeneratedAttribute]
internal ReplicateTo get_ReplicateTo();
    [CompilerGeneratedAttribute]
private void set_ReplicateTo(ReplicateTo value);
    [CompilerGeneratedAttribute]
internal PersistTo get_PersistTo();
    [CompilerGeneratedAttribute]
private void set_PersistTo(PersistTo value);
    [CompilerGeneratedAttribute]
internal DurabilityLevel get_DurabilityLevel();
    [CompilerGeneratedAttribute]
private void set_DurabilityLevel(DurabilityLevel value);
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_TimeoutValue();
    [CompilerGeneratedAttribute]
private void set_TimeoutValue(Nullable`1<TimeSpan> value);
    private sealed virtual override Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.get_Timeout();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    private sealed virtual override CancellationToken Couchbase.KeyValue.ITimeoutOptions.get_Token();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_RetryStrategyValue(IRetryStrategy value);
    [NullableContextAttribute("2")]
private sealed virtual override IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.get_RetryStrategy();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    [CompilerGeneratedAttribute]
internal bool get_PreferReturn();
    [CompilerGeneratedAttribute]
internal void set_PreferReturn(bool value);
    [CompilerGeneratedAttribute]
internal ResponseStatus get_Status();
    [CompilerGeneratedAttribute]
internal void set_Status(ResponseStatus value);
    public RemoveOptions RequestSpan(IRequestSpan span);
    public RemoveOptions RetryStrategy(IRetryStrategy retryStrategy);
    public RemoveOptions Cas(ulong cas);
    public RemoveOptions Durability(PersistTo persistTo, ReplicateTo replicateTo);
    public RemoveOptions Durability(DurabilityLevel durabilityLevel);
    public RemoveOptions Timeout(TimeSpan timeout);
    public RemoveOptions CancellationToken(CancellationToken token);
    [NullableContextAttribute("2")]
public void Deconstruct(UInt64& cas, ReplicateTo& replicateTo, PersistTo& persistTo, DurabilityLevel& durabilityLevel, Nullable`1& timeout, CancellationToken& token, IRetryStrategy& retryStrategy, IRequestSpan& requestSpan);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.ReplaceOptions : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private static ReplaceOptions <Default>k__BackingField;
    [NullableAttribute("1")]
public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private TimeSpan <ExpiryValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <CasValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ReplicateTo <ReplicateTo>k__BackingField;
    [CompilerGeneratedAttribute]
private PersistTo <PersistTo>k__BackingField;
    [CompilerGeneratedAttribute]
private DurabilityLevel <DurabilityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeTranscoder <TranscoderValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PreserveTtlValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PreferReturn>k__BackingField;
    [NullableAttribute("1")]
internal static ReplaceOptions Default { get; }
    internal TimeSpan ExpiryValue { get; private set; }
    internal ulong CasValue { get; private set; }
    internal ReplicateTo ReplicateTo { get; private set; }
    internal PersistTo PersistTo { get; private set; }
    internal DurabilityLevel DurabilityLevel { get; private set; }
    internal Nullable`1<TimeSpan> TimeoutValue { get; private set; }
    private Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.Timeout { get; }
    internal CancellationToken TokenValue { get; private set; }
    private CancellationToken Couchbase.KeyValue.ITimeoutOptions.Token { get; }
    internal ITypeTranscoder TranscoderValue { get; private set; }
    private ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.Transcoder { get; }
    internal IRetryStrategy RetryStrategyValue { get; private set; }
    private IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.RetryStrategy { get; }
    internal IRequestSpan RequestSpanValue { get; private set; }
    internal bool PreserveTtlValue { get; private set; }
    internal bool PreferReturn { get; internal set; }
    private static ReplaceOptions();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static ReplaceOptions get_Default();
    [CompilerGeneratedAttribute]
internal TimeSpan get_ExpiryValue();
    [CompilerGeneratedAttribute]
private void set_ExpiryValue(TimeSpan value);
    [CompilerGeneratedAttribute]
internal ulong get_CasValue();
    [CompilerGeneratedAttribute]
private void set_CasValue(ulong value);
    [CompilerGeneratedAttribute]
internal ReplicateTo get_ReplicateTo();
    [CompilerGeneratedAttribute]
private void set_ReplicateTo(ReplicateTo value);
    [CompilerGeneratedAttribute]
internal PersistTo get_PersistTo();
    [CompilerGeneratedAttribute]
private void set_PersistTo(PersistTo value);
    [CompilerGeneratedAttribute]
internal DurabilityLevel get_DurabilityLevel();
    [CompilerGeneratedAttribute]
private void set_DurabilityLevel(DurabilityLevel value);
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_TimeoutValue();
    [CompilerGeneratedAttribute]
private void set_TimeoutValue(Nullable`1<TimeSpan> value);
    private sealed virtual override Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.get_Timeout();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    private sealed virtual override CancellationToken Couchbase.KeyValue.ITimeoutOptions.get_Token();
    [CompilerGeneratedAttribute]
internal ITypeTranscoder get_TranscoderValue();
    [CompilerGeneratedAttribute]
private void set_TranscoderValue(ITypeTranscoder value);
    private sealed virtual override ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.get_Transcoder();
    [CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [CompilerGeneratedAttribute]
private void set_RetryStrategyValue(IRetryStrategy value);
    private sealed virtual override IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.get_RetryStrategy();
    [CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    [CompilerGeneratedAttribute]
internal bool get_PreserveTtlValue();
    [CompilerGeneratedAttribute]
private void set_PreserveTtlValue(bool value);
    [CompilerGeneratedAttribute]
internal bool get_PreferReturn();
    [CompilerGeneratedAttribute]
internal void set_PreferReturn(bool value);
    [NullableContextAttribute("1")]
public ReplaceOptions PreserveTtl(bool preserveTtl);
    [NullableContextAttribute("1")]
public ReplaceOptions RequestSpan(IRequestSpan span);
    [NullableContextAttribute("1")]
public ReplaceOptions RetryStrategy(IRetryStrategy retryStrategy);
    [NullableContextAttribute("1")]
public ReplaceOptions Transcoder(ITypeTranscoder transcoder);
    [NullableContextAttribute("1")]
public ReplaceOptions Expiry(TimeSpan expiry);
    [NullableContextAttribute("1")]
public ReplaceOptions Cas(ulong cas);
    [NullableContextAttribute("1")]
public ReplaceOptions Durability(PersistTo persistTo, ReplicateTo replicateTo);
    [NullableContextAttribute("1")]
public ReplaceOptions Durability(DurabilityLevel durabilityLevel);
    [NullableContextAttribute("1")]
public ReplaceOptions Timeout(TimeSpan timeout);
    [NullableContextAttribute("1")]
public ReplaceOptions CancellationToken(CancellationToken token);
    public void Deconstruct(TimeSpan& expiry, UInt64& cas, ReplicateTo& replicateTo, PersistTo& persistTo, DurabilityLevel& durabilityLevel, Nullable`1& timeout, CancellationToken& token, ITypeTranscoder& transcoder, IRetryStrategy& retryStrategyValue, IRequestSpan& requestSpan, Boolean& preserveTtl);
    [NullableContextAttribute("1")]
public ReadOnly AsReadOnly();
}
public enum Couchbase.KeyValue.ReplicateTo : Enum {
    public int value__;
    public static ReplicateTo None;
    public static ReplicateTo One;
    public static ReplicateTo Two;
    public static ReplicateTo Three;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
internal class Couchbase.KeyValue.Scope : object {
    public static string DefaultScopeName;
    private BucketBase _bucket;
    private ILogger`1<Scope> _logger;
    private ConcurrentDictionary`2<string, ICouchbaseCollection> _collections;
    private string _queryContext;
    private ICollectionFactory _collectionFactory;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDefaultScope>k__BackingField;
    [CompilerGeneratedAttribute]
private IEventingFunctionManager <EventingFunctions>k__BackingField;
    [CompilerGeneratedAttribute]
private ISearchIndexManager <SearchIndexes>k__BackingField;
    internal string QueryContext { get; }
    public string Name { get; }
    public IBucket Bucket { get; }
    public bool IsDefaultScope { get; }
    public ICouchbaseCollection Item { get; }
    public IEventingFunctionManager EventingFunctions { get; }
    public ISearchIndexManager SearchIndexes { get; }
    public Scope(string name, BucketBase bucket, ICollectionFactory collectionFactory, ILogger`1<Scope> logger, IEventingFunctionManagerFactory eventingFunctionManagerFactory);
    internal string get_QueryContext();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    public sealed virtual IBucket get_Bucket();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsDefaultScope();
    public sealed virtual ICouchbaseCollection get_Item(string name);
    public sealed virtual ICouchbaseCollection Collection(string collectionName);
    public sealed virtual ValueTask`1<ICouchbaseCollection> CollectionAsync(string collectionName);
    public sealed virtual Task`1<IQueryResult`1<T>> QueryAsync(string statement, QueryOptions options);
    [AsyncStateMachineAttribute("Couchbase.KeyValue.Scope/<SearchAsync>d__22")]
public sealed virtual Task`1<ISearchResult> SearchAsync(string searchIndexName, SearchRequest searchRequest, SearchOptions options);
    public sealed virtual Task`1<IAnalyticsResult`1<T>> AnalyticsQueryAsync(string statement, AnalyticsOptions options);
    [CompilerGeneratedAttribute]
public sealed virtual IEventingFunctionManager get_EventingFunctions();
    [CompilerGeneratedAttribute]
public sealed virtual ISearchIndexManager get_SearchIndexes();
    [CompilerGeneratedAttribute]
private ICouchbaseCollection <get_Item>b__18_0(string key);
}
[FlagsAttribute]
public enum Couchbase.KeyValue.StoreSemantics : Enum {
    public byte value__;
    public static StoreSemantics Replace;
    public static StoreSemantics Upsert;
    public static StoreSemantics Insert;
    public static StoreSemantics AccessDeleted;
}
[FlagsAttribute]
public enum Couchbase.KeyValue.SubdocDocFlags : Enum {
    public byte value__;
    public static SubdocDocFlags None;
    public static SubdocDocFlags UpsertDocument;
    public static SubdocDocFlags InsertDocument;
    public static SubdocDocFlags AccessDeleted;
    public static SubdocDocFlags CreateAsDeleted;
    public static SubdocDocFlags ReplicaRead;
}
[FlagsAttribute]
public enum Couchbase.KeyValue.SubdocPathFlags : Enum {
    public byte value__;
    public static SubdocPathFlags None;
    public static SubdocPathFlags CreatePath;
    public static SubdocPathFlags Xattr;
    public static SubdocPathFlags ExpandMacroValues;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.TouchOptions : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private static TouchOptions <Default>k__BackingField;
    [NullableAttribute("1")]
public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PreferReturn>k__BackingField;
    [CompilerGeneratedAttribute]
private ResponseStatus <Status>k__BackingField;
    [NullableAttribute("1")]
internal static TouchOptions Default { get; }
    internal Nullable`1<TimeSpan> TimeoutValue { get; private set; }
    private Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.Timeout { get; }
    internal CancellationToken TokenValue { get; private set; }
    private CancellationToken Couchbase.KeyValue.ITimeoutOptions.Token { get; }
    internal IRetryStrategy RetryStrategyValue { get; private set; }
    private IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.RetryStrategy { get; }
    internal IRequestSpan RequestSpanValue { get; private set; }
    internal bool PreferReturn { get; internal set; }
    internal ResponseStatus Status { get; internal set; }
    private static TouchOptions();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static TouchOptions get_Default();
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_TimeoutValue();
    [CompilerGeneratedAttribute]
private void set_TimeoutValue(Nullable`1<TimeSpan> value);
    private sealed virtual override Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.get_Timeout();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    private sealed virtual override CancellationToken Couchbase.KeyValue.ITimeoutOptions.get_Token();
    [CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [CompilerGeneratedAttribute]
private void set_RetryStrategyValue(IRetryStrategy value);
    private sealed virtual override IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.get_RetryStrategy();
    [CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    [CompilerGeneratedAttribute]
internal bool get_PreferReturn();
    [CompilerGeneratedAttribute]
internal void set_PreferReturn(bool value);
    [CompilerGeneratedAttribute]
internal ResponseStatus get_Status();
    [CompilerGeneratedAttribute]
internal void set_Status(ResponseStatus value);
    [NullableContextAttribute("1")]
public TouchOptions RequestSpan(IRequestSpan span);
    [NullableContextAttribute("1")]
public TouchOptions RetryStrategy(IRetryStrategy retryStrategy);
    [NullableContextAttribute("1")]
public TouchOptions Timeout(TimeSpan timeout);
    [NullableContextAttribute("1")]
public TouchOptions CancellationToken(CancellationToken token);
    public void Deconstruct(Nullable`1& timeout, CancellationToken& token, IRetryStrategy& retryStrategy, IRequestSpan& requestSpan);
    [NullableContextAttribute("1")]
public ReadOnly AsReadOnly();
}
internal class Couchbase.KeyValue.TryGetResult : TryResultBase {
    private IGetResult _getResult;
    public ulong Cas { get; }
    public Nullable`1<TimeSpan> Expiry { get; }
    public Nullable`1<DateTime> ExpiryTime { get; }
    internal TryGetResult(IGetResult getGetResult);
    public sealed virtual ulong get_Cas();
    public sealed virtual void Dispose();
    public sealed virtual T ContentAs();
    public sealed virtual Nullable`1<TimeSpan> get_Expiry();
    public sealed virtual Nullable`1<DateTime> get_ExpiryTime();
}
internal class Couchbase.KeyValue.TryMutationResult : TryResultBase {
    private IMutationResult _mutationResult;
    public ulong Cas { get; }
    public MutationToken MutationToken { get; public set; }
    public TryMutationResult(IMutationResult mutationResult);
    public sealed virtual ulong get_Cas();
    public sealed virtual MutationToken get_MutationToken();
    public sealed virtual void set_MutationToken(MutationToken value);
}
internal class Couchbase.KeyValue.TryRemoveResult : TryResultBase {
    public TryRemoveResult(ResponseStatus status);
}
internal abstract class Couchbase.KeyValue.TryResultBase : object {
    [CompilerGeneratedAttribute]
private ResponseStatus <Status>k__BackingField;
    internal ResponseStatus Status { get; internal set; }
    public bool Exists { get; }
    [CompilerGeneratedAttribute]
internal ResponseStatus get_Status();
    [CompilerGeneratedAttribute]
internal Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Status(ResponseStatus value);
    public virtual bool get_Exists();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.KeyValue.TryTouchResult : TryResultBase {
    [CompilerGeneratedAttribute]
private IMutationResult <MutationResult>k__BackingField;
    public IMutationResult MutationResult { get; }
    internal TryTouchResult(ResponseStatus status, IMutationResult mutationResult);
    [CompilerGeneratedAttribute]
public sealed virtual IMutationResult get_MutationResult();
}
internal class Couchbase.KeyValue.TryUnlockResult : TryResultBase {
    internal TryUnlockResult(ResponseStatus status);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.UnlockOptions : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private static UnlockOptions <Default>k__BackingField;
    [NullableAttribute("1")]
public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PreferReturn>k__BackingField;
    [CompilerGeneratedAttribute]
private ResponseStatus <Status>k__BackingField;
    [NullableAttribute("1")]
internal static UnlockOptions Default { get; }
    internal Nullable`1<TimeSpan> TimeoutValue { get; private set; }
    private Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.Timeout { get; }
    internal CancellationToken TokenValue { get; private set; }
    private CancellationToken Couchbase.KeyValue.ITimeoutOptions.Token { get; }
    internal IRetryStrategy RetryStrategyValue { get; private set; }
    private IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.RetryStrategy { get; }
    internal IRequestSpan RequestSpanValue { get; private set; }
    internal bool PreferReturn { get; internal set; }
    internal ResponseStatus Status { get; internal set; }
    private static UnlockOptions();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static UnlockOptions get_Default();
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_TimeoutValue();
    [CompilerGeneratedAttribute]
private void set_TimeoutValue(Nullable`1<TimeSpan> value);
    private sealed virtual override Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.get_Timeout();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    private sealed virtual override CancellationToken Couchbase.KeyValue.ITimeoutOptions.get_Token();
    [CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [CompilerGeneratedAttribute]
private void set_RetryStrategyValue(IRetryStrategy value);
    private sealed virtual override IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.get_RetryStrategy();
    [CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    [CompilerGeneratedAttribute]
internal bool get_PreferReturn();
    [CompilerGeneratedAttribute]
internal void set_PreferReturn(bool value);
    [CompilerGeneratedAttribute]
internal ResponseStatus get_Status();
    [CompilerGeneratedAttribute]
internal void set_Status(ResponseStatus value);
    [NullableContextAttribute("1")]
public UnlockOptions RequestSpan(IRequestSpan span);
    [NullableContextAttribute("1")]
public UnlockOptions RetryStrategy(IRetryStrategy retryStrategy);
    [NullableContextAttribute("1")]
public UnlockOptions Timeout(TimeSpan timeout);
    [NullableContextAttribute("1")]
public UnlockOptions CancellationToken(CancellationToken token);
    public void Deconstruct(Nullable`1& timeout, CancellationToken& token, IRetryStrategy& retryStrategy, IRequestSpan& requestSpan);
    [NullableContextAttribute("1")]
public ReadOnly AsReadOnly();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.KeyValue.UpsertOptions : object {
    [NullableAttribute("1")]
public static ReadOnly DefaultReadOnly;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private static UpsertOptions <Default>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ExpiryValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ReplicateTo <ReplicateTo>k__BackingField;
    [CompilerGeneratedAttribute]
private PersistTo <PersistTo>k__BackingField;
    [CompilerGeneratedAttribute]
private DurabilityLevel <DurabilityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PreserveTtlValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeTranscoder <TranscoderValue>k__BackingField;
    [NullableAttribute("1")]
internal static UpsertOptions Default { get; }
    internal TimeSpan ExpiryValue { get; private set; }
    internal ReplicateTo ReplicateTo { get; private set; }
    internal PersistTo PersistTo { get; private set; }
    internal DurabilityLevel DurabilityLevel { get; private set; }
    internal IRetryStrategy RetryStrategyValue { get; private set; }
    private IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.RetryStrategy { get; }
    internal IRequestSpan RequestSpanValue { get; private set; }
    internal bool PreserveTtlValue { get; private set; }
    internal Nullable`1<TimeSpan> TimeoutValue { get; private set; }
    private Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.Timeout { get; }
    internal CancellationToken TokenValue { get; private set; }
    private CancellationToken Couchbase.KeyValue.ITimeoutOptions.Token { get; }
    internal ITypeTranscoder TranscoderValue { get; private set; }
    private ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.Transcoder { get; }
    private static UpsertOptions();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static UpsertOptions get_Default();
    [CompilerGeneratedAttribute]
internal TimeSpan get_ExpiryValue();
    [CompilerGeneratedAttribute]
private void set_ExpiryValue(TimeSpan value);
    [CompilerGeneratedAttribute]
internal ReplicateTo get_ReplicateTo();
    [CompilerGeneratedAttribute]
private void set_ReplicateTo(ReplicateTo value);
    [CompilerGeneratedAttribute]
internal PersistTo get_PersistTo();
    [CompilerGeneratedAttribute]
private void set_PersistTo(PersistTo value);
    [CompilerGeneratedAttribute]
internal DurabilityLevel get_DurabilityLevel();
    [CompilerGeneratedAttribute]
private void set_DurabilityLevel(DurabilityLevel value);
    [CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [CompilerGeneratedAttribute]
private void set_RetryStrategyValue(IRetryStrategy value);
    private sealed virtual override IRetryStrategy Couchbase.KeyValue.IKeyValueOptions.get_RetryStrategy();
    [CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    [CompilerGeneratedAttribute]
internal bool get_PreserveTtlValue();
    [CompilerGeneratedAttribute]
private void set_PreserveTtlValue(bool value);
    [NullableContextAttribute("1")]
public UpsertOptions PreserveTtl(bool preserveTtl);
    [NullableContextAttribute("1")]
public UpsertOptions RequestSpan(IRequestSpan span);
    [NullableContextAttribute("1")]
public UpsertOptions RetryStrategy(IRetryStrategy retryStrategy);
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_TimeoutValue();
    [CompilerGeneratedAttribute]
private void set_TimeoutValue(Nullable`1<TimeSpan> value);
    private sealed virtual override Nullable`1<TimeSpan> Couchbase.KeyValue.ITimeoutOptions.get_Timeout();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    private sealed virtual override CancellationToken Couchbase.KeyValue.ITimeoutOptions.get_Token();
    [CompilerGeneratedAttribute]
internal ITypeTranscoder get_TranscoderValue();
    [CompilerGeneratedAttribute]
private void set_TranscoderValue(ITypeTranscoder value);
    private sealed virtual override ITypeTranscoder Couchbase.KeyValue.ITranscoderOverrideOptions.get_Transcoder();
    [NullableContextAttribute("1")]
public UpsertOptions Transcoder(ITypeTranscoder transcoder);
    [NullableContextAttribute("1")]
public UpsertOptions Expiry(TimeSpan expiry);
    [NullableContextAttribute("1")]
public UpsertOptions Durability(PersistTo persistTo, ReplicateTo replicateTo);
    [NullableContextAttribute("1")]
public UpsertOptions Durability(DurabilityLevel durabilityLevel);
    [NullableContextAttribute("1")]
public UpsertOptions Timeout(TimeSpan timeout);
    [NullableContextAttribute("1")]
public UpsertOptions CancellationToken(CancellationToken token);
    public void Deconstruct(TimeSpan& expiry, ReplicateTo& replicateTo, PersistTo& persistTo, DurabilityLevel& durabilityLevel, IRetryStrategy& retryStrategy, IRequestSpan& requestSpan, Boolean& preserveTtl, Nullable`1& timeout, CancellationToken& token, ITypeTranscoder& transcoder);
    [NullableContextAttribute("1")]
public ReadOnly AsReadOnly();
}
[AttributeUsageAttribute("32767")]
internal class Couchbase.LocalizationRequiredAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <Required>k__BackingField;
    public bool Required { get; private set; }
    public LocalizationRequiredAttribute(bool required);
    [CompilerGeneratedAttribute]
public bool get_Required();
    [CompilerGeneratedAttribute]
private void set_Required(bool value);
}
public class Couchbase.Management.Analytics.AnalyticsDataset : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataverseName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LinkName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BucketName>k__BackingField;
    public string Name { get; public set; }
    public string DataverseName { get; public set; }
    public string LinkName { get; public set; }
    public string BucketName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_DataverseName();
    [CompilerGeneratedAttribute]
public void set_DataverseName(string value);
    [CompilerGeneratedAttribute]
public string get_LinkName();
    [CompilerGeneratedAttribute]
public void set_LinkName(string value);
    [CompilerGeneratedAttribute]
public string get_BucketName();
    [CompilerGeneratedAttribute]
public void set_BucketName(string value);
}
public class Couchbase.Management.Analytics.AnalyticsIndex : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DatasetName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataverseName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPrimary>k__BackingField;
    public string Name { get; public set; }
    public string DatasetName { get; public set; }
    public string DataverseName { get; public set; }
    public bool IsPrimary { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_DatasetName();
    [CompilerGeneratedAttribute]
public void set_DatasetName(string value);
    [CompilerGeneratedAttribute]
public string get_DataverseName();
    [CompilerGeneratedAttribute]
public void set_DataverseName(string value);
    [CompilerGeneratedAttribute]
public bool get_IsPrimary();
    [CompilerGeneratedAttribute]
public void set_IsPrimary(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Management.Analytics.AnalyticsIndexManager : object {
    private ILogger`1<AnalyticsIndexManager> _logger;
    private IAnalyticsClient _client;
    private IRedactor _redactor;
    private IServiceUriProvider _serviceUriProvider;
    private ICouchbaseHttpClientFactory _httpClientFactory;
    public AnalyticsIndexManager(ILogger`1<AnalyticsIndexManager> logger, IAnalyticsClient client, IRedactor redactor, IServiceUriProvider serviceUriProvider, ICouchbaseHttpClientFactory httpClientFactory);
    [AsyncStateMachineAttribute("Couchbase.Management.Analytics.AnalyticsIndexManager/<CreateDataverseAsync>d__6")]
public sealed virtual Task CreateDataverseAsync(string dataverseName, CreateAnalyticsDataverseOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Analytics.AnalyticsIndexManager/<DropDataverseAsync>d__7")]
public sealed virtual Task DropDataverseAsync(string dataverseName, DropAnalyticsDataverseOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Analytics.AnalyticsIndexManager/<CreateDatasetAsync>d__8")]
public sealed virtual Task CreateDatasetAsync(string datasetName, string bucketName, CreateAnalyticsDatasetOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Analytics.AnalyticsIndexManager/<DropDatasetAsync>d__9")]
public sealed virtual Task DropDatasetAsync(string datasetName, DropAnalyticsDatasetOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Analytics.AnalyticsIndexManager/<GetAllDatasetsAsync>d__10")]
public sealed virtual Task`1<IEnumerable`1<AnalyticsDataset>> GetAllDatasetsAsync(GetAllAnalyticsDatasetsOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Analytics.AnalyticsIndexManager/<CreateIndexAsync>d__11")]
public sealed virtual Task CreateIndexAsync(string datasetName, string indexName, Dictionary`2<string, string> fields, CreateAnalyticsIndexOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Analytics.AnalyticsIndexManager/<DropIndexAsync>d__12")]
public sealed virtual Task DropIndexAsync(string datasetName, string indexName, DropAnalyticsIndexOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Analytics.AnalyticsIndexManager/<GetAllIndexesAsync>d__13")]
public sealed virtual Task`1<IEnumerable`1<AnalyticsIndex>> GetAllIndexesAsync(GetAllAnalyticsIndexesOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Analytics.AnalyticsIndexManager/<ConnectLinkAsync>d__14")]
public sealed virtual Task ConnectLinkAsync(ConnectAnalyticsLinkOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Analytics.AnalyticsIndexManager/<DisconnectLinkAsync>d__15")]
public sealed virtual Task DisconnectLinkAsync(DisconnectAnalyticsLinkOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Analytics.AnalyticsIndexManager/<GetPendingMutationsAsync>d__16")]
public sealed virtual Task`1<Dictionary`2<string, int>> GetPendingMutationsAsync(GetPendingAnalyticsMutationsOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Analytics.AnalyticsIndexManager/<CreateLinkAsync>d__17")]
public sealed virtual Task CreateLinkAsync(AnalyticsLink link, CreateAnalyticsLinkOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Analytics.AnalyticsIndexManager/<ReplaceLinkAsync>d__18")]
public sealed virtual Task ReplaceLinkAsync(AnalyticsLink link, ReplaceAnalyticsLinkOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Analytics.AnalyticsIndexManager/<DropLinkAsync>d__19")]
public sealed virtual Task DropLinkAsync(string linkName, string dataverseName, DropAnalyticsLinkOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Analytics.AnalyticsIndexManager/<GetLinks>d__20")]
public sealed virtual Task`1<IEnumerable`1<AnalyticsLink>> GetLinks(GetAnalyticsLinksOptions options);
    private Task HandleLinkManagementResultErrors(HttpResponseMessage result, AnalyticsLink link);
    [AsyncStateMachineAttribute("Couchbase.Management.Analytics.AnalyticsIndexManager/<HandleLinkManagementResultErrors>d__22")]
private Task HandleLinkManagementResultErrors(HttpResponseMessage result, string linkName, string dataverseName);
    private Dictionary`2<string, int> parseResult(JToken json);
    private string UncompoundName(string dataverseName);
    private string DataSetWithDataVerse(string datasetName, string dataverseName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Couchbase.Management.Analytics.AnalyticsLinkManagementOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <CancellationToken>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public CancellationToken CancellationToken { get; public set; }
    [CompilerGeneratedAttribute]
protected AnalyticsLinkManagementOptions(AnalyticsLinkManagementOptions original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public CancellationToken get_CancellationToken();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CancellationToken(CancellationToken value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(AnalyticsLinkManagementOptions left, AnalyticsLinkManagementOptions right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(AnalyticsLinkManagementOptions left, AnalyticsLinkManagementOptions right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(AnalyticsLinkManagementOptions other);
    [CompilerGeneratedAttribute]
public abstract virtual AnalyticsLinkManagementOptions <Clone>$();
}
[ExtensionAttribute]
public static class Couchbase.Management.Analytics.AnalyticsOptionsExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static T WithCancellationToken(T opts, CancellationToken token);
}
public class Couchbase.Management.Analytics.ConnectAnalyticsLinkOptions : object {
    [CompilerGeneratedAttribute]
private string <LinkNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal string LinkNameValue { get; internal set; }
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    [CompilerGeneratedAttribute]
internal string get_LinkNameValue();
    [CompilerGeneratedAttribute]
internal void set_LinkNameValue(string value);
    public ConnectAnalyticsLinkOptions LinkName(string linkName);
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    public ConnectAnalyticsLinkOptions CancellationToken(CancellationToken token);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public ConnectAnalyticsLinkOptions Timeout(TimeSpan timeout);
    internal AnalyticsOptions CreateAnalyticsOptions();
}
public class Couchbase.Management.Analytics.CreateAnalyticsDatasetOptions : object {
    [CompilerGeneratedAttribute]
private bool <IgnoreIfExistsValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConditionValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataverseNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal bool IgnoreIfExistsValue { get; internal set; }
    internal string ConditionValue { get; internal set; }
    internal string DataverseNameValue { get; internal set; }
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    [CompilerGeneratedAttribute]
internal bool get_IgnoreIfExistsValue();
    [CompilerGeneratedAttribute]
internal void set_IgnoreIfExistsValue(bool value);
    [CompilerGeneratedAttribute]
internal string get_ConditionValue();
    [CompilerGeneratedAttribute]
internal void set_ConditionValue(string value);
    [CompilerGeneratedAttribute]
internal string get_DataverseNameValue();
    [CompilerGeneratedAttribute]
internal void set_DataverseNameValue(string value);
    public CreateAnalyticsDatasetOptions IgnoreIfExists(bool ignoreIfExists);
    public CreateAnalyticsDatasetOptions Condition(string condition);
    public CreateAnalyticsDatasetOptions DataverseName(string dataverseName);
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    public CreateAnalyticsDatasetOptions CancellationToken(CancellationToken token);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public CreateAnalyticsDatasetOptions Timeout(TimeSpan timeout);
    internal AnalyticsOptions CreateAnalyticsOptions();
}
public class Couchbase.Management.Analytics.CreateAnalyticsDataverseOptions : object {
    [CompilerGeneratedAttribute]
private bool <IgnoreIfExistsValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TimeoutValue>k__BackingField;
    internal bool IgnoreIfExistsValue { get; internal set; }
    internal CancellationToken TokenValue { get; internal set; }
    internal Nullable`1<TimeSpan> TimeoutValue { get; internal set; }
    [CompilerGeneratedAttribute]
internal bool get_IgnoreIfExistsValue();
    [CompilerGeneratedAttribute]
internal void set_IgnoreIfExistsValue(bool value);
    public CreateAnalyticsDataverseOptions IgnoreIfExists(bool ignoreIfExists);
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    public CreateAnalyticsDataverseOptions CancellationToken(CancellationToken token);
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(Nullable`1<TimeSpan> value);
    public CreateAnalyticsDataverseOptions Timeout(TimeSpan timeout);
    internal AnalyticsOptions CreateAnalyticsOptions();
}
public class Couchbase.Management.Analytics.CreateAnalyticsIndexOptions : object {
    [CompilerGeneratedAttribute]
private bool <IgnoreIfExistsValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataverseNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal bool IgnoreIfExistsValue { get; internal set; }
    internal string DataverseNameValue { get; internal set; }
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    [CompilerGeneratedAttribute]
internal bool get_IgnoreIfExistsValue();
    [CompilerGeneratedAttribute]
internal void set_IgnoreIfExistsValue(bool value);
    [CompilerGeneratedAttribute]
internal string get_DataverseNameValue();
    [CompilerGeneratedAttribute]
internal void set_DataverseNameValue(string value);
    public CreateAnalyticsIndexOptions IgnoreIfExists(bool ignoreIfExists);
    public CreateAnalyticsIndexOptions DataverseName(string dataverseName);
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    public CreateAnalyticsIndexOptions CancellationToken(CancellationToken token);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public CreateAnalyticsIndexOptions Timeout(TimeSpan timeout);
    internal AnalyticsOptions CreateAnalyticsOptions();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Analytics.CreateAnalyticsLinkOptions : AnalyticsLinkManagementOptions {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [CompilerGeneratedAttribute]
protected CreateAnalyticsLinkOptions(CreateAnalyticsLinkOptions original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(CreateAnalyticsLinkOptions left, CreateAnalyticsLinkOptions right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(CreateAnalyticsLinkOptions left, CreateAnalyticsLinkOptions right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(AnalyticsLinkManagementOptions other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(CreateAnalyticsLinkOptions other);
    [PreserveBaseOverridesAttribute]
[CompilerGeneratedAttribute]
public virtual override CreateAnalyticsLinkOptions <Clone>$();
}
public class Couchbase.Management.Analytics.DisconnectAnalyticsLinkOptions : object {
    [CompilerGeneratedAttribute]
private string <LinkNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal string LinkNameValue { get; internal set; }
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    [CompilerGeneratedAttribute]
internal string get_LinkNameValue();
    [CompilerGeneratedAttribute]
internal void set_LinkNameValue(string value);
    public DisconnectAnalyticsLinkOptions LinkName(string linkName);
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    public DisconnectAnalyticsLinkOptions CancellationToken(CancellationToken token);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public DisconnectAnalyticsLinkOptions Timeout(TimeSpan timeout);
    internal AnalyticsOptions CreateAnalyticsOptions();
}
public class Couchbase.Management.Analytics.DropAnalyticsDatasetOptions : object {
    [CompilerGeneratedAttribute]
private bool <IgnoreIfNotExistsValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataverseNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal bool IgnoreIfNotExistsValue { get; internal set; }
    internal string DataverseNameValue { get; internal set; }
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    [CompilerGeneratedAttribute]
internal bool get_IgnoreIfNotExistsValue();
    [CompilerGeneratedAttribute]
internal void set_IgnoreIfNotExistsValue(bool value);
    [CompilerGeneratedAttribute]
internal string get_DataverseNameValue();
    [CompilerGeneratedAttribute]
internal void set_DataverseNameValue(string value);
    public DropAnalyticsDatasetOptions DataverseName(string dataverseName);
    public DropAnalyticsDatasetOptions IgnoreIfNotExists(bool ignoreIfNotExists);
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    public DropAnalyticsDatasetOptions CancellationToken(CancellationToken token);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public DropAnalyticsDatasetOptions Timeout(TimeSpan timeout);
    internal AnalyticsOptions CreateAnalyticsOptions();
}
public class Couchbase.Management.Analytics.DropAnalyticsDataverseOptions : object {
    [CompilerGeneratedAttribute]
private bool <IgnoreIfNotExistsValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal bool IgnoreIfNotExistsValue { get; internal set; }
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    [CompilerGeneratedAttribute]
internal bool get_IgnoreIfNotExistsValue();
    [CompilerGeneratedAttribute]
internal void set_IgnoreIfNotExistsValue(bool value);
    public DropAnalyticsDataverseOptions IgnoreIfNotExists(bool ignoreIfNotExists);
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    public DropAnalyticsDataverseOptions CancellationToken(CancellationToken token);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public DropAnalyticsDataverseOptions Timeout(TimeSpan timeout);
    internal AnalyticsOptions CreateAnalyticsOptions();
}
public class Couchbase.Management.Analytics.DropAnalyticsIndexOptions : object {
    [CompilerGeneratedAttribute]
private bool <IgnoreIfNotExistsValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataverseNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal bool IgnoreIfNotExistsValue { get; internal set; }
    internal string DataverseNameValue { get; internal set; }
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    [CompilerGeneratedAttribute]
internal bool get_IgnoreIfNotExistsValue();
    [CompilerGeneratedAttribute]
internal void set_IgnoreIfNotExistsValue(bool value);
    [CompilerGeneratedAttribute]
internal string get_DataverseNameValue();
    [CompilerGeneratedAttribute]
internal void set_DataverseNameValue(string value);
    public DropAnalyticsIndexOptions IgnoreIfNotExists(bool ignoreIfNotExists);
    public DropAnalyticsIndexOptions DataverseName(string dataverseName);
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    public DropAnalyticsIndexOptions CancellationToken(CancellationToken token);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public DropAnalyticsIndexOptions Timeout(TimeSpan timeout);
    internal AnalyticsOptions CreateAnalyticsOptions();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Analytics.DropAnalyticsLinkOptions : AnalyticsLinkManagementOptions {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [CompilerGeneratedAttribute]
protected DropAnalyticsLinkOptions(DropAnalyticsLinkOptions original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(DropAnalyticsLinkOptions left, DropAnalyticsLinkOptions right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(DropAnalyticsLinkOptions left, DropAnalyticsLinkOptions right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(AnalyticsLinkManagementOptions other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(DropAnalyticsLinkOptions other);
    [PreserveBaseOverridesAttribute]
[CompilerGeneratedAttribute]
public virtual override DropAnalyticsLinkOptions <Clone>$();
}
public class Couchbase.Management.Analytics.GetAllAnalyticsDatasetsOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    public GetAllAnalyticsDatasetsOptions CancellationToken(CancellationToken token);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public GetAllAnalyticsDatasetsOptions Timeout(TimeSpan timeout);
    internal AnalyticsOptions CreateAnalyticsOptions();
}
public class Couchbase.Management.Analytics.GetAllAnalyticsIndexesOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    public GetAllAnalyticsIndexesOptions CancellationToken(CancellationToken token);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public GetAllAnalyticsIndexesOptions Timeout(TimeSpan timeout);
    internal AnalyticsOptions CreateAnalyticsOptions();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.Management.Analytics.GetAnalyticsLinksOptions : AnalyticsLinkManagementOptions {
    [CompilerGeneratedAttribute]
private string <DataverseName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LinkType>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string DataverseName { get; public set; }
    public string Name { get; public set; }
    public string LinkType { get; public set; }
    [CompilerGeneratedAttribute]
protected GetAnalyticsLinksOptions(GetAnalyticsLinksOptions original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_DataverseName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DataverseName(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_LinkType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_LinkType(string value);
    [NullableContextAttribute("1")]
public GetAnalyticsLinksOptions WithDataverseName(string dataverseName);
    [NullableContextAttribute("1")]
public GetAnalyticsLinksOptions WithName(string linkName);
    [NullableContextAttribute("1")]
public GetAnalyticsLinksOptions WithLinkType(string linkType);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(GetAnalyticsLinksOptions left, GetAnalyticsLinksOptions right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(GetAnalyticsLinksOptions left, GetAnalyticsLinksOptions right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(AnalyticsLinkManagementOptions other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(GetAnalyticsLinksOptions other);
    [NullableContextAttribute("1")]
[PreserveBaseOverridesAttribute]
[CompilerGeneratedAttribute]
public virtual override GetAnalyticsLinksOptions <Clone>$();
}
public class Couchbase.Management.Analytics.GetPendingAnalyticsMutationsOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    public GetPendingAnalyticsMutationsOptions CancellationToken(CancellationToken token);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public GetPendingAnalyticsMutationsOptions Timeout(TimeSpan timeout);
    internal AnalyticsOptions CreateAnalyticsOptions();
}
[NullableContextAttribute("1")]
public interface Couchbase.Management.Analytics.IAnalyticsIndexManager {
    public abstract virtual Task CreateDataverseAsync(string dataverseName, CreateAnalyticsDataverseOptions options);
    public abstract virtual Task DropDataverseAsync(string dataverseName, DropAnalyticsDataverseOptions options);
    public abstract virtual Task CreateDatasetAsync(string datasetName, string bucketName, CreateAnalyticsDatasetOptions options);
    public abstract virtual Task DropDatasetAsync(string datasetName, DropAnalyticsDatasetOptions options);
    public abstract virtual Task`1<IEnumerable`1<AnalyticsDataset>> GetAllDatasetsAsync(GetAllAnalyticsDatasetsOptions options);
    public abstract virtual Task CreateIndexAsync(string datasetName, string indexName, Dictionary`2<string, string> fields, CreateAnalyticsIndexOptions options);
    public abstract virtual Task DropIndexAsync(string datasetName, string indexName, DropAnalyticsIndexOptions options);
    public abstract virtual Task`1<IEnumerable`1<AnalyticsIndex>> GetAllIndexesAsync(GetAllAnalyticsIndexesOptions options);
    public abstract virtual Task ConnectLinkAsync(ConnectAnalyticsLinkOptions options);
    public abstract virtual Task DisconnectLinkAsync(DisconnectAnalyticsLinkOptions options);
    public abstract virtual Task CreateLinkAsync(AnalyticsLink link, CreateAnalyticsLinkOptions options);
    public abstract virtual Task ReplaceLinkAsync(AnalyticsLink link, ReplaceAnalyticsLinkOptions options);
    public abstract virtual Task DropLinkAsync(string linkName, string dataverseName, DropAnalyticsLinkOptions options);
    public abstract virtual Task`1<IEnumerable`1<AnalyticsLink>> GetLinks(GetAnalyticsLinksOptions options);
    public abstract virtual Task`1<Dictionary`2<string, int>> GetPendingMutationsAsync(GetPendingAnalyticsMutationsOptions options);
}
public abstract class Couchbase.Management.Analytics.Link.AnalyticsLink : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Dataverse>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string Name { get; public set; }
    public string Dataverse { get; public set; }
    public string LinkType { get; }
    internal IEnumerable`1<KeyValuePair`2<string, string>> FormData { get; }
    internal string ManagementPath { get; }
    protected AnalyticsLink(string Name, string Dataverse);
    [CompilerGeneratedAttribute]
protected AnalyticsLink(AnalyticsLink original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Dataverse();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Dataverse(string value);
    public abstract virtual string get_LinkType();
    internal IEnumerable`1<KeyValuePair`2<string, string>> get_FormData();
    [IteratorStateMachineAttribute("Couchbase.Management.Analytics.Link.AnalyticsLink/<GetFormData>d__15")]
protected virtual IEnumerable`1<KeyValuePair`2<string, string>> GetFormData();
    public virtual bool TryValidateForRequest(List`1& errors);
    public void ValidateForRequest();
    protected void RequiredToBeSet(string name, string value, List`1<string> errors);
    internal string get_ManagementPath();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(AnalyticsLink left, AnalyticsLink right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(AnalyticsLink left, AnalyticsLink right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(AnalyticsLink other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public abstract virtual AnalyticsLink <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& Name, String& Dataverse);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal abstract class Couchbase.Management.Analytics.Link.AnalyticsLinkResponseRecord : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataverseFromDataverse>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataverseFromScope>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [NullableAttribute("1")]
public string Name { get; public set; }
    public string DataverseFromDataverse { get; public set; }
    public string DataverseFromScope { get; public set; }
    [NullableAttribute("1")]
public string DataverseFromEither { get; }
    protected AnalyticsLinkResponseRecord(string Name, string DataverseFromDataverse, string DataverseFromScope);
    [CompilerGeneratedAttribute]
protected AnalyticsLinkResponseRecord(AnalyticsLinkResponseRecord original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Name();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_DataverseFromDataverse();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DataverseFromDataverse(string value);
    [CompilerGeneratedAttribute]
public string get_DataverseFromScope();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DataverseFromScope(string value);
    [NullableContextAttribute("1")]
public string get_DataverseFromEither();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(AnalyticsLinkResponseRecord left, AnalyticsLinkResponseRecord right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(AnalyticsLinkResponseRecord left, AnalyticsLinkResponseRecord right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public virtual bool Equals(AnalyticsLinkResponseRecord other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public abstract virtual AnalyticsLinkResponseRecord <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& Name, String& DataverseFromDataverse, String& DataverseFromScope);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("2")]
public class Couchbase.Management.Analytics.Link.AzureBlobExternalAnalyticsLink : AnalyticsLink {
    [CompilerGeneratedAttribute]
private string <ConnectionString>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SharedAccessSignature>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BlobEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EndpointSuffix>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [NullableAttribute("1")]
public string LinkType { get; }
    public string ConnectionString { get; public set; }
    public string AccountName { get; public set; }
    public string AccountKey { get; public set; }
    public string SharedAccessSignature { get; public set; }
    public string BlobEndpoint { get; public set; }
    public string EndpointSuffix { get; public set; }
    [NullableContextAttribute("1")]
public AzureBlobExternalAnalyticsLink(string Name, string Dataverse);
    [CompilerGeneratedAttribute]
protected AzureBlobExternalAnalyticsLink(AzureBlobExternalAnalyticsLink original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [NullableContextAttribute("1")]
public virtual string get_LinkType();
    [CompilerGeneratedAttribute]
public string get_ConnectionString();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ConnectionString(string value);
    [CompilerGeneratedAttribute]
public string get_AccountName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AccountName(string value);
    [CompilerGeneratedAttribute]
public string get_AccountKey();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AccountKey(string value);
    [CompilerGeneratedAttribute]
public string get_SharedAccessSignature();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SharedAccessSignature(string value);
    [CompilerGeneratedAttribute]
public string get_BlobEndpoint();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_BlobEndpoint(string value);
    [CompilerGeneratedAttribute]
public string get_EndpointSuffix();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_EndpointSuffix(string value);
    [NullableContextAttribute("1")]
public AzureBlobExternalAnalyticsLink WithConnectionString(string connectionString);
    [NullableContextAttribute("1")]
public AzureBlobExternalAnalyticsLink WithAccountName(string accountName);
    [NullableContextAttribute("1")]
public AzureBlobExternalAnalyticsLink WithAccountKey(string accountKey);
    [NullableContextAttribute("1")]
public AzureBlobExternalAnalyticsLink WithSharedAccessSignature(string sharedAccessSignature);
    [NullableContextAttribute("1")]
public AzureBlobExternalAnalyticsLink WithBlobEndpoint(string blobEndpoint);
    [NullableContextAttribute("1")]
public AzureBlobExternalAnalyticsLink WithEndpointSuffix(string endpointSuffix);
    [NullableContextAttribute("1")]
public virtual bool TryValidateForRequest(List`1& errors);
    [IteratorStateMachineAttribute("Couchbase.Management.Analytics.Link.AzureBlobExternalAnalyticsLink/<GetFormData>d__36")]
protected virtual IEnumerable`1<KeyValuePair`2<string, string>> GetFormData();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(AzureBlobExternalAnalyticsLink left, AzureBlobExternalAnalyticsLink right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(AzureBlobExternalAnalyticsLink left, AzureBlobExternalAnalyticsLink right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(AnalyticsLink other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(AzureBlobExternalAnalyticsLink other);
    [NullableContextAttribute("1")]
[PreserveBaseOverridesAttribute]
[CompilerGeneratedAttribute]
public virtual override AzureBlobExternalAnalyticsLink <Clone>$();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void Deconstruct(String& Name, String& Dataverse);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, string>> <>n__0();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Management.Analytics.Link.AzureBlobExternalAnalyticsLinkResponse : AnalyticsLinkResponseRecord {
    [CompilerGeneratedAttribute]
private string <AccountName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BlobEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EndpointSuffix>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [JsonPropertyAttribute("accountName")]
public string AccountName { get; public set; }
    [JsonPropertyAttribute("blobEndpoint")]
public string BlobEndpoint { get; public set; }
    [JsonPropertyAttribute("endpointSuffix")]
public string EndpointSuffix { get; public set; }
    public AzureBlobExternalAnalyticsLinkResponse(string Name, string DataverseFromDataverse, string DataverseFromScope);
    [CompilerGeneratedAttribute]
protected AzureBlobExternalAnalyticsLinkResponse(AzureBlobExternalAnalyticsLinkResponse original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_AccountName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AccountName(string value);
    [CompilerGeneratedAttribute]
public string get_BlobEndpoint();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_BlobEndpoint(string value);
    [CompilerGeneratedAttribute]
public string get_EndpointSuffix();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_EndpointSuffix(string value);
    [NullableContextAttribute("1")]
public AzureBlobExternalAnalyticsLink AsRequest();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(AzureBlobExternalAnalyticsLinkResponse left, AzureBlobExternalAnalyticsLinkResponse right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(AzureBlobExternalAnalyticsLinkResponse left, AzureBlobExternalAnalyticsLinkResponse right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(AnalyticsLinkResponseRecord other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(AzureBlobExternalAnalyticsLinkResponse other);
    [NullableContextAttribute("1")]
[PreserveBaseOverridesAttribute]
[CompilerGeneratedAttribute]
public virtual override AzureBlobExternalAnalyticsLinkResponse <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& Name, String& DataverseFromDataverse, String& DataverseFromScope);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.Management.Analytics.Link.CouchbaseRemoteAnalyticsLink : AnalyticsLink {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Hostname>k__BackingField;
    [CompilerGeneratedAttribute]
private EncryptionSettings <Encryption>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [NullableAttribute("1")]
public string Hostname { get; public set; }
    public EncryptionSettings Encryption { get; public set; }
    [NullableAttribute("1")]
public string LinkType { get; }
    public string Username { get; public set; }
    public string Password { get; public set; }
    [NullableContextAttribute("1")]
public CouchbaseRemoteAnalyticsLink(string Name, string Dataverse, string Hostname, EncryptionSettings Encryption);
    [CompilerGeneratedAttribute]
protected CouchbaseRemoteAnalyticsLink(CouchbaseRemoteAnalyticsLink original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Hostname();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Hostname(string value);
    [CompilerGeneratedAttribute]
public EncryptionSettings get_Encryption();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Encryption(EncryptionSettings value);
    [NullableContextAttribute("1")]
public CouchbaseRemoteAnalyticsLink WithUsername(string username);
    [NullableContextAttribute("1")]
public CouchbaseRemoteAnalyticsLink WithPassword(string password);
    [NullableContextAttribute("1")]
public static CouchbaseRemoteAnalyticsLink WithFullEncryption(string name, string dataverse, string hostname, string certificate, string clientCertificate, string clientKey);
    [NullableContextAttribute("1")]
public virtual string get_LinkType();
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Username(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Password(string value);
    [NullableContextAttribute("1")]
public virtual bool TryValidateForRequest(List`1& errors);
    [IteratorStateMachineAttribute("Couchbase.Management.Analytics.Link.CouchbaseRemoteAnalyticsLink/<GetFormData>d__27")]
protected virtual IEnumerable`1<KeyValuePair`2<string, string>> GetFormData();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(CouchbaseRemoteAnalyticsLink left, CouchbaseRemoteAnalyticsLink right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(CouchbaseRemoteAnalyticsLink left, CouchbaseRemoteAnalyticsLink right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(AnalyticsLink other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(CouchbaseRemoteAnalyticsLink other);
    [NullableContextAttribute("1")]
[PreserveBaseOverridesAttribute]
[CompilerGeneratedAttribute]
public virtual override CouchbaseRemoteAnalyticsLink <Clone>$();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void Deconstruct(String& Name, String& Dataverse, String& Hostname, EncryptionSettings& Encryption);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, string>> <>n__0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Management.Analytics.Link.CouchbaseRemoteAnalyticsLinkResponse : AnalyticsLinkResponseRecord {
    [CompilerGeneratedAttribute]
private string <Hostname>k__BackingField;
    [CompilerGeneratedAttribute]
private EncryptionLevel <Encryption>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string Hostname { get; public set; }
    public EncryptionLevel Encryption { get; public set; }
    [NullableAttribute("2")]
[JsonPropertyAttribute("username")]
public string Username { get; public set; }
    public CouchbaseRemoteAnalyticsLinkResponse(string Name, string DataverseFromDataverse, string DataverseFromScope, string Hostname, EncryptionLevel Encryption);
    [CompilerGeneratedAttribute]
protected CouchbaseRemoteAnalyticsLinkResponse(CouchbaseRemoteAnalyticsLinkResponse original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_Hostname();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Hostname(string value);
    [CompilerGeneratedAttribute]
public EncryptionLevel get_Encryption();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Encryption(EncryptionLevel value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Username();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Username(string value);
    public CouchbaseRemoteAnalyticsLink AsRequest();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(CouchbaseRemoteAnalyticsLinkResponse left, CouchbaseRemoteAnalyticsLinkResponse right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(CouchbaseRemoteAnalyticsLinkResponse left, CouchbaseRemoteAnalyticsLinkResponse right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(AnalyticsLinkResponseRecord other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(CouchbaseRemoteAnalyticsLinkResponse other);
    [PreserveBaseOverridesAttribute]
[CompilerGeneratedAttribute]
public virtual override CouchbaseRemoteAnalyticsLinkResponse <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& Name, String& DataverseFromDataverse, String& DataverseFromScope, String& Hostname, EncryptionLevel& Encryption);
}
public class Couchbase.Management.Analytics.Link.GeneralAnalyticsLinkResponse : AnalyticsLink {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, JToken> <ExtraData>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [JsonPropertyAttribute("type")]
protected string Type { get; protected set; }
    [JsonIgnoreAttribute]
public string LinkType { get; }
    [JsonExtensionDataAttribute]
public IDictionary`2<string, JToken> ExtraData { get; public set; }
    public GeneralAnalyticsLinkResponse(string Name, string Dataverse);
    [CompilerGeneratedAttribute]
protected GeneralAnalyticsLinkResponse(GeneralAnalyticsLinkResponse original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
protected string get_Type();
    [CompilerGeneratedAttribute]
protected Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Type(string value);
    public virtual string get_LinkType();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, JToken> get_ExtraData();
    [CompilerGeneratedAttribute]
public void set_ExtraData(IDictionary`2<string, JToken> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(GeneralAnalyticsLinkResponse left, GeneralAnalyticsLinkResponse right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(GeneralAnalyticsLinkResponse left, GeneralAnalyticsLinkResponse right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(AnalyticsLink other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(GeneralAnalyticsLinkResponse other);
    [NullableContextAttribute("1")]
[PreserveBaseOverridesAttribute]
[CompilerGeneratedAttribute]
public virtual override GeneralAnalyticsLinkResponse <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& Name, String& Dataverse);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Analytics.Link.S3ExternalAnalyticsLink : AnalyticsLink {
    [CompilerGeneratedAttribute]
private string <AccessKeyId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecretAccessKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Region>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <SessionToken>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ServiceEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string AccessKeyId { get; public set; }
    public string SecretAccessKey { get; public set; }
    public string Region { get; public set; }
    public string LinkType { get; }
    [NullableAttribute("2")]
public string SessionToken { get; public set; }
    [NullableAttribute("2")]
public string ServiceEndpoint { get; public set; }
    public S3ExternalAnalyticsLink(string Name, string Dataverse, string AccessKeyId, string SecretAccessKey, string Region);
    [CompilerGeneratedAttribute]
protected S3ExternalAnalyticsLink(S3ExternalAnalyticsLink original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_AccessKeyId();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AccessKeyId(string value);
    [CompilerGeneratedAttribute]
public string get_SecretAccessKey();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SecretAccessKey(string value);
    [CompilerGeneratedAttribute]
public string get_Region();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Region(string value);
    public virtual string get_LinkType();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_SessionToken();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SessionToken(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ServiceEndpoint();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ServiceEndpoint(string value);
    public S3ExternalAnalyticsLink WithSessionToken(string sessionToken);
    public S3ExternalAnalyticsLink WithServiceEndpoint(string serviceEndpoint);
    public S3ExternalAnalyticsLink WithSecretAccessKey(string secreteAccessKey);
    public S3ExternalAnalyticsLink WithRegion(string region);
    public virtual bool TryValidateForRequest(List`1& errors);
    [IteratorStateMachineAttribute("Couchbase.Management.Analytics.Link.S3ExternalAnalyticsLink/<GetFormData>d__30")]
protected virtual IEnumerable`1<KeyValuePair`2<string, string>> GetFormData();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(S3ExternalAnalyticsLink left, S3ExternalAnalyticsLink right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(S3ExternalAnalyticsLink left, S3ExternalAnalyticsLink right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(AnalyticsLink other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(S3ExternalAnalyticsLink other);
    [PreserveBaseOverridesAttribute]
[CompilerGeneratedAttribute]
public virtual override S3ExternalAnalyticsLink <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& Name, String& Dataverse, String& AccessKeyId, String& SecretAccessKey, String& Region);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, string>> <>n__0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Management.Analytics.Link.S3ExternalAnalyticsLinkResponse : AnalyticsLinkResponseRecord {
    [CompilerGeneratedAttribute]
private string <AccessKeyId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Region>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ServiceEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string AccessKeyId { get; public set; }
    public string Region { get; public set; }
    [NullableAttribute("2")]
[JsonPropertyAttribute("serviceEndpoint")]
public string ServiceEndpoint { get; public set; }
    public S3ExternalAnalyticsLinkResponse(string Name, string DataverseFromDataverse, string DataverseFromScope, string AccessKeyId, string Region);
    [CompilerGeneratedAttribute]
protected S3ExternalAnalyticsLinkResponse(S3ExternalAnalyticsLinkResponse original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_AccessKeyId();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AccessKeyId(string value);
    [CompilerGeneratedAttribute]
public string get_Region();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Region(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ServiceEndpoint();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ServiceEndpoint(string value);
    public S3ExternalAnalyticsLink AsRequest();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(S3ExternalAnalyticsLinkResponse left, S3ExternalAnalyticsLinkResponse right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(S3ExternalAnalyticsLinkResponse left, S3ExternalAnalyticsLinkResponse right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(AnalyticsLinkResponseRecord other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(S3ExternalAnalyticsLinkResponse other);
    [PreserveBaseOverridesAttribute]
[CompilerGeneratedAttribute]
public virtual override S3ExternalAnalyticsLinkResponse <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& Name, String& DataverseFromDataverse, String& DataverseFromScope, String& AccessKeyId, String& Region);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Analytics.ReplaceAnalyticsLinkOptions : AnalyticsLinkManagementOptions {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [CompilerGeneratedAttribute]
protected ReplaceAnalyticsLinkOptions(ReplaceAnalyticsLinkOptions original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(ReplaceAnalyticsLinkOptions left, ReplaceAnalyticsLinkOptions right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(ReplaceAnalyticsLinkOptions left, ReplaceAnalyticsLinkOptions right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(AnalyticsLinkManagementOptions other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(ReplaceAnalyticsLinkOptions other);
    [PreserveBaseOverridesAttribute]
[CompilerGeneratedAttribute]
public virtual override ReplaceAnalyticsLinkOptions <Clone>$();
}
public class Couchbase.Management.Buckets.BucketExistsException : CouchbaseException {
    public BucketExistsException(string bucketName);
}
public class Couchbase.Management.Buckets.BucketIsNotFlushableException : CouchbaseException {
    public BucketIsNotFlushableException(string bucketName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Management.Buckets.BucketManager : object {
    private IServiceUriProvider _serviceUriProvider;
    private ICouchbaseHttpClientFactory _httpClientFactory;
    private ILogger`1<BucketManager> _logger;
    private IRedactor _redactor;
    public BucketManager(IServiceUriProvider serviceUriProvider, ICouchbaseHttpClientFactory httpClientFactory, ILogger`1<BucketManager> logger, IRedactor redactor);
    private Uri GetUri(string bucketName);
    [AsyncStateMachineAttribute("Couchbase.Management.Buckets.BucketManager/<CreateBucketAsync>d__6")]
public sealed virtual Task CreateBucketAsync(BucketSettings settings, CreateBucketOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Buckets.BucketManager/<UpdateBucketAsync>d__7")]
public sealed virtual Task UpdateBucketAsync(BucketSettings settings, UpdateBucketOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Buckets.BucketManager/<DropBucketAsync>d__8")]
public sealed virtual Task DropBucketAsync(string bucketName, DropBucketOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Buckets.BucketManager/<FlushBucketAsync>d__9")]
public sealed virtual Task FlushBucketAsync(string bucketName, FlushBucketOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Buckets.BucketManager/<GetAllBucketsAsync>d__10")]
public sealed virtual Task`1<Dictionary`2<string, BucketSettings>> GetAllBucketsAsync(GetAllBucketsOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Buckets.BucketManager/<GetBucketAsync>d__11")]
public sealed virtual Task`1<BucketSettings> GetBucketAsync(string bucketName, GetBucketOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Couchbase.Management.Buckets.BucketManagerExtensions : object {
    [ExtensionAttribute]
public static Task CreateBucketAsync(IBucketManager bucketManager, BucketSettings settings);
    [ExtensionAttribute]
public static Task CreateBucketAsync(IBucketManager bucketManager, BucketSettings settings, Action`1<CreateBucketOptions> configureOptions);
    [ExtensionAttribute]
public static Task UpdateBucketAsync(IBucketManager bucketManager, BucketSettings settings);
    [ExtensionAttribute]
public static Task UpdateBucketAsync(IBucketManager bucketManager, BucketSettings settings, Action`1<UpdateBucketOptions> configureOptions);
    [ExtensionAttribute]
public static Task DropBucketAsync(IBucketManager bucketManager, string bucketName);
    [ExtensionAttribute]
public static Task DropBucketAsync(IBucketManager bucketManager, string bucketName, Action`1<DropBucketOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<BucketSettings> GetBucketAsync(IBucketManager bucketManager, string bucketName);
    [ExtensionAttribute]
public static Task`1<BucketSettings> GetBucketAsync(IBucketManager bucketManager, string bucketName, Action`1<GetBucketOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<Dictionary`2<string, BucketSettings>> GetAllBucketsAsync(IBucketManager bucketManager);
    [ExtensionAttribute]
public static Task`1<Dictionary`2<string, BucketSettings>> GetAllBucketsAsync(IBucketManager bucketManager, Action`1<GetAllBucketsOptions> configureOptions);
    [ExtensionAttribute]
public static Task FlushBucketAsync(IBucketManager bucketManager, string bucketName);
    [ExtensionAttribute]
public static Task FlushBucketAsync(IBucketManager bucketManager, string bucketName, Action`1<FlushBucketOptions> configureOptions);
}
public class Couchbase.Management.Buckets.BucketNotFoundException : CouchbaseException {
    public BucketNotFoundException(string bucketName);
}
[JsonConverterAttribute("Couchbase.Management.Buckets.BucketSettingsJsonConverter")]
public class Couchbase.Management.Buckets.BucketSettings : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private BucketType <BucketType>k__BackingField;
    [CompilerGeneratedAttribute]
private long <RamQuotaMB>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FlushEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ReplicaIndexes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ConflictResolutionType> <ConflictResolutionType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<EvictionPolicyType> <EvictionPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxTtl>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<CompressionMode> <CompressionMode>k__BackingField;
    [CompilerGeneratedAttribute]
private DurabilityLevel <DurabilityMinimumLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<StorageBackend> <StorageBackend>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <HistoryRetentionCollectionDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ulong> <HistoryRetentionBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <HistoryRetentionDuration>k__BackingField;
    public string Name { get; public set; }
    public BucketType BucketType { get; public set; }
    public long RamQuotaMB { get; public set; }
    public bool FlushEnabled { get; public set; }
    public int NumReplicas { get; public set; }
    public bool ReplicaIndexes { get; public set; }
    public Nullable`1<ConflictResolutionType> ConflictResolutionType { get; public set; }
    public Nullable`1<EvictionPolicyType> EvictionPolicy { get; public set; }
    [ObsoleteAttribute("Use EvictionPolicy instead.")]
public Nullable`1<EvictionPolicyType> EjectionMethod { get; public set; }
    public int MaxTtl { get; public set; }
    public Nullable`1<CompressionMode> CompressionMode { get; public set; }
    public DurabilityLevel DurabilityMinimumLevel { get; public set; }
    [InterfaceStabilityAttribute("1")]
public Nullable`1<StorageBackend> StorageBackend { get; public set; }
    public Nullable`1<bool> HistoryRetentionCollectionDefault { get; public set; }
    public Nullable`1<ulong> HistoryRetentionBytes { get; public set; }
    public Nullable`1<TimeSpan> HistoryRetentionDuration { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public BucketType get_BucketType();
    [CompilerGeneratedAttribute]
public void set_BucketType(BucketType value);
    [CompilerGeneratedAttribute]
public long get_RamQuotaMB();
    [CompilerGeneratedAttribute]
public void set_RamQuotaMB(long value);
    [CompilerGeneratedAttribute]
public bool get_FlushEnabled();
    [CompilerGeneratedAttribute]
public void set_FlushEnabled(bool value);
    [CompilerGeneratedAttribute]
public int get_NumReplicas();
    [CompilerGeneratedAttribute]
public void set_NumReplicas(int value);
    [CompilerGeneratedAttribute]
public bool get_ReplicaIndexes();
    [CompilerGeneratedAttribute]
public void set_ReplicaIndexes(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<ConflictResolutionType> get_ConflictResolutionType();
    [CompilerGeneratedAttribute]
public void set_ConflictResolutionType(Nullable`1<ConflictResolutionType> value);
    [CompilerGeneratedAttribute]
public Nullable`1<EvictionPolicyType> get_EvictionPolicy();
    [CompilerGeneratedAttribute]
public void set_EvictionPolicy(Nullable`1<EvictionPolicyType> value);
    public Nullable`1<EvictionPolicyType> get_EjectionMethod();
    public void set_EjectionMethod(Nullable`1<EvictionPolicyType> value);
    [CompilerGeneratedAttribute]
public int get_MaxTtl();
    [CompilerGeneratedAttribute]
public void set_MaxTtl(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<CompressionMode> get_CompressionMode();
    [CompilerGeneratedAttribute]
public void set_CompressionMode(Nullable`1<CompressionMode> value);
    [CompilerGeneratedAttribute]
public DurabilityLevel get_DurabilityMinimumLevel();
    [CompilerGeneratedAttribute]
public void set_DurabilityMinimumLevel(DurabilityLevel value);
    [CompilerGeneratedAttribute]
public Nullable`1<StorageBackend> get_StorageBackend();
    [CompilerGeneratedAttribute]
public void set_StorageBackend(Nullable`1<StorageBackend> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_HistoryRetentionCollectionDefault();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HistoryRetentionCollectionDefault(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<ulong> get_HistoryRetentionBytes();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HistoryRetentionBytes(Nullable`1<ulong> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_HistoryRetentionDuration();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HistoryRetentionDuration(Nullable`1<TimeSpan> value);
    internal IReadOnlyDictionary`2<string, string> ToFormValues();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Couchbase.Management.Buckets.BucketSettingsJsonConverter : JsonConverter`1<BucketSettings> {
    public virtual BucketSettings Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, BucketSettings value, JsonSerializerOptions options);
    private long ReadRamQuota(Utf8JsonReader& reader);
    private bool ReadFlushEnabled(Utf8JsonReader& reader);
    [NullableContextAttribute("0")]
private static T ReadEnumIfNotNull(Utf8JsonReader& reader);
}
public enum Couchbase.Management.Buckets.BucketType : Enum {
    public int value__;
    [DescriptionAttribute("membase")]
public static BucketType Couchbase;
    [DescriptionAttribute("memcached")]
public static BucketType Memcached;
    [DescriptionAttribute("ephemeral")]
public static BucketType Ephemeral;
}
public enum Couchbase.Management.Buckets.CompressionMode : Enum {
    public int value__;
    [DescriptionAttribute("off")]
public static CompressionMode Off;
    [DescriptionAttribute("passive")]
public static CompressionMode Passive;
    [DescriptionAttribute("active")]
public static CompressionMode Active;
}
public enum Couchbase.Management.Buckets.ConflictResolutionType : Enum {
    public int value__;
    [DescriptionAttribute("lww")]
public static ConflictResolutionType Timestamp;
    [DescriptionAttribute("seqno")]
public static ConflictResolutionType SequenceNumber;
    [InterfaceStabilityAttribute("2")]
[DescriptionAttribute("custom")]
public static ConflictResolutionType Custom;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Buckets.CreateBucketOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    public static ReadOnly DefaultReadOnly { get; }
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static CreateBucketOptions Default { get; }
    public static ReadOnly get_DefaultReadOnly();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public CreateBucketOptions CancellationToken(CancellationToken token);
    public CreateBucketOptions Timeout(TimeSpan timeout);
    public static CreateBucketOptions get_Default();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Buckets.DropBucketOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    public static ReadOnly DefaultReadOnly { get; }
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static DropBucketOptions Default { get; }
    public static ReadOnly get_DefaultReadOnly();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public DropBucketOptions CancellationToken(CancellationToken token);
    public DropBucketOptions Timeout(TimeSpan timeout);
    public static DropBucketOptions get_Default();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Buckets.DropCollectionOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; private set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static DropCollectionOptions Default { get; }
    public static ReadOnly DefaultReadOnly { get; }
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public DropCollectionOptions CancellationToken(CancellationToken token);
    public DropCollectionOptions Timeout(TimeSpan timeout);
    public static DropCollectionOptions get_Default();
    public static ReadOnly get_DefaultReadOnly();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
public enum Couchbase.Management.Buckets.EvictionPolicyType : Enum {
    public int value__;
    [DescriptionAttribute("fullEviction")]
public static EvictionPolicyType FullEviction;
    [DescriptionAttribute("valueOnly")]
public static EvictionPolicyType ValueOnly;
    [DescriptionAttribute("nruEviction")]
public static EvictionPolicyType NotRecentlyUsed;
    [DescriptionAttribute("noEviction")]
public static EvictionPolicyType NoEviction;
}
public class Couchbase.Management.Buckets.FlushBucketOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    public static ReadOnly DefaultReadOnly { get; }
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static FlushBucketOptions Default { get; }
    public static ReadOnly get_DefaultReadOnly();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public FlushBucketOptions CancellationToken(CancellationToken token);
    public FlushBucketOptions Timeout(TimeSpan timeout);
    public static FlushBucketOptions get_Default();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Buckets.GetAllBucketsOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    public static ReadOnly DefaultReadOnly { get; }
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static GetAllBucketsOptions Default { get; }
    public static ReadOnly get_DefaultReadOnly();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public GetAllBucketsOptions CancellationToken(CancellationToken token);
    public GetAllBucketsOptions Timeout(TimeSpan timeout);
    public static GetAllBucketsOptions get_Default();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Buckets.GetBucketOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    public static ReadOnly DefaultReadOnly { get; }
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static GetBucketOptions Default { get; }
    public static ReadOnly get_DefaultReadOnly();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public GetBucketOptions CancellationToken(CancellationToken token);
    public GetBucketOptions Timeout(TimeSpan timeout);
    public static GetBucketOptions get_Default();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
public interface Couchbase.Management.Buckets.IBucketManager {
    public abstract virtual Task CreateBucketAsync(BucketSettings settings, CreateBucketOptions options);
    public abstract virtual Task UpdateBucketAsync(BucketSettings settings, UpdateBucketOptions options);
    public abstract virtual Task DropBucketAsync(string bucketName, DropBucketOptions options);
    public abstract virtual Task`1<BucketSettings> GetBucketAsync(string bucketName, GetBucketOptions options);
    public abstract virtual Task`1<Dictionary`2<string, BucketSettings>> GetAllBucketsAsync(GetAllBucketsOptions options);
    public abstract virtual Task FlushBucketAsync(string bucketName, FlushBucketOptions options);
}
[InterfaceStabilityAttribute("1")]
public enum Couchbase.Management.Buckets.StorageBackend : Enum {
    public int value__;
    [DescriptionAttribute("couchstore")]
public static StorageBackend Couchstore;
    [DescriptionAttribute("magma")]
public static StorageBackend Magma;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Buckets.UpdateBucketOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    public static ReadOnly DefaultReadOnly { get; }
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static UpdateBucketOptions Default { get; }
    public static ReadOnly get_DefaultReadOnly();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public UpdateBucketOptions CancellationToken(CancellationToken token);
    public UpdateBucketOptions Timeout(TimeSpan timeout);
    public static UpdateBucketOptions get_Default();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
public class Couchbase.Management.Collections.CollectionExistsException : CouchbaseException {
    public CollectionExistsException(string message);
    public CollectionExistsException(string scopeName, string collectionName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Collections.CollectionExistsOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static CollectionExistsOptions Default { get; }
    public static ReadOnly DefaultReadOnly { get; }
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public CollectionExistsOptions CancellationToken(CancellationToken token);
    public CollectionExistsOptions Timeout(TimeSpan timeout);
    public static CollectionExistsOptions get_Default();
    public static ReadOnly get_DefaultReadOnly();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Management.Collections.CollectionManager : object {
    private string _bucketName;
    private BucketConfig modreq(System.Runtime.CompilerServices.IsVolatile) _bucketConfig;
    private IServiceUriProvider _serviceUriProvider;
    private ICouchbaseHttpClientFactory _httpClientFactory;
    private ILogger`1<CollectionManager> _logger;
    private IRedactor _redactor;
    public CollectionManager(string bucketName, BucketConfig bucketConfig, IServiceUriProvider serviceUriProvider, ICouchbaseHttpClientFactory httpClientFactory, ILogger`1<CollectionManager> logger, IRedactor redactor);
    internal Uri GetUri(string path);
    [AsyncStateMachineAttribute("Couchbase.Management.Collections.CollectionManager/<CollectionExistsAsync>d__9")]
public Task`1<bool> CollectionExistsAsync(CollectionSpec spec, CollectionExistsOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Collections.CollectionManager/<ScopeExistsAsync>d__10")]
public Task`1<bool> ScopeExistsAsync(string scopeName, ScopeExistsOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Collections.CollectionManager/<GetScopeAsync>d__11")]
[ObsoleteAttribute("Use GetAllScopesAsync instead.")]
public sealed virtual Task`1<ScopeSpec> GetScopeAsync(string scopeName, GetScopeOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Collections.CollectionManager/<GetAllScopesAsync>d__12")]
public sealed virtual Task`1<IEnumerable`1<ScopeSpec>> GetAllScopesAsync(GetAllScopesOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Collections.CollectionManager/<CreateCollectionAsync>d__13")]
public sealed virtual Task CreateCollectionAsync(string scopeName, string collectionName, CreateCollectionSettings settings, CreateCollectionOptions options);
    public sealed virtual Task CreateCollectionAsync(CollectionSpec spec, CreateCollectionOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Collections.CollectionManager/<DropCollectionAsync>d__15")]
public sealed virtual Task DropCollectionAsync(string scopeName, string collectionName, DropCollectionOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Collections.CollectionManager/<DropCollectionAsync>d__16")]
[ObsoleteAttribute("Use other overloaded DropCollectionAsync() method that does not take a CollectionSpec instead.")]
public sealed virtual Task DropCollectionAsync(CollectionSpec spec, DropCollectionOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Collections.CollectionManager/<CreateScopeAsync>d__17")]
public sealed virtual Task CreateScopeAsync(string scopeName, CreateScopeOptions options);
    [ObsoleteAttribute("Use other overloaded CreateScopeAsync method that does not take a ScopeSpec instead.")]
public sealed virtual Task CreateScopeAsync(ScopeSpec spec, CreateScopeOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Collections.CollectionManager/<DropScopeAsync>d__19")]
public sealed virtual Task DropScopeAsync(string scopeName, DropScopeOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Collections.CollectionManager/<UpdateCollectionAsync>d__20")]
public sealed virtual Task UpdateCollectionAsync(string scopeName, string collectionName, UpdateCollectionSettings settings, UpdateCollectionOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Couchbase.Management.Collections.CollectionManagerExtensions : object {
    [ExtensionAttribute]
public static Task CreateScopeAsync(ICouchbaseCollectionManager manager, string scopeName);
    [ExtensionAttribute]
[ObsoleteAttribute("Use other overloaded CreateScopeAsync method that does not take a ScopeSpec instead.")]
public static Task CreateScopeAsync(ICouchbaseCollectionManager manager, ScopeSpec scopeSpec);
    [ExtensionAttribute]
public static Task CreateScopeAsync(ICouchbaseCollectionManager manager, string scopeName, Action`1<CreateScopeOptions> configureOptions);
    [ExtensionAttribute]
[ObsoleteAttribute("Use other overloaded CreateScopeAsync method that does not take a ScopeSpec instead.")]
public static Task CreateScopeAsync(ICouchbaseCollectionManager manager, ScopeSpec scopeSpec, Action`1<CreateScopeOptions> configureOptions);
    [ExtensionAttribute]
[ObsoleteAttribute("Use GetAllScopesAsync instead.")]
public static Task`1<ScopeSpec> GetScopeAsync(ICouchbaseCollectionManager manager, string scopeName);
    [ExtensionAttribute]
[ObsoleteAttribute("Use GetAllScopesAsync instead.")]
public static Task`1<ScopeSpec> GetScopeAsync(ICouchbaseCollectionManager manager, string scopeName, Action`1<GetScopeOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<IEnumerable`1<ScopeSpec>> GetAllScopesAsync(ICouchbaseCollectionManager manager);
    [ExtensionAttribute]
public static Task`1<IEnumerable`1<ScopeSpec>> GetAllScopesAsync(ICouchbaseCollectionManager manager, Action`1<GetAllScopesOptions> configureOptions);
    [ExtensionAttribute]
[ObsoleteAttribute("Use the overload with scope and collection names instead.")]
public static Task CreateCollectionAsync(ICouchbaseCollectionManager manager, CollectionSpec spec);
    [ExtensionAttribute]
public static Task CreateCollectionAsync(ICouchbaseCollectionManager manager, string scopeName, string collectionName, CreateCollectionSettings settings, Action`1<CreateCollectionOptions> configureOptions);
    [ExtensionAttribute]
[ObsoleteAttribute("Use the overload with CreateCollectionSettings instead.")]
public static Task CreateCollectionAsync(ICouchbaseCollectionManager manager, CollectionSpec spec, Action`1<CreateCollectionOptions> configureOptions);
    [ExtensionAttribute]
[ObsoleteAttribute("Use the overload that uses scope and collection names instead.")]
public static Task DropCollectionAsync(ICouchbaseCollectionManager manager, CollectionSpec spec);
    [ExtensionAttribute]
public static Task DropCollectionAsync(ICouchbaseCollectionManager manager, string scopeName, string collectionName, Action`1<DropCollectionOptions> configureOptions);
    [ExtensionAttribute]
[ObsoleteAttribute("Use the overload that uses scope and collection names instead.")]
public static Task DropCollectionAsync(ICouchbaseCollectionManager manager, CollectionSpec spec, Action`1<DropCollectionOptions> configureOptions);
    [ExtensionAttribute]
public static Task DropScopeAsync(ICouchbaseCollectionManager manager, string scopeName);
    [ExtensionAttribute]
public static Task DropScopeAsync(ICouchbaseCollectionManager manager, string scopeName, Action`1<DropScopeOptions> configureOptions);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Management.Collections.CollectionManagerFactory : object {
    private IServiceProvider _serviceProvider;
    public CollectionManagerFactory(IServiceProvider serviceProvider);
    public sealed virtual ICouchbaseCollectionManager Create(string bucketName, BucketConfig bucketConfig);
}
public class Couchbase.Management.Collections.CollectionNotFoundException : CouchbaseException {
    public CollectionNotFoundException(string message);
    public CollectionNotFoundException(string scopeName, string collectionName);
}
internal class Couchbase.Management.Collections.CollectionQueryIndexManagerFactory : object {
    private IQueryIndexManager _queryIndexManager;
    public CollectionQueryIndexManagerFactory(IQueryIndexManager queryIndexManager);
    public sealed virtual ICollectionQueryIndexManager Create(IBucket bucket, ICouchbaseCollection collection);
}
public class Couchbase.Management.Collections.CollectionSpec : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScopeName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <MaxExpiry>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <History>k__BackingField;
    public string Name { get; }
    public string ScopeName { get; }
    [InterfaceStabilityAttribute("2")]
public Nullable`1<TimeSpan> MaxExpiry { get; public set; }
    public Nullable`1<bool> History { get; public set; }
    public CollectionSpec(string scopeName, string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_ScopeName();
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_MaxExpiry();
    [CompilerGeneratedAttribute]
public void set_MaxExpiry(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_History();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_History(Nullable`1<bool> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Collections.CreateCollectionOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; private set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static CreateCollectionOptions Default { get; }
    public static ReadOnly DefaultReadOnly { get; }
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public CreateCollectionOptions CancellationToken(CancellationToken token);
    public CreateCollectionOptions Timeout(TimeSpan timeout);
    public static CreateCollectionOptions get_Default();
    public static ReadOnly get_DefaultReadOnly();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
public class Couchbase.Management.Collections.CreateCollectionSettings : object {
    public static TimeSpan NoExpiry;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <MaxExpiry>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <History>k__BackingField;
    public Nullable`1<TimeSpan> MaxExpiry { get; public set; }
    public Nullable`1<bool> History { get; public set; }
    public static CreateCollectionSettings Default { get; }
    public CreateCollectionSettings(Nullable`1<TimeSpan> expiry, Nullable`1<bool> history);
    private static CreateCollectionSettings();
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_MaxExpiry();
    [CompilerGeneratedAttribute]
public void set_MaxExpiry(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_History();
    [CompilerGeneratedAttribute]
public void set_History(Nullable`1<bool> value);
    public static CreateCollectionSettings get_Default();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Collections.CreateScopeOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static CreateScopeOptions Default { get; }
    public static ReadOnly DefaultReadOnly { get; }
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public CreateScopeOptions CancellationToken(CancellationToken token);
    public CreateScopeOptions Timeout(TimeSpan timeout);
    public static CreateScopeOptions get_Default();
    public static ReadOnly get_DefaultReadOnly();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Collections.DropScopeOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static DropScopeOptions Default { get; }
    public static ReadOnly DefaultReadOnly { get; }
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public DropScopeOptions CancellationToken(CancellationToken token);
    public DropScopeOptions Timeout(TimeSpan timeout);
    public static DropScopeOptions get_Default();
    public static ReadOnly get_DefaultReadOnly();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Collections.GetAllScopesOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static GetAllScopesOptions Default { get; }
    public static ReadOnly DefaultReadOnly { get; }
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public GetAllScopesOptions CancellationToken(CancellationToken token);
    public GetAllScopesOptions Timeout(TimeSpan timeout);
    public static GetAllScopesOptions get_Default();
    public static ReadOnly get_DefaultReadOnly();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Collections.GetScopeOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static GetScopeOptions Default { get; }
    public static ReadOnly DefaultReadOnly { get; }
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public GetScopeOptions CancellationToken(CancellationToken token);
    public GetScopeOptions Timeout(TimeSpan timeout);
    public static GetScopeOptions get_Default();
    public static ReadOnly get_DefaultReadOnly();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
internal interface Couchbase.Management.Collections.ICollectionManagerFactory {
    public abstract virtual ICouchbaseCollectionManager Create(string bucketName, BucketConfig bucketConfig);
}
[NullableContextAttribute("1")]
public interface Couchbase.Management.Collections.ICouchbaseCollectionManager {
    [ObsoleteAttribute("Use GetAllScopesAsync instead.")]
public abstract virtual Task`1<ScopeSpec> GetScopeAsync(string scopeName, GetScopeOptions options);
    public abstract virtual Task`1<IEnumerable`1<ScopeSpec>> GetAllScopesAsync(GetAllScopesOptions options);
    public abstract virtual Task CreateCollectionAsync(string scopeName, string collectionName, CreateCollectionSettings settings, CreateCollectionOptions options);
    [ObsoleteAttribute("Use the overload with CreateCollectionSettings instead.")]
public abstract virtual Task CreateCollectionAsync(CollectionSpec spec, CreateCollectionOptions options);
    public abstract virtual Task DropCollectionAsync(string scopeName, string collectionName, DropCollectionOptions options);
    [ObsoleteAttribute("Use the overload that takes scope and collection names instead.")]
public abstract virtual Task DropCollectionAsync(CollectionSpec spec, DropCollectionOptions options);
    [ObsoleteAttribute("Use other overloaded CreateScopeAsync method that does not take a ScopeSpec instead.")]
public abstract virtual Task CreateScopeAsync(ScopeSpec spec, CreateScopeOptions options);
    public abstract virtual Task CreateScopeAsync(string scopeName, CreateScopeOptions options);
    public abstract virtual Task DropScopeAsync(string scopeName, DropScopeOptions options);
    public abstract virtual Task UpdateCollectionAsync(string scopeName, string collectionName, UpdateCollectionSettings settings, UpdateCollectionOptions options);
}
public class Couchbase.Management.Collections.ScopeExistsException : CouchbaseException {
    public ScopeExistsException(string scopeName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Collections.ScopeExistsOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static ScopeExistsOptions Default { get; }
    public static ReadOnly DefaultReadOnly { get; }
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public ScopeExistsOptions CancellationToken(CancellationToken token);
    public ScopeExistsOptions Timeout(TimeSpan timeout);
    public static ScopeExistsOptions get_Default();
    public static ReadOnly get_DefaultReadOnly();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
public class Couchbase.Management.Collections.ScopeSpec : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<CollectionSpec> <Collections>k__BackingField;
    public string Name { get; }
    public IEnumerable`1<CollectionSpec> Collections { get; public set; }
    public ScopeSpec(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public IEnumerable`1<CollectionSpec> get_Collections();
    [CompilerGeneratedAttribute]
public void set_Collections(IEnumerable`1<CollectionSpec> value);
}
public class Couchbase.Management.Collections.UpdateCollectionOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; private set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static UpdateCollectionOptions Default { get; }
    public static ReadOnly DefaultReadOnly { get; }
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public UpdateCollectionOptions CancellationToken(CancellationToken token);
    public UpdateCollectionOptions Timeout(TimeSpan timeout);
    public static UpdateCollectionOptions get_Default();
    public static ReadOnly get_DefaultReadOnly();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
public class Couchbase.Management.Collections.UpdateCollectionSettings : object {
    public static TimeSpan NoExpiry;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <MaxExpiry>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <History>k__BackingField;
    public Nullable`1<TimeSpan> MaxExpiry { get; public set; }
    public Nullable`1<bool> History { get; public set; }
    public static UpdateCollectionSettings Default { get; }
    public UpdateCollectionSettings(Nullable`1<TimeSpan> expiry, Nullable`1<bool> history);
    private static UpdateCollectionSettings();
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_MaxExpiry();
    [CompilerGeneratedAttribute]
public void set_MaxExpiry(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_History();
    [CompilerGeneratedAttribute]
public void set_History(Nullable`1<bool> value);
    public static UpdateCollectionSettings get_Default();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Eventing.DeployFunctionOptions : FunctionOptionsBase {
    [CompilerGeneratedAttribute]
private static DeployFunctionOptions <Default>k__BackingField;
    internal static DeployFunctionOptions Default { get; }
    private static DeployFunctionOptions();
    [CompilerGeneratedAttribute]
internal static DeployFunctionOptions get_Default();
}
public class Couchbase.Management.Eventing.DeploymentConfig : object {
    [CompilerGeneratedAttribute]
private string <SourceBucket>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SourceScope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SourceCollection>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MetadataBucket>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MetadataScope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MetadataCollection>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<EventingFunctionBucketBinding> <BucketBindings>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<EventingFunctionUrlBinding> <UrlBindings>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<EventingFunctionConstantBinding> <ConstantBindings>k__BackingField;
    [JsonPropertyNameAttribute("source_bucket")]
[JsonPropertyOrderAttribute("3")]
public string SourceBucket { get; public set; }
    [JsonPropertyNameAttribute("source_scope")]
[JsonPropertyOrderAttribute("4")]
public string SourceScope { get; public set; }
    [JsonPropertyNameAttribute("source_collection")]
[JsonPropertyOrderAttribute("5")]
public string SourceCollection { get; public set; }
    [JsonPropertyNameAttribute("metadata_bucket")]
[JsonPropertyOrderAttribute("6")]
public string MetadataBucket { get; public set; }
    [JsonPropertyNameAttribute("metadata_scope")]
[JsonPropertyOrderAttribute("7")]
public string MetadataScope { get; public set; }
    [JsonPropertyNameAttribute("metadata_collection")]
[JsonPropertyOrderAttribute("8")]
public string MetadataCollection { get; public set; }
    [JsonPropertyNameAttribute("buckets")]
[JsonPropertyOrderAttribute("0")]
public List`1<EventingFunctionBucketBinding> BucketBindings { get; public set; }
    [JsonPropertyNameAttribute("curl")]
[JsonPropertyOrderAttribute("1")]
public List`1<EventingFunctionUrlBinding> UrlBindings { get; public set; }
    [JsonPropertyNameAttribute("constants")]
[JsonPropertyOrderAttribute("2")]
public List`1<EventingFunctionConstantBinding> ConstantBindings { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SourceBucket();
    [CompilerGeneratedAttribute]
public void set_SourceBucket(string value);
    [CompilerGeneratedAttribute]
public string get_SourceScope();
    [CompilerGeneratedAttribute]
public void set_SourceScope(string value);
    [CompilerGeneratedAttribute]
public string get_SourceCollection();
    [CompilerGeneratedAttribute]
public void set_SourceCollection(string value);
    [CompilerGeneratedAttribute]
public string get_MetadataBucket();
    [CompilerGeneratedAttribute]
public void set_MetadataBucket(string value);
    [CompilerGeneratedAttribute]
public string get_MetadataScope();
    [CompilerGeneratedAttribute]
public void set_MetadataScope(string value);
    [CompilerGeneratedAttribute]
public string get_MetadataCollection();
    [CompilerGeneratedAttribute]
public void set_MetadataCollection(string value);
    [CompilerGeneratedAttribute]
public List`1<EventingFunctionBucketBinding> get_BucketBindings();
    [CompilerGeneratedAttribute]
public void set_BucketBindings(List`1<EventingFunctionBucketBinding> value);
    [CompilerGeneratedAttribute]
public List`1<EventingFunctionUrlBinding> get_UrlBindings();
    [CompilerGeneratedAttribute]
public void set_UrlBindings(List`1<EventingFunctionUrlBinding> value);
    [CompilerGeneratedAttribute]
public List`1<EventingFunctionConstantBinding> get_ConstantBindings();
    [CompilerGeneratedAttribute]
public void set_ConstantBindings(List`1<EventingFunctionConstantBinding> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Eventing.DropFunctionOptions : FunctionOptionsBase {
    [CompilerGeneratedAttribute]
private static DropFunctionOptions <Default>k__BackingField;
    internal static DropFunctionOptions Default { get; }
    private static DropFunctionOptions();
    [CompilerGeneratedAttribute]
internal static DropFunctionOptions get_Default();
}
[JsonConverterAttribute("Couchbase.Management.Eventing.Internal.EventingFunctionConverter")]
public class Couchbase.Management.Eventing.EventingFunction : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnforceSchema>k__BackingField;
    [CompilerGeneratedAttribute]
private long <HandlerUuid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FunctionInstanceId>k__BackingField;
    [CompilerGeneratedAttribute]
private EventingFunctionSettings <Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentConfig <DeploymentConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private FunctionScope <FunctionScope>k__BackingField;
    public string Name { get; public set; }
    public string Code { get; public set; }
    public string Version { get; internal set; }
    public bool EnforceSchema { get; public set; }
    public long HandlerUuid { get; internal set; }
    public string FunctionInstanceId { get; internal set; }
    public EventingFunctionKeyspace MetaDataKeySpace { get; public set; }
    public EventingFunctionKeyspace SourceKeySpace { get; public set; }
    public EventingFunctionSettings Settings { get; public set; }
    internal DeploymentConfig DeploymentConfig { get; internal set; }
    internal FunctionScope FunctionScope { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
internal void set_Version(string value);
    [CompilerGeneratedAttribute]
public bool get_EnforceSchema();
    [CompilerGeneratedAttribute]
public void set_EnforceSchema(bool value);
    [CompilerGeneratedAttribute]
public long get_HandlerUuid();
    [CompilerGeneratedAttribute]
internal void set_HandlerUuid(long value);
    [CompilerGeneratedAttribute]
public string get_FunctionInstanceId();
    [CompilerGeneratedAttribute]
internal void set_FunctionInstanceId(string value);
    public EventingFunctionKeyspace get_MetaDataKeySpace();
    public void set_MetaDataKeySpace(EventingFunctionKeyspace value);
    public EventingFunctionKeyspace get_SourceKeySpace();
    public void set_SourceKeySpace(EventingFunctionKeyspace value);
    [CompilerGeneratedAttribute]
public EventingFunctionSettings get_Settings();
    [CompilerGeneratedAttribute]
public void set_Settings(EventingFunctionSettings value);
    [CompilerGeneratedAttribute]
internal DeploymentConfig get_DeploymentConfig();
    [CompilerGeneratedAttribute]
internal void set_DeploymentConfig(DeploymentConfig value);
    [CompilerGeneratedAttribute]
internal FunctionScope get_FunctionScope();
    [CompilerGeneratedAttribute]
internal Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FunctionScope(FunctionScope value);
    public string ToJson();
    public string ToJson(EventingFunctionKeyspace managementScope);
}
public enum Couchbase.Management.Eventing.EventingFunctionBucketAccess : Enum {
    public int value__;
    [DescriptionAttribute("r")]
public static EventingFunctionBucketAccess ReadOnly;
    [DescriptionAttribute("rw")]
public static EventingFunctionBucketAccess ReadWrite;
}
[JsonConverterAttribute("Couchbase.Management.Eventing.Internal.EventingFunctionBucketBindingConverter")]
public class Couchbase.Management.Eventing.EventingFunctionBucketBinding : object {
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BucketName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScopeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CollectionName>k__BackingField;
    [CompilerGeneratedAttribute]
private EventingFunctionBucketAccess <Access>k__BackingField;
    public string Alias { get; public set; }
    internal string BucketName { get; internal set; }
    internal string ScopeName { get; internal set; }
    internal string CollectionName { get; internal set; }
    public EventingFunctionKeyspace Name { get; }
    public EventingFunctionBucketAccess Access { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
public void set_Alias(string value);
    [CompilerGeneratedAttribute]
internal string get_BucketName();
    [CompilerGeneratedAttribute]
internal void set_BucketName(string value);
    [CompilerGeneratedAttribute]
internal string get_ScopeName();
    [CompilerGeneratedAttribute]
internal void set_ScopeName(string value);
    [CompilerGeneratedAttribute]
internal string get_CollectionName();
    [CompilerGeneratedAttribute]
internal void set_CollectionName(string value);
    public EventingFunctionKeyspace get_Name();
    [CompilerGeneratedAttribute]
public EventingFunctionBucketAccess get_Access();
    [CompilerGeneratedAttribute]
public void set_Access(EventingFunctionBucketAccess value);
}
public class Couchbase.Management.Eventing.EventingFunctionCompilationFailureException : CouchbaseException {
    public EventingFunctionCompilationFailureException(string message);
}
public class Couchbase.Management.Eventing.EventingFunctionConstantBinding : object {
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Literal>k__BackingField;
    [JsonPropertyNameAttribute("value")]
public string Alias { get; public set; }
    [JsonPropertyNameAttribute("literal")]
public string Literal { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
public void set_Alias(string value);
    [CompilerGeneratedAttribute]
public string get_Literal();
    [CompilerGeneratedAttribute]
public void set_Literal(string value);
}
public enum Couchbase.Management.Eventing.EventingFunctionDcpBoundary : Enum {
    public int value__;
    [DescriptionAttribute("everything")]
public static EventingFunctionDcpBoundary Everything;
    [DescriptionAttribute("from_now")]
public static EventingFunctionDcpBoundary FromNow;
}
public class Couchbase.Management.Eventing.EventingFunctionDeployedException : CouchbaseException {
    public EventingFunctionDeployedException(string message);
}
public enum Couchbase.Management.Eventing.EventingFunctionDeploymentStatus : Enum {
    public int value__;
    public static EventingFunctionDeploymentStatus Deployed;
    public static EventingFunctionDeploymentStatus Undeployed;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("1")]
public class Couchbase.Management.Eventing.EventingFunctionErrorContext : object {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Info>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RetryReason> <RetryReasons>k__BackingField;
    public string Message { get; public set; }
    [JsonIgnoreAttribute]
public object Info { get; public set; }
    public List`1<RetryReason> RetryReasons { get; internal set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public object get_Info();
    [CompilerGeneratedAttribute]
public void set_Info(object value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<RetryReason> get_RetryReasons();
    [CompilerGeneratedAttribute]
internal void set_RetryReasons(List`1<RetryReason> value);
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[ExtensionAttribute]
internal static class Couchbase.Management.Eventing.EventingFunctionExceptionExtensions : object {
    [ExtensionAttribute]
public static void HandleException(Exception e);
}
public class Couchbase.Management.Eventing.EventingFunctionIdenticalKeyspaceException : CouchbaseException {
    public EventingFunctionIdenticalKeyspaceException(string message);
}
public class Couchbase.Management.Eventing.EventingFunctionKeyspace : object {
    [CompilerGeneratedAttribute]
private string <Bucket>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Collection>k__BackingField;
    public string Bucket { get; }
    public string Scope { get; }
    public string Collection { get; }
    internal EventingFunctionKeyspace(string bucketName, string scopeName, string collectionName);
    [CompilerGeneratedAttribute]
public string get_Bucket();
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public string get_Collection();
}
public enum Couchbase.Management.Eventing.EventingFunctionLanguageCompatibility : Enum {
    public int value__;
    [DescriptionAttribute("6.0.0")]
public static EventingFunctionLanguageCompatibility Version_6_0_0;
    [DescriptionAttribute("6.5.0")]
public static EventingFunctionLanguageCompatibility Version_6_5_0;
    [DescriptionAttribute("6.6.2")]
public static EventingFunctionLanguageCompatibility Version_6_6_2;
}
public enum Couchbase.Management.Eventing.EventingFunctionLogLevel : Enum {
    public int value__;
    [DescriptionAttribute("INFO")]
public static EventingFunctionLogLevel Info;
    [DescriptionAttribute("ERROR")]
public static EventingFunctionLogLevel Error;
    [DescriptionAttribute("WARNING")]
public static EventingFunctionLogLevel Warning;
    [DescriptionAttribute("DEBUG")]
public static EventingFunctionLogLevel Debug;
    [DescriptionAttribute("TRACE")]
public static EventingFunctionLogLevel Trace;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Management.Eventing.EventingFunctionManager : object {
    private IEventingFunctionService _service;
    private ILogger`1<EventingFunctionManager> _logger;
    private IRequestTracer _tracer;
    [NullableAttribute("2")]
private EventingFunctionKeyspace _managementScope;
    public EventingFunctionManager(IEventingFunctionService service, ILogger`1<EventingFunctionManager> logger, IRequestTracer tracer, EventingFunctionKeyspace managementScope);
    private CancellationTokenPairSource CreateRetryTimeoutCancellationTokenSource(FunctionOptionsBase options);
    [AsyncStateMachineAttribute("Couchbase.Management.Eventing.EventingFunctionManager/<UpsertFunctionAsync>d__6")]
public sealed virtual Task UpsertFunctionAsync(EventingFunction function, UpsertFunctionOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Eventing.EventingFunctionManager/<DropFunctionAsync>d__7")]
public sealed virtual Task DropFunctionAsync(string name, DropFunctionOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Eventing.EventingFunctionManager/<GetAllFunctionsAsync>d__8")]
public sealed virtual Task`1<IEnumerable`1<EventingFunction>> GetAllFunctionsAsync(GetAllFunctionOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Eventing.EventingFunctionManager/<GetFunctionAsync>d__9")]
public sealed virtual Task`1<EventingFunction> GetFunctionAsync(string name, GetFunctionOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Eventing.EventingFunctionManager/<PauseFunctionAsync>d__10")]
public sealed virtual Task PauseFunctionAsync(string name, PauseFunctionOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Eventing.EventingFunctionManager/<ResumeFunctionAsync>d__11")]
public sealed virtual Task ResumeFunctionAsync(string name, ResumeFunctionOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Eventing.EventingFunctionManager/<DeployFunctionAsync>d__12")]
public sealed virtual Task DeployFunctionAsync(string name, DeployFunctionOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Eventing.EventingFunctionManager/<UndeployFunctionAsync>d__13")]
public sealed virtual Task UndeployFunctionAsync(string name, UndeployFunctionOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Eventing.EventingFunctionManager/<FunctionsStatus>d__14")]
public sealed virtual Task`1<EventingStatus> FunctionsStatus(FunctionsStatusOptions options);
    private IRequestSpan RootSpan(string operation, FunctionOptionsBase options);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <GetAllFunctionsAsync>b__8_0(EventingFunction eventingFunction);
}
public class Couchbase.Management.Eventing.EventingFunctionNotBootstrappedException : CouchbaseException {
    public EventingFunctionNotBootstrappedException(string message);
}
public class Couchbase.Management.Eventing.EventingFunctionNotDeployedException : CouchbaseException {
    public EventingFunctionNotDeployedException(string message);
}
public class Couchbase.Management.Eventing.EventingFunctionNotFoundException : CouchbaseException {
    public EventingFunctionNotFoundException(string message);
}
public enum Couchbase.Management.Eventing.EventingFunctionProcessingStatus : Enum {
    public int value__;
    public static EventingFunctionProcessingStatus Running;
    public static EventingFunctionProcessingStatus Paused;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Management.Eventing.EventingFunctionService : HttpServiceBase {
    private IServiceUriProvider _serviceUriProvider;
    private ILogger`1<EventingFunctionService> _logger;
    private IRedactor _redactor;
    public EventingFunctionService(ICouchbaseHttpClientFactory httpClientFactory, IServiceUriProvider serviceUriProvider, ILogger`1<EventingFunctionService> logger, IRedactor redactor);
    private Uri GetUri(string path, EventingFunctionKeyspace managementScope);
    public sealed virtual Task`1<HttpResponseMessage> GetAsync(string path, IRequestSpan parentSpan, IRequestSpan encodeSpan, CancellationToken token, EventingFunctionKeyspace managementScope);
    public sealed virtual Task`1<HttpResponseMessage> PostAsync(string path, IRequestSpan parentSpan, IRequestSpan encodeSpan, CancellationToken token, EventingFunction eventingFunction, EventingFunctionKeyspace managementScope);
    public sealed virtual Task`1<HttpResponseMessage> DeleteAsync(string path, IRequestSpan parentSpan, IRequestSpan encodeSpan, CancellationToken token, EventingFunctionKeyspace managementScope);
}
[JsonConverterAttribute("Couchbase.Management.Eventing.Internal.EventingFunctionSettingsConverter")]
public class Couchbase.Management.Eventing.EventingFunctionSettings : object {
    [CompilerGeneratedAttribute]
private int <CppWorkerThreadCount>k__BackingField;
    [CompilerGeneratedAttribute]
private EventingFunctionDcpBoundary <DcpStreamBoundary>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private EventingFunctionDeploymentStatus <DeploymentStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private EventingFunctionProcessingStatus <ProcessingStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private EventingFunctionLanguageCompatibility <LanguageCompatibility>k__BackingField;
    [CompilerGeneratedAttribute]
private EventingFunctionLogLevel <LogLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ExecutionTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LcbInstCapacity>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LcbRetryCount>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <LcbTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryScanConsistency <QueryConsistency>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumTimerPartitions>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SockBatchSize>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TickDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TimerContextSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserPrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private int <BucketCacheSize>k__BackingField;
    [CompilerGeneratedAttribute]
private int <BucketCacheAge>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CurlMaxAllowedRespSize>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <QueryPrepareAll>k__BackingField;
    [CompilerGeneratedAttribute]
private int <WorkerCount>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <HandlerHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <HandlerFooters>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableAppLogRotation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppLogDir>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AppLogMaxSize>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AppLogMaxFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CheckpointInterval>k__BackingField;
    public int CppWorkerThreadCount { get; public set; }
    public EventingFunctionDcpBoundary DcpStreamBoundary { get; public set; }
    public string Description { get; public set; }
    public EventingFunctionDeploymentStatus DeploymentStatus { get; public set; }
    public EventingFunctionProcessingStatus ProcessingStatus { get; public set; }
    public EventingFunctionLanguageCompatibility LanguageCompatibility { get; public set; }
    public EventingFunctionLogLevel LogLevel { get; public set; }
    public TimeSpan ExecutionTimeout { get; public set; }
    public int LcbInstCapacity { get; public set; }
    private int LcbRetryCount { get; private set; }
    public TimeSpan LcbTimeout { get; public set; }
    public QueryScanConsistency QueryConsistency { get; public set; }
    public int NumTimerPartitions { get; public set; }
    public int SockBatchSize { get; public set; }
    public int TickDuration { get; public set; }
    public int TimerContextSize { get; public set; }
    public string UserPrefix { get; public set; }
    public int BucketCacheSize { get; public set; }
    public int BucketCacheAge { get; public set; }
    public int CurlMaxAllowedRespSize { get; public set; }
    public bool QueryPrepareAll { get; public set; }
    public int WorkerCount { get; public set; }
    public List`1<string> HandlerHeaders { get; public set; }
    public List`1<string> HandlerFooters { get; public set; }
    public bool EnableAppLogRotation { get; public set; }
    public string AppLogDir { get; public set; }
    public int AppLogMaxSize { get; public set; }
    public int AppLogMaxFiles { get; public set; }
    public int CheckpointInterval { get; public set; }
    [CompilerGeneratedAttribute]
public int get_CppWorkerThreadCount();
    [CompilerGeneratedAttribute]
public void set_CppWorkerThreadCount(int value);
    [CompilerGeneratedAttribute]
public EventingFunctionDcpBoundary get_DcpStreamBoundary();
    [CompilerGeneratedAttribute]
public void set_DcpStreamBoundary(EventingFunctionDcpBoundary value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public EventingFunctionDeploymentStatus get_DeploymentStatus();
    [CompilerGeneratedAttribute]
public void set_DeploymentStatus(EventingFunctionDeploymentStatus value);
    [CompilerGeneratedAttribute]
public EventingFunctionProcessingStatus get_ProcessingStatus();
    [CompilerGeneratedAttribute]
public void set_ProcessingStatus(EventingFunctionProcessingStatus value);
    [CompilerGeneratedAttribute]
public EventingFunctionLanguageCompatibility get_LanguageCompatibility();
    [CompilerGeneratedAttribute]
public void set_LanguageCompatibility(EventingFunctionLanguageCompatibility value);
    [CompilerGeneratedAttribute]
public EventingFunctionLogLevel get_LogLevel();
    [CompilerGeneratedAttribute]
public void set_LogLevel(EventingFunctionLogLevel value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ExecutionTimeout();
    [CompilerGeneratedAttribute]
public void set_ExecutionTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public int get_LcbInstCapacity();
    [CompilerGeneratedAttribute]
public void set_LcbInstCapacity(int value);
    [CompilerGeneratedAttribute]
private int get_LcbRetryCount();
    [CompilerGeneratedAttribute]
private void set_LcbRetryCount(int value);
    [CompilerGeneratedAttribute]
public TimeSpan get_LcbTimeout();
    [CompilerGeneratedAttribute]
public void set_LcbTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public QueryScanConsistency get_QueryConsistency();
    [CompilerGeneratedAttribute]
public void set_QueryConsistency(QueryScanConsistency value);
    [CompilerGeneratedAttribute]
public int get_NumTimerPartitions();
    [CompilerGeneratedAttribute]
public void set_NumTimerPartitions(int value);
    [CompilerGeneratedAttribute]
public int get_SockBatchSize();
    [CompilerGeneratedAttribute]
public void set_SockBatchSize(int value);
    [CompilerGeneratedAttribute]
public int get_TickDuration();
    [CompilerGeneratedAttribute]
public void set_TickDuration(int value);
    [CompilerGeneratedAttribute]
public int get_TimerContextSize();
    [CompilerGeneratedAttribute]
public void set_TimerContextSize(int value);
    [CompilerGeneratedAttribute]
public string get_UserPrefix();
    [CompilerGeneratedAttribute]
public void set_UserPrefix(string value);
    [CompilerGeneratedAttribute]
public int get_BucketCacheSize();
    [CompilerGeneratedAttribute]
public void set_BucketCacheSize(int value);
    [CompilerGeneratedAttribute]
public int get_BucketCacheAge();
    [CompilerGeneratedAttribute]
public void set_BucketCacheAge(int value);
    [CompilerGeneratedAttribute]
public int get_CurlMaxAllowedRespSize();
    [CompilerGeneratedAttribute]
public void set_CurlMaxAllowedRespSize(int value);
    [CompilerGeneratedAttribute]
public bool get_QueryPrepareAll();
    [CompilerGeneratedAttribute]
public void set_QueryPrepareAll(bool value);
    [CompilerGeneratedAttribute]
public int get_WorkerCount();
    [CompilerGeneratedAttribute]
public void set_WorkerCount(int value);
    [CompilerGeneratedAttribute]
public List`1<string> get_HandlerHeaders();
    [CompilerGeneratedAttribute]
public void set_HandlerHeaders(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_HandlerFooters();
    [CompilerGeneratedAttribute]
public void set_HandlerFooters(List`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_EnableAppLogRotation();
    [CompilerGeneratedAttribute]
public void set_EnableAppLogRotation(bool value);
    [CompilerGeneratedAttribute]
public string get_AppLogDir();
    [CompilerGeneratedAttribute]
public void set_AppLogDir(string value);
    [CompilerGeneratedAttribute]
public int get_AppLogMaxSize();
    [CompilerGeneratedAttribute]
public void set_AppLogMaxSize(int value);
    [CompilerGeneratedAttribute]
public int get_AppLogMaxFiles();
    [CompilerGeneratedAttribute]
public void set_AppLogMaxFiles(int value);
    [CompilerGeneratedAttribute]
public int get_CheckpointInterval();
    [CompilerGeneratedAttribute]
public void set_CheckpointInterval(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Eventing.EventingFunctionState : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private EventingFunctionStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumBootstrappingNodes>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumDeployedNodes>k__BackingField;
    [CompilerGeneratedAttribute]
private EventingFunctionDeploymentStatus <DeploymentStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private EventingFunctionProcessingStatus <ProcessingStatus>k__BackingField;
    public string Name { get; public set; }
    [JsonPropertyNameAttribute("composite_status")]
[JsonConverterAttribute("Couchbase.Management.Eventing.Internal.EventingFunctionStatusConverter")]
public EventingFunctionStatus Status { get; public set; }
    [JsonPropertyNameAttribute("num_bootstrapping_nodes")]
public int NumBootstrappingNodes { get; public set; }
    [JsonPropertyNameAttribute("num_deployed_nodes")]
public int NumDeployedNodes { get; public set; }
    [JsonPropertyNameAttribute("deployment_status")]
[JsonConverterAttribute("Couchbase.Management.Eventing.Internal.EventingFunctionDeploymentStatusConverter")]
public EventingFunctionDeploymentStatus DeploymentStatus { get; public set; }
    [JsonPropertyNameAttribute("processing_status")]
[JsonConverterAttribute("Couchbase.Management.Eventing.Internal.EventingFunctionProcessingStatusConverter")]
public EventingFunctionProcessingStatus ProcessingStatus { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public EventingFunctionStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(EventingFunctionStatus value);
    [CompilerGeneratedAttribute]
public int get_NumBootstrappingNodes();
    [CompilerGeneratedAttribute]
public void set_NumBootstrappingNodes(int value);
    [CompilerGeneratedAttribute]
public int get_NumDeployedNodes();
    [CompilerGeneratedAttribute]
public void set_NumDeployedNodes(int value);
    [CompilerGeneratedAttribute]
public EventingFunctionDeploymentStatus get_DeploymentStatus();
    [CompilerGeneratedAttribute]
public void set_DeploymentStatus(EventingFunctionDeploymentStatus value);
    [CompilerGeneratedAttribute]
public EventingFunctionProcessingStatus get_ProcessingStatus();
    [CompilerGeneratedAttribute]
public void set_ProcessingStatus(EventingFunctionProcessingStatus value);
}
public enum Couchbase.Management.Eventing.EventingFunctionStatus : Enum {
    public int value__;
    public static EventingFunctionStatus Undeployed;
    public static EventingFunctionStatus Deploying;
    public static EventingFunctionStatus Deployed;
    public static EventingFunctionStatus UnDeploying;
    public static EventingFunctionStatus Paused;
    public static EventingFunctionStatus Pausing;
}
public class Couchbase.Management.Eventing.EventingFunctionUrlAuthBasic : object {
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    public string Username { get; public set; }
    public string Password { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [ObsoleteAttribute]
public sealed virtual List`1<JProperty> ToJson();
    private sealed virtual override void Couchbase.Management.Eventing.ISerializableEventingFunctionUrlAuth.WriteToObject(Utf8JsonWriter writer);
}
public class Couchbase.Management.Eventing.EventingFunctionUrlAuthBearer : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    public string Key { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [ObsoleteAttribute]
public sealed virtual List`1<JProperty> ToJson();
    private sealed virtual override void Couchbase.Management.Eventing.ISerializableEventingFunctionUrlAuth.WriteToObject(Utf8JsonWriter writer);
}
public class Couchbase.Management.Eventing.EventingFunctionUrlAuthDigest : object {
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    public string Username { get; public set; }
    public string Password { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [ObsoleteAttribute]
public sealed virtual List`1<JProperty> ToJson();
    private sealed virtual override void Couchbase.Management.Eventing.ISerializableEventingFunctionUrlAuth.WriteToObject(Utf8JsonWriter writer);
}
[JsonConverterAttribute("Couchbase.Management.Eventing.Internal.EventingFunctionUrlBindingConverter")]
public class Couchbase.Management.Eventing.EventingFunctionUrlBinding : object {
    [CompilerGeneratedAttribute]
private string <Hostname>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowCookies>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ValidateSslCertificate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    [CompilerGeneratedAttribute]
private IEventingFunctionUrlAuth <Auth>k__BackingField;
    [JsonPropertyNameAttribute("hostname")]
public string Hostname { get; public set; }
    [JsonPropertyNameAttribute("allow_cookies")]
public bool AllowCookies { get; public set; }
    [JsonPropertyNameAttribute("validate_ssl_certificate")]
public bool ValidateSslCertificate { get; public set; }
    [JsonPropertyNameAttribute("value")]
public string Alias { get; public set; }
    [JsonIgnoreAttribute]
public IEventingFunctionUrlAuth Auth { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Hostname();
    [CompilerGeneratedAttribute]
public void set_Hostname(string value);
    [CompilerGeneratedAttribute]
public bool get_AllowCookies();
    [CompilerGeneratedAttribute]
public void set_AllowCookies(bool value);
    [CompilerGeneratedAttribute]
public bool get_ValidateSslCertificate();
    [CompilerGeneratedAttribute]
public void set_ValidateSslCertificate(bool value);
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
public void set_Alias(string value);
    [CompilerGeneratedAttribute]
public IEventingFunctionUrlAuth get_Auth();
    [CompilerGeneratedAttribute]
public void set_Auth(IEventingFunctionUrlAuth value);
    [ObsoleteAttribute]
public JObject ToJson();
}
public class Couchbase.Management.Eventing.EventingFunctionUrlNoAuth : object {
    [ObsoleteAttribute]
public sealed virtual List`1<JProperty> ToJson();
    private sealed virtual override void Couchbase.Management.Eventing.ISerializableEventingFunctionUrlAuth.WriteToObject(Utf8JsonWriter writer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Eventing.EventingStatus : object {
    [CompilerGeneratedAttribute]
private int <NumEventingNodes>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<EventingFunctionState> <Functions>k__BackingField;
    [JsonPropertyNameAttribute("num_eventing_nodes")]
public int NumEventingNodes { get; public set; }
    [JsonPropertyNameAttribute("apps")]
public List`1<EventingFunctionState> Functions { get; public set; }
    [CompilerGeneratedAttribute]
public int get_NumEventingNodes();
    [CompilerGeneratedAttribute]
public void set_NumEventingNodes(int value);
    [CompilerGeneratedAttribute]
public List`1<EventingFunctionState> get_Functions();
    [CompilerGeneratedAttribute]
public void set_Functions(List`1<EventingFunctionState> value);
}
public class Couchbase.Management.Eventing.FunctionNotDeployedException : CouchbaseException {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Couchbase.Management.Eventing.FunctionOptionsBase : object {
    [CompilerGeneratedAttribute]
private TimeSpan <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <Token>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IRequestSpan <RequestSpan>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientContextId>k__BackingField;
    public TimeSpan Timeout { get; public set; }
    public CancellationToken Token { get; public set; }
    [NullableAttribute("2")]
public IRequestSpan RequestSpan { get; public set; }
    public string ClientContextId { get; public set; }
    [CompilerGeneratedAttribute]
public TimeSpan get_Timeout();
    [CompilerGeneratedAttribute]
public void set_Timeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public CancellationToken get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(CancellationToken value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public IRequestSpan get_RequestSpan();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_RequestSpan(IRequestSpan value);
    [CompilerGeneratedAttribute]
public string get_ClientContextId();
    [CompilerGeneratedAttribute]
public void set_ClientContextId(string value);
}
internal class Couchbase.Management.Eventing.FunctionScope : object {
    [CompilerGeneratedAttribute]
private string <Bucket>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string Bucket { get; public set; }
    public string Scope { get; public set; }
    public FunctionScope(string Bucket, string Scope);
    [CompilerGeneratedAttribute]
protected FunctionScope(FunctionScope original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_Bucket();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Bucket(string value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Scope(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(FunctionScope left, FunctionScope right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(FunctionScope left, FunctionScope right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(FunctionScope other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual FunctionScope <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& Bucket, String& Scope);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Eventing.FunctionsStatusOptions : FunctionOptionsBase {
    [CompilerGeneratedAttribute]
private static FunctionsStatusOptions <Default>k__BackingField;
    internal static FunctionsStatusOptions Default { get; internal set; }
    private static FunctionsStatusOptions();
    [CompilerGeneratedAttribute]
internal static FunctionsStatusOptions get_Default();
    [CompilerGeneratedAttribute]
internal static void set_Default(FunctionsStatusOptions value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Eventing.GetAllFunctionOptions : FunctionOptionsBase {
    [CompilerGeneratedAttribute]
private static GetAllFunctionOptions <Default>k__BackingField;
    internal static GetAllFunctionOptions Default { get; }
    private static GetAllFunctionOptions();
    [CompilerGeneratedAttribute]
internal static GetAllFunctionOptions get_Default();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Eventing.GetFunctionOptions : FunctionOptionsBase {
    [CompilerGeneratedAttribute]
private static GetFunctionOptions <Default>k__BackingField;
    internal static GetFunctionOptions Default { get; }
    private static GetFunctionOptions();
    [CompilerGeneratedAttribute]
internal static GetFunctionOptions get_Default();
}
[NullableContextAttribute("1")]
[InterfaceStabilityAttribute("1")]
public interface Couchbase.Management.Eventing.IEventingFunctionManager {
    public abstract virtual Task UpsertFunctionAsync(EventingFunction function, UpsertFunctionOptions options);
    public abstract virtual Task DropFunctionAsync(string name, DropFunctionOptions options);
    public abstract virtual Task DeployFunctionAsync(string name, DeployFunctionOptions options);
    public abstract virtual Task`1<IEnumerable`1<EventingFunction>> GetAllFunctionsAsync(GetAllFunctionOptions options);
    public abstract virtual Task`1<EventingFunction> GetFunctionAsync(string name, GetFunctionOptions options);
    public abstract virtual Task PauseFunctionAsync(string name, PauseFunctionOptions options);
    public abstract virtual Task ResumeFunctionAsync(string name, ResumeFunctionOptions options);
    public abstract virtual Task UndeployFunctionAsync(string name, UndeployFunctionOptions options);
    public abstract virtual Task`1<EventingStatus> FunctionsStatus(FunctionsStatusOptions options);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Management.Eventing.IEventingFunctionService {
    public abstract virtual Task`1<HttpResponseMessage> GetAsync(string path, IRequestSpan parentSpan, IRequestSpan encodeSpan, CancellationToken token, EventingFunctionKeyspace managementScope);
    public abstract virtual Task`1<HttpResponseMessage> PostAsync(string path, IRequestSpan parentSpan, IRequestSpan encodeSpan, CancellationToken token, EventingFunction eventingFunction, EventingFunctionKeyspace managementScope);
    public abstract virtual Task`1<HttpResponseMessage> DeleteAsync(string path, IRequestSpan parentSpan, IRequestSpan encodeSpan, CancellationToken token, EventingFunctionKeyspace managementScope);
}
public interface Couchbase.Management.Eventing.IEventingFunctionUrlAuth {
    [ObsoleteAttribute]
public abstract virtual List`1<JProperty> ToJson();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Management.Eventing.Internal.BucketAccessConverter : JsonConverter`1<EventingFunctionBucketAccess> {
    public virtual EventingFunctionBucketAccess Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, EventingFunctionBucketAccess value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Management.Eventing.Internal.CompatibilityConverter : JsonConverter`1<EventingFunctionLanguageCompatibility> {
    public virtual EventingFunctionLanguageCompatibility Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, EventingFunctionLanguageCompatibility value, JsonSerializerOptions options);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Management.Eventing.Internal.ErrorResponse : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonElement <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonElement <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private RuntimeInfo <RuntimeInfo>k__BackingField;
    public string Name { get; public set; }
    public int Code { get; public set; }
    public JsonElement Description { get; public set; }
    public JsonElement Attributes { get; public set; }
    [JsonPropertyNameAttribute("runtime_info")]
public RuntimeInfo RuntimeInfo { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public int get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(int value);
    [CompilerGeneratedAttribute]
public JsonElement get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(JsonElement value);
    [CompilerGeneratedAttribute]
public JsonElement get_Attributes();
    [CompilerGeneratedAttribute]
public void set_Attributes(JsonElement value);
    [CompilerGeneratedAttribute]
public RuntimeInfo get_RuntimeInfo();
    [CompilerGeneratedAttribute]
public void set_RuntimeInfo(RuntimeInfo value);
    public string GetDescription();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Couchbase.Management.Eventing.Internal.EventingFunctionBucketBindingConverter : JsonConverter`1<EventingFunctionBucketBinding> {
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("Aot", "IL3050")]
public virtual EventingFunctionBucketBinding Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("Aot", "IL3050")]
public virtual void Write(Utf8JsonWriter writer, EventingFunctionBucketBinding value, JsonSerializerOptions options);
}
internal class Couchbase.Management.Eventing.Internal.EventingFunctionBucketBindingDto : object {
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BucketName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScopeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CollectionName>k__BackingField;
    [CompilerGeneratedAttribute]
private EventingFunctionBucketAccess <Access>k__BackingField;
    [JsonPropertyNameAttribute("alias")]
public string Alias { get; public set; }
    [JsonPropertyNameAttribute("bucket_name")]
public string BucketName { get; public set; }
    [JsonPropertyNameAttribute("scope_name")]
public string ScopeName { get; public set; }
    [JsonPropertyNameAttribute("collection_name")]
public string CollectionName { get; public set; }
    [JsonConverterAttribute("Couchbase.Management.Eventing.Internal.BucketAccessConverter")]
[JsonPropertyNameAttribute("access")]
public EventingFunctionBucketAccess Access { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
public void set_Alias(string value);
    [CompilerGeneratedAttribute]
public string get_BucketName();
    [CompilerGeneratedAttribute]
public void set_BucketName(string value);
    [CompilerGeneratedAttribute]
public string get_ScopeName();
    [CompilerGeneratedAttribute]
public void set_ScopeName(string value);
    [CompilerGeneratedAttribute]
public string get_CollectionName();
    [CompilerGeneratedAttribute]
public void set_CollectionName(string value);
    [CompilerGeneratedAttribute]
public EventingFunctionBucketAccess get_Access();
    [CompilerGeneratedAttribute]
public void set_Access(EventingFunctionBucketAccess value);
    public static EventingFunctionBucketBindingDto op_Explicit(EventingFunctionBucketBinding func);
    public static EventingFunctionBucketBinding op_Explicit(EventingFunctionBucketBindingDto func);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Couchbase.Management.Eventing.Internal.EventingFunctionConverter : JsonConverter`1<EventingFunction> {
    internal static string SuppressMessageJustification;
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("Aot", "IL3050")]
public virtual EventingFunction Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("Aot", "IL3050")]
public virtual void Write(Utf8JsonWriter writer, EventingFunction value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Management.Eventing.Internal.EventingFunctionDcpBoundaryConverter : JsonConverter`1<EventingFunctionDcpBoundary> {
    public virtual EventingFunctionDcpBoundary Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, EventingFunctionDcpBoundary value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Management.Eventing.Internal.EventingFunctionDeploymentStatusConverter : JsonConverter`1<EventingFunctionDeploymentStatus> {
    public virtual EventingFunctionDeploymentStatus Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, EventingFunctionDeploymentStatus value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Management.Eventing.Internal.EventingFunctionManagerFactory : object {
    [CompilerGeneratedAttribute]
private IEventingFunctionService <service>P;
    [CompilerGeneratedAttribute]
private ILoggerFactory <loggerFactory>P;
    [CompilerGeneratedAttribute]
private IRequestTracer <tracer>P;
    public EventingFunctionManagerFactory(IEventingFunctionService service, ILoggerFactory loggerFactory, IRequestTracer tracer);
    public sealed virtual EventingFunctionManager CreateClusterLevel();
    public sealed virtual EventingFunctionManager CreateScoped(IScope scope);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Management.Eventing.Internal.EventingFunctionProcessingStatusConverter : JsonConverter`1<EventingFunctionProcessingStatus> {
    public virtual EventingFunctionProcessingStatus Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, EventingFunctionProcessingStatus value, JsonSerializerOptions options);
}
internal class Couchbase.Management.Eventing.Internal.EventingFunctionRequestDto : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private EventingFunctionSettings <Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentConfig <DeploymentConfig>k__BackingField;
    [JsonPropertyNameAttribute("appname")]
[JsonPropertyOrderAttribute("3")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("appcode")]
[JsonPropertyOrderAttribute("4")]
public string Code { get; public set; }
    [JsonPropertyNameAttribute("version")]
[JsonPropertyOrderAttribute("2")]
public string Version { get; public set; }
    [JsonPropertyOrderAttribute("1")]
public EventingFunctionSettings Settings { get; public set; }
    [JsonPropertyNameAttribute("depcfg")]
[JsonPropertyOrderAttribute("0")]
public DeploymentConfig DeploymentConfig { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public EventingFunctionSettings get_Settings();
    [CompilerGeneratedAttribute]
public void set_Settings(EventingFunctionSettings value);
    [CompilerGeneratedAttribute]
public DeploymentConfig get_DeploymentConfig();
    [CompilerGeneratedAttribute]
public void set_DeploymentConfig(DeploymentConfig value);
    public static EventingFunctionRequestDto op_Explicit(EventingFunction func);
}
internal class Couchbase.Management.Eventing.Internal.EventingFunctionResponseDto : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnforceSchema>k__BackingField;
    [CompilerGeneratedAttribute]
private long <HandlerUuid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FunctionInstanceId>k__BackingField;
    [CompilerGeneratedAttribute]
private EventingFunctionSettings <Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentConfig <DeploymentConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private FunctionScope <FunctionScope>k__BackingField;
    [JsonPropertyNameAttribute("appname")]
[JsonPropertyOrderAttribute("3")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("appcode")]
[JsonPropertyOrderAttribute("4")]
public string Code { get; public set; }
    [JsonPropertyNameAttribute("version")]
[JsonPropertyOrderAttribute("2")]
public string Version { get; public set; }
    [JsonPropertyNameAttribute("enforce_schema")]
public bool EnforceSchema { get; public set; }
    [JsonPropertyNameAttribute("handleruuid")]
public long HandlerUuid { get; public set; }
    [JsonPropertyNameAttribute("function_instance_id")]
public string FunctionInstanceId { get; public set; }
    [JsonPropertyOrderAttribute("1")]
public EventingFunctionSettings Settings { get; public set; }
    [JsonPropertyNameAttribute("depcfg")]
[JsonPropertyOrderAttribute("0")]
public DeploymentConfig DeploymentConfig { get; public set; }
    [JsonPropertyNameAttribute("function_scope")]
[JsonPropertyOrderAttribute("5")]
public FunctionScope FunctionScope { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public bool get_EnforceSchema();
    [CompilerGeneratedAttribute]
public void set_EnforceSchema(bool value);
    [CompilerGeneratedAttribute]
public long get_HandlerUuid();
    [CompilerGeneratedAttribute]
public void set_HandlerUuid(long value);
    [CompilerGeneratedAttribute]
public string get_FunctionInstanceId();
    [CompilerGeneratedAttribute]
public void set_FunctionInstanceId(string value);
    [CompilerGeneratedAttribute]
public EventingFunctionSettings get_Settings();
    [CompilerGeneratedAttribute]
public void set_Settings(EventingFunctionSettings value);
    [CompilerGeneratedAttribute]
public DeploymentConfig get_DeploymentConfig();
    [CompilerGeneratedAttribute]
public void set_DeploymentConfig(DeploymentConfig value);
    [CompilerGeneratedAttribute]
public FunctionScope get_FunctionScope();
    [CompilerGeneratedAttribute]
public void set_FunctionScope(FunctionScope value);
    public static EventingFunction op_Explicit(EventingFunctionResponseDto func);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Couchbase.Management.Eventing.Internal.EventingFunctionSettingsConverter : JsonConverter`1<EventingFunctionSettings> {
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("Aot", "IL3050")]
public virtual EventingFunctionSettings Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("Aot", "IL3050")]
public virtual void Write(Utf8JsonWriter writer, EventingFunctionSettings value, JsonSerializerOptions options);
}
internal class Couchbase.Management.Eventing.Internal.EventingFunctionSettingsRequestDto : object {
    [CompilerGeneratedAttribute]
private EventingFunctionDcpBoundary <DcpStreamBoundary>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private EventingFunctionDeploymentStatus <DeploymentStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private EventingFunctionProcessingStatus <ProcessingStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private EventingFunctionLanguageCompatibility <LanguageCompatibility>k__BackingField;
    [CompilerGeneratedAttribute]
private EventingFunctionLogLevel <LogLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ExecutionTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryScanConsistency <QueryConsistency>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TimerContextSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserPrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private int <WorkerCount>k__BackingField;
    [JsonPropertyNameAttribute("dcp_stream_boundary")]
[JsonConverterAttribute("Couchbase.Management.Eventing.Internal.EventingFunctionDcpBoundaryConverter")]
public EventingFunctionDcpBoundary DcpStreamBoundary { get; public set; }
    [JsonPropertyNameAttribute("description")]
public string Description { get; public set; }
    [JsonPropertyNameAttribute("deployment_status")]
[JsonConverterAttribute("Couchbase.Management.Eventing.Internal.EventingFunctionDeploymentStatusConverter")]
public EventingFunctionDeploymentStatus DeploymentStatus { get; public set; }
    [JsonPropertyNameAttribute("processing_status")]
[JsonConverterAttribute("Couchbase.Management.Eventing.Internal.EventingFunctionProcessingStatusConverter")]
public EventingFunctionProcessingStatus ProcessingStatus { get; public set; }
    [JsonPropertyNameAttribute("language_compatibility")]
[JsonConverterAttribute("Couchbase.Management.Eventing.Internal.CompatibilityConverter")]
public EventingFunctionLanguageCompatibility LanguageCompatibility { get; public set; }
    [JsonPropertyNameAttribute("log_level")]
[JsonConverterAttribute("Couchbase.Management.Eventing.Internal.LogLevelConverter")]
public EventingFunctionLogLevel LogLevel { get; public set; }
    [JsonPropertyNameAttribute("execution_timeout")]
[JsonConverterAttribute("Couchbase.Management.Eventing.Internal.SecondsTimeSpanConverter")]
public TimeSpan ExecutionTimeout { get; public set; }
    [JsonConverterAttribute("Couchbase.Management.Eventing.Internal.QueryScanConsistencyConverter")]
[JsonPropertyNameAttribute("n1ql_consistency")]
public QueryScanConsistency QueryConsistency { get; public set; }
    [JsonPropertyNameAttribute("timer_context_size")]
public int TimerContextSize { get; public set; }
    [JsonPropertyNameAttribute("user_prefix")]
public string UserPrefix { get; public set; }
    [JsonPropertyNameAttribute("worker_count")]
public int WorkerCount { get; public set; }
    [CompilerGeneratedAttribute]
public EventingFunctionDcpBoundary get_DcpStreamBoundary();
    [CompilerGeneratedAttribute]
public void set_DcpStreamBoundary(EventingFunctionDcpBoundary value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public EventingFunctionDeploymentStatus get_DeploymentStatus();
    [CompilerGeneratedAttribute]
public void set_DeploymentStatus(EventingFunctionDeploymentStatus value);
    [CompilerGeneratedAttribute]
public EventingFunctionProcessingStatus get_ProcessingStatus();
    [CompilerGeneratedAttribute]
public void set_ProcessingStatus(EventingFunctionProcessingStatus value);
    [CompilerGeneratedAttribute]
public EventingFunctionLanguageCompatibility get_LanguageCompatibility();
    [CompilerGeneratedAttribute]
public void set_LanguageCompatibility(EventingFunctionLanguageCompatibility value);
    [CompilerGeneratedAttribute]
public EventingFunctionLogLevel get_LogLevel();
    [CompilerGeneratedAttribute]
public void set_LogLevel(EventingFunctionLogLevel value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ExecutionTimeout();
    [CompilerGeneratedAttribute]
public void set_ExecutionTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public QueryScanConsistency get_QueryConsistency();
    [CompilerGeneratedAttribute]
public void set_QueryConsistency(QueryScanConsistency value);
    [CompilerGeneratedAttribute]
public int get_TimerContextSize();
    [CompilerGeneratedAttribute]
public void set_TimerContextSize(int value);
    [CompilerGeneratedAttribute]
public string get_UserPrefix();
    [CompilerGeneratedAttribute]
public void set_UserPrefix(string value);
    [CompilerGeneratedAttribute]
public int get_WorkerCount();
    [CompilerGeneratedAttribute]
public void set_WorkerCount(int value);
    public static EventingFunctionSettingsRequestDto op_Explicit(EventingFunctionSettings settings);
}
internal class Couchbase.Management.Eventing.Internal.EventingFunctionSettingsResponseDto : object {
    [CompilerGeneratedAttribute]
private int <CppWorkerThreadCount>k__BackingField;
    [CompilerGeneratedAttribute]
private EventingFunctionDcpBoundary <DcpStreamBoundary>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private EventingFunctionDeploymentStatus <DeploymentStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private EventingFunctionProcessingStatus <ProcessingStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private EventingFunctionLanguageCompatibility <LanguageCompatibility>k__BackingField;
    [CompilerGeneratedAttribute]
private EventingFunctionLogLevel <LogLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ExecutionTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LcbInstCapacity>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LcbRetryCount>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <LcbTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryScanConsistency <QueryConsistency>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumTimerPartitions>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SockBatchSize>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TickDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TimerContextSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserPrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private int <BucketCacheSize>k__BackingField;
    [CompilerGeneratedAttribute]
private int <BucketCacheAge>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CurlMaxAllowedRespSize>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <QueryPrepareAll>k__BackingField;
    [CompilerGeneratedAttribute]
private int <WorkerCount>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <HandlerHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <HandlerFooters>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableAppLogRotation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppLogDir>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AppLogMaxSize>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AppLogMaxFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CheckpointInterval>k__BackingField;
    [JsonPropertyNameAttribute("cpp_worker_thread_count")]
public int CppWorkerThreadCount { get; public set; }
    [JsonPropertyNameAttribute("dcp_stream_boundary")]
[JsonConverterAttribute("Couchbase.Management.Eventing.Internal.EventingFunctionDcpBoundaryConverter")]
public EventingFunctionDcpBoundary DcpStreamBoundary { get; public set; }
    [JsonPropertyNameAttribute("description")]
public string Description { get; public set; }
    [JsonPropertyNameAttribute("deployment_status")]
[JsonConverterAttribute("Couchbase.Management.Eventing.Internal.EventingFunctionDeploymentStatusConverter")]
public EventingFunctionDeploymentStatus DeploymentStatus { get; public set; }
    [JsonPropertyNameAttribute("processing_status")]
[JsonConverterAttribute("Couchbase.Management.Eventing.Internal.EventingFunctionProcessingStatusConverter")]
public EventingFunctionProcessingStatus ProcessingStatus { get; public set; }
    [JsonPropertyNameAttribute("language_compatibility")]
[JsonConverterAttribute("Couchbase.Management.Eventing.Internal.CompatibilityConverter")]
public EventingFunctionLanguageCompatibility LanguageCompatibility { get; public set; }
    [JsonPropertyNameAttribute("log_level")]
[JsonConverterAttribute("Couchbase.Management.Eventing.Internal.LogLevelConverter")]
public EventingFunctionLogLevel LogLevel { get; public set; }
    [JsonPropertyNameAttribute("execution_timeout")]
[JsonConverterAttribute("Couchbase.Management.Eventing.Internal.SecondsTimeSpanConverter")]
public TimeSpan ExecutionTimeout { get; public set; }
    [JsonPropertyNameAttribute("lcb_inst_capacity")]
public int LcbInstCapacity { get; public set; }
    [JsonPropertyNameAttribute("lcb_retry_count")]
private int LcbRetryCount { get; private set; }
    [JsonPropertyNameAttribute("lcb_timeout")]
[JsonConverterAttribute("Couchbase.Management.Eventing.Internal.SecondsTimeSpanConverter")]
public TimeSpan LcbTimeout { get; public set; }
    [JsonConverterAttribute("Couchbase.Management.Eventing.Internal.QueryScanConsistencyConverter")]
[JsonPropertyNameAttribute("n1ql_consistency")]
public QueryScanConsistency QueryConsistency { get; public set; }
    [JsonPropertyNameAttribute("num_timer_partitions")]
public int NumTimerPartitions { get; public set; }
    [JsonPropertyNameAttribute("sock_batch_size")]
public int SockBatchSize { get; public set; }
    public int TickDuration { get; public set; }
    [JsonPropertyNameAttribute("timer_context_size")]
public int TimerContextSize { get; public set; }
    [JsonPropertyNameAttribute("user_prefix")]
public string UserPrefix { get; public set; }
    [JsonPropertyNameAttribute("bucket_cache_size")]
public int BucketCacheSize { get; public set; }
    [JsonPropertyNameAttribute("bucket_cache_age")]
public int BucketCacheAge { get; public set; }
    [JsonPropertyNameAttribute("curl_max_allowed_resp_size")]
public int CurlMaxAllowedRespSize { get; public set; }
    [JsonPropertyNameAttribute("n1ql_prepare_all")]
public bool QueryPrepareAll { get; public set; }
    [JsonPropertyNameAttribute("worker_count")]
public int WorkerCount { get; public set; }
    [JsonPropertyNameAttribute("handler_headers")]
public List`1<string> HandlerHeaders { get; public set; }
    [JsonPropertyNameAttribute("handler_footers")]
public List`1<string> HandlerFooters { get; public set; }
    [JsonPropertyNameAttribute("enable_applog_rotation")]
public bool EnableAppLogRotation { get; public set; }
    [JsonPropertyNameAttribute("app_log_dir")]
public string AppLogDir { get; public set; }
    [JsonPropertyNameAttribute("app_log_max_size")]
public int AppLogMaxSize { get; public set; }
    [JsonPropertyNameAttribute("app_log_max_files")]
public int AppLogMaxFiles { get; public set; }
    [JsonPropertyNameAttribute("checkpoint_interval")]
public int CheckpointInterval { get; public set; }
    [CompilerGeneratedAttribute]
public int get_CppWorkerThreadCount();
    [CompilerGeneratedAttribute]
public void set_CppWorkerThreadCount(int value);
    [CompilerGeneratedAttribute]
public EventingFunctionDcpBoundary get_DcpStreamBoundary();
    [CompilerGeneratedAttribute]
public void set_DcpStreamBoundary(EventingFunctionDcpBoundary value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public EventingFunctionDeploymentStatus get_DeploymentStatus();
    [CompilerGeneratedAttribute]
public void set_DeploymentStatus(EventingFunctionDeploymentStatus value);
    [CompilerGeneratedAttribute]
public EventingFunctionProcessingStatus get_ProcessingStatus();
    [CompilerGeneratedAttribute]
public void set_ProcessingStatus(EventingFunctionProcessingStatus value);
    [CompilerGeneratedAttribute]
public EventingFunctionLanguageCompatibility get_LanguageCompatibility();
    [CompilerGeneratedAttribute]
public void set_LanguageCompatibility(EventingFunctionLanguageCompatibility value);
    [CompilerGeneratedAttribute]
public EventingFunctionLogLevel get_LogLevel();
    [CompilerGeneratedAttribute]
public void set_LogLevel(EventingFunctionLogLevel value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ExecutionTimeout();
    [CompilerGeneratedAttribute]
public void set_ExecutionTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public int get_LcbInstCapacity();
    [CompilerGeneratedAttribute]
public void set_LcbInstCapacity(int value);
    [CompilerGeneratedAttribute]
private int get_LcbRetryCount();
    [CompilerGeneratedAttribute]
private void set_LcbRetryCount(int value);
    [CompilerGeneratedAttribute]
public TimeSpan get_LcbTimeout();
    [CompilerGeneratedAttribute]
public void set_LcbTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public QueryScanConsistency get_QueryConsistency();
    [CompilerGeneratedAttribute]
public void set_QueryConsistency(QueryScanConsistency value);
    [CompilerGeneratedAttribute]
public int get_NumTimerPartitions();
    [CompilerGeneratedAttribute]
public void set_NumTimerPartitions(int value);
    [CompilerGeneratedAttribute]
public int get_SockBatchSize();
    [CompilerGeneratedAttribute]
public void set_SockBatchSize(int value);
    [CompilerGeneratedAttribute]
public int get_TickDuration();
    [CompilerGeneratedAttribute]
public void set_TickDuration(int value);
    [CompilerGeneratedAttribute]
public int get_TimerContextSize();
    [CompilerGeneratedAttribute]
public void set_TimerContextSize(int value);
    [CompilerGeneratedAttribute]
public string get_UserPrefix();
    [CompilerGeneratedAttribute]
public void set_UserPrefix(string value);
    [CompilerGeneratedAttribute]
public int get_BucketCacheSize();
    [CompilerGeneratedAttribute]
public void set_BucketCacheSize(int value);
    [CompilerGeneratedAttribute]
public int get_BucketCacheAge();
    [CompilerGeneratedAttribute]
public void set_BucketCacheAge(int value);
    [CompilerGeneratedAttribute]
public int get_CurlMaxAllowedRespSize();
    [CompilerGeneratedAttribute]
public void set_CurlMaxAllowedRespSize(int value);
    [CompilerGeneratedAttribute]
public bool get_QueryPrepareAll();
    [CompilerGeneratedAttribute]
public void set_QueryPrepareAll(bool value);
    [CompilerGeneratedAttribute]
public int get_WorkerCount();
    [CompilerGeneratedAttribute]
public void set_WorkerCount(int value);
    [CompilerGeneratedAttribute]
public List`1<string> get_HandlerHeaders();
    [CompilerGeneratedAttribute]
public void set_HandlerHeaders(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_HandlerFooters();
    [CompilerGeneratedAttribute]
public void set_HandlerFooters(List`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_EnableAppLogRotation();
    [CompilerGeneratedAttribute]
public void set_EnableAppLogRotation(bool value);
    [CompilerGeneratedAttribute]
public string get_AppLogDir();
    [CompilerGeneratedAttribute]
public void set_AppLogDir(string value);
    [CompilerGeneratedAttribute]
public int get_AppLogMaxSize();
    [CompilerGeneratedAttribute]
public void set_AppLogMaxSize(int value);
    [CompilerGeneratedAttribute]
public int get_AppLogMaxFiles();
    [CompilerGeneratedAttribute]
public void set_AppLogMaxFiles(int value);
    [CompilerGeneratedAttribute]
public int get_CheckpointInterval();
    [CompilerGeneratedAttribute]
public void set_CheckpointInterval(int value);
    public static EventingFunctionSettings op_Explicit(EventingFunctionSettingsResponseDto settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Management.Eventing.Internal.EventingFunctionStatusConverter : JsonConverter`1<EventingFunctionStatus> {
    public virtual EventingFunctionStatus Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, EventingFunctionStatus value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Couchbase.Management.Eventing.Internal.EventingFunctionUrlBindingConverter : JsonConverter`1<EventingFunctionUrlBinding> {
    private static JsonEncodedText AuthTypePropertyName;
    private static JsonEncodedText HostnamePropertyName;
    private static JsonEncodedText AllowCookiesPropertyName;
    private static JsonEncodedText ValidateSslCertificatePropertyName;
    private static JsonEncodedText ValuePropertyName;
    private static EventingFunctionUrlBindingConverter();
    public static string ReadAndGetDiscriminator(Utf8JsonReader reader, EventingFunctionUrlBinding result);
    public virtual EventingFunctionUrlBinding Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, EventingFunctionUrlBinding value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonSourceGenerationOptionsAttribute]
[JsonSerializableAttribute("Couchbase.Management.Eventing.Internal.ErrorResponse")]
[JsonSerializableAttribute("Couchbase.Management.Eventing.EventingStatus")]
[JsonSerializableAttribute("Couchbase.Management.Eventing.EventingFunction")]
[JsonSerializableAttribute("System.Collections.Generic.List`1<Couchbase.Management.Eventing.EventingFunction>")]
[JsonSerializableAttribute("Couchbase.Management.Eventing.Internal.EventingFunctionRequestDto")]
[JsonSerializableAttribute("Couchbase.Management.Eventing.Internal.EventingFunctionResponseDto")]
[JsonSerializableAttribute("Couchbase.Management.Eventing.Internal.EventingFunctionSettingsRequestDto")]
[JsonSerializableAttribute("Couchbase.Management.Eventing.Internal.EventingFunctionSettingsResponseDto")]
[JsonSerializableAttribute("Couchbase.Management.Eventing.Internal.EventingFunctionBucketBindingDto")]
[JsonSerializableAttribute("Couchbase.Management.Eventing.EventingFunctionUrlNoAuth")]
[JsonSerializableAttribute("Couchbase.Management.Eventing.EventingFunctionUrlAuthBasic")]
[JsonSerializableAttribute("Couchbase.Management.Eventing.EventingFunctionUrlAuthDigest")]
[JsonSerializableAttribute("Couchbase.Management.Eventing.EventingFunctionUrlAuthBearer")]
[GeneratedCodeAttribute("System.Text.Json.SourceGeneration", "8.0.10.31311")]
internal class Couchbase.Management.Eventing.Internal.EventingSerializerContext : JsonSerializerContext {
    [NullableAttribute("2")]
private static EventingSerializerContext _primary;
    [NullableAttribute("2")]
private JsonTypeInfo`1<bool> _Boolean;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<DeploymentConfig> _DeploymentConfig;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<EventingFunction> _EventingFunction;
    [NullableAttribute("2")]
private JsonTypeInfo`1<EventingFunctionBucketAccess> _EventingFunctionBucketAccess;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<EventingFunctionBucketBinding> _EventingFunctionBucketBinding;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<EventingFunctionConstantBinding> _EventingFunctionConstantBinding;
    [NullableAttribute("2")]
private JsonTypeInfo`1<EventingFunctionDcpBoundary> _EventingFunctionDcpBoundary;
    [NullableAttribute("2")]
private JsonTypeInfo`1<EventingFunctionDeploymentStatus> _EventingFunctionDeploymentStatus;
    [NullableAttribute("2")]
private JsonTypeInfo`1<EventingFunctionLanguageCompatibility> _EventingFunctionLanguageCompatibility;
    [NullableAttribute("2")]
private JsonTypeInfo`1<EventingFunctionLogLevel> _EventingFunctionLogLevel;
    [NullableAttribute("2")]
private JsonTypeInfo`1<EventingFunctionProcessingStatus> _EventingFunctionProcessingStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<EventingFunctionSettings> _EventingFunctionSettings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<EventingFunctionState> _EventingFunctionState;
    [NullableAttribute("2")]
private JsonTypeInfo`1<EventingFunctionStatus> _EventingFunctionStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<EventingFunctionUrlAuthBasic> _EventingFunctionUrlAuthBasic;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<EventingFunctionUrlAuthBearer> _EventingFunctionUrlAuthBearer;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<EventingFunctionUrlAuthDigest> _EventingFunctionUrlAuthDigest;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<EventingFunctionUrlBinding> _EventingFunctionUrlBinding;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<EventingFunctionUrlNoAuth> _EventingFunctionUrlNoAuth;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<EventingStatus> _EventingStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<FunctionScope> _FunctionScope;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<ErrorResponse> _ErrorResponse;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<EventingFunctionBucketBindingDto> _EventingFunctionBucketBindingDto;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<EventingFunctionRequestDto> _EventingFunctionRequestDto;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<EventingFunctionResponseDto> _EventingFunctionResponseDto;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<EventingFunctionSettingsRequestDto> _EventingFunctionSettingsRequestDto;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<EventingFunctionSettingsResponseDto> _EventingFunctionSettingsResponseDto;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<RuntimeInfo> _RuntimeInfo;
    [NullableAttribute("2")]
private JsonTypeInfo`1<QueryScanConsistency> _QueryScanConsistency;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<EventingFunction>> _EventingFunctionList;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<EventingFunctionBucketBinding>> _ListEventingFunctionBucketBinding;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<EventingFunctionConstantBinding>> _ListEventingFunctionConstantBinding;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<EventingFunctionState>> _ListEventingFunctionState;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<EventingFunctionUrlBinding>> _ListEventingFunctionUrlBinding;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<string>> _ListString;
    [NullableAttribute("2")]
private JsonTypeInfo`1<JsonElement> _JsonElement;
    [NullableAttribute("2")]
private JsonTypeInfo`1<TimeSpan> _TimeSpan;
    [NullableAttribute("2")]
private JsonTypeInfo`1<int> _Int32;
    [NullableAttribute("2")]
private JsonTypeInfo`1<long> _Int64;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<string> _String;
    private static JsonSerializerOptions s_defaultOptions;
    [CompilerGeneratedAttribute]
private static EventingSerializerContext <Default>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JsonSerializerOptions <GeneratedSerializerOptions>k__BackingField;
    private static JsonEncodedText PropName_buckets;
    private static JsonEncodedText PropName_curl;
    private static JsonEncodedText PropName_constants;
    private static JsonEncodedText PropName_source_bucket;
    private static JsonEncodedText PropName_source_scope;
    private static JsonEncodedText PropName_source_collection;
    private static JsonEncodedText PropName_metadata_bucket;
    private static JsonEncodedText PropName_metadata_scope;
    private static JsonEncodedText PropName_metadata_collection;
    private static JsonEncodedText PropName_value;
    private static JsonEncodedText PropName_literal;
    private static JsonEncodedText PropName_username;
    private static JsonEncodedText PropName_password;
    private static JsonEncodedText PropName_key;
    private static JsonEncodedText PropName_num_eventing_nodes;
    private static JsonEncodedText PropName_apps;
    private static JsonEncodedText PropName_bucket;
    private static JsonEncodedText PropName_scope;
    private static JsonEncodedText PropName_name;
    private static JsonEncodedText PropName_code;
    private static JsonEncodedText PropName_description;
    private static JsonEncodedText PropName_attributes;
    private static JsonEncodedText PropName_runtime_info;
    private static JsonEncodedText PropName_depcfg;
    private static JsonEncodedText PropName_settings;
    private static JsonEncodedText PropName_version;
    private static JsonEncodedText PropName_appname;
    private static JsonEncodedText PropName_appcode;
    private static JsonEncodedText PropName_enforce_schema;
    private static JsonEncodedText PropName_handleruuid;
    private static JsonEncodedText PropName_function_instance_id;
    private static JsonEncodedText PropName_function_scope;
    private static JsonEncodedText PropName_info;
    public static EventingSerializerContext Primary { get; }
    public JsonTypeInfo`1<bool> Boolean { get; }
    public JsonTypeInfo`1<DeploymentConfig> DeploymentConfig { get; }
    public JsonTypeInfo`1<EventingFunction> EventingFunction { get; }
    public JsonTypeInfo`1<EventingFunctionBucketAccess> EventingFunctionBucketAccess { get; }
    public JsonTypeInfo`1<EventingFunctionBucketBinding> EventingFunctionBucketBinding { get; }
    public JsonTypeInfo`1<EventingFunctionConstantBinding> EventingFunctionConstantBinding { get; }
    public JsonTypeInfo`1<EventingFunctionDcpBoundary> EventingFunctionDcpBoundary { get; }
    public JsonTypeInfo`1<EventingFunctionDeploymentStatus> EventingFunctionDeploymentStatus { get; }
    public JsonTypeInfo`1<EventingFunctionLanguageCompatibility> EventingFunctionLanguageCompatibility { get; }
    public JsonTypeInfo`1<EventingFunctionLogLevel> EventingFunctionLogLevel { get; }
    public JsonTypeInfo`1<EventingFunctionProcessingStatus> EventingFunctionProcessingStatus { get; }
    public JsonTypeInfo`1<EventingFunctionSettings> EventingFunctionSettings { get; }
    public JsonTypeInfo`1<EventingFunctionState> EventingFunctionState { get; }
    public JsonTypeInfo`1<EventingFunctionStatus> EventingFunctionStatus { get; }
    public JsonTypeInfo`1<EventingFunctionUrlAuthBasic> EventingFunctionUrlAuthBasic { get; }
    public JsonTypeInfo`1<EventingFunctionUrlAuthBearer> EventingFunctionUrlAuthBearer { get; }
    public JsonTypeInfo`1<EventingFunctionUrlAuthDigest> EventingFunctionUrlAuthDigest { get; }
    public JsonTypeInfo`1<EventingFunctionUrlBinding> EventingFunctionUrlBinding { get; }
    public JsonTypeInfo`1<EventingFunctionUrlNoAuth> EventingFunctionUrlNoAuth { get; }
    public JsonTypeInfo`1<EventingStatus> EventingStatus { get; }
    public JsonTypeInfo`1<FunctionScope> FunctionScope { get; }
    public JsonTypeInfo`1<ErrorResponse> ErrorResponse { get; }
    public JsonTypeInfo`1<EventingFunctionBucketBindingDto> EventingFunctionBucketBindingDto { get; }
    public JsonTypeInfo`1<EventingFunctionRequestDto> EventingFunctionRequestDto { get; }
    public JsonTypeInfo`1<EventingFunctionResponseDto> EventingFunctionResponseDto { get; }
    public JsonTypeInfo`1<EventingFunctionSettingsRequestDto> EventingFunctionSettingsRequestDto { get; }
    public JsonTypeInfo`1<EventingFunctionSettingsResponseDto> EventingFunctionSettingsResponseDto { get; }
    public JsonTypeInfo`1<RuntimeInfo> RuntimeInfo { get; }
    public JsonTypeInfo`1<QueryScanConsistency> QueryScanConsistency { get; }
    public JsonTypeInfo`1<List`1<EventingFunction>> EventingFunctionList { get; }
    public JsonTypeInfo`1<List`1<EventingFunctionBucketBinding>> ListEventingFunctionBucketBinding { get; }
    public JsonTypeInfo`1<List`1<EventingFunctionConstantBinding>> ListEventingFunctionConstantBinding { get; }
    public JsonTypeInfo`1<List`1<EventingFunctionState>> ListEventingFunctionState { get; }
    public JsonTypeInfo`1<List`1<EventingFunctionUrlBinding>> ListEventingFunctionUrlBinding { get; }
    public JsonTypeInfo`1<List`1<string>> ListString { get; }
    public JsonTypeInfo`1<JsonElement> JsonElement { get; }
    public JsonTypeInfo`1<TimeSpan> TimeSpan { get; }
    public JsonTypeInfo`1<int> Int32 { get; }
    public JsonTypeInfo`1<long> Int64 { get; }
    public JsonTypeInfo`1<string> String { get; }
    public static EventingSerializerContext Default { get; }
    [NullableAttribute("2")]
protected JsonSerializerOptions GeneratedSerializerOptions { get; }
    public EventingSerializerContext(JsonSerializerOptions options);
    private static EventingSerializerContext();
    public static EventingSerializerContext get_Primary();
    public JsonTypeInfo`1<bool> get_Boolean();
    private JsonTypeInfo`1<bool> Create_Boolean(JsonSerializerOptions options);
    public JsonTypeInfo`1<DeploymentConfig> get_DeploymentConfig();
    private JsonTypeInfo`1<DeploymentConfig> Create_DeploymentConfig(JsonSerializerOptions options);
    private static JsonPropertyInfo[] DeploymentConfigPropInit(JsonSerializerOptions options);
    private void DeploymentConfigSerializeHandler(Utf8JsonWriter writer, DeploymentConfig value);
    public JsonTypeInfo`1<EventingFunction> get_EventingFunction();
    private JsonTypeInfo`1<EventingFunction> Create_EventingFunction(JsonSerializerOptions options);
    public JsonTypeInfo`1<EventingFunctionBucketAccess> get_EventingFunctionBucketAccess();
    private JsonTypeInfo`1<EventingFunctionBucketAccess> Create_EventingFunctionBucketAccess(JsonSerializerOptions options);
    public JsonTypeInfo`1<EventingFunctionBucketBinding> get_EventingFunctionBucketBinding();
    private JsonTypeInfo`1<EventingFunctionBucketBinding> Create_EventingFunctionBucketBinding(JsonSerializerOptions options);
    public JsonTypeInfo`1<EventingFunctionConstantBinding> get_EventingFunctionConstantBinding();
    private JsonTypeInfo`1<EventingFunctionConstantBinding> Create_EventingFunctionConstantBinding(JsonSerializerOptions options);
    private static JsonPropertyInfo[] EventingFunctionConstantBindingPropInit(JsonSerializerOptions options);
    private void EventingFunctionConstantBindingSerializeHandler(Utf8JsonWriter writer, EventingFunctionConstantBinding value);
    public JsonTypeInfo`1<EventingFunctionDcpBoundary> get_EventingFunctionDcpBoundary();
    private JsonTypeInfo`1<EventingFunctionDcpBoundary> Create_EventingFunctionDcpBoundary(JsonSerializerOptions options);
    public JsonTypeInfo`1<EventingFunctionDeploymentStatus> get_EventingFunctionDeploymentStatus();
    private JsonTypeInfo`1<EventingFunctionDeploymentStatus> Create_EventingFunctionDeploymentStatus(JsonSerializerOptions options);
    public JsonTypeInfo`1<EventingFunctionLanguageCompatibility> get_EventingFunctionLanguageCompatibility();
    private JsonTypeInfo`1<EventingFunctionLanguageCompatibility> Create_EventingFunctionLanguageCompatibility(JsonSerializerOptions options);
    public JsonTypeInfo`1<EventingFunctionLogLevel> get_EventingFunctionLogLevel();
    private JsonTypeInfo`1<EventingFunctionLogLevel> Create_EventingFunctionLogLevel(JsonSerializerOptions options);
    public JsonTypeInfo`1<EventingFunctionProcessingStatus> get_EventingFunctionProcessingStatus();
    private JsonTypeInfo`1<EventingFunctionProcessingStatus> Create_EventingFunctionProcessingStatus(JsonSerializerOptions options);
    public JsonTypeInfo`1<EventingFunctionSettings> get_EventingFunctionSettings();
    private JsonTypeInfo`1<EventingFunctionSettings> Create_EventingFunctionSettings(JsonSerializerOptions options);
    public JsonTypeInfo`1<EventingFunctionState> get_EventingFunctionState();
    private JsonTypeInfo`1<EventingFunctionState> Create_EventingFunctionState(JsonSerializerOptions options);
    private static JsonPropertyInfo[] EventingFunctionStatePropInit(JsonSerializerOptions options);
    public JsonTypeInfo`1<EventingFunctionStatus> get_EventingFunctionStatus();
    private JsonTypeInfo`1<EventingFunctionStatus> Create_EventingFunctionStatus(JsonSerializerOptions options);
    public JsonTypeInfo`1<EventingFunctionUrlAuthBasic> get_EventingFunctionUrlAuthBasic();
    private JsonTypeInfo`1<EventingFunctionUrlAuthBasic> Create_EventingFunctionUrlAuthBasic(JsonSerializerOptions options);
    private static JsonPropertyInfo[] EventingFunctionUrlAuthBasicPropInit(JsonSerializerOptions options);
    private void EventingFunctionUrlAuthBasicSerializeHandler(Utf8JsonWriter writer, EventingFunctionUrlAuthBasic value);
    public JsonTypeInfo`1<EventingFunctionUrlAuthBearer> get_EventingFunctionUrlAuthBearer();
    private JsonTypeInfo`1<EventingFunctionUrlAuthBearer> Create_EventingFunctionUrlAuthBearer(JsonSerializerOptions options);
    private static JsonPropertyInfo[] EventingFunctionUrlAuthBearerPropInit(JsonSerializerOptions options);
    private void EventingFunctionUrlAuthBearerSerializeHandler(Utf8JsonWriter writer, EventingFunctionUrlAuthBearer value);
    public JsonTypeInfo`1<EventingFunctionUrlAuthDigest> get_EventingFunctionUrlAuthDigest();
    private JsonTypeInfo`1<EventingFunctionUrlAuthDigest> Create_EventingFunctionUrlAuthDigest(JsonSerializerOptions options);
    private static JsonPropertyInfo[] EventingFunctionUrlAuthDigestPropInit(JsonSerializerOptions options);
    private void EventingFunctionUrlAuthDigestSerializeHandler(Utf8JsonWriter writer, EventingFunctionUrlAuthDigest value);
    public JsonTypeInfo`1<EventingFunctionUrlBinding> get_EventingFunctionUrlBinding();
    private JsonTypeInfo`1<EventingFunctionUrlBinding> Create_EventingFunctionUrlBinding(JsonSerializerOptions options);
    public JsonTypeInfo`1<EventingFunctionUrlNoAuth> get_EventingFunctionUrlNoAuth();
    private JsonTypeInfo`1<EventingFunctionUrlNoAuth> Create_EventingFunctionUrlNoAuth(JsonSerializerOptions options);
    private static JsonPropertyInfo[] EventingFunctionUrlNoAuthPropInit(JsonSerializerOptions options);
    private void EventingFunctionUrlNoAuthSerializeHandler(Utf8JsonWriter writer, EventingFunctionUrlNoAuth value);
    public JsonTypeInfo`1<EventingStatus> get_EventingStatus();
    private JsonTypeInfo`1<EventingStatus> Create_EventingStatus(JsonSerializerOptions options);
    private static JsonPropertyInfo[] EventingStatusPropInit(JsonSerializerOptions options);
    private void EventingStatusSerializeHandler(Utf8JsonWriter writer, EventingStatus value);
    public JsonTypeInfo`1<FunctionScope> get_FunctionScope();
    private JsonTypeInfo`1<FunctionScope> Create_FunctionScope(JsonSerializerOptions options);
    private static JsonPropertyInfo[] FunctionScopePropInit(JsonSerializerOptions options);
    private void FunctionScopeSerializeHandler(Utf8JsonWriter writer, FunctionScope value);
    private static JsonParameterInfoValues[] FunctionScopeCtorParamInit();
    public JsonTypeInfo`1<ErrorResponse> get_ErrorResponse();
    private JsonTypeInfo`1<ErrorResponse> Create_ErrorResponse(JsonSerializerOptions options);
    private static JsonPropertyInfo[] ErrorResponsePropInit(JsonSerializerOptions options);
    private void ErrorResponseSerializeHandler(Utf8JsonWriter writer, ErrorResponse value);
    public JsonTypeInfo`1<EventingFunctionBucketBindingDto> get_EventingFunctionBucketBindingDto();
    private JsonTypeInfo`1<EventingFunctionBucketBindingDto> Create_EventingFunctionBucketBindingDto(JsonSerializerOptions options);
    private static JsonPropertyInfo[] EventingFunctionBucketBindingDtoPropInit(JsonSerializerOptions options);
    public JsonTypeInfo`1<EventingFunctionRequestDto> get_EventingFunctionRequestDto();
    private JsonTypeInfo`1<EventingFunctionRequestDto> Create_EventingFunctionRequestDto(JsonSerializerOptions options);
    private static JsonPropertyInfo[] EventingFunctionRequestDtoPropInit(JsonSerializerOptions options);
    private void EventingFunctionRequestDtoSerializeHandler(Utf8JsonWriter writer, EventingFunctionRequestDto value);
    public JsonTypeInfo`1<EventingFunctionResponseDto> get_EventingFunctionResponseDto();
    private JsonTypeInfo`1<EventingFunctionResponseDto> Create_EventingFunctionResponseDto(JsonSerializerOptions options);
    private static JsonPropertyInfo[] EventingFunctionResponseDtoPropInit(JsonSerializerOptions options);
    private void EventingFunctionResponseDtoSerializeHandler(Utf8JsonWriter writer, EventingFunctionResponseDto value);
    public JsonTypeInfo`1<EventingFunctionSettingsRequestDto> get_EventingFunctionSettingsRequestDto();
    private JsonTypeInfo`1<EventingFunctionSettingsRequestDto> Create_EventingFunctionSettingsRequestDto(JsonSerializerOptions options);
    private static JsonPropertyInfo[] EventingFunctionSettingsRequestDtoPropInit(JsonSerializerOptions options);
    public JsonTypeInfo`1<EventingFunctionSettingsResponseDto> get_EventingFunctionSettingsResponseDto();
    private JsonTypeInfo`1<EventingFunctionSettingsResponseDto> Create_EventingFunctionSettingsResponseDto(JsonSerializerOptions options);
    private static JsonPropertyInfo[] EventingFunctionSettingsResponseDtoPropInit(JsonSerializerOptions options);
    public JsonTypeInfo`1<RuntimeInfo> get_RuntimeInfo();
    private JsonTypeInfo`1<RuntimeInfo> Create_RuntimeInfo(JsonSerializerOptions options);
    private static JsonPropertyInfo[] RuntimeInfoPropInit(JsonSerializerOptions options);
    private void RuntimeInfoSerializeHandler(Utf8JsonWriter writer, RuntimeInfo value);
    public JsonTypeInfo`1<QueryScanConsistency> get_QueryScanConsistency();
    private JsonTypeInfo`1<QueryScanConsistency> Create_QueryScanConsistency(JsonSerializerOptions options);
    public JsonTypeInfo`1<List`1<EventingFunction>> get_EventingFunctionList();
    private JsonTypeInfo`1<List`1<EventingFunction>> Create_EventingFunctionList(JsonSerializerOptions options);
    private void EventingFunctionListSerializeHandler(Utf8JsonWriter writer, List`1<EventingFunction> value);
    public JsonTypeInfo`1<List`1<EventingFunctionBucketBinding>> get_ListEventingFunctionBucketBinding();
    private JsonTypeInfo`1<List`1<EventingFunctionBucketBinding>> Create_ListEventingFunctionBucketBinding(JsonSerializerOptions options);
    private void ListEventingFunctionBucketBindingSerializeHandler(Utf8JsonWriter writer, List`1<EventingFunctionBucketBinding> value);
    public JsonTypeInfo`1<List`1<EventingFunctionConstantBinding>> get_ListEventingFunctionConstantBinding();
    private JsonTypeInfo`1<List`1<EventingFunctionConstantBinding>> Create_ListEventingFunctionConstantBinding(JsonSerializerOptions options);
    private void ListEventingFunctionConstantBindingSerializeHandler(Utf8JsonWriter writer, List`1<EventingFunctionConstantBinding> value);
    public JsonTypeInfo`1<List`1<EventingFunctionState>> get_ListEventingFunctionState();
    private JsonTypeInfo`1<List`1<EventingFunctionState>> Create_ListEventingFunctionState(JsonSerializerOptions options);
    private void ListEventingFunctionStateSerializeHandler(Utf8JsonWriter writer, List`1<EventingFunctionState> value);
    public JsonTypeInfo`1<List`1<EventingFunctionUrlBinding>> get_ListEventingFunctionUrlBinding();
    private JsonTypeInfo`1<List`1<EventingFunctionUrlBinding>> Create_ListEventingFunctionUrlBinding(JsonSerializerOptions options);
    private void ListEventingFunctionUrlBindingSerializeHandler(Utf8JsonWriter writer, List`1<EventingFunctionUrlBinding> value);
    public JsonTypeInfo`1<List`1<string>> get_ListString();
    private JsonTypeInfo`1<List`1<string>> Create_ListString(JsonSerializerOptions options);
    private void ListStringSerializeHandler(Utf8JsonWriter writer, List`1<string> value);
    public JsonTypeInfo`1<JsonElement> get_JsonElement();
    private JsonTypeInfo`1<JsonElement> Create_JsonElement(JsonSerializerOptions options);
    public JsonTypeInfo`1<TimeSpan> get_TimeSpan();
    private JsonTypeInfo`1<TimeSpan> Create_TimeSpan(JsonSerializerOptions options);
    public JsonTypeInfo`1<int> get_Int32();
    private JsonTypeInfo`1<int> Create_Int32(JsonSerializerOptions options);
    public JsonTypeInfo`1<long> get_Int64();
    private JsonTypeInfo`1<long> Create_Int64(JsonSerializerOptions options);
    public JsonTypeInfo`1<string> get_String();
    private JsonTypeInfo`1<string> Create_String(JsonSerializerOptions options);
    [CompilerGeneratedAttribute]
public static EventingSerializerContext get_Default();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual JsonSerializerOptions get_GeneratedSerializerOptions();
    private static bool TryGetTypeInfoForRuntimeCustomConverter(JsonSerializerOptions options, JsonTypeInfo`1& jsonTypeInfo);
    private static JsonConverter GetRuntimeConverterForType(Type type, JsonSerializerOptions options);
    private static JsonConverter ExpandConverter(Type type, JsonConverter converter, JsonSerializerOptions options, bool validateCanConvert);
    public virtual JsonTypeInfo GetTypeInfo(Type type);
    private sealed virtual override JsonTypeInfo global::System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver.GetTypeInfo(Type type, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Management.Eventing.Internal.IEventingFunctionManagerFactory {
    public abstract virtual EventingFunctionManager CreateClusterLevel();
    public abstract virtual EventingFunctionManager CreateScoped(IScope scope);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Management.Eventing.Internal.Info : object {
    [CompilerGeneratedAttribute]
private string <Area>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ColumnNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CompileSuccess>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LineNumber>k__BackingField;
    public string Area { get; public set; }
    [JsonPropertyNameAttribute("column_number")]
public int ColumnNumber { get; public set; }
    [JsonPropertyNameAttribute("compile_success")]
public bool CompileSuccess { get; public set; }
    public string Description { get; public set; }
    public int Index { get; public set; }
    public string Language { get; public set; }
    [JsonPropertyNameAttribute("line_number")]
public int LineNumber { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Area();
    [CompilerGeneratedAttribute]
public void set_Area(string value);
    [CompilerGeneratedAttribute]
public int get_ColumnNumber();
    [CompilerGeneratedAttribute]
public void set_ColumnNumber(int value);
    [CompilerGeneratedAttribute]
public bool get_CompileSuccess();
    [CompilerGeneratedAttribute]
public void set_CompileSuccess(bool value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public int get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(int value);
    [CompilerGeneratedAttribute]
public string get_Language();
    [CompilerGeneratedAttribute]
public void set_Language(string value);
    [CompilerGeneratedAttribute]
public int get_LineNumber();
    [CompilerGeneratedAttribute]
public void set_LineNumber(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Management.Eventing.Internal.LogLevelConverter : JsonConverter`1<EventingFunctionLogLevel> {
    public virtual EventingFunctionLogLevel Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, EventingFunctionLogLevel value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Management.Eventing.Internal.QueryScanConsistencyConverter : JsonConverter`1<QueryScanConsistency> {
    public virtual QueryScanConsistency Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, QueryScanConsistency value, JsonSerializerOptions options);
}
internal class Couchbase.Management.Eventing.Internal.RuntimeInfo : object {
    [CompilerGeneratedAttribute]
private int <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonElement <Info>k__BackingField;
    public int Code { get; public set; }
    public JsonElement Info { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(int value);
    [CompilerGeneratedAttribute]
public JsonElement get_Info();
    [CompilerGeneratedAttribute]
public void set_Info(JsonElement value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Management.Eventing.Internal.SecondsTimeSpanConverter : JsonConverter`1<TimeSpan> {
    public virtual TimeSpan Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, TimeSpan value, JsonSerializerOptions options);
}
internal interface Couchbase.Management.Eventing.ISerializableEventingFunctionUrlAuth {
    public abstract virtual void WriteToObject(Utf8JsonWriter writer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Eventing.PauseFunctionOptions : FunctionOptionsBase {
    [CompilerGeneratedAttribute]
private static PauseFunctionOptions <Default>k__BackingField;
    internal static PauseFunctionOptions Default { get; }
    private static PauseFunctionOptions();
    [CompilerGeneratedAttribute]
internal static PauseFunctionOptions get_Default();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Eventing.ResumeFunctionOptions : FunctionOptionsBase {
    [CompilerGeneratedAttribute]
private static ResumeFunctionOptions <Default>k__BackingField;
    internal static ResumeFunctionOptions Default { get; }
    private static ResumeFunctionOptions();
    [CompilerGeneratedAttribute]
internal static ResumeFunctionOptions get_Default();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Eventing.UndeployFunctionOptions : FunctionOptionsBase {
    [CompilerGeneratedAttribute]
private static UndeployFunctionOptions <Default>k__BackingField;
    internal static UndeployFunctionOptions Default { get; }
    private static UndeployFunctionOptions();
    [CompilerGeneratedAttribute]
internal static UndeployFunctionOptions get_Default();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Eventing.UpsertFunctionOptions : FunctionOptionsBase {
    [CompilerGeneratedAttribute]
private static UpsertFunctionOptions <Default>k__BackingField;
    internal static UpsertFunctionOptions Default { get; }
    private static UpsertFunctionOptions();
    [CompilerGeneratedAttribute]
internal static UpsertFunctionOptions get_Default();
}
[ExtensionAttribute]
public static class Couchbase.Management.HttpResponseMessageExtensions : object {
    [ExtensionAttribute]
public static void ThrowIfRateLimitingError(HttpResponseMessage msg, string body, ManagementErrorContext ctx);
    [ExtensionAttribute]
public static void ThrowOnError(HttpResponseMessage msg, ManagementErrorContext ctx);
}
public interface Couchbase.Management.IClusterManager {
    public abstract virtual Task Info();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonSourceGenerationOptionsAttribute]
[JsonSerializableAttribute("Couchbase.Management.Buckets.BucketSettings")]
[JsonSerializableAttribute("System.Collections.Generic.List`1<Couchbase.Management.Buckets.BucketSettings>")]
[JsonSerializableAttribute("Couchbase.Core.Exceptions.ManagementErrorContext")]
[JsonSerializableAttribute("Couchbase.Management.Eventing.EventingFunctionErrorContext")]
[GeneratedCodeAttribute("System.Text.Json.SourceGeneration", "8.0.10.31311")]
internal class Couchbase.Management.ManagementSerializerContext : JsonSerializerContext {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<ManagementErrorContext> _ManagementErrorContext;
    [NullableAttribute("2")]
private JsonTypeInfo`1<RetryReason> _RetryReason;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<BucketSettings> _BucketSettings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<EventingFunctionErrorContext> _EventingFunctionErrorContext;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<RetryReason>> _ListRetryReason;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<BucketSettings>> _ListBucketSettings;
    [NullableAttribute("2")]
private JsonTypeInfo`1<HttpStatusCode> _HttpStatusCode;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<string> _String;
    private static JsonSerializerOptions s_defaultOptions;
    [CompilerGeneratedAttribute]
private static ManagementSerializerContext <Default>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JsonSerializerOptions <GeneratedSerializerOptions>k__BackingField;
    public JsonTypeInfo`1<ManagementErrorContext> ManagementErrorContext { get; }
    public JsonTypeInfo`1<RetryReason> RetryReason { get; }
    public JsonTypeInfo`1<BucketSettings> BucketSettings { get; }
    public JsonTypeInfo`1<EventingFunctionErrorContext> EventingFunctionErrorContext { get; }
    public JsonTypeInfo`1<List`1<RetryReason>> ListRetryReason { get; }
    public JsonTypeInfo`1<List`1<BucketSettings>> ListBucketSettings { get; }
    public JsonTypeInfo`1<HttpStatusCode> HttpStatusCode { get; }
    public JsonTypeInfo`1<string> String { get; }
    public static ManagementSerializerContext Default { get; }
    [NullableAttribute("2")]
protected JsonSerializerOptions GeneratedSerializerOptions { get; }
    public ManagementSerializerContext(JsonSerializerOptions options);
    private static ManagementSerializerContext();
    public JsonTypeInfo`1<ManagementErrorContext> get_ManagementErrorContext();
    private JsonTypeInfo`1<ManagementErrorContext> Create_ManagementErrorContext(JsonSerializerOptions options);
    private static JsonPropertyInfo[] ManagementErrorContextPropInit(JsonSerializerOptions options);
    public JsonTypeInfo`1<RetryReason> get_RetryReason();
    private JsonTypeInfo`1<RetryReason> Create_RetryReason(JsonSerializerOptions options);
    public JsonTypeInfo`1<BucketSettings> get_BucketSettings();
    private JsonTypeInfo`1<BucketSettings> Create_BucketSettings(JsonSerializerOptions options);
    public JsonTypeInfo`1<EventingFunctionErrorContext> get_EventingFunctionErrorContext();
    private JsonTypeInfo`1<EventingFunctionErrorContext> Create_EventingFunctionErrorContext(JsonSerializerOptions options);
    private static JsonPropertyInfo[] EventingFunctionErrorContextPropInit(JsonSerializerOptions options);
    public JsonTypeInfo`1<List`1<RetryReason>> get_ListRetryReason();
    private JsonTypeInfo`1<List`1<RetryReason>> Create_ListRetryReason(JsonSerializerOptions options);
    private void ListRetryReasonSerializeHandler(Utf8JsonWriter writer, List`1<RetryReason> value);
    public JsonTypeInfo`1<List`1<BucketSettings>> get_ListBucketSettings();
    private JsonTypeInfo`1<List`1<BucketSettings>> Create_ListBucketSettings(JsonSerializerOptions options);
    private void ListBucketSettingsSerializeHandler(Utf8JsonWriter writer, List`1<BucketSettings> value);
    public JsonTypeInfo`1<HttpStatusCode> get_HttpStatusCode();
    private JsonTypeInfo`1<HttpStatusCode> Create_HttpStatusCode(JsonSerializerOptions options);
    public JsonTypeInfo`1<string> get_String();
    private JsonTypeInfo`1<string> Create_String(JsonSerializerOptions options);
    [CompilerGeneratedAttribute]
public static ManagementSerializerContext get_Default();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual JsonSerializerOptions get_GeneratedSerializerOptions();
    private static bool TryGetTypeInfoForRuntimeCustomConverter(JsonSerializerOptions options, JsonTypeInfo`1& jsonTypeInfo);
    private static JsonConverter GetRuntimeConverterForType(Type type, JsonSerializerOptions options);
    private static JsonConverter ExpandConverter(Type type, JsonConverter converter, JsonSerializerOptions options, bool validateCanConvert);
    public virtual JsonTypeInfo GetTypeInfo(Type type);
    private sealed virtual override JsonTypeInfo global::System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver.GetTypeInfo(Type type, JsonSerializerOptions options);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.Management.Query.BuildDeferredQueryIndexOptions : object {
    [NullableAttribute("1")]
public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScopeNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CollectionNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QueryContext>k__BackingField;
    internal CancellationToken TokenValue { get; private set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    internal string ScopeNameValue { get; internal set; }
    internal string CollectionNameValue { get; internal set; }
    internal string QueryContext { get; internal set; }
    [NullableAttribute("1")]
public static BuildDeferredQueryIndexOptions Default { get; }
    private static BuildDeferredQueryIndexOptions();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    [CompilerGeneratedAttribute]
internal string get_ScopeNameValue();
    [CompilerGeneratedAttribute]
internal void set_ScopeNameValue(string value);
    [CompilerGeneratedAttribute]
internal string get_CollectionNameValue();
    [CompilerGeneratedAttribute]
internal void set_CollectionNameValue(string value);
    [CompilerGeneratedAttribute]
internal string get_QueryContext();
    [CompilerGeneratedAttribute]
internal void set_QueryContext(string value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Use collection.QueryIndexes instead.")]
public BuildDeferredQueryIndexOptions ScopeName(string scopeName);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Use collection.QueryIndexes instead.")]
public BuildDeferredQueryIndexOptions CollectionName(string collectionName);
    [NullableContextAttribute("1")]
public BuildDeferredQueryIndexOptions CancellationToken(CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
public BuildDeferredQueryIndexOptions Timeout(TimeSpan timeout);
    [NullableContextAttribute("1")]
public static BuildDeferredQueryIndexOptions get_Default();
    public void Deconstruct(CancellationToken& tokenValue, String& scopeNameValue, String& collectionNameValue, String& queryContext, TimeSpan& timeoutValue);
    [NullableContextAttribute("1")]
public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Management.Query.CollectionQueryIndexManager : object {
    private IQueryIndexManager _queryIndexManager;
    private IBucket _bucket;
    private ICouchbaseCollection _collection;
    public CollectionQueryIndexManager(IQueryIndexManager queryIndexManager, IBucket bucket, ICouchbaseCollection collection);
    public sealed virtual Task`1<IEnumerable`1<QueryIndex>> GetAllIndexesAsync(GetAllQueryIndexOptions options);
    public sealed virtual Task CreateIndexAsync(string indexName, IEnumerable`1<string> fields, CreateQueryIndexOptions options);
    public sealed virtual Task CreatePrimaryIndexAsync(CreatePrimaryQueryIndexOptions options);
    public sealed virtual Task DropIndexAsync(string indexName, DropQueryIndexOptions options);
    public sealed virtual Task DropPrimaryIndexAsync(DropPrimaryQueryIndexOptions options);
    public sealed virtual Task WatchIndexesAsync(IEnumerable`1<string> indexNames, TimeSpan duration, WatchQueryIndexOptions options);
    public sealed virtual Task BuildDeferredIndexesAsync(BuildDeferredQueryIndexOptions options);
    [NullableContextAttribute("2")]
private static void IsUsingDeprecatedOptions(string scopeName, string collectionName);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.Management.Query.CreatePrimaryQueryIndexOptions : object {
    [NullableAttribute("1")]
public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private string <IndexNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreIfExistsValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DeferredValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScopeNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CollectionNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QueryContext>k__BackingField;
    internal string IndexNameValue { get; internal set; }
    internal bool IgnoreIfExistsValue { get; internal set; }
    internal bool DeferredValue { get; internal set; }
    internal CancellationToken TokenValue { get; private set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    internal string ScopeNameValue { get; internal set; }
    internal string CollectionNameValue { get; internal set; }
    internal string QueryContext { get; internal set; }
    [NullableAttribute("1")]
public static CreatePrimaryQueryIndexOptions Default { get; }
    private static CreatePrimaryQueryIndexOptions();
    [CompilerGeneratedAttribute]
internal string get_IndexNameValue();
    [CompilerGeneratedAttribute]
internal void set_IndexNameValue(string value);
    [CompilerGeneratedAttribute]
internal bool get_IgnoreIfExistsValue();
    [CompilerGeneratedAttribute]
internal void set_IgnoreIfExistsValue(bool value);
    [CompilerGeneratedAttribute]
internal bool get_DeferredValue();
    [CompilerGeneratedAttribute]
internal void set_DeferredValue(bool value);
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    [CompilerGeneratedAttribute]
internal string get_ScopeNameValue();
    [CompilerGeneratedAttribute]
internal void set_ScopeNameValue(string value);
    [CompilerGeneratedAttribute]
internal string get_CollectionNameValue();
    [CompilerGeneratedAttribute]
internal void set_CollectionNameValue(string value);
    [CompilerGeneratedAttribute]
internal string get_QueryContext();
    [CompilerGeneratedAttribute]
internal void set_QueryContext(string value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Use collection.QueryIndexes instead.")]
public CreatePrimaryQueryIndexOptions ScopeName(string scopeName);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Use collection.QueryIndexes instead.")]
public CreatePrimaryQueryIndexOptions CollectionName(string collectionName);
    [NullableContextAttribute("1")]
public CreatePrimaryQueryIndexOptions IndexName(string indexName);
    [NullableContextAttribute("1")]
public CreatePrimaryQueryIndexOptions IgnoreIfExists(bool ignoreIfExists);
    [NullableContextAttribute("1")]
public CreatePrimaryQueryIndexOptions Deferred(bool deferred);
    [NullableContextAttribute("1")]
public CreatePrimaryQueryIndexOptions CancellationToken(CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
public CreatePrimaryQueryIndexOptions Timeout(TimeSpan timeout);
    [NullableContextAttribute("1")]
public static CreatePrimaryQueryIndexOptions get_Default();
    public void Deconstruct(String& indexNameValue, Boolean& ignoreIfExistsValue, Boolean& deferredValue, CancellationToken& tokenValue, String& scopeNameValue, String& collectionNameValue, String& queryContext, TimeSpan& timeoutValue);
    [NullableContextAttribute("1")]
public ReadOnly AsReadOnly();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.Management.Query.CreateQueryIndexOptions : object {
    [NullableAttribute("1")]
public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private bool <IgnoreIfExistsValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DeferredValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScopeNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CollectionNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QueryContext>k__BackingField;
    internal bool IgnoreIfExistsValue { get; internal set; }
    internal bool DeferredValue { get; internal set; }
    internal CancellationToken TokenValue { get; private set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    internal string ScopeNameValue { get; internal set; }
    internal string CollectionNameValue { get; internal set; }
    internal string QueryContext { get; internal set; }
    [NullableAttribute("1")]
public static CreateQueryIndexOptions Default { get; }
    private static CreateQueryIndexOptions();
    [CompilerGeneratedAttribute]
internal bool get_IgnoreIfExistsValue();
    [CompilerGeneratedAttribute]
internal void set_IgnoreIfExistsValue(bool value);
    [CompilerGeneratedAttribute]
internal bool get_DeferredValue();
    [CompilerGeneratedAttribute]
internal void set_DeferredValue(bool value);
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    [CompilerGeneratedAttribute]
internal string get_ScopeNameValue();
    [CompilerGeneratedAttribute]
internal void set_ScopeNameValue(string value);
    [CompilerGeneratedAttribute]
internal string get_CollectionNameValue();
    [CompilerGeneratedAttribute]
internal void set_CollectionNameValue(string value);
    [CompilerGeneratedAttribute]
internal string get_QueryContext();
    [CompilerGeneratedAttribute]
internal void set_QueryContext(string value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Use collection.QueryIndexes instead.")]
public CreateQueryIndexOptions ScopeName(string scopeName);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Use collection.QueryIndexes instead.")]
public CreateQueryIndexOptions CollectionName(string collectionName);
    [NullableContextAttribute("1")]
public CreateQueryIndexOptions IgnoreIfExists(bool ignoreIfExists);
    [NullableContextAttribute("1")]
public CreateQueryIndexOptions Deferred(bool deferred);
    [NullableContextAttribute("1")]
public CreateQueryIndexOptions CancellationToken(CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
public CreateQueryIndexOptions Timeout(TimeSpan timeout);
    [NullableContextAttribute("1")]
public static CreateQueryIndexOptions get_Default();
    public void Deconstruct(Boolean& ignoreIfExistsValue, Boolean& deferredValue, CancellationToken& tokenValue, String& scopeNameValue, String& collectionNameValue, String& queryContext, TimeSpan& timeoutValue);
    [NullableContextAttribute("1")]
public ReadOnly AsReadOnly();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.Management.Query.DropPrimaryQueryIndexOptions : object {
    [NullableAttribute("1")]
public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private string <IndexNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreIfExistsValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScopeNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CollectionNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QueryContext>k__BackingField;
    internal string IndexNameValue { get; internal set; }
    internal bool IgnoreIfExistsValue { get; internal set; }
    internal CancellationToken TokenValue { get; private set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    internal string ScopeNameValue { get; internal set; }
    internal string CollectionNameValue { get; internal set; }
    internal string QueryContext { get; internal set; }
    [NullableAttribute("1")]
public static DropPrimaryQueryIndexOptions Default { get; }
    private static DropPrimaryQueryIndexOptions();
    [CompilerGeneratedAttribute]
internal string get_IndexNameValue();
    [CompilerGeneratedAttribute]
internal void set_IndexNameValue(string value);
    [CompilerGeneratedAttribute]
internal bool get_IgnoreIfExistsValue();
    [CompilerGeneratedAttribute]
internal void set_IgnoreIfExistsValue(bool value);
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    [CompilerGeneratedAttribute]
internal string get_ScopeNameValue();
    [CompilerGeneratedAttribute]
internal void set_ScopeNameValue(string value);
    [CompilerGeneratedAttribute]
internal string get_CollectionNameValue();
    [CompilerGeneratedAttribute]
internal void set_CollectionNameValue(string value);
    [CompilerGeneratedAttribute]
internal string get_QueryContext();
    [CompilerGeneratedAttribute]
internal void set_QueryContext(string value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Use collection.QueryIndexes instead.")]
public DropPrimaryQueryIndexOptions ScopeName(string scopeName);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Use collection.QueryIndexes instead.")]
public DropPrimaryQueryIndexOptions CollectionName(string collectionName);
    [NullableContextAttribute("1")]
public DropPrimaryQueryIndexOptions IndexName(string indexName);
    [NullableContextAttribute("1")]
public DropPrimaryQueryIndexOptions IgnoreIfExists(bool ignoreIfExists);
    [NullableContextAttribute("1")]
public DropPrimaryQueryIndexOptions CancellationToken(CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
public DropPrimaryQueryIndexOptions Timeout(TimeSpan timeout);
    [NullableContextAttribute("1")]
public static DropPrimaryQueryIndexOptions get_Default();
    public void Deconstruct(String& indexNameValue, Boolean& ignoreIfExistsValue, CancellationToken& tokenValue, String& scopeNameValue, String& collectionNameValue, String& queryContext, TimeSpan& timeoutValue);
    [NullableContextAttribute("1")]
public ReadOnly AsReadOnly();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.Management.Query.DropQueryIndexOptions : object {
    [NullableAttribute("1")]
public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private bool <IgnoreIfExistsValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScopeNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CollectionNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QueryContext>k__BackingField;
    internal bool IgnoreIfExistsValue { get; internal set; }
    internal CancellationToken TokenValue { get; private set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    internal string ScopeNameValue { get; internal set; }
    internal string CollectionNameValue { get; internal set; }
    internal string QueryContext { get; internal set; }
    [NullableAttribute("1")]
public static DropQueryIndexOptions Default { get; }
    private static DropQueryIndexOptions();
    [CompilerGeneratedAttribute]
internal bool get_IgnoreIfExistsValue();
    [CompilerGeneratedAttribute]
internal void set_IgnoreIfExistsValue(bool value);
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    [CompilerGeneratedAttribute]
internal string get_ScopeNameValue();
    [CompilerGeneratedAttribute]
internal void set_ScopeNameValue(string value);
    [CompilerGeneratedAttribute]
internal string get_CollectionNameValue();
    [CompilerGeneratedAttribute]
internal void set_CollectionNameValue(string value);
    [CompilerGeneratedAttribute]
internal string get_QueryContext();
    [CompilerGeneratedAttribute]
internal void set_QueryContext(string value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Use collection.QueryIndexes instead.")]
public DropQueryIndexOptions ScopeName(string scopeName);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Use collection.QueryIndexes instead.")]
public DropQueryIndexOptions CollectionName(string collectionName);
    [NullableContextAttribute("1")]
public DropQueryIndexOptions IgnoreIfExists(bool ignoreIfExists);
    [NullableContextAttribute("1")]
public DropQueryIndexOptions CancellationToken(CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
public DropQueryIndexOptions Timeout(TimeSpan timeout);
    [NullableContextAttribute("1")]
public static DropQueryIndexOptions get_Default();
    public void Deconstruct(Boolean& ignoreIfExistsValue, CancellationToken& tokenValue, String& scopeNameValue, String& collectionNameValue, String& queryContext, TimeSpan& timeoutValue);
    [NullableContextAttribute("1")]
public ReadOnly AsReadOnly();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.Management.Query.GetAllQueryIndexOptions : object {
    [NullableAttribute("1")]
public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScopeNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CollectionNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QueryContext>k__BackingField;
    internal CancellationToken TokenValue { get; private set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    internal string ScopeNameValue { get; internal set; }
    internal string CollectionNameValue { get; internal set; }
    internal string QueryContext { get; internal set; }
    [NullableAttribute("1")]
public static GetAllQueryIndexOptions Default { get; }
    private static GetAllQueryIndexOptions();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    [CompilerGeneratedAttribute]
internal string get_ScopeNameValue();
    [CompilerGeneratedAttribute]
internal void set_ScopeNameValue(string value);
    [CompilerGeneratedAttribute]
internal string get_CollectionNameValue();
    [CompilerGeneratedAttribute]
internal void set_CollectionNameValue(string value);
    [CompilerGeneratedAttribute]
internal string get_QueryContext();
    [CompilerGeneratedAttribute]
internal void set_QueryContext(string value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Use collection.QueryIndexes instead.")]
public GetAllQueryIndexOptions ScopeName(string scopeName);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Use collection.QueryIndexes instead.")]
public GetAllQueryIndexOptions CollectionName(string collectionName);
    [NullableContextAttribute("1")]
public GetAllQueryIndexOptions CancellationToken(CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
public GetAllQueryIndexOptions Timeout(TimeSpan timeout);
    [NullableContextAttribute("1")]
public static GetAllQueryIndexOptions get_Default();
    public void Deconstruct(CancellationToken& tokenValue, String& scopeNameValue, String& collectionNameValue, String& queryContext, TimeSpan& timeoutValue);
    [NullableContextAttribute("1")]
public ReadOnly AsReadOnly();
}
public interface Couchbase.Management.Query.ICollectionQueryIndexManager {
    public abstract virtual Task`1<IEnumerable`1<QueryIndex>> GetAllIndexesAsync(GetAllQueryIndexOptions options);
    public abstract virtual Task CreateIndexAsync(string indexName, IEnumerable`1<string> fields, CreateQueryIndexOptions options);
    public abstract virtual Task CreatePrimaryIndexAsync(CreatePrimaryQueryIndexOptions options);
    public abstract virtual Task DropIndexAsync(string indexName, DropQueryIndexOptions options);
    public abstract virtual Task DropPrimaryIndexAsync(DropPrimaryQueryIndexOptions options);
    public abstract virtual Task WatchIndexesAsync(IEnumerable`1<string> indexNames, TimeSpan duration, WatchQueryIndexOptions options);
    public abstract virtual Task BuildDeferredIndexesAsync(BuildDeferredQueryIndexOptions options);
}
public interface Couchbase.Management.Query.ICollectionQueryIndexManagerFactory {
    public abstract virtual ICollectionQueryIndexManager Create(IBucket bucket, ICouchbaseCollection collection);
}
[NullableContextAttribute("1")]
public interface Couchbase.Management.Query.IQueryIndexManager {
    public abstract virtual Task`1<IEnumerable`1<QueryIndex>> GetAllIndexesAsync(string bucketName, GetAllQueryIndexOptions options);
    public abstract virtual Task CreateIndexAsync(string bucketName, string indexName, IEnumerable`1<string> indexKeys, CreateQueryIndexOptions options);
    public abstract virtual Task CreatePrimaryIndexAsync(string bucketName, CreatePrimaryQueryIndexOptions options);
    public abstract virtual Task DropIndexAsync(string bucketName, string indexName, DropQueryIndexOptions options);
    public abstract virtual Task DropPrimaryIndexAsync(string bucketName, DropPrimaryQueryIndexOptions options);
    public abstract virtual Task BuildDeferredIndexesAsync(string bucketName, BuildDeferredQueryIndexOptions options);
    public abstract virtual Task WatchIndexesAsync(string bucketName, IEnumerable`1<string> indexNames, WatchQueryIndexOptions options);
}
internal static class Couchbase.Management.Query.QueryGenerator : object {
    private static string Default;
    private static string DefaultCollectionAllIndexesStatement;
    private static string NonDefaultCollectionAllIndexesStatement;
    private static string BucketLevelAllIndexesStatement;
    public static string CreateIndexStatement(string bucketName, string indexName, IEnumerable`1<string> indexKeys, CreateQueryIndexOptions options);
    public static string CreateDeferredIndexStatement(string bucketName, string indexName, BuildDeferredQueryIndexOptions options);
    public static string CreatePrimaryIndexStatement(string bucketName, CreatePrimaryQueryIndexOptions options);
    public static string CreateDropIndexStatement(string bucketName, string indexName, DropQueryIndexOptions options);
    public static string CreateDropPrimaryIndexStatement(string bucketName, DropPrimaryQueryIndexOptions options);
    public static string CreateGetAllIndexesStatement(GetAllQueryIndexOptions options);
}
public class Couchbase.Management.Query.QueryIndex : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPrimary>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <State>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Keyspace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Condition>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <IndexKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScopeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BucketNameField>k__BackingField;
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyAttribute("is_primary")]
public bool IsPrimary { get; public set; }
    [JsonPropertyAttribute("type")]
public IndexType Type { get; public set; }
    [JsonPropertyAttribute("state")]
public string State { get; public set; }
    [JsonPropertyAttribute("keyspace_id")]
public string Keyspace { get; public set; }
    [JsonPropertyAttribute("partition")]
public string Partition { get; public set; }
    [JsonPropertyAttribute("condition")]
public string Condition { get; public set; }
    [JsonPropertyAttribute("index_key")]
public List`1<string> IndexKey { get; public set; }
    [JsonPropertyAttribute("scope_id")]
public string ScopeName { get; public set; }
    [JsonPropertyAttribute("bucket_id")]
internal string BucketNameField { get; internal set; }
    public string BucketName { get; public set; }
    public string CollectionName { get; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_IsPrimary();
    [CompilerGeneratedAttribute]
public void set_IsPrimary(bool value);
    [CompilerGeneratedAttribute]
public IndexType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(IndexType value);
    [CompilerGeneratedAttribute]
public string get_State();
    [CompilerGeneratedAttribute]
public void set_State(string value);
    [CompilerGeneratedAttribute]
public string get_Keyspace();
    [CompilerGeneratedAttribute]
public void set_Keyspace(string value);
    [CompilerGeneratedAttribute]
public string get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(string value);
    [CompilerGeneratedAttribute]
public string get_Condition();
    [CompilerGeneratedAttribute]
public void set_Condition(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_IndexKey();
    [CompilerGeneratedAttribute]
public void set_IndexKey(List`1<string> value);
    [CompilerGeneratedAttribute]
public string get_ScopeName();
    [CompilerGeneratedAttribute]
public void set_ScopeName(string value);
    [CompilerGeneratedAttribute]
internal string get_BucketNameField();
    [CompilerGeneratedAttribute]
internal void set_BucketNameField(string value);
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_CollectionName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Management.Query.QueryIndexManager : object {
    private static TimeSpan WatchIndexSleepDuration;
    private IQueryClient _queryClient;
    private ILogger`1<QueryIndexManager> _logger;
    private IRedactor _redactor;
    public QueryIndexManager(IQueryClient queryClient, ILogger`1<QueryIndexManager> logger, IRedactor redactor);
    private static QueryIndexManager();
    [AsyncStateMachineAttribute("Couchbase.Management.Query.QueryIndexManager/<BuildDeferredIndexesAsync>d__5")]
public sealed virtual Task BuildDeferredIndexesAsync(string bucketName, BuildDeferredQueryIndexOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Query.QueryIndexManager/<CreateIndexAsync>d__6")]
public sealed virtual Task CreateIndexAsync(string bucketName, string indexName, IEnumerable`1<string> indexKeys, CreateQueryIndexOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Query.QueryIndexManager/<CreatePrimaryIndexAsync>d__7")]
public sealed virtual Task CreatePrimaryIndexAsync(string bucketName, CreatePrimaryQueryIndexOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Query.QueryIndexManager/<DropIndexAsync>d__8")]
public sealed virtual Task DropIndexAsync(string bucketName, string indexName, DropQueryIndexOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Query.QueryIndexManager/<DropPrimaryIndexAsync>d__9")]
public sealed virtual Task DropPrimaryIndexAsync(string bucketName, DropPrimaryQueryIndexOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Query.QueryIndexManager/<GetAllIndexesAsync>d__10")]
public sealed virtual Task`1<IEnumerable`1<QueryIndex>> GetAllIndexesAsync(string bucketName, GetAllQueryIndexOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Query.QueryIndexManager/<WatchIndexesAsync>d__11")]
public sealed virtual Task WatchIndexesAsync(string bucketName, IEnumerable`1<string> indexNames, WatchQueryIndexOptions options);
    private void Validate(string bucketName, string scope, string collection);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Couchbase.Management.Query.QueryIndexManagerExtensions : object {
    [ExtensionAttribute]
public static Task`1<IEnumerable`1<QueryIndex>> GetAllIndexesAsync(IQueryIndexManager queryIndexManager, string bucketName);
    [ExtensionAttribute]
public static Task`1<IEnumerable`1<QueryIndex>> GetAllIndexesAsync(IQueryIndexManager queryIndexManager, string bucketName, Action`1<GetAllQueryIndexOptions> configureOptions);
    [ExtensionAttribute]
public static Task CreateIndexAsync(IQueryIndexManager queryIndexManager, string bucketName, string indexName, IEnumerable`1<string> fields);
    [ExtensionAttribute]
public static Task CreateIndexAsync(IQueryIndexManager queryIndexManager, string bucketName, string indexName, IEnumerable`1<string> fields, Action`1<CreateQueryIndexOptions> configureOptions);
    [ExtensionAttribute]
public static Task CreatePrimaryIndexAsync(IQueryIndexManager queryIndexManager, string bucketName);
    [ExtensionAttribute]
public static Task CreatePrimaryIndexAsync(IQueryIndexManager queryIndexManager, string bucketName, Action`1<CreatePrimaryQueryIndexOptions> configureOptions);
    [ExtensionAttribute]
public static Task DropIndexAsync(IQueryIndexManager queryIndexManager, string bucketName, string indexName);
    [ExtensionAttribute]
public static Task DropIndexAsync(IQueryIndexManager queryIndexManager, string bucketName, string indexName, Action`1<DropQueryIndexOptions> configureOptions);
    [ExtensionAttribute]
public static Task DropPrimaryIndexAsync(IQueryIndexManager queryIndexManager, string bucketName);
    [ExtensionAttribute]
public static Task DropPrimaryIndexAsync(IQueryIndexManager queryIndexManager, string bucketName, Action`1<DropPrimaryQueryIndexOptions> configureOptions);
    [ExtensionAttribute]
public static Task BuildDeferredIndexesAsync(IQueryIndexManager queryIndexManager, string bucketName);
    [ExtensionAttribute]
public static Task BuildDeferredIndexesAsync(IQueryIndexManager queryIndexManager, string bucketName, Action`1<BuildDeferredQueryIndexOptions> configureOptions);
    [ExtensionAttribute]
public static Task WatchIndexesAsync(IQueryIndexManager queryIndexManager, string bucketName, IEnumerable`1<string> indexNames);
    [ExtensionAttribute]
public static Task WatchIndexesAsync(IQueryIndexManager queryIndexManager, string bucketName, IEnumerable`1<string> indexNames, Action`1<WatchQueryIndexOptions> configureOptions);
}
public class Couchbase.Management.Query.QueryIndexNotFoundException : Exception {
    public QueryIndexNotFoundException(string bucketName, string indexName);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.Management.Query.WatchQueryIndexOptions : object {
    [NullableAttribute("1")]
public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private bool <WatchPrimaryValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScopeNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CollectionNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QueryContext>k__BackingField;
    internal bool WatchPrimaryValue { get; internal set; }
    internal CancellationToken TokenValue { get; private set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    internal string ScopeNameValue { get; internal set; }
    internal string CollectionNameValue { get; internal set; }
    internal string QueryContext { get; internal set; }
    [NullableAttribute("1")]
public static WatchQueryIndexOptions Default { get; }
    private static WatchQueryIndexOptions();
    [CompilerGeneratedAttribute]
internal bool get_WatchPrimaryValue();
    [CompilerGeneratedAttribute]
internal void set_WatchPrimaryValue(bool value);
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    [CompilerGeneratedAttribute]
internal string get_ScopeNameValue();
    [CompilerGeneratedAttribute]
internal void set_ScopeNameValue(string value);
    [CompilerGeneratedAttribute]
internal string get_CollectionNameValue();
    [CompilerGeneratedAttribute]
internal void set_CollectionNameValue(string value);
    [CompilerGeneratedAttribute]
internal string get_QueryContext();
    [CompilerGeneratedAttribute]
internal void set_QueryContext(string value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Use collection.QueryIndexes instead.")]
public WatchQueryIndexOptions ScopeName(string scopeName);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Use collection.QueryIndexes instead.")]
public WatchQueryIndexOptions CollectionName(string collectionName);
    [NullableContextAttribute("1")]
public WatchQueryIndexOptions WatchPrimary(bool watchPrimary);
    [NullableContextAttribute("1")]
public WatchQueryIndexOptions CancellationToken(CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
public WatchQueryIndexOptions Timeout(TimeSpan timeout);
    [NullableContextAttribute("1")]
public static WatchQueryIndexOptions get_Default();
    public void Deconstruct(Boolean& watchPrimaryValue, CancellationToken& tokenValue, String& scopeNameValue, String& collectionNameValue, String& queryContext, TimeSpan& timeoutValue);
    [NullableContextAttribute("1")]
public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Search.AllowQueryingSearchIndexOptions : object {
    public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; private set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static AllowQueryingSearchIndexOptions Default { get; }
    private static AllowQueryingSearchIndexOptions();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public AllowQueryingSearchIndexOptions CancellationToken(CancellationToken cancellationToken);
    public AllowQueryingSearchIndexOptions Timeout(TimeSpan timeout);
    public static AllowQueryingSearchIndexOptions get_Default();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Search.DisallowQueryingSearchIndexOptions : object {
    public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; private set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static DisallowQueryingSearchIndexOptions Default { get; }
    private static DisallowQueryingSearchIndexOptions();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public DisallowQueryingSearchIndexOptions CancellationToken(CancellationToken cancellationToken);
    public DisallowQueryingSearchIndexOptions Timeout(TimeSpan timeout);
    public static DisallowQueryingSearchIndexOptions get_Default();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Search.DropSearchIndexOptions : object {
    public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; private set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static DropSearchIndexOptions Default { get; }
    private static DropSearchIndexOptions();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public DropSearchIndexOptions CancellationToken(CancellationToken cancellationToken);
    public DropSearchIndexOptions Timeout(TimeSpan timeout);
    public static DropSearchIndexOptions get_Default();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Search.FreezePlanSearchIndexOptions : object {
    public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; private set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static FreezePlanSearchIndexOptions Default { get; }
    private static FreezePlanSearchIndexOptions();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public FreezePlanSearchIndexOptions CancellationToken(CancellationToken cancellationToken);
    public FreezePlanSearchIndexOptions Timeout(TimeSpan timeout);
    public static FreezePlanSearchIndexOptions get_Default();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Search.GetAllSearchIndexesOptions : object {
    public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; private set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static GetAllSearchIndexesOptions Default { get; }
    private static GetAllSearchIndexesOptions();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public GetAllSearchIndexesOptions CancellationToken(CancellationToken cancellationToken);
    public GetAllSearchIndexesOptions Timeout(TimeSpan timeout);
    public static GetAllSearchIndexesOptions get_Default();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Search.GetSearchIndexDocumentCountOptions : object {
    public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; private set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static GetSearchIndexDocumentCountOptions Default { get; }
    private static GetSearchIndexDocumentCountOptions();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public GetSearchIndexDocumentCountOptions CancellationToken(CancellationToken cancellationToken);
    public GetSearchIndexDocumentCountOptions Timeout(TimeSpan timeout);
    public static GetSearchIndexDocumentCountOptions get_Default();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Search.GetSearchIndexOptions : object {
    public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; private set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static GetSearchIndexOptions Default { get; }
    private static GetSearchIndexOptions();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public GetSearchIndexOptions CancellationToken(CancellationToken cancellationToken);
    public GetSearchIndexOptions Timeout(TimeSpan timeout);
    public static GetSearchIndexOptions get_Default();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
public interface Couchbase.Management.Search.ISearchIndexManager {
    public abstract virtual Task`1<SearchIndex> GetIndexAsync(string indexName, GetSearchIndexOptions options, IScope scope);
    [NullableContextAttribute("2")]
public abstract virtual Task`1<IEnumerable`1<SearchIndex>> GetAllIndexesAsync(GetAllSearchIndexesOptions options, IScope scope);
    public abstract virtual Task UpsertIndexAsync(SearchIndex indexDefinition, UpsertSearchIndexOptions options, IScope scope);
    public abstract virtual Task DropIndexAsync(string indexName, DropSearchIndexOptions options, IScope scope);
    public abstract virtual Task`1<int> GetIndexedDocumentsCountAsync(string indexName, GetSearchIndexDocumentCountOptions options, IScope scope);
    public abstract virtual Task PauseIngestAsync(string indexName, PauseIngestSearchIndexOptions options, IScope scope);
    public abstract virtual Task ResumeIngestAsync(string indexName, ResumeIngestSearchIndexOptions options, IScope scope);
    public abstract virtual Task AllowQueryingAsync(string indexName, AllowQueryingSearchIndexOptions options, IScope scope);
    public abstract virtual Task DisallowQueryingAsync(string indexName, DisallowQueryingSearchIndexOptions options, IScope scope);
    public abstract virtual Task FreezePlanAsync(string indexName, FreezePlanSearchIndexOptions options, IScope scope);
    public abstract virtual Task UnfreezePlanAsync(string indexName, UnfreezePlanSearchIndexOptions options, IScope scope);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Search.PauseIngestSearchIndexOptions : object {
    public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; private set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static PauseIngestSearchIndexOptions Default { get; }
    private static PauseIngestSearchIndexOptions();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public PauseIngestSearchIndexOptions CancellationToken(CancellationToken cancellationToken);
    public PauseIngestSearchIndexOptions Timeout(TimeSpan timeout);
    public static PauseIngestSearchIndexOptions get_Default();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Search.ResumeIngestSearchIndexOptions : object {
    public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; private set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static ResumeIngestSearchIndexOptions Default { get; }
    private static ResumeIngestSearchIndexOptions();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public ResumeIngestSearchIndexOptions CancellationToken(CancellationToken cancellationToken);
    public ResumeIngestSearchIndexOptions Timeout(TimeSpan timeout);
    public static ResumeIngestSearchIndexOptions get_Default();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
public class Couchbase.Management.Search.SearchIndex : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SourceType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SourceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uuid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SourceUuid>k__BackingField;
    [DynamicAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Params>k__BackingField;
    [DynamicAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, object> <SourceParams>k__BackingField;
    [DynamicAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, object> <PlanParams>k__BackingField;
    [JsonPropertyAttribute("type")]
public string Type { get; public set; }
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyAttribute("sourceType")]
public string SourceType { get; public set; }
    [JsonPropertyAttribute("sourceName")]
public string SourceName { get; public set; }
    [JsonPropertyAttribute]
public string Uuid { get; public set; }
    [JsonPropertyAttribute]
public string SourceUuid { get; public set; }
    [DynamicAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsonPropertyAttribute]
public Dictionary`2<string, object> Params { get; public set; }
    [DynamicAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsonPropertyAttribute]
public Dictionary`2<string, object> SourceParams { get; public set; }
    [DynamicAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsonPropertyAttribute]
public Dictionary`2<string, object> PlanParams { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_SourceType();
    [CompilerGeneratedAttribute]
public void set_SourceType(string value);
    [CompilerGeneratedAttribute]
public string get_SourceName();
    [CompilerGeneratedAttribute]
public void set_SourceName(string value);
    [CompilerGeneratedAttribute]
public string get_Uuid();
    [CompilerGeneratedAttribute]
public void set_Uuid(string value);
    [CompilerGeneratedAttribute]
public string get_SourceUuid();
    [CompilerGeneratedAttribute]
public void set_SourceUuid(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Params();
    [CompilerGeneratedAttribute]
public void set_Params(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_SourceParams();
    [CompilerGeneratedAttribute]
public void set_SourceParams(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_PlanParams();
    [CompilerGeneratedAttribute]
public void set_PlanParams(Dictionary`2<string, object> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Management.Search.SearchIndexManager : object {
    private IServiceUriProvider _serviceUriProvider;
    private ICouchbaseHttpClientFactory _httpClientFactory;
    private ILogger`1<SearchIndexManager> _logger;
    private IRedactor _redactor;
    private ClusterContext _context;
    public SearchIndexManager(IServiceUriProvider serviceUriProvider, ICouchbaseHttpClientFactory httpClientFactory, ILogger`1<SearchIndexManager> logger, IRedactor redactor, ClusterContext context);
    [NullableContextAttribute("2")]
private Uri GetIndexUri(IScope scope, string indexName);
    private Uri GetQueryControlUri(string indexName, bool allow, IScope scope);
    private Uri GetFreezeControlUri(string indexName, bool freeze, IScope scope);
    private Uri GetIngestControlUri(string indexName, bool pause, IScope scope);
    private Uri GetIndexedDocumentCountUri(string indexName, IScope scope);
    [AsyncStateMachineAttribute("Couchbase.Management.Search.SearchIndexManager/<AllowQueryingAsync>d__11")]
public sealed virtual Task AllowQueryingAsync(string indexName, AllowQueryingSearchIndexOptions options, IScope scope);
    [AsyncStateMachineAttribute("Couchbase.Management.Search.SearchIndexManager/<DisallowQueryingAsync>d__12")]
public sealed virtual Task DisallowQueryingAsync(string indexName, DisallowQueryingSearchIndexOptions options, IScope scope);
    [AsyncStateMachineAttribute("Couchbase.Management.Search.SearchIndexManager/<DropIndexAsync>d__13")]
public sealed virtual Task DropIndexAsync(string indexName, DropSearchIndexOptions options, IScope scope);
    [AsyncStateMachineAttribute("Couchbase.Management.Search.SearchIndexManager/<FreezePlanAsync>d__14")]
public sealed virtual Task FreezePlanAsync(string indexName, FreezePlanSearchIndexOptions options, IScope scope);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Couchbase.Management.Search.SearchIndexManager/<GetAllIndexesAsync>d__15")]
public sealed virtual Task`1<IEnumerable`1<SearchIndex>> GetAllIndexesAsync(GetAllSearchIndexesOptions options, IScope scope);
    [AsyncStateMachineAttribute("Couchbase.Management.Search.SearchIndexManager/<GetIndexAsync>d__16")]
public sealed virtual Task`1<SearchIndex> GetIndexAsync(string indexName, GetSearchIndexOptions options, IScope scope);
    [AsyncStateMachineAttribute("Couchbase.Management.Search.SearchIndexManager/<GetIndexedDocumentsCountAsync>d__17")]
public sealed virtual Task`1<int> GetIndexedDocumentsCountAsync(string indexName, GetSearchIndexDocumentCountOptions options, IScope scope);
    [AsyncStateMachineAttribute("Couchbase.Management.Search.SearchIndexManager/<PauseIngestAsync>d__18")]
public sealed virtual Task PauseIngestAsync(string indexName, PauseIngestSearchIndexOptions options, IScope scope);
    [AsyncStateMachineAttribute("Couchbase.Management.Search.SearchIndexManager/<ResumeIngestAsync>d__19")]
public sealed virtual Task ResumeIngestAsync(string indexName, ResumeIngestSearchIndexOptions options, IScope scope);
    [AsyncStateMachineAttribute("Couchbase.Management.Search.SearchIndexManager/<UnfreezePlanAsync>d__20")]
public sealed virtual Task UnfreezePlanAsync(string indexName, UnfreezePlanSearchIndexOptions options, IScope scope);
    [AsyncStateMachineAttribute("Couchbase.Management.Search.SearchIndexManager/<UpsertIndexAsync>d__21")]
public sealed virtual Task UpsertIndexAsync(SearchIndex indexDefinition, UpsertSearchIndexOptions options, IScope scope);
    [AsyncStateMachineAttribute("Couchbase.Management.Search.SearchIndexManager/<CheckStatusAndThrowIfErrorsAsync>d__22")]
private static Task CheckStatusAndThrowIfErrorsAsync(HttpResponseMessage result, Uri uri, string indexName);
    private void CheckVectorSearchSupport(SearchIndex index);
    private static bool ContainsVectorMappings(SearchIndex index);
    private static bool RecurseInnerProperties(IEnumerator`1<JProperty> innerProperties);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Couchbase.Management.Search.SearchIndexManagerExtensions : object {
    [ExtensionAttribute]
public static Task`1<SearchIndex> GetIndexAsync(ISearchIndexManager manager, string indexName);
    [ExtensionAttribute]
public static Task`1<SearchIndex> GetIndexAsync(ISearchIndexManager manager, string indexName, Action`1<GetSearchIndexOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<IEnumerable`1<SearchIndex>> GetAllIndexesAsync(ISearchIndexManager manager);
    [ExtensionAttribute]
public static Task`1<IEnumerable`1<SearchIndex>> GetAllIndexesAsync(ISearchIndexManager manager, Action`1<GetAllSearchIndexesOptions> configureOptions);
    [ExtensionAttribute]
public static Task UpsertIndexAsync(ISearchIndexManager manager, SearchIndex indexDefinition);
    [ExtensionAttribute]
public static Task UpsertIndexAsync(ISearchIndexManager manager, SearchIndex indexDefinition, Action`1<UpsertSearchIndexOptions> configureOptions);
    [ExtensionAttribute]
public static Task DropIndexAsync(ISearchIndexManager manager, string indexName);
    [ExtensionAttribute]
public static Task DropIndexAsync(ISearchIndexManager manager, string indexName, Action`1<DropSearchIndexOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<int> GetIndexedDocumentsCountAsync(ISearchIndexManager manager, string indexName);
    [ExtensionAttribute]
public static Task`1<int> GetIndexedDocumentsCountAsync(ISearchIndexManager manager, string indexName, Action`1<GetSearchIndexDocumentCountOptions> configureOptions);
    [ExtensionAttribute]
public static Task PauseIngestAsync(ISearchIndexManager manager, string indexName);
    [ExtensionAttribute]
public static Task PauseIngestAsync(ISearchIndexManager manager, string indexName, Action`1<PauseIngestSearchIndexOptions> configureOptions);
    [ExtensionAttribute]
public static Task ResumeIngestAsync(ISearchIndexManager manager, string indexName);
    [ExtensionAttribute]
public static Task ResumeIngestAsync(ISearchIndexManager manager, string indexName, Action`1<ResumeIngestSearchIndexOptions> configureOptions);
    [ExtensionAttribute]
public static Task AllowQueryingAsync(ISearchIndexManager manager, string indexName);
    [ExtensionAttribute]
public static Task AllowQueryingAsync(ISearchIndexManager manager, string indexName, Action`1<AllowQueryingSearchIndexOptions> configureOptions);
    [ExtensionAttribute]
public static Task DisallowQueryingAsync(ISearchIndexManager manager, string indexName);
    [ExtensionAttribute]
public static Task DisallowQueryingAsync(ISearchIndexManager manager, string indexName, Action`1<DisallowQueryingSearchIndexOptions> configureOptions);
    [ExtensionAttribute]
public static Task FreezePlanAsync(ISearchIndexManager manager, string indexName);
    [ExtensionAttribute]
public static Task FreezePlanAsync(ISearchIndexManager manager, string indexName, Action`1<FreezePlanSearchIndexOptions> configureOptions);
    [ExtensionAttribute]
public static Task UnfreezePlanAsync(ISearchIndexManager manager, string indexName);
    [ExtensionAttribute]
public static Task UnfreezePlanAsync(ISearchIndexManager manager, string indexName, Action`1<UnfreezePlanSearchIndexOptions> configureOptions);
}
public class Couchbase.Management.Search.SearchIndexNotFound : CouchbaseException {
    public SearchIndexNotFound(string message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Search.UnfreezePlanSearchIndexOptions : object {
    public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; private set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static UnfreezePlanSearchIndexOptions Default { get; }
    private static UnfreezePlanSearchIndexOptions();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public UnfreezePlanSearchIndexOptions CancellationToken(CancellationToken cancellationToken);
    public UnfreezePlanSearchIndexOptions Timeout(TimeSpan timeout);
    public static UnfreezePlanSearchIndexOptions get_Default();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Search.UpsertSearchIndexOptions : object {
    public static ReadOnly DefaultReadOnly;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; private set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static UpsertSearchIndexOptions Default { get; }
    private static UpsertSearchIndexOptions();
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public UpsertSearchIndexOptions CancellationToken(CancellationToken cancellationToken);
    public UpsertSearchIndexOptions Timeout(TimeSpan timeout);
    public static UpsertSearchIndexOptions get_Default();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
public enum Couchbase.Management.Users.AuthType : Enum {
    public int value__;
    [DescriptionAttribute("none")]
public static AuthType None;
    [DescriptionAttribute("sasl")]
public static AuthType Sasl;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Users.AvailableRolesOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static AvailableRolesOptions Default { get; }
    public static ReadOnly DefaultReadOnly { get; }
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public AvailableRolesOptions CancellationToken(CancellationToken cancellationToken);
    public AvailableRolesOptions Timeout(TimeSpan timeout);
    public static AvailableRolesOptions get_Default();
    public static ReadOnly get_DefaultReadOnly();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Users.ChangePasswordOptions : object {
    [CompilerGeneratedAttribute]
private string <DomainNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private RequestSpan <ParentSpan>k__BackingField;
    internal string DomainNameValue { get; internal set; }
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    [NullableAttribute("2")]
internal RequestSpan ParentSpan { get; internal set; }
    public static ChangePasswordOptions Default { get; }
    public static ReadOnly DefaultReadOnly { get; }
    [CompilerGeneratedAttribute]
internal string get_DomainNameValue();
    [CompilerGeneratedAttribute]
internal void set_DomainNameValue(string value);
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal RequestSpan get_ParentSpan();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_ParentSpan(RequestSpan value);
    public ChangePasswordOptions DomainName(string domainName);
    public ChangePasswordOptions CancellationToken(CancellationToken cancellationToken);
    public ChangePasswordOptions Timeout(TimeSpan timeout);
    public static ChangePasswordOptions get_Default();
    public static ReadOnly get_DefaultReadOnly();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Users.DropGroupOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static DropGroupOptions Default { get; }
    public static ReadOnly DefaultReadOnly { get; }
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public DropGroupOptions CancellationToken(CancellationToken cancellationToken);
    public DropGroupOptions Timeout(TimeSpan timeout);
    public static DropGroupOptions get_Default();
    public static ReadOnly get_DefaultReadOnly();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Users.DropUserOptions : object {
    [CompilerGeneratedAttribute]
private string <DomainNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal string DomainNameValue { get; internal set; }
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static DropUserOptions Default { get; }
    public static ReadOnly DefaultReadOnly { get; }
    [CompilerGeneratedAttribute]
internal string get_DomainNameValue();
    [CompilerGeneratedAttribute]
internal void set_DomainNameValue(string value);
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public DropUserOptions DomainName(string domainName);
    public DropUserOptions CancellationToken(CancellationToken cancellationToken);
    public DropUserOptions Timeout(TimeSpan timeout);
    public static DropUserOptions get_Default();
    public static ReadOnly get_DefaultReadOnly();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Users.GetAllGroupsOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static GetAllGroupsOptions Default { get; }
    public static ReadOnly DefaultReadOnly { get; }
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public GetAllGroupsOptions CancellationToken(CancellationToken cancellationToken);
    public GetAllGroupsOptions Timeout(TimeSpan timeout);
    public static GetAllGroupsOptions get_Default();
    public static ReadOnly get_DefaultReadOnly();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Users.GetAllUsersOptions : object {
    [CompilerGeneratedAttribute]
private string <DomainNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal string DomainNameValue { get; internal set; }
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static GetAllUsersOptions Default { get; }
    public static ReadOnly DefaultReadOnly { get; }
    [CompilerGeneratedAttribute]
internal string get_DomainNameValue();
    [CompilerGeneratedAttribute]
internal void set_DomainNameValue(string value);
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public GetAllUsersOptions DomainName(string domainName);
    public GetAllUsersOptions CancellationToken(CancellationToken cancellationToken);
    public GetAllUsersOptions Timeout(TimeSpan timeout);
    public static GetAllUsersOptions get_Default();
    public static ReadOnly get_DefaultReadOnly();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Users.GetGroupOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static GetGroupOptions Default { get; }
    public static ReadOnly DefaultReadOnly { get; }
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public GetGroupOptions CancellationToken(CancellationToken cancellationToken);
    public GetGroupOptions Timeout(TimeSpan timeout);
    public static GetGroupOptions get_Default();
    public static ReadOnly get_DefaultReadOnly();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Users.GetUserOptions : object {
    [CompilerGeneratedAttribute]
private string <DomainNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    public string DomainNameValue { get; public set; }
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static GetUserOptions Default { get; }
    public static ReadOnly DefaultReadOnly { get; }
    [CompilerGeneratedAttribute]
public string get_DomainNameValue();
    [CompilerGeneratedAttribute]
public void set_DomainNameValue(string value);
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public GetUserOptions DomainName(string domainName);
    public GetUserOptions CancellationToken(CancellationToken cancellationToken);
    public GetUserOptions Timeout(TimeSpan timeout);
    public static GetUserOptions get_Default();
    public static ReadOnly get_DefaultReadOnly();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.Management.Users.Group : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<Role> <Roles>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LdapGroupReference>k__BackingField;
    [NullableAttribute("1")]
public string Name { get; }
    public string Description { get; internal set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal IEnumerable`1<Role> Roles { get; public set; }
    public string LdapGroupReference { get; internal set; }
    [NullableContextAttribute("1")]
public Group(string name);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
internal void set_Description(string value);
    [CompilerGeneratedAttribute]
internal IEnumerable`1<Role> get_Roles();
    [CompilerGeneratedAttribute]
public void set_Roles(IEnumerable`1<Role> value);
    [CompilerGeneratedAttribute]
public string get_LdapGroupReference();
    [CompilerGeneratedAttribute]
internal void set_LdapGroupReference(string value);
    [NullableContextAttribute("1")]
internal static Group FromJson(GroupDto dto);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Management.Users.GroupDto : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private List`1<RoleDto> <Roles>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LdapGroupReference>k__BackingField;
    [NullableAttribute("1")]
public string Id { get; public set; }
    public string Description { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public List`1<RoleDto> Roles { get; public set; }
    [JsonPropertyNameAttribute("ldap_group_ref")]
public string LdapGroupReference { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Id();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public List`1<RoleDto> get_Roles();
    [CompilerGeneratedAttribute]
public void set_Roles(List`1<RoleDto> value);
    [CompilerGeneratedAttribute]
public string get_LdapGroupReference();
    [CompilerGeneratedAttribute]
public void set_LdapGroupReference(string value);
}
internal class Couchbase.Management.Users.GroupNotFoundException : Exception {
    public GroupNotFoundException(string groupName);
}
[NullableContextAttribute("1")]
public interface Couchbase.Management.Users.IUserManager {
    public abstract virtual Task`1<UserAndMetaData> GetUserAsync(string username, GetUserOptions options);
    public abstract virtual Task`1<IEnumerable`1<UserAndMetaData>> GetAllUsersAsync(GetAllUsersOptions options);
    public abstract virtual Task UpsertUserAsync(User user, UpsertUserOptions options);
    public abstract virtual Task DropUserAsync(string username, DropUserOptions options);
    public abstract virtual Task ChangeUserPasswordAsync(string password, ChangePasswordOptions options);
    public abstract virtual Task`1<IEnumerable`1<RoleAndDescription>> GetRolesAsync(AvailableRolesOptions options);
    public abstract virtual Task`1<Group> GetGroupAsync(string groupName, GetGroupOptions options);
    public abstract virtual Task`1<IEnumerable`1<Group>> GetAllGroupsAsync(GetAllGroupsOptions options);
    public abstract virtual Task UpsertGroupAsync(Group group, UpsertGroupOptions options);
    public abstract virtual Task DropGroupAsync(string groupName, DropGroupOptions options);
}
public class Couchbase.Management.Users.Origin : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonIncludeAttribute]
public string Type { get; internal set; }
    [JsonIncludeAttribute]
public string Name { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.Management.Users.Role : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Bucket>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Collection>k__BackingField;
    [NullableAttribute("1")]
public string Name { get; }
    public string Bucket { get; }
    public string Scope { get; }
    public string Collection { get; }
    [NullableContextAttribute("1")]
public Role(string roleName);
    [NullableContextAttribute("1")]
public Role(string roleName, string bucketName);
    public Role(string roleName, string bucketName, string scopeName);
    public Role(string roleName, string bucketName, string scopeName, string collectionName);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_Bucket();
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public string get_Collection();
    internal void Validate();
    private bool IsValidBucket();
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
internal static Role FromJson(RoleDto roleDto);
}
public class Couchbase.Management.Users.RoleAndDescription : object {
    [CompilerGeneratedAttribute]
private string <Role>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [JsonPropertyNameAttribute("role")]
[JsonIncludeAttribute]
public string Role { get; internal set; }
    [JsonPropertyNameAttribute("name")]
[JsonIncludeAttribute]
public string DisplayName { get; internal set; }
    [JsonPropertyNameAttribute("desc")]
[JsonIncludeAttribute]
public string Description { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Role();
    [CompilerGeneratedAttribute]
internal void set_Role(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
internal void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
internal void set_Description(string value);
}
public class Couchbase.Management.Users.RoleAndOrigins : object {
    [CompilerGeneratedAttribute]
private Role <Role>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Origin> <Origins>k__BackingField;
    public Role Role { get; internal set; }
    public IEnumerable`1<Origin> Origins { get; internal set; }
    [CompilerGeneratedAttribute]
public Role get_Role();
    [CompilerGeneratedAttribute]
internal void set_Role(Role value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<Origin> get_Origins();
    [CompilerGeneratedAttribute]
internal void set_Origins(IEnumerable`1<Origin> value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Management.Users.RoleDto : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Role>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BucketName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScopeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CollectionName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private List`1<Origin> <Origins>k__BackingField;
    [NullableAttribute("1")]
public string Role { get; public set; }
    [JsonPropertyNameAttribute("bucket_name")]
public string BucketName { get; public set; }
    [JsonPropertyNameAttribute("scope_name")]
public string ScopeName { get; public set; }
    [JsonPropertyNameAttribute("collection_name")]
public string CollectionName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public List`1<Origin> Origins { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Role();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Role(string value);
    [CompilerGeneratedAttribute]
public string get_BucketName();
    [CompilerGeneratedAttribute]
public void set_BucketName(string value);
    [CompilerGeneratedAttribute]
public string get_ScopeName();
    [CompilerGeneratedAttribute]
public void set_ScopeName(string value);
    [CompilerGeneratedAttribute]
public string get_CollectionName();
    [CompilerGeneratedAttribute]
public void set_CollectionName(string value);
    [CompilerGeneratedAttribute]
public List`1<Origin> get_Origins();
    [CompilerGeneratedAttribute]
public void set_Origins(List`1<Origin> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Users.UpsertGroupOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static UpsertGroupOptions Default { get; }
    public static ReadOnly DefaultReadOnly { get; }
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public UpsertGroupOptions CancellationToken(CancellationToken cancellationToken);
    public UpsertGroupOptions Timeout(TimeSpan timeout);
    public static UpsertGroupOptions get_Default();
    public static ReadOnly get_DefaultReadOnly();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Users.UpsertUserOptions : object {
    [CompilerGeneratedAttribute]
private string <DomainNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeoutValue>k__BackingField;
    internal string DomainNameValue { get; internal set; }
    internal CancellationToken TokenValue { get; internal set; }
    internal TimeSpan TimeoutValue { get; internal set; }
    public static UpsertUserOptions Default { get; }
    public static ReadOnly DefaultReadOnly { get; }
    [CompilerGeneratedAttribute]
internal string get_DomainNameValue();
    [CompilerGeneratedAttribute]
internal void set_DomainNameValue(string value);
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(TimeSpan value);
    public UpsertUserOptions DomainName(string domainName);
    public UpsertUserOptions CancellationToken(CancellationToken cancellationToken);
    public UpsertUserOptions Timeout(TimeSpan timeout);
    public static UpsertUserOptions get_Default();
    public static ReadOnly get_DefaultReadOnly();
    public void Deconstruct(CancellationToken& tokenValue, TimeSpan& timeoutValue);
    public ReadOnly AsReadOnly();
}
public class Couchbase.Management.Users.User : object {
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Domain>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Groups>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Role> <Roles>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    public string Username { get; }
    public string DisplayName { get; public set; }
    public string Domain { get; public set; }
    public IEnumerable`1<string> Groups { get; public set; }
    public IEnumerable`1<Role> Roles { get; public set; }
    internal string Password { get; public set; }
    public User(string username);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Domain();
    [CompilerGeneratedAttribute]
public void set_Domain(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Groups();
    [CompilerGeneratedAttribute]
public void set_Groups(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<Role> get_Roles();
    [CompilerGeneratedAttribute]
public void set_Roles(IEnumerable`1<Role> value);
    [CompilerGeneratedAttribute]
internal string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    internal void Validate();
    [IteratorStateMachineAttribute("Couchbase.Management.Users.User/<GetUserFormValues>d__25")]
internal IEnumerable`1<KeyValuePair`2<string, string>> GetUserFormValues();
}
public class Couchbase.Management.Users.UserAndMetaData : object {
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Domain>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Groups>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Role> <EffectiveRoles>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<RoleAndOrigins> <EffectiveRolesAndOrigins>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <PasswordChanged>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ExternalGroups>k__BackingField;
    public string Username { get; }
    public string DisplayName { get; internal set; }
    public string Domain { get; internal set; }
    public IEnumerable`1<string> Groups { get; internal set; }
    public IEnumerable`1<Role> EffectiveRoles { get; internal set; }
    public IEnumerable`1<RoleAndOrigins> EffectiveRolesAndOrigins { get; internal set; }
    public DateTimeOffset PasswordChanged { get; internal set; }
    public IEnumerable`1<string> ExternalGroups { get; internal set; }
    public UserAndMetaData(string username);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
internal void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Domain();
    [CompilerGeneratedAttribute]
internal void set_Domain(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Groups();
    [CompilerGeneratedAttribute]
internal void set_Groups(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<Role> get_EffectiveRoles();
    [CompilerGeneratedAttribute]
internal void set_EffectiveRoles(IEnumerable`1<Role> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<RoleAndOrigins> get_EffectiveRolesAndOrigins();
    [CompilerGeneratedAttribute]
internal void set_EffectiveRolesAndOrigins(IEnumerable`1<RoleAndOrigins> value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_PasswordChanged();
    [CompilerGeneratedAttribute]
internal void set_PasswordChanged(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ExternalGroups();
    [CompilerGeneratedAttribute]
internal void set_ExternalGroups(IEnumerable`1<string> value);
    public User User();
    internal static UserAndMetaData FromJson(UserAndMetadataDto userDto);
}
internal class Couchbase.Management.Users.UserAndMetadataDto : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Domain>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Groups>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RoleDto> <Roles>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <ExternalGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <PasswordChangeDate>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public string Domain { get; public set; }
    public List`1<string> Groups { get; public set; }
    public List`1<RoleDto> Roles { get; public set; }
    [JsonPropertyNameAttribute("external_groups")]
public List`1<string> ExternalGroups { get; public set; }
    [JsonPropertyNameAttribute("password_change_date")]
public DateTimeOffset PasswordChangeDate { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Domain();
    [CompilerGeneratedAttribute]
public void set_Domain(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Groups();
    [CompilerGeneratedAttribute]
public void set_Groups(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<RoleDto> get_Roles();
    [CompilerGeneratedAttribute]
public void set_Roles(List`1<RoleDto> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_ExternalGroups();
    [CompilerGeneratedAttribute]
public void set_ExternalGroups(List`1<string> value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_PasswordChangeDate();
    [CompilerGeneratedAttribute]
public void set_PasswordChangeDate(DateTimeOffset value);
}
internal class Couchbase.Management.Users.UserExistsException : Exception {
    public UserExistsException(string username);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonSourceGenerationOptionsAttribute]
[JsonSerializableAttribute("Couchbase.Management.Users.UserAndMetadataDto")]
[JsonSerializableAttribute("System.Collections.Generic.List`1<Couchbase.Management.Users.UserAndMetadataDto>")]
[JsonSerializableAttribute("Couchbase.Management.Users.GroupDto")]
[JsonSerializableAttribute("System.Collections.Generic.List`1<Couchbase.Management.Users.GroupDto>")]
[JsonSerializableAttribute("System.Collections.Generic.List`1<Couchbase.Management.Users.RoleAndDescription>")]
[GeneratedCodeAttribute("System.Text.Json.SourceGeneration", "8.0.10.31311")]
internal class Couchbase.Management.Users.UserManagementSerializerContext : JsonSerializerContext {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<GroupDto> _GroupDto;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Origin> _Origin;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<RoleAndDescription> _RoleAndDescription;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<RoleDto> _RoleDto;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<UserAndMetadataDto> _UserAndMetadataDto;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<GroupDto>> _ListGroupDto;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<Origin>> _ListOrigin;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<RoleAndDescription>> _ListRoleAndDescription;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<RoleDto>> _ListRoleDto;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<UserAndMetadataDto>> _ListUserAndMetadataDto;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<string>> _ListString;
    [NullableAttribute("2")]
private JsonTypeInfo`1<DateTimeOffset> _DateTimeOffset;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<string> _String;
    private static JsonSerializerOptions s_defaultOptions;
    [CompilerGeneratedAttribute]
private static UserManagementSerializerContext <Default>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JsonSerializerOptions <GeneratedSerializerOptions>k__BackingField;
    private static JsonEncodedText PropName_id;
    private static JsonEncodedText PropName_description;
    private static JsonEncodedText PropName_roles;
    private static JsonEncodedText PropName_ldap_group_ref;
    private static JsonEncodedText PropName_type;
    private static JsonEncodedText PropName_name;
    private static JsonEncodedText PropName_role;
    private static JsonEncodedText PropName_desc;
    private static JsonEncodedText PropName_bucket_name;
    private static JsonEncodedText PropName_scope_name;
    private static JsonEncodedText PropName_collection_name;
    private static JsonEncodedText PropName_origins;
    private static JsonEncodedText PropName_domain;
    private static JsonEncodedText PropName_groups;
    private static JsonEncodedText PropName_external_groups;
    private static JsonEncodedText PropName_password_change_date;
    public JsonTypeInfo`1<GroupDto> GroupDto { get; }
    public JsonTypeInfo`1<Origin> Origin { get; }
    public JsonTypeInfo`1<RoleAndDescription> RoleAndDescription { get; }
    public JsonTypeInfo`1<RoleDto> RoleDto { get; }
    public JsonTypeInfo`1<UserAndMetadataDto> UserAndMetadataDto { get; }
    public JsonTypeInfo`1<List`1<GroupDto>> ListGroupDto { get; }
    public JsonTypeInfo`1<List`1<Origin>> ListOrigin { get; }
    public JsonTypeInfo`1<List`1<RoleAndDescription>> ListRoleAndDescription { get; }
    public JsonTypeInfo`1<List`1<RoleDto>> ListRoleDto { get; }
    public JsonTypeInfo`1<List`1<UserAndMetadataDto>> ListUserAndMetadataDto { get; }
    public JsonTypeInfo`1<List`1<string>> ListString { get; }
    public JsonTypeInfo`1<DateTimeOffset> DateTimeOffset { get; }
    public JsonTypeInfo`1<string> String { get; }
    public static UserManagementSerializerContext Default { get; }
    [NullableAttribute("2")]
protected JsonSerializerOptions GeneratedSerializerOptions { get; }
    public UserManagementSerializerContext(JsonSerializerOptions options);
    private static UserManagementSerializerContext();
    public JsonTypeInfo`1<GroupDto> get_GroupDto();
    private JsonTypeInfo`1<GroupDto> Create_GroupDto(JsonSerializerOptions options);
    private static JsonPropertyInfo[] GroupDtoPropInit(JsonSerializerOptions options);
    private void GroupDtoSerializeHandler(Utf8JsonWriter writer, GroupDto value);
    public JsonTypeInfo`1<Origin> get_Origin();
    private JsonTypeInfo`1<Origin> Create_Origin(JsonSerializerOptions options);
    private static JsonPropertyInfo[] OriginPropInit(JsonSerializerOptions options);
    private void OriginSerializeHandler(Utf8JsonWriter writer, Origin value);
    public JsonTypeInfo`1<RoleAndDescription> get_RoleAndDescription();
    private JsonTypeInfo`1<RoleAndDescription> Create_RoleAndDescription(JsonSerializerOptions options);
    private static JsonPropertyInfo[] RoleAndDescriptionPropInit(JsonSerializerOptions options);
    private void RoleAndDescriptionSerializeHandler(Utf8JsonWriter writer, RoleAndDescription value);
    public JsonTypeInfo`1<RoleDto> get_RoleDto();
    private JsonTypeInfo`1<RoleDto> Create_RoleDto(JsonSerializerOptions options);
    private static JsonPropertyInfo[] RoleDtoPropInit(JsonSerializerOptions options);
    private void RoleDtoSerializeHandler(Utf8JsonWriter writer, RoleDto value);
    public JsonTypeInfo`1<UserAndMetadataDto> get_UserAndMetadataDto();
    private JsonTypeInfo`1<UserAndMetadataDto> Create_UserAndMetadataDto(JsonSerializerOptions options);
    private static JsonPropertyInfo[] UserAndMetadataDtoPropInit(JsonSerializerOptions options);
    private void UserAndMetadataDtoSerializeHandler(Utf8JsonWriter writer, UserAndMetadataDto value);
    public JsonTypeInfo`1<List`1<GroupDto>> get_ListGroupDto();
    private JsonTypeInfo`1<List`1<GroupDto>> Create_ListGroupDto(JsonSerializerOptions options);
    private void ListGroupDtoSerializeHandler(Utf8JsonWriter writer, List`1<GroupDto> value);
    public JsonTypeInfo`1<List`1<Origin>> get_ListOrigin();
    private JsonTypeInfo`1<List`1<Origin>> Create_ListOrigin(JsonSerializerOptions options);
    private void ListOriginSerializeHandler(Utf8JsonWriter writer, List`1<Origin> value);
    public JsonTypeInfo`1<List`1<RoleAndDescription>> get_ListRoleAndDescription();
    private JsonTypeInfo`1<List`1<RoleAndDescription>> Create_ListRoleAndDescription(JsonSerializerOptions options);
    private void ListRoleAndDescriptionSerializeHandler(Utf8JsonWriter writer, List`1<RoleAndDescription> value);
    public JsonTypeInfo`1<List`1<RoleDto>> get_ListRoleDto();
    private JsonTypeInfo`1<List`1<RoleDto>> Create_ListRoleDto(JsonSerializerOptions options);
    private void ListRoleDtoSerializeHandler(Utf8JsonWriter writer, List`1<RoleDto> value);
    public JsonTypeInfo`1<List`1<UserAndMetadataDto>> get_ListUserAndMetadataDto();
    private JsonTypeInfo`1<List`1<UserAndMetadataDto>> Create_ListUserAndMetadataDto(JsonSerializerOptions options);
    private void ListUserAndMetadataDtoSerializeHandler(Utf8JsonWriter writer, List`1<UserAndMetadataDto> value);
    public JsonTypeInfo`1<List`1<string>> get_ListString();
    private JsonTypeInfo`1<List`1<string>> Create_ListString(JsonSerializerOptions options);
    private void ListStringSerializeHandler(Utf8JsonWriter writer, List`1<string> value);
    public JsonTypeInfo`1<DateTimeOffset> get_DateTimeOffset();
    private JsonTypeInfo`1<DateTimeOffset> Create_DateTimeOffset(JsonSerializerOptions options);
    public JsonTypeInfo`1<string> get_String();
    private JsonTypeInfo`1<string> Create_String(JsonSerializerOptions options);
    [CompilerGeneratedAttribute]
public static UserManagementSerializerContext get_Default();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual JsonSerializerOptions get_GeneratedSerializerOptions();
    private static bool TryGetTypeInfoForRuntimeCustomConverter(JsonSerializerOptions options, JsonTypeInfo`1& jsonTypeInfo);
    private static JsonConverter GetRuntimeConverterForType(Type type, JsonSerializerOptions options);
    private static JsonConverter ExpandConverter(Type type, JsonConverter converter, JsonSerializerOptions options, bool validateCanConvert);
    public virtual JsonTypeInfo GetTypeInfo(Type type);
    private sealed virtual override JsonTypeInfo global::System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver.GetTypeInfo(Type type, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Management.Users.UserManager : object {
    private IServiceUriProvider _serviceUriProvider;
    private ICouchbaseHttpClientFactory _httpClientFactory;
    private ILogger`1<UserManager> _logger;
    private IRedactor _redactor;
    public UserManager(IServiceUriProvider serviceUriProvider, ICouchbaseHttpClientFactory httpClientFactory, ILogger`1<UserManager> logger, IRedactor redactor);
    private Uri GetUsersUri(string domain, string username);
    private Uri GetRolesUri();
    private Uri GetGroupsUri(string groupName);
    private static IEnumerable`1<KeyValuePair`2<string, string>> GetGroupFormValues(Group group);
    [AsyncStateMachineAttribute("Couchbase.Management.Users.UserManager/<GetUserAsync>d__9")]
public sealed virtual Task`1<UserAndMetaData> GetUserAsync(string username, GetUserOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Users.UserManager/<GetAllUsersAsync>d__10")]
public sealed virtual Task`1<IEnumerable`1<UserAndMetaData>> GetAllUsersAsync(GetAllUsersOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Users.UserManager/<UpsertUserAsync>d__11")]
public sealed virtual Task UpsertUserAsync(User user, UpsertUserOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Users.UserManager/<DropUserAsync>d__12")]
public sealed virtual Task DropUserAsync(string username, DropUserOptions options);
    private IEnumerable`1<KeyValuePair`2<string, string>> FormatPassword(string newPassword);
    [AsyncStateMachineAttribute("Couchbase.Management.Users.UserManager/<ChangeUserPasswordAsync>d__14")]
public sealed virtual Task ChangeUserPasswordAsync(string newPassword, ChangePasswordOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Users.UserManager/<GetRolesAsync>d__15")]
public sealed virtual Task`1<IEnumerable`1<RoleAndDescription>> GetRolesAsync(AvailableRolesOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Users.UserManager/<GetGroupAsync>d__16")]
public sealed virtual Task`1<Group> GetGroupAsync(string groupName, GetGroupOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Users.UserManager/<GetAllGroupsAsync>d__17")]
public sealed virtual Task`1<IEnumerable`1<Group>> GetAllGroupsAsync(GetAllGroupsOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Users.UserManager/<UpsertGroupAsync>d__18")]
public sealed virtual Task UpsertGroupAsync(Group group, UpsertGroupOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Users.UserManager/<DropGroupAsync>d__19")]
public sealed virtual Task DropGroupAsync(string groupName, DropGroupOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Couchbase.Management.Users.UserManagerExtensions : object {
    [ExtensionAttribute]
public static Task`1<UserAndMetaData> GetUserAsync(IUserManager userManager, string username);
    [ExtensionAttribute]
public static Task`1<UserAndMetaData> GetUserAsync(IUserManager userManager, string username, Action`1<GetUserOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<IEnumerable`1<UserAndMetaData>> GetAllUsersAsync(IUserManager userManager);
    [ExtensionAttribute]
public static Task`1<IEnumerable`1<UserAndMetaData>> GetAllUsersAsync(IUserManager userManager, Action`1<GetAllUsersOptions> configureOptions);
    [ExtensionAttribute]
public static Task UpsertUsersAsync(IUserManager userManager, User user);
    [ExtensionAttribute]
public static Task UpsertUsersAsync(IUserManager userManager, User user, Action`1<UpsertUserOptions> configureOptions);
    [ExtensionAttribute]
public static Task DropUserAsync(IUserManager userManager, string username);
    [ExtensionAttribute]
public static Task DropUserAsync(IUserManager userManager, string username, Action`1<DropUserOptions> configureOptions);
    [ExtensionAttribute]
public static Task ChangeUserPasswordAsync(IUserManager userManager, string password);
    [ExtensionAttribute]
public static Task ChangeUserPasswordAsync(IUserManager userManager, string password, Action`1<ChangePasswordOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<IEnumerable`1<RoleAndDescription>> AvailableRolesAsync(IUserManager userManager);
    [ExtensionAttribute]
public static Task`1<IEnumerable`1<RoleAndDescription>> AvailableRolesAsync(IUserManager userManager, Action`1<AvailableRolesOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<Group> GetGroupAsync(IUserManager userManager, string groupName);
    [ExtensionAttribute]
public static Task`1<Group> GetGroupAsync(IUserManager userManager, string groupName, Action`1<GetGroupOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<IEnumerable`1<Group>> GetAllGroupsAsync(IUserManager userManager);
    [ExtensionAttribute]
public static Task`1<IEnumerable`1<Group>> GetAllGroupsAsync(IUserManager userManager, Action`1<GetAllGroupsOptions> configureOptions);
    [ExtensionAttribute]
public static Task UpsertGroupAsync(IUserManager userManager, Group group);
    [ExtensionAttribute]
public static Task UpsertGroupAsync(IUserManager userManager, Group group, Action`1<UpsertGroupOptions> configureOptions);
    [ExtensionAttribute]
public static Task DropGroupAsync(IUserManager userManager, string groupName);
    [ExtensionAttribute]
public static Task DropGroupAsync(IUserManager userManager, string groupName, Action`1<DropGroupOptions> configureOptions);
}
public class Couchbase.Management.Users.UserNotFoundException : CouchbaseException {
    public UserNotFoundException(string username);
}
public class Couchbase.Management.Views.DesignDocument : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, View> <Views>k__BackingField;
    [JsonIgnoreAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute("views")]
public Dictionary`2<string, View> Views { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, View> get_Views();
    [CompilerGeneratedAttribute]
public void set_Views(Dictionary`2<string, View> value);
}
public class Couchbase.Management.Views.DesignDocumentExistsException : CouchbaseException {
    public DesignDocumentExistsException(string bucketName, string viewName);
}
public enum Couchbase.Management.Views.DesignDocumentNamespace : Enum {
    public int value__;
    public static DesignDocumentNamespace Development;
    public static DesignDocumentNamespace Production;
}
public class Couchbase.Management.Views.DesignDocumentNotFoundException : CouchbaseException {
    public DesignDocumentNotFoundException(string bucketName, string viewName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Views.DropDesignDocumentOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    internal CancellationToken TokenValue { get; internal set; }
    public static DropDesignDocumentOptions Default { get; }
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    public DropDesignDocumentOptions CancellationToken(CancellationToken cancellationToken);
    public static DropDesignDocumentOptions get_Default();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Views.GetAllDesignDocumentsOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    internal CancellationToken TokenValue { get; internal set; }
    public static GetAllDesignDocumentsOptions Default { get; }
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    public GetAllDesignDocumentsOptions CancellationToken(CancellationToken cancellationToken);
    public static GetAllDesignDocumentsOptions get_Default();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Views.GetDesignDocumentOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    internal CancellationToken TokenValue { get; internal set; }
    public static GetDesignDocumentOptions Default { get; }
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    public GetDesignDocumentOptions CancellationToken(CancellationToken cancellationToken);
    public static GetDesignDocumentOptions get_Default();
}
public enum Couchbase.Management.Views.IndexType : Enum {
    public int value__;
    public static IndexType Gsi;
    public static IndexType View;
}
[NullableContextAttribute("1")]
public interface Couchbase.Management.Views.IViewIndexManager {
    public abstract virtual Task`1<DesignDocument> GetDesignDocumentAsync(string designDocName, DesignDocumentNamespace namespace, GetDesignDocumentOptions options);
    public abstract virtual Task`1<IEnumerable`1<DesignDocument>> GetAllDesignDocumentsAsync(DesignDocumentNamespace namespace, GetAllDesignDocumentsOptions options);
    public abstract virtual Task UpsertDesignDocumentAsync(DesignDocument indexData, DesignDocumentNamespace namespace, UpsertDesignDocumentOptions options);
    public abstract virtual Task DropDesignDocumentAsync(string designDocName, DesignDocumentNamespace namespace, DropDesignDocumentOptions options);
    public abstract virtual Task PublishDesignDocumentAsync(string designDocName, PublishDesignDocumentOptions options);
}
internal interface Couchbase.Management.Views.IViewIndexManagerFactory {
    public abstract virtual IViewIndexManager Create(string bucketName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Views.PublishDesignDocumentOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    internal CancellationToken TokenValue { get; internal set; }
    public static PublishDesignDocumentOptions Default { get; }
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    public PublishDesignDocumentOptions CancellationToken(CancellationToken cancellationToken);
    public static PublishDesignDocumentOptions get_Default();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Management.Views.UpsertDesignDocumentOptions : object {
    [CompilerGeneratedAttribute]
private CancellationToken <TokenValue>k__BackingField;
    internal CancellationToken TokenValue { get; internal set; }
    public static UpsertDesignDocumentOptions Default { get; }
    [CompilerGeneratedAttribute]
internal CancellationToken get_TokenValue();
    [CompilerGeneratedAttribute]
internal void set_TokenValue(CancellationToken value);
    public UpsertDesignDocumentOptions CancellationToken(CancellationToken cancellationToken);
    public static UpsertDesignDocumentOptions get_Default();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Management.Views.ViewIndexManager : object {
    private string _bucketName;
    private IServiceUriProvider _serviceUriProvider;
    private ICouchbaseHttpClientFactory _httpClientFactory;
    private ILogger`1<ViewIndexManager> _logger;
    private IRedactor _redactor;
    public ViewIndexManager(string bucketName, IServiceUriProvider serviceUriProvider, ICouchbaseHttpClientFactory httpClientFactory, ILogger`1<ViewIndexManager> logger, IRedactor redactor);
    private Uri GetUri(string designDocName, DesignDocumentNamespace namespace);
    [AsyncStateMachineAttribute("Couchbase.Management.Views.ViewIndexManager/<GetDesignDocumentAsync>d__7")]
public sealed virtual Task`1<DesignDocument> GetDesignDocumentAsync(string designDocName, DesignDocumentNamespace namespace, GetDesignDocumentOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Views.ViewIndexManager/<GetAllDesignDocumentsAsync>d__8")]
public sealed virtual Task`1<IEnumerable`1<DesignDocument>> GetAllDesignDocumentsAsync(DesignDocumentNamespace namespace, GetAllDesignDocumentsOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Views.ViewIndexManager/<UpsertDesignDocumentAsync>d__9")]
public sealed virtual Task UpsertDesignDocumentAsync(DesignDocument designDocument, DesignDocumentNamespace namespace, UpsertDesignDocumentOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Views.ViewIndexManager/<DropDesignDocumentAsync>d__10")]
public sealed virtual Task DropDesignDocumentAsync(string designDocName, DesignDocumentNamespace namespace, DropDesignDocumentOptions options);
    [AsyncStateMachineAttribute("Couchbase.Management.Views.ViewIndexManager/<PublishDesignDocumentAsync>d__11")]
public sealed virtual Task PublishDesignDocumentAsync(string designDocName, PublishDesignDocumentOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Management.Views.ViewIndexManagerFactory : object {
    private IServiceProvider _serviceProvider;
    public ViewIndexManagerFactory(IServiceProvider serviceProvider);
    public sealed virtual IViewIndexManager Create(string bucketName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Couchbase.Management.Views.ViewManagerExtensions : object {
    [ExtensionAttribute]
public static Task`1<DesignDocument> GetDesignDocumentAsync(IViewIndexManager viewManager, string designDocName, DesignDocumentNamespace namespace);
    [ExtensionAttribute]
public static Task`1<DesignDocument> GetDesignDocumentAsync(IViewIndexManager viewManager, string designDocName, DesignDocumentNamespace namespace, Action`1<GetDesignDocumentOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<IEnumerable`1<DesignDocument>> GetAllDesignDocumentsAsync(IViewIndexManager viewManager, DesignDocumentNamespace namespace);
    [ExtensionAttribute]
public static Task`1<IEnumerable`1<DesignDocument>> GetAllDesignDocumentsAsync(IViewIndexManager viewManager, DesignDocumentNamespace namespace, Action`1<GetAllDesignDocumentsOptions> configureOptions);
    [ExtensionAttribute]
public static Task UpsertDesignDocumentAsync(IViewIndexManager viewManager, DesignDocument designDocument, DesignDocumentNamespace namespace);
    [ExtensionAttribute]
public static Task UpsertDesignDocumentAsync(IViewIndexManager viewManager, DesignDocument designDocument, DesignDocumentNamespace namespace, Action`1<UpsertDesignDocumentOptions> configureOptions);
    [ExtensionAttribute]
public static Task DropDesignDocumentAsync(IViewIndexManager viewManager, string designDocumentName, DesignDocumentNamespace namespace);
    [ExtensionAttribute]
public static Task DropDesignDocumentAsync(IViewIndexManager viewManager, string designDocumentName, DesignDocumentNamespace namespace, Action`1<DropDesignDocumentOptions> configureOptions);
    [ExtensionAttribute]
public static Task PublishDesignDocumentAsync(IViewIndexManager viewManager, string designDocumentName);
    [ExtensionAttribute]
public static Task PublishDesignDocumentAsync(IViewIndexManager viewManager, string designDocumentName, Action`1<PublishDesignDocumentOptions> configureOptions);
}
[AttributeUsageAttribute("4")]
internal class Couchbase.MeansImplicitUseAttribute : Attribute {
    [CompilerGeneratedAttribute]
private ImplicitUseKindFlags <UseKindFlags>k__BackingField;
    [CompilerGeneratedAttribute]
private ImplicitUseTargetFlags <TargetFlags>k__BackingField;
    [UsedImplicitlyAttribute]
public ImplicitUseKindFlags UseKindFlags { get; private set; }
    [UsedImplicitlyAttribute]
public ImplicitUseTargetFlags TargetFlags { get; private set; }
    public MeansImplicitUseAttribute(ImplicitUseKindFlags useKindFlags);
    public MeansImplicitUseAttribute(ImplicitUseTargetFlags targetFlags);
    public MeansImplicitUseAttribute(ImplicitUseKindFlags useKindFlags, ImplicitUseTargetFlags targetFlags);
    [CompilerGeneratedAttribute]
public ImplicitUseKindFlags get_UseKindFlags();
    [CompilerGeneratedAttribute]
private void set_UseKindFlags(ImplicitUseKindFlags value);
    [CompilerGeneratedAttribute]
public ImplicitUseTargetFlags get_TargetFlags();
    [CompilerGeneratedAttribute]
private void set_TargetFlags(ImplicitUseTargetFlags value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.MemcachedBucket : BucketBase {
    private IKetamaKeyMapperFactory _ketamaKeyMapperFactory;
    private IHttpClusterMapFactory _httpClusterMapFactory;
    private HttpClusterMapBase _httpClusterMap;
    private SemaphoreSlim _configMutex;
    public IViewIndexManager ViewIndexes { get; }
    public ICouchbaseCollectionManager Collections { get; }
    internal MemcachedBucket(string name, ClusterContext context, IScopeFactory scopeFactory, IRetryOrchestrator retryOrchestrator, IKetamaKeyMapperFactory ketamaKeyMapperFactory, ILogger`1<MemcachedBucket> logger, TypedRedactor redactor, IBootstrapperFactory bootstrapperFactory, IRequestTracer tracer, IOperationConfigurator operationConfigurator, IRetryStrategy retryStrategy, IHttpClusterMapFactory httpClusterMapFactory, BucketConfig config);
    internal MemcachedBucket(string name, ClusterContext context, IScopeFactory scopeFactory, IRetryOrchestrator retryOrchestrator, IKetamaKeyMapperFactory ketamaKeyMapperFactory, ILogger`1<MemcachedBucket> logger, IHttpClusterMapFactory httpClusterMapFactory, TypedRedactor redactor, IBootstrapperFactory bootstrapperFactory, IRequestTracer tracer, IOperationConfigurator operationConfigurator, IRetryStrategy retryStrategy, BucketConfig config);
    public virtual IScope Scope(string scopeName);
    public virtual Task`1<IViewResult`2<TKey, TValue>> ViewQueryAsync(string designDocument, string viewName, ViewOptions options);
    public virtual IViewIndexManager get_ViewIndexes();
    public virtual ICouchbaseCollectionManager get_Collections();
    [AsyncStateMachineAttribute("Couchbase.MemcachedBucket/<ConfigUpdatedAsync>d__12")]
public virtual Task ConfigUpdatedAsync(BucketConfig newConfig);
    public virtual Task ForceConfigUpdateAsync();
    internal virtual Task`1<ResponseStatus> SendAsync(IOperation op, CancellationTokenPair tokenPair);
    [AsyncStateMachineAttribute("Couchbase.MemcachedBucket/<BootstrapAsync>d__15")]
internal virtual Task BootstrapAsync(IClusterNode node);
}
public class Couchbase.NetworkErrorException : CouchbaseException {
    public NetworkErrorException(string message);
    public NetworkErrorException(string message, Exception innerException);
}
public static class Couchbase.NetworkResolution : object {
    public static string Auto;
    public static string Default;
    public static string External;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("Use Couchbase.NetworkResolution")]
public static class Couchbase.NetworkTypes : object {
    public static string Auto;
    public static string Default;
    public static string External;
}
public class Couchbase.NodeNotAvailableException : CouchbaseException {
    public NodeNotAvailableException(string message);
    public NodeNotAvailableException(string message, Exception innerException);
}
[AttributeUsageAttribute("64")]
internal class Couchbase.NotifyPropertyChangedInvocatorAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; private set; }
    public NotifyPropertyChangedInvocatorAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
    [CompilerGeneratedAttribute]
private void set_ParameterName(string value);
}
[AttributeUsageAttribute("6592")]
internal class Couchbase.NotNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class Couchbase.PathReferenceAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <BasePath>k__BackingField;
    [NotNullAttribute]
public string BasePath { get; private set; }
    public PathReferenceAttribute(string basePath);
    [CompilerGeneratedAttribute]
public string get_BasePath();
    [CompilerGeneratedAttribute]
private void set_BasePath(string value);
}
public static class Couchbase.Protostellar.Admin.Bucket.V1.BucketAdminService : object {
    private static string __ServiceName;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<ListBucketsRequest> __Marshaller_couchbase_admin_bucket_v1_ListBucketsRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<ListBucketsResponse> __Marshaller_couchbase_admin_bucket_v1_ListBucketsResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<CreateBucketRequest> __Marshaller_couchbase_admin_bucket_v1_CreateBucketRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<CreateBucketResponse> __Marshaller_couchbase_admin_bucket_v1_CreateBucketResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<UpdateBucketRequest> __Marshaller_couchbase_admin_bucket_v1_UpdateBucketRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<UpdateBucketResponse> __Marshaller_couchbase_admin_bucket_v1_UpdateBucketResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<DeleteBucketRequest> __Marshaller_couchbase_admin_bucket_v1_DeleteBucketRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<DeleteBucketResponse> __Marshaller_couchbase_admin_bucket_v1_DeleteBucketResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<ListBucketsRequest, ListBucketsResponse> __Method_ListBuckets;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<CreateBucketRequest, CreateBucketResponse> __Method_CreateBucket;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<UpdateBucketRequest, UpdateBucketResponse> __Method_UpdateBucket;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<DeleteBucketRequest, DeleteBucketResponse> __Method_DeleteBucket;
    public static ServiceDescriptor Descriptor { get; }
    private static BucketAdminService();
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static void __Helper_SerializeMessage(IMessage message, SerializationContext context);
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static T __Helper_DeserializeMessage(DeserializationContext context, MessageParser`1<T> parser);
    public static ServiceDescriptor get_Descriptor();
}
public static class Couchbase.Protostellar.Admin.Bucket.V1.BucketReflection : object {
    private static FileDescriptor descriptor;
    public static FileDescriptor Descriptor { get; }
    private static BucketReflection();
    public static FileDescriptor get_Descriptor();
}
public enum Couchbase.Protostellar.Admin.Bucket.V1.BucketType : Enum {
    public int value__;
    [OriginalNameAttribute("BUCKET_TYPE_COUCHBASE")]
public static BucketType Couchbase;
    [OriginalNameAttribute("BUCKET_TYPE_EPHEMERAL")]
public static BucketType Ephemeral;
}
public enum Couchbase.Protostellar.Admin.Bucket.V1.CompressionMode : Enum {
    public int value__;
    [OriginalNameAttribute("COMPRESSION_MODE_OFF")]
public static CompressionMode Off;
    [OriginalNameAttribute("COMPRESSION_MODE_PASSIVE")]
public static CompressionMode Passive;
    [OriginalNameAttribute("COMPRESSION_MODE_ACTIVE")]
public static CompressionMode Active;
}
public enum Couchbase.Protostellar.Admin.Bucket.V1.ConflictResolutionType : Enum {
    public int value__;
    [OriginalNameAttribute("CONFLICT_RESOLUTION_TYPE_TIMESTAMP")]
public static ConflictResolutionType Timestamp;
    [OriginalNameAttribute("CONFLICT_RESOLUTION_TYPE_SEQUENCE_NUMBER")]
public static ConflictResolutionType SequenceNumber;
    [OriginalNameAttribute("CONFLICT_RESOLUTION_TYPE_CUSTOM")]
public static ConflictResolutionType Custom;
}
public class Couchbase.Protostellar.Admin.Bucket.V1.CreateBucketRequest : object {
    private static MessageParser`1<CreateBucketRequest> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int BucketTypeFieldNumber;
    private BucketType bucketType_;
    public static int RamQuotaMbFieldNumber;
    private ulong ramQuotaMb_;
    public static int NumReplicasFieldNumber;
    private UInt32 numReplicas_;
    public static int FlushEnabledFieldNumber;
    private bool flushEnabled_;
    public static int ReplicaIndexesFieldNumber;
    private bool replicaIndexes_;
    public static int EvictionModeFieldNumber;
    private EvictionMode evictionMode_;
    public static int MaxExpirySecsFieldNumber;
    private UInt32 maxExpirySecs_;
    public static int CompressionModeFieldNumber;
    private CompressionMode compressionMode_;
    public static int MinimumDurabilityLevelFieldNumber;
    private DurabilityLevel minimumDurabilityLevel_;
    public static int StorageBackendFieldNumber;
    private StorageBackend storageBackend_;
    public static int ConflictResolutionTypeFieldNumber;
    private ConflictResolutionType conflictResolutionType_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<CreateBucketRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public BucketType BucketType { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong RamQuotaMb { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasRamQuotaMb { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 NumReplicas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasNumReplicas { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool FlushEnabled { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasFlushEnabled { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool ReplicaIndexes { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasReplicaIndexes { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public EvictionMode EvictionMode { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasEvictionMode { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 MaxExpirySecs { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasMaxExpirySecs { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public CompressionMode CompressionMode { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasCompressionMode { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DurabilityLevel MinimumDurabilityLevel { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasMinimumDurabilityLevel { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public StorageBackend StorageBackend { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasStorageBackend { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ConflictResolutionType ConflictResolutionType { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasConflictResolutionType { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public CreateBucketRequest(CreateBucketRequest other);
    private static CreateBucketRequest();
    public static MessageParser`1<CreateBucketRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual CreateBucketRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public BucketType get_BucketType();
    public void set_BucketType(BucketType value);
    public ulong get_RamQuotaMb();
    public void set_RamQuotaMb(ulong value);
    public bool get_HasRamQuotaMb();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearRamQuotaMb();
    public UInt32 get_NumReplicas();
    public void set_NumReplicas(UInt32 value);
    public bool get_HasNumReplicas();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearNumReplicas();
    public bool get_FlushEnabled();
    public void set_FlushEnabled(bool value);
    public bool get_HasFlushEnabled();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearFlushEnabled();
    public bool get_ReplicaIndexes();
    public void set_ReplicaIndexes(bool value);
    public bool get_HasReplicaIndexes();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearReplicaIndexes();
    public EvictionMode get_EvictionMode();
    public void set_EvictionMode(EvictionMode value);
    public bool get_HasEvictionMode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearEvictionMode();
    public UInt32 get_MaxExpirySecs();
    public void set_MaxExpirySecs(UInt32 value);
    public bool get_HasMaxExpirySecs();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearMaxExpirySecs();
    public CompressionMode get_CompressionMode();
    public void set_CompressionMode(CompressionMode value);
    public bool get_HasCompressionMode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearCompressionMode();
    public DurabilityLevel get_MinimumDurabilityLevel();
    public void set_MinimumDurabilityLevel(DurabilityLevel value);
    public bool get_HasMinimumDurabilityLevel();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearMinimumDurabilityLevel();
    public StorageBackend get_StorageBackend();
    public void set_StorageBackend(StorageBackend value);
    public bool get_HasStorageBackend();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearStorageBackend();
    public ConflictResolutionType get_ConflictResolutionType();
    public void set_ConflictResolutionType(ConflictResolutionType value);
    public bool get_HasConflictResolutionType();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearConflictResolutionType();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(CreateBucketRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CreateBucketRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Bucket.V1.CreateBucketResponse : object {
    private static MessageParser`1<CreateBucketResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketUuidFieldNumber;
    private string bucketUuid_;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<CreateBucketResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketUuid { get; public set; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public CreateBucketResponse(CreateBucketResponse other);
    private static CreateBucketResponse();
    public static MessageParser`1<CreateBucketResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual CreateBucketResponse Clone();
    public string get_BucketUuid();
    public void set_BucketUuid(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(CreateBucketResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CreateBucketResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.Admin.Bucket.V1.DeleteBucketRequest : object {
    private static MessageParser`1<DeleteBucketRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DeleteBucketRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DeleteBucketRequest(DeleteBucketRequest other);
    private static DeleteBucketRequest();
    public static MessageParser`1<DeleteBucketRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DeleteBucketRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DeleteBucketRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DeleteBucketRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Bucket.V1.DeleteBucketResponse : object {
    private static MessageParser`1<DeleteBucketResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DeleteBucketResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DeleteBucketResponse(DeleteBucketResponse other);
    private static DeleteBucketResponse();
    public static MessageParser`1<DeleteBucketResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DeleteBucketResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DeleteBucketResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DeleteBucketResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public enum Couchbase.Protostellar.Admin.Bucket.V1.EvictionMode : Enum {
    public int value__;
    [OriginalNameAttribute("EVICTION_MODE_FULL")]
public static EvictionMode Full;
    [OriginalNameAttribute("EVICTION_MODE_NOT_RECENTLY_USED")]
public static EvictionMode NotRecentlyUsed;
    [OriginalNameAttribute("EVICTION_MODE_VALUE_ONLY")]
public static EvictionMode ValueOnly;
    [OriginalNameAttribute("EVICTION_MODE_NONE")]
public static EvictionMode None;
}
public class Couchbase.Protostellar.Admin.Bucket.V1.ListBucketsRequest : object {
    private static MessageParser`1<ListBucketsRequest> _parser;
    private UnknownFieldSet _unknownFields;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<ListBucketsRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ListBucketsRequest(ListBucketsRequest other);
    private static ListBucketsRequest();
    public static MessageParser`1<ListBucketsRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual ListBucketsRequest Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(ListBucketsRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(ListBucketsRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Bucket.V1.ListBucketsResponse : object {
    private static MessageParser`1<ListBucketsResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketsFieldNumber;
    private static FieldCodec`1<Bucket> _repeated_buckets_codec;
    private RepeatedField`1<Bucket> buckets_;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<ListBucketsResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<Bucket> Buckets { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ListBucketsResponse(ListBucketsResponse other);
    private static ListBucketsResponse();
    public static MessageParser`1<ListBucketsResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual ListBucketsResponse Clone();
    public RepeatedField`1<Bucket> get_Buckets();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(ListBucketsResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(ListBucketsResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public enum Couchbase.Protostellar.Admin.Bucket.V1.StorageBackend : Enum {
    public int value__;
    [OriginalNameAttribute("STORAGE_BACKEND_COUCHSTORE")]
public static StorageBackend Couchstore;
    [OriginalNameAttribute("STORAGE_BACKEND_MAGMA")]
public static StorageBackend Magma;
}
public class Couchbase.Protostellar.Admin.Bucket.V1.UpdateBucketRequest : object {
    private static MessageParser`1<UpdateBucketRequest> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int RamQuotaMbFieldNumber;
    private ulong ramQuotaMb_;
    public static int NumReplicasFieldNumber;
    private UInt32 numReplicas_;
    public static int FlushEnabledFieldNumber;
    private bool flushEnabled_;
    public static int EvictionModeFieldNumber;
    private EvictionMode evictionMode_;
    public static int MaxExpirySecsFieldNumber;
    private UInt32 maxExpirySecs_;
    public static int CompressionModeFieldNumber;
    private CompressionMode compressionMode_;
    public static int MinimumDurabilityLevelFieldNumber;
    private DurabilityLevel minimumDurabilityLevel_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<UpdateBucketRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong RamQuotaMb { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasRamQuotaMb { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 NumReplicas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasNumReplicas { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool FlushEnabled { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasFlushEnabled { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public EvictionMode EvictionMode { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasEvictionMode { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 MaxExpirySecs { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasMaxExpirySecs { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public CompressionMode CompressionMode { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasCompressionMode { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DurabilityLevel MinimumDurabilityLevel { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasMinimumDurabilityLevel { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UpdateBucketRequest(UpdateBucketRequest other);
    private static UpdateBucketRequest();
    public static MessageParser`1<UpdateBucketRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual UpdateBucketRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public ulong get_RamQuotaMb();
    public void set_RamQuotaMb(ulong value);
    public bool get_HasRamQuotaMb();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearRamQuotaMb();
    public UInt32 get_NumReplicas();
    public void set_NumReplicas(UInt32 value);
    public bool get_HasNumReplicas();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearNumReplicas();
    public bool get_FlushEnabled();
    public void set_FlushEnabled(bool value);
    public bool get_HasFlushEnabled();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearFlushEnabled();
    public EvictionMode get_EvictionMode();
    public void set_EvictionMode(EvictionMode value);
    public bool get_HasEvictionMode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearEvictionMode();
    public UInt32 get_MaxExpirySecs();
    public void set_MaxExpirySecs(UInt32 value);
    public bool get_HasMaxExpirySecs();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearMaxExpirySecs();
    public CompressionMode get_CompressionMode();
    public void set_CompressionMode(CompressionMode value);
    public bool get_HasCompressionMode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearCompressionMode();
    public DurabilityLevel get_MinimumDurabilityLevel();
    public void set_MinimumDurabilityLevel(DurabilityLevel value);
    public bool get_HasMinimumDurabilityLevel();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearMinimumDurabilityLevel();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(UpdateBucketRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(UpdateBucketRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Bucket.V1.UpdateBucketResponse : object {
    private static MessageParser`1<UpdateBucketResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<UpdateBucketResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UpdateBucketResponse(UpdateBucketResponse other);
    private static UpdateBucketResponse();
    public static MessageParser`1<UpdateBucketResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual UpdateBucketResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(UpdateBucketResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(UpdateBucketResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public static class Couchbase.Protostellar.Admin.Collection.V1.CollectionAdminService : object {
    private static string __ServiceName;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<ListCollectionsRequest> __Marshaller_couchbase_admin_collection_v1_ListCollectionsRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<ListCollectionsResponse> __Marshaller_couchbase_admin_collection_v1_ListCollectionsResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<CreateScopeRequest> __Marshaller_couchbase_admin_collection_v1_CreateScopeRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<CreateScopeResponse> __Marshaller_couchbase_admin_collection_v1_CreateScopeResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<DeleteScopeRequest> __Marshaller_couchbase_admin_collection_v1_DeleteScopeRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<DeleteScopeResponse> __Marshaller_couchbase_admin_collection_v1_DeleteScopeResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<CreateCollectionRequest> __Marshaller_couchbase_admin_collection_v1_CreateCollectionRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<CreateCollectionResponse> __Marshaller_couchbase_admin_collection_v1_CreateCollectionResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<DeleteCollectionRequest> __Marshaller_couchbase_admin_collection_v1_DeleteCollectionRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<DeleteCollectionResponse> __Marshaller_couchbase_admin_collection_v1_DeleteCollectionResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<ListCollectionsRequest, ListCollectionsResponse> __Method_ListCollections;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<CreateScopeRequest, CreateScopeResponse> __Method_CreateScope;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<DeleteScopeRequest, DeleteScopeResponse> __Method_DeleteScope;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<CreateCollectionRequest, CreateCollectionResponse> __Method_CreateCollection;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<DeleteCollectionRequest, DeleteCollectionResponse> __Method_DeleteCollection;
    public static ServiceDescriptor Descriptor { get; }
    private static CollectionAdminService();
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static void __Helper_SerializeMessage(IMessage message, SerializationContext context);
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static T __Helper_DeserializeMessage(DeserializationContext context, MessageParser`1<T> parser);
    public static ServiceDescriptor get_Descriptor();
}
public static class Couchbase.Protostellar.Admin.Collection.V1.CollectionReflection : object {
    private static FileDescriptor descriptor;
    public static FileDescriptor Descriptor { get; }
    private static CollectionReflection();
    public static FileDescriptor get_Descriptor();
}
public class Couchbase.Protostellar.Admin.Collection.V1.CreateCollectionRequest : object {
    private static MessageParser`1<CreateCollectionRequest> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int MaxExpirySecsFieldNumber;
    private UInt32 maxExpirySecs_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<CreateCollectionRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 MaxExpirySecs { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasMaxExpirySecs { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public CreateCollectionRequest(CreateCollectionRequest other);
    private static CreateCollectionRequest();
    public static MessageParser`1<CreateCollectionRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual CreateCollectionRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public string get_CollectionName();
    public void set_CollectionName(string value);
    public UInt32 get_MaxExpirySecs();
    public void set_MaxExpirySecs(UInt32 value);
    public bool get_HasMaxExpirySecs();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearMaxExpirySecs();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(CreateCollectionRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CreateCollectionRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Collection.V1.CreateCollectionResponse : object {
    private static MessageParser`1<CreateCollectionResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<CreateCollectionResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public CreateCollectionResponse(CreateCollectionResponse other);
    private static CreateCollectionResponse();
    public static MessageParser`1<CreateCollectionResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual CreateCollectionResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(CreateCollectionResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CreateCollectionResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.Admin.Collection.V1.CreateScopeRequest : object {
    private static MessageParser`1<CreateScopeRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<CreateScopeRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public CreateScopeRequest(CreateScopeRequest other);
    private static CreateScopeRequest();
    public static MessageParser`1<CreateScopeRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual CreateScopeRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_ScopeName();
    public void set_ScopeName(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(CreateScopeRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CreateScopeRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Collection.V1.CreateScopeResponse : object {
    private static MessageParser`1<CreateScopeResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<CreateScopeResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public CreateScopeResponse(CreateScopeResponse other);
    private static CreateScopeResponse();
    public static MessageParser`1<CreateScopeResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual CreateScopeResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(CreateScopeResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CreateScopeResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.Admin.Collection.V1.DeleteCollectionRequest : object {
    private static MessageParser`1<DeleteCollectionRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DeleteCollectionRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DeleteCollectionRequest(DeleteCollectionRequest other);
    private static DeleteCollectionRequest();
    public static MessageParser`1<DeleteCollectionRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DeleteCollectionRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public string get_CollectionName();
    public void set_CollectionName(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DeleteCollectionRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DeleteCollectionRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Collection.V1.DeleteCollectionResponse : object {
    private static MessageParser`1<DeleteCollectionResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DeleteCollectionResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DeleteCollectionResponse(DeleteCollectionResponse other);
    private static DeleteCollectionResponse();
    public static MessageParser`1<DeleteCollectionResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DeleteCollectionResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DeleteCollectionResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DeleteCollectionResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.Admin.Collection.V1.DeleteScopeRequest : object {
    private static MessageParser`1<DeleteScopeRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DeleteScopeRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DeleteScopeRequest(DeleteScopeRequest other);
    private static DeleteScopeRequest();
    public static MessageParser`1<DeleteScopeRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DeleteScopeRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_ScopeName();
    public void set_ScopeName(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DeleteScopeRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DeleteScopeRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Collection.V1.DeleteScopeResponse : object {
    private static MessageParser`1<DeleteScopeResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DeleteScopeResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DeleteScopeResponse(DeleteScopeResponse other);
    private static DeleteScopeResponse();
    public static MessageParser`1<DeleteScopeResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DeleteScopeResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DeleteScopeResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DeleteScopeResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.Admin.Collection.V1.ListCollectionsRequest : object {
    private static MessageParser`1<ListCollectionsRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<ListCollectionsRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ListCollectionsRequest(ListCollectionsRequest other);
    private static ListCollectionsRequest();
    public static MessageParser`1<ListCollectionsRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual ListCollectionsRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(ListCollectionsRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(ListCollectionsRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Collection.V1.ListCollectionsResponse : object {
    private static MessageParser`1<ListCollectionsResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int ScopesFieldNumber;
    private static FieldCodec`1<Scope> _repeated_scopes_codec;
    private RepeatedField`1<Scope> scopes_;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<ListCollectionsResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<Scope> Scopes { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ListCollectionsResponse(ListCollectionsResponse other);
    private static ListCollectionsResponse();
    public static MessageParser`1<ListCollectionsResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual ListCollectionsResponse Clone();
    public RepeatedField`1<Scope> get_Scopes();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(ListCollectionsResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(ListCollectionsResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.Admin.Query.V1.BuildDeferredIndexesRequest : object {
    private static MessageParser`1<BuildDeferredIndexesRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<BuildDeferredIndexesRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScopeName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasCollectionName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public BuildDeferredIndexesRequest(BuildDeferredIndexesRequest other);
    private static BuildDeferredIndexesRequest();
    public static MessageParser`1<BuildDeferredIndexesRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual BuildDeferredIndexesRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public bool get_HasScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScopeName();
    public string get_CollectionName();
    public void set_CollectionName(string value);
    public bool get_HasCollectionName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearCollectionName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(BuildDeferredIndexesRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(BuildDeferredIndexesRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Query.V1.BuildDeferredIndexesResponse : object {
    private static MessageParser`1<BuildDeferredIndexesResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int IndexesFieldNumber;
    private static FieldCodec`1<Index> _repeated_indexes_codec;
    private RepeatedField`1<Index> indexes_;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<BuildDeferredIndexesResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<Index> Indexes { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public BuildDeferredIndexesResponse(BuildDeferredIndexesResponse other);
    private static BuildDeferredIndexesResponse();
    public static MessageParser`1<BuildDeferredIndexesResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual BuildDeferredIndexesResponse Clone();
    public RepeatedField`1<Index> get_Indexes();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(BuildDeferredIndexesResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(BuildDeferredIndexesResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.Admin.Query.V1.CreateIndexRequest : object {
    private static MessageParser`1<CreateIndexRequest> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int NameFieldNumber;
    private string name_;
    public static int NumReplicasFieldNumber;
    private int numReplicas_;
    public static int FieldsFieldNumber;
    private static FieldCodec`1<string> _repeated_fields_codec;
    private RepeatedField`1<string> fields_;
    public static int DeferredFieldNumber;
    private bool deferred_;
    public static int IgnoreIfExistsFieldNumber;
    private bool ignoreIfExists_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<CreateIndexRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScopeName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasCollectionName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Name { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public int NumReplicas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasNumReplicas { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<string> Fields { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool Deferred { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasDeferred { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool IgnoreIfExists { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasIgnoreIfExists { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public CreateIndexRequest(CreateIndexRequest other);
    private static CreateIndexRequest();
    public static MessageParser`1<CreateIndexRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual CreateIndexRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public bool get_HasScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScopeName();
    public string get_CollectionName();
    public void set_CollectionName(string value);
    public bool get_HasCollectionName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearCollectionName();
    public string get_Name();
    public void set_Name(string value);
    public int get_NumReplicas();
    public void set_NumReplicas(int value);
    public bool get_HasNumReplicas();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearNumReplicas();
    public RepeatedField`1<string> get_Fields();
    public bool get_Deferred();
    public void set_Deferred(bool value);
    public bool get_HasDeferred();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearDeferred();
    public bool get_IgnoreIfExists();
    public void set_IgnoreIfExists(bool value);
    public bool get_HasIgnoreIfExists();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearIgnoreIfExists();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(CreateIndexRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CreateIndexRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Query.V1.CreateIndexResponse : object {
    private static MessageParser`1<CreateIndexResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<CreateIndexResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public CreateIndexResponse(CreateIndexResponse other);
    private static CreateIndexResponse();
    public static MessageParser`1<CreateIndexResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual CreateIndexResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(CreateIndexResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CreateIndexResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.Admin.Query.V1.CreatePrimaryIndexRequest : object {
    private static MessageParser`1<CreatePrimaryIndexRequest> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int NameFieldNumber;
    private string name_;
    public static int NumReplicasFieldNumber;
    private int numReplicas_;
    public static int DeferredFieldNumber;
    private bool deferred_;
    public static int IgnoreIfExistsFieldNumber;
    private bool ignoreIfExists_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<CreatePrimaryIndexRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScopeName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasCollectionName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Name { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public int NumReplicas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasNumReplicas { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool Deferred { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasDeferred { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool IgnoreIfExists { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasIgnoreIfExists { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public CreatePrimaryIndexRequest(CreatePrimaryIndexRequest other);
    private static CreatePrimaryIndexRequest();
    public static MessageParser`1<CreatePrimaryIndexRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual CreatePrimaryIndexRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public bool get_HasScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScopeName();
    public string get_CollectionName();
    public void set_CollectionName(string value);
    public bool get_HasCollectionName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearCollectionName();
    public string get_Name();
    public void set_Name(string value);
    public bool get_HasName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearName();
    public int get_NumReplicas();
    public void set_NumReplicas(int value);
    public bool get_HasNumReplicas();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearNumReplicas();
    public bool get_Deferred();
    public void set_Deferred(bool value);
    public bool get_HasDeferred();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearDeferred();
    public bool get_IgnoreIfExists();
    public void set_IgnoreIfExists(bool value);
    public bool get_HasIgnoreIfExists();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearIgnoreIfExists();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(CreatePrimaryIndexRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CreatePrimaryIndexRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Query.V1.CreatePrimaryIndexResponse : object {
    private static MessageParser`1<CreatePrimaryIndexResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<CreatePrimaryIndexResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public CreatePrimaryIndexResponse(CreatePrimaryIndexResponse other);
    private static CreatePrimaryIndexResponse();
    public static MessageParser`1<CreatePrimaryIndexResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual CreatePrimaryIndexResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(CreatePrimaryIndexResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CreatePrimaryIndexResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.Admin.Query.V1.DropIndexRequest : object {
    private static MessageParser`1<DropIndexRequest> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int NameFieldNumber;
    private string name_;
    public static int IgnoreIfMissingFieldNumber;
    private bool ignoreIfMissing_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DropIndexRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScopeName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasCollectionName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Name { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool IgnoreIfMissing { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasIgnoreIfMissing { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DropIndexRequest(DropIndexRequest other);
    private static DropIndexRequest();
    public static MessageParser`1<DropIndexRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DropIndexRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public bool get_HasScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScopeName();
    public string get_CollectionName();
    public void set_CollectionName(string value);
    public bool get_HasCollectionName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearCollectionName();
    public string get_Name();
    public void set_Name(string value);
    public bool get_IgnoreIfMissing();
    public void set_IgnoreIfMissing(bool value);
    public bool get_HasIgnoreIfMissing();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearIgnoreIfMissing();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DropIndexRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DropIndexRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Query.V1.DropIndexResponse : object {
    private static MessageParser`1<DropIndexResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DropIndexResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DropIndexResponse(DropIndexResponse other);
    private static DropIndexResponse();
    public static MessageParser`1<DropIndexResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DropIndexResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DropIndexResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DropIndexResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.Admin.Query.V1.DropPrimaryIndexRequest : object {
    private static MessageParser`1<DropPrimaryIndexRequest> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int NameFieldNumber;
    private string name_;
    public static int IgnoreIfMissingFieldNumber;
    private bool ignoreIfMissing_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DropPrimaryIndexRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScopeName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasCollectionName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Name { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool IgnoreIfMissing { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasIgnoreIfMissing { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DropPrimaryIndexRequest(DropPrimaryIndexRequest other);
    private static DropPrimaryIndexRequest();
    public static MessageParser`1<DropPrimaryIndexRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DropPrimaryIndexRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public bool get_HasScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScopeName();
    public string get_CollectionName();
    public void set_CollectionName(string value);
    public bool get_HasCollectionName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearCollectionName();
    public string get_Name();
    public void set_Name(string value);
    public bool get_HasName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearName();
    public bool get_IgnoreIfMissing();
    public void set_IgnoreIfMissing(bool value);
    public bool get_HasIgnoreIfMissing();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearIgnoreIfMissing();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DropPrimaryIndexRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DropPrimaryIndexRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Query.V1.DropPrimaryIndexResponse : object {
    private static MessageParser`1<DropPrimaryIndexResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DropPrimaryIndexResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DropPrimaryIndexResponse(DropPrimaryIndexResponse other);
    private static DropPrimaryIndexResponse();
    public static MessageParser`1<DropPrimaryIndexResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DropPrimaryIndexResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DropPrimaryIndexResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DropPrimaryIndexResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.Admin.Query.V1.GetAllIndexesRequest : object {
    private static MessageParser`1<GetAllIndexesRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<GetAllIndexesRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBucketName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScopeName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasCollectionName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public GetAllIndexesRequest(GetAllIndexesRequest other);
    private static GetAllIndexesRequest();
    public static MessageParser`1<GetAllIndexesRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual GetAllIndexesRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public bool get_HasBucketName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBucketName();
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public bool get_HasScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScopeName();
    public string get_CollectionName();
    public void set_CollectionName(string value);
    public bool get_HasCollectionName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearCollectionName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(GetAllIndexesRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(GetAllIndexesRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Query.V1.GetAllIndexesResponse : object {
    private static MessageParser`1<GetAllIndexesResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int IndexesFieldNumber;
    private static FieldCodec`1<Index> _repeated_indexes_codec;
    private RepeatedField`1<Index> indexes_;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<GetAllIndexesResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<Index> Indexes { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public GetAllIndexesResponse(GetAllIndexesResponse other);
    private static GetAllIndexesResponse();
    public static MessageParser`1<GetAllIndexesResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual GetAllIndexesResponse Clone();
    public RepeatedField`1<Index> get_Indexes();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(GetAllIndexesResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(GetAllIndexesResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public enum Couchbase.Protostellar.Admin.Query.V1.IndexState : Enum {
    public int value__;
    [OriginalNameAttribute("INDEX_STATE_DEFERRED")]
public static IndexState Deferred;
    [OriginalNameAttribute("INDEX_STATE_BUILDING")]
public static IndexState Building;
    [OriginalNameAttribute("INDEX_STATE_PENDING")]
public static IndexState Pending;
    [OriginalNameAttribute("INDEX_STATE_ONLINE")]
public static IndexState Online;
    [OriginalNameAttribute("INDEX_STATE_OFFLINE")]
public static IndexState Offline;
    [OriginalNameAttribute("INDEX_STATE_ABRIDGED")]
public static IndexState Abridged;
    [OriginalNameAttribute("INDEX_STATE_SCHEDULED")]
public static IndexState Scheduled;
}
public enum Couchbase.Protostellar.Admin.Query.V1.IndexType : Enum {
    public int value__;
    [OriginalNameAttribute("INDEX_TYPE_VIEW")]
public static IndexType View;
    [OriginalNameAttribute("INDEX_TYPE_GSI")]
public static IndexType Gsi;
}
public static class Couchbase.Protostellar.Admin.Query.V1.QueryAdminService : object {
    private static string __ServiceName;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<GetAllIndexesRequest> __Marshaller_couchbase_admin_query_v1_GetAllIndexesRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<GetAllIndexesResponse> __Marshaller_couchbase_admin_query_v1_GetAllIndexesResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<CreatePrimaryIndexRequest> __Marshaller_couchbase_admin_query_v1_CreatePrimaryIndexRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<CreatePrimaryIndexResponse> __Marshaller_couchbase_admin_query_v1_CreatePrimaryIndexResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<CreateIndexRequest> __Marshaller_couchbase_admin_query_v1_CreateIndexRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<CreateIndexResponse> __Marshaller_couchbase_admin_query_v1_CreateIndexResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<DropPrimaryIndexRequest> __Marshaller_couchbase_admin_query_v1_DropPrimaryIndexRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<DropPrimaryIndexResponse> __Marshaller_couchbase_admin_query_v1_DropPrimaryIndexResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<DropIndexRequest> __Marshaller_couchbase_admin_query_v1_DropIndexRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<DropIndexResponse> __Marshaller_couchbase_admin_query_v1_DropIndexResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<BuildDeferredIndexesRequest> __Marshaller_couchbase_admin_query_v1_BuildDeferredIndexesRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<BuildDeferredIndexesResponse> __Marshaller_couchbase_admin_query_v1_BuildDeferredIndexesResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<GetAllIndexesRequest, GetAllIndexesResponse> __Method_GetAllIndexes;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<CreatePrimaryIndexRequest, CreatePrimaryIndexResponse> __Method_CreatePrimaryIndex;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<CreateIndexRequest, CreateIndexResponse> __Method_CreateIndex;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<DropPrimaryIndexRequest, DropPrimaryIndexResponse> __Method_DropPrimaryIndex;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<DropIndexRequest, DropIndexResponse> __Method_DropIndex;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<BuildDeferredIndexesRequest, BuildDeferredIndexesResponse> __Method_BuildDeferredIndexes;
    public static ServiceDescriptor Descriptor { get; }
    private static QueryAdminService();
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static void __Helper_SerializeMessage(IMessage message, SerializationContext context);
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static T __Helper_DeserializeMessage(DeserializationContext context, MessageParser`1<T> parser);
    public static ServiceDescriptor get_Descriptor();
}
public static class Couchbase.Protostellar.Admin.Query.V1.QueryReflection : object {
    private static FileDescriptor descriptor;
    public static FileDescriptor Descriptor { get; }
    private static QueryReflection();
    public static FileDescriptor get_Descriptor();
}
public class Couchbase.Protostellar.Admin.Search.V1.AllowIndexQueryingRequest : object {
    private static MessageParser`1<AllowIndexQueryingRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int NameFieldNumber;
    private string name_;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<AllowIndexQueryingRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Name { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBucketName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScopeName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public AllowIndexQueryingRequest(AllowIndexQueryingRequest other);
    private static AllowIndexQueryingRequest();
    public static MessageParser`1<AllowIndexQueryingRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual AllowIndexQueryingRequest Clone();
    public string get_Name();
    public void set_Name(string value);
    public string get_BucketName();
    public void set_BucketName(string value);
    public bool get_HasBucketName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBucketName();
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public bool get_HasScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(AllowIndexQueryingRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(AllowIndexQueryingRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Search.V1.AllowIndexQueryingResponse : object {
    private static MessageParser`1<AllowIndexQueryingResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<AllowIndexQueryingResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public AllowIndexQueryingResponse(AllowIndexQueryingResponse other);
    private static AllowIndexQueryingResponse();
    public static MessageParser`1<AllowIndexQueryingResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual AllowIndexQueryingResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(AllowIndexQueryingResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(AllowIndexQueryingResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.Admin.Search.V1.AnalyzeDocumentRequest : object {
    private static MessageParser`1<AnalyzeDocumentRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int NameFieldNumber;
    private string name_;
    public static int DocFieldNumber;
    private ByteString doc_;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<AnalyzeDocumentRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Name { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ByteString Doc { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBucketName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScopeName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public AnalyzeDocumentRequest(AnalyzeDocumentRequest other);
    private static AnalyzeDocumentRequest();
    public static MessageParser`1<AnalyzeDocumentRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual AnalyzeDocumentRequest Clone();
    public string get_Name();
    public void set_Name(string value);
    public ByteString get_Doc();
    public void set_Doc(ByteString value);
    public string get_BucketName();
    public void set_BucketName(string value);
    public bool get_HasBucketName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBucketName();
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public bool get_HasScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(AnalyzeDocumentRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(AnalyzeDocumentRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Search.V1.AnalyzeDocumentResponse : object {
    private static MessageParser`1<AnalyzeDocumentResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int StatusFieldNumber;
    private string status_;
    public static int AnalyzedFieldNumber;
    private ByteString analyzed_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<AnalyzeDocumentResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Status { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ByteString Analyzed { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public AnalyzeDocumentResponse(AnalyzeDocumentResponse other);
    private static AnalyzeDocumentResponse();
    public static MessageParser`1<AnalyzeDocumentResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual AnalyzeDocumentResponse Clone();
    public string get_Status();
    public void set_Status(string value);
    public ByteString get_Analyzed();
    public void set_Analyzed(ByteString value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(AnalyzeDocumentResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(AnalyzeDocumentResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Search.V1.CreateIndexRequest : object {
    private static MessageParser`1<CreateIndexRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int NameFieldNumber;
    private string name_;
    public static int ParamsFieldNumber;
    private static Codec<string, ByteString> _map_params_codec;
    private MapField`2<string, ByteString> params_;
    public static int PlanParamsFieldNumber;
    private static Codec<string, ByteString> _map_planParams_codec;
    private MapField`2<string, ByteString> planParams_;
    public static int PrevIndexUuidFieldNumber;
    private string prevIndexUuid_;
    public static int SourceNameFieldNumber;
    private string sourceName_;
    public static int SourceParamsFieldNumber;
    private static Codec<string, ByteString> _map_sourceParams_codec;
    private MapField`2<string, ByteString> sourceParams_;
    public static int SourceTypeFieldNumber;
    private string sourceType_;
    public static int SourceUuidFieldNumber;
    private string sourceUuid_;
    public static int TypeFieldNumber;
    private string type_;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<CreateIndexRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Name { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MapField`2<string, ByteString> Params { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MapField`2<string, ByteString> PlanParams { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string PrevIndexUuid { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasPrevIndexUuid { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string SourceName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasSourceName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MapField`2<string, ByteString> SourceParams { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string SourceType { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasSourceType { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string SourceUuid { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasSourceUuid { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Type { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBucketName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScopeName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public CreateIndexRequest(CreateIndexRequest other);
    private static CreateIndexRequest();
    public static MessageParser`1<CreateIndexRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual CreateIndexRequest Clone();
    public string get_Name();
    public void set_Name(string value);
    public MapField`2<string, ByteString> get_Params();
    public MapField`2<string, ByteString> get_PlanParams();
    public string get_PrevIndexUuid();
    public void set_PrevIndexUuid(string value);
    public bool get_HasPrevIndexUuid();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearPrevIndexUuid();
    public string get_SourceName();
    public void set_SourceName(string value);
    public bool get_HasSourceName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearSourceName();
    public MapField`2<string, ByteString> get_SourceParams();
    public string get_SourceType();
    public void set_SourceType(string value);
    public bool get_HasSourceType();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearSourceType();
    public string get_SourceUuid();
    public void set_SourceUuid(string value);
    public bool get_HasSourceUuid();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearSourceUuid();
    public string get_Type();
    public void set_Type(string value);
    public string get_BucketName();
    public void set_BucketName(string value);
    public bool get_HasBucketName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBucketName();
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public bool get_HasScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(CreateIndexRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CreateIndexRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Search.V1.CreateIndexResponse : object {
    private static MessageParser`1<CreateIndexResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<CreateIndexResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public CreateIndexResponse(CreateIndexResponse other);
    private static CreateIndexResponse();
    public static MessageParser`1<CreateIndexResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual CreateIndexResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(CreateIndexResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CreateIndexResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.Admin.Search.V1.DeleteIndexRequest : object {
    private static MessageParser`1<DeleteIndexRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int NameFieldNumber;
    private string name_;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DeleteIndexRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Name { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBucketName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScopeName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DeleteIndexRequest(DeleteIndexRequest other);
    private static DeleteIndexRequest();
    public static MessageParser`1<DeleteIndexRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DeleteIndexRequest Clone();
    public string get_Name();
    public void set_Name(string value);
    public string get_BucketName();
    public void set_BucketName(string value);
    public bool get_HasBucketName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBucketName();
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public bool get_HasScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DeleteIndexRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DeleteIndexRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Search.V1.DeleteIndexResponse : object {
    private static MessageParser`1<DeleteIndexResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DeleteIndexResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DeleteIndexResponse(DeleteIndexResponse other);
    private static DeleteIndexResponse();
    public static MessageParser`1<DeleteIndexResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DeleteIndexResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DeleteIndexResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DeleteIndexResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.Admin.Search.V1.DisallowIndexQueryingRequest : object {
    private static MessageParser`1<DisallowIndexQueryingRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int NameFieldNumber;
    private string name_;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DisallowIndexQueryingRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Name { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBucketName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScopeName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DisallowIndexQueryingRequest(DisallowIndexQueryingRequest other);
    private static DisallowIndexQueryingRequest();
    public static MessageParser`1<DisallowIndexQueryingRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DisallowIndexQueryingRequest Clone();
    public string get_Name();
    public void set_Name(string value);
    public string get_BucketName();
    public void set_BucketName(string value);
    public bool get_HasBucketName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBucketName();
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public bool get_HasScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DisallowIndexQueryingRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DisallowIndexQueryingRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Search.V1.DisallowIndexQueryingResponse : object {
    private static MessageParser`1<DisallowIndexQueryingResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DisallowIndexQueryingResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DisallowIndexQueryingResponse(DisallowIndexQueryingResponse other);
    private static DisallowIndexQueryingResponse();
    public static MessageParser`1<DisallowIndexQueryingResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DisallowIndexQueryingResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DisallowIndexQueryingResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DisallowIndexQueryingResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.Admin.Search.V1.FreezeIndexPlanRequest : object {
    private static MessageParser`1<FreezeIndexPlanRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int NameFieldNumber;
    private string name_;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<FreezeIndexPlanRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Name { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBucketName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScopeName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public FreezeIndexPlanRequest(FreezeIndexPlanRequest other);
    private static FreezeIndexPlanRequest();
    public static MessageParser`1<FreezeIndexPlanRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual FreezeIndexPlanRequest Clone();
    public string get_Name();
    public void set_Name(string value);
    public string get_BucketName();
    public void set_BucketName(string value);
    public bool get_HasBucketName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBucketName();
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public bool get_HasScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(FreezeIndexPlanRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(FreezeIndexPlanRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Search.V1.FreezeIndexPlanResponse : object {
    private static MessageParser`1<FreezeIndexPlanResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<FreezeIndexPlanResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public FreezeIndexPlanResponse(FreezeIndexPlanResponse other);
    private static FreezeIndexPlanResponse();
    public static MessageParser`1<FreezeIndexPlanResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual FreezeIndexPlanResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(FreezeIndexPlanResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(FreezeIndexPlanResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.Admin.Search.V1.GetIndexedDocumentsCountRequest : object {
    private static MessageParser`1<GetIndexedDocumentsCountRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int NameFieldNumber;
    private string name_;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<GetIndexedDocumentsCountRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Name { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBucketName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScopeName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public GetIndexedDocumentsCountRequest(GetIndexedDocumentsCountRequest other);
    private static GetIndexedDocumentsCountRequest();
    public static MessageParser`1<GetIndexedDocumentsCountRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual GetIndexedDocumentsCountRequest Clone();
    public string get_Name();
    public void set_Name(string value);
    public string get_BucketName();
    public void set_BucketName(string value);
    public bool get_HasBucketName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBucketName();
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public bool get_HasScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(GetIndexedDocumentsCountRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(GetIndexedDocumentsCountRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Search.V1.GetIndexedDocumentsCountResponse : object {
    private static MessageParser`1<GetIndexedDocumentsCountResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int CountFieldNumber;
    private ulong count_;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<GetIndexedDocumentsCountResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Count { get; public set; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public GetIndexedDocumentsCountResponse(GetIndexedDocumentsCountResponse other);
    private static GetIndexedDocumentsCountResponse();
    public static MessageParser`1<GetIndexedDocumentsCountResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual GetIndexedDocumentsCountResponse Clone();
    public ulong get_Count();
    public void set_Count(ulong value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(GetIndexedDocumentsCountResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(GetIndexedDocumentsCountResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.Admin.Search.V1.GetIndexRequest : object {
    private static MessageParser`1<GetIndexRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int NameFieldNumber;
    private string name_;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<GetIndexRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Name { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBucketName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScopeName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public GetIndexRequest(GetIndexRequest other);
    private static GetIndexRequest();
    public static MessageParser`1<GetIndexRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual GetIndexRequest Clone();
    public string get_Name();
    public void set_Name(string value);
    public string get_BucketName();
    public void set_BucketName(string value);
    public bool get_HasBucketName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBucketName();
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public bool get_HasScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(GetIndexRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(GetIndexRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Search.V1.GetIndexResponse : object {
    private static MessageParser`1<GetIndexResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int IndexFieldNumber;
    private Index index_;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<GetIndexResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Index Index { get; public set; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public GetIndexResponse(GetIndexResponse other);
    private static GetIndexResponse();
    public static MessageParser`1<GetIndexResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual GetIndexResponse Clone();
    public Index get_Index();
    public void set_Index(Index value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(GetIndexResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(GetIndexResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.Admin.Search.V1.Index : object {
    private static MessageParser`1<Index> _parser;
    private UnknownFieldSet _unknownFields;
    public static int NameFieldNumber;
    private string name_;
    public static int ParamsFieldNumber;
    private static Codec<string, ByteString> _map_params_codec;
    private MapField`2<string, ByteString> params_;
    public static int PlanParamsFieldNumber;
    private static Codec<string, ByteString> _map_planParams_codec;
    private MapField`2<string, ByteString> planParams_;
    public static int SourceNameFieldNumber;
    private string sourceName_;
    public static int SourceParamsFieldNumber;
    private static Codec<string, ByteString> _map_sourceParams_codec;
    private MapField`2<string, ByteString> sourceParams_;
    public static int SourceTypeFieldNumber;
    private string sourceType_;
    public static int SourceUuidFieldNumber;
    private string sourceUuid_;
    public static int TypeFieldNumber;
    private string type_;
    public static int UuidFieldNumber;
    private string uuid_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<Index> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Name { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MapField`2<string, ByteString> Params { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MapField`2<string, ByteString> PlanParams { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string SourceName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasSourceName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MapField`2<string, ByteString> SourceParams { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string SourceType { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasSourceType { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string SourceUuid { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasSourceUuid { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Type { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Uuid { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Index(Index other);
    private static Index();
    public static MessageParser`1<Index> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual Index Clone();
    public string get_Name();
    public void set_Name(string value);
    public MapField`2<string, ByteString> get_Params();
    public MapField`2<string, ByteString> get_PlanParams();
    public string get_SourceName();
    public void set_SourceName(string value);
    public bool get_HasSourceName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearSourceName();
    public MapField`2<string, ByteString> get_SourceParams();
    public string get_SourceType();
    public void set_SourceType(string value);
    public bool get_HasSourceType();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearSourceType();
    public string get_SourceUuid();
    public void set_SourceUuid(string value);
    public bool get_HasSourceUuid();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearSourceUuid();
    public string get_Type();
    public void set_Type(string value);
    public string get_Uuid();
    public void set_Uuid(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(Index other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(Index other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Search.V1.ListIndexesRequest : object {
    private static MessageParser`1<ListIndexesRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<ListIndexesRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBucketName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScopeName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ListIndexesRequest(ListIndexesRequest other);
    private static ListIndexesRequest();
    public static MessageParser`1<ListIndexesRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual ListIndexesRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public bool get_HasBucketName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBucketName();
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public bool get_HasScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(ListIndexesRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(ListIndexesRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Search.V1.ListIndexesResponse : object {
    private static MessageParser`1<ListIndexesResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int IndexesFieldNumber;
    private static FieldCodec`1<Index> _repeated_indexes_codec;
    private RepeatedField`1<Index> indexes_;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<ListIndexesResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<Index> Indexes { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ListIndexesResponse(ListIndexesResponse other);
    private static ListIndexesResponse();
    public static MessageParser`1<ListIndexesResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual ListIndexesResponse Clone();
    public RepeatedField`1<Index> get_Indexes();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(ListIndexesResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(ListIndexesResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.Admin.Search.V1.PauseIndexIngestRequest : object {
    private static MessageParser`1<PauseIndexIngestRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int NameFieldNumber;
    private string name_;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<PauseIndexIngestRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Name { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBucketName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScopeName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public PauseIndexIngestRequest(PauseIndexIngestRequest other);
    private static PauseIndexIngestRequest();
    public static MessageParser`1<PauseIndexIngestRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual PauseIndexIngestRequest Clone();
    public string get_Name();
    public void set_Name(string value);
    public string get_BucketName();
    public void set_BucketName(string value);
    public bool get_HasBucketName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBucketName();
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public bool get_HasScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(PauseIndexIngestRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(PauseIndexIngestRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Search.V1.PauseIndexIngestResponse : object {
    private static MessageParser`1<PauseIndexIngestResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<PauseIndexIngestResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public PauseIndexIngestResponse(PauseIndexIngestResponse other);
    private static PauseIndexIngestResponse();
    public static MessageParser`1<PauseIndexIngestResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual PauseIndexIngestResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(PauseIndexIngestResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(PauseIndexIngestResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.Admin.Search.V1.ResumeIndexIngestRequest : object {
    private static MessageParser`1<ResumeIndexIngestRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int NameFieldNumber;
    private string name_;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<ResumeIndexIngestRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Name { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBucketName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScopeName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ResumeIndexIngestRequest(ResumeIndexIngestRequest other);
    private static ResumeIndexIngestRequest();
    public static MessageParser`1<ResumeIndexIngestRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual ResumeIndexIngestRequest Clone();
    public string get_Name();
    public void set_Name(string value);
    public string get_BucketName();
    public void set_BucketName(string value);
    public bool get_HasBucketName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBucketName();
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public bool get_HasScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(ResumeIndexIngestRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(ResumeIndexIngestRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Search.V1.ResumeIndexIngestResponse : object {
    private static MessageParser`1<ResumeIndexIngestResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<ResumeIndexIngestResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ResumeIndexIngestResponse(ResumeIndexIngestResponse other);
    private static ResumeIndexIngestResponse();
    public static MessageParser`1<ResumeIndexIngestResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual ResumeIndexIngestResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(ResumeIndexIngestResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(ResumeIndexIngestResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public static class Couchbase.Protostellar.Admin.Search.V1.SearchAdminService : object {
    private static string __ServiceName;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<GetIndexRequest> __Marshaller_couchbase_admin_search_v1_GetIndexRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<GetIndexResponse> __Marshaller_couchbase_admin_search_v1_GetIndexResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<ListIndexesRequest> __Marshaller_couchbase_admin_search_v1_ListIndexesRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<ListIndexesResponse> __Marshaller_couchbase_admin_search_v1_ListIndexesResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<CreateIndexRequest> __Marshaller_couchbase_admin_search_v1_CreateIndexRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<CreateIndexResponse> __Marshaller_couchbase_admin_search_v1_CreateIndexResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<UpdateIndexRequest> __Marshaller_couchbase_admin_search_v1_UpdateIndexRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<UpdateIndexResponse> __Marshaller_couchbase_admin_search_v1_UpdateIndexResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<DeleteIndexRequest> __Marshaller_couchbase_admin_search_v1_DeleteIndexRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<DeleteIndexResponse> __Marshaller_couchbase_admin_search_v1_DeleteIndexResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<AnalyzeDocumentRequest> __Marshaller_couchbase_admin_search_v1_AnalyzeDocumentRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<AnalyzeDocumentResponse> __Marshaller_couchbase_admin_search_v1_AnalyzeDocumentResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<GetIndexedDocumentsCountRequest> __Marshaller_couchbase_admin_search_v1_GetIndexedDocumentsCountRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<GetIndexedDocumentsCountResponse> __Marshaller_couchbase_admin_search_v1_GetIndexedDocumentsCountResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<PauseIndexIngestRequest> __Marshaller_couchbase_admin_search_v1_PauseIndexIngestRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<PauseIndexIngestResponse> __Marshaller_couchbase_admin_search_v1_PauseIndexIngestResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<ResumeIndexIngestRequest> __Marshaller_couchbase_admin_search_v1_ResumeIndexIngestRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<ResumeIndexIngestResponse> __Marshaller_couchbase_admin_search_v1_ResumeIndexIngestResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<AllowIndexQueryingRequest> __Marshaller_couchbase_admin_search_v1_AllowIndexQueryingRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<AllowIndexQueryingResponse> __Marshaller_couchbase_admin_search_v1_AllowIndexQueryingResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<DisallowIndexQueryingRequest> __Marshaller_couchbase_admin_search_v1_DisallowIndexQueryingRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<DisallowIndexQueryingResponse> __Marshaller_couchbase_admin_search_v1_DisallowIndexQueryingResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<FreezeIndexPlanRequest> __Marshaller_couchbase_admin_search_v1_FreezeIndexPlanRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<FreezeIndexPlanResponse> __Marshaller_couchbase_admin_search_v1_FreezeIndexPlanResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<UnfreezeIndexPlanRequest> __Marshaller_couchbase_admin_search_v1_UnfreezeIndexPlanRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<UnfreezeIndexPlanResponse> __Marshaller_couchbase_admin_search_v1_UnfreezeIndexPlanResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<GetIndexRequest, GetIndexResponse> __Method_GetIndex;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<ListIndexesRequest, ListIndexesResponse> __Method_ListIndexes;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<CreateIndexRequest, CreateIndexResponse> __Method_CreateIndex;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<UpdateIndexRequest, UpdateIndexResponse> __Method_UpdateIndex;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<DeleteIndexRequest, DeleteIndexResponse> __Method_DeleteIndex;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<AnalyzeDocumentRequest, AnalyzeDocumentResponse> __Method_AnalyzeDocument;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<GetIndexedDocumentsCountRequest, GetIndexedDocumentsCountResponse> __Method_GetIndexedDocumentsCount;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<PauseIndexIngestRequest, PauseIndexIngestResponse> __Method_PauseIndexIngest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<ResumeIndexIngestRequest, ResumeIndexIngestResponse> __Method_ResumeIndexIngest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<AllowIndexQueryingRequest, AllowIndexQueryingResponse> __Method_AllowIndexQuerying;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<DisallowIndexQueryingRequest, DisallowIndexQueryingResponse> __Method_DisallowIndexQuerying;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<FreezeIndexPlanRequest, FreezeIndexPlanResponse> __Method_FreezeIndexPlan;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<UnfreezeIndexPlanRequest, UnfreezeIndexPlanResponse> __Method_UnfreezeIndexPlan;
    public static ServiceDescriptor Descriptor { get; }
    private static SearchAdminService();
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static void __Helper_SerializeMessage(IMessage message, SerializationContext context);
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static T __Helper_DeserializeMessage(DeserializationContext context, MessageParser`1<T> parser);
    public static ServiceDescriptor get_Descriptor();
}
public static class Couchbase.Protostellar.Admin.Search.V1.SearchReflection : object {
    private static FileDescriptor descriptor;
    public static FileDescriptor Descriptor { get; }
    private static SearchReflection();
    public static FileDescriptor get_Descriptor();
}
public class Couchbase.Protostellar.Admin.Search.V1.UnfreezeIndexPlanRequest : object {
    private static MessageParser`1<UnfreezeIndexPlanRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int NameFieldNumber;
    private string name_;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<UnfreezeIndexPlanRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Name { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBucketName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScopeName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UnfreezeIndexPlanRequest(UnfreezeIndexPlanRequest other);
    private static UnfreezeIndexPlanRequest();
    public static MessageParser`1<UnfreezeIndexPlanRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual UnfreezeIndexPlanRequest Clone();
    public string get_Name();
    public void set_Name(string value);
    public string get_BucketName();
    public void set_BucketName(string value);
    public bool get_HasBucketName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBucketName();
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public bool get_HasScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(UnfreezeIndexPlanRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(UnfreezeIndexPlanRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Search.V1.UnfreezeIndexPlanResponse : object {
    private static MessageParser`1<UnfreezeIndexPlanResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<UnfreezeIndexPlanResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UnfreezeIndexPlanResponse(UnfreezeIndexPlanResponse other);
    private static UnfreezeIndexPlanResponse();
    public static MessageParser`1<UnfreezeIndexPlanResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual UnfreezeIndexPlanResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(UnfreezeIndexPlanResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(UnfreezeIndexPlanResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.Admin.Search.V1.UpdateIndexRequest : object {
    private static MessageParser`1<UpdateIndexRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int IndexFieldNumber;
    private Index index_;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<UpdateIndexRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Index Index { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBucketName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScopeName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UpdateIndexRequest(UpdateIndexRequest other);
    private static UpdateIndexRequest();
    public static MessageParser`1<UpdateIndexRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual UpdateIndexRequest Clone();
    public Index get_Index();
    public void set_Index(Index value);
    public string get_BucketName();
    public void set_BucketName(string value);
    public bool get_HasBucketName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBucketName();
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public bool get_HasScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(UpdateIndexRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(UpdateIndexRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Admin.Search.V1.UpdateIndexResponse : object {
    private static MessageParser`1<UpdateIndexResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<UpdateIndexResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UpdateIndexResponse(UpdateIndexResponse other);
    private static UpdateIndexResponse();
    public static MessageParser`1<UpdateIndexResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual UpdateIndexResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(UpdateIndexResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(UpdateIndexResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.Analytics.V1.AnalyticsQueryRequest : object {
    private static MessageParser`1<AnalyticsQueryRequest> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int StatementFieldNumber;
    private string statement_;
    public static int ReadOnlyFieldNumber;
    private bool readOnly_;
    public static int ClientContextIdFieldNumber;
    private string clientContextId_;
    public static int PriorityFieldNumber;
    private bool priority_;
    public static int ScanConsistencyFieldNumber;
    private ScanConsistency scanConsistency_;
    public static int PositionalParametersFieldNumber;
    private static FieldCodec`1<ByteString> _repeated_positionalParameters_codec;
    private RepeatedField`1<ByteString> positionalParameters_;
    public static int NamedParametersFieldNumber;
    private static Codec<string, ByteString> _map_namedParameters_codec;
    private MapField`2<string, ByteString> namedParameters_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<AnalyticsQueryRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBucketName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScopeName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Statement { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool ReadOnly { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasReadOnly { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ClientContextId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasClientContextId { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool Priority { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasPriority { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ScanConsistency ScanConsistency { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScanConsistency { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<ByteString> PositionalParameters { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MapField`2<string, ByteString> NamedParameters { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public AnalyticsQueryRequest(AnalyticsQueryRequest other);
    private static AnalyticsQueryRequest();
    public static MessageParser`1<AnalyticsQueryRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual AnalyticsQueryRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public bool get_HasBucketName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBucketName();
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public bool get_HasScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScopeName();
    public string get_Statement();
    public void set_Statement(string value);
    public bool get_ReadOnly();
    public void set_ReadOnly(bool value);
    public bool get_HasReadOnly();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearReadOnly();
    public string get_ClientContextId();
    public void set_ClientContextId(string value);
    public bool get_HasClientContextId();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearClientContextId();
    public bool get_Priority();
    public void set_Priority(bool value);
    public bool get_HasPriority();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearPriority();
    public ScanConsistency get_ScanConsistency();
    public void set_ScanConsistency(ScanConsistency value);
    public bool get_HasScanConsistency();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScanConsistency();
    public RepeatedField`1<ByteString> get_PositionalParameters();
    public MapField`2<string, ByteString> get_NamedParameters();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(AnalyticsQueryRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(AnalyticsQueryRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Analytics.V1.AnalyticsQueryResponse : object {
    private static MessageParser`1<AnalyticsQueryResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int RowsFieldNumber;
    private static FieldCodec`1<ByteString> _repeated_rows_codec;
    private RepeatedField`1<ByteString> rows_;
    public static int MetaDataFieldNumber;
    private MetaData metaData_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<AnalyticsQueryResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<ByteString> Rows { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MetaData MetaData { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public AnalyticsQueryResponse(AnalyticsQueryResponse other);
    private static AnalyticsQueryResponse();
    public static MessageParser`1<AnalyticsQueryResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual AnalyticsQueryResponse Clone();
    public RepeatedField`1<ByteString> get_Rows();
    public MetaData get_MetaData();
    public void set_MetaData(MetaData value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(AnalyticsQueryResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(AnalyticsQueryResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public static class Couchbase.Protostellar.Analytics.V1.AnalyticsReflection : object {
    private static FileDescriptor descriptor;
    public static FileDescriptor Descriptor { get; }
    private static AnalyticsReflection();
    public static FileDescriptor get_Descriptor();
}
public static class Couchbase.Protostellar.Analytics.V1.AnalyticsService : object {
    private static string __ServiceName;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<AnalyticsQueryRequest> __Marshaller_couchbase_analytics_v1_AnalyticsQueryRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<AnalyticsQueryResponse> __Marshaller_couchbase_analytics_v1_AnalyticsQueryResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<AnalyticsQueryRequest, AnalyticsQueryResponse> __Method_AnalyticsQuery;
    public static ServiceDescriptor Descriptor { get; }
    private static AnalyticsService();
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static void __Helper_SerializeMessage(IMessage message, SerializationContext context);
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static T __Helper_DeserializeMessage(DeserializationContext context, MessageParser`1<T> parser);
    public static ServiceDescriptor get_Descriptor();
}
public class Couchbase.Protostellar.Internal.Hooks.V1.AddHooksRequest : object {
    private static MessageParser`1<AddHooksRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int HooksContextIdFieldNumber;
    private string hooksContextId_;
    public static int HooksFieldNumber;
    private static FieldCodec`1<Hook> _repeated_hooks_codec;
    private RepeatedField`1<Hook> hooks_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<AddHooksRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string HooksContextId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<Hook> Hooks { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public AddHooksRequest(AddHooksRequest other);
    private static AddHooksRequest();
    public static MessageParser`1<AddHooksRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual AddHooksRequest Clone();
    public string get_HooksContextId();
    public void set_HooksContextId(string value);
    public RepeatedField`1<Hook> get_Hooks();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(AddHooksRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(AddHooksRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Internal.Hooks.V1.AddHooksResponse : object {
    private static MessageParser`1<AddHooksResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<AddHooksResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public AddHooksResponse(AddHooksResponse other);
    private static AddHooksResponse();
    public static MessageParser`1<AddHooksResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual AddHooksResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(AddHooksResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(AddHooksResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public enum Couchbase.Protostellar.Internal.Hooks.V1.ComparisonOperator : Enum {
    public int value__;
    [OriginalNameAttribute("COMPARISON_OPERATOR_EQUAL")]
public static ComparisonOperator Equal;
    [OriginalNameAttribute("COMPARISON_OPERATOR_NOT_EQUAL")]
public static ComparisonOperator NotEqual;
    [OriginalNameAttribute("COMPARISON_OPERATOR_GREATER_THAN")]
public static ComparisonOperator GreaterThan;
    [OriginalNameAttribute("COMPARISON_OPERATOR_GREATER_THAN_OR_EQUAL")]
public static ComparisonOperator GreaterThanOrEqual;
    [OriginalNameAttribute("COMPARISON_OPERATOR_LESS_THAN")]
public static ComparisonOperator LessThan;
    [OriginalNameAttribute("COMPARISON_OPERATOR_LESS_THAN_OR_EQUAL")]
public static ComparisonOperator LessThanOrEqual;
}
public class Couchbase.Protostellar.Internal.Hooks.V1.CreateHooksContextRequest : object {
    private static MessageParser`1<CreateHooksContextRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int IdFieldNumber;
    private string id_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<CreateHooksContextRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Id { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public CreateHooksContextRequest(CreateHooksContextRequest other);
    private static CreateHooksContextRequest();
    public static MessageParser`1<CreateHooksContextRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual CreateHooksContextRequest Clone();
    public string get_Id();
    public void set_Id(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(CreateHooksContextRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CreateHooksContextRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Internal.Hooks.V1.CreateHooksContextResponse : object {
    private static MessageParser`1<CreateHooksContextResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<CreateHooksContextResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public CreateHooksContextResponse(CreateHooksContextResponse other);
    private static CreateHooksContextResponse();
    public static MessageParser`1<CreateHooksContextResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual CreateHooksContextResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(CreateHooksContextResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CreateHooksContextResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Internal.Hooks.V1.DestroyHooksContextRequest : object {
    private static MessageParser`1<DestroyHooksContextRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int IdFieldNumber;
    private string id_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DestroyHooksContextRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Id { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DestroyHooksContextRequest(DestroyHooksContextRequest other);
    private static DestroyHooksContextRequest();
    public static MessageParser`1<DestroyHooksContextRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DestroyHooksContextRequest Clone();
    public string get_Id();
    public void set_Id(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DestroyHooksContextRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DestroyHooksContextRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Internal.Hooks.V1.DestroyHooksContextResponse : object {
    private static MessageParser`1<DestroyHooksContextResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DestroyHooksContextResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DestroyHooksContextResponse(DestroyHooksContextResponse other);
    private static DestroyHooksContextResponse();
    public static MessageParser`1<DestroyHooksContextResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DestroyHooksContextResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DestroyHooksContextResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DestroyHooksContextResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Internal.Hooks.V1.Hook : object {
    private static MessageParser`1<Hook> _parser;
    private UnknownFieldSet _unknownFields;
    public static int NameFieldNumber;
    private string name_;
    public static int DescriptionFieldNumber;
    private string description_;
    public static int TargetMethodFieldNumber;
    private string targetMethod_;
    public static int ActionsFieldNumber;
    private static FieldCodec`1<HookAction> _repeated_actions_codec;
    private RepeatedField`1<HookAction> actions_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<Hook> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Name { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Description { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string TargetMethod { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<HookAction> Actions { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Hook(Hook other);
    private static Hook();
    public static MessageParser`1<Hook> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual Hook Clone();
    public string get_Name();
    public void set_Name(string value);
    public string get_Description();
    public void set_Description(string value);
    public string get_TargetMethod();
    public void set_TargetMethod(string value);
    public RepeatedField`1<HookAction> get_Actions();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(Hook other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(Hook other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Internal.Hooks.V1.HookAction : object {
    private static MessageParser`1<HookAction> _parser;
    private UnknownFieldSet _unknownFields;
    public static int IfFieldNumber;
    public static int CounterFieldNumber;
    public static int WaitOnBarrierFieldNumber;
    public static int SignalBarrierFieldNumber;
    public static int ReturnResponseFieldNumber;
    public static int ReturnErrorFieldNumber;
    public static int ExecuteFieldNumber;
    private object action_;
    private ActionOneofCase actionCase_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<HookAction> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public If If { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Counter Counter { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public WaitOnBarrier WaitOnBarrier { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public SignalBarrier SignalBarrier { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ReturnResponse ReturnResponse { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ReturnError ReturnError { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Execute Execute { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ActionOneofCase ActionCase { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public HookAction(HookAction other);
    private static HookAction();
    public static MessageParser`1<HookAction> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual HookAction Clone();
    public If get_If();
    public void set_If(If value);
    public Counter get_Counter();
    public void set_Counter(Counter value);
    public WaitOnBarrier get_WaitOnBarrier();
    public void set_WaitOnBarrier(WaitOnBarrier value);
    public SignalBarrier get_SignalBarrier();
    public void set_SignalBarrier(SignalBarrier value);
    public ReturnResponse get_ReturnResponse();
    public void set_ReturnResponse(ReturnResponse value);
    public ReturnError get_ReturnError();
    public void set_ReturnError(ReturnError value);
    public Execute get_Execute();
    public void set_Execute(Execute value);
    public ActionOneofCase get_ActionCase();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearAction();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(HookAction other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(HookAction other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Internal.Hooks.V1.HookCondition : object {
    private static MessageParser`1<HookCondition> _parser;
    private UnknownFieldSet _unknownFields;
    public static int LeftFieldNumber;
    private ValueRef left_;
    public static int OpFieldNumber;
    private ComparisonOperator op_;
    public static int RightFieldNumber;
    private ValueRef right_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<HookCondition> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ValueRef Left { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ComparisonOperator Op { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ValueRef Right { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public HookCondition(HookCondition other);
    private static HookCondition();
    public static MessageParser`1<HookCondition> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual HookCondition Clone();
    public ValueRef get_Left();
    public void set_Left(ValueRef value);
    public ComparisonOperator get_Op();
    public void set_Op(ComparisonOperator value);
    public ValueRef get_Right();
    public void set_Right(ValueRef value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(HookCondition other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(HookCondition other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public static class Couchbase.Protostellar.Internal.Hooks.V1.HooksReflection : object {
    private static FileDescriptor descriptor;
    public static FileDescriptor Descriptor { get; }
    private static HooksReflection();
    public static FileDescriptor get_Descriptor();
}
public static class Couchbase.Protostellar.Internal.Hooks.V1.HooksService : object {
    private static string __ServiceName;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<CreateHooksContextRequest> __Marshaller_couchbase_internal_hooks_v1_CreateHooksContextRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<CreateHooksContextResponse> __Marshaller_couchbase_internal_hooks_v1_CreateHooksContextResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<DestroyHooksContextRequest> __Marshaller_couchbase_internal_hooks_v1_DestroyHooksContextRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<DestroyHooksContextResponse> __Marshaller_couchbase_internal_hooks_v1_DestroyHooksContextResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<AddHooksRequest> __Marshaller_couchbase_internal_hooks_v1_AddHooksRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<AddHooksResponse> __Marshaller_couchbase_internal_hooks_v1_AddHooksResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<WatchBarrierRequest> __Marshaller_couchbase_internal_hooks_v1_WatchBarrierRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<WatchBarrierResponse> __Marshaller_couchbase_internal_hooks_v1_WatchBarrierResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<SignalBarrierRequest> __Marshaller_couchbase_internal_hooks_v1_SignalBarrierRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<SignalBarrierResponse> __Marshaller_couchbase_internal_hooks_v1_SignalBarrierResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<CreateHooksContextRequest, CreateHooksContextResponse> __Method_CreateHooksContext;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<DestroyHooksContextRequest, DestroyHooksContextResponse> __Method_DestroyHooksContext;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<AddHooksRequest, AddHooksResponse> __Method_AddHooks;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<WatchBarrierRequest, WatchBarrierResponse> __Method_WatchBarrier;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<SignalBarrierRequest, SignalBarrierResponse> __Method_SignalBarrier;
    public static ServiceDescriptor Descriptor { get; }
    private static HooksService();
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static void __Helper_SerializeMessage(IMessage message, SerializationContext context);
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static T __Helper_DeserializeMessage(DeserializationContext context, MessageParser`1<T> parser);
    public static ServiceDescriptor get_Descriptor();
}
public class Couchbase.Protostellar.Internal.Hooks.V1.SignalBarrierRequest : object {
    private static MessageParser`1<SignalBarrierRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int HooksContextIdFieldNumber;
    private string hooksContextId_;
    public static int BarrierIdFieldNumber;
    private string barrierId_;
    public static int WaitIdFieldNumber;
    private string waitId_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<SignalBarrierRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string HooksContextId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BarrierId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string WaitId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasWaitId { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public SignalBarrierRequest(SignalBarrierRequest other);
    private static SignalBarrierRequest();
    public static MessageParser`1<SignalBarrierRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual SignalBarrierRequest Clone();
    public string get_HooksContextId();
    public void set_HooksContextId(string value);
    public string get_BarrierId();
    public void set_BarrierId(string value);
    public string get_WaitId();
    public void set_WaitId(string value);
    public bool get_HasWaitId();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearWaitId();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(SignalBarrierRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(SignalBarrierRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Internal.Hooks.V1.SignalBarrierResponse : object {
    private static MessageParser`1<SignalBarrierResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<SignalBarrierResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public SignalBarrierResponse(SignalBarrierResponse other);
    private static SignalBarrierResponse();
    public static MessageParser`1<SignalBarrierResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual SignalBarrierResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(SignalBarrierResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(SignalBarrierResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Internal.Hooks.V1.ValueRef : object {
    private static MessageParser`1<ValueRef> _parser;
    private UnknownFieldSet _unknownFields;
    public static int RequestFieldFieldNumber;
    public static int CounterValueFieldNumber;
    public static int JsonValueFieldNumber;
    private object value_;
    private ValueOneofCase valueCase_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<ValueRef> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string RequestField { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CounterValue { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ByteString JsonValue { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ValueOneofCase ValueCase { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ValueRef(ValueRef other);
    private static ValueRef();
    public static MessageParser`1<ValueRef> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual ValueRef Clone();
    public string get_RequestField();
    public void set_RequestField(string value);
    public string get_CounterValue();
    public void set_CounterValue(string value);
    public ByteString get_JsonValue();
    public void set_JsonValue(ByteString value);
    public ValueOneofCase get_ValueCase();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearValue();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(ValueRef other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(ValueRef other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Internal.Hooks.V1.WatchBarrierRequest : object {
    private static MessageParser`1<WatchBarrierRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int HooksContextIdFieldNumber;
    private string hooksContextId_;
    public static int BarrierIdFieldNumber;
    private string barrierId_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<WatchBarrierRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string HooksContextId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BarrierId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public WatchBarrierRequest(WatchBarrierRequest other);
    private static WatchBarrierRequest();
    public static MessageParser`1<WatchBarrierRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual WatchBarrierRequest Clone();
    public string get_HooksContextId();
    public void set_HooksContextId(string value);
    public string get_BarrierId();
    public void set_BarrierId(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(WatchBarrierRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(WatchBarrierRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Internal.Hooks.V1.WatchBarrierResponse : object {
    private static MessageParser`1<WatchBarrierResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int WaitIdFieldNumber;
    private string waitId_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<WatchBarrierResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string WaitId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public WatchBarrierResponse(WatchBarrierResponse other);
    private static WatchBarrierResponse();
    public static MessageParser`1<WatchBarrierResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual WatchBarrierResponse Clone();
    public string get_WaitId();
    public void set_WaitId(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(WatchBarrierResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(WatchBarrierResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.KV.V1.AppendRequest : object {
    private static MessageParser`1<AppendRequest> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int KeyFieldNumber;
    private string key_;
    public static int ContentFieldNumber;
    private ByteString content_;
    public static int CasFieldNumber;
    private ulong cas_;
    public static int DurabilityLevelFieldNumber;
    private DurabilityLevel durabilityLevel_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<AppendRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Key { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ByteString Content { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasCas { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DurabilityLevel DurabilityLevel { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasDurabilityLevel { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public AppendRequest(AppendRequest other);
    private static AppendRequest();
    public static MessageParser`1<AppendRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual AppendRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public string get_CollectionName();
    public void set_CollectionName(string value);
    public string get_Key();
    public void set_Key(string value);
    public ByteString get_Content();
    public void set_Content(ByteString value);
    public ulong get_Cas();
    public void set_Cas(ulong value);
    public bool get_HasCas();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearCas();
    public DurabilityLevel get_DurabilityLevel();
    public void set_DurabilityLevel(DurabilityLevel value);
    public bool get_HasDurabilityLevel();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearDurabilityLevel();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(AppendRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(AppendRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.KV.V1.AppendResponse : object {
    private static MessageParser`1<AppendResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int CasFieldNumber;
    private ulong cas_;
    public static int MutationTokenFieldNumber;
    private MutationToken mutationToken_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<AppendResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MutationToken MutationToken { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public AppendResponse(AppendResponse other);
    private static AppendResponse();
    public static MessageParser`1<AppendResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual AppendResponse Clone();
    public ulong get_Cas();
    public void set_Cas(ulong value);
    public MutationToken get_MutationToken();
    public void set_MutationToken(MutationToken value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(AppendResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(AppendResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.KV.V1.DecrementRequest : object {
    private static MessageParser`1<DecrementRequest> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int KeyFieldNumber;
    private string key_;
    public static int DeltaFieldNumber;
    private ulong delta_;
    public static int ExpiryTimeFieldNumber;
    public static int ExpirySecsFieldNumber;
    public static int InitialFieldNumber;
    private long initial_;
    public static int DurabilityLevelFieldNumber;
    private DurabilityLevel durabilityLevel_;
    private object expiry_;
    private ExpiryOneofCase expiryCase_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DecrementRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Key { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Delta { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Timestamp ExpiryTime { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 ExpirySecs { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public long Initial { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasInitial { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DurabilityLevel DurabilityLevel { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasDurabilityLevel { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ExpiryOneofCase ExpiryCase { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DecrementRequest(DecrementRequest other);
    private static DecrementRequest();
    public static MessageParser`1<DecrementRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DecrementRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public string get_CollectionName();
    public void set_CollectionName(string value);
    public string get_Key();
    public void set_Key(string value);
    public ulong get_Delta();
    public void set_Delta(ulong value);
    public Timestamp get_ExpiryTime();
    public void set_ExpiryTime(Timestamp value);
    public UInt32 get_ExpirySecs();
    public void set_ExpirySecs(UInt32 value);
    public long get_Initial();
    public void set_Initial(long value);
    public bool get_HasInitial();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearInitial();
    public DurabilityLevel get_DurabilityLevel();
    public void set_DurabilityLevel(DurabilityLevel value);
    public bool get_HasDurabilityLevel();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearDurabilityLevel();
    public ExpiryOneofCase get_ExpiryCase();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearExpiry();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DecrementRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DecrementRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.KV.V1.DecrementResponse : object {
    private static MessageParser`1<DecrementResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int CasFieldNumber;
    private ulong cas_;
    public static int ContentFieldNumber;
    private long content_;
    public static int MutationTokenFieldNumber;
    private MutationToken mutationToken_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DecrementResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public long Content { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MutationToken MutationToken { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DecrementResponse(DecrementResponse other);
    private static DecrementResponse();
    public static MessageParser`1<DecrementResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DecrementResponse Clone();
    public ulong get_Cas();
    public void set_Cas(ulong value);
    public long get_Content();
    public void set_Content(long value);
    public MutationToken get_MutationToken();
    public void set_MutationToken(MutationToken value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DecrementResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DecrementResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public enum Couchbase.Protostellar.KV.V1.DurabilityLevel : Enum {
    public int value__;
    [OriginalNameAttribute("DURABILITY_LEVEL_MAJORITY")]
public static DurabilityLevel Majority;
    [OriginalNameAttribute("DURABILITY_LEVEL_MAJORITY_AND_PERSIST_TO_ACTIVE")]
public static DurabilityLevel MajorityAndPersistToActive;
    [OriginalNameAttribute("DURABILITY_LEVEL_PERSIST_TO_MAJORITY")]
public static DurabilityLevel PersistToMajority;
}
public class Couchbase.Protostellar.KV.V1.ExistsRequest : object {
    private static MessageParser`1<ExistsRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int KeyFieldNumber;
    private string key_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<ExistsRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Key { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ExistsRequest(ExistsRequest other);
    private static ExistsRequest();
    public static MessageParser`1<ExistsRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual ExistsRequest Clone();
    public sealed virtual string get_BucketName();
    public sealed virtual void set_BucketName(string value);
    public sealed virtual string get_ScopeName();
    public sealed virtual void set_ScopeName(string value);
    public sealed virtual string get_CollectionName();
    public sealed virtual void set_CollectionName(string value);
    public sealed virtual string get_Key();
    public sealed virtual void set_Key(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(ExistsRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(ExistsRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.KV.V1.ExistsResponse : object {
    private static MessageParser`1<ExistsResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int ResultFieldNumber;
    private bool result_;
    public static int CasFieldNumber;
    private ulong cas_;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<ExistsResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool Result { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ExistsResponse(ExistsResponse other);
    private static ExistsResponse();
    public static MessageParser`1<ExistsResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual ExistsResponse Clone();
    public bool get_Result();
    public void set_Result(bool value);
    public ulong get_Cas();
    public void set_Cas(ulong value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(ExistsResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(ExistsResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.KV.V1.GetAllReplicasRequest : object {
    private static MessageParser`1<GetAllReplicasRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int KeyFieldNumber;
    private string key_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<GetAllReplicasRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Key { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public GetAllReplicasRequest(GetAllReplicasRequest other);
    private static GetAllReplicasRequest();
    public static MessageParser`1<GetAllReplicasRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual GetAllReplicasRequest Clone();
    public sealed virtual string get_BucketName();
    public sealed virtual void set_BucketName(string value);
    public sealed virtual string get_ScopeName();
    public sealed virtual void set_ScopeName(string value);
    public sealed virtual string get_CollectionName();
    public sealed virtual void set_CollectionName(string value);
    public sealed virtual string get_Key();
    public sealed virtual void set_Key(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(GetAllReplicasRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(GetAllReplicasRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.KV.V1.GetAllReplicasResponse : object {
    private static MessageParser`1<GetAllReplicasResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int IsReplicaFieldNumber;
    private bool isReplica_;
    public static int ContentFieldNumber;
    private ByteString content_;
    public static int ContentFlagsFieldNumber;
    private UInt32 contentFlags_;
    public static int CasFieldNumber;
    private ulong cas_;
    [CompilerGeneratedAttribute]
private bool <IsActive>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<GetAllReplicasResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool IsReplica { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ByteString Content { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 ContentFlags { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    public bool IsActive { get; public set; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public GetAllReplicasResponse(GetAllReplicasResponse other);
    private static GetAllReplicasResponse();
    public static MessageParser`1<GetAllReplicasResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual GetAllReplicasResponse Clone();
    public bool get_IsReplica();
    public void set_IsReplica(bool value);
    public sealed virtual ByteString get_Content();
    public void set_Content(ByteString value);
    public sealed virtual UInt32 get_ContentFlags();
    public void set_ContentFlags(UInt32 value);
    public sealed virtual ulong get_Cas();
    public void set_Cas(ulong value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(GetAllReplicasResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(GetAllReplicasResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsActive();
    [CompilerGeneratedAttribute]
public void set_IsActive(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.KV.V1.GetAndLockRequest : object {
    private static MessageParser`1<GetAndLockRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int KeyFieldNumber;
    private string key_;
    public static int LockTimeFieldNumber;
    private UInt32 lockTime_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<GetAndLockRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Key { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 LockTime { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public GetAndLockRequest(GetAndLockRequest other);
    private static GetAndLockRequest();
    public static MessageParser`1<GetAndLockRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual GetAndLockRequest Clone();
    public sealed virtual string get_BucketName();
    public sealed virtual void set_BucketName(string value);
    public sealed virtual string get_ScopeName();
    public sealed virtual void set_ScopeName(string value);
    public sealed virtual string get_CollectionName();
    public sealed virtual void set_CollectionName(string value);
    public sealed virtual string get_Key();
    public sealed virtual void set_Key(string value);
    public UInt32 get_LockTime();
    public void set_LockTime(UInt32 value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(GetAndLockRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(GetAndLockRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.KV.V1.GetAndLockResponse : object {
    private static MessageParser`1<GetAndLockResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int ContentFieldNumber;
    private ByteString content_;
    public static int ContentFlagsFieldNumber;
    private UInt32 contentFlags_;
    public static int CasFieldNumber;
    private ulong cas_;
    public static int ExpiryFieldNumber;
    private Timestamp expiry_;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<GetAndLockResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ByteString Content { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 ContentFlags { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Timestamp Expiry { get; public set; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public GetAndLockResponse(GetAndLockResponse other);
    private static GetAndLockResponse();
    public static MessageParser`1<GetAndLockResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual GetAndLockResponse Clone();
    public sealed virtual ByteString get_Content();
    public void set_Content(ByteString value);
    public sealed virtual UInt32 get_ContentFlags();
    public void set_ContentFlags(UInt32 value);
    public sealed virtual ulong get_Cas();
    public void set_Cas(ulong value);
    public sealed virtual Timestamp get_Expiry();
    public void set_Expiry(Timestamp value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(GetAndLockResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(GetAndLockResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.KV.V1.GetAndTouchRequest : object {
    private static MessageParser`1<GetAndTouchRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int KeyFieldNumber;
    private string key_;
    public static int ExpiryTimeFieldNumber;
    public static int ExpirySecsFieldNumber;
    private object expiry_;
    private ExpiryOneofCase expiryCase_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<GetAndTouchRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Key { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Timestamp ExpiryTime { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 ExpirySecs { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ExpiryOneofCase ExpiryCase { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public GetAndTouchRequest(GetAndTouchRequest other);
    private static GetAndTouchRequest();
    public static MessageParser`1<GetAndTouchRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual GetAndTouchRequest Clone();
    public sealed virtual string get_BucketName();
    public sealed virtual void set_BucketName(string value);
    public sealed virtual string get_ScopeName();
    public sealed virtual void set_ScopeName(string value);
    public sealed virtual string get_CollectionName();
    public sealed virtual void set_CollectionName(string value);
    public sealed virtual string get_Key();
    public sealed virtual void set_Key(string value);
    public Timestamp get_ExpiryTime();
    public void set_ExpiryTime(Timestamp value);
    public UInt32 get_ExpirySecs();
    public void set_ExpirySecs(UInt32 value);
    public ExpiryOneofCase get_ExpiryCase();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearExpiry();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(GetAndTouchRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(GetAndTouchRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.KV.V1.GetAndTouchResponse : object {
    private static MessageParser`1<GetAndTouchResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int ContentFieldNumber;
    private ByteString content_;
    public static int ContentFlagsFieldNumber;
    private UInt32 contentFlags_;
    public static int CasFieldNumber;
    private ulong cas_;
    public static int ExpiryFieldNumber;
    private Timestamp expiry_;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<GetAndTouchResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ByteString Content { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 ContentFlags { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Timestamp Expiry { get; public set; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public GetAndTouchResponse(GetAndTouchResponse other);
    private static GetAndTouchResponse();
    public static MessageParser`1<GetAndTouchResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual GetAndTouchResponse Clone();
    public sealed virtual ByteString get_Content();
    public void set_Content(ByteString value);
    public sealed virtual UInt32 get_ContentFlags();
    public void set_ContentFlags(UInt32 value);
    public sealed virtual ulong get_Cas();
    public void set_Cas(ulong value);
    public sealed virtual Timestamp get_Expiry();
    public void set_Expiry(Timestamp value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(GetAndTouchResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(GetAndTouchResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.KV.V1.GetRequest : object {
    private static MessageParser`1<GetRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int KeyFieldNumber;
    private string key_;
    public static int ProjectFieldNumber;
    private static FieldCodec`1<string> _repeated_project_codec;
    private RepeatedField`1<string> project_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<GetRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Key { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<string> Project { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public GetRequest(GetRequest other);
    private static GetRequest();
    public static MessageParser`1<GetRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual GetRequest Clone();
    public sealed virtual string get_BucketName();
    public sealed virtual void set_BucketName(string value);
    public sealed virtual string get_ScopeName();
    public sealed virtual void set_ScopeName(string value);
    public sealed virtual string get_CollectionName();
    public sealed virtual void set_CollectionName(string value);
    public sealed virtual string get_Key();
    public sealed virtual void set_Key(string value);
    public RepeatedField`1<string> get_Project();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(GetRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(GetRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.KV.V1.GetResponse : object {
    private static MessageParser`1<GetResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int ContentFieldNumber;
    private ByteString content_;
    public static int ContentFlagsFieldNumber;
    private UInt32 contentFlags_;
    public static int CasFieldNumber;
    private ulong cas_;
    public static int ExpiryFieldNumber;
    private Timestamp expiry_;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<GetResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ByteString Content { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 ContentFlags { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Timestamp Expiry { get; public set; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public GetResponse(GetResponse other);
    private static GetResponse();
    public static MessageParser`1<GetResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual GetResponse Clone();
    public sealed virtual ByteString get_Content();
    public void set_Content(ByteString value);
    public sealed virtual UInt32 get_ContentFlags();
    public void set_ContentFlags(UInt32 value);
    public sealed virtual ulong get_Cas();
    public void set_Cas(ulong value);
    public sealed virtual Timestamp get_Expiry();
    public void set_Expiry(Timestamp value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(GetResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(GetResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
internal interface Couchbase.Protostellar.KV.V1.ICasRequest {
    public ulong Cas { get; public set; }
    public abstract virtual ulong get_Cas();
    public abstract virtual void set_Cas(ulong value);
}
internal interface Couchbase.Protostellar.KV.V1.IContentRequest {
    public UInt32 ContentFlags { get; public set; }
    public ByteString Content { get; public set; }
    public DurabilityLevel DurabilityLevel { get; public set; }
    public Timestamp ExpiryTime { get; public set; }
    public UInt32 ExpirySecs { get; public set; }
    public abstract virtual UInt32 get_ContentFlags();
    public abstract virtual void set_ContentFlags(UInt32 value);
    public abstract virtual ByteString get_Content();
    public abstract virtual void set_Content(ByteString value);
    public abstract virtual DurabilityLevel get_DurabilityLevel();
    public abstract virtual void set_DurabilityLevel(DurabilityLevel value);
    public abstract virtual Timestamp get_ExpiryTime();
    public abstract virtual void set_ExpiryTime(Timestamp value);
    public abstract virtual UInt32 get_ExpirySecs();
    public abstract virtual void set_ExpirySecs(UInt32 value);
}
internal interface Couchbase.Protostellar.KV.V1.IKeySpec {
    public string Key { get; public set; }
    public string BucketName { get; public set; }
    public string ScopeName { get; public set; }
    public string CollectionName { get; public set; }
    public abstract virtual string get_Key();
    public abstract virtual void set_Key(string value);
    public abstract virtual string get_BucketName();
    public abstract virtual void set_BucketName(string value);
    public abstract virtual string get_ScopeName();
    public abstract virtual void set_ScopeName(string value);
    public abstract virtual string get_CollectionName();
    public abstract virtual void set_CollectionName(string value);
}
public class Couchbase.Protostellar.KV.V1.IncrementRequest : object {
    private static MessageParser`1<IncrementRequest> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int KeyFieldNumber;
    private string key_;
    public static int DeltaFieldNumber;
    private ulong delta_;
    public static int ExpiryTimeFieldNumber;
    public static int ExpirySecsFieldNumber;
    public static int InitialFieldNumber;
    private long initial_;
    public static int DurabilityLevelFieldNumber;
    private DurabilityLevel durabilityLevel_;
    private object expiry_;
    private ExpiryOneofCase expiryCase_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<IncrementRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Key { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Delta { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Timestamp ExpiryTime { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 ExpirySecs { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public long Initial { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasInitial { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DurabilityLevel DurabilityLevel { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasDurabilityLevel { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ExpiryOneofCase ExpiryCase { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public IncrementRequest(IncrementRequest other);
    private static IncrementRequest();
    public static MessageParser`1<IncrementRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual IncrementRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public string get_CollectionName();
    public void set_CollectionName(string value);
    public string get_Key();
    public void set_Key(string value);
    public ulong get_Delta();
    public void set_Delta(ulong value);
    public Timestamp get_ExpiryTime();
    public void set_ExpiryTime(Timestamp value);
    public UInt32 get_ExpirySecs();
    public void set_ExpirySecs(UInt32 value);
    public long get_Initial();
    public void set_Initial(long value);
    public bool get_HasInitial();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearInitial();
    public DurabilityLevel get_DurabilityLevel();
    public void set_DurabilityLevel(DurabilityLevel value);
    public bool get_HasDurabilityLevel();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearDurabilityLevel();
    public ExpiryOneofCase get_ExpiryCase();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearExpiry();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(IncrementRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(IncrementRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.KV.V1.IncrementResponse : object {
    private static MessageParser`1<IncrementResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int CasFieldNumber;
    private ulong cas_;
    public static int ContentFieldNumber;
    private long content_;
    public static int MutationTokenFieldNumber;
    private MutationToken mutationToken_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<IncrementResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public long Content { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MutationToken MutationToken { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public IncrementResponse(IncrementResponse other);
    private static IncrementResponse();
    public static MessageParser`1<IncrementResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual IncrementResponse Clone();
    public ulong get_Cas();
    public void set_Cas(ulong value);
    public long get_Content();
    public void set_Content(long value);
    public MutationToken get_MutationToken();
    public void set_MutationToken(MutationToken value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(IncrementResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(IncrementResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.KV.V1.InsertRequest : object {
    private static MessageParser`1<InsertRequest> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int KeyFieldNumber;
    private string key_;
    public static int ContentFieldNumber;
    private ByteString content_;
    public static int ContentFlagsFieldNumber;
    private UInt32 contentFlags_;
    public static int ExpiryTimeFieldNumber;
    public static int ExpirySecsFieldNumber;
    public static int DurabilityLevelFieldNumber;
    private DurabilityLevel durabilityLevel_;
    private object expiry_;
    private ExpiryOneofCase expiryCase_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<InsertRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Key { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ByteString Content { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 ContentFlags { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Timestamp ExpiryTime { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 ExpirySecs { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DurabilityLevel DurabilityLevel { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasDurabilityLevel { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ExpiryOneofCase ExpiryCase { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public InsertRequest(InsertRequest other);
    private static InsertRequest();
    public static MessageParser`1<InsertRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual InsertRequest Clone();
    public sealed virtual string get_BucketName();
    public sealed virtual void set_BucketName(string value);
    public sealed virtual string get_ScopeName();
    public sealed virtual void set_ScopeName(string value);
    public sealed virtual string get_CollectionName();
    public sealed virtual void set_CollectionName(string value);
    public sealed virtual string get_Key();
    public sealed virtual void set_Key(string value);
    public sealed virtual ByteString get_Content();
    public sealed virtual void set_Content(ByteString value);
    public sealed virtual UInt32 get_ContentFlags();
    public sealed virtual void set_ContentFlags(UInt32 value);
    public sealed virtual Timestamp get_ExpiryTime();
    public sealed virtual void set_ExpiryTime(Timestamp value);
    public sealed virtual UInt32 get_ExpirySecs();
    public sealed virtual void set_ExpirySecs(UInt32 value);
    public sealed virtual DurabilityLevel get_DurabilityLevel();
    public sealed virtual void set_DurabilityLevel(DurabilityLevel value);
    public bool get_HasDurabilityLevel();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearDurabilityLevel();
    public ExpiryOneofCase get_ExpiryCase();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearExpiry();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(InsertRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(InsertRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.KV.V1.InsertResponse : object {
    private static MessageParser`1<InsertResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int CasFieldNumber;
    private ulong cas_;
    public static int MutationTokenFieldNumber;
    private MutationToken mutationToken_;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<InsertResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MutationToken MutationToken { get; public set; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public InsertResponse(InsertResponse other);
    private static InsertResponse();
    public static MessageParser`1<InsertResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual InsertResponse Clone();
    public ulong get_Cas();
    public void set_Cas(ulong value);
    public MutationToken get_MutationToken();
    public void set_MutationToken(MutationToken value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(InsertResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(InsertResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public static class Couchbase.Protostellar.KV.V1.KvReflection : object {
    private static FileDescriptor descriptor;
    public static FileDescriptor Descriptor { get; }
    private static KvReflection();
    public static FileDescriptor get_Descriptor();
}
public static class Couchbase.Protostellar.KV.V1.KvService : object {
    private static string __ServiceName;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<GetRequest> __Marshaller_couchbase_kv_v1_GetRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<GetResponse> __Marshaller_couchbase_kv_v1_GetResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<GetAndTouchRequest> __Marshaller_couchbase_kv_v1_GetAndTouchRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<GetAndTouchResponse> __Marshaller_couchbase_kv_v1_GetAndTouchResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<GetAndLockRequest> __Marshaller_couchbase_kv_v1_GetAndLockRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<GetAndLockResponse> __Marshaller_couchbase_kv_v1_GetAndLockResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<UnlockRequest> __Marshaller_couchbase_kv_v1_UnlockRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<UnlockResponse> __Marshaller_couchbase_kv_v1_UnlockResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<TouchRequest> __Marshaller_couchbase_kv_v1_TouchRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<TouchResponse> __Marshaller_couchbase_kv_v1_TouchResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<ExistsRequest> __Marshaller_couchbase_kv_v1_ExistsRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<ExistsResponse> __Marshaller_couchbase_kv_v1_ExistsResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<InsertRequest> __Marshaller_couchbase_kv_v1_InsertRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<InsertResponse> __Marshaller_couchbase_kv_v1_InsertResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<UpsertRequest> __Marshaller_couchbase_kv_v1_UpsertRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<UpsertResponse> __Marshaller_couchbase_kv_v1_UpsertResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<ReplaceRequest> __Marshaller_couchbase_kv_v1_ReplaceRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<ReplaceResponse> __Marshaller_couchbase_kv_v1_ReplaceResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<RemoveRequest> __Marshaller_couchbase_kv_v1_RemoveRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<RemoveResponse> __Marshaller_couchbase_kv_v1_RemoveResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<IncrementRequest> __Marshaller_couchbase_kv_v1_IncrementRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<IncrementResponse> __Marshaller_couchbase_kv_v1_IncrementResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<DecrementRequest> __Marshaller_couchbase_kv_v1_DecrementRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<DecrementResponse> __Marshaller_couchbase_kv_v1_DecrementResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<AppendRequest> __Marshaller_couchbase_kv_v1_AppendRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<AppendResponse> __Marshaller_couchbase_kv_v1_AppendResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<PrependRequest> __Marshaller_couchbase_kv_v1_PrependRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<PrependResponse> __Marshaller_couchbase_kv_v1_PrependResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<LookupInRequest> __Marshaller_couchbase_kv_v1_LookupInRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<LookupInResponse> __Marshaller_couchbase_kv_v1_LookupInResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<MutateInRequest> __Marshaller_couchbase_kv_v1_MutateInRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<MutateInResponse> __Marshaller_couchbase_kv_v1_MutateInResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<GetAllReplicasRequest> __Marshaller_couchbase_kv_v1_GetAllReplicasRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<GetAllReplicasResponse> __Marshaller_couchbase_kv_v1_GetAllReplicasResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<GetRequest, GetResponse> __Method_Get;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<GetAndTouchRequest, GetAndTouchResponse> __Method_GetAndTouch;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<GetAndLockRequest, GetAndLockResponse> __Method_GetAndLock;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<UnlockRequest, UnlockResponse> __Method_Unlock;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<TouchRequest, TouchResponse> __Method_Touch;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<ExistsRequest, ExistsResponse> __Method_Exists;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<InsertRequest, InsertResponse> __Method_Insert;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<UpsertRequest, UpsertResponse> __Method_Upsert;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<ReplaceRequest, ReplaceResponse> __Method_Replace;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<RemoveRequest, RemoveResponse> __Method_Remove;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<IncrementRequest, IncrementResponse> __Method_Increment;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<DecrementRequest, DecrementResponse> __Method_Decrement;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<AppendRequest, AppendResponse> __Method_Append;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<PrependRequest, PrependResponse> __Method_Prepend;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<LookupInRequest, LookupInResponse> __Method_LookupIn;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<MutateInRequest, MutateInResponse> __Method_MutateIn;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<GetAllReplicasRequest, GetAllReplicasResponse> __Method_GetAllReplicas;
    public static ServiceDescriptor Descriptor { get; }
    private static KvService();
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static void __Helper_SerializeMessage(IMessage message, SerializationContext context);
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static T __Helper_DeserializeMessage(DeserializationContext context, MessageParser`1<T> parser);
    public static ServiceDescriptor get_Descriptor();
}
public class Couchbase.Protostellar.KV.V1.LegacyDurabilitySpec : object {
    private static MessageParser`1<LegacyDurabilitySpec> _parser;
    private UnknownFieldSet _unknownFields;
    public static int NumReplicatedFieldNumber;
    private UInt32 numReplicated_;
    public static int NumPersistedFieldNumber;
    private UInt32 numPersisted_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<LegacyDurabilitySpec> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 NumReplicated { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 NumPersisted { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public LegacyDurabilitySpec(LegacyDurabilitySpec other);
    private static LegacyDurabilitySpec();
    public static MessageParser`1<LegacyDurabilitySpec> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual LegacyDurabilitySpec Clone();
    public UInt32 get_NumReplicated();
    public void set_NumReplicated(UInt32 value);
    public UInt32 get_NumPersisted();
    public void set_NumPersisted(UInt32 value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(LegacyDurabilitySpec other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(LegacyDurabilitySpec other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.KV.V1.LookupInRequest : object {
    private static MessageParser`1<LookupInRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int KeyFieldNumber;
    private string key_;
    public static int SpecsFieldNumber;
    private static FieldCodec`1<Spec> _repeated_specs_codec;
    private RepeatedField`1<Spec> specs_;
    public static int FlagsFieldNumber;
    private Flags flags_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<LookupInRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Key { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<Spec> Specs { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Flags Flags { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public LookupInRequest(LookupInRequest other);
    private static LookupInRequest();
    public static MessageParser`1<LookupInRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual LookupInRequest Clone();
    public sealed virtual string get_BucketName();
    public sealed virtual void set_BucketName(string value);
    public sealed virtual string get_ScopeName();
    public sealed virtual void set_ScopeName(string value);
    public sealed virtual string get_CollectionName();
    public sealed virtual void set_CollectionName(string value);
    public sealed virtual string get_Key();
    public sealed virtual void set_Key(string value);
    public RepeatedField`1<Spec> get_Specs();
    public Flags get_Flags();
    public void set_Flags(Flags value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(LookupInRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(LookupInRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.KV.V1.LookupInResponse : object {
    private static MessageParser`1<LookupInResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int SpecsFieldNumber;
    private static FieldCodec`1<Spec> _repeated_specs_codec;
    private RepeatedField`1<Spec> specs_;
    public static int CasFieldNumber;
    private ulong cas_;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<LookupInResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<Spec> Specs { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public LookupInResponse(LookupInResponse other);
    private static LookupInResponse();
    public static MessageParser`1<LookupInResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual LookupInResponse Clone();
    public RepeatedField`1<Spec> get_Specs();
    public ulong get_Cas();
    public void set_Cas(ulong value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(LookupInResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(LookupInResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.KV.V1.MutateInRequest : object {
    private static MessageParser`1<MutateInRequest> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int KeyFieldNumber;
    private string key_;
    public static int SpecsFieldNumber;
    private static FieldCodec`1<Spec> _repeated_specs_codec;
    private RepeatedField`1<Spec> specs_;
    public static int StoreSemanticFieldNumber;
    private StoreSemantic storeSemantic_;
    public static int DurabilityLevelFieldNumber;
    private DurabilityLevel durabilityLevel_;
    public static int CasFieldNumber;
    private ulong cas_;
    public static int FlagsFieldNumber;
    private Flags flags_;
    public static int ExpiryTimeFieldNumber;
    public static int ExpirySecsFieldNumber;
    private object expiry_;
    private ExpiryOneofCase expiryCase_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<MutateInRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Key { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<Spec> Specs { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public StoreSemantic StoreSemantic { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasStoreSemantic { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DurabilityLevel DurabilityLevel { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasDurabilityLevel { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasCas { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Flags Flags { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Timestamp ExpiryTime { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 ExpirySecs { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ExpiryOneofCase ExpiryCase { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MutateInRequest(MutateInRequest other);
    private static MutateInRequest();
    public static MessageParser`1<MutateInRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual MutateInRequest Clone();
    public sealed virtual string get_BucketName();
    public sealed virtual void set_BucketName(string value);
    public sealed virtual string get_ScopeName();
    public sealed virtual void set_ScopeName(string value);
    public sealed virtual string get_CollectionName();
    public sealed virtual void set_CollectionName(string value);
    public sealed virtual string get_Key();
    public sealed virtual void set_Key(string value);
    public RepeatedField`1<Spec> get_Specs();
    public StoreSemantic get_StoreSemantic();
    public void set_StoreSemantic(StoreSemantic value);
    public bool get_HasStoreSemantic();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearStoreSemantic();
    public DurabilityLevel get_DurabilityLevel();
    public void set_DurabilityLevel(DurabilityLevel value);
    public bool get_HasDurabilityLevel();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearDurabilityLevel();
    public ulong get_Cas();
    public void set_Cas(ulong value);
    public bool get_HasCas();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearCas();
    public Flags get_Flags();
    public void set_Flags(Flags value);
    public Timestamp get_ExpiryTime();
    public void set_ExpiryTime(Timestamp value);
    public UInt32 get_ExpirySecs();
    public void set_ExpirySecs(UInt32 value);
    public ExpiryOneofCase get_ExpiryCase();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearExpiry();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(MutateInRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(MutateInRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.KV.V1.MutateInResponse : object {
    private static MessageParser`1<MutateInResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int SpecsFieldNumber;
    private static FieldCodec`1<Spec> _repeated_specs_codec;
    private RepeatedField`1<Spec> specs_;
    public static int CasFieldNumber;
    private ulong cas_;
    public static int MutationTokenFieldNumber;
    private MutationToken mutationToken_;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<MutateInResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<Spec> Specs { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MutationToken MutationToken { get; public set; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MutateInResponse(MutateInResponse other);
    private static MutateInResponse();
    public static MessageParser`1<MutateInResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual MutateInResponse Clone();
    public RepeatedField`1<Spec> get_Specs();
    public ulong get_Cas();
    public void set_Cas(ulong value);
    public MutationToken get_MutationToken();
    public void set_MutationToken(MutationToken value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(MutateInResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(MutateInResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.KV.V1.MutationToken : object {
    private static MessageParser`1<MutationToken> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int VbucketIdFieldNumber;
    private UInt32 vbucketId_;
    public static int VbucketUuidFieldNumber;
    private ulong vbucketUuid_;
    public static int SeqNoFieldNumber;
    private ulong seqNo_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<MutationToken> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 VbucketId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong VbucketUuid { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong SeqNo { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MutationToken(MutationToken other);
    private static MutationToken();
    public static MessageParser`1<MutationToken> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual MutationToken Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public UInt32 get_VbucketId();
    public void set_VbucketId(UInt32 value);
    public ulong get_VbucketUuid();
    public void set_VbucketUuid(ulong value);
    public ulong get_SeqNo();
    public void set_SeqNo(ulong value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(MutationToken other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(MutationToken other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [NullableContextAttribute("1")]
public static MutationToken op_Implicit(MutationToken token);
}
public class Couchbase.Protostellar.KV.V1.PrependRequest : object {
    private static MessageParser`1<PrependRequest> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int KeyFieldNumber;
    private string key_;
    public static int ContentFieldNumber;
    private ByteString content_;
    public static int CasFieldNumber;
    private ulong cas_;
    public static int DurabilityLevelFieldNumber;
    private DurabilityLevel durabilityLevel_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<PrependRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Key { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ByteString Content { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasCas { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DurabilityLevel DurabilityLevel { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasDurabilityLevel { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public PrependRequest(PrependRequest other);
    private static PrependRequest();
    public static MessageParser`1<PrependRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual PrependRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public string get_CollectionName();
    public void set_CollectionName(string value);
    public string get_Key();
    public void set_Key(string value);
    public ByteString get_Content();
    public void set_Content(ByteString value);
    public ulong get_Cas();
    public void set_Cas(ulong value);
    public bool get_HasCas();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearCas();
    public DurabilityLevel get_DurabilityLevel();
    public void set_DurabilityLevel(DurabilityLevel value);
    public bool get_HasDurabilityLevel();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearDurabilityLevel();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(PrependRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(PrependRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.KV.V1.PrependResponse : object {
    private static MessageParser`1<PrependResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int CasFieldNumber;
    private ulong cas_;
    public static int MutationTokenFieldNumber;
    private MutationToken mutationToken_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<PrependResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MutationToken MutationToken { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public PrependResponse(PrependResponse other);
    private static PrependResponse();
    public static MessageParser`1<PrependResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual PrependResponse Clone();
    public ulong get_Cas();
    public void set_Cas(ulong value);
    public MutationToken get_MutationToken();
    public void set_MutationToken(MutationToken value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(PrependResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(PrependResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.KV.V1.RemoveRequest : object {
    private static MessageParser`1<RemoveRequest> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int KeyFieldNumber;
    private string key_;
    public static int CasFieldNumber;
    private ulong cas_;
    public static int DurabilityLevelFieldNumber;
    private DurabilityLevel durabilityLevel_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<RemoveRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Key { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasCas { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DurabilityLevel DurabilityLevel { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasDurabilityLevel { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RemoveRequest(RemoveRequest other);
    private static RemoveRequest();
    public static MessageParser`1<RemoveRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual RemoveRequest Clone();
    public sealed virtual string get_BucketName();
    public sealed virtual void set_BucketName(string value);
    public sealed virtual string get_ScopeName();
    public sealed virtual void set_ScopeName(string value);
    public sealed virtual string get_CollectionName();
    public sealed virtual void set_CollectionName(string value);
    public sealed virtual string get_Key();
    public sealed virtual void set_Key(string value);
    public sealed virtual ulong get_Cas();
    public sealed virtual void set_Cas(ulong value);
    public bool get_HasCas();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearCas();
    public DurabilityLevel get_DurabilityLevel();
    public void set_DurabilityLevel(DurabilityLevel value);
    public bool get_HasDurabilityLevel();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearDurabilityLevel();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(RemoveRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(RemoveRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.KV.V1.RemoveResponse : object {
    private static MessageParser`1<RemoveResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int CasFieldNumber;
    private ulong cas_;
    public static int MutationTokenFieldNumber;
    private MutationToken mutationToken_;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<RemoveResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MutationToken MutationToken { get; public set; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RemoveResponse(RemoveResponse other);
    private static RemoveResponse();
    public static MessageParser`1<RemoveResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual RemoveResponse Clone();
    public ulong get_Cas();
    public void set_Cas(ulong value);
    public MutationToken get_MutationToken();
    public void set_MutationToken(MutationToken value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(RemoveResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(RemoveResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.KV.V1.ReplaceRequest : object {
    private static MessageParser`1<ReplaceRequest> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int KeyFieldNumber;
    private string key_;
    public static int ContentFieldNumber;
    private ByteString content_;
    public static int ContentFlagsFieldNumber;
    private UInt32 contentFlags_;
    public static int CasFieldNumber;
    private ulong cas_;
    public static int ExpiryTimeFieldNumber;
    public static int ExpirySecsFieldNumber;
    public static int DurabilityLevelFieldNumber;
    private DurabilityLevel durabilityLevel_;
    private object expiry_;
    private ExpiryOneofCase expiryCase_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<ReplaceRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Key { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ByteString Content { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 ContentFlags { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasCas { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Timestamp ExpiryTime { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 ExpirySecs { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DurabilityLevel DurabilityLevel { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasDurabilityLevel { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ExpiryOneofCase ExpiryCase { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ReplaceRequest(ReplaceRequest other);
    private static ReplaceRequest();
    public static MessageParser`1<ReplaceRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual ReplaceRequest Clone();
    public sealed virtual string get_BucketName();
    public sealed virtual void set_BucketName(string value);
    public sealed virtual string get_ScopeName();
    public sealed virtual void set_ScopeName(string value);
    public sealed virtual string get_CollectionName();
    public sealed virtual void set_CollectionName(string value);
    public sealed virtual string get_Key();
    public sealed virtual void set_Key(string value);
    public sealed virtual ByteString get_Content();
    public sealed virtual void set_Content(ByteString value);
    public sealed virtual UInt32 get_ContentFlags();
    public sealed virtual void set_ContentFlags(UInt32 value);
    public sealed virtual ulong get_Cas();
    public sealed virtual void set_Cas(ulong value);
    public bool get_HasCas();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearCas();
    public sealed virtual Timestamp get_ExpiryTime();
    public sealed virtual void set_ExpiryTime(Timestamp value);
    public sealed virtual UInt32 get_ExpirySecs();
    public sealed virtual void set_ExpirySecs(UInt32 value);
    public sealed virtual DurabilityLevel get_DurabilityLevel();
    public sealed virtual void set_DurabilityLevel(DurabilityLevel value);
    public bool get_HasDurabilityLevel();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearDurabilityLevel();
    public ExpiryOneofCase get_ExpiryCase();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearExpiry();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(ReplaceRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(ReplaceRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.KV.V1.ReplaceResponse : object {
    private static MessageParser`1<ReplaceResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int CasFieldNumber;
    private ulong cas_;
    public static int MutationTokenFieldNumber;
    private MutationToken mutationToken_;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<ReplaceResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MutationToken MutationToken { get; public set; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ReplaceResponse(ReplaceResponse other);
    private static ReplaceResponse();
    public static MessageParser`1<ReplaceResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual ReplaceResponse Clone();
    public ulong get_Cas();
    public void set_Cas(ulong value);
    public MutationToken get_MutationToken();
    public void set_MutationToken(MutationToken value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(ReplaceResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(ReplaceResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.KV.V1.TouchRequest : object {
    private static MessageParser`1<TouchRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int KeyFieldNumber;
    private string key_;
    public static int ExpiryTimeFieldNumber;
    public static int ExpirySecsFieldNumber;
    private object expiry_;
    private ExpiryOneofCase expiryCase_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<TouchRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Key { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Timestamp ExpiryTime { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 ExpirySecs { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ExpiryOneofCase ExpiryCase { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TouchRequest(TouchRequest other);
    private static TouchRequest();
    public static MessageParser`1<TouchRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual TouchRequest Clone();
    public sealed virtual string get_BucketName();
    public sealed virtual void set_BucketName(string value);
    public sealed virtual string get_ScopeName();
    public sealed virtual void set_ScopeName(string value);
    public sealed virtual string get_CollectionName();
    public sealed virtual void set_CollectionName(string value);
    public sealed virtual string get_Key();
    public sealed virtual void set_Key(string value);
    public Timestamp get_ExpiryTime();
    public void set_ExpiryTime(Timestamp value);
    public UInt32 get_ExpirySecs();
    public void set_ExpirySecs(UInt32 value);
    public ExpiryOneofCase get_ExpiryCase();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearExpiry();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(TouchRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(TouchRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.KV.V1.TouchResponse : object {
    private static MessageParser`1<TouchResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int CasFieldNumber;
    private ulong cas_;
    public static int MutationTokenFieldNumber;
    private MutationToken mutationToken_;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<TouchResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MutationToken MutationToken { get; public set; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TouchResponse(TouchResponse other);
    private static TouchResponse();
    public static MessageParser`1<TouchResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual TouchResponse Clone();
    public ulong get_Cas();
    public void set_Cas(ulong value);
    public MutationToken get_MutationToken();
    public void set_MutationToken(MutationToken value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(TouchResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(TouchResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.KV.V1.UnlockRequest : object {
    private static MessageParser`1<UnlockRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int KeyFieldNumber;
    private string key_;
    public static int CasFieldNumber;
    private ulong cas_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<UnlockRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Key { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UnlockRequest(UnlockRequest other);
    private static UnlockRequest();
    public static MessageParser`1<UnlockRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual UnlockRequest Clone();
    public sealed virtual string get_BucketName();
    public sealed virtual void set_BucketName(string value);
    public sealed virtual string get_ScopeName();
    public sealed virtual void set_ScopeName(string value);
    public sealed virtual string get_CollectionName();
    public sealed virtual void set_CollectionName(string value);
    public sealed virtual string get_Key();
    public sealed virtual void set_Key(string value);
    public ulong get_Cas();
    public void set_Cas(ulong value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(UnlockRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(UnlockRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.KV.V1.UnlockResponse : object {
    private static MessageParser`1<UnlockResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<UnlockResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UnlockResponse(UnlockResponse other);
    private static UnlockResponse();
    public static MessageParser`1<UnlockResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual UnlockResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(UnlockResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(UnlockResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public class Couchbase.Protostellar.KV.V1.UpsertRequest : object {
    private static MessageParser`1<UpsertRequest> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int KeyFieldNumber;
    private string key_;
    public static int ContentFieldNumber;
    private ByteString content_;
    public static int ContentFlagsFieldNumber;
    private UInt32 contentFlags_;
    public static int ExpiryTimeFieldNumber;
    public static int ExpirySecsFieldNumber;
    public static int PreserveExpiryOnExistingFieldNumber;
    private bool preserveExpiryOnExisting_;
    public static int DurabilityLevelFieldNumber;
    private DurabilityLevel durabilityLevel_;
    private object expiry_;
    private ExpiryOneofCase expiryCase_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<UpsertRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Key { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ByteString Content { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 ContentFlags { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Timestamp ExpiryTime { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 ExpirySecs { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool PreserveExpiryOnExisting { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasPreserveExpiryOnExisting { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DurabilityLevel DurabilityLevel { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasDurabilityLevel { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ExpiryOneofCase ExpiryCase { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UpsertRequest(UpsertRequest other);
    private static UpsertRequest();
    public static MessageParser`1<UpsertRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual UpsertRequest Clone();
    public sealed virtual string get_BucketName();
    public sealed virtual void set_BucketName(string value);
    public sealed virtual string get_ScopeName();
    public sealed virtual void set_ScopeName(string value);
    public sealed virtual string get_CollectionName();
    public sealed virtual void set_CollectionName(string value);
    public sealed virtual string get_Key();
    public sealed virtual void set_Key(string value);
    public sealed virtual ByteString get_Content();
    public sealed virtual void set_Content(ByteString value);
    public sealed virtual UInt32 get_ContentFlags();
    public sealed virtual void set_ContentFlags(UInt32 value);
    public sealed virtual Timestamp get_ExpiryTime();
    public sealed virtual void set_ExpiryTime(Timestamp value);
    public sealed virtual UInt32 get_ExpirySecs();
    public sealed virtual void set_ExpirySecs(UInt32 value);
    public bool get_PreserveExpiryOnExisting();
    public void set_PreserveExpiryOnExisting(bool value);
    public bool get_HasPreserveExpiryOnExisting();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearPreserveExpiryOnExisting();
    public sealed virtual DurabilityLevel get_DurabilityLevel();
    public sealed virtual void set_DurabilityLevel(DurabilityLevel value);
    public bool get_HasDurabilityLevel();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearDurabilityLevel();
    public ExpiryOneofCase get_ExpiryCase();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearExpiry();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(UpsertRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(UpsertRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.KV.V1.UpsertResponse : object {
    private static MessageParser`1<UpsertResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int CasFieldNumber;
    private ulong cas_;
    public static int MutationTokenFieldNumber;
    private MutationToken mutationToken_;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<UpsertResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MutationToken MutationToken { get; public set; }
    public RetryReason RetryReason { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UpsertResponse(UpsertResponse other);
    private static UpsertResponse();
    public static MessageParser`1<UpsertResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual UpsertResponse Clone();
    public ulong get_Cas();
    public void set_Cas(ulong value);
    public MutationToken get_MutationToken();
    public void set_MutationToken(MutationToken value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(UpsertResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(UpsertResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
}
public static class Couchbase.Protostellar.Query.V1.QueryReflection : object {
    private static FileDescriptor descriptor;
    public static FileDescriptor Descriptor { get; }
    private static QueryReflection();
    public static FileDescriptor get_Descriptor();
}
public class Couchbase.Protostellar.Query.V1.QueryRequest : object {
    private static MessageParser`1<QueryRequest> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int StatementFieldNumber;
    private string statement_;
    public static int ReadOnlyFieldNumber;
    private bool readOnly_;
    public static int PreparedFieldNumber;
    private bool prepared_;
    public static int TuningOptionsFieldNumber;
    private TuningOptions tuningOptions_;
    public static int ClientContextIdFieldNumber;
    private string clientContextId_;
    public static int ScanConsistencyFieldNumber;
    private ScanConsistency scanConsistency_;
    public static int PositionalParametersFieldNumber;
    private static FieldCodec`1<ByteString> _repeated_positionalParameters_codec;
    private RepeatedField`1<ByteString> positionalParameters_;
    public static int NamedParametersFieldNumber;
    private static Codec<string, ByteString> _map_namedParameters_codec;
    private MapField`2<string, ByteString> namedParameters_;
    public static int FlexIndexFieldNumber;
    private bool flexIndex_;
    public static int PreserveExpiryFieldNumber;
    private bool preserveExpiry_;
    public static int ConsistentWithFieldNumber;
    private static FieldCodec`1<MutationToken> _repeated_consistentWith_codec;
    private RepeatedField`1<MutationToken> consistentWith_;
    public static int ProfileModeFieldNumber;
    private ProfileMode profileMode_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<QueryRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBucketName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScopeName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Statement { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool ReadOnly { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasReadOnly { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool Prepared { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasPrepared { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TuningOptions TuningOptions { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ClientContextId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasClientContextId { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ScanConsistency ScanConsistency { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScanConsistency { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<ByteString> PositionalParameters { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MapField`2<string, ByteString> NamedParameters { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool FlexIndex { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasFlexIndex { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool PreserveExpiry { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasPreserveExpiry { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<MutationToken> ConsistentWith { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ProfileMode ProfileMode { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasProfileMode { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public QueryRequest(QueryRequest other);
    private static QueryRequest();
    public static MessageParser`1<QueryRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual QueryRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public bool get_HasBucketName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBucketName();
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public bool get_HasScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScopeName();
    public string get_Statement();
    public void set_Statement(string value);
    public bool get_ReadOnly();
    public void set_ReadOnly(bool value);
    public bool get_HasReadOnly();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearReadOnly();
    public bool get_Prepared();
    public void set_Prepared(bool value);
    public bool get_HasPrepared();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearPrepared();
    public TuningOptions get_TuningOptions();
    public void set_TuningOptions(TuningOptions value);
    public string get_ClientContextId();
    public void set_ClientContextId(string value);
    public bool get_HasClientContextId();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearClientContextId();
    public ScanConsistency get_ScanConsistency();
    public void set_ScanConsistency(ScanConsistency value);
    public bool get_HasScanConsistency();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScanConsistency();
    public RepeatedField`1<ByteString> get_PositionalParameters();
    public MapField`2<string, ByteString> get_NamedParameters();
    public bool get_FlexIndex();
    public void set_FlexIndex(bool value);
    public bool get_HasFlexIndex();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearFlexIndex();
    public bool get_PreserveExpiry();
    public void set_PreserveExpiry(bool value);
    public bool get_HasPreserveExpiry();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearPreserveExpiry();
    public RepeatedField`1<MutationToken> get_ConsistentWith();
    public ProfileMode get_ProfileMode();
    public void set_ProfileMode(ProfileMode value);
    public bool get_HasProfileMode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearProfileMode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(QueryRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(QueryRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Query.V1.QueryResponse : object {
    private static MessageParser`1<QueryResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int RowsFieldNumber;
    private static FieldCodec`1<ByteString> _repeated_rows_codec;
    private RepeatedField`1<ByteString> rows_;
    public static int MetaDataFieldNumber;
    private MetaData metaData_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<QueryResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<ByteString> Rows { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MetaData MetaData { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public QueryResponse(QueryResponse other);
    private static QueryResponse();
    public static MessageParser`1<QueryResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual QueryResponse Clone();
    public RepeatedField`1<ByteString> get_Rows();
    public MetaData get_MetaData();
    public void set_MetaData(MetaData value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(QueryResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(QueryResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public static class Couchbase.Protostellar.Query.V1.QueryService : object {
    private static string __ServiceName;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<QueryRequest> __Marshaller_couchbase_query_v1_QueryRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<QueryResponse> __Marshaller_couchbase_query_v1_QueryResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<QueryRequest, QueryResponse> __Method_Query;
    public static ServiceDescriptor Descriptor { get; }
    private static QueryService();
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static void __Helper_SerializeMessage(IMessage message, SerializationContext context);
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static T __Helper_DeserializeMessage(DeserializationContext context, MessageParser`1<T> parser);
    public static ServiceDescriptor get_Descriptor();
}
public class Couchbase.Protostellar.Routing.V1.DataRoutingEndpoint : object {
    private static MessageParser`1<DataRoutingEndpoint> _parser;
    private UnknownFieldSet _unknownFields;
    public static int EndpointIdxFieldNumber;
    private UInt32 endpointIdx_;
    public static int LocalVbucketsFieldNumber;
    private static FieldCodec`1<UInt32> _repeated_localVbuckets_codec;
    private RepeatedField`1<UInt32> localVbuckets_;
    public static int GroupVbucketsFieldNumber;
    private static FieldCodec`1<UInt32> _repeated_groupVbuckets_codec;
    private RepeatedField`1<UInt32> groupVbuckets_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DataRoutingEndpoint> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 EndpointIdx { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<UInt32> LocalVbuckets { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<UInt32> GroupVbuckets { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DataRoutingEndpoint(DataRoutingEndpoint other);
    private static DataRoutingEndpoint();
    public static MessageParser`1<DataRoutingEndpoint> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DataRoutingEndpoint Clone();
    public UInt32 get_EndpointIdx();
    public void set_EndpointIdx(UInt32 value);
    public RepeatedField`1<UInt32> get_LocalVbuckets();
    public RepeatedField`1<UInt32> get_GroupVbuckets();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DataRoutingEndpoint other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DataRoutingEndpoint other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Routing.V1.QueryRouting : object {
    private static MessageParser`1<QueryRouting> _parser;
    private UnknownFieldSet _unknownFields;
    public static int EndpointsFieldNumber;
    private static FieldCodec`1<QueryRoutingEndpoint> _repeated_endpoints_codec;
    private RepeatedField`1<QueryRoutingEndpoint> endpoints_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<QueryRouting> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<QueryRoutingEndpoint> Endpoints { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public QueryRouting(QueryRouting other);
    private static QueryRouting();
    public static MessageParser`1<QueryRouting> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual QueryRouting Clone();
    public RepeatedField`1<QueryRoutingEndpoint> get_Endpoints();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(QueryRouting other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(QueryRouting other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Routing.V1.QueryRoutingEndpoint : object {
    private static MessageParser`1<QueryRoutingEndpoint> _parser;
    private UnknownFieldSet _unknownFields;
    public static int EndpointIdxFieldNumber;
    private UInt32 endpointIdx_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<QueryRoutingEndpoint> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 EndpointIdx { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public QueryRoutingEndpoint(QueryRoutingEndpoint other);
    private static QueryRoutingEndpoint();
    public static MessageParser`1<QueryRoutingEndpoint> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual QueryRoutingEndpoint Clone();
    public UInt32 get_EndpointIdx();
    public void set_EndpointIdx(UInt32 value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(QueryRoutingEndpoint other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(QueryRoutingEndpoint other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Routing.V1.RoutingEndpoint : object {
    private static MessageParser`1<RoutingEndpoint> _parser;
    private UnknownFieldSet _unknownFields;
    public static int IdFieldNumber;
    private string id_;
    public static int ServerGroupFieldNumber;
    private string serverGroup_;
    public static int AddressFieldNumber;
    private string address_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<RoutingEndpoint> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Id { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ServerGroup { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Address { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RoutingEndpoint(RoutingEndpoint other);
    private static RoutingEndpoint();
    public static MessageParser`1<RoutingEndpoint> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual RoutingEndpoint Clone();
    public string get_Id();
    public void set_Id(string value);
    public string get_ServerGroup();
    public void set_ServerGroup(string value);
    public string get_Address();
    public void set_Address(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(RoutingEndpoint other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(RoutingEndpoint other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public static class Couchbase.Protostellar.Routing.V1.RoutingReflection : object {
    private static FileDescriptor descriptor;
    public static FileDescriptor Descriptor { get; }
    private static RoutingReflection();
    public static FileDescriptor get_Descriptor();
}
public static class Couchbase.Protostellar.Routing.V1.RoutingService : object {
    private static string __ServiceName;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<WatchRoutingRequest> __Marshaller_couchbase_routing_v1_WatchRoutingRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<WatchRoutingResponse> __Marshaller_couchbase_routing_v1_WatchRoutingResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<WatchRoutingRequest, WatchRoutingResponse> __Method_WatchRouting;
    public static ServiceDescriptor Descriptor { get; }
    private static RoutingService();
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static void __Helper_SerializeMessage(IMessage message, SerializationContext context);
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static T __Helper_DeserializeMessage(DeserializationContext context, MessageParser`1<T> parser);
    public static ServiceDescriptor get_Descriptor();
}
public class Couchbase.Protostellar.Routing.V1.VbucketDataRoutingStrategy : object {
    private static MessageParser`1<VbucketDataRoutingStrategy> _parser;
    private UnknownFieldSet _unknownFields;
    public static int EndpointsFieldNumber;
    private static FieldCodec`1<DataRoutingEndpoint> _repeated_endpoints_codec;
    private RepeatedField`1<DataRoutingEndpoint> endpoints_;
    public static int NumVbucketsFieldNumber;
    private UInt32 numVbuckets_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<VbucketDataRoutingStrategy> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<DataRoutingEndpoint> Endpoints { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 NumVbuckets { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public VbucketDataRoutingStrategy(VbucketDataRoutingStrategy other);
    private static VbucketDataRoutingStrategy();
    public static MessageParser`1<VbucketDataRoutingStrategy> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual VbucketDataRoutingStrategy Clone();
    public RepeatedField`1<DataRoutingEndpoint> get_Endpoints();
    public UInt32 get_NumVbuckets();
    public void set_NumVbuckets(UInt32 value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(VbucketDataRoutingStrategy other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(VbucketDataRoutingStrategy other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Routing.V1.ViewsRouting : object {
    private static MessageParser`1<ViewsRouting> _parser;
    private UnknownFieldSet _unknownFields;
    public static int EndpointsFieldNumber;
    private static FieldCodec`1<ViewsRoutingEndpoint> _repeated_endpoints_codec;
    private RepeatedField`1<ViewsRoutingEndpoint> endpoints_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<ViewsRouting> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<ViewsRoutingEndpoint> Endpoints { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ViewsRouting(ViewsRouting other);
    private static ViewsRouting();
    public static MessageParser`1<ViewsRouting> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual ViewsRouting Clone();
    public RepeatedField`1<ViewsRoutingEndpoint> get_Endpoints();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(ViewsRouting other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(ViewsRouting other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Routing.V1.ViewsRoutingEndpoint : object {
    private static MessageParser`1<ViewsRoutingEndpoint> _parser;
    private UnknownFieldSet _unknownFields;
    public static int EndpointIdxFieldNumber;
    private UInt32 endpointIdx_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<ViewsRoutingEndpoint> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 EndpointIdx { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ViewsRoutingEndpoint(ViewsRoutingEndpoint other);
    private static ViewsRoutingEndpoint();
    public static MessageParser`1<ViewsRoutingEndpoint> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual ViewsRoutingEndpoint Clone();
    public UInt32 get_EndpointIdx();
    public void set_EndpointIdx(UInt32 value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(ViewsRoutingEndpoint other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(ViewsRoutingEndpoint other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Routing.V1.WatchRoutingRequest : object {
    private static MessageParser`1<WatchRoutingRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<WatchRoutingRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBucketName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public WatchRoutingRequest(WatchRoutingRequest other);
    private static WatchRoutingRequest();
    public static MessageParser`1<WatchRoutingRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual WatchRoutingRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public bool get_HasBucketName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBucketName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(WatchRoutingRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(WatchRoutingRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Routing.V1.WatchRoutingResponse : object {
    private static MessageParser`1<WatchRoutingResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int RevisionFieldNumber;
    private static FieldCodec`1<ulong> _repeated_revision_codec;
    private RepeatedField`1<ulong> revision_;
    public static int EndpointsFieldNumber;
    private static FieldCodec`1<RoutingEndpoint> _repeated_endpoints_codec;
    private RepeatedField`1<RoutingEndpoint> endpoints_;
    public static int VbucketDataRoutingFieldNumber;
    public static int QueryRoutingFieldNumber;
    private QueryRouting queryRouting_;
    public static int ViewsRoutingFieldNumber;
    private ViewsRouting viewsRouting_;
    private object dataRouting_;
    private DataRoutingOneofCase dataRoutingCase_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<WatchRoutingResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<ulong> Revision { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<RoutingEndpoint> Endpoints { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public VbucketDataRoutingStrategy VbucketDataRouting { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public QueryRouting QueryRouting { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ViewsRouting ViewsRouting { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DataRoutingOneofCase DataRoutingCase { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public WatchRoutingResponse(WatchRoutingResponse other);
    private static WatchRoutingResponse();
    public static MessageParser`1<WatchRoutingResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual WatchRoutingResponse Clone();
    public RepeatedField`1<ulong> get_Revision();
    public RepeatedField`1<RoutingEndpoint> get_Endpoints();
    public VbucketDataRoutingStrategy get_VbucketDataRouting();
    public void set_VbucketDataRouting(VbucketDataRoutingStrategy value);
    public QueryRouting get_QueryRouting();
    public void set_QueryRouting(QueryRouting value);
    public ViewsRouting get_ViewsRouting();
    public void set_ViewsRouting(ViewsRouting value);
    public DataRoutingOneofCase get_DataRoutingCase();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearDataRouting();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(WatchRoutingResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(WatchRoutingResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.BooleanFieldQuery : object {
    private static MessageParser`1<BooleanFieldQuery> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BoostFieldNumber;
    private float boost_;
    public static int FieldFieldNumber;
    private string field_;
    public static int ValueFieldNumber;
    private bool value_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<BooleanFieldQuery> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public float Boost { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBoost { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Field { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasField { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool Value { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public BooleanFieldQuery(BooleanFieldQuery other);
    private static BooleanFieldQuery();
    public static MessageParser`1<BooleanFieldQuery> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual BooleanFieldQuery Clone();
    public float get_Boost();
    public void set_Boost(float value);
    public bool get_HasBoost();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBoost();
    public string get_Field();
    public void set_Field(string value);
    public bool get_HasField();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearField();
    public bool get_Value();
    public void set_Value(bool value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(BooleanFieldQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(BooleanFieldQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.BooleanQuery : object {
    private static MessageParser`1<BooleanQuery> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BoostFieldNumber;
    private float boost_;
    public static int MustFieldNumber;
    private ConjunctionQuery must_;
    public static int MustNotFieldNumber;
    private DisjunctionQuery mustNot_;
    public static int ShouldFieldNumber;
    private DisjunctionQuery should_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<BooleanQuery> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public float Boost { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBoost { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ConjunctionQuery Must { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DisjunctionQuery MustNot { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DisjunctionQuery Should { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public BooleanQuery(BooleanQuery other);
    private static BooleanQuery();
    public static MessageParser`1<BooleanQuery> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual BooleanQuery Clone();
    public float get_Boost();
    public void set_Boost(float value);
    public bool get_HasBoost();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBoost();
    public ConjunctionQuery get_Must();
    public void set_Must(ConjunctionQuery value);
    public DisjunctionQuery get_MustNot();
    public void set_MustNot(DisjunctionQuery value);
    public DisjunctionQuery get_Should();
    public void set_Should(DisjunctionQuery value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(BooleanQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(BooleanQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.ConjunctionQuery : object {
    private static MessageParser`1<ConjunctionQuery> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BoostFieldNumber;
    private float boost_;
    public static int QueriesFieldNumber;
    private static FieldCodec`1<Query> _repeated_queries_codec;
    private RepeatedField`1<Query> queries_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<ConjunctionQuery> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public float Boost { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBoost { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<Query> Queries { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ConjunctionQuery(ConjunctionQuery other);
    private static ConjunctionQuery();
    public static MessageParser`1<ConjunctionQuery> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual ConjunctionQuery Clone();
    public float get_Boost();
    public void set_Boost(float value);
    public bool get_HasBoost();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBoost();
    public RepeatedField`1<Query> get_Queries();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(ConjunctionQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(ConjunctionQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.DateRange : object {
    private static MessageParser`1<DateRange> _parser;
    private UnknownFieldSet _unknownFields;
    public static int NameFieldNumber;
    private string name_;
    public static int StartFieldNumber;
    private string start_;
    public static int EndFieldNumber;
    private string end_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DateRange> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Name { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Start { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasStart { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string End { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasEnd { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DateRange(DateRange other);
    private static DateRange();
    public static MessageParser`1<DateRange> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DateRange Clone();
    public string get_Name();
    public void set_Name(string value);
    public string get_Start();
    public void set_Start(string value);
    public bool get_HasStart();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearStart();
    public string get_End();
    public void set_End(string value);
    public bool get_HasEnd();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearEnd();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DateRange other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DateRange other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.DateRangeFacet : object {
    private static MessageParser`1<DateRangeFacet> _parser;
    private UnknownFieldSet _unknownFields;
    public static int FieldFieldNumber;
    private string field_;
    public static int SizeFieldNumber;
    private UInt32 size_;
    public static int DateRangesFieldNumber;
    private static FieldCodec`1<DateRange> _repeated_dateRanges_codec;
    private RepeatedField`1<DateRange> dateRanges_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DateRangeFacet> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Field { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 Size { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<DateRange> DateRanges { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DateRangeFacet(DateRangeFacet other);
    private static DateRangeFacet();
    public static MessageParser`1<DateRangeFacet> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DateRangeFacet Clone();
    public string get_Field();
    public void set_Field(string value);
    public UInt32 get_Size();
    public void set_Size(UInt32 value);
    public RepeatedField`1<DateRange> get_DateRanges();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DateRangeFacet other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DateRangeFacet other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.DateRangeQuery : object {
    private static MessageParser`1<DateRangeQuery> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BoostFieldNumber;
    private float boost_;
    public static int FieldFieldNumber;
    private string field_;
    public static int DateTimeParserFieldNumber;
    private string dateTimeParser_;
    public static int StartDateFieldNumber;
    private string startDate_;
    public static int EndDateFieldNumber;
    private string endDate_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DateRangeQuery> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public float Boost { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBoost { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Field { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasField { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string DateTimeParser { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasDateTimeParser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string StartDate { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasStartDate { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string EndDate { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasEndDate { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DateRangeQuery(DateRangeQuery other);
    private static DateRangeQuery();
    public static MessageParser`1<DateRangeQuery> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DateRangeQuery Clone();
    public float get_Boost();
    public void set_Boost(float value);
    public bool get_HasBoost();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBoost();
    public string get_Field();
    public void set_Field(string value);
    public bool get_HasField();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearField();
    public string get_DateTimeParser();
    public void set_DateTimeParser(string value);
    public bool get_HasDateTimeParser();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearDateTimeParser();
    public string get_StartDate();
    public void set_StartDate(string value);
    public bool get_HasStartDate();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearStartDate();
    public string get_EndDate();
    public void set_EndDate(string value);
    public bool get_HasEndDate();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearEndDate();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DateRangeQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DateRangeQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.DisjunctionQuery : object {
    private static MessageParser`1<DisjunctionQuery> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BoostFieldNumber;
    private float boost_;
    public static int QueriesFieldNumber;
    private static FieldCodec`1<Query> _repeated_queries_codec;
    private RepeatedField`1<Query> queries_;
    public static int MinimumFieldNumber;
    private UInt32 minimum_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DisjunctionQuery> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public float Boost { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBoost { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<Query> Queries { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 Minimum { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasMinimum { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DisjunctionQuery(DisjunctionQuery other);
    private static DisjunctionQuery();
    public static MessageParser`1<DisjunctionQuery> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DisjunctionQuery Clone();
    public float get_Boost();
    public void set_Boost(float value);
    public bool get_HasBoost();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBoost();
    public RepeatedField`1<Query> get_Queries();
    public UInt32 get_Minimum();
    public void set_Minimum(UInt32 value);
    public bool get_HasMinimum();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearMinimum();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DisjunctionQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DisjunctionQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.DocIdQuery : object {
    private static MessageParser`1<DocIdQuery> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BoostFieldNumber;
    private float boost_;
    public static int IdsFieldNumber;
    private static FieldCodec`1<string> _repeated_ids_codec;
    private RepeatedField`1<string> ids_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DocIdQuery> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public float Boost { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBoost { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<string> Ids { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DocIdQuery(DocIdQuery other);
    private static DocIdQuery();
    public static MessageParser`1<DocIdQuery> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DocIdQuery Clone();
    public float get_Boost();
    public void set_Boost(float value);
    public bool get_HasBoost();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBoost();
    public RepeatedField`1<string> get_Ids();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DocIdQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DocIdQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.Facet : object {
    private static MessageParser`1<Facet> _parser;
    private UnknownFieldSet _unknownFields;
    public static int DateRangeFacetFieldNumber;
    public static int NumericRangeFacetFieldNumber;
    public static int TermFacetFieldNumber;
    private object facet_;
    private FacetOneofCase facetCase_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<Facet> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DateRangeFacet DateRangeFacet { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public NumericRangeFacet NumericRangeFacet { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TermFacet TermFacet { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public FacetOneofCase FacetCase { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Facet(Facet other);
    private static Facet();
    public static MessageParser`1<Facet> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual Facet Clone();
    public DateRangeFacet get_DateRangeFacet();
    public void set_DateRangeFacet(DateRangeFacet value);
    public NumericRangeFacet get_NumericRangeFacet();
    public void set_NumericRangeFacet(NumericRangeFacet value);
    public TermFacet get_TermFacet();
    public void set_TermFacet(TermFacet value);
    public FacetOneofCase get_FacetCase();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearFacet();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(Facet other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(Facet other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.FieldSorting : object {
    private static MessageParser`1<FieldSorting> _parser;
    private UnknownFieldSet _unknownFields;
    public static int FieldFieldNumber;
    private string field_;
    public static int DescendingFieldNumber;
    private bool descending_;
    public static int MissingFieldNumber;
    private string missing_;
    public static int ModeFieldNumber;
    private string mode_;
    public static int TypeFieldNumber;
    private string type_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<FieldSorting> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Field { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool Descending { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Missing { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Mode { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Type { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public FieldSorting(FieldSorting other);
    private static FieldSorting();
    public static MessageParser`1<FieldSorting> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual FieldSorting Clone();
    public string get_Field();
    public void set_Field(string value);
    public bool get_Descending();
    public void set_Descending(bool value);
    public string get_Missing();
    public void set_Missing(string value);
    public string get_Mode();
    public void set_Mode(string value);
    public string get_Type();
    public void set_Type(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(FieldSorting other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(FieldSorting other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.GeoBoundingBoxQuery : object {
    private static MessageParser`1<GeoBoundingBoxQuery> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BoostFieldNumber;
    private float boost_;
    public static int FieldFieldNumber;
    private string field_;
    public static int TopLeftFieldNumber;
    private LatLng topLeft_;
    public static int BottomRightFieldNumber;
    private LatLng bottomRight_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<GeoBoundingBoxQuery> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public float Boost { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBoost { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Field { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasField { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public LatLng TopLeft { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public LatLng BottomRight { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public GeoBoundingBoxQuery(GeoBoundingBoxQuery other);
    private static GeoBoundingBoxQuery();
    public static MessageParser`1<GeoBoundingBoxQuery> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual GeoBoundingBoxQuery Clone();
    public float get_Boost();
    public void set_Boost(float value);
    public bool get_HasBoost();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBoost();
    public string get_Field();
    public void set_Field(string value);
    public bool get_HasField();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearField();
    public LatLng get_TopLeft();
    public void set_TopLeft(LatLng value);
    public LatLng get_BottomRight();
    public void set_BottomRight(LatLng value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(GeoBoundingBoxQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(GeoBoundingBoxQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.GeoDistanceQuery : object {
    private static MessageParser`1<GeoDistanceQuery> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BoostFieldNumber;
    private float boost_;
    public static int FieldFieldNumber;
    private string field_;
    public static int CenterFieldNumber;
    private LatLng center_;
    public static int DistanceFieldNumber;
    private string distance_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<GeoDistanceQuery> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public float Boost { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBoost { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Field { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasField { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public LatLng Center { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Distance { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public GeoDistanceQuery(GeoDistanceQuery other);
    private static GeoDistanceQuery();
    public static MessageParser`1<GeoDistanceQuery> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual GeoDistanceQuery Clone();
    public float get_Boost();
    public void set_Boost(float value);
    public bool get_HasBoost();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBoost();
    public string get_Field();
    public void set_Field(string value);
    public bool get_HasField();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearField();
    public LatLng get_Center();
    public void set_Center(LatLng value);
    public string get_Distance();
    public void set_Distance(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(GeoDistanceQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(GeoDistanceQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.GeoDistanceSorting : object {
    private static MessageParser`1<GeoDistanceSorting> _parser;
    private UnknownFieldSet _unknownFields;
    public static int FieldFieldNumber;
    private string field_;
    public static int DescendingFieldNumber;
    private bool descending_;
    public static int CenterFieldNumber;
    private LatLng center_;
    public static int UnitFieldNumber;
    private string unit_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<GeoDistanceSorting> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Field { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool Descending { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public LatLng Center { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Unit { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public GeoDistanceSorting(GeoDistanceSorting other);
    private static GeoDistanceSorting();
    public static MessageParser`1<GeoDistanceSorting> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual GeoDistanceSorting Clone();
    public string get_Field();
    public void set_Field(string value);
    public bool get_Descending();
    public void set_Descending(bool value);
    public LatLng get_Center();
    public void set_Center(LatLng value);
    public string get_Unit();
    public void set_Unit(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(GeoDistanceSorting other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(GeoDistanceSorting other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.GeoPolygonQuery : object {
    private static MessageParser`1<GeoPolygonQuery> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BoostFieldNumber;
    private float boost_;
    public static int FieldFieldNumber;
    private string field_;
    public static int VerticesFieldNumber;
    private static FieldCodec`1<LatLng> _repeated_vertices_codec;
    private RepeatedField`1<LatLng> vertices_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<GeoPolygonQuery> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public float Boost { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBoost { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Field { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasField { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<LatLng> Vertices { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public GeoPolygonQuery(GeoPolygonQuery other);
    private static GeoPolygonQuery();
    public static MessageParser`1<GeoPolygonQuery> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual GeoPolygonQuery Clone();
    public float get_Boost();
    public void set_Boost(float value);
    public bool get_HasBoost();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBoost();
    public string get_Field();
    public void set_Field(string value);
    public bool get_HasField();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearField();
    public RepeatedField`1<LatLng> get_Vertices();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(GeoPolygonQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(GeoPolygonQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.IdSorting : object {
    private static MessageParser`1<IdSorting> _parser;
    private UnknownFieldSet _unknownFields;
    public static int DescendingFieldNumber;
    private bool descending_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<IdSorting> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool Descending { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public IdSorting(IdSorting other);
    private static IdSorting();
    public static MessageParser`1<IdSorting> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual IdSorting Clone();
    public bool get_Descending();
    public void set_Descending(bool value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(IdSorting other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(IdSorting other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.LatLng : object {
    private static MessageParser`1<LatLng> _parser;
    private UnknownFieldSet _unknownFields;
    public static int LatitudeFieldNumber;
    private double latitude_;
    public static int LongitudeFieldNumber;
    private double longitude_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<LatLng> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public double Latitude { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public double Longitude { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public LatLng(LatLng other);
    private static LatLng();
    public static MessageParser`1<LatLng> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual LatLng Clone();
    public double get_Latitude();
    public void set_Latitude(double value);
    public double get_Longitude();
    public void set_Longitude(double value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(LatLng other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(LatLng other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.MatchAllQuery : object {
    private static MessageParser`1<MatchAllQuery> _parser;
    private UnknownFieldSet _unknownFields;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<MatchAllQuery> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MatchAllQuery(MatchAllQuery other);
    private static MatchAllQuery();
    public static MessageParser`1<MatchAllQuery> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual MatchAllQuery Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(MatchAllQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(MatchAllQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.MatchNoneQuery : object {
    private static MessageParser`1<MatchNoneQuery> _parser;
    private UnknownFieldSet _unknownFields;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<MatchNoneQuery> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MatchNoneQuery(MatchNoneQuery other);
    private static MatchNoneQuery();
    public static MessageParser`1<MatchNoneQuery> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual MatchNoneQuery Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(MatchNoneQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(MatchNoneQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.MatchPhraseQuery : object {
    private static MessageParser`1<MatchPhraseQuery> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BoostFieldNumber;
    private float boost_;
    public static int FieldFieldNumber;
    private string field_;
    public static int PhraseFieldNumber;
    private string phrase_;
    public static int AnalyzerFieldNumber;
    private string analyzer_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<MatchPhraseQuery> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public float Boost { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBoost { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Field { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasField { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Phrase { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Analyzer { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasAnalyzer { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MatchPhraseQuery(MatchPhraseQuery other);
    private static MatchPhraseQuery();
    public static MessageParser`1<MatchPhraseQuery> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual MatchPhraseQuery Clone();
    public float get_Boost();
    public void set_Boost(float value);
    public bool get_HasBoost();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBoost();
    public string get_Field();
    public void set_Field(string value);
    public bool get_HasField();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearField();
    public string get_Phrase();
    public void set_Phrase(string value);
    public string get_Analyzer();
    public void set_Analyzer(string value);
    public bool get_HasAnalyzer();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearAnalyzer();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(MatchPhraseQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(MatchPhraseQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.MatchQuery : object {
    private static MessageParser`1<MatchQuery> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BoostFieldNumber;
    private float boost_;
    public static int FieldFieldNumber;
    private string field_;
    public static int ValueFieldNumber;
    private string value_;
    public static int AnalyzerFieldNumber;
    private string analyzer_;
    public static int FuzzinessFieldNumber;
    private ulong fuzziness_;
    public static int OperatorFieldNumber;
    private Operator operator_;
    public static int PrefixLengthFieldNumber;
    private ulong prefixLength_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<MatchQuery> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public float Boost { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBoost { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Field { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasField { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Value { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Analyzer { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasAnalyzer { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Fuzziness { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasFuzziness { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Operator Operator { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasOperator { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong PrefixLength { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasPrefixLength { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MatchQuery(MatchQuery other);
    private static MatchQuery();
    public static MessageParser`1<MatchQuery> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual MatchQuery Clone();
    public float get_Boost();
    public void set_Boost(float value);
    public bool get_HasBoost();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBoost();
    public string get_Field();
    public void set_Field(string value);
    public bool get_HasField();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearField();
    public string get_Value();
    public void set_Value(string value);
    public string get_Analyzer();
    public void set_Analyzer(string value);
    public bool get_HasAnalyzer();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearAnalyzer();
    public ulong get_Fuzziness();
    public void set_Fuzziness(ulong value);
    public bool get_HasFuzziness();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearFuzziness();
    public Operator get_Operator();
    public void set_Operator(Operator value);
    public bool get_HasOperator();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearOperator();
    public ulong get_PrefixLength();
    public void set_PrefixLength(ulong value);
    public bool get_HasPrefixLength();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearPrefixLength();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(MatchQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(MatchQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.NumericRange : object {
    private static MessageParser`1<NumericRange> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int NameFieldNumber;
    private string name_;
    public static int MinFieldNumber;
    private float min_;
    public static int MaxFieldNumber;
    private float max_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<NumericRange> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Name { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public float Min { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasMin { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public float Max { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasMax { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public NumericRange(NumericRange other);
    private static NumericRange();
    public static MessageParser`1<NumericRange> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual NumericRange Clone();
    public string get_Name();
    public void set_Name(string value);
    public float get_Min();
    public void set_Min(float value);
    public bool get_HasMin();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearMin();
    public float get_Max();
    public void set_Max(float value);
    public bool get_HasMax();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearMax();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(NumericRange other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(NumericRange other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.NumericRangeFacet : object {
    private static MessageParser`1<NumericRangeFacet> _parser;
    private UnknownFieldSet _unknownFields;
    public static int FieldFieldNumber;
    private string field_;
    public static int SizeFieldNumber;
    private UInt32 size_;
    public static int NumericRangesFieldNumber;
    private static FieldCodec`1<NumericRange> _repeated_numericRanges_codec;
    private RepeatedField`1<NumericRange> numericRanges_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<NumericRangeFacet> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Field { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 Size { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<NumericRange> NumericRanges { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public NumericRangeFacet(NumericRangeFacet other);
    private static NumericRangeFacet();
    public static MessageParser`1<NumericRangeFacet> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual NumericRangeFacet Clone();
    public string get_Field();
    public void set_Field(string value);
    public UInt32 get_Size();
    public void set_Size(UInt32 value);
    public RepeatedField`1<NumericRange> get_NumericRanges();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(NumericRangeFacet other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(NumericRangeFacet other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.NumericRangeQuery : object {
    private static MessageParser`1<NumericRangeQuery> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BoostFieldNumber;
    private float boost_;
    public static int FieldFieldNumber;
    private string field_;
    public static int MinFieldNumber;
    private float min_;
    public static int MaxFieldNumber;
    private float max_;
    public static int InclusiveMinFieldNumber;
    private bool inclusiveMin_;
    public static int InclusiveMaxFieldNumber;
    private bool inclusiveMax_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<NumericRangeQuery> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public float Boost { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBoost { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Field { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasField { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public float Min { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasMin { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public float Max { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasMax { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool InclusiveMin { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasInclusiveMin { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool InclusiveMax { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasInclusiveMax { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public NumericRangeQuery(NumericRangeQuery other);
    private static NumericRangeQuery();
    public static MessageParser`1<NumericRangeQuery> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual NumericRangeQuery Clone();
    public float get_Boost();
    public void set_Boost(float value);
    public bool get_HasBoost();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBoost();
    public string get_Field();
    public void set_Field(string value);
    public bool get_HasField();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearField();
    public float get_Min();
    public void set_Min(float value);
    public bool get_HasMin();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearMin();
    public float get_Max();
    public void set_Max(float value);
    public bool get_HasMax();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearMax();
    public bool get_InclusiveMin();
    public void set_InclusiveMin(bool value);
    public bool get_HasInclusiveMin();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearInclusiveMin();
    public bool get_InclusiveMax();
    public void set_InclusiveMax(bool value);
    public bool get_HasInclusiveMax();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearInclusiveMax();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(NumericRangeQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(NumericRangeQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.PhraseQuery : object {
    private static MessageParser`1<PhraseQuery> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BoostFieldNumber;
    private float boost_;
    public static int FieldFieldNumber;
    private string field_;
    public static int TermsFieldNumber;
    private static FieldCodec`1<string> _repeated_terms_codec;
    private RepeatedField`1<string> terms_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<PhraseQuery> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public float Boost { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBoost { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Field { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasField { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<string> Terms { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public PhraseQuery(PhraseQuery other);
    private static PhraseQuery();
    public static MessageParser`1<PhraseQuery> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual PhraseQuery Clone();
    public float get_Boost();
    public void set_Boost(float value);
    public bool get_HasBoost();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBoost();
    public string get_Field();
    public void set_Field(string value);
    public bool get_HasField();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearField();
    public RepeatedField`1<string> get_Terms();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(PhraseQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(PhraseQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.PrefixQuery : object {
    private static MessageParser`1<PrefixQuery> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BoostFieldNumber;
    private float boost_;
    public static int FieldFieldNumber;
    private string field_;
    public static int PrefixFieldNumber;
    private string prefix_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<PrefixQuery> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public float Boost { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBoost { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Field { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasField { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Prefix { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public PrefixQuery(PrefixQuery other);
    private static PrefixQuery();
    public static MessageParser`1<PrefixQuery> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual PrefixQuery Clone();
    public float get_Boost();
    public void set_Boost(float value);
    public bool get_HasBoost();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBoost();
    public string get_Field();
    public void set_Field(string value);
    public bool get_HasField();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearField();
    public string get_Prefix();
    public void set_Prefix(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(PrefixQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(PrefixQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.Query : object {
    private static MessageParser`1<Query> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BooleanFieldQueryFieldNumber;
    public static int BooleanQueryFieldNumber;
    public static int ConjunctionQueryFieldNumber;
    public static int DateRangeQueryFieldNumber;
    public static int DisjunctionQueryFieldNumber;
    public static int DocIdQueryFieldNumber;
    public static int GeoBoundingBoxQueryFieldNumber;
    public static int GeoDistanceQueryFieldNumber;
    public static int GeoPolygonQueryFieldNumber;
    public static int MatchAllQueryFieldNumber;
    public static int MatchNoneQueryFieldNumber;
    public static int MatchPhraseQueryFieldNumber;
    public static int MatchQueryFieldNumber;
    public static int NumericRangeQueryFieldNumber;
    public static int PhraseQueryFieldNumber;
    public static int PrefixQueryFieldNumber;
    public static int QueryStringQueryFieldNumber;
    public static int RegexpQueryFieldNumber;
    public static int TermQueryFieldNumber;
    public static int TermRangeQueryFieldNumber;
    public static int WildcardQueryFieldNumber;
    private object query_;
    private QueryOneofCase queryCase_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<Query> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public BooleanFieldQuery BooleanFieldQuery { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public BooleanQuery BooleanQuery { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ConjunctionQuery ConjunctionQuery { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DateRangeQuery DateRangeQuery { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DisjunctionQuery DisjunctionQuery { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DocIdQuery DocIdQuery { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public GeoBoundingBoxQuery GeoBoundingBoxQuery { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public GeoDistanceQuery GeoDistanceQuery { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public GeoPolygonQuery GeoPolygonQuery { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MatchAllQuery MatchAllQuery { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MatchNoneQuery MatchNoneQuery { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MatchPhraseQuery MatchPhraseQuery { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MatchQuery MatchQuery { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public NumericRangeQuery NumericRangeQuery { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public PhraseQuery PhraseQuery { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public PrefixQuery PrefixQuery { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public QueryStringQuery QueryStringQuery { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RegexpQuery RegexpQuery { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TermQuery TermQuery { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TermRangeQuery TermRangeQuery { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public WildcardQuery WildcardQuery { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public QueryOneofCase QueryCase { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Query(Query other);
    private static Query();
    public static MessageParser`1<Query> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual Query Clone();
    public BooleanFieldQuery get_BooleanFieldQuery();
    public void set_BooleanFieldQuery(BooleanFieldQuery value);
    public BooleanQuery get_BooleanQuery();
    public void set_BooleanQuery(BooleanQuery value);
    public ConjunctionQuery get_ConjunctionQuery();
    public void set_ConjunctionQuery(ConjunctionQuery value);
    public DateRangeQuery get_DateRangeQuery();
    public void set_DateRangeQuery(DateRangeQuery value);
    public DisjunctionQuery get_DisjunctionQuery();
    public void set_DisjunctionQuery(DisjunctionQuery value);
    public DocIdQuery get_DocIdQuery();
    public void set_DocIdQuery(DocIdQuery value);
    public GeoBoundingBoxQuery get_GeoBoundingBoxQuery();
    public void set_GeoBoundingBoxQuery(GeoBoundingBoxQuery value);
    public GeoDistanceQuery get_GeoDistanceQuery();
    public void set_GeoDistanceQuery(GeoDistanceQuery value);
    public GeoPolygonQuery get_GeoPolygonQuery();
    public void set_GeoPolygonQuery(GeoPolygonQuery value);
    public MatchAllQuery get_MatchAllQuery();
    public void set_MatchAllQuery(MatchAllQuery value);
    public MatchNoneQuery get_MatchNoneQuery();
    public void set_MatchNoneQuery(MatchNoneQuery value);
    public MatchPhraseQuery get_MatchPhraseQuery();
    public void set_MatchPhraseQuery(MatchPhraseQuery value);
    public MatchQuery get_MatchQuery();
    public void set_MatchQuery(MatchQuery value);
    public NumericRangeQuery get_NumericRangeQuery();
    public void set_NumericRangeQuery(NumericRangeQuery value);
    public PhraseQuery get_PhraseQuery();
    public void set_PhraseQuery(PhraseQuery value);
    public PrefixQuery get_PrefixQuery();
    public void set_PrefixQuery(PrefixQuery value);
    public QueryStringQuery get_QueryStringQuery();
    public void set_QueryStringQuery(QueryStringQuery value);
    public RegexpQuery get_RegexpQuery();
    public void set_RegexpQuery(RegexpQuery value);
    public TermQuery get_TermQuery();
    public void set_TermQuery(TermQuery value);
    public TermRangeQuery get_TermRangeQuery();
    public void set_TermRangeQuery(TermRangeQuery value);
    public WildcardQuery get_WildcardQuery();
    public void set_WildcardQuery(WildcardQuery value);
    public QueryOneofCase get_QueryCase();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearQuery();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(Query other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(Query other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.QueryStringQuery : object {
    private static MessageParser`1<QueryStringQuery> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BoostFieldNumber;
    private float boost_;
    public static int QueryStringFieldNumber;
    private string queryString_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<QueryStringQuery> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public float Boost { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBoost { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string QueryString { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public QueryStringQuery(QueryStringQuery other);
    private static QueryStringQuery();
    public static MessageParser`1<QueryStringQuery> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual QueryStringQuery Clone();
    public float get_Boost();
    public void set_Boost(float value);
    public bool get_HasBoost();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBoost();
    public string get_QueryString();
    public void set_QueryString(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(QueryStringQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(QueryStringQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.RegexpQuery : object {
    private static MessageParser`1<RegexpQuery> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BoostFieldNumber;
    private float boost_;
    public static int FieldFieldNumber;
    private string field_;
    public static int RegexpFieldNumber;
    private string regexp_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<RegexpQuery> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public float Boost { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBoost { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Field { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasField { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Regexp { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RegexpQuery(RegexpQuery other);
    private static RegexpQuery();
    public static MessageParser`1<RegexpQuery> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual RegexpQuery Clone();
    public float get_Boost();
    public void set_Boost(float value);
    public bool get_HasBoost();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBoost();
    public string get_Field();
    public void set_Field(string value);
    public bool get_HasField();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearField();
    public string get_Regexp();
    public void set_Regexp(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(RegexpQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(RegexpQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.ScoreSorting : object {
    private static MessageParser`1<ScoreSorting> _parser;
    private UnknownFieldSet _unknownFields;
    public static int DescendingFieldNumber;
    private bool descending_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<ScoreSorting> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool Descending { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ScoreSorting(ScoreSorting other);
    private static ScoreSorting();
    public static MessageParser`1<ScoreSorting> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual ScoreSorting Clone();
    public bool get_Descending();
    public void set_Descending(bool value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(ScoreSorting other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(ScoreSorting other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.SearchQueryRequest : object {
    private static MessageParser`1<SearchQueryRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int IndexNameFieldNumber;
    private string indexName_;
    public static int QueryFieldNumber;
    private Query query_;
    public static int ScanConsistencyFieldNumber;
    private ScanConsistency scanConsistency_;
    public static int LimitFieldNumber;
    private UInt32 limit_;
    public static int SkipFieldNumber;
    private UInt32 skip_;
    public static int IncludeExplanationFieldNumber;
    private bool includeExplanation_;
    public static int HighlightStyleFieldNumber;
    private HighlightStyle highlightStyle_;
    public static int HighlightFieldsFieldNumber;
    private static FieldCodec`1<string> _repeated_highlightFields_codec;
    private RepeatedField`1<string> highlightFields_;
    public static int FieldsFieldNumber;
    private static FieldCodec`1<string> _repeated_fields_codec;
    private RepeatedField`1<string> fields_;
    public static int SortFieldNumber;
    private static FieldCodec`1<Sorting> _repeated_sort_codec;
    private RepeatedField`1<Sorting> sort_;
    public static int DisableScoringFieldNumber;
    private bool disableScoring_;
    public static int CollectionsFieldNumber;
    private static FieldCodec`1<string> _repeated_collections_codec;
    private RepeatedField`1<string> collections_;
    public static int IncludeLocationsFieldNumber;
    private bool includeLocations_;
    public static int FacetsFieldNumber;
    private static Codec<string, Facet> _map_facets_codec;
    private MapField`2<string, Facet> facets_;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<SearchQueryRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string IndexName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Query Query { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ScanConsistency ScanConsistency { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 Limit { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 Skip { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool IncludeExplanation { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public HighlightStyle HighlightStyle { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<string> HighlightFields { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<string> Fields { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<Sorting> Sort { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool DisableScoring { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<string> Collections { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool IncludeLocations { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MapField`2<string, Facet> Facets { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBucketName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScopeName { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public SearchQueryRequest(SearchQueryRequest other);
    private static SearchQueryRequest();
    public static MessageParser`1<SearchQueryRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual SearchQueryRequest Clone();
    public string get_IndexName();
    public void set_IndexName(string value);
    public Query get_Query();
    public void set_Query(Query value);
    public ScanConsistency get_ScanConsistency();
    public void set_ScanConsistency(ScanConsistency value);
    public UInt32 get_Limit();
    public void set_Limit(UInt32 value);
    public UInt32 get_Skip();
    public void set_Skip(UInt32 value);
    public bool get_IncludeExplanation();
    public void set_IncludeExplanation(bool value);
    public HighlightStyle get_HighlightStyle();
    public void set_HighlightStyle(HighlightStyle value);
    public RepeatedField`1<string> get_HighlightFields();
    public RepeatedField`1<string> get_Fields();
    public RepeatedField`1<Sorting> get_Sort();
    public bool get_DisableScoring();
    public void set_DisableScoring(bool value);
    public RepeatedField`1<string> get_Collections();
    public bool get_IncludeLocations();
    public void set_IncludeLocations(bool value);
    public MapField`2<string, Facet> get_Facets();
    public string get_BucketName();
    public void set_BucketName(string value);
    public bool get_HasBucketName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBucketName();
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public bool get_HasScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScopeName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(SearchQueryRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(SearchQueryRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.SearchQueryResponse : object {
    private static MessageParser`1<SearchQueryResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int HitsFieldNumber;
    private static FieldCodec`1<SearchQueryRow> _repeated_hits_codec;
    private RepeatedField`1<SearchQueryRow> hits_;
    public static int FacetsFieldNumber;
    private static Codec<string, FacetResult> _map_facets_codec;
    private MapField`2<string, FacetResult> facets_;
    public static int MetaDataFieldNumber;
    private MetaData metaData_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<SearchQueryResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<SearchQueryRow> Hits { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MapField`2<string, FacetResult> Facets { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MetaData MetaData { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public SearchQueryResponse(SearchQueryResponse other);
    private static SearchQueryResponse();
    public static MessageParser`1<SearchQueryResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual SearchQueryResponse Clone();
    public RepeatedField`1<SearchQueryRow> get_Hits();
    public MapField`2<string, FacetResult> get_Facets();
    public MetaData get_MetaData();
    public void set_MetaData(MetaData value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(SearchQueryResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(SearchQueryResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public static class Couchbase.Protostellar.Search.V1.SearchReflection : object {
    private static FileDescriptor descriptor;
    public static FileDescriptor Descriptor { get; }
    private static SearchReflection();
    public static FileDescriptor get_Descriptor();
}
public static class Couchbase.Protostellar.Search.V1.SearchService : object {
    private static string __ServiceName;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<SearchQueryRequest> __Marshaller_couchbase_search_v1_SearchQueryRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<SearchQueryResponse> __Marshaller_couchbase_search_v1_SearchQueryResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<SearchQueryRequest, SearchQueryResponse> __Method_SearchQuery;
    public static ServiceDescriptor Descriptor { get; }
    private static SearchService();
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static void __Helper_SerializeMessage(IMessage message, SerializationContext context);
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static T __Helper_DeserializeMessage(DeserializationContext context, MessageParser`1<T> parser);
    public static ServiceDescriptor get_Descriptor();
}
public class Couchbase.Protostellar.Search.V1.Sorting : object {
    private static MessageParser`1<Sorting> _parser;
    private UnknownFieldSet _unknownFields;
    public static int FieldSortingFieldNumber;
    public static int GeoDistanceSortingFieldNumber;
    public static int IdSortingFieldNumber;
    public static int ScoreSortingFieldNumber;
    private object sorting_;
    private SortingOneofCase sortingCase_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<Sorting> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public FieldSorting FieldSorting { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public GeoDistanceSorting GeoDistanceSorting { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public IdSorting IdSorting { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ScoreSorting ScoreSorting { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public SortingOneofCase SortingCase { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Sorting(Sorting other);
    private static Sorting();
    public static MessageParser`1<Sorting> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual Sorting Clone();
    public FieldSorting get_FieldSorting();
    public void set_FieldSorting(FieldSorting value);
    public GeoDistanceSorting get_GeoDistanceSorting();
    public void set_GeoDistanceSorting(GeoDistanceSorting value);
    public IdSorting get_IdSorting();
    public void set_IdSorting(IdSorting value);
    public ScoreSorting get_ScoreSorting();
    public void set_ScoreSorting(ScoreSorting value);
    public SortingOneofCase get_SortingCase();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearSorting();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(Sorting other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(Sorting other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.TermFacet : object {
    private static MessageParser`1<TermFacet> _parser;
    private UnknownFieldSet _unknownFields;
    public static int FieldFieldNumber;
    private string field_;
    public static int SizeFieldNumber;
    private UInt32 size_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<TermFacet> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Field { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 Size { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TermFacet(TermFacet other);
    private static TermFacet();
    public static MessageParser`1<TermFacet> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual TermFacet Clone();
    public string get_Field();
    public void set_Field(string value);
    public UInt32 get_Size();
    public void set_Size(UInt32 value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(TermFacet other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(TermFacet other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.TermQuery : object {
    private static MessageParser`1<TermQuery> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BoostFieldNumber;
    private float boost_;
    public static int FieldFieldNumber;
    private string field_;
    public static int TermFieldNumber;
    private string term_;
    public static int FuzzinessFieldNumber;
    private ulong fuzziness_;
    public static int PrefixLengthFieldNumber;
    private ulong prefixLength_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<TermQuery> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public float Boost { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBoost { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Field { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasField { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Term { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Fuzziness { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasFuzziness { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong PrefixLength { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasPrefixLength { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TermQuery(TermQuery other);
    private static TermQuery();
    public static MessageParser`1<TermQuery> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual TermQuery Clone();
    public float get_Boost();
    public void set_Boost(float value);
    public bool get_HasBoost();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBoost();
    public string get_Field();
    public void set_Field(string value);
    public bool get_HasField();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearField();
    public string get_Term();
    public void set_Term(string value);
    public ulong get_Fuzziness();
    public void set_Fuzziness(ulong value);
    public bool get_HasFuzziness();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearFuzziness();
    public ulong get_PrefixLength();
    public void set_PrefixLength(ulong value);
    public bool get_HasPrefixLength();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearPrefixLength();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(TermQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(TermQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.TermRangeQuery : object {
    private static MessageParser`1<TermRangeQuery> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BoostFieldNumber;
    private float boost_;
    public static int FieldFieldNumber;
    private string field_;
    public static int MinFieldNumber;
    private string min_;
    public static int MaxFieldNumber;
    private string max_;
    public static int InclusiveMinFieldNumber;
    private bool inclusiveMin_;
    public static int InclusiveMaxFieldNumber;
    private bool inclusiveMax_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<TermRangeQuery> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public float Boost { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBoost { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Field { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasField { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Min { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasMin { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Max { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasMax { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool InclusiveMin { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasInclusiveMin { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool InclusiveMax { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasInclusiveMax { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TermRangeQuery(TermRangeQuery other);
    private static TermRangeQuery();
    public static MessageParser`1<TermRangeQuery> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual TermRangeQuery Clone();
    public float get_Boost();
    public void set_Boost(float value);
    public bool get_HasBoost();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBoost();
    public string get_Field();
    public void set_Field(string value);
    public bool get_HasField();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearField();
    public string get_Min();
    public void set_Min(string value);
    public bool get_HasMin();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearMin();
    public string get_Max();
    public void set_Max(string value);
    public bool get_HasMax();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearMax();
    public bool get_InclusiveMin();
    public void set_InclusiveMin(bool value);
    public bool get_HasInclusiveMin();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearInclusiveMin();
    public bool get_InclusiveMax();
    public void set_InclusiveMax(bool value);
    public bool get_HasInclusiveMax();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearInclusiveMax();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(TermRangeQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(TermRangeQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Search.V1.WildcardQuery : object {
    private static MessageParser`1<WildcardQuery> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BoostFieldNumber;
    private float boost_;
    public static int FieldFieldNumber;
    private string field_;
    public static int WildcardFieldNumber;
    private string wildcard_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<WildcardQuery> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public float Boost { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasBoost { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Field { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasField { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Wildcard { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public WildcardQuery(WildcardQuery other);
    private static WildcardQuery();
    public static MessageParser`1<WildcardQuery> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual WildcardQuery Clone();
    public float get_Boost();
    public void set_Boost(float value);
    public bool get_HasBoost();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearBoost();
    public string get_Field();
    public void set_Field(string value);
    public bool get_HasField();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearField();
    public string get_Wildcard();
    public void set_Wildcard(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(WildcardQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(WildcardQuery other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Transactions.V1.TransactionBeginAttemptRequest : object {
    private static MessageParser`1<TransactionBeginAttemptRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int TransactionIdFieldNumber;
    private string transactionId_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<TransactionBeginAttemptRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string TransactionId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasTransactionId { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TransactionBeginAttemptRequest(TransactionBeginAttemptRequest other);
    private static TransactionBeginAttemptRequest();
    public static MessageParser`1<TransactionBeginAttemptRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual TransactionBeginAttemptRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_TransactionId();
    public void set_TransactionId(string value);
    public bool get_HasTransactionId();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearTransactionId();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(TransactionBeginAttemptRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(TransactionBeginAttemptRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Transactions.V1.TransactionBeginAttemptResponse : object {
    private static MessageParser`1<TransactionBeginAttemptResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int TransactionIdFieldNumber;
    private string transactionId_;
    public static int AttemptIdFieldNumber;
    private string attemptId_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<TransactionBeginAttemptResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string TransactionId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string AttemptId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TransactionBeginAttemptResponse(TransactionBeginAttemptResponse other);
    private static TransactionBeginAttemptResponse();
    public static MessageParser`1<TransactionBeginAttemptResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual TransactionBeginAttemptResponse Clone();
    public string get_TransactionId();
    public void set_TransactionId(string value);
    public string get_AttemptId();
    public void set_AttemptId(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(TransactionBeginAttemptResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(TransactionBeginAttemptResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Transactions.V1.TransactionCommitRequest : object {
    private static MessageParser`1<TransactionCommitRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int TransactionIdFieldNumber;
    private string transactionId_;
    public static int AttemptIdFieldNumber;
    private string attemptId_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<TransactionCommitRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string TransactionId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string AttemptId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TransactionCommitRequest(TransactionCommitRequest other);
    private static TransactionCommitRequest();
    public static MessageParser`1<TransactionCommitRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual TransactionCommitRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_TransactionId();
    public void set_TransactionId(string value);
    public string get_AttemptId();
    public void set_AttemptId(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(TransactionCommitRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(TransactionCommitRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Transactions.V1.TransactionCommitResponse : object {
    private static MessageParser`1<TransactionCommitResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<TransactionCommitResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TransactionCommitResponse(TransactionCommitResponse other);
    private static TransactionCommitResponse();
    public static MessageParser`1<TransactionCommitResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual TransactionCommitResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(TransactionCommitResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(TransactionCommitResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Transactions.V1.TransactionGetRequest : object {
    private static MessageParser`1<TransactionGetRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int TransactionIdFieldNumber;
    private string transactionId_;
    public static int AttemptIdFieldNumber;
    private string attemptId_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int KeyFieldNumber;
    private string key_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<TransactionGetRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string TransactionId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string AttemptId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Key { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TransactionGetRequest(TransactionGetRequest other);
    private static TransactionGetRequest();
    public static MessageParser`1<TransactionGetRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual TransactionGetRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_TransactionId();
    public void set_TransactionId(string value);
    public string get_AttemptId();
    public void set_AttemptId(string value);
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public string get_CollectionName();
    public void set_CollectionName(string value);
    public string get_Key();
    public void set_Key(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(TransactionGetRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(TransactionGetRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Transactions.V1.TransactionGetResponse : object {
    private static MessageParser`1<TransactionGetResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int CasFieldNumber;
    private ulong cas_;
    public static int ValueFieldNumber;
    private ByteString value_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<TransactionGetResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ByteString Value { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TransactionGetResponse(TransactionGetResponse other);
    private static TransactionGetResponse();
    public static MessageParser`1<TransactionGetResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual TransactionGetResponse Clone();
    public ulong get_Cas();
    public void set_Cas(ulong value);
    public ByteString get_Value();
    public void set_Value(ByteString value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(TransactionGetResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(TransactionGetResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Transactions.V1.TransactionInsertRequest : object {
    private static MessageParser`1<TransactionInsertRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int TransactionIdFieldNumber;
    private string transactionId_;
    public static int AttemptIdFieldNumber;
    private string attemptId_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int KeyFieldNumber;
    private string key_;
    public static int ValueFieldNumber;
    private ByteString value_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<TransactionInsertRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string TransactionId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string AttemptId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Key { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ByteString Value { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TransactionInsertRequest(TransactionInsertRequest other);
    private static TransactionInsertRequest();
    public static MessageParser`1<TransactionInsertRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual TransactionInsertRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_TransactionId();
    public void set_TransactionId(string value);
    public string get_AttemptId();
    public void set_AttemptId(string value);
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public string get_CollectionName();
    public void set_CollectionName(string value);
    public string get_Key();
    public void set_Key(string value);
    public ByteString get_Value();
    public void set_Value(ByteString value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(TransactionInsertRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(TransactionInsertRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Transactions.V1.TransactionInsertResponse : object {
    private static MessageParser`1<TransactionInsertResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int CasFieldNumber;
    private ulong cas_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<TransactionInsertResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TransactionInsertResponse(TransactionInsertResponse other);
    private static TransactionInsertResponse();
    public static MessageParser`1<TransactionInsertResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual TransactionInsertResponse Clone();
    public ulong get_Cas();
    public void set_Cas(ulong value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(TransactionInsertResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(TransactionInsertResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Transactions.V1.TransactionRemoveRequest : object {
    private static MessageParser`1<TransactionRemoveRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int TransactionIdFieldNumber;
    private string transactionId_;
    public static int AttemptIdFieldNumber;
    private string attemptId_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int KeyFieldNumber;
    private string key_;
    public static int CasFieldNumber;
    private ulong cas_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<TransactionRemoveRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string TransactionId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string AttemptId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Key { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TransactionRemoveRequest(TransactionRemoveRequest other);
    private static TransactionRemoveRequest();
    public static MessageParser`1<TransactionRemoveRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual TransactionRemoveRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_TransactionId();
    public void set_TransactionId(string value);
    public string get_AttemptId();
    public void set_AttemptId(string value);
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public string get_CollectionName();
    public void set_CollectionName(string value);
    public string get_Key();
    public void set_Key(string value);
    public ulong get_Cas();
    public void set_Cas(ulong value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(TransactionRemoveRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(TransactionRemoveRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Transactions.V1.TransactionRemoveResponse : object {
    private static MessageParser`1<TransactionRemoveResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int CasFieldNumber;
    private ulong cas_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<TransactionRemoveResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TransactionRemoveResponse(TransactionRemoveResponse other);
    private static TransactionRemoveResponse();
    public static MessageParser`1<TransactionRemoveResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual TransactionRemoveResponse Clone();
    public ulong get_Cas();
    public void set_Cas(ulong value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(TransactionRemoveResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(TransactionRemoveResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Transactions.V1.TransactionReplaceRequest : object {
    private static MessageParser`1<TransactionReplaceRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int TransactionIdFieldNumber;
    private string transactionId_;
    public static int AttemptIdFieldNumber;
    private string attemptId_;
    public static int ScopeNameFieldNumber;
    private string scopeName_;
    public static int CollectionNameFieldNumber;
    private string collectionName_;
    public static int KeyFieldNumber;
    private string key_;
    public static int CasFieldNumber;
    private ulong cas_;
    public static int ValueFieldNumber;
    private ByteString value_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<TransactionReplaceRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string TransactionId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string AttemptId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ScopeName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string CollectionName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string Key { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ByteString Value { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TransactionReplaceRequest(TransactionReplaceRequest other);
    private static TransactionReplaceRequest();
    public static MessageParser`1<TransactionReplaceRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual TransactionReplaceRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_TransactionId();
    public void set_TransactionId(string value);
    public string get_AttemptId();
    public void set_AttemptId(string value);
    public string get_ScopeName();
    public void set_ScopeName(string value);
    public string get_CollectionName();
    public void set_CollectionName(string value);
    public string get_Key();
    public void set_Key(string value);
    public ulong get_Cas();
    public void set_Cas(ulong value);
    public ByteString get_Value();
    public void set_Value(ByteString value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(TransactionReplaceRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(TransactionReplaceRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Transactions.V1.TransactionReplaceResponse : object {
    private static MessageParser`1<TransactionReplaceResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int CasFieldNumber;
    private ulong cas_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<TransactionReplaceResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong Cas { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TransactionReplaceResponse(TransactionReplaceResponse other);
    private static TransactionReplaceResponse();
    public static MessageParser`1<TransactionReplaceResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual TransactionReplaceResponse Clone();
    public ulong get_Cas();
    public void set_Cas(ulong value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(TransactionReplaceResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(TransactionReplaceResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Transactions.V1.TransactionRollbackRequest : object {
    private static MessageParser`1<TransactionRollbackRequest> _parser;
    private UnknownFieldSet _unknownFields;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int TransactionIdFieldNumber;
    private string transactionId_;
    public static int AttemptIdFieldNumber;
    private string attemptId_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<TransactionRollbackRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string TransactionId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string AttemptId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TransactionRollbackRequest(TransactionRollbackRequest other);
    private static TransactionRollbackRequest();
    public static MessageParser`1<TransactionRollbackRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual TransactionRollbackRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_TransactionId();
    public void set_TransactionId(string value);
    public string get_AttemptId();
    public void set_AttemptId(string value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(TransactionRollbackRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(TransactionRollbackRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.Transactions.V1.TransactionRollbackResponse : object {
    private static MessageParser`1<TransactionRollbackResponse> _parser;
    private UnknownFieldSet _unknownFields;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<TransactionRollbackResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TransactionRollbackResponse(TransactionRollbackResponse other);
    private static TransactionRollbackResponse();
    public static MessageParser`1<TransactionRollbackResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual TransactionRollbackResponse Clone();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(TransactionRollbackResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(TransactionRollbackResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public static class Couchbase.Protostellar.Transactions.V1.TransactionsReflection : object {
    private static FileDescriptor descriptor;
    public static FileDescriptor Descriptor { get; }
    private static TransactionsReflection();
    public static FileDescriptor get_Descriptor();
}
public static class Couchbase.Protostellar.Transactions.V1.TransactionsService : object {
    private static string __ServiceName;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<TransactionBeginAttemptRequest> __Marshaller_couchbase_transactions_v1_TransactionBeginAttemptRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<TransactionBeginAttemptResponse> __Marshaller_couchbase_transactions_v1_TransactionBeginAttemptResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<TransactionCommitRequest> __Marshaller_couchbase_transactions_v1_TransactionCommitRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<TransactionCommitResponse> __Marshaller_couchbase_transactions_v1_TransactionCommitResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<TransactionRollbackRequest> __Marshaller_couchbase_transactions_v1_TransactionRollbackRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<TransactionRollbackResponse> __Marshaller_couchbase_transactions_v1_TransactionRollbackResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<TransactionGetRequest> __Marshaller_couchbase_transactions_v1_TransactionGetRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<TransactionGetResponse> __Marshaller_couchbase_transactions_v1_TransactionGetResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<TransactionInsertRequest> __Marshaller_couchbase_transactions_v1_TransactionInsertRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<TransactionInsertResponse> __Marshaller_couchbase_transactions_v1_TransactionInsertResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<TransactionReplaceRequest> __Marshaller_couchbase_transactions_v1_TransactionReplaceRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<TransactionReplaceResponse> __Marshaller_couchbase_transactions_v1_TransactionReplaceResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<TransactionRemoveRequest> __Marshaller_couchbase_transactions_v1_TransactionRemoveRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<TransactionRemoveResponse> __Marshaller_couchbase_transactions_v1_TransactionRemoveResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<TransactionBeginAttemptRequest, TransactionBeginAttemptResponse> __Method_TransactionBeginAttempt;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<TransactionCommitRequest, TransactionCommitResponse> __Method_TransactionCommit;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<TransactionRollbackRequest, TransactionRollbackResponse> __Method_TransactionRollback;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<TransactionGetRequest, TransactionGetResponse> __Method_TransactionGet;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<TransactionInsertRequest, TransactionInsertResponse> __Method_TransactionInsert;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<TransactionReplaceRequest, TransactionReplaceResponse> __Method_TransactionReplace;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<TransactionRemoveRequest, TransactionRemoveResponse> __Method_TransactionRemove;
    public static ServiceDescriptor Descriptor { get; }
    private static TransactionsService();
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static void __Helper_SerializeMessage(IMessage message, SerializationContext context);
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static T __Helper_DeserializeMessage(DeserializationContext context, MessageParser`1<T> parser);
    public static ServiceDescriptor get_Descriptor();
}
public class Couchbase.Protostellar.View.V1.ViewQueryRequest : object {
    private static MessageParser`1<ViewQueryRequest> _parser;
    private UnknownFieldSet _unknownFields;
    private int _hasBits0;
    public static int BucketNameFieldNumber;
    private string bucketName_;
    public static int DesignDocumentNameFieldNumber;
    private string designDocumentName_;
    public static int ViewNameFieldNumber;
    private string viewName_;
    public static int SkipFieldNumber;
    private UInt32 skip_;
    public static int LimitFieldNumber;
    private UInt32 limit_;
    public static int ScanConsistencyFieldNumber;
    private ScanConsistency scanConsistency_;
    public static int ReduceFieldNumber;
    private bool reduce_;
    public static int GroupFieldNumber;
    private bool group_;
    public static int GroupLevelFieldNumber;
    private UInt32 groupLevel_;
    public static int KeyFieldNumber;
    private ByteString key_;
    public static int KeysFieldNumber;
    private static FieldCodec`1<ByteString> _repeated_keys_codec;
    private RepeatedField`1<ByteString> keys_;
    public static int StartKeyFieldNumber;
    private ByteString startKey_;
    public static int EndKeyFieldNumber;
    private ByteString endKey_;
    public static int InclusiveEndFieldNumber;
    private bool inclusiveEnd_;
    public static int StartKeyDocIdFieldNumber;
    private string startKeyDocId_;
    public static int EndKeyDocIdFieldNumber;
    private string endKeyDocId_;
    public static int OnErrorFieldNumber;
    private ErrorMode onError_;
    public static int DebugFieldNumber;
    private bool debug_;
    public static int NamespaceFieldNumber;
    private Namespace namespace_;
    public static int OrderFieldNumber;
    private Order order_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<ViewQueryRequest> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string BucketName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string DesignDocumentName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string ViewName { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 Skip { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasSkip { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 Limit { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasLimit { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ScanConsistency ScanConsistency { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasScanConsistency { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool Reduce { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasReduce { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool Group { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasGroup { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UInt32 GroupLevel { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasGroupLevel { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ByteString Key { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasKey { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<ByteString> Keys { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ByteString StartKey { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasStartKey { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ByteString EndKey { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasEndKey { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool InclusiveEnd { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasInclusiveEnd { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string StartKeyDocId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasStartKeyDocId { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public string EndKeyDocId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasEndKeyDocId { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ErrorMode OnError { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasOnError { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool Debug { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasDebug { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Namespace Namespace { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasNamespace { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Order Order { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasOrder { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ViewQueryRequest(ViewQueryRequest other);
    private static ViewQueryRequest();
    public static MessageParser`1<ViewQueryRequest> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual ViewQueryRequest Clone();
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_DesignDocumentName();
    public void set_DesignDocumentName(string value);
    public string get_ViewName();
    public void set_ViewName(string value);
    public UInt32 get_Skip();
    public void set_Skip(UInt32 value);
    public bool get_HasSkip();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearSkip();
    public UInt32 get_Limit();
    public void set_Limit(UInt32 value);
    public bool get_HasLimit();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearLimit();
    public ScanConsistency get_ScanConsistency();
    public void set_ScanConsistency(ScanConsistency value);
    public bool get_HasScanConsistency();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearScanConsistency();
    public bool get_Reduce();
    public void set_Reduce(bool value);
    public bool get_HasReduce();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearReduce();
    public bool get_Group();
    public void set_Group(bool value);
    public bool get_HasGroup();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearGroup();
    public UInt32 get_GroupLevel();
    public void set_GroupLevel(UInt32 value);
    public bool get_HasGroupLevel();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearGroupLevel();
    public ByteString get_Key();
    public void set_Key(ByteString value);
    public bool get_HasKey();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearKey();
    public RepeatedField`1<ByteString> get_Keys();
    public ByteString get_StartKey();
    public void set_StartKey(ByteString value);
    public bool get_HasStartKey();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearStartKey();
    public ByteString get_EndKey();
    public void set_EndKey(ByteString value);
    public bool get_HasEndKey();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearEndKey();
    public bool get_InclusiveEnd();
    public void set_InclusiveEnd(bool value);
    public bool get_HasInclusiveEnd();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearInclusiveEnd();
    public string get_StartKeyDocId();
    public void set_StartKeyDocId(string value);
    public bool get_HasStartKeyDocId();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearStartKeyDocId();
    public string get_EndKeyDocId();
    public void set_EndKeyDocId(string value);
    public bool get_HasEndKeyDocId();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearEndKeyDocId();
    public ErrorMode get_OnError();
    public void set_OnError(ErrorMode value);
    public bool get_HasOnError();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearOnError();
    public bool get_Debug();
    public void set_Debug(bool value);
    public bool get_HasDebug();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearDebug();
    public Namespace get_Namespace();
    public void set_Namespace(Namespace value);
    public bool get_HasNamespace();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearNamespace();
    public Order get_Order();
    public void set_Order(Order value);
    public bool get_HasOrder();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearOrder();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(ViewQueryRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(ViewQueryRequest other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public class Couchbase.Protostellar.View.V1.ViewQueryResponse : object {
    private static MessageParser`1<ViewQueryResponse> _parser;
    private UnknownFieldSet _unknownFields;
    public static int RowsFieldNumber;
    private static FieldCodec`1<Row> _repeated_rows_codec;
    private RepeatedField`1<Row> rows_;
    public static int MetaDataFieldNumber;
    private MetaData metaData_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<ViewQueryResponse> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<Row> Rows { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public MetaData MetaData { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ViewQueryResponse(ViewQueryResponse other);
    private static ViewQueryResponse();
    public static MessageParser`1<ViewQueryResponse> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual ViewQueryResponse Clone();
    public RepeatedField`1<Row> get_Rows();
    public MetaData get_MetaData();
    public void set_MetaData(MetaData value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(ViewQueryResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(ViewQueryResponse other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
public static class Couchbase.Protostellar.View.V1.ViewReflection : object {
    private static FileDescriptor descriptor;
    public static FileDescriptor Descriptor { get; }
    private static ViewReflection();
    public static FileDescriptor get_Descriptor();
}
public static class Couchbase.Protostellar.View.V1.ViewService : object {
    private static string __ServiceName;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<ViewQueryRequest> __Marshaller_couchbase_view_v1_ViewQueryRequest;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<ViewQueryResponse> __Marshaller_couchbase_view_v1_ViewQueryResponse;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<ViewQueryRequest, ViewQueryResponse> __Method_ViewQuery;
    public static ServiceDescriptor Descriptor { get; }
    private static ViewService();
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static void __Helper_SerializeMessage(IMessage message, SerializationContext context);
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static T __Helper_DeserializeMessage(DeserializationContext context, MessageParser`1<T> parser);
    public static ServiceDescriptor get_Descriptor();
}
[MeansImplicitUseAttribute]
internal class Couchbase.PublicAPIAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Comment>k__BackingField;
    [NotNullAttribute]
public string Comment { get; private set; }
    public PublicAPIAttribute(string comment);
    [CompilerGeneratedAttribute]
public string get_Comment();
    [CompilerGeneratedAttribute]
private void set_Comment(string value);
}
[AttributeUsageAttribute("64")]
internal class Couchbase.PureAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Couchbase.Query.BlockQueryResult`1 : QueryResultBase`1<T> {
    private ITypeSerializer _deserializer;
    private bool _enumerated;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IEnumerable`1<T> _rows;
    public BlockQueryResult`1(Stream responseStream, ITypeSerializer deserializer, IDisposable ownedForCleanup);
    [AsyncStateMachineAttribute("Couchbase.Query.BlockQueryResult`1/<InitializeAsync>d__4")]
public virtual Task InitializeAsync(CancellationToken cancellationToken);
    public virtual IAsyncEnumerator`1<T> GetAsyncEnumerator(CancellationToken cancellationToken);
}
public enum Couchbase.Query.Compression : Enum {
    public int value__;
    public static Compression None;
    public static Compression ZIP;
    public static Compression RLE;
    public static Compression LZMA;
    public static Compression LZO;
}
public enum Couchbase.Query.Couchbase.N1QL.Encoding : Enum {
    public int value__;
    [DescriptionAttribute("UTF-8")]
public static Encoding Utf8;
}
public class Couchbase.Query.Error : object {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Severity <Severity>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Temp>k__BackingField;
    [CompilerGeneratedAttribute]
private Reason <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Retry>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalData>k__BackingField;
    [JsonPropertyAttribute("msg")]
[JsonPropertyNameAttribute("msg")]
public string Message { get; public set; }
    [JsonPropertyAttribute("code")]
public int Code { get; public set; }
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyAttribute("sev")]
public Severity Severity { get; public set; }
    [JsonPropertyAttribute("temp")]
public bool Temp { get; public set; }
    [JsonPropertyAttribute("reason")]
public Reason Reason { get; public set; }
    [JsonPropertyAttribute("retry")]
public bool Retry { get; public set; }
    [InterfaceStabilityAttribute("2")]
[JsonExtensionDataAttribute]
[JsonExtensionDataAttribute]
public IDictionary`2<string, object> AdditionalData { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public int get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(int value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Severity get_Severity();
    [CompilerGeneratedAttribute]
public void set_Severity(Severity value);
    [CompilerGeneratedAttribute]
public bool get_Temp();
    [CompilerGeneratedAttribute]
public void set_Temp(bool value);
    [CompilerGeneratedAttribute]
public Reason get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(Reason value);
    [CompilerGeneratedAttribute]
public bool get_Retry();
    [CompilerGeneratedAttribute]
public void set_Retry(bool value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_AdditionalData();
    [CompilerGeneratedAttribute]
public void set_AdditionalData(IDictionary`2<string, object> value);
}
internal class Couchbase.Query.ErrorData : object {
    [CompilerGeneratedAttribute]
private string <msg>k__BackingField;
    [CompilerGeneratedAttribute]
private int <code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <name>k__BackingField;
    [CompilerGeneratedAttribute]
private Severity <sev>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <temp>k__BackingField;
    [CompilerGeneratedAttribute]
private Reason <reason>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <retry>k__BackingField;
    public string msg { get; public set; }
    public int code { get; public set; }
    public string name { get; public set; }
    public Severity sev { get; public set; }
    public bool temp { get; public set; }
    public Reason reason { get; public set; }
    public bool retry { get; public set; }
    [CompilerGeneratedAttribute]
public string get_msg();
    [CompilerGeneratedAttribute]
public void set_msg(string value);
    [CompilerGeneratedAttribute]
public int get_code();
    [CompilerGeneratedAttribute]
public void set_code(int value);
    [CompilerGeneratedAttribute]
public string get_name();
    [CompilerGeneratedAttribute]
public void set_name(string value);
    [CompilerGeneratedAttribute]
public Severity get_sev();
    [CompilerGeneratedAttribute]
public void set_sev(Severity value);
    [CompilerGeneratedAttribute]
public bool get_temp();
    [CompilerGeneratedAttribute]
public void set_temp(bool value);
    [CompilerGeneratedAttribute]
public Reason get_reason();
    [CompilerGeneratedAttribute]
public void set_reason(Reason value);
    [CompilerGeneratedAttribute]
public bool get_retry();
    [CompilerGeneratedAttribute]
public void set_retry(bool value);
    internal Error ToError();
}
internal enum Couchbase.Query.ErrorPrepared : Enum {
    public int value__;
    public static ErrorPrepared None;
    public static ErrorPrepared PreparedStatementNotFound;
    public static ErrorPrepared Unrecognized;
    public static ErrorPrepared UnableToDecode;
    public static ErrorPrepared Generic;
    public static ErrorPrepared IndexNotFound;
}
internal class Couchbase.Query.FailureCountingUri : Uri {
    private int _failedCount;
    public int FailedCount { get; }
    public FailureCountingUri(string uriString);
    public FailureCountingUri(string uriString, UriKind uriKind);
    public FailureCountingUri(Uri baseUri, string relativeUri);
    public FailureCountingUri(Uri baseUri, Uri relativeUri);
    public void IncrementFailed();
    public void ClearFailed();
    public int get_FailedCount();
    public bool IsHealthy(int threshold);
}
public enum Couchbase.Query.Format : Enum {
    public int value__;
    public static Format Json;
    public static Format Csv;
    public static Format Tsv;
    public static Format Xml;
}
public interface Couchbase.Query.IQueryCacheInvalidator {
    public abstract virtual int InvalidateQueryCache();
}
[NullableContextAttribute("1")]
internal interface Couchbase.Query.IQueryClient {
    public Nullable`1<DateTime> LastActivity { get; }
    public abstract virtual Nullable`1<DateTime> get_LastActivity();
    public abstract virtual Task`1<IQueryResult`1<T>> QueryAsync(string statement, QueryOptions options);
    public abstract virtual void UpdateClusterCapabilities(ClusterCapabilities clusterCapabilities);
}
[NullableContextAttribute("1")]
public interface Couchbase.Query.IQueryResult`1 {
    public IAsyncEnumerable`1<T> Rows { get; }
    [NullableAttribute("2")]
public QueryMetaData MetaData { get; }
    public List`1<Error> Errors { get; }
    public abstract virtual IAsyncEnumerable`1<T> get_Rows();
    [NullableContextAttribute("2")]
public abstract virtual QueryMetaData get_MetaData();
    public abstract virtual List`1<Error> get_Errors();
}
internal class Couchbase.Query.MetricsData : object {
    [CompilerGeneratedAttribute]
private string <ElapsedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExecutionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <ResultCount>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <ResultSize>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <MutationCount>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <ErrorCount>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <WarningCount>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <SortCount>k__BackingField;
    public string ElapsedTime { get; public set; }
    public string ExecutionTime { get; public set; }
    public UInt32 ResultCount { get; public set; }
    public UInt32 ResultSize { get; public set; }
    public UInt32 MutationCount { get; public set; }
    public UInt32 ErrorCount { get; public set; }
    public UInt32 WarningCount { get; public set; }
    public UInt32 SortCount { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ElapsedTime();
    [CompilerGeneratedAttribute]
public void set_ElapsedTime(string value);
    [CompilerGeneratedAttribute]
public string get_ExecutionTime();
    [CompilerGeneratedAttribute]
public void set_ExecutionTime(string value);
    [CompilerGeneratedAttribute]
public UInt32 get_ResultCount();
    [CompilerGeneratedAttribute]
public void set_ResultCount(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_ResultSize();
    [CompilerGeneratedAttribute]
public void set_ResultSize(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_MutationCount();
    [CompilerGeneratedAttribute]
public void set_MutationCount(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_ErrorCount();
    [CompilerGeneratedAttribute]
public void set_ErrorCount(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_WarningCount();
    [CompilerGeneratedAttribute]
public void set_WarningCount(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_SortCount();
    [CompilerGeneratedAttribute]
public void set_SortCount(UInt32 value);
    internal QueryMetrics ToMetrics();
}
public class Couchbase.Query.MutationState : object {
    private List`1<MutationToken> _tokens;
    public static MutationState From(IMutationResult[] mutationResults);
    public static MutationState From(MutationState mutationState);
    public MutationState Add(IMutationResult[] mutationResults);
    public MutationState Add(MutationState mutationState);
    public sealed virtual IEnumerator`1<MutationToken> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    internal Dictionary`2<string, Dictionary`2<string, long>> ExportForSearch(string indexName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Query.QueryClient : HttpServiceBase {
    internal static string Error5000MsgQueryPortIndexNotFound;
    internal static string TransactionsBeginWork;
    private static string DefaultClientContextId;
    private ConcurrentDictionary`2<string, QueryPlan> _queryCache;
    private SystemTextJsonSerializer _queryPlanSerializer;
    private IServiceUriProvider _serviceUriProvider;
    private ITypeSerializer _serializer;
    private IFallbackTypeSerializerProvider _fallbackTypeSerializerProvider;
    private ILogger`1<QueryClient> _logger;
    private IRequestTracer _tracer;
    internal bool EnhancedPreparedStatementsEnabled;
    internal bool UseReplicaEnabled;
    public QueryClient(ICouchbaseHttpClientFactory clientFactory, IServiceUriProvider serviceUriProvider, ITypeSerializer serializer, IFallbackTypeSerializerProvider fallbackTypeSerializerProvider, ILogger`1<QueryClient> logger, IRequestTracer tracer);
    private static QueryClient();
    public sealed virtual int InvalidateQueryCache();
    [AsyncStateMachineAttribute("Couchbase.Query.QueryClient/<QueryAsync>d__14`1")]
public sealed virtual Task`1<IQueryResult`1<T>> QueryAsync(string statement, QueryOptions options);
    [AsyncStateMachineAttribute("Couchbase.Query.QueryClient/<ExecuteQuery>d__15`1")]
private Task`1<IQueryResult`1<T>> ExecuteQuery(QueryOptions options, ITypeSerializer serializer, IRequestSpan span);
    public sealed virtual void UpdateClusterCapabilities(ClusterCapabilities clusterCapabilities);
    private string GetErrorMessage(QueryResultBase`1<T> queryResult, string requestId, HttpStatusCode statusCodeFallback);
    private IRequestSpan RootSpan(string operation, QueryOptions options);
}
[ExtensionAttribute]
internal static class Couchbase.Query.QueryClientExtensions : object {
    [ExtensionAttribute]
public static Task`1<IQueryResult`1<T>> QueryAsync(IQueryClient client, string statement, Action`1<QueryOptions> configureOptions);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsByRefLikeAttribute]
[ObsoleteAttribute("Types with embedded references are not supported in this version of your compiler.", "True")]
[CompilerFeatureRequiredAttribute("RefStructs")]
[InterpolatedStringHandlerAttribute]
public class Couchbase.Query.QueryInterpolatedStringHandler : ValueType {
    private static String[] Parameters;
    private DefaultInterpolatedStringHandler _innerHandler;
    private QueryOptions _queryOptions;
    private int _parameterCount;
    public QueryOptions QueryOptions { get; }
    public QueryInterpolatedStringHandler(int literalLength, int formattedCount);
    public QueryInterpolatedStringHandler(int literalLength, int formattedCount, QueryOptions queryOptions);
    private static QueryInterpolatedStringHandler();
    [IsReadOnlyAttribute]
public QueryOptions get_QueryOptions();
    public void AppendLiteral(string value);
    [NullableContextAttribute("0")]
public void AppendFormatted(ReadOnlySpan`1<char> value);
    [NullableContextAttribute("0")]
public void AppendFormatted(ReadOnlySpan`1<char> value, int alignment, string format);
    public void AppendFormatted(T value);
    [NullableContextAttribute("2")]
public void AppendFormatted(T value, string format);
    public void AppendFormatted(T value, int alignment);
    [NullableContextAttribute("2")]
public void AppendFormatted(T value, int alignment, string format);
    [NullableContextAttribute("2")]
public void AppendFormatted(object value, int alignment, string format);
    [NullableContextAttribute("2")]
public void AppendFormatted(string value);
    [NullableContextAttribute("2")]
public void AppendFormatted(string value, int alignment, string format);
    [IsReadOnlyAttribute]
public virtual string ToString();
    public string ToStringAndClear();
    private void AppendParameterReference();
}
public class Couchbase.Query.QueryMetaData : object {
    [CompilerGeneratedAttribute]
private string <ClientContextId>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryMetrics <Metrics>k__BackingField;
    [DynamicAttribute]
[CompilerGeneratedAttribute]
private object <Profile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestId>k__BackingField;
    [DynamicAttribute]
[CompilerGeneratedAttribute]
private object <Signature>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<QueryWarning> <Warnings>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <LastDispatchedToNode>k__BackingField;
    public string ClientContextId { get; public set; }
    public QueryMetrics Metrics { get; public set; }
    [DynamicAttribute]
public object Profile { get; public set; }
    public string RequestId { get; public set; }
    [DynamicAttribute]
public object Signature { get; public set; }
    public QueryStatus Status { get; public set; }
    public List`1<QueryWarning> Warnings { get; public set; }
    [InterfaceStabilityAttribute("2")]
public Uri LastDispatchedToNode { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ClientContextId();
    [CompilerGeneratedAttribute]
public void set_ClientContextId(string value);
    [CompilerGeneratedAttribute]
public QueryMetrics get_Metrics();
    [CompilerGeneratedAttribute]
public void set_Metrics(QueryMetrics value);
    [CompilerGeneratedAttribute]
public object get_Profile();
    [CompilerGeneratedAttribute]
public void set_Profile(object value);
    [CompilerGeneratedAttribute]
public string get_RequestId();
    [CompilerGeneratedAttribute]
public void set_RequestId(string value);
    [CompilerGeneratedAttribute]
public object get_Signature();
    [CompilerGeneratedAttribute]
public void set_Signature(object value);
    [CompilerGeneratedAttribute]
public QueryStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(QueryStatus value);
    [CompilerGeneratedAttribute]
public List`1<QueryWarning> get_Warnings();
    [CompilerGeneratedAttribute]
public void set_Warnings(List`1<QueryWarning> value);
    [CompilerGeneratedAttribute]
public Uri get_LastDispatchedToNode();
    [CompilerGeneratedAttribute]
public void set_LastDispatchedToNode(Uri value);
}
public class Couchbase.Query.QueryMetrics : object {
    [CompilerGeneratedAttribute]
private string <ElapsedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExecutionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <ResultCount>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <ResultSize>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <MutationCount>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <ErrorCount>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <WarningCount>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <SortCount>k__BackingField;
    [ObsoleteAttribute("Use ElapsedTime property instead.")]
public string ElaspedTime { get; public set; }
    public string ElapsedTime { get; public set; }
    public string ExecutionTime { get; public set; }
    public UInt32 ResultCount { get; public set; }
    public UInt32 ResultSize { get; public set; }
    public UInt32 MutationCount { get; public set; }
    public UInt32 ErrorCount { get; public set; }
    public UInt32 WarningCount { get; public set; }
    public UInt32 SortCount { get; public set; }
    public string get_ElaspedTime();
    public void set_ElaspedTime(string value);
    [CompilerGeneratedAttribute]
public string get_ElapsedTime();
    [CompilerGeneratedAttribute]
public void set_ElapsedTime(string value);
    [CompilerGeneratedAttribute]
public string get_ExecutionTime();
    [CompilerGeneratedAttribute]
public void set_ExecutionTime(string value);
    [CompilerGeneratedAttribute]
public UInt32 get_ResultCount();
    [CompilerGeneratedAttribute]
public void set_ResultCount(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_ResultSize();
    [CompilerGeneratedAttribute]
public void set_ResultSize(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_MutationCount();
    [CompilerGeneratedAttribute]
public void set_MutationCount(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_ErrorCount();
    [CompilerGeneratedAttribute]
public void set_ErrorCount(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_WarningCount();
    [CompilerGeneratedAttribute]
public void set_WarningCount(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_SortCount();
    [CompilerGeneratedAttribute]
public void set_SortCount(UInt32 value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{DebuggerDisplay:nq}")]
public class Couchbase.Query.QueryOptions : object {
    private static string GetFormValuesAsJsonUnreferencedCodeMessage;
    private static string GetFormValuesAsJsonDynamicCodeMessage;
    [CompilerGeneratedAttribute]
private static QueryOptions <Default>k__BackingField;
    public static ReadOnlyRecord DefaultReadOnly;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<object> _arguments;
    private Dictionary`2<string, object> _parameters;
    private Dictionary`2<string, object> _rawParameters;
    private bool _autoExecute;
    private bool _includeMetrics;
    private Nullable`1<int> _maxServerParallelism;
    private Nullable`1<int> _pipelineBatch;
    private Nullable`1<int> _pipelineCapacity;
    [NullableAttribute("2")]
private QueryPlan _preparedPayload;
    private QueryProfile _profile;
    private Nullable`1<bool> _readOnly;
    private Nullable`1<int> _scanCapacity;
    private Nullable`1<QueryScanConsistencyInternal> _scanConsistency;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<string, Dictionary`2<string, ScanVectorComponent>> _scanVectors;
    private Nullable`1<TimeSpan> _scanWait;
    [NullableAttribute("2")]
private string _statement;
    private Nullable`1<TimeSpan> _timeOut;
    private bool _flexIndex;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _isUsed;
    private bool _preserveExpiry;
    private Nullable`1<bool> _useReplica;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <BucketName>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ScopeName>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <Token>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Uri <LastDispatchedNode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAdHoc>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <CurrentContextId>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ITypeSerializer <Serializer>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <QueryContext>k__BackingField;
    internal static QueryOptions Default { get; }
    internal bool UseReplicaHasValue { get; }
    [NullableAttribute("2")]
internal string BucketName { get; internal set; }
    [NullableAttribute("2")]
internal string ScopeName { get; internal set; }
    [NullableAttribute("2")]
internal IRequestSpan RequestSpanValue { get; private set; }
    [NullableAttribute("2")]
internal IRetryStrategy RetryStrategyValue { get; internal set; }
    internal CancellationToken Token { get; internal set; }
    internal Nullable`1<TimeSpan> TimeoutValue { get; internal set; }
    [NullableAttribute("2")]
internal string StatementValue { get; }
    [NullableAttribute("2")]
[InterfaceStabilityAttribute("2")]
public Uri LastDispatchedNode { get; public set; }
    [MemberNotNullWhenAttribute("True", "_preparedPayload")]
public bool IsPrepared { get; }
    public bool IsAdHoc { get; private set; }
    [NullableAttribute("2")]
public string CurrentContextId { get; private set; }
    [NullableAttribute("2")]
public ITypeSerializer Serializer { get; public set; }
    internal bool IsReadOnly { get; }
    [NullableAttribute("2")]
internal string QueryContext { get; internal set; }
    private string DebuggerDisplay { get; }
    public QueryOptions(string statement);
    public QueryOptions(QueryPlan plan, string originalStatement);
    private static QueryOptions();
    [CompilerGeneratedAttribute]
internal static QueryOptions get_Default();
    internal QueryOptions CloneIfUsedAlready();
    public QueryOptions UseReplica(Nullable`1<bool> useReplica);
    internal bool get_UseReplicaHasValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal string get_BucketName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_BucketName(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal string get_ScopeName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_ScopeName(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    public QueryOptions RequestSpan(IRequestSpan span);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_RetryStrategyValue(IRetryStrategy value);
    public QueryOptions RetryStrategy(IRetryStrategy retryStrategy);
    [CompilerGeneratedAttribute]
internal CancellationToken get_Token();
    [CompilerGeneratedAttribute]
internal void set_Token(CancellationToken value);
    internal Nullable`1<TimeSpan> get_TimeoutValue();
    internal void set_TimeoutValue(Nullable`1<TimeSpan> value);
    [NullableContextAttribute("2")]
internal string get_StatementValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Uri get_LastDispatchedNode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_LastDispatchedNode(Uri value);
    internal string GetAllParametersAsJson(ITypeSerializer serializer);
    private void WriteAllParametersAsSystemTextJson(Utf8JsonWriter writer, SystemTextJsonSerializer serializer);
    private void WriteAllParametersAsGenericJson(Utf8JsonWriter writer, ITypeSerializer serializer);
    [MemberNotNullWhenAttribute("True", "_preparedPayload")]
public bool get_IsPrepared();
    [CompilerGeneratedAttribute]
public bool get_IsAdHoc();
    [CompilerGeneratedAttribute]
private void set_IsAdHoc(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_CurrentContextId();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_CurrentContextId(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ITypeSerializer get_Serializer();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Serializer(ITypeSerializer value);
    internal bool get_IsReadOnly();
    public QueryOptions ConsistentWith(MutationState mutationState);
    public QueryOptions MaxServerParallelism(int parallelism);
    public QueryOptions AdHoc(bool adHoc);
    public QueryOptions Prepared(QueryPlan preparedPlan, string originalStatement);
    internal QueryOptions Statement(string statement);
    public QueryOptions Timeout(TimeSpan timeOut);
    [ObsoleteAttribute("Use QueryOptions.Readonly property instead.")]
public QueryOptions ReadOnly(bool readOnly);
    public QueryOptions Readonly(bool readOnly);
    public QueryOptions Metrics(bool includeMetrics);
    public QueryOptions Parameter(string name, object value);
    public QueryOptions Parameter(object value);
    public QueryOptions Parameter(KeyValuePair`2[] parameters);
    public QueryOptions Parameter(Object[] parameters);
    [InterfaceStabilityAttribute("1")]
public QueryOptions PreserveExpiry(bool preserveExpiry);
    public QueryOptions ScanConsistency(QueryScanConsistency scanConsistency);
    internal QueryOptions ScanConsistencyInternal(QueryScanConsistencyInternal scanConsistency);
    public QueryOptions ScanWait(TimeSpan scanWait);
    public QueryOptions ClientContextId(string clientContextId);
    public QueryOptions Raw(string name, object value);
    public QueryOptions ScanCap(int capacity);
    public QueryOptions PipelineBatch(int batchSize);
    public QueryOptions PipelineCap(int capacity);
    public QueryOptions Profile(QueryProfile profile);
    public QueryOptions CancellationToken(CancellationToken cancellationToken);
    public QueryOptions FlexIndex(bool flexIndex);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal string get_QueryContext();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_QueryContext(string value);
    internal QueryOptions QueryPlan(QueryPlan queryPlan);
    internal QueryOptions AutoExecute(bool autoExecute);
    internal QueryOptionsDto CreateDto(ITypeSerializer serializer);
    [RequiresUnreferencedCodeAttribute("GetFormValuesAsJson uses Newtonsoft.Json which requires unreferenced code and is incompatible with trimming.")]
[RequiresDynamicCodeAttribute("GetFormValuesAsJson uses Newtonsoft.Json which may required dynamic code.")]
public IDictionary`2<string, object> GetFormValues();
    [RequiresUnreferencedCodeAttribute("GetFormValuesAsJson uses Newtonsoft.Json which requires unreferenced code and is incompatible with trimming.")]
[RequiresDynamicCodeAttribute("GetFormValuesAsJson uses Newtonsoft.Json which may required dynamic code.")]
public string GetFormValuesAsJson();
    internal HttpContent GetRequestBody(ITypeSerializer serializer, IFallbackTypeSerializerProvider fallbackTypeSerializerProvider);
    public static QueryOptions Create();
    public static QueryOptions Create(string statement);
    public static QueryOptions Create(QueryPlan plan, string originalStatement);
    [RequiresUnreferencedCodeAttribute("GetFormValuesAsJson uses Newtonsoft.Json which requires unreferenced code and is incompatible with trimming.")]
[RequiresDynamicCodeAttribute("GetFormValuesAsJson uses Newtonsoft.Json which may required dynamic code.")]
private string get_DebuggerDisplay();
    [NullableContextAttribute("2")]
public void Deconstruct(IReadOnlyList`1& arguments, IReadOnlyDictionary`2& parameters, IReadOnlyDictionary`2& rawParameters, Boolean& autoExecute, Nullable`1& includeMetrics, Nullable`1& maxServerParallelism, Nullable`1& pipelineBatch, Nullable`1& pipelineCapacity, QueryPlan& preparedPayload, QueryProfile& profile, Nullable`1& readOnly, Nullable`1& scanCapacity, QueryScanConsistency& scanConsistency, Nullable`1& scanWait, String& statement, Nullable`1& timeOut, Boolean& flexIndex, Boolean& isUsed, Boolean& preserveExpiry, String& bucketName, String& scopeName, IRequestSpan& requestSpanValue, IRetryStrategy& retryStrategyValue, CancellationToken& token, Uri& lastDispatchedNode, Boolean& isPrepared, Boolean& isAdHoc, String& currentContextId, ITypeSerializer& serializer, String& queryContext, Nullable`1& useReplica);
    public ReadOnlyRecord AsReadOnly();
    private static QueryScanConsistency ConvertScanConsistency(Nullable`1<QueryScanConsistencyInternal> scanConsistency);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Query.QueryOptionsDto : object {
    [CompilerGeneratedAttribute]
private string <Prepared>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PreparedEncoded>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Statement>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<TypeSerializerWrapper> <Arguments>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AutoExecute>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientContextId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FlexIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeMetrics>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MaxServerParallelism>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PreserveExpiry>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PipelineBatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PipelineCapacity>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryProfile <Profile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QueryContext>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ScanCapacity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<QueryScanConsistencyInternal> <ScanConsistency>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, Dictionary`2<string, ScanVectorComponent>> <ScanVectors>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <ScanWait>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UseReplica>k__BackingField;
    [JsonPropertyNameAttribute("prepared")]
[JsonIgnoreAttribute]
public string Prepared { get; public set; }
    [JsonPropertyNameAttribute("encoded_plan")]
[JsonIgnoreAttribute]
public string PreparedEncoded { get; public set; }
    [JsonPropertyNameAttribute("statement")]
[JsonIgnoreAttribute]
public string Statement { get; public set; }
    [JsonPropertyNameAttribute("args")]
[JsonIgnoreAttribute]
public List`1<TypeSerializerWrapper> Arguments { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsonExtensionDataAttribute]
public Dictionary`2<string, object> AdditionalProperties { get; public set; }
    [JsonPropertyNameAttribute("auto_execute")]
[JsonIgnoreAttribute]
public bool AutoExecute { get; public set; }
    [JsonPropertyNameAttribute("client_context_id")]
[JsonIgnoreAttribute]
public string ClientContextId { get; public set; }
    [JsonPropertyNameAttribute("use_fts")]
[JsonIgnoreAttribute]
public bool FlexIndex { get; public set; }
    [JsonPropertyNameAttribute("metrics")]
[JsonIgnoreAttribute]
public Nullable`1<bool> IncludeMetrics { get; public set; }
    [JsonPropertyNameAttribute("max_parallelism")]
[JsonIgnoreAttribute]
public string MaxServerParallelism { get; public set; }
    [JsonPropertyNameAttribute("preserve_expiry")]
[JsonIgnoreAttribute]
public bool PreserveExpiry { get; public set; }
    [JsonPropertyNameAttribute("pipeline_batch")]
[JsonIgnoreAttribute]
public Nullable`1<int> PipelineBatch { get; public set; }
    [JsonPropertyNameAttribute("pipeline_cap")]
[JsonIgnoreAttribute]
public Nullable`1<int> PipelineCapacity { get; public set; }
    [JsonPropertyNameAttribute("profile")]
[JsonIgnoreAttribute]
[JsonConverterAttribute("Couchbase.Core.IO.Serializers.SystemTextJson.EnumDescriptionJsonConverter`1<Couchbase.Query.QueryProfile>")]
public QueryProfile Profile { get; public set; }
    [JsonPropertyNameAttribute("query_context")]
[JsonIgnoreAttribute]
public string QueryContext { get; public set; }
    [JsonPropertyNameAttribute("readonly")]
[JsonIgnoreAttribute]
public Nullable`1<bool> ReadOnly { get; public set; }
    [JsonPropertyNameAttribute("scan_cap")]
[JsonIgnoreAttribute]
public Nullable`1<int> ScanCapacity { get; public set; }
    [JsonPropertyNameAttribute("scan_consistency")]
[JsonIgnoreAttribute]
[JsonConverterAttribute("Couchbase.Core.IO.Serializers.SystemTextJson.NullableEnumDescriptionJsonConverter`1<Couchbase.Query.QueryScanConsistencyInternal>")]
public Nullable`1<QueryScanConsistencyInternal> ScanConsistency { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsonPropertyNameAttribute("scan_vectors")]
[JsonIgnoreAttribute]
public Dictionary`2<string, Dictionary`2<string, ScanVectorComponent>> ScanVectors { get; public set; }
    [JsonPropertyNameAttribute("scan_wait")]
[JsonIgnoreAttribute]
[JsonConverterAttribute("Couchbase.Core.IO.Serializers.SystemTextJson.MillisecondsStringJsonConverter")]
public Nullable`1<TimeSpan> ScanWait { get; public set; }
    [JsonPropertyNameAttribute("timeout")]
[JsonIgnoreAttribute]
[JsonConverterAttribute("Couchbase.Core.IO.Serializers.SystemTextJson.MillisecondsStringJsonConverter")]
public Nullable`1<TimeSpan> Timeout { get; public set; }
    [JsonPropertyNameAttribute("use_replica")]
[JsonIgnoreAttribute]
public string UseReplica { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Prepared();
    [CompilerGeneratedAttribute]
public void set_Prepared(string value);
    [CompilerGeneratedAttribute]
public string get_PreparedEncoded();
    [CompilerGeneratedAttribute]
public void set_PreparedEncoded(string value);
    [CompilerGeneratedAttribute]
public string get_Statement();
    [CompilerGeneratedAttribute]
public void set_Statement(string value);
    [CompilerGeneratedAttribute]
public List`1<TypeSerializerWrapper> get_Arguments();
    [CompilerGeneratedAttribute]
public void set_Arguments(List`1<TypeSerializerWrapper> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public bool get_AutoExecute();
    [CompilerGeneratedAttribute]
public void set_AutoExecute(bool value);
    [CompilerGeneratedAttribute]
public string get_ClientContextId();
    [CompilerGeneratedAttribute]
public void set_ClientContextId(string value);
    [CompilerGeneratedAttribute]
public bool get_FlexIndex();
    [CompilerGeneratedAttribute]
public void set_FlexIndex(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IncludeMetrics();
    [CompilerGeneratedAttribute]
public void set_IncludeMetrics(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_MaxServerParallelism();
    [CompilerGeneratedAttribute]
public void set_MaxServerParallelism(string value);
    [CompilerGeneratedAttribute]
public bool get_PreserveExpiry();
    [CompilerGeneratedAttribute]
public void set_PreserveExpiry(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_PipelineBatch();
    [CompilerGeneratedAttribute]
public void set_PipelineBatch(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_PipelineCapacity();
    [CompilerGeneratedAttribute]
public void set_PipelineCapacity(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public QueryProfile get_Profile();
    [CompilerGeneratedAttribute]
public void set_Profile(QueryProfile value);
    [CompilerGeneratedAttribute]
public string get_QueryContext();
    [CompilerGeneratedAttribute]
public void set_QueryContext(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnly();
    [CompilerGeneratedAttribute]
public void set_ReadOnly(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ScanCapacity();
    [CompilerGeneratedAttribute]
public void set_ScanCapacity(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<QueryScanConsistencyInternal> get_ScanConsistency();
    [CompilerGeneratedAttribute]
public void set_ScanConsistency(Nullable`1<QueryScanConsistencyInternal> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, Dictionary`2<string, ScanVectorComponent>> get_ScanVectors();
    [CompilerGeneratedAttribute]
public void set_ScanVectors(Dictionary`2<string, Dictionary`2<string, ScanVectorComponent>> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_ScanWait();
    [CompilerGeneratedAttribute]
public void set_ScanWait(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_Timeout();
    [CompilerGeneratedAttribute]
public void set_Timeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public string get_UseReplica();
    [CompilerGeneratedAttribute]
public void set_UseReplica(string value);
    [DynamicDependencyAttribute("512", "Couchbase.Query.QueryOptionsDto")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2072")]
public Dictionary`2<string, object> ToDictionary();
}
public class Couchbase.Query.QueryPlan : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Signature>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EncodedPlan>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Operator>k__BackingField;
    [JsonPropertyAttribute("name")]
[JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyAttribute("text")]
[JsonPropertyNameAttribute("text")]
public string Text { get; public set; }
    [JsonPropertyAttribute("signature")]
[JsonPropertyNameAttribute("signature")]
public object Signature { get; public set; }
    [JsonPropertyAttribute("encoded_plan")]
[JsonPropertyNameAttribute("encoded_plan")]
public string EncodedPlan { get; public set; }
    [JsonPropertyAttribute("operator")]
[JsonPropertyNameAttribute("operator")]
public object Operator { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public object get_Signature();
    [CompilerGeneratedAttribute]
public void set_Signature(object value);
    [CompilerGeneratedAttribute]
public string get_EncodedPlan();
    [CompilerGeneratedAttribute]
public void set_EncodedPlan(string value);
    [CompilerGeneratedAttribute]
public object get_Operator();
    [CompilerGeneratedAttribute]
public void set_Operator(object value);
}
public enum Couchbase.Query.QueryProfile : Enum {
    public int value__;
    [DescriptionAttribute("off")]
public static QueryProfile Off;
    [DescriptionAttribute("phases")]
public static QueryProfile Phases;
    [DescriptionAttribute("timings")]
public static QueryProfile Timings;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal abstract class Couchbase.Query.QueryResultBase`1 : object {
    private IDisposable _ownedForCleanup;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Stream <ResponseStream>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryMetaData <MetaData>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpStatusCode <HttpStatusCode>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private List`1<Error> <Errors>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Success>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <NoRetryException>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PreparedPlanName>k__BackingField;
    [NullableAttribute("1")]
public IAsyncEnumerable`1<T> Rows { get; }
    [NullableAttribute("1")]
protected Stream ResponseStream { get; }
    public QueryMetaData MetaData { get; protected set; }
    public HttpStatusCode HttpStatusCode { get; public set; }
    [NullableAttribute("1")]
public List`1<Error> Errors { get; }
    public bool Success { get; internal set; }
    public string Message { get; internal set; }
    public RetryReason RetryReason { get; protected set; }
    public Exception NoRetryException { get; public set; }
    public string PreparedPlanName { get; protected set; }
    [NullableContextAttribute("1")]
protected QueryResultBase`1(Stream responseStream, IDisposable ownedForCleanup);
    [NullableContextAttribute("1")]
public sealed virtual IAsyncEnumerable`1<T> get_Rows();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected Stream get_ResponseStream();
    [CompilerGeneratedAttribute]
public sealed virtual QueryMetaData get_MetaData();
    [CompilerGeneratedAttribute]
protected void set_MetaData(QueryMetaData value);
    [CompilerGeneratedAttribute]
public HttpStatusCode get_HttpStatusCode();
    [CompilerGeneratedAttribute]
public void set_HttpStatusCode(HttpStatusCode value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual List`1<Error> get_Errors();
    [CompilerGeneratedAttribute]
public bool get_Success();
    [CompilerGeneratedAttribute]
internal void set_Success(bool value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
internal void set_Message(string value);
    public bool ShouldRetry(bool enableEnhancedPreparedStatements);
    private RetryReason GetRetryReason(bool enableEnhancedPreparedStatements);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
    [CompilerGeneratedAttribute]
protected void set_RetryReason(RetryReason value);
    [CompilerGeneratedAttribute]
public sealed virtual Exception get_NoRetryException();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NoRetryException(Exception value);
    [CompilerGeneratedAttribute]
public string get_PreparedPlanName();
    [CompilerGeneratedAttribute]
protected void set_PreparedPlanName(string value);
    [NullableContextAttribute("1")]
public abstract virtual Task InitializeAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
public abstract virtual IAsyncEnumerator`1<T> GetAsyncEnumerator(CancellationToken cancellationToken);
    public virtual void Dispose();
}
[ExtensionAttribute]
internal static class Couchbase.Query.QueryResultExtensions : object {
    private static List`1<QueryStatus> StaleStatuses;
    private static List`1<int> StaleErrorCodes;
    private static List`1<int> PreparedErrorCodes;
    private static QueryResultExtensions();
    [ExtensionAttribute]
public static bool IsQueryPlanStale(IQueryResult`1<T> queryResult);
    [ExtensionAttribute]
public static CouchbaseException CreateExceptionForError(IQueryResult`1<T> result, QueryErrorContext context);
    [ExtensionAttribute]
public static Exception ThrowExceptionOnError(IQueryResult`1<T> result, QueryErrorContext context);
    [ExtensionAttribute]
public static bool InternalFailure(IQueryResult`1<T> result, Boolean& isRetryable);
}
public enum Couchbase.Query.QueryScanConsistency : Enum {
    public int value__;
    [DescriptionAttribute("none")]
public static QueryScanConsistency NotBounded;
    [DescriptionAttribute("request")]
public static QueryScanConsistency RequestPlus;
}
internal enum Couchbase.Query.QueryScanConsistencyInternal : Enum {
    public int value__;
    [DescriptionAttribute("not_bounded")]
public static QueryScanConsistencyInternal NotBounded;
    [DescriptionAttribute("request_plus")]
public static QueryScanConsistencyInternal RequestPlus;
    [DescriptionAttribute("at_plus")]
public static QueryScanConsistencyInternal AtPlus;
}
public static class Couchbase.Query.QuerySequenceGenerator : object {
    private static int _sequenceId;
    public static UInt32 GetNext();
    public static string GetNextAsString();
    public static void Reset();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonSourceGenerationOptionsAttribute]
[JsonSerializableAttribute("Couchbase.Query.QueryOptionsDto")]
[JsonSerializableAttribute("Couchbase.Query.ScanVectorComponent")]
[JsonSerializableAttribute("Couchbase.Core.IO.Serializers.SystemTextJson.TypeSerializerWrapper")]
[JsonSerializableAttribute("Couchbase.Query.Error")]
[JsonSerializableAttribute("Couchbase.Query.ErrorData")]
[JsonSerializableAttribute("Couchbase.Query.QueryWarning")]
[JsonSerializableAttribute("Couchbase.Query.MetricsData")]
[JsonSerializableAttribute("Couchbase.Query.QueryPlan")]
[JsonSerializableAttribute("Couchbase.Core.Exceptions.Query.QueryErrorContext")]
[GeneratedCodeAttribute("System.Text.Json.SourceGeneration", "8.0.10.31311")]
internal class Couchbase.Query.QuerySerializerContext : JsonSerializerContext {
    [NullableAttribute("2")]
private JsonTypeInfo`1<bool> _Boolean;
    [NullableAttribute("2")]
private JsonTypeInfo`1<Nullable`1<bool>> _NullableBoolean;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<QueryErrorContext> _QueryErrorContext;
    [NullableAttribute("2")]
private JsonTypeInfo`1<TypeSerializerWrapper> _TypeSerializerWrapper;
    [NullableAttribute("2")]
private JsonTypeInfo`1<RetryReason> _RetryReason;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Error> _QueryError;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<ErrorData> _QueryErrorData;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<MetricsData> _QueryMetricsData;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<QueryOptionsDto> _QueryOptionsDto;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<QueryPlan> _QueryPlan;
    [NullableAttribute("2")]
private JsonTypeInfo`1<QueryProfile> _QueryProfile;
    [NullableAttribute("2")]
private JsonTypeInfo`1<QueryScanConsistencyInternal> _QueryScanConsistencyInternal;
    [NullableAttribute("2")]
private JsonTypeInfo`1<Nullable`1<QueryScanConsistencyInternal>> _NullableQueryScanConsistencyInternal;
    [NullableAttribute("2")]
private JsonTypeInfo`1<QueryStatus> _QueryStatus;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<QueryWarning> _QueryWarning;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Reason> _Reason;
    [NullableAttribute("2")]
private JsonTypeInfo`1<ScanVectorComponent> _ScanVectorComponent;
    [NullableAttribute("2")]
private JsonTypeInfo`1<Severity> _Severity;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Dictionary`2<string, ScanVectorComponent>> _DictionaryStringScanVectorComponent;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Dictionary`2<string, Dictionary`2<string, ScanVectorComponent>>> _DictionaryStringDictionaryStringScanVectorComponent;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Dictionary`2<string, object>> _DictionaryStringObject;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IDictionary`2<string, object>> _IDictionaryStringObject;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<TypeSerializerWrapper>> _ListTypeSerializerWrapper;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<RetryReason>> _ListRetryReason;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<Error>> _ListError;
    [NullableAttribute("2")]
private JsonTypeInfo`1<HttpStatusCode> _HttpStatusCode;
    [NullableAttribute("2")]
private JsonTypeInfo`1<TimeSpan> _TimeSpan;
    [NullableAttribute("2")]
private JsonTypeInfo`1<Nullable`1<TimeSpan>> _NullableTimeSpan;
    [NullableAttribute("2")]
private JsonTypeInfo`1<int> _Int32;
    [NullableAttribute("2")]
private JsonTypeInfo`1<Nullable`1<int>> _NullableInt32;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<object> _Object;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<string> _String;
    [NullableAttribute("2")]
private JsonTypeInfo`1<UInt32> _UInt32;
    private static JsonSerializerOptions s_defaultOptions;
    [CompilerGeneratedAttribute]
private static QuerySerializerContext <Default>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JsonSerializerOptions <GeneratedSerializerOptions>k__BackingField;
    private static JsonEncodedText PropName_msg;
    private static JsonEncodedText PropName_code;
    private static JsonEncodedText PropName_name;
    private static JsonEncodedText PropName_sev;
    private static JsonEncodedText PropName_temp;
    private static JsonEncodedText PropName_reason;
    private static JsonEncodedText PropName_retry;
    private static JsonEncodedText PropName_elapsedTime;
    private static JsonEncodedText PropName_executionTime;
    private static JsonEncodedText PropName_resultCount;
    private static JsonEncodedText PropName_resultSize;
    private static JsonEncodedText PropName_mutationCount;
    private static JsonEncodedText PropName_errorCount;
    private static JsonEncodedText PropName_warningCount;
    private static JsonEncodedText PropName_sortCount;
    private static JsonEncodedText PropName_message;
    private static JsonEncodedText PropName_caller;
    private static JsonEncodedText PropName_key;
    public JsonTypeInfo`1<bool> Boolean { get; }
    public JsonTypeInfo`1<Nullable`1<bool>> NullableBoolean { get; }
    public JsonTypeInfo`1<QueryErrorContext> QueryErrorContext { get; }
    public JsonTypeInfo`1<TypeSerializerWrapper> TypeSerializerWrapper { get; }
    public JsonTypeInfo`1<RetryReason> RetryReason { get; }
    public JsonTypeInfo`1<Error> QueryError { get; }
    public JsonTypeInfo`1<ErrorData> QueryErrorData { get; }
    public JsonTypeInfo`1<MetricsData> QueryMetricsData { get; }
    public JsonTypeInfo`1<QueryOptionsDto> QueryOptionsDto { get; }
    public JsonTypeInfo`1<QueryPlan> QueryPlan { get; }
    public JsonTypeInfo`1<QueryProfile> QueryProfile { get; }
    public JsonTypeInfo`1<QueryScanConsistencyInternal> QueryScanConsistencyInternal { get; }
    public JsonTypeInfo`1<Nullable`1<QueryScanConsistencyInternal>> NullableQueryScanConsistencyInternal { get; }
    public JsonTypeInfo`1<QueryStatus> QueryStatus { get; }
    public JsonTypeInfo`1<QueryWarning> QueryWarning { get; }
    public JsonTypeInfo`1<Reason> Reason { get; }
    public JsonTypeInfo`1<ScanVectorComponent> ScanVectorComponent { get; }
    public JsonTypeInfo`1<Severity> Severity { get; }
    public JsonTypeInfo`1<Dictionary`2<string, ScanVectorComponent>> DictionaryStringScanVectorComponent { get; }
    public JsonTypeInfo`1<Dictionary`2<string, Dictionary`2<string, ScanVectorComponent>>> DictionaryStringDictionaryStringScanVectorComponent { get; }
    public JsonTypeInfo`1<Dictionary`2<string, object>> DictionaryStringObject { get; }
    public JsonTypeInfo`1<IDictionary`2<string, object>> IDictionaryStringObject { get; }
    public JsonTypeInfo`1<List`1<TypeSerializerWrapper>> ListTypeSerializerWrapper { get; }
    public JsonTypeInfo`1<List`1<RetryReason>> ListRetryReason { get; }
    public JsonTypeInfo`1<List`1<Error>> ListError { get; }
    public JsonTypeInfo`1<HttpStatusCode> HttpStatusCode { get; }
    public JsonTypeInfo`1<TimeSpan> TimeSpan { get; }
    public JsonTypeInfo`1<Nullable`1<TimeSpan>> NullableTimeSpan { get; }
    public JsonTypeInfo`1<int> Int32 { get; }
    public JsonTypeInfo`1<Nullable`1<int>> NullableInt32 { get; }
    public JsonTypeInfo`1<object> Object { get; }
    public JsonTypeInfo`1<string> String { get; }
    public JsonTypeInfo`1<UInt32> UInt32 { get; }
    public static QuerySerializerContext Default { get; }
    [NullableAttribute("2")]
protected JsonSerializerOptions GeneratedSerializerOptions { get; }
    public QuerySerializerContext(JsonSerializerOptions options);
    private static QuerySerializerContext();
    public JsonTypeInfo`1<bool> get_Boolean();
    private JsonTypeInfo`1<bool> Create_Boolean(JsonSerializerOptions options);
    public JsonTypeInfo`1<Nullable`1<bool>> get_NullableBoolean();
    private JsonTypeInfo`1<Nullable`1<bool>> Create_NullableBoolean(JsonSerializerOptions options);
    public JsonTypeInfo`1<QueryErrorContext> get_QueryErrorContext();
    private JsonTypeInfo`1<QueryErrorContext> Create_QueryErrorContext(JsonSerializerOptions options);
    private static JsonPropertyInfo[] QueryErrorContextPropInit(JsonSerializerOptions options);
    public JsonTypeInfo`1<TypeSerializerWrapper> get_TypeSerializerWrapper();
    private JsonTypeInfo`1<TypeSerializerWrapper> Create_TypeSerializerWrapper(JsonSerializerOptions options);
    public JsonTypeInfo`1<RetryReason> get_RetryReason();
    private JsonTypeInfo`1<RetryReason> Create_RetryReason(JsonSerializerOptions options);
    public JsonTypeInfo`1<Error> get_QueryError();
    private JsonTypeInfo`1<Error> Create_QueryError(JsonSerializerOptions options);
    private static JsonPropertyInfo[] QueryErrorPropInit(JsonSerializerOptions options);
    public JsonTypeInfo`1<ErrorData> get_QueryErrorData();
    private JsonTypeInfo`1<ErrorData> Create_QueryErrorData(JsonSerializerOptions options);
    private static JsonPropertyInfo[] QueryErrorDataPropInit(JsonSerializerOptions options);
    private void QueryErrorDataSerializeHandler(Utf8JsonWriter writer, ErrorData value);
    public JsonTypeInfo`1<MetricsData> get_QueryMetricsData();
    private JsonTypeInfo`1<MetricsData> Create_QueryMetricsData(JsonSerializerOptions options);
    private static JsonPropertyInfo[] QueryMetricsDataPropInit(JsonSerializerOptions options);
    private void QueryMetricsDataSerializeHandler(Utf8JsonWriter writer, MetricsData value);
    public JsonTypeInfo`1<QueryOptionsDto> get_QueryOptionsDto();
    private JsonTypeInfo`1<QueryOptionsDto> Create_QueryOptionsDto(JsonSerializerOptions options);
    private static JsonPropertyInfo[] QueryOptionsDtoPropInit(JsonSerializerOptions options);
    public JsonTypeInfo`1<QueryPlan> get_QueryPlan();
    private JsonTypeInfo`1<QueryPlan> Create_QueryPlan(JsonSerializerOptions options);
    private static JsonPropertyInfo[] QueryPlanPropInit(JsonSerializerOptions options);
    public JsonTypeInfo`1<QueryProfile> get_QueryProfile();
    private JsonTypeInfo`1<QueryProfile> Create_QueryProfile(JsonSerializerOptions options);
    public JsonTypeInfo`1<QueryScanConsistencyInternal> get_QueryScanConsistencyInternal();
    private JsonTypeInfo`1<QueryScanConsistencyInternal> Create_QueryScanConsistencyInternal(JsonSerializerOptions options);
    public JsonTypeInfo`1<Nullable`1<QueryScanConsistencyInternal>> get_NullableQueryScanConsistencyInternal();
    private JsonTypeInfo`1<Nullable`1<QueryScanConsistencyInternal>> Create_NullableQueryScanConsistencyInternal(JsonSerializerOptions options);
    public JsonTypeInfo`1<QueryStatus> get_QueryStatus();
    private JsonTypeInfo`1<QueryStatus> Create_QueryStatus(JsonSerializerOptions options);
    public JsonTypeInfo`1<QueryWarning> get_QueryWarning();
    private JsonTypeInfo`1<QueryWarning> Create_QueryWarning(JsonSerializerOptions options);
    private static JsonPropertyInfo[] QueryWarningPropInit(JsonSerializerOptions options);
    private void QueryWarningSerializeHandler(Utf8JsonWriter writer, QueryWarning value);
    public JsonTypeInfo`1<Reason> get_Reason();
    private JsonTypeInfo`1<Reason> Create_Reason(JsonSerializerOptions options);
    private static JsonPropertyInfo[] ReasonPropInit(JsonSerializerOptions options);
    private void ReasonSerializeHandler(Utf8JsonWriter writer, Reason value);
    public JsonTypeInfo`1<ScanVectorComponent> get_ScanVectorComponent();
    private JsonTypeInfo`1<ScanVectorComponent> Create_ScanVectorComponent(JsonSerializerOptions options);
    public JsonTypeInfo`1<Severity> get_Severity();
    private JsonTypeInfo`1<Severity> Create_Severity(JsonSerializerOptions options);
    public JsonTypeInfo`1<Dictionary`2<string, ScanVectorComponent>> get_DictionaryStringScanVectorComponent();
    private JsonTypeInfo`1<Dictionary`2<string, ScanVectorComponent>> Create_DictionaryStringScanVectorComponent(JsonSerializerOptions options);
    private void DictionaryStringScanVectorComponentSerializeHandler(Utf8JsonWriter writer, Dictionary`2<string, ScanVectorComponent> value);
    public JsonTypeInfo`1<Dictionary`2<string, Dictionary`2<string, ScanVectorComponent>>> get_DictionaryStringDictionaryStringScanVectorComponent();
    private JsonTypeInfo`1<Dictionary`2<string, Dictionary`2<string, ScanVectorComponent>>> Create_DictionaryStringDictionaryStringScanVectorComponent(JsonSerializerOptions options);
    private void DictionaryStringDictionaryStringScanVectorComponentSerializeHandler(Utf8JsonWriter writer, Dictionary`2<string, Dictionary`2<string, ScanVectorComponent>> value);
    public JsonTypeInfo`1<Dictionary`2<string, object>> get_DictionaryStringObject();
    private JsonTypeInfo`1<Dictionary`2<string, object>> Create_DictionaryStringObject(JsonSerializerOptions options);
    public JsonTypeInfo`1<IDictionary`2<string, object>> get_IDictionaryStringObject();
    private JsonTypeInfo`1<IDictionary`2<string, object>> Create_IDictionaryStringObject(JsonSerializerOptions options);
    public JsonTypeInfo`1<List`1<TypeSerializerWrapper>> get_ListTypeSerializerWrapper();
    private JsonTypeInfo`1<List`1<TypeSerializerWrapper>> Create_ListTypeSerializerWrapper(JsonSerializerOptions options);
    private void ListTypeSerializerWrapperSerializeHandler(Utf8JsonWriter writer, List`1<TypeSerializerWrapper> value);
    public JsonTypeInfo`1<List`1<RetryReason>> get_ListRetryReason();
    private JsonTypeInfo`1<List`1<RetryReason>> Create_ListRetryReason(JsonSerializerOptions options);
    private void ListRetryReasonSerializeHandler(Utf8JsonWriter writer, List`1<RetryReason> value);
    public JsonTypeInfo`1<List`1<Error>> get_ListError();
    private JsonTypeInfo`1<List`1<Error>> Create_ListError(JsonSerializerOptions options);
    private void ListErrorSerializeHandler(Utf8JsonWriter writer, List`1<Error> value);
    public JsonTypeInfo`1<HttpStatusCode> get_HttpStatusCode();
    private JsonTypeInfo`1<HttpStatusCode> Create_HttpStatusCode(JsonSerializerOptions options);
    public JsonTypeInfo`1<TimeSpan> get_TimeSpan();
    private JsonTypeInfo`1<TimeSpan> Create_TimeSpan(JsonSerializerOptions options);
    public JsonTypeInfo`1<Nullable`1<TimeSpan>> get_NullableTimeSpan();
    private JsonTypeInfo`1<Nullable`1<TimeSpan>> Create_NullableTimeSpan(JsonSerializerOptions options);
    public JsonTypeInfo`1<int> get_Int32();
    private JsonTypeInfo`1<int> Create_Int32(JsonSerializerOptions options);
    public JsonTypeInfo`1<Nullable`1<int>> get_NullableInt32();
    private JsonTypeInfo`1<Nullable`1<int>> Create_NullableInt32(JsonSerializerOptions options);
    public JsonTypeInfo`1<object> get_Object();
    private JsonTypeInfo`1<object> Create_Object(JsonSerializerOptions options);
    public JsonTypeInfo`1<string> get_String();
    private JsonTypeInfo`1<string> Create_String(JsonSerializerOptions options);
    public JsonTypeInfo`1<UInt32> get_UInt32();
    private JsonTypeInfo`1<UInt32> Create_UInt32(JsonSerializerOptions options);
    [CompilerGeneratedAttribute]
public static QuerySerializerContext get_Default();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual JsonSerializerOptions get_GeneratedSerializerOptions();
    private static bool TryGetTypeInfoForRuntimeCustomConverter(JsonSerializerOptions options, JsonTypeInfo`1& jsonTypeInfo);
    private static JsonConverter GetRuntimeConverterForType(Type type, JsonSerializerOptions options);
    private static JsonConverter ExpandConverter(Type type, JsonConverter converter, JsonSerializerOptions options, bool validateCanConvert);
    private static JsonConverter`1<Nullable`1<TJsonMetadataType>> GetConverterForNullableProperty(JsonConverter converter, JsonSerializerOptions options);
    public virtual JsonTypeInfo GetTypeInfo(Type type);
    private sealed virtual override JsonTypeInfo global::System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver.GetTypeInfo(Type type, JsonSerializerOptions options);
}
public enum Couchbase.Query.QueryStatus : Enum {
    public int value__;
    public static QueryStatus Success;
    public static QueryStatus Running;
    public static QueryStatus Errors;
    public static QueryStatus Completed;
    public static QueryStatus Stopped;
    public static QueryStatus Timeout;
    public static QueryStatus Fatal;
    public static QueryStatus Failed;
}
public class Couchbase.Query.QueryWarning : object {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Code>k__BackingField;
    public string Message { get; public set; }
    public int Code { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public int get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(int value);
}
public class Couchbase.Query.Reason : object {
    [CompilerGeneratedAttribute]
private string <Caller>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [JsonPropertyAttribute("caller")]
public string Caller { get; public set; }
    [JsonPropertyAttribute("code")]
public int Code { get; public set; }
    [JsonPropertyAttribute("key")]
public string Key { get; public set; }
    [JsonPropertyAttribute("message")]
public string Message { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Caller();
    [CompilerGeneratedAttribute]
public void set_Caller(string value);
    [CompilerGeneratedAttribute]
public int get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(int value);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
}
[IsReadOnlyAttribute]
[JsonConverterAttribute("Couchbase.Query.ScanVectorComponentJsonConverter")]
internal class Couchbase.Query.ScanVectorComponent : ValueType {
    [CompilerGeneratedAttribute]
private long <SequenceNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private long <VBucketUuid>k__BackingField;
    public long SequenceNumber { get; public set; }
    public long VBucketUuid { get; public set; }
    [CompilerGeneratedAttribute]
public long get_SequenceNumber();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SequenceNumber(long value);
    [CompilerGeneratedAttribute]
public long get_VBucketUuid();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_VBucketUuid(long value);
}
internal class Couchbase.Query.ScanVectorComponentJsonConverter : JsonConverter`1<ScanVectorComponent> {
    public virtual ScanVectorComponent Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, ScanVectorComponent value, JsonSerializerOptions options);
}
public enum Couchbase.Query.Severity : Enum {
    public int value__;
    public static Severity None;
    public static Severity Severe;
    public static Severity Error;
    public static Severity Warn;
    public static Severity Info;
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Couchbase.Query.StreamingQueryResult`1 : QueryResultBase`1<T> {
    private IStreamingTypeDeserializer _deserializer;
    private Func`3<QueryResultBase`1<T>, HttpStatusCode, QueryErrorContext> _errorContextFactory;
    [NullableAttribute("2")]
private IJsonStreamReader _reader;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IAsyncEnumerator`1<T> _resultEnumerator;
    private bool _hasReadResult;
    private bool _hasFinishedReading;
    public StreamingQueryResult`1(Stream responseStream, IStreamingTypeDeserializer deserializer, Func`3<QueryResultBase`1<T>, HttpStatusCode, QueryErrorContext> errorContextFactory, IDisposable ownedForCleanup);
    [AsyncStateMachineAttribute("Couchbase.Query.StreamingQueryResult`1/<InitializeAsync>d__7")]
public virtual Task InitializeAsync(CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("Couchbase.Query.StreamingQueryResult`1/<GetAsyncEnumerator>d__8")]
public virtual IAsyncEnumerator`1<T> GetAsyncEnumerator(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Couchbase.Query.StreamingQueryResult`1/<ReadResponseAttributes>d__9")]
internal Task ReadResponseAttributes(CancellationToken cancellationToken);
    public virtual void Dispose();
}
internal class Couchbase.Query.WarningData : object {
    [CompilerGeneratedAttribute]
private string <msg>k__BackingField;
    [CompilerGeneratedAttribute]
private int <code>k__BackingField;
    public string msg { get; public set; }
    public int code { get; public set; }
    [CompilerGeneratedAttribute]
public string get_msg();
    [CompilerGeneratedAttribute]
public void set_msg(string value);
    [CompilerGeneratedAttribute]
public int get_code();
    [CompilerGeneratedAttribute]
public void set_code(int value);
    internal QueryWarning ToWarning();
}
[AttributeUsageAttribute("2112")]
internal class Couchbase.RazorSectionAttribute : Attribute {
}
internal enum Couchbase.Scheme : Enum {
    public int value__;
    public static Scheme Http;
    public static Scheme Couchbase;
    public static Scheme Couchbases;
    public static Scheme Couchbase2;
}
[ExtensionAttribute]
public static class Couchbase.ScopeExtensions : object {
    [ExtensionAttribute]
public static Task`1<IQueryResult`1<T>> QueryAsync(IScope scope, string statement, Action`1<QueryOptions> configureOptions);
    [ExtensionAttribute]
public static Task`1<IQueryResult`1<T>> QueryAsync(IScope scope, string statement);
    [ExtensionAttribute]
public static Task`1<IAnalyticsResult`1<T>> AnalyticsQueryAsync(IScope scope, string statement, Action`1<AnalyticsOptions> configureOptions);
}
public class Couchbase.Search.CouchbaseSearchResponseException : Exception {
    [CompilerGeneratedAttribute]
private SearchStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <Errors>k__BackingField;
    public SearchStatus Status { get; private set; }
    public IReadOnlyCollection`1<string> Errors { get; private set; }
    public CouchbaseSearchResponseException(string message, SearchStatus status, IList`1<string> errors);
    public CouchbaseSearchResponseException(string message, SearchStatus status, IList`1<string> errors, Exception innerException);
    [CompilerGeneratedAttribute]
public SearchStatus get_Status();
    [CompilerGeneratedAttribute]
private void set_Status(SearchStatus value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<string> get_Errors();
    [CompilerGeneratedAttribute]
private void set_Errors(IReadOnlyCollection`1<string> value);
}
public class Couchbase.Search.DateRange : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <End>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Count>k__BackingField;
    public string Name { get; public set; }
    public DateTime Start { get; public set; }
    public DateTime End { get; public set; }
    public long Count { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public DateTime get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_End();
    [CompilerGeneratedAttribute]
public void set_End(DateTime value);
    [CompilerGeneratedAttribute]
public long get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(long value);
}
public class Couchbase.Search.DateRangeFacet : SearchFacet {
    internal List`1<Range`1<DateTime>> DateRanges;
    public DateRangeFacet(string name, string field);
    public DateRangeFacet(string name, string field, int limit);
    public DateRangeFacet AddRange(string name, DateTime startDate, DateTime endDate);
    [ObsoleteAttribute("Use the overload which takes a string and two DateTimes instead.")]
public DateRangeFacet AddRange(DateTime startDate, DateTime endDate);
    public DateRangeFacet AddRange(Range`1<DateTime> range);
    public DateRangeFacet AddRanges(Range`1[] ranges);
    public virtual JProperty ToJson();
}
public class Couchbase.Search.DateRangeFacetResult : DefaultFacetResult {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<DateRange> <DateRanges>k__BackingField;
    [JsonPropertyAttribute("dateRanges")]
public IReadOnlyCollection`1<DateRange> DateRanges { get; public set; }
    [JsonPropertyAttribute("facetResultType")]
public FacetResultType FacetResultType { get; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<DateRange> get_DateRanges();
    [CompilerGeneratedAttribute]
public void set_DateRanges(IReadOnlyCollection`1<DateRange> value);
    public virtual FacetResultType get_FacetResultType();
}
public class Couchbase.Search.DefaultFacetResult : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Total>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Other>k__BackingField;
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyAttribute("field")]
public string Field { get; public set; }
    [JsonPropertyAttribute("total")]
public long Total { get; public set; }
    [JsonPropertyAttribute("missing")]
public long Missing { get; public set; }
    [JsonPropertyAttribute("other")]
public long Other { get; public set; }
    [JsonPropertyAttribute("FacetResultType")]
public FacetResultType FacetResultType { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Field();
    [CompilerGeneratedAttribute]
public void set_Field(string value);
    [CompilerGeneratedAttribute]
public sealed virtual long get_Total();
    [CompilerGeneratedAttribute]
public void set_Total(long value);
    [CompilerGeneratedAttribute]
public sealed virtual long get_Missing();
    [CompilerGeneratedAttribute]
public void set_Missing(long value);
    [CompilerGeneratedAttribute]
public sealed virtual long get_Other();
    [CompilerGeneratedAttribute]
public void set_Other(long value);
    public virtual FacetResultType get_FacetResultType();
}
public enum Couchbase.Search.FacetResultType : Enum {
    public int value__;
    public static FacetResultType Unknown;
    public static FacetResultType Term;
    public static FacetResultType NumericRange;
    public static FacetResultType DateRange;
}
internal class Couchbase.Search.FailedSearchQueryResult : object {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [JsonPropertyAttribute("error")]
internal string Message { get; internal set; }
    [JsonPropertyAttribute("status")]
internal string Status { get; internal set; }
    [CompilerGeneratedAttribute]
internal string get_Message();
    [CompilerGeneratedAttribute]
internal void set_Message(string value);
    [CompilerGeneratedAttribute]
internal string get_Status();
    [CompilerGeneratedAttribute]
internal void set_Status(string value);
}
public enum Couchbase.Search.HighLightStyle : Enum {
    public int value__;
    public static HighLightStyle None;
    public static HighLightStyle Html;
    public static HighLightStyle Ansi;
}
public interface Couchbase.Search.IFacetResult {
    public FacetResultType FacetResultType { get; }
    public string Name { get; public set; }
    public string Field { get; }
    public long Total { get; }
    public long Missing { get; }
    public long Other { get; }
    public abstract virtual FacetResultType get_FacetResultType();
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_Field();
    public abstract virtual long get_Total();
    public abstract virtual long get_Missing();
    public abstract virtual long get_Other();
}
[NullableContextAttribute("1")]
internal interface Couchbase.Search.ISearchClient {
    public Nullable`1<DateTime> LastActivity { get; }
    public abstract virtual Nullable`1<DateTime> get_LastActivity();
    public abstract virtual Task`1<ISearchResult> QueryAsync(string indexName, FtsSearchRequest ftsSearchRequest, VectorSearch vectorSearchRequest, IScope scope, CancellationToken cancellationToken);
}
public interface Couchbase.Search.ISearchFacet {
    public string Name { get; public set; }
    public string Field { get; public set; }
    public int Size { get; public set; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_Field();
    public abstract virtual void set_Field(string value);
    public abstract virtual int get_Size();
    public abstract virtual void set_Size(int value);
    public abstract virtual JProperty ToJson();
}
public interface Couchbase.Search.ISearchQuery {
    public abstract virtual ISearchQuery Boost(double boost);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public abstract virtual JObject Export();
}
public interface Couchbase.Search.ISearchQueryRow {
    public string Id { get; }
    public double Score { get; }
    public string Index { get; }
    [DynamicAttribute]
public object Explanation { get; }
    [DynamicAttribute]
public object Locations { get; }
    [DynamicAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, object> Fields { get; }
    public IDictionary`2<string, List`1<string>> Fragments { get; }
    public abstract virtual string get_Id();
    public abstract virtual double get_Score();
    public abstract virtual string get_Index();
    public abstract virtual object get_Explanation();
    public abstract virtual object get_Locations();
    public abstract virtual IDictionary`2<string, object> get_Fields();
    public abstract virtual IDictionary`2<string, List`1<string>> get_Fragments();
}
[NullableContextAttribute("1")]
[InterfaceStabilityAttribute("2")]
public interface Couchbase.Search.ISearchRequester {
    public virtual Task`1<ISearchResult> SearchAsync(string searchIndexName, SearchRequest searchRequest, SearchOptions options);
}
public interface Couchbase.Search.ISearchResult {
    public IList`1<ISearchQueryRow> Hits { get; }
    public IDictionary`2<string, IFacetResult> Facets { get; }
    public MetaData MetaData { get; }
    public abstract virtual IList`1<ISearchQueryRow> get_Hits();
    public abstract virtual IDictionary`2<string, IFacetResult> get_Facets();
    public abstract virtual MetaData get_MetaData();
}
public class Couchbase.Search.MetaData : object {
    [CompilerGeneratedAttribute]
private long <SuccessCount>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ErrorCount>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TimeTook>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TotalHits>k__BackingField;
    [CompilerGeneratedAttribute]
private double <MaxScore>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TotalCount>k__BackingField;
    public Dictionary`2<string, string> Errors;
    public long SuccessCount { get; public set; }
    public long ErrorCount { get; public set; }
    public TimeSpan TimeTook { get; public set; }
    public long TotalHits { get; public set; }
    public double MaxScore { get; public set; }
    public long TotalCount { get; public set; }
    [CompilerGeneratedAttribute]
public long get_SuccessCount();
    [CompilerGeneratedAttribute]
public void set_SuccessCount(long value);
    [CompilerGeneratedAttribute]
public long get_ErrorCount();
    [CompilerGeneratedAttribute]
public void set_ErrorCount(long value);
    [CompilerGeneratedAttribute]
public TimeSpan get_TimeTook();
    [CompilerGeneratedAttribute]
public void set_TimeTook(TimeSpan value);
    [CompilerGeneratedAttribute]
public long get_TotalHits();
    [CompilerGeneratedAttribute]
public void set_TotalHits(long value);
    [CompilerGeneratedAttribute]
public double get_MaxScore();
    [CompilerGeneratedAttribute]
public void set_MaxScore(double value);
    [CompilerGeneratedAttribute]
public long get_TotalCount();
    [CompilerGeneratedAttribute]
public void set_TotalCount(long value);
}
public class Couchbase.Search.NumericRange : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private float <Min>k__BackingField;
    [CompilerGeneratedAttribute]
private float <Max>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Count>k__BackingField;
    public string Name { get; public set; }
    public float Min { get; public set; }
    public float Max { get; public set; }
    public long Count { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public float get_Min();
    [CompilerGeneratedAttribute]
public void set_Min(float value);
    [CompilerGeneratedAttribute]
public float get_Max();
    [CompilerGeneratedAttribute]
public void set_Max(float value);
    [CompilerGeneratedAttribute]
public long get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(long value);
}
public class Couchbase.Search.NumericRangeFacet : SearchFacet {
    internal List`1<Range`1<float>> NumericRanges;
    public NumericRangeFacet(string name, string field);
    public NumericRangeFacet(string name, string field, int limit);
    public NumericRangeFacet AddRange(string name, float start, float end);
    [ObsoleteAttribute("Use the overload which takes a string and two floats instead.")]
public NumericRangeFacet AddRange(float start, float end);
    public NumericRangeFacet AddRange(Range`1<float> range);
    public NumericRangeFacet AddRanges(Range`1[] ranges);
    public virtual JProperty ToJson();
}
public class Couchbase.Search.NumericRangeFacetResult : DefaultFacetResult {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<NumericRange> <NumericRanges>k__BackingField;
    [JsonPropertyAttribute("numericRanges")]
public IReadOnlyCollection`1<NumericRange> NumericRanges { get; public set; }
    [JsonPropertyAttribute("facetResultType")]
public FacetResultType FacetResultType { get; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<NumericRange> get_NumericRanges();
    [CompilerGeneratedAttribute]
public void set_NumericRanges(IReadOnlyCollection`1<NumericRange> value);
    public virtual FacetResultType get_FacetResultType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Search.Queries.Compound.BooleanQuery : SearchQueryBase {
    [NullableAttribute("2")]
private ConjunctionQuery _mustQueries;
    [NullableAttribute("2")]
private DisjunctionQuery _shouldQueries;
    [NullableAttribute("2")]
private DisjunctionQuery _mustNotQueries;
    public BooleanQuery Must(ISearchQuery[] queries);
    public BooleanQuery Should(ISearchQuery[] queries);
    public BooleanQuery ShouldMin(int min);
    public BooleanQuery MustNot(ISearchQuery[] queries);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
    [NullableContextAttribute("2")]
public void Deconstruct(ConjunctionQuery& mustQueries, DisjunctionQuery& shouldQueries, DisjunctionQuery& mustNotQueries);
    public ReadOnly AsReadOnly();
}
public class Couchbase.Search.Queries.Compound.ConjunctionQuery : SearchQueryBase {
    private List`1<ISearchQuery> _queries;
    public ConjunctionQuery(ISearchQuery[] queries);
    public ConjunctionQuery And(ISearchQuery[] queries);
    public sealed virtual IEnumerator`1<ISearchQuery> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
    public void Deconstruct(IReadOnlyList`1& queries);
    public ReadOnly AsReadOnly();
}
public class Couchbase.Search.Queries.Compound.DisjunctionQuery : SearchQueryBase {
    private Nullable`1<int> _min;
    private List`1<ISearchQuery> _queries;
    public DisjunctionQuery(ISearchQuery[] queries);
    public DisjunctionQuery Or(ISearchQuery[] queries);
    public DisjunctionQuery Min(int min);
    public sealed virtual IEnumerator`1<ISearchQuery> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
    public void Deconstruct(Nullable`1& min, IReadOnlyList`1& queries);
    public ReadOnly AsReadOnly();
}
public class Couchbase.Search.Queries.Geo.Coordinate : object {
    [CompilerGeneratedAttribute]
private double <Lat>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Lon>k__BackingField;
    public double Lat { get; }
    public double Lon { get; }
    private Coordinate(double latitude, double longitude);
    public static Coordinate OfLatLon(double latitude, double longitude);
    [CompilerGeneratedAttribute]
public double get_Lat();
    [CompilerGeneratedAttribute]
public double get_Lon();
}
public class Couchbase.Search.Queries.Geo.GeoBoundingBoxQuery : SearchQueryBase {
    private Nullable`1<double> _topLeftLongitude;
    private Nullable`1<double> _topLeftLatitude;
    private Nullable`1<double> _bottomRightLongitude;
    private Nullable`1<double> _bottomRightLatitude;
    private string _field;
    public GeoBoundingBoxQuery TopLeft(double longitude, double latitude);
    public GeoBoundingBoxQuery BottomRight(double longitude, double latitude);
    public GeoBoundingBoxQuery Field(string field);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
    public void Deconstruct(Nullable`1& topLeftLongitude, Nullable`1& topLeftLatitude, Nullable`1& bottomRightLongitude, Nullable`1& bottomRightLatitude, String& field);
    public ReadOnly AsReadOnly();
}
public class Couchbase.Search.Queries.Geo.GeoDistanceQuery : SearchQueryBase {
    private Nullable`1<double> _longitude;
    private Nullable`1<double> _latitude;
    private string _distance;
    private string _field;
    public GeoDistanceQuery Longitude(double longitude);
    public GeoDistanceQuery Latitude(double latitude);
    public GeoDistanceQuery Distance(string distance);
    public GeoDistanceQuery Field(string field);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
    public void Deconstruct(Nullable`1& longitude, Nullable`1& latitude, String& distance, String& field);
    public ReadOnly AsReadOnly();
}
public class Couchbase.Search.Queries.Geo.GeoPolygonQuery : SearchQueryBase {
    private List`1<Coordinate> _coordinates;
    private string _field;
    public GeoPolygonQuery(List`1<Coordinate> coordinates);
    public GeoPolygonQuery Field(string field);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
    public void Deconstruct(IReadOnlyList`1& coordinates, String& field);
    public ReadOnly AsReadOnly();
}
internal class Couchbase.Search.Queries.NoOpQuery : SearchQueryBase {
}
public class Couchbase.Search.Queries.Range.DateRangeQuery : SearchQueryBase {
    private Nullable`1<DateTime> _startTime;
    private bool _inclusiveStart;
    private Nullable`1<DateTime> _endTime;
    private bool _inclusiveEnd;
    private string _parserName;
    private string _field;
    public DateRangeQuery Start(DateTime startTime, bool inclusive);
    public DateRangeQuery End(DateTime endTime, bool inclusive);
    public DateRangeQuery Field(string field);
    public DateRangeQuery Parser(string name);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
    public void Deconstruct(Nullable`1& startTime, Boolean& inclusiveStart, Nullable`1& endTime, Boolean& inclusiveEnd, String& parserName, String& field);
    public ReadOnly AsReadOnly();
}
public class Couchbase.Search.Queries.Range.NumericRangeQuery : SearchQueryBase {
    private Nullable`1<double> _min;
    private bool _minInclusive;
    private Nullable`1<double> _max;
    private bool _maxInclusive;
    private string _field;
    public NumericRangeQuery Min(double min, bool inclusive);
    public NumericRangeQuery Max(double max, bool inclusive);
    public NumericRangeQuery Field(string field);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
    public void Deconstruct(Nullable`1& min, Boolean& minInclusive, Nullable`1& max, Boolean& maxInclusive, String& field);
    public ReadOnly AsReadOnly();
}
public class Couchbase.Search.Queries.Range.TermRangeQuery : SearchQueryBase {
    private string _term;
    private string _min;
    private bool _minInclusive;
    private string _max;
    private bool _maxInclusive;
    private string _field;
    [ObsoleteAttribute("Use the overload which doesn't take any parameters.")]
public TermRangeQuery(string term);
    public TermRangeQuery Min(string min, bool inclusive);
    public TermRangeQuery Max(string max, bool inclusive);
    public TermRangeQuery Field(string field);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
    public void Deconstruct(String& min, Boolean& minInclusive, String& max, Boolean& maxInclusive, String& field);
    public ReadOnly AsReadOnly();
}
public abstract class Couchbase.Search.Queries.SearchQueryBase : object {
    private static double DefaultBoostValue;
    private double _boost;
    protected string IndexName;
    protected string Query;
    public float BoostValue { get; }
    public sealed virtual ISearchQuery Boost(double boost);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
    public float get_BoostValue();
}
public class Couchbase.Search.Queries.Simple.BooleanFieldQuery : SearchQueryBase {
    private bool _fieldMatch;
    private string _field;
    public BooleanFieldQuery(bool fieldMatch);
    public BooleanFieldQuery Field(string field);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
    public void Deconstruct(Boolean& fieldMatch, String& field);
    public ReadOnly AsReadOnly();
}
public class Couchbase.Search.Queries.Simple.DocIdQuery : SearchQueryBase {
    private List`1<string> _docIds;
    public DocIdQuery(String[] docIds);
    public DocIdQuery Add(String[] docIds);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
    public void Deconstruct(IReadOnlyList`1& docIds);
    public ReadOnly AsReadOnly();
}
public class Couchbase.Search.Queries.Simple.MatchAllQuery : SearchQueryBase {
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
}
public class Couchbase.Search.Queries.Simple.MatchNoneQuery : SearchQueryBase {
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
}
public enum Couchbase.Search.Queries.Simple.MatchOperator : Enum {
    public int value__;
    [DescriptionAttribute("or")]
public static MatchOperator Or;
    [DescriptionAttribute("and")]
public static MatchOperator And;
}
public class Couchbase.Search.Queries.Simple.MatchPhraseQuery : SearchQueryBase {
    private string _matchPhrase;
    private string _analyzer;
    private string _field;
    public MatchPhraseQuery(string matchPhrase);
    public MatchPhraseQuery Field(string field);
    public MatchPhraseQuery Analyzer(string analyzer);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
    public void Deconstruct(String& matchPhrase, String& analyzer, String& field);
    public ReadOnly AsReadOnly();
}
public class Couchbase.Search.Queries.Simple.MatchQuery : SearchQueryBase {
    private string _match;
    private string _analyzer;
    private int _prefixLength;
    private int _fuzziness;
    private string _field;
    private Nullable`1<MatchOperator> _matchOperator;
    public MatchQuery(string match);
    [InterfaceStabilityAttribute("1")]
public MatchQuery MatchOperator(MatchOperator matchOperator);
    public MatchQuery Field(string field);
    public MatchQuery Analyzer(string analyzer);
    public MatchQuery Fuzziness(int fuzziness);
    public MatchQuery PrefixLength(int prefixLength);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
    public void Deconstruct(String& match, String& analyzer, Int32& prefixLength, Int32& fuzziness, String& field, Nullable`1& matchOperator);
    public ReadOnly AsReadOnly();
}
public class Couchbase.Search.Queries.Simple.PhraseQuery : SearchQueryBase {
    private List`1<string> _terms;
    private string _field;
    public PhraseQuery(String[] terms);
    public PhraseQuery Field(string field);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
    public void Deconstruct(IReadOnlyList`1& terms, String& field);
    public ReadOnly AsReadOnly();
}
public class Couchbase.Search.Queries.Simple.PrefixQuery : SearchQueryBase {
    private string _prefix;
    private string _field;
    public PrefixQuery(string prefix);
    public PrefixQuery Field(string field);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
    public void Deconstruct(String& prefix, String& field);
    public ReadOnly AsReadOnly();
}
public class Couchbase.Search.Queries.Simple.QueryStringQuery : SearchQueryBase {
    private string _query;
    public QueryStringQuery(string query);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
    public void Deconstruct(String& query);
    public ReadOnly AsReadOnly();
}
public class Couchbase.Search.Queries.Simple.RegexpQuery : SearchQueryBase {
    private string _regex;
    private string _field;
    public RegexpQuery(string regex);
    public RegexpQuery Field(string field);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
    public void Deconstruct(String& regex, String& field);
    public ReadOnly AsReadOnly();
}
public class Couchbase.Search.Queries.Simple.TermQuery : SearchQueryBase {
    private string _term;
    private int _fuzziness;
    private int _prefixLength;
    private string _field;
    public TermQuery(string term);
    public TermQuery Fuzziness(int fuzziness);
    public TermQuery PrefixLength(int prefixLength);
    public TermQuery Field(string field);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
    public void Deconstruct(String& term, Int32& fuzziness, Int32& prefixLength, String& field);
    public ReadOnly AsReadOnly();
}
public class Couchbase.Search.Queries.Simple.WildcardQuery : SearchQueryBase {
    private string _wildCard;
    private string _field;
    public WildcardQuery(string wildcard);
    public WildcardQuery Field(string field);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
    public void Deconstruct(String& wildCard, String& field);
    public ReadOnly AsReadOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("0")]
public class Couchbase.Search.Queries.Vector.VectorQuery : object {
    [CompilerGeneratedAttribute]
private string <VectorFieldName>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private VectorQueryOptions <Options>k__BackingField;
    [NullableAttribute("2")]
private Single[] _vector;
    [NullableAttribute("2")]
private string _base64Vector;
    public static int DefaultNumCandidates;
    private static string PropField;
    private static string PropVector;
    private static string PropBase64Vector;
    private static string PropNumCandidates;
    private static string PropBoost;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    [JsonPropertyNameAttribute("field")]
[JsonPropertyAttribute("field")]
public string VectorFieldName { get; public set; }
    [NullableAttribute("2")]
[JsonIgnoreAttribute]
[JsonIgnoreAttribute]
public VectorQueryOptions Options { get; public set; }
    [NullableAttribute("2")]
[JsonPropertyNameAttribute("vector")]
[JsonIgnoreAttribute]
[JsonPropertyAttribute]
public Single[] Vector { get; public set; }
    [NullableAttribute("2")]
[JsonPropertyNameAttribute("vector_base64")]
[JsonIgnoreAttribute]
[JsonPropertyAttribute]
public string Base64EncodedVector { get; public set; }
    [JsonPropertyNameAttribute("k")]
[JsonPropertyAttribute("k")]
public UInt32 NumCandidates { get; }
    [JsonPropertyNameAttribute("boost")]
[JsonIgnoreAttribute]
[JsonPropertyAttribute]
public Nullable`1<float> Boost { get; }
    public VectorQuery(string VectorFieldName, VectorQueryOptions Options);
    [CompilerGeneratedAttribute]
private VectorQuery(VectorQuery original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_VectorFieldName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_VectorFieldName(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public VectorQueryOptions get_Options();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Options(VectorQueryOptions value);
    [NullableContextAttribute("2")]
public Single[] get_Vector();
    [NullableContextAttribute("2")]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Vector(Single[] value);
    [NullableContextAttribute("2")]
public string get_Base64EncodedVector();
    [NullableContextAttribute("2")]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Base64EncodedVector(string value);
    [NullableContextAttribute("2")]
private static void IsVectorQueryValid(object incomingValue, object otherProperty);
    public static VectorQuery Create(string vectorFieldName, Single[] vector, VectorQueryOptions options);
    public static VectorQuery Create(string vectorFieldName, string base64EncodedVector, VectorQueryOptions options);
    public UInt32 get_NumCandidates();
    public Nullable`1<float> get_Boost();
    public VectorQuery WithVector(Single[] vector);
    public VectorQuery WithBase64EncodedVector(string vector);
    public VectorQuery WithOptions(VectorQueryOptions options);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(VectorQuery left, VectorQuery right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(VectorQuery left, VectorQuery right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(VectorQuery other);
    [CompilerGeneratedAttribute]
public VectorQuery <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& VectorFieldName, VectorQueryOptions& Options);
}
[InterfaceStabilityAttribute("0")]
public enum Couchbase.Search.Queries.Vector.VectorQueryCombination : Enum {
    public int value__;
    public static VectorQueryCombination And;
    public static VectorQueryCombination Or;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("0")]
public class Couchbase.Search.Queries.Vector.VectorQueryOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<float> <Boost>k__BackingField;
    private Nullable`1<UInt32> _numCandidates;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public Nullable`1<float> Boost { get; public set; }
    public Nullable`1<UInt32> NumCandidates { get; public set; }
    public VectorQueryOptions(Nullable`1<float> Boost);
    [CompilerGeneratedAttribute]
private VectorQueryOptions(VectorQueryOptions original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public Nullable`1<float> get_Boost();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Boost(Nullable`1<float> value);
    public Nullable`1<UInt32> get_NumCandidates();
    public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NumCandidates(Nullable`1<UInt32> value);
    public VectorQueryOptions WithNumCandidates(UInt32 numCandidates);
    public VectorQueryOptions WithBoost(float boost);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(VectorQueryOptions left, VectorQueryOptions right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(VectorQueryOptions left, VectorQueryOptions right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(VectorQueryOptions other);
    [CompilerGeneratedAttribute]
public VectorQueryOptions <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Nullable`1& Boost);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("0")]
public class Couchbase.Search.Queries.Vector.VectorSearch : object {
    [CompilerGeneratedAttribute]
private ICollection`1<VectorQuery> <VectorQueries>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private VectorSearchOptions <Options>k__BackingField;
    internal static string PropVectorQueries;
    internal static string PropVectorQueryCombination;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    [JsonPropertyNameAttribute("knn")]
[JsonPropertyAttribute("knn")]
public ICollection`1<VectorQuery> VectorQueries { get; public set; }
    [NullableAttribute("2")]
public VectorSearchOptions Options { get; public set; }
    [NullableAttribute("2")]
[JsonPropertyNameAttribute("knn_operator")]
[JsonIgnoreAttribute]
[JsonPropertyAttribute]
public string VectorQueryCombination { get; }
    public VectorSearch(ICollection`1<VectorQuery> VectorQueries, VectorSearchOptions Options);
    [CompilerGeneratedAttribute]
private VectorSearch(VectorSearch original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public ICollection`1<VectorQuery> get_VectorQueries();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_VectorQueries(ICollection`1<VectorQuery> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public VectorSearchOptions get_Options();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Options(VectorSearchOptions value);
    [NullableContextAttribute("2")]
public string get_VectorQueryCombination();
    public static VectorSearch Create(VectorQuery vectorQuery, VectorSearchOptions options);
    public static VectorSearch Create(ICollection`1<VectorQuery> vectorQueries, VectorSearchOptions options);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(VectorSearch left, VectorSearch right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(VectorSearch left, VectorSearch right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(VectorSearch other);
    [CompilerGeneratedAttribute]
public VectorSearch <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(ICollection`1& VectorQueries, VectorSearchOptions& Options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("0")]
public class Couchbase.Search.Queries.Vector.VectorSearchOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<VectorQueryCombination> <VectoryQueryCombination>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public Nullable`1<VectorQueryCombination> VectoryQueryCombination { get; public set; }
    public VectorSearchOptions(Nullable`1<VectorQueryCombination> VectoryQueryCombination);
    [CompilerGeneratedAttribute]
private VectorSearchOptions(VectorSearchOptions original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public Nullable`1<VectorQueryCombination> get_VectoryQueryCombination();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_VectoryQueryCombination(Nullable`1<VectorQueryCombination> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(VectorSearchOptions left, VectorSearchOptions right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(VectorSearchOptions left, VectorSearchOptions right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(VectorSearchOptions other);
    [CompilerGeneratedAttribute]
public VectorSearchOptions <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Nullable`1& VectoryQueryCombination);
}
public class Couchbase.Search.Range`1 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private T <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private T <End>k__BackingField;
    public string Name { get; public set; }
    public T Start { get; public set; }
    public T End { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public T get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(T value);
    [CompilerGeneratedAttribute]
public T get_End();
    [CompilerGeneratedAttribute]
public void set_End(T value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Search.SearchClient : HttpServiceBase {
    internal static string SearchRequiresUnreferencedMembersWarning;
    internal static string SearchRequiresDynamicCodeWarning;
    private IServiceUriProvider _serviceUriProvider;
    private ILogger`1<SearchClient> _logger;
    private IRequestTracer _tracer;
    private IDataMapper _dataMapper;
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public SearchClient(ICouchbaseHttpClientFactory httpClientFactory, IServiceUriProvider serviceUriProvider, ILogger`1<SearchClient> logger, IRequestTracer tracer);
    private string Escape(string pathValue);
    [AsyncStateMachineAttribute("Couchbase.Search.SearchClient/<QueryAsync>d__8")]
[RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2046")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3051")]
public sealed virtual Task`1<ISearchResult> QueryAsync(string indexName, FtsSearchRequest ftsSearchRequest, VectorSearch vectorSearch, IScope scope, CancellationToken cancellationToken);
    private IRequestSpan RootSpan(string operation);
}
internal class Couchbase.Search.SearchDataMapper : object {
    public sealed virtual T Map(Stream stream);
    [AsyncStateMachineAttribute("Couchbase.Search.SearchDataMapper/<MapAsync>d__1`1")]
public sealed virtual ValueTask`1<T> MapAsync(Stream stream, CancellationToken cancellationToken);
    private static void ReadHits(JsonTextReader reader, SearchResult response);
    [AsyncStateMachineAttribute("Couchbase.Search.SearchDataMapper/<ReadHitsAsync>d__3")]
private static Task ReadHitsAsync(JsonTextReader reader, SearchResult response, CancellationToken cancellationToken);
    private static SearchQueryRow ParseSearchQueryRow(JObject hit);
    private static T ReadValue(JObject hit, string field);
    private static void ReadStatus(JsonTextReader reader, SearchResult response);
    public ValueTask`1<ISearchResult> MapAsync(Stream stream, CancellationToken cancellationToken);
}
public abstract class Couchbase.Search.SearchFacet : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Size>k__BackingField;
    public string Name { get; public set; }
    public string Field { get; public set; }
    public int Size { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(string value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Size();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Size(int value);
    public virtual JProperty ToJson();
    public static TermFacet Term(string name, string field, int size);
    public static NumericRangeFacet Numeric(string name, string field, int size, Range`1[] ranges);
    public static DateRangeFacet Date(string name, string field, int size, Range`1[] ranges);
    public virtual string ToString();
}
public class Couchbase.Search.SearchMetrics : object {
    [CompilerGeneratedAttribute]
private long <SuccessCount>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ErrorCount>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TotalCount>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Took>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TotalHits>k__BackingField;
    [CompilerGeneratedAttribute]
private double <MaxScore>k__BackingField;
    public long SuccessCount { get; public set; }
    public long ErrorCount { get; public set; }
    public long TotalCount { get; public set; }
    public TimeSpan Took { get; public set; }
    public long TotalHits { get; public set; }
    public double MaxScore { get; public set; }
    [CompilerGeneratedAttribute]
public long get_SuccessCount();
    [CompilerGeneratedAttribute]
public void set_SuccessCount(long value);
    [CompilerGeneratedAttribute]
public long get_ErrorCount();
    [CompilerGeneratedAttribute]
public void set_ErrorCount(long value);
    [CompilerGeneratedAttribute]
public long get_TotalCount();
    [CompilerGeneratedAttribute]
public void set_TotalCount(long value);
    [CompilerGeneratedAttribute]
public TimeSpan get_Took();
    [CompilerGeneratedAttribute]
public void set_Took(TimeSpan value);
    [CompilerGeneratedAttribute]
public long get_TotalHits();
    [CompilerGeneratedAttribute]
public void set_TotalHits(long value);
    [CompilerGeneratedAttribute]
public double get_MaxScore();
    [CompilerGeneratedAttribute]
public void set_MaxScore(double value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{DebuggerDisplay,nq}")]
public class Couchbase.Search.SearchOptions : object {
    [CompilerGeneratedAttribute]
private static SearchOptions <Default>k__BackingField;
    public static ReadOnly DefaultReadOnly;
    private Nullable`1<int> _limit;
    private Nullable`1<int> _skip;
    private Nullable`1<bool> _explain;
    [NullableAttribute("2")]
private string _highLightStyle;
    private List`1<string> _fields;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<string> _highLightFields;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<ISearchFacet> _facets;
    private Nullable`1<SearchScanConsistency> _scanConsistency;
    private JArray _sort;
    [CompilerGeneratedAttribute]
private CancellationToken <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TimeoutValue>k__BackingField;
    private Dictionary`2<string, object> _rawParameters;
    private Dictionary`2<string, Dictionary`2<string, List`1<object>>> _scanVectors;
    private bool _disableScoring;
    [NullableAttribute("2")]
private string _scopeName;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private String[] _collectionNames;
    private bool _includeLocations;
    [NullableAttribute("2")]
private MutationState _mutationState;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    internal static SearchOptions Default { get; }
    internal CancellationToken Token { get; internal set; }
    internal Nullable`1<TimeSpan> TimeoutValue { get; internal set; }
    [NullableAttribute("2")]
internal IRetryStrategy RetryStrategyValue { get; internal set; }
    [NullableAttribute("2")]
internal IRequestSpan RequestSpanValue { get; private set; }
    [NullableAttribute("2")]
internal string ScopeName { get; }
    private string DebuggerDisplay { get; }
    private static SearchOptions();
    [CompilerGeneratedAttribute]
internal static SearchOptions get_Default();
    [CompilerGeneratedAttribute]
internal CancellationToken get_Token();
    [CompilerGeneratedAttribute]
internal void set_Token(CancellationToken value);
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(Nullable`1<TimeSpan> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_RetryStrategyValue(IRetryStrategy value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    [NullableContextAttribute("2")]
internal string get_ScopeName();
    public SearchOptions RequestSpan(IRequestSpan span);
    public SearchOptions RetryStrategy(IRetryStrategy retryStrategy);
    public SearchOptions DisableScoring(bool disableScoring);
    public SearchOptions CancellationToken(CancellationToken token);
    public SearchOptions Limit(int limit);
    public SearchOptions Skip(int skip);
    public SearchOptions Explain(bool explain);
    public SearchOptions Highlight(HighLightStyle highLightStyle);
    public SearchOptions Highlight(HighLightStyle highLightStyle, String[] fields);
    public SearchOptions Fields(String[] fields);
    public SearchOptions Facets(ISearchFacet[] searchFacets);
    public SearchOptions Timeout(TimeSpan timeout);
    public SearchOptions ScanConsistency(SearchScanConsistency consistency);
    public SearchOptions Scope(string scopeName);
    public SearchOptions Collections(String[] collectionNames);
    public SearchOptions Sort(String[] sort);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public SearchOptions Sort(ISearchSort sort);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public SearchOptions Sort(JObject sort);
    [InterfaceStabilityAttribute("1")]
public SearchOptions IncludeLocations(bool includeLocations);
    public SearchOptions Raw(string name, object value);
    public SearchOptions ConsistentWith(MutationState mutationState);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public JObject ToJson(string indexName);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
private string get_DebuggerDisplay();
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public string ToString(string indexName);
    [NullableContextAttribute("2")]
public void Deconstruct(Nullable`1& limit, Nullable`1& skip, Nullable`1& explain, String& highLightStyle, IReadOnlyList`1& fields, IReadOnlyList`1& highLightFields, IReadOnlyList`1& facets, Nullable`1& scanConsistency, JArray& sort, IReadOnlyDictionary`2& rawParameters, IReadOnlyDictionary`2& scanVectors, Boolean& disableScoring, String& scopeName, String[]& collectionNames, Boolean& includeLocations, MutationState& mutationState, CancellationToken& token, Nullable`1& timeoutValue, IRetryStrategy& retryStrategyValue, IRequestSpan& requestSpanValue);
    public ReadOnly AsReadOnly();
}
public class Couchbase.Search.SearchQueryRow : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Score>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [DynamicAttribute]
[CompilerGeneratedAttribute]
private object <Explanation>k__BackingField;
    [DynamicAttribute]
[CompilerGeneratedAttribute]
private object <Locations>k__BackingField;
    [DynamicAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, List`1<string>> <Fragments>k__BackingField;
    public string Id { get; internal set; }
    public double Score { get; internal set; }
    public string Index { get; internal set; }
    [DynamicAttribute]
public object Explanation { get; internal set; }
    [DynamicAttribute]
public object Locations { get; internal set; }
    [DynamicAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, object> Fields { get; internal set; }
    public IDictionary`2<string, List`1<string>> Fragments { get; internal set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual double get_Score();
    [CompilerGeneratedAttribute]
internal void set_Score(double value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Index();
    [CompilerGeneratedAttribute]
internal void set_Index(string value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_Explanation();
    [CompilerGeneratedAttribute]
internal void set_Explanation(object value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_Locations();
    [CompilerGeneratedAttribute]
internal void set_Locations(object value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Fields();
    [CompilerGeneratedAttribute]
internal void set_Fields(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, List`1<string>> get_Fragments();
    [CompilerGeneratedAttribute]
internal void set_Fragments(IDictionary`2<string, List`1<string>> value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[InterfaceStabilityAttribute("0")]
public class Couchbase.Search.SearchRequest : object {
    [CompilerGeneratedAttribute]
private ISearchQuery <SearchQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private VectorSearch <VectorSearch>k__BackingField;
    [CompilerGeneratedAttribute]
private IScope <Scope>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public ISearchQuery SearchQuery { get; public set; }
    public VectorSearch VectorSearch { get; public set; }
    public IScope Scope { get; public set; }
    public SearchRequest(ISearchQuery SearchQuery, VectorSearch VectorSearch);
    [CompilerGeneratedAttribute]
private SearchRequest(SearchRequest original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public ISearchQuery get_SearchQuery();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SearchQuery(ISearchQuery value);
    [CompilerGeneratedAttribute]
public VectorSearch get_VectorSearch();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_VectorSearch(VectorSearch value);
    [NullableContextAttribute("1")]
public static SearchRequest Create(ISearchQuery searchQuery);
    [NullableContextAttribute("1")]
public static SearchRequest Create(VectorSearch vectorSearch);
    [NullableContextAttribute("1")]
public SearchRequest WithSearchQuery(ISearchQuery searchQuery);
    [NullableContextAttribute("1")]
public SearchRequest WithVectorSearch(VectorSearch vectorSearch);
    [CompilerGeneratedAttribute]
public IScope get_Scope();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Scope(IScope value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(SearchRequest left, SearchRequest right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(SearchRequest left, SearchRequest right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(SearchRequest other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public SearchRequest <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(ISearchQuery& SearchQuery, VectorSearch& VectorSearch);
}
internal class Couchbase.Search.SearchResult : object {
    [CompilerGeneratedAttribute]
private IList`1<ISearchQueryRow> <Hits>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IFacetResult> <Facets>k__BackingField;
    [CompilerGeneratedAttribute]
private MetaData <MetaData>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <NoRetryException>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpStatusCode <HttpStatusCode>k__BackingField;
    [JsonPropertyAttribute("hits")]
public IList`1<ISearchQueryRow> Hits { get; internal set; }
    [JsonPropertyAttribute("facets")]
public IDictionary`2<string, IFacetResult> Facets { get; internal set; }
    [JsonPropertyAttribute("metaData")]
public MetaData MetaData { get; }
    public RetryReason RetryReason { get; protected set; }
    public Exception NoRetryException { get; public set; }
    internal HttpStatusCode HttpStatusCode { get; internal set; }
    public sealed virtual IEnumerator`1<ISearchQueryRow> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<ISearchQueryRow> get_Hits();
    [CompilerGeneratedAttribute]
internal void set_Hits(IList`1<ISearchQueryRow> value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, IFacetResult> get_Facets();
    [CompilerGeneratedAttribute]
internal void set_Facets(IDictionary`2<string, IFacetResult> value);
    [CompilerGeneratedAttribute]
public sealed virtual MetaData get_MetaData();
    internal void Add(ISearchQueryRow row);
    internal bool ShouldRetry();
    internal void SetRetryReasonIfFailed();
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
    [CompilerGeneratedAttribute]
protected void set_RetryReason(RetryReason value);
    [CompilerGeneratedAttribute]
public sealed virtual Exception get_NoRetryException();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NoRetryException(Exception value);
    [CompilerGeneratedAttribute]
internal HttpStatusCode get_HttpStatusCode();
    [CompilerGeneratedAttribute]
internal void set_HttpStatusCode(HttpStatusCode value);
    public sealed virtual void Dispose();
}
public enum Couchbase.Search.SearchScanConsistency : Enum {
    public int value__;
    [DescriptionAttribute("not_bounded")]
public static SearchScanConsistency NotBounded;
    [DescriptionAttribute("request_plus")]
public static SearchScanConsistency RequestPlus;
    [ObsoleteAttribute("Do not use; for RYOW use SearchOptions.ConsistentWith and do not specify a ScanConsistency.")]
[DescriptionAttribute("at_plus")]
public static SearchScanConsistency AtPlus;
}
public enum Couchbase.Search.SearchStatus : Enum {
    public int value__;
    public static SearchStatus Success;
    public static SearchStatus Failed;
}
public enum Couchbase.Search.Sort.FieldMissing : Enum {
    public int value__;
    public static FieldMissing First;
    public static FieldMissing Last;
}
public enum Couchbase.Search.Sort.FieldMode : Enum {
    public int value__;
    public static FieldMode Default;
    public static FieldMode Min;
    public static FieldMode Max;
}
public class Couchbase.Search.Sort.FieldSearchSort : SearchSortBase {
    private string _field;
    private FieldType _type;
    private FieldMode _mode;
    private FieldMissing _missing;
    protected string By { get; }
    public FieldSearchSort(string field, FieldType type, FieldMode mode, FieldMissing missing, bool decending);
    protected virtual string get_By();
    public FieldSearchSort Type(FieldType type);
    public FieldSearchSort Mode(FieldMode mode);
    public FieldSearchSort Missing(FieldMissing missing);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
}
public enum Couchbase.Search.Sort.FieldType : Enum {
    public int value__;
    public static FieldType Auto;
    public static FieldType String;
    public static FieldType Number;
    public static FieldType Date;
}
public class Couchbase.Search.Sort.GeoDistanceSearchSort : SearchSortBase {
    private double _longitude;
    private double _latitude;
    private string _field;
    private string _unit;
    protected string By { get; }
    public GeoDistanceSearchSort(double longitude, double latitude, string field, string unit, bool decending);
    protected virtual string get_By();
    public GeoDistanceSearchSort Unit(string unit);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
}
public class Couchbase.Search.Sort.IdSearchSort : SearchSortBase {
    protected string By { get; }
    public IdSearchSort(bool decending);
    protected virtual string get_By();
}
public interface Couchbase.Search.Sort.ISearchSort {
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public abstract virtual JObject Export();
}
public class Couchbase.Search.Sort.ScoreSearchSort : SearchSortBase {
    protected string By { get; }
    public ScoreSearchSort(bool decending);
    protected virtual string get_By();
}
public abstract class Couchbase.Search.Sort.SearchSortBase : object {
    [CompilerGeneratedAttribute]
private bool <Decending>k__BackingField;
    protected string By { get; }
    protected bool Decending { get; protected set; }
    protected abstract virtual string get_By();
    [CompilerGeneratedAttribute]
protected bool get_Decending();
    [CompilerGeneratedAttribute]
protected void set_Decending(bool value);
    [RequiresUnreferencedCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed. Make sure all required types are preserved.")]
[RequiresDynamicCodeAttribute("Couchbase FTS might require types that cannot be statically analyzed and might need runtime code generation. Do not use for native AOT applications.")]
public virtual JObject Export();
}
public class Couchbase.Search.Term : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Count>k__BackingField;
    [JsonPropertyAttribute("term")]
public string Name { get; public set; }
    [JsonPropertyAttribute("count")]
public long Count { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public long get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(long value);
}
public class Couchbase.Search.TermFacet : SearchFacet {
    public TermFacet(string name, string field, int size);
}
public class Couchbase.Search.TermFacetResult : DefaultFacetResult {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<Term> <Terms>k__BackingField;
    [JsonPropertyAttribute("terms")]
public IReadOnlyCollection`1<Term> Terms { get; public set; }
    [JsonPropertyAttribute("facetResultType")]
public FacetResultType FacetResultType { get; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<Term> get_Terms();
    [CompilerGeneratedAttribute]
public void set_Terms(IReadOnlyCollection`1<Term> value);
    public virtual FacetResultType get_FacetResultType();
}
public class Couchbase.ServiceMissingException : CouchbaseException {
    public ServiceMissingException(string message);
    public ServiceMissingException(string message, Exception innerException);
}
public class Couchbase.ServiceNotAvailableException : CouchbaseException {
    public ServiceNotAvailableException(ServiceType serviceType);
}
[ExtensionAttribute]
public static class Couchbase.ServiceResultExtensions : object {
    [ExtensionAttribute]
public static void ThrowOnNoRetry(IServiceResult result);
}
public enum Couchbase.ServiceType : Enum {
    public int value__;
    [DescriptionAttribute("kv")]
public static ServiceType KeyValue;
    [DescriptionAttribute("views")]
public static ServiceType Views;
    [DescriptionAttribute("n1ql")]
public static ServiceType Query;
    [DescriptionAttribute("fts")]
public static ServiceType Search;
    [DescriptionAttribute("config")]
public static ServiceType Config;
    [DescriptionAttribute("cbas")]
public static ServiceType Analytics;
    [DescriptionAttribute("eventing")]
public static ServiceType Eventing;
    [DescriptionAttribute("mgmt")]
public static ServiceType Management;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Stellar.Analytics.ProtoAnalyticsResult`1 : object {
    private AsyncServerStreamingCall`1<AnalyticsQueryResponse> _streamingAnalyticsResponse;
    private ITypeSerializer _serializer;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private AnalyticsMetaData <MetaData>k__BackingField;
    public RetryReason RetryReason { get; }
    public IAsyncEnumerable`1<T> Rows { get; }
    [NullableAttribute("2")]
public AnalyticsMetaData MetaData { get; private set; }
    public ProtoAnalyticsResult`1(AsyncServerStreamingCall`1<AnalyticsQueryResponse> streamingAnalyticsResponse, ITypeSerializer serializer);
    public sealed virtual void Dispose();
    [AsyncIteratorStateMachineAttribute("Couchbase.Stellar.Analytics.ProtoAnalyticsResult`1/<GetAsyncEnumerator>d__4")]
public sealed virtual IAsyncEnumerator`1<T> GetAsyncEnumerator(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
    public sealed virtual IAsyncEnumerable`1<T> get_Rows();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual AnalyticsMetaData get_MetaData();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_MetaData(AnalyticsMetaData value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Stellar.Analytics.StellarAnalyticsClient : AnalyticsServiceClient {
    private StellarCluster _stellarCluster;
    private AnalyticsServiceClient _analyticsClient;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastActivity>k__BackingField;
    public Nullable`1<DateTime> LastActivity { get; }
    public StellarAnalyticsClient(StellarCluster stellarCluster);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_LastActivity();
    public sealed virtual Task`1<IAnalyticsResult`1<T>> QueryAsync(string statement, AnalyticsOptions options);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Couchbase.Stellar.Core.ClusterChannelCredentials : ChannelCredentials {
    [CompilerGeneratedAttribute]
private string <BasicAuthHeader>k__BackingField;
    internal string BasicAuthHeader { get; }
    [NullableContextAttribute("1")]
public ClusterChannelCredentials(ClusterOptions clusterOptions);
    [CompilerGeneratedAttribute]
internal string get_BasicAuthHeader();
    [NullableContextAttribute("1")]
public virtual void InternalPopulateConfiguration(ChannelCredentialsConfiguratorBase configurator, object state);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Stellar.Core.GrpcContentWrapper : object {
    [CompilerGeneratedAttribute]
private ByteString <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <ContentFlags>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeSerializer <Serializer>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public ByteString Content { get; public set; }
    public UInt32 ContentFlags { get; public set; }
    public ITypeSerializer Serializer { get; public set; }
    public GrpcContentWrapper(ByteString Content, UInt32 ContentFlags, ITypeSerializer Serializer);
    [CompilerGeneratedAttribute]
protected GrpcContentWrapper(GrpcContentWrapper original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public ByteString get_Content();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Content(ByteString value);
    [CompilerGeneratedAttribute]
public UInt32 get_ContentFlags();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ContentFlags(UInt32 value);
    [CompilerGeneratedAttribute]
public ITypeSerializer get_Serializer();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Serializer(ITypeSerializer value);
    [NullableContextAttribute("2")]
public T ContentAs();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(GrpcContentWrapper left, GrpcContentWrapper right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(GrpcContentWrapper left, GrpcContentWrapper right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(GrpcContentWrapper other);
    [CompilerGeneratedAttribute]
public virtual GrpcContentWrapper <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(ByteString& Content, UInt32& ContentFlags, ITypeSerializer& Serializer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Stellar.Core.Retry.GenericErrorContext : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RetryReason> <RetryReasons>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Fields>k__BackingField;
    [NullableAttribute("2")]
public string Message { get; public set; }
    public List`1<RetryReason> RetryReasons { get; }
    public Dictionary`2<string, object> Fields { get; }
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<RetryReason> get_RetryReasons();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Fields();
    public virtual string ToString();
}
public static class Couchbase.Stellar.Core.Retry.StellarBackoff : object {
    public static TimeSpan Exponential(StellarRequest request);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Stellar.Core.Retry.StellarRequest : object {
    [CompilerGeneratedAttribute]
private UInt32 <Attempts>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Idempotent>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RetryReason> <RetryReasons>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategy>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Elapsed>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <Token>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ClientContextId>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Statement>k__BackingField;
    [CompilerGeneratedAttribute]
private IValueRecorder <Recorder>k__BackingField;
    [CompilerGeneratedAttribute]
private GenericErrorContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxRetryAttempts>k__BackingField;
    public UInt32 Attempts { get; public set; }
    public bool Idempotent { get; public set; }
    public List`1<RetryReason> RetryReasons { get; public set; }
    public IRetryStrategy RetryStrategy { get; public set; }
    public TimeSpan Timeout { get; public set; }
    public TimeSpan Elapsed { get; }
    public CancellationToken Token { get; public set; }
    [NullableAttribute("2")]
public string ClientContextId { get; public set; }
    [NullableAttribute("2")]
public string Statement { get; public set; }
    public IValueRecorder Recorder { get; public set; }
    public GenericErrorContext Context { get; public set; }
    public int MaxRetryAttempts { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual UInt32 get_Attempts();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Attempts(UInt32 value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Idempotent();
    [CompilerGeneratedAttribute]
public void set_Idempotent(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<RetryReason> get_RetryReasons();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RetryReasons(List`1<RetryReason> value);
    [CompilerGeneratedAttribute]
public sealed virtual IRetryStrategy get_RetryStrategy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RetryStrategy(IRetryStrategy value);
    [CompilerGeneratedAttribute]
public sealed virtual TimeSpan get_Timeout();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Timeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public sealed virtual TimeSpan get_Elapsed();
    [CompilerGeneratedAttribute]
public sealed virtual CancellationToken get_Token();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Token(CancellationToken value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_ClientContextId();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual void set_ClientContextId(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_Statement();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual void set_Statement(string value);
    public sealed virtual void StopRecording();
    [NullableContextAttribute("2")]
public sealed virtual void StopRecording(Type errorType);
    [CompilerGeneratedAttribute]
public sealed virtual IValueRecorder get_Recorder();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Recorder(IValueRecorder value);
    public sealed virtual void LogOrphaned();
    [CompilerGeneratedAttribute]
public GenericErrorContext get_Context();
    [CompilerGeneratedAttribute]
public void set_Context(GenericErrorContext value);
    [CompilerGeneratedAttribute]
public int get_MaxRetryAttempts();
    [CompilerGeneratedAttribute]
public void set_MaxRetryAttempts(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Stellar.Core.Retry.StellarRetryHandler : object {
    [AsyncStateMachineAttribute("Couchbase.Stellar.Core.Retry.StellarRetryHandler/<RetryAsync>d__0`1")]
public sealed virtual Task`1<T> RetryAsync(Func`1<Task`1<T>> send, IRequest request);
    private void HandleException(RpcException protoException, IRequest request, GenericErrorContext context);
    internal virtual Any StatusDeserializer(RpcException ex);
    public sealed virtual Task`1<ResponseStatus> RetryAsync(BucketBase bucket, IOperation operation, CancellationTokenPair tokenPair);
}
public static class Couchbase.Stellar.Core.Retry.StellarRetryStrings : object {
    public static string CasMismatch;
    public static string Locked;
    public static string DocTooDeep;
    public static string DocNotJson;
    public static string PathMismatch;
    public static string ValueOutOfRange;
    public static string PathValueOutOfRange;
    public static string ValueTooLarge;
    public static string TypeUrlPreconditionFailure;
    public static string TypeUrlResourceInfo;
    public static string TypeUrlErrorInfo;
    public static string TypeUrlBadRequest;
    public static string PreconditionCas;
    public static string PreconditionLocked;
    public static string PreconditionPathMismatch;
    public static string PreconditionDocNotJson;
    public static string PreconditionDocTooDeep;
    public static string PreconditionValueOutOfRange;
    public static string PreconditionPathValueOutOfRange;
    public static string PreconditionValueTooLarge;
    public static string ResourceTypeDocument;
    public static string ResourceTypeSearchIndex;
    public static string ResourceTypeQueryIndex;
    public static string ResourceTypeAnalyticsIndex;
    public static string ResourceTypeBucket;
    public static string ResourceTypeScope;
    public static string ResourceTypeCollection;
    public static string ResourceTypePath;
    public static string ReasonCasMismatch;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Couchbase.Stellar.Core.TypeConversionExtensions : object {
    [ExtensionAttribute]
public static Nullable`1<DurabilityLevel> ToProto(DurabilityLevel durabilityLevel);
    [ExtensionAttribute]
public static StoreSemantic ToProto(StoreSemantics storeSemantics);
    [ExtensionAttribute]
public static ScanConsistency ToProto(QueryScanConsistency scanConsistency);
    [ExtensionAttribute]
public static Operation ToProtoLookupInCode(OpCode opCode);
    [ExtensionAttribute]
public static Operation ToProtoMutateInCode(OpCode opCode);
    public static bool TryConvertScanConsistency(Nullable`1<AnalyticsScanConsistency> analyticsScanConsistency, ScanConsistency& protoScanConsistency);
    [ExtensionAttribute]
public static ScanConsistency ToProtoScanConsistency(AnalyticsScanConsistency scanConsistency);
    [ExtensionAttribute]
public static QueryStatus ToCoreStatus(Status queryStatus);
    [ExtensionAttribute]
public static ScanConsistency ToProto(SearchScanConsistency scanConsistency);
    [ExtensionAttribute]
public static HighlightStyle ToProto(HighLightStyle highLightStyle);
    [ExtensionAttribute]
public static Operator ToProto(MatchOperator matchOperator);
    [ExtensionAttribute]
public static ProfileMode ToProto(QueryProfile coreProfile);
    [ExtensionAttribute]
public static Facet ToProto(ISearchFacet coreFacet);
    [ExtensionAttribute]
public static Dictionary`2<string, object> ToCore(MapField`2<string, ByteString> protoParams);
    [ExtensionAttribute]
public static CompressionMode ToCore(CompressionMode compressionMode);
    [ExtensionAttribute]
public static EvictionPolicyType ToCore(EvictionMode evictionMode);
    [ExtensionAttribute]
public static StorageBackend ToCore(StorageBackend storageBackend);
    [ExtensionAttribute]
public static ConflictResolutionType ToCore(ConflictResolutionType conflictResolutionType);
    [ExtensionAttribute]
public static BucketType ToCore(BucketType bucketType);
    [ExtensionAttribute]
public static DurabilityLevel ToCore(DurabilityLevel durabilityLevel);
    [ExtensionAttribute]
public static Flags ToProtoLookupInFlags(SubdocPathFlags subdocPathFlags);
    [ExtensionAttribute]
public static Flags ToProtoMutateInFlags(SubdocPathFlags subdocPathFlags);
    [ExtensionAttribute]
public static IGetResult AsGetResult(IContentResult contentResult, ITypeSerializer serializer);
    [ExtensionAttribute]
public static IGetReplicaResult AsGetReplicaResult(IReplicaContentResult contentResult, ITypeSerializer serializer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Stellar.KeyValue.ExistsResult : object {
    [CompilerGeneratedAttribute]
private bool <Exists>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Cas>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public bool Exists { get; public set; }
    public ulong Cas { get; public set; }
    public ExistsResult(bool Exists, ulong Cas);
    [CompilerGeneratedAttribute]
protected ExistsResult(ExistsResult original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Exists();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Exists(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual ulong get_Cas();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Cas(ulong value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(ExistsResult left, ExistsResult right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(ExistsResult left, ExistsResult right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(ExistsResult other);
    [CompilerGeneratedAttribute]
public virtual ExistsResult <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Boolean& Exists, UInt64& Cas);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Stellar.KeyValue.GetReplicaResult : object {
    [CompilerGeneratedAttribute]
private ulong <Cas>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsActive>k__BackingField;
    [CompilerGeneratedAttribute]
private GrpcContentWrapper <GrpcContentWrapper>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public ulong Cas { get; public set; }
    public bool IsActive { get; public set; }
    public GrpcContentWrapper GrpcContentWrapper { get; public set; }
    public Nullable`1<TimeSpan> Expiry { get; }
    public Nullable`1<DateTime> ExpiryTime { get; }
    public GetReplicaResult(ulong Cas, bool IsActive, GrpcContentWrapper GrpcContentWrapper);
    [CompilerGeneratedAttribute]
protected GetReplicaResult(GetReplicaResult original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public sealed virtual ulong get_Cas();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Cas(ulong value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsActive();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsActive(bool value);
    [CompilerGeneratedAttribute]
public GrpcContentWrapper get_GrpcContentWrapper();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_GrpcContentWrapper(GrpcContentWrapper value);
    public sealed virtual void Dispose();
    [NullableContextAttribute("2")]
public sealed virtual T ContentAs();
    public sealed virtual Nullable`1<TimeSpan> get_Expiry();
    public sealed virtual Nullable`1<DateTime> get_ExpiryTime();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(GetReplicaResult left, GetReplicaResult right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(GetReplicaResult left, GetReplicaResult right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(GetReplicaResult other);
    [CompilerGeneratedAttribute]
public virtual GetReplicaResult <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(UInt64& Cas, Boolean& IsActive, GrpcContentWrapper& GrpcContentWrapper);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Stellar.KeyValue.GetResult : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <ExpiryTime>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Cas>k__BackingField;
    [CompilerGeneratedAttribute]
private GrpcContentWrapper <GrpcContentWrapper>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public Nullable`1<DateTime> ExpiryTime { get; public set; }
    public ulong Cas { get; public set; }
    public GrpcContentWrapper GrpcContentWrapper { get; public set; }
    public Nullable`1<TimeSpan> Expiry { get; }
    public GetResult(Nullable`1<DateTime> ExpiryTime, ulong Cas, GrpcContentWrapper GrpcContentWrapper);
    [CompilerGeneratedAttribute]
protected GetResult(GetResult original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_ExpiryTime();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ExpiryTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual ulong get_Cas();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Cas(ulong value);
    [CompilerGeneratedAttribute]
public GrpcContentWrapper get_GrpcContentWrapper();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_GrpcContentWrapper(GrpcContentWrapper value);
    public sealed virtual Nullable`1<TimeSpan> get_Expiry();
    [NullableContextAttribute("2")]
public sealed virtual T ContentAs();
    public sealed virtual void Dispose();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(GetResult left, GetResult right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(GetResult left, GetResult right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(GetResult other);
    [CompilerGeneratedAttribute]
public virtual GetResult <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Nullable`1& ExpiryTime, UInt64& Cas, GrpcContentWrapper& GrpcContentWrapper);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Stellar.KeyValue.IContentResult {
    public Timestamp Expiry { get; }
    public ByteString Content { get; }
    public UInt32 ContentFlags { get; }
    public ulong Cas { get; }
    public abstract virtual Timestamp get_Expiry();
    public abstract virtual ByteString get_Content();
    public abstract virtual UInt32 get_ContentFlags();
    public abstract virtual ulong get_Cas();
}
[NullableContextAttribute("1")]
internal interface Couchbase.Stellar.KeyValue.IReplicaContentResult {
    public ByteString Content { get; }
    public UInt32 ContentFlags { get; }
    public ulong Cas { get; }
    public bool IsActive { get; }
    public abstract virtual ByteString get_Content();
    public abstract virtual UInt32 get_ContentFlags();
    public abstract virtual ulong get_Cas();
    public abstract virtual bool get_IsActive();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Stellar.KeyValue.LookupInResult : object {
    [CompilerGeneratedAttribute]
private LookupInResponse <GrpcResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private LookupInRequest <OriginalRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeSerializer <Serializer>k__BackingField;
    [NullableAttribute("0")]
internal static ReadOnlyMemory`1<byte> RawTrue;
    [NullableAttribute("0")]
internal static ReadOnlyMemory`1<byte> RawFalse;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public LookupInResponse GrpcResponse { get; public set; }
    public LookupInRequest OriginalRequest { get; public set; }
    public ITypeSerializer Serializer { get; public set; }
    public ulong Cas { get; }
    public bool IsDeleted { get; }
    public LookupInResult(LookupInResponse GrpcResponse, LookupInRequest OriginalRequest, ITypeSerializer Serializer);
    [CompilerGeneratedAttribute]
protected LookupInResult(LookupInResult original);
    private static LookupInResult();
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public LookupInResponse get_GrpcResponse();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_GrpcResponse(LookupInResponse value);
    [CompilerGeneratedAttribute]
public LookupInRequest get_OriginalRequest();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_OriginalRequest(LookupInRequest value);
    [CompilerGeneratedAttribute]
public ITypeSerializer get_Serializer();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Serializer(ITypeSerializer value);
    public sealed virtual ulong get_Cas();
    public sealed virtual bool get_IsDeleted();
    private sealed virtual override bool Couchbase.KeyValue.ILookupInResult.Exists(int index);
    [NullableContextAttribute("2")]
public sealed virtual T ContentAs(int index);
    public sealed virtual int IndexOf(string path);
    private Spec SpecOrInvalid(int index);
    public sealed virtual void Dispose();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(LookupInResult left, LookupInResult right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(LookupInResult left, LookupInResult right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(LookupInResult other);
    [CompilerGeneratedAttribute]
public virtual LookupInResult <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(LookupInResponse& GrpcResponse, LookupInRequest& OriginalRequest, ITypeSerializer& Serializer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Stellar.KeyValue.MutateInResult : object {
    [CompilerGeneratedAttribute]
private MutateInResponse <GrpcResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private MutateInRequest <OriginalRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeSerializer <Serializer>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public MutateInResponse GrpcResponse { get; public set; }
    public MutateInRequest OriginalRequest { get; public set; }
    public ITypeSerializer Serializer { get; public set; }
    public ulong Cas { get; }
    public MutationToken MutationToken { get; public set; }
    public MutateInResult(MutateInResponse GrpcResponse, MutateInRequest OriginalRequest, ITypeSerializer Serializer);
    [CompilerGeneratedAttribute]
protected MutateInResult(MutateInResult original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public MutateInResponse get_GrpcResponse();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_GrpcResponse(MutateInResponse value);
    [CompilerGeneratedAttribute]
public MutateInRequest get_OriginalRequest();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_OriginalRequest(MutateInRequest value);
    [CompilerGeneratedAttribute]
public ITypeSerializer get_Serializer();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Serializer(ITypeSerializer value);
    public sealed virtual ulong get_Cas();
    public sealed virtual MutationToken get_MutationToken();
    public sealed virtual void set_MutationToken(MutationToken value);
    [NullableContextAttribute("2")]
public sealed virtual T ContentAs(int index);
    public sealed virtual int IndexOf(string path);
    private Spec SpecOrInvalid(int index);
    public sealed virtual void Dispose();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(MutateInResult left, MutateInResult right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(MutateInResult left, MutateInResult right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(MutateInResult other);
    [CompilerGeneratedAttribute]
public virtual MutateInResult <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(MutateInResponse& GrpcResponse, MutateInRequest& OriginalRequest, ITypeSerializer& Serializer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Stellar.KeyValue.MutationResult : object {
    [CompilerGeneratedAttribute]
private ulong <Cas>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Expiry>k__BackingField;
    private MutationToken _mutationToken;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public ulong Cas { get; public set; }
    public Nullable`1<TimeSpan> Expiry { get; public set; }
    public MutationToken MutationToken { get; public set; }
    public MutationResult(ulong Cas, Nullable`1<TimeSpan> Expiry);
    [CompilerGeneratedAttribute]
protected MutationResult(MutationResult original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public sealed virtual ulong get_Cas();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Cas(ulong value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_Expiry();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Expiry(Nullable`1<TimeSpan> value);
    public sealed virtual MutationToken get_MutationToken();
    public sealed virtual void set_MutationToken(MutationToken value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(MutationResult left, MutationResult right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(MutationResult left, MutationResult right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(MutationResult other);
    [CompilerGeneratedAttribute]
public virtual MutationResult <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(UInt64& Cas, Nullable`1& Expiry);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Stellar.KeyValue.StellarCollection : object {
    private StellarCollectionQueryIndexManager _stellarCollectionQueryIndexes;
    private StellarScope _stellarScope;
    private StellarCluster _stellarCluster;
    private KvServiceClient _kvClient;
    private string _scopeName;
    private string _bucketName;
    private IRetryOrchestrator _retryHandler;
    private static string DefaultCollectionName;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDefaultCollection>k__BackingField;
    public Nullable`1<UInt32> Cid { get; }
    public string Name { get; }
    public IScope Scope { get; }
    public IBinaryCollection Binary { get; }
    public bool IsDefaultCollection { get; }
    public ICollectionQueryIndexManager QueryIndexes { get; }
    public StellarCollection(string collectionName, StellarScope stellarScope, StellarCluster stellarCluster);
    public sealed virtual Nullable`1<UInt32> get_Cid();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    public sealed virtual IScope get_Scope();
    public sealed virtual IBinaryCollection get_Binary();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsDefaultCollection();
    public sealed virtual ICollectionQueryIndexManager get_QueryIndexes();
    [AsyncStateMachineAttribute("Couchbase.Stellar.KeyValue.StellarCollection/<ExistsAsync>d__23")]
public sealed virtual Task`1<IExistsResult> ExistsAsync(string id, ExistsOptions options);
    public sealed virtual IEnumerable`1<Task`1<IGetReplicaResult>> GetAllReplicasAsync(string id, GetAllReplicasOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.KeyValue.StellarCollection/<GetAndLockAsync>d__25")]
public sealed virtual Task`1<IGetResult> GetAndLockAsync(string id, TimeSpan expiry, GetAndLockOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.KeyValue.StellarCollection/<GetAndTouchAsync>d__26")]
public sealed virtual Task`1<IGetResult> GetAndTouchAsync(string id, TimeSpan expiry, GetAndTouchOptions options);
    public sealed virtual Task`1<IGetReplicaResult> GetAnyReplicaAsync(string id, GetAnyReplicaOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.KeyValue.StellarCollection/<GetAsync>d__28")]
public sealed virtual Task`1<IGetResult> GetAsync(string id, GetOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.KeyValue.StellarCollection/<InsertAsync>d__29`1")]
public sealed virtual Task`1<IMutationResult> InsertAsync(string id, T content, InsertOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.KeyValue.StellarCollection/<LookupInAsync>d__30")]
public sealed virtual Task`1<ILookupInResult> LookupInAsync(string id, IEnumerable`1<LookupInSpec> specs, LookupInOptions options);
    public sealed virtual Task`1<ILookupInReplicaResult> LookupInAnyReplicaAsync(string id, IEnumerable`1<LookupInSpec> specs, LookupInAnyReplicaOptions options);
    public sealed virtual IAsyncEnumerable`1<ILookupInReplicaResult> LookupInAllReplicasAsync(string id, IEnumerable`1<LookupInSpec> specs, LookupInAllReplicasOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.KeyValue.StellarCollection/<MutateInAsync>d__33")]
public sealed virtual Task`1<IMutateInResult> MutateInAsync(string id, IEnumerable`1<MutateInSpec> specs, MutateInOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.KeyValue.StellarCollection/<RemoveAsync>d__34")]
public sealed virtual Task RemoveAsync(string id, RemoveOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.KeyValue.StellarCollection/<ReplaceAsync>d__35`1")]
public sealed virtual Task`1<IMutationResult> ReplaceAsync(string id, T content, ReplaceOptions options);
    public sealed virtual IAsyncEnumerable`1<IScanResult> ScanAsync(IScanType scanType, ScanOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.KeyValue.StellarCollection/<TouchAsync>d__37")]
public sealed virtual Task TouchAsync(string id, TimeSpan expiry, TouchOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.KeyValue.StellarCollection/<TouchWithCasAsync>d__38")]
public sealed virtual Task`1<IMutationResult> TouchWithCasAsync(string id, TimeSpan expiry, TouchOptions options);
    public sealed virtual Task UnlockAsync(string id, ulong cas, UnlockOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.KeyValue.StellarCollection/<UnlockAsync>d__40")]
public sealed virtual Task UnlockAsync(string id, ulong cas, UnlockOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.KeyValue.StellarCollection/<UpsertAsync>d__41`1")]
public sealed virtual Task`1<IMutationResult> UpsertAsync(string id, T content, UpsertOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.KeyValue.StellarCollection/<SerializeToByteString>d__42`1")]
private static Task`1<ByteString> SerializeToByteString(T content, ITypeSerializer serializer, CancellationToken cancellationToken);
    private T KeyedRequest(string key);
    private static ValueTuple`2<Nullable`1<UInt32>, Timestamp> CalculateExpiry(TimeSpan expiry, bool preserveTtl);
    [AsyncStateMachineAttribute("Couchbase.Stellar.KeyValue.StellarCollection/<ContentRequest>d__45`2")]
private Task`1<TRequest> ContentRequest(string key, UInt32 contentFlags, TContent content, bool preserveTtl, TimeSpan expiry, DurabilityLevel kvDurabilityLevel, ITypeSerializer serializer, CancellationToken cancellationToken);
    private IRequestSpan TraceSpan(string attr, IRequestSpan parentSpan);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
internal class Couchbase.Stellar.KeyValue.StellarScope : object {
    private static string DefaultScopeName;
    private StellarBucket _stellarBucket;
    private StellarCluster _stellarCluster;
    private ConcurrentDictionary`2<string, ICouchbaseCollection> _collections;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDefaultScope>k__BackingField;
    public ICouchbaseCollection Item { get; }
    public string Name { get; }
    public IBucket Bucket { get; }
    public bool IsDefaultScope { get; }
    public IEventingFunctionManager EventingFunctions { get; }
    public ISearchIndexManager SearchIndexes { get; }
    public StellarScope(string name, StellarBucket stellarBucket, StellarCluster stellarCluster);
    public sealed virtual ICouchbaseCollection get_Item(string name);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    public sealed virtual IBucket get_Bucket();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsDefaultScope();
    public sealed virtual Task`1<IAnalyticsResult`1<T>> AnalyticsQueryAsync(string statement, AnalyticsOptions options);
    public sealed virtual IEventingFunctionManager get_EventingFunctions();
    public sealed virtual ISearchIndexManager get_SearchIndexes();
    public sealed virtual ICouchbaseCollection Collection(string collectionName);
    public sealed virtual ValueTask`1<ICouchbaseCollection> CollectionAsync(string collectionName);
    [AsyncStateMachineAttribute("Couchbase.Stellar.KeyValue.StellarScope/<QueryAsync>d__22`1")]
public sealed virtual Task`1<IQueryResult`1<T>> QueryAsync(string statement, QueryOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Stellar.Management.Buckets.StellarBucketManager : object {
    private BucketAdminServiceClient _bucketAdminClient;
    private StellarCluster _stellarCluster;
    private IRetryOrchestrator _retryHandler;
    public StellarBucketManager(StellarCluster stellarCluster);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Buckets.StellarBucketManager/<CreateBucketAsync>d__4")]
public sealed virtual Task CreateBucketAsync(BucketSettings settings, CreateBucketOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Buckets.StellarBucketManager/<UpdateBucketAsync>d__5")]
public sealed virtual Task UpdateBucketAsync(BucketSettings settings, UpdateBucketOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Buckets.StellarBucketManager/<DropBucketAsync>d__6")]
public sealed virtual Task DropBucketAsync(string bucketName, DropBucketOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Buckets.StellarBucketManager/<GetAllBucketsAsync>d__7")]
public sealed virtual Task`1<Dictionary`2<string, BucketSettings>> GetAllBucketsAsync(GetAllBucketsOptions options);
    public sealed virtual Task`1<BucketSettings> GetBucketAsync(string bucketName, GetBucketOptions options);
    public sealed virtual Task FlushBucketAsync(string bucketName, FlushBucketOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Stellar.Management.Collections.StellarCollectionManager : object {
    private string _bucketName;
    private CollectionAdminServiceClient _collectionAdminClient;
    private StellarCluster _stellarCluster;
    private IRetryOrchestrator _retryHandler;
    public StellarCollectionManager(StellarCluster stellarCluster, string bucketName);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Collections.StellarCollectionManager/<ListCollections>d__5")]
private Task`1<ListCollectionsResponse> ListCollections(Nullable`1<CancellationToken> cancellationToken);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Collections.StellarCollectionManager/<GetAllScopesAsync>d__6")]
public sealed virtual Task`1<IEnumerable`1<ScopeSpec>> GetAllScopesAsync(GetAllScopesOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Collections.StellarCollectionManager/<CreateCollectionAsync>d__7")]
public sealed virtual Task CreateCollectionAsync(CollectionSpec spec, CreateCollectionOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Collections.StellarCollectionManager/<CreateCollectionAsync>d__8")]
public sealed virtual Task CreateCollectionAsync(string scopeName, string collectionName, CreateCollectionSettings settings, CreateCollectionOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Collections.StellarCollectionManager/<DropCollectionAsync>d__9")]
public sealed virtual Task DropCollectionAsync(CollectionSpec spec, DropCollectionOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Collections.StellarCollectionManager/<DropCollectionAsync>d__10")]
public sealed virtual Task DropCollectionAsync(string scopeName, string collectionName, DropCollectionOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Collections.StellarCollectionManager/<CreateScopeAsync>d__11")]
public sealed virtual Task CreateScopeAsync(ScopeSpec spec, CreateScopeOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Collections.StellarCollectionManager/<CreateScopeAsync>d__12")]
public sealed virtual Task CreateScopeAsync(string scopeName, CreateScopeOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Collections.StellarCollectionManager/<DropScopeAsync>d__13")]
public sealed virtual Task DropScopeAsync(string scopeName, DropScopeOptions options);
    public sealed virtual Task`1<ScopeSpec> GetScopeAsync(string scopeName, GetScopeOptions options);
    public sealed virtual Task UpdateCollectionAsync(string scopeName, string collectionName, UpdateCollectionSettings settings, UpdateCollectionOptions options);
}
internal class Couchbase.Stellar.Management.Query.StellarCollectionQueryIndexManager : object {
    private IQueryIndexManager _queryIndexManager;
    private string _collectionName;
    private string _scopeName;
    private string _bucketName;
    public StellarCollectionQueryIndexManager(IQueryIndexManager queryIndexManager, string bucketName, string scopeName, string collectionName);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Query.StellarCollectionQueryIndexManager/<GetAllIndexesAsync>d__5")]
public sealed virtual Task`1<IEnumerable`1<QueryIndex>> GetAllIndexesAsync(GetAllQueryIndexOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Query.StellarCollectionQueryIndexManager/<CreateIndexAsync>d__6")]
public sealed virtual Task CreateIndexAsync(string indexName, IEnumerable`1<string> fields, CreateQueryIndexOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Query.StellarCollectionQueryIndexManager/<CreatePrimaryIndexAsync>d__7")]
public sealed virtual Task CreatePrimaryIndexAsync(CreatePrimaryQueryIndexOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Query.StellarCollectionQueryIndexManager/<DropIndexAsync>d__8")]
public sealed virtual Task DropIndexAsync(string indexName, DropQueryIndexOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Query.StellarCollectionQueryIndexManager/<DropPrimaryIndexAsync>d__9")]
public sealed virtual Task DropPrimaryIndexAsync(DropPrimaryQueryIndexOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Query.StellarCollectionQueryIndexManager/<WatchIndexesAsync>d__10")]
public sealed virtual Task WatchIndexesAsync(IEnumerable`1<string> indexNames, TimeSpan duration, WatchQueryIndexOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Query.StellarCollectionQueryIndexManager/<BuildDeferredIndexesAsync>d__11")]
public sealed virtual Task BuildDeferredIndexesAsync(BuildDeferredQueryIndexOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Stellar.Management.Query.StellarQueryIndexManager : object {
    private StellarCluster _stellarCluster;
    private QueryAdminServiceClient _stellarQueryAdminClient;
    private IRetryOrchestrator _retryHandler;
    public StellarQueryIndexManager(StellarCluster stellarCluster);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Query.StellarQueryIndexManager/<GetAllIndexesAsync>d__4")]
public sealed virtual Task`1<IEnumerable`1<QueryIndex>> GetAllIndexesAsync(string bucketName, GetAllQueryIndexOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Query.StellarQueryIndexManager/<CreateIndexAsync>d__5")]
public sealed virtual Task CreateIndexAsync(string bucketName, string indexName, IEnumerable`1<string> indexKeys, CreateQueryIndexOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Query.StellarQueryIndexManager/<CreatePrimaryIndexAsync>d__6")]
public sealed virtual Task CreatePrimaryIndexAsync(string bucketName, CreatePrimaryQueryIndexOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Query.StellarQueryIndexManager/<DropIndexAsync>d__7")]
public sealed virtual Task DropIndexAsync(string bucketName, string indexName, DropQueryIndexOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Query.StellarQueryIndexManager/<DropPrimaryIndexAsync>d__8")]
public sealed virtual Task DropPrimaryIndexAsync(string bucketName, DropPrimaryQueryIndexOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Query.StellarQueryIndexManager/<BuildDeferredIndexesAsync>d__9")]
public sealed virtual Task BuildDeferredIndexesAsync(string bucketName, BuildDeferredQueryIndexOptions options);
    public sealed virtual Task WatchIndexesAsync(string bucketName, IEnumerable`1<string> indexNames, WatchQueryIndexOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Stellar.Management.Search.StellarSearchIndexManager : object {
    private StellarCluster _stellarCluster;
    private SearchAdminServiceClient _stellarSearchAdminClient;
    private IRetryOrchestrator _retryHandler;
    public StellarSearchIndexManager(StellarCluster stellarCluster);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Search.StellarSearchIndexManager/<GetIndexAsync>d__4")]
public sealed virtual Task`1<SearchIndex> GetIndexAsync(string indexName, GetSearchIndexOptions options, IScope scope);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Couchbase.Stellar.Management.Search.StellarSearchIndexManager/<GetAllIndexesAsync>d__5")]
public sealed virtual Task`1<IEnumerable`1<SearchIndex>> GetAllIndexesAsync(GetAllSearchIndexesOptions options, IScope scope);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Search.StellarSearchIndexManager/<UpsertIndexAsync>d__6")]
public sealed virtual Task UpsertIndexAsync(SearchIndex indexDefinition, UpsertSearchIndexOptions options, IScope scope);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Search.StellarSearchIndexManager/<DropIndexAsync>d__7")]
public sealed virtual Task DropIndexAsync(string indexName, DropSearchIndexOptions options, IScope scope);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Search.StellarSearchIndexManager/<GetIndexedDocumentsCountAsync>d__8")]
public sealed virtual Task`1<int> GetIndexedDocumentsCountAsync(string indexName, GetSearchIndexDocumentCountOptions options, IScope scope);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Search.StellarSearchIndexManager/<PauseIngestAsync>d__9")]
public sealed virtual Task PauseIngestAsync(string indexName, PauseIngestSearchIndexOptions options, IScope scope);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Search.StellarSearchIndexManager/<ResumeIngestAsync>d__10")]
public sealed virtual Task ResumeIngestAsync(string indexName, ResumeIngestSearchIndexOptions options, IScope scope);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Search.StellarSearchIndexManager/<AllowQueryingAsync>d__11")]
public sealed virtual Task AllowQueryingAsync(string indexName, AllowQueryingSearchIndexOptions options, IScope scope);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Search.StellarSearchIndexManager/<DisallowQueryingAsync>d__12")]
public sealed virtual Task DisallowQueryingAsync(string indexName, DisallowQueryingSearchIndexOptions options, IScope scope);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Search.StellarSearchIndexManager/<FreezePlanAsync>d__13")]
public sealed virtual Task FreezePlanAsync(string indexName, FreezePlanSearchIndexOptions options, IScope scope);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Management.Search.StellarSearchIndexManager/<UnfreezePlanAsync>d__14")]
public sealed virtual Task UnfreezePlanAsync(string indexName, UnfreezePlanSearchIndexOptions options, IScope scope);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Stellar.Query.StellarQueryClient : object {
    private StellarCluster _stellarCluster;
    private QueryServiceClient _queryClient;
    private ITypeSerializer _typeSerializer;
    private IRetryOrchestrator _retryHandler;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastActivity>k__BackingField;
    public Nullable`1<DateTime> LastActivity { get; }
    internal StellarQueryClient(StellarCluster stellarCluster, QueryServiceClient queryClient, ITypeSerializer typeSerializer, IRetryOrchestrator retryHandler);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_LastActivity();
    public sealed virtual Task`1<IQueryResult`1<T>> QueryAsync(string statement, QueryOptions options);
    public sealed virtual void UpdateClusterCapabilities(ClusterCapabilities clusterCapabilities);
    public sealed virtual int InvalidateQueryCache();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Stellar.Query.StellarQueryResult`1 : object {
    private AsyncServerStreamingCall`1<QueryResponse> _streamingQueryResponse;
    private ITypeSerializer _serializer;
    private IAsyncStreamReader`1<QueryResponse> _streamReader;
    private List`1<T> _tempResults;
    private bool _hasReadHeader;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _disposed;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private QueryMetaData <MetaData>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Error> <Errors>k__BackingField;
    public RetryReason RetryReason { get; }
    public IAsyncEnumerable`1<T> Rows { get; }
    [NullableAttribute("2")]
public QueryMetaData MetaData { get; public set; }
    public List`1<Error> Errors { get; }
    public StellarQueryResult`1(AsyncServerStreamingCall`1<QueryResponse> streamingQueryResponse, ITypeSerializer serializer);
    public sealed virtual void Dispose();
    [AsyncStateMachineAttribute("Couchbase.Stellar.Query.StellarQueryResult`1/<InitializeAsync>d__8")]
internal Task InitializeAsync(CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("Couchbase.Stellar.Query.StellarQueryResult`1/<GetAsyncEnumerator>d__9")]
public sealed virtual IAsyncEnumerator`1<T> GetAsyncEnumerator(CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("Couchbase.Stellar.Query.StellarQueryResult`1/<GetAsyncEnumerator2>d__10")]
public IAsyncEnumerator`1<T> GetAsyncEnumerator2(CancellationToken cancellationToken);
    private QueryMetrics ConvertQueryMetrics(Metrics protoMetrics);
    private List`1<QueryWarning> ConvertQueryWarnings(RepeatedField`1<Warning> protoWarnings);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
    public sealed virtual IAsyncEnumerable`1<T> get_Rows();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual QueryMetaData get_MetaData();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MetaData(QueryMetaData value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<Error> get_Errors();
}
internal interface Couchbase.Stellar.Search.IStellarSearchClient {
    [NullableContextAttribute("1")]
public abstract virtual Task`1<ISearchResult> QueryAsync(string indexName, ISearchQuery query, SearchOptions options, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Stellar.Search.StellarSearchClient : object {
    private SearchServiceClient _searchClient;
    private StellarCluster _stellarCluster;
    private ITypeSerializer _serializer;
    private StellarSearchDataMapper _dataMapper;
    private IRetryOrchestrator _retryHandler;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastActivity>k__BackingField;
    public Nullable`1<DateTime> LastActivity { get; }
    internal StellarSearchClient(StellarCluster stellarCluster);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_LastActivity();
    public sealed virtual Task`1<ISearchResult> QueryAsync(string indexName, FtsSearchRequest ftsSearchRequest, VectorSearch vectorSearchRequest, IScope scope, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Couchbase.Stellar.Search.StellarSearchClient/<QueryAsync>d__10")]
public sealed virtual Task`1<ISearchResult> QueryAsync(string indexName, ISearchQuery query, SearchOptions options, CancellationToken cancellationToken);
    private Query QueryConverter(ISearchQuery searchRequest, ISearchQuery couchbaseQuery);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Couchbase.Stellar.Search.StellarSearchDataMapper : object {
    [AsyncStateMachineAttribute("Couchbase.Stellar.Search.StellarSearchDataMapper/<MapAsync>d__0")]
public ValueTask`1<ISearchResult> MapAsync(IAsyncStreamReader`1<SearchQueryResponse> stream, CancellationToken cancellationToken);
    public static IFacetResult ParseFacetResult(FacetResult protoFacet, string facetName);
    private static ReadOnlyCollection`1<Term> ParseTerms(RepeatedField`1<TermResult> protoTerms);
    private static ReadOnlyCollection`1<DateRange> ParseDateRanges(RepeatedField`1<DateRangeResult> protoDateRanges);
    private static ReadOnlyCollection`1<NumericRange> ParseNumericRanges(RepeatedField`1<NumericRangeResult> protoNumericRanges);
    private static MetaData ParseMetaData(MetaData metadata);
    private static ISearchQueryRow ParseSearchQueryRow(SearchQueryRow protoSearchRow);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.Stellar.Search.StellarSearchQueryRow : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Score>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [DynamicAttribute]
[CompilerGeneratedAttribute]
private object <Explanation>k__BackingField;
    [DynamicAttribute]
[CompilerGeneratedAttribute]
private object <Locations>k__BackingField;
    [DynamicAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Fields>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, List`1<string>> <Fragments>k__BackingField;
    public string Id { get; internal set; }
    public double Score { get; internal set; }
    public string Index { get; internal set; }
    [DynamicAttribute]
public object Explanation { get; internal set; }
    [DynamicAttribute]
public object Locations { get; internal set; }
    [DynamicAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, object> Fields { get; internal set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, List`1<string>> Fragments { get; internal set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual double get_Score();
    [CompilerGeneratedAttribute]
internal void set_Score(double value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Index();
    [CompilerGeneratedAttribute]
internal void set_Index(string value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_Explanation();
    [CompilerGeneratedAttribute]
internal void set_Explanation(object value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_Locations();
    [CompilerGeneratedAttribute]
internal void set_Locations(object value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Fields();
    [CompilerGeneratedAttribute]
internal void set_Fields(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, List`1<string>> get_Fragments();
    [CompilerGeneratedAttribute]
internal void set_Fragments(IDictionary`2<string, List`1<string>> value);
}
public class Couchbase.Stellar.Search.StellarSearchResult : object {
    [CompilerGeneratedAttribute]
private IList`1<ISearchQueryRow> <Hits>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IFacetResult> <Facets>k__BackingField;
    [CompilerGeneratedAttribute]
private MetaData <MetaData>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [JsonPropertyAttribute("hits")]
public IList`1<ISearchQueryRow> Hits { get; internal set; }
    [JsonPropertyAttribute("facets")]
public IDictionary`2<string, IFacetResult> Facets { get; internal set; }
    [JsonPropertyAttribute("metaData")]
public MetaData MetaData { get; internal set; }
    public RetryReason RetryReason { get; }
    public sealed virtual IEnumerator`1<ISearchQueryRow> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<ISearchQueryRow> get_Hits();
    [CompilerGeneratedAttribute]
internal void set_Hits(IList`1<ISearchQueryRow> value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, IFacetResult> get_Facets();
    [CompilerGeneratedAttribute]
internal void set_Facets(IDictionary`2<string, IFacetResult> value);
    [CompilerGeneratedAttribute]
public sealed virtual MetaData get_MetaData();
    [CompilerGeneratedAttribute]
internal void set_MetaData(MetaData value);
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Stellar.StellarBucket : object {
    private StellarCluster _stellarCluster;
    private StellarCollectionManager _collectionManager;
    private ConcurrentDictionary`2<string, IScope> _scopes;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _disposed;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public bool SupportsCollections { get; }
    public string Name { get; }
    public ICluster Cluster { get; }
    public IViewIndexManager ViewIndexes { get; }
    public ICouchbaseCollectionManager Collections { get; }
    internal StellarBucket(string name, StellarCluster stellarCluster);
    public sealed virtual bool get_SupportsCollections();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    public sealed virtual ICluster get_Cluster();
    public sealed virtual IViewIndexManager get_ViewIndexes();
    public sealed virtual ICouchbaseCollectionManager get_Collections();
    public sealed virtual ICouchbaseCollection Collection(string collectionName);
    public sealed virtual ValueTask`1<ICouchbaseCollection> CollectionAsync(string collectionName);
    public sealed virtual ICouchbaseCollection DefaultCollection();
    public sealed virtual ValueTask`1<ICouchbaseCollection> DefaultCollectionAsync();
    public sealed virtual IScope DefaultScope();
    public sealed virtual ValueTask`1<IScope> DefaultScopeAsync();
    public sealed virtual void Dispose();
    public sealed virtual ValueTask DisposeAsync();
    public sealed virtual Task`1<IPingReport> PingAsync(PingOptions options);
    public sealed virtual IScope Scope(string scopeName);
    public sealed virtual ValueTask`1<IScope> ScopeAsync(string scopeName);
    public sealed virtual Task`1<IViewResult`2<TKey, TValue>> ViewQueryAsync(string designDocument, string viewName, ViewOptions options);
    public sealed virtual Task WaitUntilReadyAsync(TimeSpan timeout, WaitUntilReadyOptions options);
    private void CheckIfDisposed();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Stellar.StellarCluster : object {
    private ClusterOptions _clusterOptions;
    private List`1<Exception> _deferredExceptions;
    private IBucketManager _bucketManager;
    private ISearchIndexManager _searchIndexManager;
    private IQueryIndexManager _queryIndexManager;
    private IAnalyticsClient _analyticsClient;
    private IStellarSearchClient _searchClient;
    private IQueryClient _queryClient;
    private Metadata _metaData;
    private ConcurrentDictionary`2<string, IBucket> _buckets;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _disposed;
    [CompilerGeneratedAttribute]
private ClusterChannelCredentials <ChannelCredentials>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestTracer <RequestTracer>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetryOrchestrator <RetryHandler>k__BackingField;
    [CompilerGeneratedAttribute]
private GrpcChannel <GrpcChannel>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeSerializer <TypeSerializer>k__BackingField;
    private ClusterChannelCredentials ChannelCredentials { get; }
    internal IRequestTracer RequestTracer { get; }
    internal IRetryOrchestrator RetryHandler { get; }
    internal GrpcChannel GrpcChannel { get; }
    internal ITypeSerializer TypeSerializer { get; }
    public IServiceProvider ClusterServices { get; }
    public IQueryIndexManager QueryIndexes { get; }
    public IAnalyticsIndexManager AnalyticsIndexes { get; }
    public ISearchIndexManager SearchIndexes { get; }
    public IBucketManager Buckets { get; }
    public IUserManager Users { get; }
    public IEventingFunctionManager EventingFunctions { get; }
    public Transactions Transactions { get; }
    public bool IsBootstrapped { get; }
    public List`1<Exception> DeferredExceptions { get; }
    internal StellarCluster(IBucketManager bucketManager, ISearchIndexManager searchIndexManager, IQueryIndexManager queryIndexManager, IQueryClient queryClient, IAnalyticsClient analyticsClient, IStellarSearchClient searchClient, Metadata metaData, ClusterChannelCredentials channelCredentials, IRequestTracer requestTracer, GrpcChannel grpcChannel, ITypeSerializer typeSerializer, IRetryOrchestrator retryHandler, ClusterOptions clusterOptions);
    private StellarCluster(ClusterOptions clusterOptions);
    [CompilerGeneratedAttribute]
private ClusterChannelCredentials get_ChannelCredentials();
    [AsyncStateMachineAttribute("Couchbase.Stellar.StellarCluster/<ConnectAsync>d__16")]
public static Task`1<ICluster> ConnectAsync(string connectionString, ClusterOptions clusterOptions);
    [AsyncStateMachineAttribute("Couchbase.Stellar.StellarCluster/<ConnectAsync>d__17")]
public static Task`1<ICluster> ConnectAsync(ClusterOptions clusterOptions);
    [CompilerGeneratedAttribute]
internal IRequestTracer get_RequestTracer();
    private void CheckIfDisposed();
    [AsyncStateMachineAttribute("Couchbase.Stellar.StellarCluster/<ConnectGrpcAsync>d__22")]
private Task ConnectGrpcAsync(TimeSpan kvConnectTimeout);
    [CompilerGeneratedAttribute]
internal IRetryOrchestrator get_RetryHandler();
    [CompilerGeneratedAttribute]
internal GrpcChannel get_GrpcChannel();
    [CompilerGeneratedAttribute]
internal ITypeSerializer get_TypeSerializer();
    public sealed virtual IServiceProvider get_ClusterServices();
    public sealed virtual IQueryIndexManager get_QueryIndexes();
    public sealed virtual IAnalyticsIndexManager get_AnalyticsIndexes();
    public sealed virtual ISearchIndexManager get_SearchIndexes();
    public sealed virtual IBucketManager get_Buckets();
    public sealed virtual IUserManager get_Users();
    public sealed virtual IEventingFunctionManager get_EventingFunctions();
    public sealed virtual Transactions get_Transactions();
    [AsyncStateMachineAttribute("Couchbase.Stellar.StellarCluster/<AnalyticsQueryAsync>d__48`1")]
public sealed virtual Task`1<IAnalyticsResult`1<T>> AnalyticsQueryAsync(string statement, AnalyticsOptions options);
    public sealed virtual ValueTask`1<IBucket> BucketAsync(string name);
    public sealed virtual Task`1<IDiagnosticsReport> DiagnosticsAsync(DiagnosticsOptions options);
    public sealed virtual Task`1<IPingReport> PingAsync(PingOptions options);
    public sealed virtual void Dispose();
    public sealed virtual ValueTask DisposeAsync();
    public sealed virtual Task`1<IQueryResult`1<T>> QueryAsync(string statement, QueryOptions options);
    [AsyncStateMachineAttribute("Couchbase.Stellar.StellarCluster/<SearchQueryAsync>d__55")]
public sealed virtual Task`1<ISearchResult> SearchQueryAsync(string indexName, ISearchQuery query, SearchOptions options);
    public sealed virtual Task WaitUntilReadyAsync(TimeSpan timeout, WaitUntilReadyOptions options);
    public CallOptions GrpcCallOptions();
    public CallOptions GrpcCallOptions(CancellationToken cancellationToken);
    public CallOptions GrpcCallOptions(Nullable`1<TimeSpan> timeout, CancellationToken cancellationToken);
    private IRequestSpan TraceSpan(string attr, IRequestSpan parentSpan);
    public sealed virtual Task BootStrapAsync();
    public sealed virtual bool get_IsBootstrapped();
    public sealed virtual List`1<Exception> get_DeferredExceptions();
    internal void ThrowIfBootStrapFailed();
    private void ThrowBootStrapFailed();
    private sealed virtual override void Couchbase.IClusterExtended.RemoveBucket(string bucketName);
    private sealed virtual override bool Couchbase.IClusterExtended.BucketExists(string bucketName);
}
[ExtensionAttribute]
internal static class Couchbase.Stellar.Util.DateTimeExtensions : object {
    [ExtensionAttribute]
public static DateTime FromNow(TimeSpan expiry);
    [ExtensionAttribute]
public static Nullable`1<DateTime> FromNow(Nullable`1<TimeSpan> expiry);
}
[AttributeUsageAttribute("96")]
internal class Couchbase.StringFormatMethodAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <FormatParameterName>k__BackingField;
    public string FormatParameterName { get; private set; }
    public StringFormatMethodAttribute(string formatParameterName);
    [CompilerGeneratedAttribute]
public string get_FormatParameterName();
    [CompilerGeneratedAttribute]
private void set_FormatParameterName(string value);
}
public class Couchbase.TuningOptions : object {
    [CompilerGeneratedAttribute]
private int <MaximumOperationBuilderCapacity>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaximumRetainedOperationBuilders>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaximumInFlightOperationsPerConnection>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <StreamHttpResponseBodies>k__BackingField;
    [InterfaceStabilityAttribute("2")]
public int MaximumOperationBuilderCapacity { get; public set; }
    [InterfaceStabilityAttribute("2")]
public int MaximumRetainedOperationBuilders { get; public set; }
    [InterfaceStabilityAttribute("2")]
public int MaximumInFlightOperationsPerConnection { get; public set; }
    [InterfaceStabilityAttribute("2")]
public bool StreamHttpResponseBodies { get; public set; }
    [CompilerGeneratedAttribute]
public int get_MaximumOperationBuilderCapacity();
    [CompilerGeneratedAttribute]
public void set_MaximumOperationBuilderCapacity(int value);
    [CompilerGeneratedAttribute]
public int get_MaximumRetainedOperationBuilders();
    [CompilerGeneratedAttribute]
public void set_MaximumRetainedOperationBuilders(int value);
    [CompilerGeneratedAttribute]
public int get_MaximumInFlightOperationsPerConnection();
    [CompilerGeneratedAttribute]
public void set_MaximumInFlightOperationsPerConnection(int value);
    [CompilerGeneratedAttribute]
public bool get_StreamHttpResponseBodies();
    [CompilerGeneratedAttribute]
public void set_StreamHttpResponseBodies(bool value);
}
[AttributeUsageAttribute("32767")]
internal class Couchbase.UsedImplicitlyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private ImplicitUseKindFlags <UseKindFlags>k__BackingField;
    [CompilerGeneratedAttribute]
private ImplicitUseTargetFlags <TargetFlags>k__BackingField;
    public ImplicitUseKindFlags UseKindFlags { get; private set; }
    public ImplicitUseTargetFlags TargetFlags { get; private set; }
    public UsedImplicitlyAttribute(ImplicitUseKindFlags useKindFlags);
    public UsedImplicitlyAttribute(ImplicitUseTargetFlags targetFlags);
    public UsedImplicitlyAttribute(ImplicitUseKindFlags useKindFlags, ImplicitUseTargetFlags targetFlags);
    [CompilerGeneratedAttribute]
public ImplicitUseKindFlags get_UseKindFlags();
    [CompilerGeneratedAttribute]
private void set_UseKindFlags(ImplicitUseKindFlags value);
    [CompilerGeneratedAttribute]
public ImplicitUseTargetFlags get_TargetFlags();
    [CompilerGeneratedAttribute]
private void set_TargetFlags(ImplicitUseTargetFlags value);
}
[ExtensionAttribute]
internal static class Couchbase.Utils.ArrayExtensions : object {
    private static int GetRandomInt32(int toExclusive);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static List`1<T> Shuffle(List`1<T> list);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static T RandomOrDefault(IEnumerable`1<T> source);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static T RandomOrDefault(IEnumerable`1<T> source, Func`2<T, bool> predicate);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static bool AreEqual(List`1<T> array, List`1<T> other);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static bool AreEqual(T[] array, T[] other);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static bool AreEqual(Int16[][] array, Int16[][] other);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static int GetCombinedHashcode(T[] array);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static int GetCombinedHashcode(Int16[][] array);
    [ExtensionAttribute]
public static ReadOnlyMemory`1<byte> StripBrackets(ReadOnlyMemory`1<byte> theArray);
    [ExtensionAttribute]
public static bool IsJson(Span`1<byte> buffer);
    [ExtensionAttribute]
public static bool IsJson(ReadOnlySpan`1<byte> buffer);
}
[ExtensionAttribute]
internal static class Couchbase.Utils.BoolExtensions : object {
    [ExtensionAttribute]
public static string ToLowerString(Nullable`1<bool> value);
    [ExtensionAttribute]
public static string ToLowerString(bool value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Couchbase.Utils.CancellationTokenExtensions : object {
    [ExtensionAttribute]
public static CancellationTokenSource FallbackToTimeout(CancellationToken token, TimeSpan timeout);
    [ExtensionAttribute]
public static CancellationToken FallbackToToken(CancellationTokenSource cts, CancellationToken token);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Utils.CancellationTokenSourcePool : object {
    [CompilerGeneratedAttribute]
private static CancellationTokenSourcePool <Shared>k__BackingField;
    private ObjectPool`1<CancellationTokenSource> _pool;
    public static CancellationTokenSourcePool Shared { get; }
    private static CancellationTokenSourcePool();
    [CompilerGeneratedAttribute]
public static CancellationTokenSourcePool get_Shared();
    public CancellationTokenSource Rent();
    public CancellationTokenSource Rent(TimeSpan delay);
    public void Return(CancellationTokenSource cts);
    public sealed virtual void Dispose();
}
internal static class Couchbase.Utils.ClientIdentifier : object {
    private static ProductInfoHeaderValue[] UserAgentSegments;
    private static string ClientDescription;
    internal static ulong InstanceId;
    private static ClientIdentifier();
    public static string GetClientDescription();
    public static void SetUserAgent(HttpRequestHeaders headers);
    public static string FormatConnectionString(ulong connectionId);
}
internal static class Couchbase.Utils.CouchbaseStrings : object {
    public static string MinimumPattern;
    public static string MaximumPattern;
    public static ReadOnlySpan`1<byte> TrueBytes { get; }
    public static ReadOnlySpan`1<byte> FalseBytes { get; }
    public static ReadOnlySpan`1<byte> get_TrueBytes();
    public static ReadOnlySpan`1<byte> get_FalseBytes();
}
internal static class Couchbase.Utils.CurrentAssembly : object {
    public static Assembly Current;
    public static Version Version;
    private static CurrentAssembly();
}
internal class Couchbase.Utils.DotNetDnsClient : object {
    public sealed virtual Task`1<IPAddress[]> GetHostAddressesAsync(string hostName);
}
internal static class Couchbase.Utils.EncodingUtils : object {
    public static Encoding Utf8NoBomEncoding;
    private static EncodingUtils();
}
[ExtensionAttribute]
internal static class Couchbase.Utils.EnumExtensions : object {
    [ExtensionAttribute]
public static string GetDescription(Nullable`1<T> value);
    [ExtensionAttribute]
public static string GetDescription(T value);
    public static bool TryGetFromDescription(string description, T& enum);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Couchbase.Utils.ExceptionUtil : object {
    public static string ConnectException;
    public static string ConnectTimeoutExceptionMsg;
    public static string OperationTimeout;
    public static string GetMessage(string msg, Object[] args);
}
[ExtensionAttribute]
internal static class Couchbase.Utils.HttpContentExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool TryDeserialize(string jsonString, JsonTypeInfo`1<T> typeInfo, T& result);
}
internal interface Couchbase.Utils.IDotNetDnsClient {
    public abstract virtual Task`1<IPAddress[]> GetHostAddressesAsync(string hostName);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Utils.IIpEndPointService {
    public abstract virtual ValueTask`1<IPEndPoint> GetIpEndPointAsync(string hostNameOrIpAddress, int port, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Utils.IpEndPointService : object {
    private IDnsResolver _dnsResolver;
    public IpEndPointService(IDnsResolver dnsResolver);
    [AsyncStateMachineAttribute("Couchbase.Utils.IpEndPointService/<GetIpEndPointAsync>d__2")]
public sealed virtual ValueTask`1<IPEndPoint> GetIpEndPointAsync(string hostNameOrIpAddress, int port, CancellationToken cancellationToken);
}
[ExtensionAttribute]
internal static class Couchbase.Utils.JTokenExtensions : object {
    [ExtensionAttribute]
public static T GetTokenValue(JToken jToken, string name);
}
internal class Couchbase.Utils.LightweightStopwatch : ValueType {
    private long _startTicks;
    public long ElapsedMilliseconds { get; }
    public TimeSpan Elapsed { get; }
    public static LightweightStopwatch StartNew();
    [IsReadOnlyAttribute]
public long get_ElapsedMilliseconds();
    [IsReadOnlyAttribute]
public TimeSpan get_Elapsed();
    public void Restart();
}
[ExtensionAttribute]
internal static class Couchbase.Utils.MemoryPoolExtensions : object {
    [ExtensionAttribute]
public static SlicedMemoryOwner`1<T> RentAndSlice(MemoryPool`1<T> memoryPool, int length);
}
internal class Couchbase.Utils.NullAsyncDisposable : object {
    [CompilerGeneratedAttribute]
private static NullAsyncDisposable <Instance>k__BackingField;
    public static NullAsyncDisposable Instance { get; }
    private static NullAsyncDisposable();
    [CompilerGeneratedAttribute]
public static NullAsyncDisposable get_Instance();
    public sealed virtual ValueTask DisposeAsync();
}
internal class Couchbase.Utils.NullDisposable : object {
    [CompilerGeneratedAttribute]
private static NullDisposable <Instance>k__BackingField;
    public static NullDisposable Instance { get; }
    private static NullDisposable();
    [CompilerGeneratedAttribute]
public static NullDisposable get_Instance();
    public sealed virtual void Dispose();
}
[ExtensionAttribute]
internal static class Couchbase.Utils.OpCodeExtensions : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
internal static string ToMetricTag(OpCode opCode);
}
internal static class Couchbase.Utils.QueryContext : object {
    private static string _default;
    public static string Create(string bucketName, string scopeName);
    public static string Create(string bucketName);
    public static string Create();
    public static string CreateOrDefault(string bucketName, string scopeName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Couchbase.Utils.SlicedMemoryOwner`1 : ValueType {
    private int _start;
    private int _length;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IMemoryOwner`1<T> <MemoryOwner>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static SlicedMemoryOwner`1<T> Empty { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IMemoryOwner`1<T> MemoryOwner { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Memory`1<T> Memory { get; }
    public bool IsEmpty { get; }
    public SlicedMemoryOwner`1(IMemoryOwner`1<T> memoryOwner);
    public SlicedMemoryOwner`1(IMemoryOwner`1<T> memoryOwner, int start);
    public SlicedMemoryOwner`1(IMemoryOwner`1<T> memoryOwner, int start, int length);
    public static SlicedMemoryOwner`1<T> get_Empty();
    [CompilerGeneratedAttribute]
public IMemoryOwner`1<T> get_MemoryOwner();
    public sealed virtual Memory`1<T> get_Memory();
    public bool get_IsEmpty();
    public sealed virtual void Dispose();
    public SlicedMemoryOwner`1<T> Slice(int start);
    public SlicedMemoryOwner`1<T> Slice(int start, int length);
    public sealed virtual bool Equals(SlicedMemoryOwner`1<T> other);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
}
[ExtensionAttribute]
internal static class Couchbase.Utils.StreamExtensions : object {
    [ExtensionAttribute]
public static void Write(Stream stream, ReadOnlyMemory`1<byte> buffer);
}
internal class Couchbase.Utils.SynchronizationContextExclusion : object {
    private bool _disposed;
    private SynchronizationContext _cachedContext;
    public sealed virtual void Dispose();
}
public static class Couchbase.Utils.TaskHelpers : object {
    [ObsoleteAttribute("This method was not intended to be public.  It will go away in a future version.")]
public static Task`1<T> WhenAnySuccessful(IEnumerable`1<Task`1<T>> tasks);
    internal static Task`1<T> WhenAnySuccessful(IEnumerable`1<Task`1<T>> tasks, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Couchbase.Utils.ThrowHelper : object {
    [DoesNotReturnAttribute]
public static void ThrowServiceNotAvailableException(ServiceType serviceType);
    [DoesNotReturnAttribute]
public static void ThrowArgumentException(string message, string paramName);
    [DoesNotReturnAttribute]
public static void ThrowArgumentNullException(string paramName);
    [DoesNotReturnAttribute]
public static void ThrowArgumentOutOfRangeException();
    [DoesNotReturnAttribute]
public static void ThrowArgumentOutOfRangeException(string paramName);
    [DoesNotReturnAttribute]
public static void ThrowInvalidArgumentException(string message);
    [DoesNotReturnAttribute]
public static void ThrowInvalidEnumArgumentException(string argumentName, int invalidValue, Type enumClass);
    [DoesNotReturnAttribute]
public static void ThrowInvalidIndexException(string message);
    [DoesNotReturnAttribute]
public static void ThrowInvalidOperationException(string message);
    [DoesNotReturnAttribute]
public static void ThrowNotSupportedException(string message);
    [DoesNotReturnAttribute]
public static void ThrowObjectDisposedException(string objectName);
    [DoesNotReturnAttribute]
public static void ThrowSocketNotAvailableException(string objectName);
    [DoesNotReturnAttribute]
public static void ThrowOperationCanceledException();
    [DoesNotReturnAttribute]
public static void ThrowSendQueueFullException();
    [DoesNotReturnAttribute]
public static void ThrowNodeUnavailableException(string message);
    [ExtensionAttribute]
public static T EnsureNotNullForDataStructures(T value);
    [DoesNotReturnAttribute]
public static void ThrowTimeoutException(IOperation operation, Exception innerException, TypedRedactor redactor, IErrorContext context);
    public static Exception CreateTimeoutException(IOperation operation, Exception innerException, TypedRedactor redactor, IErrorContext context);
    [NullableContextAttribute("2")]
[DoesNotReturnAttribute]
public static void ThrowUnsupportedException(string message);
    [DoesNotReturnAttribute]
public static void ThrowFalseTimeoutException(IOperation operation, KeyValueErrorContext errorContext);
    [NullableContextAttribute("2")]
[DoesNotReturnAttribute]
public static void ThrowJsonException(string message);
    public static FeatureNotAvailableException ThrowFeatureNotAvailableException(string featureName, string productName);
}
internal static class Couchbase.Utils.TimerFactory : object {
    public static Timer CreateWithFlowSuppressed(TimerCallback callback, object state, TimeSpan dueTime, TimeSpan period);
}
[ExtensionAttribute]
public static class Couchbase.Utils.TimeSpanExtensions : object {
    private static long NanosecondsPerSecond;
    private static long TicksPerMicrosecond;
    private static TimeSpan RelativeTtlThreshold;
    private static DateTime UnixEpoch;
    private static Regex DurationValueSuffixRegex;
    private static string MicrosSuffix;
    private static string MillisSuffix;
    private static string SecondSuffix;
    private static TimeSpanExtensions();
    [ExtensionAttribute]
internal static UInt32 ToMicroseconds(TimeSpan duration);
    [ExtensionAttribute]
public static UInt32 ToTtl(TimeSpan duration);
    [ExtensionAttribute]
public static UInt32 ToTtl(UInt32 duration);
    [ExtensionAttribute]
public static UInt32 GetSeconds(TimeSpan timeSpan);
    internal static bool TryConvertToMicros(object obj, Int64& duration);
    internal static double NanosecondsToTicks(long nanoseconds);
    internal static TimeSpan FromNanoseconds(long nanoseconds);
}
[ExtensionAttribute]
internal static class Couchbase.Utils.UriExtensions : object {
    public static string Http;
    public static string Https;
    public static string QueryPath;
    public static string AnalyticsPath;
    [ExtensionAttribute]
internal static Uri GetQueryUri(NodeAdapter nodeAdapter, ClusterOptions clusterOptions);
    [ExtensionAttribute]
internal static Uri GetAnalyticsUri(NodeAdapter nodesAdapter, ClusterOptions clusterOptions);
    [ExtensionAttribute]
internal static Uri GetSearchUri(NodeAdapter nodeAdapter, ClusterOptions clusterOptions);
    [ExtensionAttribute]
internal static Uri GetViewsUri(NodeAdapter nodesAdapter, ClusterOptions clusterOptions);
    [ExtensionAttribute]
internal static Uri GetEventingUri(NodeAdapter nodeAdapter, ClusterOptions clusterOptions);
    [ExtensionAttribute]
internal static Uri GetManagementUri(NodeAdapter nodesAdapter, ClusterOptions clusterOptions);
}
internal static class Couchbase.Utils.Utf8Helpers : object {
    public static ReadOnlySpan`1<byte> Utf8Bom { get; }
    public static ReadOnlySpan`1<byte> get_Utf8Bom();
    public static ReadOnlySpan`1<byte> TrimBomIfPresent(ReadOnlySpan`1<byte> data);
    public static ReadOnlyMemory`1<byte> TrimBomIfPresent(ReadOnlyMemory`1<byte> data);
}
internal class Couchbase.Utils.Utf8MemoryReader : TextReader {
    public static ObjectPool`1<Utf8MemoryReader> InstancePool;
    private Decoder _decoder;
    private ReadOnlyMemory`1<byte> _memory;
    private Nullable`1<char> _holdoverCharacter;
    private static Utf8MemoryReader();
    public void ReleaseMemory();
    public void SetMemory(ReadOnlyMemory`1& buffer);
    public virtual int Read(Char[] buffer, int index, int count);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Couchbase.Views.BlockViewResult`2 : ViewResultBase`2<TKey, TValue> {
    private ITypeSerializer _deserializer;
    private bool _enumerated;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IEnumerable`1<IViewRow`2<TKey, TValue>> _rows;
    public BlockViewResult`2(HttpStatusCode statusCode, string message, ITypeSerializer deserializer);
    public BlockViewResult`2(HttpStatusCode statusCode, string message, Stream responseStream, ITypeSerializer deserializer, IDisposable decodeSpan, IDisposable ownedForCleanup);
    [AsyncStateMachineAttribute("Couchbase.Views.BlockViewResult`2/<InitializeAsync>d__5")]
public virtual Task InitializeAsync(CancellationToken cancellationToken);
    public virtual IAsyncEnumerator`1<IViewRow`2<TKey, TValue>> GetAsyncEnumerator(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Views.IViewClient {
    public Nullable`1<DateTime> LastActivity { get; }
    public abstract virtual Nullable`1<DateTime> get_LastActivity();
    public abstract virtual Task`1<IViewResult`2<TKey, TValue>> ExecuteAsync(IViewQuery query);
}
[NullableContextAttribute("1")]
internal interface Couchbase.Views.IViewQuery {
    [NullableAttribute("2")]
public IRequestSpan RequestSpanValue { get; internal set; }
    [NullableContextAttribute("2")]
public abstract virtual IRequestSpan get_RequestSpanValue();
    [NullableContextAttribute("2")]
internal abstract virtual void set_RequestSpanValue(IRequestSpan value);
    public abstract virtual IViewQuery Asc();
    public abstract virtual IViewQuery Desc();
    public abstract virtual IViewQuery EndKey(object endKey);
    public abstract virtual IViewQuery EndKey(object endKey, bool encode);
    public abstract virtual IViewQuery EndKeyDocId(object docId);
    public abstract virtual IViewQuery FullSet();
    public abstract virtual IViewQuery Group(Nullable`1<bool> group);
    public abstract virtual IViewQuery GroupLevel(Nullable`1<int> level);
    public abstract virtual IViewQuery InclusiveEnd(Nullable`1<bool> inclusiveEnd);
    public abstract virtual IViewQuery Key(object key);
    public abstract virtual IViewQuery Key(object key, bool encode);
    public abstract virtual IViewQuery Keys(IEnumerable keys);
    public abstract virtual IViewQuery Keys(IEnumerable keys, bool encode);
    public abstract virtual IViewQuery OnError(bool stop);
    public abstract virtual IViewQuery Reduce(Nullable`1<bool> reduce);
    public abstract virtual IViewQuery StartKey(object endKey);
    public abstract virtual IViewQuery StartKey(object endKey, bool encode);
    public abstract virtual IViewQuery StartKeyDocId(object docId);
    public abstract virtual IViewQuery From(string designDoc, string view);
    public abstract virtual IViewQuery Bucket(string name);
    public abstract virtual IViewQuery DesignDoc(string name);
    public abstract virtual IViewQuery View(string name);
    public abstract virtual IViewQuery Skip(Nullable`1<int> count);
    public abstract virtual IViewQuery Stale(StaleState staleState);
    public abstract virtual IViewQuery Limit(Nullable`1<int> limit);
    public abstract virtual IViewQuery Development(Nullable`1<bool> development);
}
[NullableContextAttribute("2")]
internal interface Couchbase.Views.IViewQueryable {
    public string BucketName { get; }
    public bool UseSsl { get; public set; }
    [NullableAttribute("1")]
public string DesignDocName { get; }
    public string ViewName { get; }
    public ITypeSerializer Serializer { get; }
    public abstract virtual string get_BucketName();
    public abstract virtual bool get_UseSsl();
    public abstract virtual void set_UseSsl(bool value);
    [NullableContextAttribute("1")]
public abstract virtual string get_DesignDocName();
    public abstract virtual string get_ViewName();
    public abstract virtual ITypeSerializer get_Serializer();
    [NullableContextAttribute("1")]
public abstract virtual Uri RawUri();
    [NullableContextAttribute("1")]
public abstract virtual IViewQueryable BaseUri(Uri uri);
    [NullableContextAttribute("1")]
public abstract virtual string CreateRequestBody();
}
[NullableContextAttribute("2")]
public interface Couchbase.Views.IViewResult`2 {
    [NullableAttribute("1")]
public IAsyncEnumerable`1<IViewRow`2<TKey, TValue>> Rows { get; }
    public ViewMetaData MetaData { get; }
    [NullableContextAttribute("1")]
public abstract virtual IAsyncEnumerable`1<IViewRow`2<TKey, TValue>> get_Rows();
    public abstract virtual ViewMetaData get_MetaData();
}
[NullableContextAttribute("1")]
public interface Couchbase.Views.IViewRow`2 {
    [NullableAttribute("2")]
public string Id { get; }
    public TKey Key { get; }
    public TValue Value { get; }
    [NullableContextAttribute("2")]
public abstract virtual string get_Id();
    public abstract virtual TKey get_Key();
    public abstract virtual TValue get_Value();
}
public enum Couchbase.Views.StaleState : Enum {
    public int value__;
    public static StaleState None;
    public static StaleState False;
    public static StaleState Ok;
    public static StaleState UpdateAfter;
}
[ExtensionAttribute]
internal static class Couchbase.Views.StaleStateExtensions : object {
    [ExtensionAttribute]
public static string ToLowerString(StaleState value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Couchbase.Views.StreamingViewResult`2 : ViewResultBase`2<TKey, TValue> {
    private IStreamingTypeDeserializer _deserializer;
    [NullableAttribute("2")]
private IJsonStreamReader _reader;
    private bool _hasReadToRows;
    private bool _hasReadRows;
    private bool _hasFinishedReading;
    public StreamingViewResult`2(HttpStatusCode statusCode, string message, IStreamingTypeDeserializer deserializer);
    public StreamingViewResult`2(HttpStatusCode statusCode, string message, Stream responseStream, IStreamingTypeDeserializer deserializer, IDisposable decodeSpan, IDisposable ownedForCleanup);
    [AsyncStateMachineAttribute("Couchbase.Views.StreamingViewResult`2/<InitializeAsync>d__7")]
public virtual Task InitializeAsync(CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("Couchbase.Views.StreamingViewResult`2/<GetAsyncEnumerator>d__8")]
public virtual IAsyncEnumerator`1<IViewRow`2<TKey, TValue>> GetAsyncEnumerator(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Couchbase.Views.StreamingViewResult`2/<ReadResponseAttributes>d__9")]
private Task ReadResponseAttributes(CancellationToken cancellationToken);
    public virtual void Dispose();
}
public class Couchbase.Views.View : object {
    [CompilerGeneratedAttribute]
private string <Map>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reduce>k__BackingField;
    [JsonPropertyAttribute("map")]
public string Map { get; public set; }
    [JsonPropertyAttribute]
public string Reduce { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Map();
    [CompilerGeneratedAttribute]
public void set_Map(string value);
    [CompilerGeneratedAttribute]
public string get_Reduce();
    [CompilerGeneratedAttribute]
public void set_Reduce(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Views.ViewClient : HttpServiceBase {
    private ITypeSerializer _serializer;
    private ILogger`1<ViewClient> _logger;
    private IRedactor _redactor;
    private IRequestTracer _tracer;
    protected static string Success;
    public ViewClient(ICouchbaseHttpClientFactory httpClientFactory, ITypeSerializer serializer, ILogger`1<ViewClient> logger, IRedactor redactor, IRequestTracer tracer);
    [AsyncStateMachineAttribute("Couchbase.Views.ViewClient/<ExecuteAsync>d__6`2")]
public sealed virtual Task`1<IViewResult`2<TKey, TValue>> ExecuteAsync(IViewQuery query);
    protected static HttpStatusCode GetStatusCode(string message);
    private IRequestSpan RootSpan(string operation, IViewQuery query);
}
public enum Couchbase.Views.ViewErrorMode : Enum {
    public int value__;
    public static ViewErrorMode Stop;
    public static ViewErrorMode Continue;
}
public class Couchbase.Views.ViewMetaData : object {
    [CompilerGeneratedAttribute]
private UInt32 <TotalRows>k__BackingField;
    public UInt32 TotalRows { get; internal set; }
    [CompilerGeneratedAttribute]
public UInt32 get_TotalRows();
    [CompilerGeneratedAttribute]
internal void set_TotalRows(UInt32 value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Couchbase.Views.ViewOptions : object {
    [CompilerGeneratedAttribute]
private ViewScanConsistency <ScanConsistencyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <SkipValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <LimitValue>k__BackingField;
    [CompilerGeneratedAttribute]
private object <StartKeyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private object <StartKeyDocIdValue>k__BackingField;
    [CompilerGeneratedAttribute]
private object <EndKeyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private object <EndKeyDocIdValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <InclusiveEndValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <GroupValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <GroupLevelValue>k__BackingField;
    [CompilerGeneratedAttribute]
private object <KeyValue>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Object[] <KeysValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ViewOrdering <ViewOrderingValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReduceValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DevelopmentValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <FullSetValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DebugValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TimeoutValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ViewErrorMode <OnErrorValue>k__BackingField;
    [NullableAttribute("1")]
internal Dictionary`2<string, string> RawParameters;
    [CompilerGeneratedAttribute]
private DesignDocumentNamespace <NamespaceValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeSerializer <SerializerValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetryStrategy <RetryStrategyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestSpan <RequestSpanValue>k__BackingField;
    internal ViewScanConsistency ScanConsistencyValue { get; internal set; }
    internal Nullable`1<int> SkipValue { get; internal set; }
    internal Nullable`1<int> LimitValue { get; internal set; }
    internal object StartKeyValue { get; internal set; }
    internal object StartKeyDocIdValue { get; internal set; }
    internal object EndKeyValue { get; internal set; }
    internal object EndKeyDocIdValue { get; internal set; }
    internal Nullable`1<bool> InclusiveEndValue { get; internal set; }
    internal Nullable`1<bool> GroupValue { get; internal set; }
    internal Nullable`1<int> GroupLevelValue { get; internal set; }
    internal object KeyValue { get; internal set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal Object[] KeysValue { get; internal set; }
    internal ViewOrdering ViewOrderingValue { get; internal set; }
    internal Nullable`1<bool> ReduceValue { get; internal set; }
    internal Nullable`1<bool> DevelopmentValue { get; internal set; }
    internal Nullable`1<bool> FullSetValue { get; internal set; }
    internal Nullable`1<bool> DebugValue { get; internal set; }
    internal Nullable`1<TimeSpan> TimeoutValue { get; internal set; }
    internal ViewErrorMode OnErrorValue { get; internal set; }
    internal DesignDocumentNamespace NamespaceValue { get; internal set; }
    internal ITypeSerializer SerializerValue { get; internal set; }
    internal IRetryStrategy RetryStrategyValue { get; internal set; }
    internal IRequestSpan RequestSpanValue { get; private set; }
    [NullableAttribute("1")]
public static ViewOptions Default { get; }
    [CompilerGeneratedAttribute]
internal ViewScanConsistency get_ScanConsistencyValue();
    [CompilerGeneratedAttribute]
internal void set_ScanConsistencyValue(ViewScanConsistency value);
    [CompilerGeneratedAttribute]
internal Nullable`1<int> get_SkipValue();
    [CompilerGeneratedAttribute]
internal void set_SkipValue(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<int> get_LimitValue();
    [CompilerGeneratedAttribute]
internal void set_LimitValue(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
internal object get_StartKeyValue();
    [CompilerGeneratedAttribute]
internal void set_StartKeyValue(object value);
    [CompilerGeneratedAttribute]
internal object get_StartKeyDocIdValue();
    [CompilerGeneratedAttribute]
internal void set_StartKeyDocIdValue(object value);
    [CompilerGeneratedAttribute]
internal object get_EndKeyValue();
    [CompilerGeneratedAttribute]
internal void set_EndKeyValue(object value);
    [CompilerGeneratedAttribute]
internal object get_EndKeyDocIdValue();
    [CompilerGeneratedAttribute]
internal void set_EndKeyDocIdValue(object value);
    [CompilerGeneratedAttribute]
internal Nullable`1<bool> get_InclusiveEndValue();
    [CompilerGeneratedAttribute]
internal void set_InclusiveEndValue(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<bool> get_GroupValue();
    [CompilerGeneratedAttribute]
internal void set_GroupValue(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<int> get_GroupLevelValue();
    [CompilerGeneratedAttribute]
internal void set_GroupLevelValue(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
internal object get_KeyValue();
    [CompilerGeneratedAttribute]
internal void set_KeyValue(object value);
    [CompilerGeneratedAttribute]
internal Object[] get_KeysValue();
    [CompilerGeneratedAttribute]
internal void set_KeysValue(Object[] value);
    [CompilerGeneratedAttribute]
internal ViewOrdering get_ViewOrderingValue();
    [CompilerGeneratedAttribute]
internal void set_ViewOrderingValue(ViewOrdering value);
    [CompilerGeneratedAttribute]
internal Nullable`1<bool> get_ReduceValue();
    [CompilerGeneratedAttribute]
internal void set_ReduceValue(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<bool> get_DevelopmentValue();
    [CompilerGeneratedAttribute]
internal void set_DevelopmentValue(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<bool> get_FullSetValue();
    [CompilerGeneratedAttribute]
internal void set_FullSetValue(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<bool> get_DebugValue();
    [CompilerGeneratedAttribute]
internal void set_DebugValue(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_TimeoutValue();
    [CompilerGeneratedAttribute]
internal void set_TimeoutValue(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
internal ViewErrorMode get_OnErrorValue();
    [CompilerGeneratedAttribute]
internal void set_OnErrorValue(ViewErrorMode value);
    [CompilerGeneratedAttribute]
internal DesignDocumentNamespace get_NamespaceValue();
    [CompilerGeneratedAttribute]
internal void set_NamespaceValue(DesignDocumentNamespace value);
    [CompilerGeneratedAttribute]
internal ITypeSerializer get_SerializerValue();
    [CompilerGeneratedAttribute]
internal void set_SerializerValue(ITypeSerializer value);
    [CompilerGeneratedAttribute]
internal IRetryStrategy get_RetryStrategyValue();
    [CompilerGeneratedAttribute]
internal void set_RetryStrategyValue(IRetryStrategy value);
    [CompilerGeneratedAttribute]
internal IRequestSpan get_RequestSpanValue();
    [CompilerGeneratedAttribute]
private void set_RequestSpanValue(IRequestSpan value);
    [NullableContextAttribute("1")]
public ViewOptions RequestSpan(IRequestSpan span);
    [NullableContextAttribute("1")]
public ViewOptions RetryStrategy(IRetryStrategy retryStrategy);
    [NullableContextAttribute("1")]
public ViewOptions ScanConsistency(ViewScanConsistency scanConsistency);
    [NullableContextAttribute("1")]
public ViewOptions Skip(int skip);
    [NullableContextAttribute("1")]
public ViewOptions Limit(int limit);
    [NullableContextAttribute("1")]
public ViewOptions StartKey(object startKey);
    [NullableContextAttribute("1")]
public ViewOptions StartKeyDocId(object startKyDocId);
    [NullableContextAttribute("1")]
public ViewOptions EndKey(object endKey);
    [NullableContextAttribute("1")]
public ViewOptions EndKeyDocId(object endKeyDocId);
    [NullableContextAttribute("1")]
public ViewOptions InclusiveEnd(bool inclusiveEnd);
    [NullableContextAttribute("1")]
public ViewOptions Key(object key);
    [NullableContextAttribute("1")]
public ViewOptions Keys(Object[] keys);
    [NullableContextAttribute("1")]
public ViewOptions Ordering(ViewOrdering viewOrdering);
    [NullableContextAttribute("1")]
public ViewOptions Group(bool group);
    [NullableContextAttribute("1")]
public ViewOptions GroupLevel(int groupLevel);
    [NullableContextAttribute("1")]
public ViewOptions Reduce(bool reduce);
    [NullableContextAttribute("1")]
public ViewOptions Development(bool development);
    [NullableContextAttribute("1")]
public ViewOptions FullSet(bool fullSet);
    [NullableContextAttribute("1")]
public ViewOptions OnError(ViewErrorMode errorMode);
    [NullableContextAttribute("1")]
public ViewOptions Debug(bool debug);
    [NullableContextAttribute("1")]
public ViewOptions Raw(string key, string value);
    [NullableContextAttribute("1")]
public ViewOptions Namespace(DesignDocumentNamespace namespace);
    [NullableContextAttribute("1")]
public ViewOptions Timeout(TimeSpan timeout);
    [NullableContextAttribute("1")]
public ViewOptions Serializer(ITypeSerializer serializer);
    [NullableContextAttribute("1")]
public static ViewOptions get_Default();
}
public enum Couchbase.Views.ViewOrdering : Enum {
    public int value__;
    public static ViewOrdering Ascending;
    public static ViewOrdering Decesending;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Views.ViewQuery : RequestBase {
    public static string Design;
    public static string DevelopmentViewPrefix;
    public static string ViewMethod;
    public static string ForwardSlash;
    public static string QueryOperator;
    public static string QueryArgPattern;
    private static string DefaultHost;
    private static UInt32 DefaultPort;
    private static UInt32 DefaultSslPort;
    private static string Http;
    private static string Https;
    private Uri _baseUri;
    private Nullable`1<bool> _development;
    private Nullable`1<int> _skipCount;
    private StaleState _staleState;
    private Nullable`1<bool> _descending;
    [NullableAttribute("2")]
private object _endKey;
    [NullableAttribute("2")]
private object _endDocId;
    private Nullable`1<bool> _fullSet;
    private Nullable`1<bool> _group;
    private Nullable`1<int> _groupLevel;
    private Nullable`1<bool> _inclusiveEnd;
    [NullableAttribute("2")]
private object _key;
    [NullableAttribute("2")]
private IEnumerable _keys;
    private Nullable`1<int> _limit;
    private Nullable`1<bool> _continueOnError;
    private Nullable`1<bool> _reduce;
    [NullableAttribute("2")]
private object _startKey;
    [NullableAttribute("2")]
private object _startKeyDocId;
    private Nullable`1<bool> _debug;
    private Dictionary`2<string, string> _rawParams;
    private DesignDocumentNamespace _namespace;
    [CompilerGeneratedAttribute]
private string <DesignDocName>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ViewName>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IRequestSpan <Couchbase.Views.IViewQuery.RequestSpanValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseSsl>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <BucketName>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ITypeSerializer <Serializer>k__BackingField;
    public string DesignDocName { get; private set; }
    [NullableAttribute("2")]
public string ViewName { get; private set; }
    [NullableAttribute("2")]
private IRequestSpan Couchbase.Views.IViewQuery.RequestSpanValue { get; private set; }
    public bool UseSsl { get; public set; }
    [NullableAttribute("2")]
public string BucketName { get; private set; }
    public bool Idempotent { get; }
    [NullableAttribute("2")]
public ITypeSerializer Serializer { get; public set; }
    public ViewQuery(string baseUri);
    public ViewQuery(string bucketName, string baseUri);
    [NullableContextAttribute("2")]
public ViewQuery(string bucketName, string designDoc, string viewName);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DesignDocName();
    [CompilerGeneratedAttribute]
private void set_DesignDocName(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_ViewName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_ViewName(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private sealed virtual override IRequestSpan Couchbase.Views.IViewQuery.get_RequestSpanValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private sealed virtual override void Couchbase.Views.IViewQuery.set_RequestSpanValue(IRequestSpan value);
    public IViewQuery RequestSpan(IRequestSpan span);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_UseSsl();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UseSsl(bool value);
    public sealed virtual IViewQuery From(string designDoc, string view);
    public sealed virtual IViewQuery Bucket(string name);
    public sealed virtual IViewQuery DesignDoc(string name);
    public IViewQuery Debug(Nullable`1<bool> debug);
    public sealed virtual IViewQuery View(string name);
    public sealed virtual IViewQuery Skip(Nullable`1<int> count);
    public sealed virtual IViewQuery Stale(StaleState staleState);
    public sealed virtual IViewQuery Asc();
    public sealed virtual IViewQuery Desc();
    public sealed virtual IViewQuery EndKey(object endKey);
    public sealed virtual IViewQuery EndKey(object endKey, bool encode);
    public sealed virtual IViewQuery EndKeyDocId(object endDocId);
    public sealed virtual IViewQuery FullSet();
    public sealed virtual IViewQuery Group(Nullable`1<bool> group);
    public sealed virtual IViewQuery GroupLevel(Nullable`1<int> level);
    public sealed virtual IViewQuery InclusiveEnd(Nullable`1<bool> inclusiveEnd);
    public sealed virtual IViewQuery Key(object key);
    public sealed virtual IViewQuery Key(object key, bool encode);
    public sealed virtual IViewQuery Keys(IEnumerable keys);
    [ObsoleteAttribute("Keys attribute is no longer submitted via query string. Use Keys(IEnumerable) instead.")]
public sealed virtual IViewQuery Keys(IEnumerable keys, bool encode);
    public sealed virtual IViewQuery Limit(Nullable`1<int> limit);
    public sealed virtual IViewQuery OnError(bool stop);
    public sealed virtual IViewQuery Reduce(Nullable`1<bool> reduce);
    public sealed virtual IViewQuery StartKey(object startKey);
    public sealed virtual IViewQuery StartKey(object startKey, bool encode);
    public sealed virtual IViewQuery StartKeyDocId(object startKeyDocId);
    public IViewQuery Raw(string key, string value);
    public ViewQuery Namespace(DesignDocumentNamespace namespace);
    private sealed virtual override IViewQueryable Couchbase.Views.IViewQueryable.BaseUri(Uri uri);
    public sealed virtual IViewQuery Development(Nullable`1<bool> development);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_BucketName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_BucketName(string value);
    private static string EncodeParameter(object parameter);
    public sealed virtual Uri RawUri();
    public string GetRelativeUri();
    public string GetQueryParams();
    public sealed virtual string CreateRequestBody();
    public virtual bool get_Idempotent();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual ITypeSerializer get_Serializer();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Serializer(ITypeSerializer value);
    public sealed virtual void StopRecording();
    [NullableContextAttribute("2")]
public sealed virtual void StopRecording(Type errorType);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal abstract class Couchbase.Views.ViewResultBase`2 : object {
    private IDisposable _ownedForCleanup;
    [CompilerGeneratedAttribute]
private Stream <ResponseStream>k__BackingField;
    [CompilerGeneratedAttribute]
private IDisposable <DecodeSpan>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpStatusCode <StatusCode>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private ViewMetaData <MetaData>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryReason <RetryReason>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <NoRetryException>k__BackingField;
    [NullableAttribute("1")]
public IAsyncEnumerable`1<IViewRow`2<TKey, TValue>> Rows { get; }
    protected Stream ResponseStream { get; }
    protected IDisposable DecodeSpan { get; }
    public HttpStatusCode StatusCode { get; }
    [NullableAttribute("1")]
public string Message { get; }
    public ViewMetaData MetaData { get; protected set; }
    public RetryReason RetryReason { get; protected set; }
    public Exception NoRetryException { get; public set; }
    [NullableContextAttribute("1")]
protected ViewResultBase`2(HttpStatusCode statusCode, string message);
    [NullableContextAttribute("1")]
protected ViewResultBase`2(HttpStatusCode statusCode, string message, Stream responseStream, IDisposable decodeSpan, IDisposable ownedForCleanup);
    [NullableContextAttribute("1")]
public sealed virtual IAsyncEnumerable`1<IViewRow`2<TKey, TValue>> get_Rows();
    [CompilerGeneratedAttribute]
protected Stream get_ResponseStream();
    [CompilerGeneratedAttribute]
protected IDisposable get_DecodeSpan();
    [CompilerGeneratedAttribute]
public HttpStatusCode get_StatusCode();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public sealed virtual ViewMetaData get_MetaData();
    [CompilerGeneratedAttribute]
protected void set_MetaData(ViewMetaData value);
    public bool ShouldRetry();
    private void SetRetryReasonIfFailed();
    [CompilerGeneratedAttribute]
public sealed virtual RetryReason get_RetryReason();
    [CompilerGeneratedAttribute]
protected void set_RetryReason(RetryReason value);
    [CompilerGeneratedAttribute]
public sealed virtual Exception get_NoRetryException();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NoRetryException(Exception value);
    [NullableContextAttribute("1")]
public abstract virtual Task InitializeAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
public abstract virtual IAsyncEnumerator`1<IViewRow`2<TKey, TValue>> GetAsyncEnumerator(CancellationToken cancellationToken);
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Couchbase.Views.ViewRow`2 : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private TKey <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private TValue <Value>k__BackingField;
    [NullableAttribute("2")]
public string Id { get; public set; }
    public TKey Key { get; public set; }
    public TValue Value { get; public set; }
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual TKey get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(TKey value);
    [CompilerGeneratedAttribute]
public sealed virtual TValue get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(TValue value);
}
public enum Couchbase.Views.ViewScanConsistency : Enum {
    public int value__;
    [DescriptionAttribute("false")]
public static ViewScanConsistency RequestPlus;
    [DescriptionAttribute("update_after")]
public static ViewScanConsistency UpdateAfter;
    [DescriptionAttribute("ok")]
public static ViewScanConsistency NotBounded;
}
public static class Couchbase.VirtualXttrs : object {
    public static string DocExpiryTime;
}
