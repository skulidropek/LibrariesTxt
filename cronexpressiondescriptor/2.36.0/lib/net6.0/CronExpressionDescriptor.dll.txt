public enum CronExpressionDescriptor.DescriptionTypeEnum : Enum {
    public int value__;
    public static DescriptionTypeEnum FULL;
    public static DescriptionTypeEnum TIMEOFDAY;
    public static DescriptionTypeEnum SECONDS;
    public static DescriptionTypeEnum MINUTES;
    public static DescriptionTypeEnum HOURS;
    public static DescriptionTypeEnum DAYOFWEEK;
    public static DescriptionTypeEnum MONTH;
    public static DescriptionTypeEnum DAYOFMONTH;
    public static DescriptionTypeEnum YEAR;
}
public class CronExpressionDescriptor.ExpressionDescriptor : object {
    private Char[] m_specialCharacters;
    private String[] m_24hourTimeFormatTwoLetterISOLanguageName;
    private string m_expression;
    private Options m_options;
    private String[] m_expressionParts;
    private bool m_parsed;
    private bool m_use24HourTimeFormat;
    private CultureInfo m_culture;
    public ExpressionDescriptor(string expression);
    public ExpressionDescriptor(string expression, Options options);
    public string GetDescription(DescriptionTypeEnum type);
    protected string GetFullDescription();
    protected string GetTimeOfDayDescription();
    protected string GetSecondsDescription();
    protected string GetMinutesDescription();
    protected string GetHoursDescription();
    protected string GetDayOfWeekDescription();
    protected string GetMonthDescription();
    protected string GetDayOfMonthDescription();
    private string GetYearDescription();
    protected string GetSegmentDescription(string expression, string allDescription, Func`2<string, string> getSingleItemDescription, Func`2<string, string> getIntervalDescriptionFormat, Func`2<string, string> getBetweenDescriptionFormat, Func`2<string, string> getDescriptionFormat, Func`2<string, string> getRangeFormat);
    protected string GenerateBetweenSegmentDescription(string betweenExpression, Func`2<string, string> getBetweenDescriptionFormat, Func`2<string, string> getSingleItemDescription);
    protected string FormatTime(string hourExpression, string minuteExpression);
    protected string FormatTime(string hourExpression, string minuteExpression, string secondExpression);
    protected string TransformVerbosity(string description, bool useVerboseFormat);
    protected string GetString(string resourceName);
    public static string GetDescription(string expression);
    public static string GetDescription(string expression, Options options);
    [CompilerGeneratedAttribute]
private string <GetSecondsDescription>b__13_1(string s);
    [CompilerGeneratedAttribute]
private string <GetSecondsDescription>b__13_2(string s);
    [CompilerGeneratedAttribute]
private string <GetSecondsDescription>b__13_3(string s);
    [CompilerGeneratedAttribute]
private string <GetSecondsDescription>b__13_4(string s);
    [CompilerGeneratedAttribute]
private string <GetHoursDescription>b__15_0(string s);
    [CompilerGeneratedAttribute]
private string <GetHoursDescription>b__15_1(string s);
    [CompilerGeneratedAttribute]
private string <GetHoursDescription>b__15_2(string s);
    [CompilerGeneratedAttribute]
private string <GetHoursDescription>b__15_3(string s);
    [CompilerGeneratedAttribute]
private string <GetHoursDescription>b__15_4(string s);
    [CompilerGeneratedAttribute]
private string <GetDayOfWeekDescription>b__16_0(string s);
    [CompilerGeneratedAttribute]
private string <GetDayOfWeekDescription>b__16_1(string s);
    [CompilerGeneratedAttribute]
private string <GetDayOfWeekDescription>b__16_2(string s);
    [CompilerGeneratedAttribute]
private string <GetDayOfWeekDescription>b__16_3(string s);
    [CompilerGeneratedAttribute]
private string <GetDayOfWeekDescription>b__16_4(string s);
    [CompilerGeneratedAttribute]
private string <GetMonthDescription>b__17_0(string s);
    [CompilerGeneratedAttribute]
private string <GetMonthDescription>b__17_1(string s);
    [CompilerGeneratedAttribute]
private string <GetMonthDescription>b__17_2(string s);
    [CompilerGeneratedAttribute]
private string <GetMonthDescription>b__17_3(string s);
    [CompilerGeneratedAttribute]
private string <GetMonthDescription>b__17_4(string s);
    [CompilerGeneratedAttribute]
private string <GetDayOfMonthDescription>b__18_1(string s);
    [CompilerGeneratedAttribute]
private string <GetDayOfMonthDescription>b__18_2(string s);
    [CompilerGeneratedAttribute]
private string <GetDayOfMonthDescription>b__18_3(string s);
    [CompilerGeneratedAttribute]
private string <GetDayOfMonthDescription>b__18_4(string s);
    [CompilerGeneratedAttribute]
private string <GetYearDescription>b__19_1(string s);
    [CompilerGeneratedAttribute]
private string <GetYearDescription>b__19_2(string s);
    [CompilerGeneratedAttribute]
private string <GetYearDescription>b__19_3(string s);
    [CompilerGeneratedAttribute]
private string <GetYearDescription>b__19_4(string s);
}
public class CronExpressionDescriptor.ExpressionParser : object {
    private string m_expression;
    private Options m_options;
    public ExpressionParser(string expression, Options options);
    public String[] Parse();
    private void NormalizeExpression(String[] expressionParts);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private string <NormalizeExpression>b__4_0(Match t);
}
public class CronExpressionDescriptor.Options : object {
    [CompilerGeneratedAttribute]
private bool <ThrowExceptionOnParseError>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Verbose>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DayOfWeekStartIndexZero>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Use24HourTimeFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Locale>k__BackingField;
    public bool ThrowExceptionOnParseError { get; public set; }
    public bool Verbose { get; public set; }
    public bool DayOfWeekStartIndexZero { get; public set; }
    public Nullable`1<bool> Use24HourTimeFormat { get; public set; }
    public string Locale { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_ThrowExceptionOnParseError();
    [CompilerGeneratedAttribute]
public void set_ThrowExceptionOnParseError(bool value);
    [CompilerGeneratedAttribute]
public bool get_Verbose();
    [CompilerGeneratedAttribute]
public void set_Verbose(bool value);
    [CompilerGeneratedAttribute]
public bool get_DayOfWeekStartIndexZero();
    [CompilerGeneratedAttribute]
public void set_DayOfWeekStartIndexZero(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Use24HourTimeFormat();
    [CompilerGeneratedAttribute]
public void set_Use24HourTimeFormat(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Locale();
    [CompilerGeneratedAttribute]
public void set_Locale(string value);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class CronExpressionDescriptor.Resources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string AMPeriod { get; }
    internal static string AnErrorOccurredWhenGeneratingTheExpressionD { get; }
    internal static string At { get; }
    internal static string AtSpace { get; }
    internal static string AtX0 { get; }
    internal static string AtX0MinutesPastTheHour { get; }
    internal static string AtX0SecondsPastTheMinute { get; }
    internal static string BetweenX0AndX1 { get; }
    internal static string ComaBetweenDayX0AndX1OfTheMonth { get; }
    internal static string ComaEveryDay { get; }
    internal static string ComaEveryHour { get; }
    internal static string ComaEveryMinute { get; }
    internal static string ComaEveryX0Days { get; }
    internal static string ComaEveryX0DaysOfTheWeek { get; }
    internal static string ComaEveryX0Months { get; }
    internal static string ComaEveryX0Years { get; }
    internal static string ComaOnDayX0OfTheMonth { get; }
    internal static string ComaOnlyInX0 { get; }
    internal static string ComaOnlyOnX0 { get; }
    internal static string ComaOnThe { get; }
    internal static string ComaOnTheLastDayOfTheMonth { get; }
    internal static string ComaOnTheLastWeekdayOfTheMonth { get; }
    internal static string ComaOnTheLastX0OfTheMonth { get; }
    internal static string ComaOnTheX0OfTheMonth { get; }
    internal static string ComaX0ThroughX1 { get; }
    internal static string CommaStartingX0 { get; }
    internal static string EveryHour { get; }
    internal static string EveryMinute { get; }
    internal static string EveryMinuteBetweenX0AndX1 { get; }
    internal static string EverySecond { get; }
    internal static string EveryX0Hours { get; }
    internal static string EveryX0Minutes { get; }
    internal static string EveryX0Seconds { get; }
    internal static string Fifth { get; }
    internal static string First { get; }
    internal static string FirstWeekday { get; }
    internal static string Fourth { get; }
    internal static string MinutesX0ThroughX1PastTheHour { get; }
    internal static string PMPeriod { get; }
    internal static string Second { get; }
    internal static string SecondsX0ThroughX1PastTheMinute { get; }
    internal static string SpaceAnd { get; }
    internal static string SpaceAndSpace { get; }
    internal static string SpaceX0OfTheMonth { get; }
    internal static string Third { get; }
    internal static string WeekdayNearestDayX0 { get; }
    internal static string CommaDaysBeforeTheLastDayOfTheMonth { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_AMPeriod();
    internal static string get_AnErrorOccurredWhenGeneratingTheExpressionD();
    internal static string get_At();
    internal static string get_AtSpace();
    internal static string get_AtX0();
    internal static string get_AtX0MinutesPastTheHour();
    internal static string get_AtX0SecondsPastTheMinute();
    internal static string get_BetweenX0AndX1();
    internal static string get_ComaBetweenDayX0AndX1OfTheMonth();
    internal static string get_ComaEveryDay();
    internal static string get_ComaEveryHour();
    internal static string get_ComaEveryMinute();
    internal static string get_ComaEveryX0Days();
    internal static string get_ComaEveryX0DaysOfTheWeek();
    internal static string get_ComaEveryX0Months();
    internal static string get_ComaEveryX0Years();
    internal static string get_ComaOnDayX0OfTheMonth();
    internal static string get_ComaOnlyInX0();
    internal static string get_ComaOnlyOnX0();
    internal static string get_ComaOnThe();
    internal static string get_ComaOnTheLastDayOfTheMonth();
    internal static string get_ComaOnTheLastWeekdayOfTheMonth();
    internal static string get_ComaOnTheLastX0OfTheMonth();
    internal static string get_ComaOnTheX0OfTheMonth();
    internal static string get_ComaX0ThroughX1();
    internal static string get_CommaStartingX0();
    internal static string get_EveryHour();
    internal static string get_EveryMinute();
    internal static string get_EveryMinuteBetweenX0AndX1();
    internal static string get_EverySecond();
    internal static string get_EveryX0Hours();
    internal static string get_EveryX0Minutes();
    internal static string get_EveryX0Seconds();
    internal static string get_Fifth();
    internal static string get_First();
    internal static string get_FirstWeekday();
    internal static string get_Fourth();
    internal static string get_MinutesX0ThroughX1PastTheHour();
    internal static string get_PMPeriod();
    internal static string get_Second();
    internal static string get_SecondsX0ThroughX1PastTheMinute();
    internal static string get_SpaceAnd();
    internal static string get_SpaceAndSpace();
    internal static string get_SpaceX0OfTheMonth();
    internal static string get_Third();
    internal static string get_WeekdayNearestDayX0();
    internal static string get_CommaDaysBeforeTheLastDayOfTheMonth();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
