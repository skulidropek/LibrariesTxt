public class Cucumber.Messages.Converters : object {
    private static DateTime EpochStart;
    private static long NanoSecondsPerTick;
    private static Converters();
    public static Timestamp ToTimestamp(DateTime dateTime);
    public static Duration ToDuration(TimeSpan timeSpan);
    public static DateTime ToDateTime(Timestamp timestamp);
    public static TimeSpan ToTimeSpan(Duration duration);
}
public class Cucumber.Messages.MessageToNdjsonWriter : object {
    private StreamWriter _streamWriter;
    private Action`2<StreamWriter, Envelope> _serializer;
    public MessageToNdjsonWriter(Stream stream, Action`2<StreamWriter, Envelope> serializer);
    public sealed virtual void Dispose();
    public void Write(Envelope message);
}
public class Cucumber.Messages.NdjsonMessageReader : object {
    private StreamReader _inputStreamReader;
    private Func`2<string, Envelope> _deserializer;
    public NdjsonMessageReader(Stream inputStream, Func`2<string, Envelope> deserializer);
    public sealed virtual void Dispose();
    [IteratorStateMachineAttribute("Cucumber.Messages.NdjsonMessageReader/<GetEnumerator>d__4")]
public sealed virtual IEnumerator`1<Envelope> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public class Cucumber.Messages.ProtocolVersion : object {
    public static string Version { get; }
    public static string get_Version();
    private static string GetPackageVersion(Assembly assembly);
}
public class Io.Cucumber.Messages.Types.Attachment : object {
    [CompilerGeneratedAttribute]
private string <Body>k__BackingField;
    [CompilerGeneratedAttribute]
private AttachmentContentEncoding <ContentEncoding>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MediaType>k__BackingField;
    [CompilerGeneratedAttribute]
private Source <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TestCaseStartedId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TestStepId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Body { get; private set; }
    public AttachmentContentEncoding ContentEncoding { get; private set; }
    public string FileName { get; private set; }
    public string MediaType { get; private set; }
    public Source Source { get; private set; }
    public string TestCaseStartedId { get; private set; }
    public string TestStepId { get; private set; }
    public string Url { get; private set; }
    public Attachment(string body, AttachmentContentEncoding contentEncoding, string fileName, string mediaType, Source source, string testCaseStartedId, string testStepId, string url);
    [CompilerGeneratedAttribute]
public string get_Body();
    [CompilerGeneratedAttribute]
private void set_Body(string value);
    [CompilerGeneratedAttribute]
public AttachmentContentEncoding get_ContentEncoding();
    [CompilerGeneratedAttribute]
private void set_ContentEncoding(AttachmentContentEncoding value);
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
private void set_FileName(string value);
    [CompilerGeneratedAttribute]
public string get_MediaType();
    [CompilerGeneratedAttribute]
private void set_MediaType(string value);
    [CompilerGeneratedAttribute]
public Source get_Source();
    [CompilerGeneratedAttribute]
private void set_Source(Source value);
    [CompilerGeneratedAttribute]
public string get_TestCaseStartedId();
    [CompilerGeneratedAttribute]
private void set_TestCaseStartedId(string value);
    [CompilerGeneratedAttribute]
public string get_TestStepId();
    [CompilerGeneratedAttribute]
private void set_TestStepId(string value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
private void set_Url(string value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public enum Io.Cucumber.Messages.Types.AttachmentContentEncoding : Enum {
    public int value__;
    [DescriptionAttribute("IDENTITY")]
public static AttachmentContentEncoding IDENTITY;
    [DescriptionAttribute("BASE64")]
public static AttachmentContentEncoding BASE64;
}
[ExtensionAttribute]
public static class Io.Cucumber.Messages.Types.AttachmentContentEncodingExtensions : object {
    [ExtensionAttribute]
public static string Value(AttachmentContentEncoding v);
}
public class Io.Cucumber.Messages.Types.Background : object {
    [CompilerGeneratedAttribute]
private Location <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Keyword>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Step> <Steps>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public Location Location { get; private set; }
    public string Keyword { get; private set; }
    public string Name { get; private set; }
    public string Description { get; private set; }
    public List`1<Step> Steps { get; private set; }
    public string Id { get; private set; }
    public Background(Location location, string keyword, string name, string description, List`1<Step> steps, string id);
    [CompilerGeneratedAttribute]
public Location get_Location();
    [CompilerGeneratedAttribute]
private void set_Location(Location value);
    [CompilerGeneratedAttribute]
public string get_Keyword();
    [CompilerGeneratedAttribute]
private void set_Keyword(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
private void set_Description(string value);
    [CompilerGeneratedAttribute]
public List`1<Step> get_Steps();
    [CompilerGeneratedAttribute]
private void set_Steps(List`1<Step> value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.Ci : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private Git <Git>k__BackingField;
    public string Name { get; private set; }
    public string Url { get; private set; }
    public string BuildNumber { get; private set; }
    public Git Git { get; private set; }
    public Ci(string name, string url, string buildNumber, Git git);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
private void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_BuildNumber();
    [CompilerGeneratedAttribute]
private void set_BuildNumber(string value);
    [CompilerGeneratedAttribute]
public Git get_Git();
    [CompilerGeneratedAttribute]
private void set_Git(Git value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.Comment : object {
    [CompilerGeneratedAttribute]
private Location <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    public Location Location { get; private set; }
    public string Text { get; private set; }
    public Comment(Location location, string text);
    [CompilerGeneratedAttribute]
public Location get_Location();
    [CompilerGeneratedAttribute]
private void set_Location(Location value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
private void set_Text(string value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.DataTable : object {
    [CompilerGeneratedAttribute]
private Location <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<TableRow> <Rows>k__BackingField;
    public Location Location { get; private set; }
    public List`1<TableRow> Rows { get; private set; }
    public DataTable(Location location, List`1<TableRow> rows);
    [CompilerGeneratedAttribute]
public Location get_Location();
    [CompilerGeneratedAttribute]
private void set_Location(Location value);
    [CompilerGeneratedAttribute]
public List`1<TableRow> get_Rows();
    [CompilerGeneratedAttribute]
private void set_Rows(List`1<TableRow> value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.DocString : object {
    [CompilerGeneratedAttribute]
private Location <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MediaType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Delimiter>k__BackingField;
    public Location Location { get; private set; }
    public string MediaType { get; private set; }
    public string Content { get; private set; }
    public string Delimiter { get; private set; }
    public DocString(Location location, string mediaType, string content, string delimiter);
    [CompilerGeneratedAttribute]
public Location get_Location();
    [CompilerGeneratedAttribute]
private void set_Location(Location value);
    [CompilerGeneratedAttribute]
public string get_MediaType();
    [CompilerGeneratedAttribute]
private void set_MediaType(string value);
    [CompilerGeneratedAttribute]
public string get_Content();
    [CompilerGeneratedAttribute]
private void set_Content(string value);
    [CompilerGeneratedAttribute]
public string get_Delimiter();
    [CompilerGeneratedAttribute]
private void set_Delimiter(string value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.Duration : object {
    [CompilerGeneratedAttribute]
private long <Seconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Nanos>k__BackingField;
    public long Seconds { get; private set; }
    public long Nanos { get; private set; }
    public Duration(long seconds, long nanos);
    [CompilerGeneratedAttribute]
public long get_Seconds();
    [CompilerGeneratedAttribute]
private void set_Seconds(long value);
    [CompilerGeneratedAttribute]
public long get_Nanos();
    [CompilerGeneratedAttribute]
private void set_Nanos(long value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.Envelope : object {
    [CompilerGeneratedAttribute]
private Attachment <Attachment>k__BackingField;
    [CompilerGeneratedAttribute]
private GherkinDocument <GherkinDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private Hook <Hook>k__BackingField;
    [CompilerGeneratedAttribute]
private Meta <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private ParameterType <ParameterType>k__BackingField;
    [CompilerGeneratedAttribute]
private ParseError <ParseError>k__BackingField;
    [CompilerGeneratedAttribute]
private Pickle <Pickle>k__BackingField;
    [CompilerGeneratedAttribute]
private Source <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private StepDefinition <StepDefinition>k__BackingField;
    [CompilerGeneratedAttribute]
private TestCase <TestCase>k__BackingField;
    [CompilerGeneratedAttribute]
private TestCaseFinished <TestCaseFinished>k__BackingField;
    [CompilerGeneratedAttribute]
private TestCaseStarted <TestCaseStarted>k__BackingField;
    [CompilerGeneratedAttribute]
private TestRunFinished <TestRunFinished>k__BackingField;
    [CompilerGeneratedAttribute]
private TestRunStarted <TestRunStarted>k__BackingField;
    [CompilerGeneratedAttribute]
private TestStepFinished <TestStepFinished>k__BackingField;
    [CompilerGeneratedAttribute]
private TestStepStarted <TestStepStarted>k__BackingField;
    [CompilerGeneratedAttribute]
private UndefinedParameterType <UndefinedParameterType>k__BackingField;
    public Attachment Attachment { get; private set; }
    public GherkinDocument GherkinDocument { get; private set; }
    public Hook Hook { get; private set; }
    public Meta Meta { get; private set; }
    public ParameterType ParameterType { get; private set; }
    public ParseError ParseError { get; private set; }
    public Pickle Pickle { get; private set; }
    public Source Source { get; private set; }
    public StepDefinition StepDefinition { get; private set; }
    public TestCase TestCase { get; private set; }
    public TestCaseFinished TestCaseFinished { get; private set; }
    public TestCaseStarted TestCaseStarted { get; private set; }
    public TestRunFinished TestRunFinished { get; private set; }
    public TestRunStarted TestRunStarted { get; private set; }
    public TestStepFinished TestStepFinished { get; private set; }
    public TestStepStarted TestStepStarted { get; private set; }
    public UndefinedParameterType UndefinedParameterType { get; private set; }
    public Envelope(Attachment attachment, GherkinDocument gherkinDocument, Hook hook, Meta meta, ParameterType parameterType, ParseError parseError, Pickle pickle, Source source, StepDefinition stepDefinition, TestCase testCase, TestCaseFinished testCaseFinished, TestCaseStarted testCaseStarted, TestRunFinished testRunFinished, TestRunStarted testRunStarted, TestStepFinished testStepFinished, TestStepStarted testStepStarted, UndefinedParameterType undefinedParameterType);
    [CompilerGeneratedAttribute]
public Attachment get_Attachment();
    [CompilerGeneratedAttribute]
private void set_Attachment(Attachment value);
    [CompilerGeneratedAttribute]
public GherkinDocument get_GherkinDocument();
    [CompilerGeneratedAttribute]
private void set_GherkinDocument(GherkinDocument value);
    [CompilerGeneratedAttribute]
public Hook get_Hook();
    [CompilerGeneratedAttribute]
private void set_Hook(Hook value);
    [CompilerGeneratedAttribute]
public Meta get_Meta();
    [CompilerGeneratedAttribute]
private void set_Meta(Meta value);
    [CompilerGeneratedAttribute]
public ParameterType get_ParameterType();
    [CompilerGeneratedAttribute]
private void set_ParameterType(ParameterType value);
    [CompilerGeneratedAttribute]
public ParseError get_ParseError();
    [CompilerGeneratedAttribute]
private void set_ParseError(ParseError value);
    [CompilerGeneratedAttribute]
public Pickle get_Pickle();
    [CompilerGeneratedAttribute]
private void set_Pickle(Pickle value);
    [CompilerGeneratedAttribute]
public Source get_Source();
    [CompilerGeneratedAttribute]
private void set_Source(Source value);
    [CompilerGeneratedAttribute]
public StepDefinition get_StepDefinition();
    [CompilerGeneratedAttribute]
private void set_StepDefinition(StepDefinition value);
    [CompilerGeneratedAttribute]
public TestCase get_TestCase();
    [CompilerGeneratedAttribute]
private void set_TestCase(TestCase value);
    [CompilerGeneratedAttribute]
public TestCaseFinished get_TestCaseFinished();
    [CompilerGeneratedAttribute]
private void set_TestCaseFinished(TestCaseFinished value);
    [CompilerGeneratedAttribute]
public TestCaseStarted get_TestCaseStarted();
    [CompilerGeneratedAttribute]
private void set_TestCaseStarted(TestCaseStarted value);
    [CompilerGeneratedAttribute]
public TestRunFinished get_TestRunFinished();
    [CompilerGeneratedAttribute]
private void set_TestRunFinished(TestRunFinished value);
    [CompilerGeneratedAttribute]
public TestRunStarted get_TestRunStarted();
    [CompilerGeneratedAttribute]
private void set_TestRunStarted(TestRunStarted value);
    [CompilerGeneratedAttribute]
public TestStepFinished get_TestStepFinished();
    [CompilerGeneratedAttribute]
private void set_TestStepFinished(TestStepFinished value);
    [CompilerGeneratedAttribute]
public TestStepStarted get_TestStepStarted();
    [CompilerGeneratedAttribute]
private void set_TestStepStarted(TestStepStarted value);
    [CompilerGeneratedAttribute]
public UndefinedParameterType get_UndefinedParameterType();
    [CompilerGeneratedAttribute]
private void set_UndefinedParameterType(UndefinedParameterType value);
    public static Envelope Create(Attachment attachment);
    public static Envelope Create(GherkinDocument gherkinDocument);
    public static Envelope Create(Hook hook);
    public static Envelope Create(Meta meta);
    public static Envelope Create(ParameterType parameterType);
    public static Envelope Create(ParseError parseError);
    public static Envelope Create(Pickle pickle);
    public static Envelope Create(Source source);
    public static Envelope Create(StepDefinition stepDefinition);
    public static Envelope Create(TestCase testCase);
    public static Envelope Create(TestCaseFinished testCaseFinished);
    public static Envelope Create(TestCaseStarted testCaseStarted);
    public static Envelope Create(TestRunFinished testRunFinished);
    public static Envelope Create(TestRunStarted testRunStarted);
    public static Envelope Create(TestStepFinished testStepFinished);
    public static Envelope Create(TestStepStarted testStepStarted);
    public static Envelope Create(UndefinedParameterType undefinedParameterType);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.Examples : object {
    [CompilerGeneratedAttribute]
private Location <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Tag> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Keyword>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private TableRow <TableHeader>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<TableRow> <TableBody>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public Location Location { get; private set; }
    public List`1<Tag> Tags { get; private set; }
    public string Keyword { get; private set; }
    public string Name { get; private set; }
    public string Description { get; private set; }
    public TableRow TableHeader { get; private set; }
    public List`1<TableRow> TableBody { get; private set; }
    public string Id { get; private set; }
    public Examples(Location location, List`1<Tag> tags, string keyword, string name, string description, TableRow tableHeader, List`1<TableRow> tableBody, string id);
    [CompilerGeneratedAttribute]
public Location get_Location();
    [CompilerGeneratedAttribute]
private void set_Location(Location value);
    [CompilerGeneratedAttribute]
public List`1<Tag> get_Tags();
    [CompilerGeneratedAttribute]
private void set_Tags(List`1<Tag> value);
    [CompilerGeneratedAttribute]
public string get_Keyword();
    [CompilerGeneratedAttribute]
private void set_Keyword(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
private void set_Description(string value);
    [CompilerGeneratedAttribute]
public TableRow get_TableHeader();
    [CompilerGeneratedAttribute]
private void set_TableHeader(TableRow value);
    [CompilerGeneratedAttribute]
public List`1<TableRow> get_TableBody();
    [CompilerGeneratedAttribute]
private void set_TableBody(List`1<TableRow> value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.Exception : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StackTrace>k__BackingField;
    public string Type { get; private set; }
    public string Message { get; private set; }
    public string StackTrace { get; private set; }
    public Exception(string type, string message, string stackTrace);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
private void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_StackTrace();
    [CompilerGeneratedAttribute]
private void set_StackTrace(string value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.Feature : object {
    [CompilerGeneratedAttribute]
private Location <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Tag> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Keyword>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<FeatureChild> <Children>k__BackingField;
    public Location Location { get; private set; }
    public List`1<Tag> Tags { get; private set; }
    public string Language { get; private set; }
    public string Keyword { get; private set; }
    public string Name { get; private set; }
    public string Description { get; private set; }
    public List`1<FeatureChild> Children { get; private set; }
    public Feature(Location location, List`1<Tag> tags, string language, string keyword, string name, string description, List`1<FeatureChild> children);
    [CompilerGeneratedAttribute]
public Location get_Location();
    [CompilerGeneratedAttribute]
private void set_Location(Location value);
    [CompilerGeneratedAttribute]
public List`1<Tag> get_Tags();
    [CompilerGeneratedAttribute]
private void set_Tags(List`1<Tag> value);
    [CompilerGeneratedAttribute]
public string get_Language();
    [CompilerGeneratedAttribute]
private void set_Language(string value);
    [CompilerGeneratedAttribute]
public string get_Keyword();
    [CompilerGeneratedAttribute]
private void set_Keyword(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
private void set_Description(string value);
    [CompilerGeneratedAttribute]
public List`1<FeatureChild> get_Children();
    [CompilerGeneratedAttribute]
private void set_Children(List`1<FeatureChild> value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.FeatureChild : object {
    [CompilerGeneratedAttribute]
private Rule <Rule>k__BackingField;
    [CompilerGeneratedAttribute]
private Background <Background>k__BackingField;
    [CompilerGeneratedAttribute]
private Scenario <Scenario>k__BackingField;
    public Rule Rule { get; private set; }
    public Background Background { get; private set; }
    public Scenario Scenario { get; private set; }
    public FeatureChild(Rule rule, Background background, Scenario scenario);
    [CompilerGeneratedAttribute]
public Rule get_Rule();
    [CompilerGeneratedAttribute]
private void set_Rule(Rule value);
    [CompilerGeneratedAttribute]
public Background get_Background();
    [CompilerGeneratedAttribute]
private void set_Background(Background value);
    [CompilerGeneratedAttribute]
public Scenario get_Scenario();
    [CompilerGeneratedAttribute]
private void set_Scenario(Scenario value);
    public static FeatureChild Create(Rule rule);
    public static FeatureChild Create(Background background);
    public static FeatureChild Create(Scenario scenario);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.GherkinDocument : object {
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private Feature <Feature>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Comment> <Comments>k__BackingField;
    public string Uri { get; private set; }
    public Feature Feature { get; private set; }
    public List`1<Comment> Comments { get; private set; }
    public GherkinDocument(string uri, Feature feature, List`1<Comment> comments);
    [CompilerGeneratedAttribute]
public string get_Uri();
    [CompilerGeneratedAttribute]
private void set_Uri(string value);
    [CompilerGeneratedAttribute]
public Feature get_Feature();
    [CompilerGeneratedAttribute]
private void set_Feature(Feature value);
    [CompilerGeneratedAttribute]
public List`1<Comment> get_Comments();
    [CompilerGeneratedAttribute]
private void set_Comments(List`1<Comment> value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.Git : object {
    [CompilerGeneratedAttribute]
private string <Remote>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Revision>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Branch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tag>k__BackingField;
    public string Remote { get; private set; }
    public string Revision { get; private set; }
    public string Branch { get; private set; }
    public string Tag { get; private set; }
    public Git(string remote, string revision, string branch, string tag);
    [CompilerGeneratedAttribute]
public string get_Remote();
    [CompilerGeneratedAttribute]
private void set_Remote(string value);
    [CompilerGeneratedAttribute]
public string get_Revision();
    [CompilerGeneratedAttribute]
private void set_Revision(string value);
    [CompilerGeneratedAttribute]
public string get_Branch();
    [CompilerGeneratedAttribute]
private void set_Branch(string value);
    [CompilerGeneratedAttribute]
public string get_Tag();
    [CompilerGeneratedAttribute]
private void set_Tag(string value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.Group : object {
    [CompilerGeneratedAttribute]
private List`1<Group> <Children>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public List`1<Group> Children { get; private set; }
    public Nullable`1<long> Start { get; private set; }
    public string Value { get; private set; }
    public Group(List`1<Group> children, Nullable`1<long> start, string value);
    [CompilerGeneratedAttribute]
public List`1<Group> get_Children();
    [CompilerGeneratedAttribute]
private void set_Children(List`1<Group> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Start();
    [CompilerGeneratedAttribute]
private void set_Start(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
private void set_Value(string value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.Hook : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private SourceReference <SourceReference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TagExpression>k__BackingField;
    public string Id { get; private set; }
    public string Name { get; private set; }
    public SourceReference SourceReference { get; private set; }
    public string TagExpression { get; private set; }
    public Hook(string id, string name, SourceReference sourceReference, string tagExpression);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public SourceReference get_SourceReference();
    [CompilerGeneratedAttribute]
private void set_SourceReference(SourceReference value);
    [CompilerGeneratedAttribute]
public string get_TagExpression();
    [CompilerGeneratedAttribute]
private void set_TagExpression(string value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.JavaMethod : object {
    [CompilerGeneratedAttribute]
private string <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MethodName>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <MethodParameterTypes>k__BackingField;
    public string ClassName { get; private set; }
    public string MethodName { get; private set; }
    public List`1<string> MethodParameterTypes { get; private set; }
    public JavaMethod(string className, string methodName, List`1<string> methodParameterTypes);
    [CompilerGeneratedAttribute]
public string get_ClassName();
    [CompilerGeneratedAttribute]
private void set_ClassName(string value);
    [CompilerGeneratedAttribute]
public string get_MethodName();
    [CompilerGeneratedAttribute]
private void set_MethodName(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_MethodParameterTypes();
    [CompilerGeneratedAttribute]
private void set_MethodParameterTypes(List`1<string> value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.JavaStackTraceElement : object {
    [CompilerGeneratedAttribute]
private string <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MethodName>k__BackingField;
    public string ClassName { get; private set; }
    public string FileName { get; private set; }
    public string MethodName { get; private set; }
    public JavaStackTraceElement(string className, string fileName, string methodName);
    [CompilerGeneratedAttribute]
public string get_ClassName();
    [CompilerGeneratedAttribute]
private void set_ClassName(string value);
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
private void set_FileName(string value);
    [CompilerGeneratedAttribute]
public string get_MethodName();
    [CompilerGeneratedAttribute]
private void set_MethodName(string value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.Location : object {
    [CompilerGeneratedAttribute]
private long <Line>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Column>k__BackingField;
    public long Line { get; private set; }
    public Nullable`1<long> Column { get; private set; }
    public Location(long line, Nullable`1<long> column);
    [CompilerGeneratedAttribute]
public long get_Line();
    [CompilerGeneratedAttribute]
private void set_Line(long value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Column();
    [CompilerGeneratedAttribute]
private void set_Column(Nullable`1<long> value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.Meta : object {
    [CompilerGeneratedAttribute]
private string <ProtocolVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Product <Implementation>k__BackingField;
    [CompilerGeneratedAttribute]
private Product <Runtime>k__BackingField;
    [CompilerGeneratedAttribute]
private Product <Os>k__BackingField;
    [CompilerGeneratedAttribute]
private Product <Cpu>k__BackingField;
    [CompilerGeneratedAttribute]
private Ci <Ci>k__BackingField;
    public string ProtocolVersion { get; private set; }
    public Product Implementation { get; private set; }
    public Product Runtime { get; private set; }
    public Product Os { get; private set; }
    public Product Cpu { get; private set; }
    public Ci Ci { get; private set; }
    public Meta(string protocolVersion, Product implementation, Product runtime, Product os, Product cpu, Ci ci);
    [CompilerGeneratedAttribute]
public string get_ProtocolVersion();
    [CompilerGeneratedAttribute]
private void set_ProtocolVersion(string value);
    [CompilerGeneratedAttribute]
public Product get_Implementation();
    [CompilerGeneratedAttribute]
private void set_Implementation(Product value);
    [CompilerGeneratedAttribute]
public Product get_Runtime();
    [CompilerGeneratedAttribute]
private void set_Runtime(Product value);
    [CompilerGeneratedAttribute]
public Product get_Os();
    [CompilerGeneratedAttribute]
private void set_Os(Product value);
    [CompilerGeneratedAttribute]
public Product get_Cpu();
    [CompilerGeneratedAttribute]
private void set_Cpu(Product value);
    [CompilerGeneratedAttribute]
public Ci get_Ci();
    [CompilerGeneratedAttribute]
private void set_Ci(Ci value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.ParameterType : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <RegularExpressions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PreferForRegularExpressionMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseForSnippets>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private SourceReference <SourceReference>k__BackingField;
    public string Name { get; private set; }
    public List`1<string> RegularExpressions { get; private set; }
    public bool PreferForRegularExpressionMatch { get; private set; }
    public bool UseForSnippets { get; private set; }
    public string Id { get; private set; }
    public SourceReference SourceReference { get; private set; }
    public ParameterType(string name, List`1<string> regularExpressions, bool preferForRegularExpressionMatch, bool useForSnippets, string id, SourceReference sourceReference);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_RegularExpressions();
    [CompilerGeneratedAttribute]
private void set_RegularExpressions(List`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_PreferForRegularExpressionMatch();
    [CompilerGeneratedAttribute]
private void set_PreferForRegularExpressionMatch(bool value);
    [CompilerGeneratedAttribute]
public bool get_UseForSnippets();
    [CompilerGeneratedAttribute]
private void set_UseForSnippets(bool value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    [CompilerGeneratedAttribute]
public SourceReference get_SourceReference();
    [CompilerGeneratedAttribute]
private void set_SourceReference(SourceReference value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.ParseError : object {
    [CompilerGeneratedAttribute]
private SourceReference <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public SourceReference Source { get; private set; }
    public string Message { get; private set; }
    public ParseError(SourceReference source, string message);
    [CompilerGeneratedAttribute]
public SourceReference get_Source();
    [CompilerGeneratedAttribute]
private void set_Source(SourceReference value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
private void set_Message(string value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.Pickle : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<PickleStep> <Steps>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<PickleTag> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <AstNodeIds>k__BackingField;
    public string Id { get; private set; }
    public string Uri { get; private set; }
    public string Name { get; private set; }
    public string Language { get; private set; }
    public List`1<PickleStep> Steps { get; private set; }
    public List`1<PickleTag> Tags { get; private set; }
    public List`1<string> AstNodeIds { get; private set; }
    public Pickle(string id, string uri, string name, string language, List`1<PickleStep> steps, List`1<PickleTag> tags, List`1<string> astNodeIds);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Uri();
    [CompilerGeneratedAttribute]
private void set_Uri(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Language();
    [CompilerGeneratedAttribute]
private void set_Language(string value);
    [CompilerGeneratedAttribute]
public List`1<PickleStep> get_Steps();
    [CompilerGeneratedAttribute]
private void set_Steps(List`1<PickleStep> value);
    [CompilerGeneratedAttribute]
public List`1<PickleTag> get_Tags();
    [CompilerGeneratedAttribute]
private void set_Tags(List`1<PickleTag> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_AstNodeIds();
    [CompilerGeneratedAttribute]
private void set_AstNodeIds(List`1<string> value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.PickleDocString : object {
    [CompilerGeneratedAttribute]
private string <MediaType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    public string MediaType { get; private set; }
    public string Content { get; private set; }
    public PickleDocString(string mediaType, string content);
    [CompilerGeneratedAttribute]
public string get_MediaType();
    [CompilerGeneratedAttribute]
private void set_MediaType(string value);
    [CompilerGeneratedAttribute]
public string get_Content();
    [CompilerGeneratedAttribute]
private void set_Content(string value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.PickleStep : object {
    [CompilerGeneratedAttribute]
private PickleStepArgument <Argument>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <AstNodeIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private PickleStepType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    public PickleStepArgument Argument { get; private set; }
    public List`1<string> AstNodeIds { get; private set; }
    public string Id { get; private set; }
    public PickleStepType Type { get; private set; }
    public string Text { get; private set; }
    public PickleStep(PickleStepArgument argument, List`1<string> astNodeIds, string id, PickleStepType type, string text);
    [CompilerGeneratedAttribute]
public PickleStepArgument get_Argument();
    [CompilerGeneratedAttribute]
private void set_Argument(PickleStepArgument value);
    [CompilerGeneratedAttribute]
public List`1<string> get_AstNodeIds();
    [CompilerGeneratedAttribute]
private void set_AstNodeIds(List`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    [CompilerGeneratedAttribute]
public PickleStepType get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(PickleStepType value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
private void set_Text(string value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.PickleStepArgument : object {
    [CompilerGeneratedAttribute]
private PickleDocString <DocString>k__BackingField;
    [CompilerGeneratedAttribute]
private PickleTable <DataTable>k__BackingField;
    public PickleDocString DocString { get; private set; }
    public PickleTable DataTable { get; private set; }
    public PickleStepArgument(PickleDocString docString, PickleTable dataTable);
    [CompilerGeneratedAttribute]
public PickleDocString get_DocString();
    [CompilerGeneratedAttribute]
private void set_DocString(PickleDocString value);
    [CompilerGeneratedAttribute]
public PickleTable get_DataTable();
    [CompilerGeneratedAttribute]
private void set_DataTable(PickleTable value);
    public static PickleStepArgument Create(PickleDocString docString);
    public static PickleStepArgument Create(PickleTable dataTable);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public enum Io.Cucumber.Messages.Types.PickleStepType : Enum {
    public int value__;
    [DescriptionAttribute("Unknown")]
public static PickleStepType UNKNOWN;
    [DescriptionAttribute("Context")]
public static PickleStepType CONTEXT;
    [DescriptionAttribute("Action")]
public static PickleStepType ACTION;
    [DescriptionAttribute("Outcome")]
public static PickleStepType OUTCOME;
}
[ExtensionAttribute]
public static class Io.Cucumber.Messages.Types.PickleStepTypeExtensions : object {
    [ExtensionAttribute]
public static string Value(PickleStepType v);
}
public class Io.Cucumber.Messages.Types.PickleTable : object {
    [CompilerGeneratedAttribute]
private List`1<PickleTableRow> <Rows>k__BackingField;
    public List`1<PickleTableRow> Rows { get; private set; }
    public PickleTable(List`1<PickleTableRow> rows);
    [CompilerGeneratedAttribute]
public List`1<PickleTableRow> get_Rows();
    [CompilerGeneratedAttribute]
private void set_Rows(List`1<PickleTableRow> value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.PickleTableCell : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Value { get; private set; }
    public PickleTableCell(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
private void set_Value(string value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.PickleTableRow : object {
    [CompilerGeneratedAttribute]
private List`1<PickleTableCell> <Cells>k__BackingField;
    public List`1<PickleTableCell> Cells { get; private set; }
    public PickleTableRow(List`1<PickleTableCell> cells);
    [CompilerGeneratedAttribute]
public List`1<PickleTableCell> get_Cells();
    [CompilerGeneratedAttribute]
private void set_Cells(List`1<PickleTableCell> value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.PickleTag : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AstNodeId>k__BackingField;
    public string Name { get; private set; }
    public string AstNodeId { get; private set; }
    public PickleTag(string name, string astNodeId);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_AstNodeId();
    [CompilerGeneratedAttribute]
private void set_AstNodeId(string value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.Product : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    public string Name { get; private set; }
    public string Version { get; private set; }
    public Product(string name, string version);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
private void set_Version(string value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.Rule : object {
    [CompilerGeneratedAttribute]
private Location <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Tag> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Keyword>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RuleChild> <Children>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public Location Location { get; private set; }
    public List`1<Tag> Tags { get; private set; }
    public string Keyword { get; private set; }
    public string Name { get; private set; }
    public string Description { get; private set; }
    public List`1<RuleChild> Children { get; private set; }
    public string Id { get; private set; }
    public Rule(Location location, List`1<Tag> tags, string keyword, string name, string description, List`1<RuleChild> children, string id);
    [CompilerGeneratedAttribute]
public Location get_Location();
    [CompilerGeneratedAttribute]
private void set_Location(Location value);
    [CompilerGeneratedAttribute]
public List`1<Tag> get_Tags();
    [CompilerGeneratedAttribute]
private void set_Tags(List`1<Tag> value);
    [CompilerGeneratedAttribute]
public string get_Keyword();
    [CompilerGeneratedAttribute]
private void set_Keyword(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
private void set_Description(string value);
    [CompilerGeneratedAttribute]
public List`1<RuleChild> get_Children();
    [CompilerGeneratedAttribute]
private void set_Children(List`1<RuleChild> value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.RuleChild : object {
    [CompilerGeneratedAttribute]
private Background <Background>k__BackingField;
    [CompilerGeneratedAttribute]
private Scenario <Scenario>k__BackingField;
    public Background Background { get; private set; }
    public Scenario Scenario { get; private set; }
    public RuleChild(Background background, Scenario scenario);
    [CompilerGeneratedAttribute]
public Background get_Background();
    [CompilerGeneratedAttribute]
private void set_Background(Background value);
    [CompilerGeneratedAttribute]
public Scenario get_Scenario();
    [CompilerGeneratedAttribute]
private void set_Scenario(Scenario value);
    public static RuleChild Create(Background background);
    public static RuleChild Create(Scenario scenario);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.Scenario : object {
    [CompilerGeneratedAttribute]
private Location <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Tag> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Keyword>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Step> <Steps>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Examples> <Examples>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public Location Location { get; private set; }
    public List`1<Tag> Tags { get; private set; }
    public string Keyword { get; private set; }
    public string Name { get; private set; }
    public string Description { get; private set; }
    public List`1<Step> Steps { get; private set; }
    public List`1<Examples> Examples { get; private set; }
    public string Id { get; private set; }
    public Scenario(Location location, List`1<Tag> tags, string keyword, string name, string description, List`1<Step> steps, List`1<Examples> examples, string id);
    [CompilerGeneratedAttribute]
public Location get_Location();
    [CompilerGeneratedAttribute]
private void set_Location(Location value);
    [CompilerGeneratedAttribute]
public List`1<Tag> get_Tags();
    [CompilerGeneratedAttribute]
private void set_Tags(List`1<Tag> value);
    [CompilerGeneratedAttribute]
public string get_Keyword();
    [CompilerGeneratedAttribute]
private void set_Keyword(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
private void set_Description(string value);
    [CompilerGeneratedAttribute]
public List`1<Step> get_Steps();
    [CompilerGeneratedAttribute]
private void set_Steps(List`1<Step> value);
    [CompilerGeneratedAttribute]
public List`1<Examples> get_Examples();
    [CompilerGeneratedAttribute]
private void set_Examples(List`1<Examples> value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.Source : object {
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private SourceMediaType <MediaType>k__BackingField;
    public string Uri { get; private set; }
    public string Data { get; private set; }
    public SourceMediaType MediaType { get; private set; }
    public Source(string uri, string data, SourceMediaType mediaType);
    [CompilerGeneratedAttribute]
public string get_Uri();
    [CompilerGeneratedAttribute]
private void set_Uri(string value);
    [CompilerGeneratedAttribute]
public string get_Data();
    [CompilerGeneratedAttribute]
private void set_Data(string value);
    [CompilerGeneratedAttribute]
public SourceMediaType get_MediaType();
    [CompilerGeneratedAttribute]
private void set_MediaType(SourceMediaType value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public enum Io.Cucumber.Messages.Types.SourceMediaType : Enum {
    public int value__;
    [DescriptionAttribute("text/x.cucumber.gherkin+plain")]
public static SourceMediaType TEXT_X_CUCUMBER_GHERKIN_PLAIN;
    [DescriptionAttribute("text/x.cucumber.gherkin+markdown")]
public static SourceMediaType TEXT_X_CUCUMBER_GHERKIN_MARKDOWN;
}
[ExtensionAttribute]
public static class Io.Cucumber.Messages.Types.SourceMediaTypeExtensions : object {
    [ExtensionAttribute]
public static string Value(SourceMediaType v);
}
public class Io.Cucumber.Messages.Types.SourceReference : object {
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private JavaMethod <JavaMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private JavaStackTraceElement <JavaStackTraceElement>k__BackingField;
    [CompilerGeneratedAttribute]
private Location <Location>k__BackingField;
    public string Uri { get; private set; }
    public JavaMethod JavaMethod { get; private set; }
    public JavaStackTraceElement JavaStackTraceElement { get; private set; }
    public Location Location { get; private set; }
    public SourceReference(string uri, JavaMethod javaMethod, JavaStackTraceElement javaStackTraceElement, Location location);
    [CompilerGeneratedAttribute]
public string get_Uri();
    [CompilerGeneratedAttribute]
private void set_Uri(string value);
    [CompilerGeneratedAttribute]
public JavaMethod get_JavaMethod();
    [CompilerGeneratedAttribute]
private void set_JavaMethod(JavaMethod value);
    [CompilerGeneratedAttribute]
public JavaStackTraceElement get_JavaStackTraceElement();
    [CompilerGeneratedAttribute]
private void set_JavaStackTraceElement(JavaStackTraceElement value);
    [CompilerGeneratedAttribute]
public Location get_Location();
    [CompilerGeneratedAttribute]
private void set_Location(Location value);
    public static SourceReference Create(string uri);
    public static SourceReference Create(JavaMethod javaMethod);
    public static SourceReference Create(JavaStackTraceElement javaStackTraceElement);
    public static SourceReference Create(Location location);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.Step : object {
    [CompilerGeneratedAttribute]
private Location <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Keyword>k__BackingField;
    [CompilerGeneratedAttribute]
private StepKeywordType <KeywordType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private DocString <DocString>k__BackingField;
    [CompilerGeneratedAttribute]
private DataTable <DataTable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public Location Location { get; private set; }
    public string Keyword { get; private set; }
    public StepKeywordType KeywordType { get; private set; }
    public string Text { get; private set; }
    public DocString DocString { get; private set; }
    public DataTable DataTable { get; private set; }
    public string Id { get; private set; }
    public Step(Location location, string keyword, StepKeywordType keywordType, string text, DocString docString, DataTable dataTable, string id);
    [CompilerGeneratedAttribute]
public Location get_Location();
    [CompilerGeneratedAttribute]
private void set_Location(Location value);
    [CompilerGeneratedAttribute]
public string get_Keyword();
    [CompilerGeneratedAttribute]
private void set_Keyword(string value);
    [CompilerGeneratedAttribute]
public StepKeywordType get_KeywordType();
    [CompilerGeneratedAttribute]
private void set_KeywordType(StepKeywordType value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
private void set_Text(string value);
    [CompilerGeneratedAttribute]
public DocString get_DocString();
    [CompilerGeneratedAttribute]
private void set_DocString(DocString value);
    [CompilerGeneratedAttribute]
public DataTable get_DataTable();
    [CompilerGeneratedAttribute]
private void set_DataTable(DataTable value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.StepDefinition : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private StepDefinitionPattern <Pattern>k__BackingField;
    [CompilerGeneratedAttribute]
private SourceReference <SourceReference>k__BackingField;
    public string Id { get; private set; }
    public StepDefinitionPattern Pattern { get; private set; }
    public SourceReference SourceReference { get; private set; }
    public StepDefinition(string id, StepDefinitionPattern pattern, SourceReference sourceReference);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    [CompilerGeneratedAttribute]
public StepDefinitionPattern get_Pattern();
    [CompilerGeneratedAttribute]
private void set_Pattern(StepDefinitionPattern value);
    [CompilerGeneratedAttribute]
public SourceReference get_SourceReference();
    [CompilerGeneratedAttribute]
private void set_SourceReference(SourceReference value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.StepDefinitionPattern : object {
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private StepDefinitionPatternType <Type>k__BackingField;
    public string Source { get; private set; }
    public StepDefinitionPatternType Type { get; private set; }
    public StepDefinitionPattern(string source, StepDefinitionPatternType type);
    [CompilerGeneratedAttribute]
public string get_Source();
    [CompilerGeneratedAttribute]
private void set_Source(string value);
    [CompilerGeneratedAttribute]
public StepDefinitionPatternType get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(StepDefinitionPatternType value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public enum Io.Cucumber.Messages.Types.StepDefinitionPatternType : Enum {
    public int value__;
    [DescriptionAttribute("CUCUMBER_EXPRESSION")]
public static StepDefinitionPatternType CUCUMBER_EXPRESSION;
    [DescriptionAttribute("REGULAR_EXPRESSION")]
public static StepDefinitionPatternType REGULAR_EXPRESSION;
}
[ExtensionAttribute]
public static class Io.Cucumber.Messages.Types.StepDefinitionPatternTypeExtensions : object {
    [ExtensionAttribute]
public static string Value(StepDefinitionPatternType v);
}
public enum Io.Cucumber.Messages.Types.StepKeywordType : Enum {
    public int value__;
    [DescriptionAttribute("Unknown")]
public static StepKeywordType UNKNOWN;
    [DescriptionAttribute("Context")]
public static StepKeywordType CONTEXT;
    [DescriptionAttribute("Action")]
public static StepKeywordType ACTION;
    [DescriptionAttribute("Outcome")]
public static StepKeywordType OUTCOME;
    [DescriptionAttribute("Conjunction")]
public static StepKeywordType CONJUNCTION;
}
[ExtensionAttribute]
public static class Io.Cucumber.Messages.Types.StepKeywordTypeExtensions : object {
    [ExtensionAttribute]
public static string Value(StepKeywordType v);
}
public class Io.Cucumber.Messages.Types.StepMatchArgument : object {
    [CompilerGeneratedAttribute]
private Group <Group>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParameterTypeName>k__BackingField;
    public Group Group { get; private set; }
    public string ParameterTypeName { get; private set; }
    public StepMatchArgument(Group group, string parameterTypeName);
    [CompilerGeneratedAttribute]
public Group get_Group();
    [CompilerGeneratedAttribute]
private void set_Group(Group value);
    [CompilerGeneratedAttribute]
public string get_ParameterTypeName();
    [CompilerGeneratedAttribute]
private void set_ParameterTypeName(string value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.StepMatchArgumentsList : object {
    [CompilerGeneratedAttribute]
private List`1<StepMatchArgument> <StepMatchArguments>k__BackingField;
    public List`1<StepMatchArgument> StepMatchArguments { get; private set; }
    public StepMatchArgumentsList(List`1<StepMatchArgument> stepMatchArguments);
    [CompilerGeneratedAttribute]
public List`1<StepMatchArgument> get_StepMatchArguments();
    [CompilerGeneratedAttribute]
private void set_StepMatchArguments(List`1<StepMatchArgument> value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.TableCell : object {
    [CompilerGeneratedAttribute]
private Location <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public Location Location { get; private set; }
    public string Value { get; private set; }
    public TableCell(Location location, string value);
    [CompilerGeneratedAttribute]
public Location get_Location();
    [CompilerGeneratedAttribute]
private void set_Location(Location value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
private void set_Value(string value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.TableRow : object {
    [CompilerGeneratedAttribute]
private Location <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<TableCell> <Cells>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public Location Location { get; private set; }
    public List`1<TableCell> Cells { get; private set; }
    public string Id { get; private set; }
    public TableRow(Location location, List`1<TableCell> cells, string id);
    [CompilerGeneratedAttribute]
public Location get_Location();
    [CompilerGeneratedAttribute]
private void set_Location(Location value);
    [CompilerGeneratedAttribute]
public List`1<TableCell> get_Cells();
    [CompilerGeneratedAttribute]
private void set_Cells(List`1<TableCell> value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.Tag : object {
    [CompilerGeneratedAttribute]
private Location <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public Location Location { get; private set; }
    public string Name { get; private set; }
    public string Id { get; private set; }
    public Tag(Location location, string name, string id);
    [CompilerGeneratedAttribute]
public Location get_Location();
    [CompilerGeneratedAttribute]
private void set_Location(Location value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.TestCase : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PickleId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<TestStep> <TestSteps>k__BackingField;
    public string Id { get; private set; }
    public string PickleId { get; private set; }
    public List`1<TestStep> TestSteps { get; private set; }
    public TestCase(string id, string pickleId, List`1<TestStep> testSteps);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_PickleId();
    [CompilerGeneratedAttribute]
private void set_PickleId(string value);
    [CompilerGeneratedAttribute]
public List`1<TestStep> get_TestSteps();
    [CompilerGeneratedAttribute]
private void set_TestSteps(List`1<TestStep> value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.TestCaseFinished : object {
    [CompilerGeneratedAttribute]
private string <TestCaseStartedId>k__BackingField;
    [CompilerGeneratedAttribute]
private Timestamp <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WillBeRetried>k__BackingField;
    public string TestCaseStartedId { get; private set; }
    public Timestamp Timestamp { get; private set; }
    public bool WillBeRetried { get; private set; }
    public TestCaseFinished(string testCaseStartedId, Timestamp timestamp, bool willBeRetried);
    [CompilerGeneratedAttribute]
public string get_TestCaseStartedId();
    [CompilerGeneratedAttribute]
private void set_TestCaseStartedId(string value);
    [CompilerGeneratedAttribute]
public Timestamp get_Timestamp();
    [CompilerGeneratedAttribute]
private void set_Timestamp(Timestamp value);
    [CompilerGeneratedAttribute]
public bool get_WillBeRetried();
    [CompilerGeneratedAttribute]
private void set_WillBeRetried(bool value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.TestCaseStarted : object {
    [CompilerGeneratedAttribute]
private long <Attempt>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TestCaseId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WorkerId>k__BackingField;
    [CompilerGeneratedAttribute]
private Timestamp <Timestamp>k__BackingField;
    public long Attempt { get; private set; }
    public string Id { get; private set; }
    public string TestCaseId { get; private set; }
    public string WorkerId { get; private set; }
    public Timestamp Timestamp { get; private set; }
    public TestCaseStarted(long attempt, string id, string testCaseId, string workerId, Timestamp timestamp);
    [CompilerGeneratedAttribute]
public long get_Attempt();
    [CompilerGeneratedAttribute]
private void set_Attempt(long value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_TestCaseId();
    [CompilerGeneratedAttribute]
private void set_TestCaseId(string value);
    [CompilerGeneratedAttribute]
public string get_WorkerId();
    [CompilerGeneratedAttribute]
private void set_WorkerId(string value);
    [CompilerGeneratedAttribute]
public Timestamp get_Timestamp();
    [CompilerGeneratedAttribute]
private void set_Timestamp(Timestamp value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.TestRunFinished : object {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Success>k__BackingField;
    [CompilerGeneratedAttribute]
private Timestamp <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    public string Message { get; private set; }
    public bool Success { get; private set; }
    public Timestamp Timestamp { get; private set; }
    public Exception Exception { get; private set; }
    public TestRunFinished(string message, bool success, Timestamp timestamp, Exception exception);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
private void set_Message(string value);
    [CompilerGeneratedAttribute]
public bool get_Success();
    [CompilerGeneratedAttribute]
private void set_Success(bool value);
    [CompilerGeneratedAttribute]
public Timestamp get_Timestamp();
    [CompilerGeneratedAttribute]
private void set_Timestamp(Timestamp value);
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
private void set_Exception(Exception value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.TestRunStarted : object {
    [CompilerGeneratedAttribute]
private Timestamp <Timestamp>k__BackingField;
    public Timestamp Timestamp { get; private set; }
    public TestRunStarted(Timestamp timestamp);
    [CompilerGeneratedAttribute]
public Timestamp get_Timestamp();
    [CompilerGeneratedAttribute]
private void set_Timestamp(Timestamp value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.TestStep : object {
    [CompilerGeneratedAttribute]
private string <HookId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PickleStepId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <StepDefinitionIds>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<StepMatchArgumentsList> <StepMatchArgumentsLists>k__BackingField;
    public string HookId { get; private set; }
    public string Id { get; private set; }
    public string PickleStepId { get; private set; }
    public List`1<string> StepDefinitionIds { get; private set; }
    public List`1<StepMatchArgumentsList> StepMatchArgumentsLists { get; private set; }
    public TestStep(string hookId, string id, string pickleStepId, List`1<string> stepDefinitionIds, List`1<StepMatchArgumentsList> stepMatchArgumentsLists);
    [CompilerGeneratedAttribute]
public string get_HookId();
    [CompilerGeneratedAttribute]
private void set_HookId(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_PickleStepId();
    [CompilerGeneratedAttribute]
private void set_PickleStepId(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_StepDefinitionIds();
    [CompilerGeneratedAttribute]
private void set_StepDefinitionIds(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<StepMatchArgumentsList> get_StepMatchArgumentsLists();
    [CompilerGeneratedAttribute]
private void set_StepMatchArgumentsLists(List`1<StepMatchArgumentsList> value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.TestStepFinished : object {
    [CompilerGeneratedAttribute]
private string <TestCaseStartedId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TestStepId>k__BackingField;
    [CompilerGeneratedAttribute]
private TestStepResult <TestStepResult>k__BackingField;
    [CompilerGeneratedAttribute]
private Timestamp <Timestamp>k__BackingField;
    public string TestCaseStartedId { get; private set; }
    public string TestStepId { get; private set; }
    public TestStepResult TestStepResult { get; private set; }
    public Timestamp Timestamp { get; private set; }
    public TestStepFinished(string testCaseStartedId, string testStepId, TestStepResult testStepResult, Timestamp timestamp);
    [CompilerGeneratedAttribute]
public string get_TestCaseStartedId();
    [CompilerGeneratedAttribute]
private void set_TestCaseStartedId(string value);
    [CompilerGeneratedAttribute]
public string get_TestStepId();
    [CompilerGeneratedAttribute]
private void set_TestStepId(string value);
    [CompilerGeneratedAttribute]
public TestStepResult get_TestStepResult();
    [CompilerGeneratedAttribute]
private void set_TestStepResult(TestStepResult value);
    [CompilerGeneratedAttribute]
public Timestamp get_Timestamp();
    [CompilerGeneratedAttribute]
private void set_Timestamp(Timestamp value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.TestStepResult : object {
    [CompilerGeneratedAttribute]
private Duration <Duration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private TestStepResultStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    public Duration Duration { get; private set; }
    public string Message { get; private set; }
    public TestStepResultStatus Status { get; private set; }
    public Exception Exception { get; private set; }
    public TestStepResult(Duration duration, string message, TestStepResultStatus status, Exception exception);
    [CompilerGeneratedAttribute]
public Duration get_Duration();
    [CompilerGeneratedAttribute]
private void set_Duration(Duration value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
private void set_Message(string value);
    [CompilerGeneratedAttribute]
public TestStepResultStatus get_Status();
    [CompilerGeneratedAttribute]
private void set_Status(TestStepResultStatus value);
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
private void set_Exception(Exception value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public enum Io.Cucumber.Messages.Types.TestStepResultStatus : Enum {
    public int value__;
    [DescriptionAttribute("UNKNOWN")]
public static TestStepResultStatus UNKNOWN;
    [DescriptionAttribute("PASSED")]
public static TestStepResultStatus PASSED;
    [DescriptionAttribute("SKIPPED")]
public static TestStepResultStatus SKIPPED;
    [DescriptionAttribute("PENDING")]
public static TestStepResultStatus PENDING;
    [DescriptionAttribute("UNDEFINED")]
public static TestStepResultStatus UNDEFINED;
    [DescriptionAttribute("AMBIGUOUS")]
public static TestStepResultStatus AMBIGUOUS;
    [DescriptionAttribute("FAILED")]
public static TestStepResultStatus FAILED;
}
[ExtensionAttribute]
public static class Io.Cucumber.Messages.Types.TestStepResultStatusExtensions : object {
    [ExtensionAttribute]
public static string Value(TestStepResultStatus v);
}
public class Io.Cucumber.Messages.Types.TestStepStarted : object {
    [CompilerGeneratedAttribute]
private string <TestCaseStartedId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TestStepId>k__BackingField;
    [CompilerGeneratedAttribute]
private Timestamp <Timestamp>k__BackingField;
    public string TestCaseStartedId { get; private set; }
    public string TestStepId { get; private set; }
    public Timestamp Timestamp { get; private set; }
    public TestStepStarted(string testCaseStartedId, string testStepId, Timestamp timestamp);
    [CompilerGeneratedAttribute]
public string get_TestCaseStartedId();
    [CompilerGeneratedAttribute]
private void set_TestCaseStartedId(string value);
    [CompilerGeneratedAttribute]
public string get_TestStepId();
    [CompilerGeneratedAttribute]
private void set_TestStepId(string value);
    [CompilerGeneratedAttribute]
public Timestamp get_Timestamp();
    [CompilerGeneratedAttribute]
private void set_Timestamp(Timestamp value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.Timestamp : object {
    [CompilerGeneratedAttribute]
private long <Seconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Nanos>k__BackingField;
    public long Seconds { get; private set; }
    public long Nanos { get; private set; }
    public Timestamp(long seconds, long nanos);
    [CompilerGeneratedAttribute]
public long get_Seconds();
    [CompilerGeneratedAttribute]
private void set_Seconds(long value);
    [CompilerGeneratedAttribute]
public long get_Nanos();
    [CompilerGeneratedAttribute]
private void set_Nanos(long value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
public class Io.Cucumber.Messages.Types.UndefinedParameterType : object {
    [CompilerGeneratedAttribute]
private string <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Expression { get; private set; }
    public string Name { get; private set; }
    public UndefinedParameterType(string expression, string name);
    [CompilerGeneratedAttribute]
public string get_Expression();
    [CompilerGeneratedAttribute]
private void set_Expression(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    public virtual bool Equals(object o);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static T Require(T property, string propertyName, string errorMessage);
    private static void RequireNonNull(T property, string propertyName, string errorMessage);
}
