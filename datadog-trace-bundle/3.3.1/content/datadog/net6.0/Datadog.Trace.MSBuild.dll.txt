public class Datadog.Trace.MSBuild.DatadogLogger : object {
    private static IDatadogLogger Log;
    private ConcurrentDictionary`2<int, Span> _projects;
    private Tracer _tracer;
    private Span _buildSpan;
    [CompilerGeneratedAttribute]
private LoggerVerbosity <Verbosity>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumberOfProcessors>k__BackingField;
    public LoggerVerbosity Verbosity { get; public set; }
    public string Parameters { get; public set; }
    public int NumberOfProcessors { get; public set; }
    private static DatadogLogger();
    [CompilerGeneratedAttribute]
public sealed virtual LoggerVerbosity get_Verbosity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Verbosity(LoggerVerbosity value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Parameters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Parameters(string value);
    [CompilerGeneratedAttribute]
public int get_NumberOfProcessors();
    [CompilerGeneratedAttribute]
public void set_NumberOfProcessors(int value);
    public sealed virtual void Initialize(IEventSource eventSource, int nodeCount);
    public sealed virtual void Initialize(IEventSource eventSource);
    public sealed virtual void Shutdown();
    private void EventSource_BuildStarted(object sender, BuildStartedEventArgs e);
    private void EventSource_BuildFinished(object sender, BuildFinishedEventArgs e);
    private void EventSource_ProjectStarted(object sender, ProjectStartedEventArgs e);
    private void EventSource_ProjectFinished(object sender, ProjectFinishedEventArgs e);
    private void EventSource_ErrorRaised(object sender, BuildErrorEventArgs e);
    private void EventSource_WarningRaised(object sender, BuildWarningEventArgs e);
}
internal class Datadog.Trace.MSBuild.LogItem : ValueType {
    [CompilerGeneratedAttribute]
private string <Level>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <LineNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ColumnNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectFile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Stack>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubCategory>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <EndLineNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <EndColumnNumber>k__BackingField;
    [JsonPropertyAttribute]
public string Level { get; }
    [JsonPropertyAttribute]
public string Message { get; }
    [JsonPropertyAttribute]
public string Type { get; }
    [JsonPropertyAttribute]
public string Code { get; }
    [JsonPropertyAttribute]
public Nullable`1<int> LineNumber { get; }
    [JsonPropertyAttribute]
public Nullable`1<int> ColumnNumber { get; }
    [JsonPropertyAttribute]
public string ProjectFile { get; }
    [JsonPropertyAttribute]
public string FilePath { get; }
    [JsonPropertyAttribute]
public string Stack { get; }
    [JsonPropertyAttribute]
public string SubCategory { get; }
    [JsonPropertyAttribute]
public Nullable`1<int> EndLineNumber { get; }
    [JsonPropertyAttribute]
public Nullable`1<int> EndColumnNumber { get; }
    public LogItem(string level, string message, string type, string code, Nullable`1<int> lineNumber, Nullable`1<int> columnNumber, Nullable`1<int> endLineNumber, Nullable`1<int> endColumnNumber, string projectFile, string filePath, string stack, string subCategory);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Level();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Message();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Type();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Code();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Nullable`1<int> get_LineNumber();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Nullable`1<int> get_ColumnNumber();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_ProjectFile();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_FilePath();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Stack();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_SubCategory();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Nullable`1<int> get_EndLineNumber();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Nullable`1<int> get_EndColumnNumber();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
