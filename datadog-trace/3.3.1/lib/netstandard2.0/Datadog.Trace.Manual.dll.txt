[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Datadog.Trace.AppSec.EventTrackingSdk : object {
    [InstrumentedAttribute]
public static void TrackUserLoginSuccessEvent(string userId);
    [InstrumentedAttribute]
public static void TrackUserLoginSuccessEvent(string userId, IDictionary`2<string, string> metadata);
    [InstrumentedAttribute]
public static void TrackUserLoginFailureEvent(string userId, bool exists);
    [InstrumentedAttribute]
public static void TrackUserLoginFailureEvent(string userId, bool exists, IDictionary`2<string, string> metadata);
    [InstrumentedAttribute]
public static void TrackCustomEvent(string eventName);
    [InstrumentedAttribute]
public static void TrackCustomEvent(string eventName, IDictionary`2<string, string> metadata);
}
[IsReadOnlyAttribute]
public class Datadog.Trace.Ci.BenchmarkDiscreteStats : ValueType {
    public int N;
    public double Max;
    public double Min;
    public double Mean;
    public double Median;
    public double StandardDeviation;
    public double StandardError;
    public double Kurtosis;
    public double Skewness;
    public double P99;
    public double P95;
    public double P90;
    public BenchmarkDiscreteStats(int n, double max, double min, double mean, double median, double standardDeviation, double standardError, double kurtosis, double skewness, double p99, double p95, double p90);
    [NullableContextAttribute("1")]
public static BenchmarkDiscreteStats GetFrom(Double[] values);
    [CompilerGeneratedAttribute]
internal static double <GetFrom>g__GetPercentile|13_0(double percentile, <>c__DisplayClass13_0& );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Datadog.Trace.Ci.BenchmarkHostInfo : ValueType {
    public string ProcessorName;
    public Nullable`1<int> ProcessorCount;
    public Nullable`1<int> PhysicalCoreCount;
    public Nullable`1<int> LogicalCoreCount;
    public Nullable`1<double> ProcessorMaxFrequencyHertz;
    public string OsVersion;
    public string RuntimeVersion;
    public Nullable`1<double> ChronometerFrequencyHertz;
    public Nullable`1<double> ChronometerResolution;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Datadog.Trace.Ci.BenchmarkJobInfo : ValueType {
    public string Description;
    public string Platform;
    public string RuntimeName;
    public string RuntimeMoniker;
}
public enum Datadog.Trace.Ci.BenchmarkMeasureType : Enum {
    public int value__;
    public static BenchmarkMeasureType Duration;
    public static BenchmarkMeasureType RunTime;
    public static BenchmarkMeasureType MeanHeapAllocations;
    public static BenchmarkMeasureType TotalHeapAllocations;
    public static BenchmarkMeasureType ApplicationLaunch;
    public static BenchmarkMeasureType GarbageCollectorGen0;
    public static BenchmarkMeasureType GarbageCollectorGen1;
    public static BenchmarkMeasureType GarbageCollectorGen2;
    public static BenchmarkMeasureType MemoryTotalOperations;
}
public class Datadog.Trace.Ci.Coverage.Attributes.AvoidCoverageAttribute : Attribute {
}
public class Datadog.Trace.Ci.Coverage.Attributes.CoveredAssemblyAttribute : Attribute {
}
internal class Datadog.Trace.Ci.Coverage.Exceptions.PdbNotFoundException : Exception {
    public static void Throw();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Datadog.Trace.Ci.Coverage.Metadata.FileCoverageMetadata : ValueType {
    public string Path;
    public int Offset;
    public int LastExecutableLine;
    public Byte[] Bitmap;
    public FileCoverageMetadata(string path, int offset, int lastExecutableLine, Byte[] bitmap);
}
public abstract class Datadog.Trace.Ci.Coverage.Metadata.ModuleCoverageMetadata : object {
    public int TotalLines;
    public int CoverageMode;
    [NullableAttribute("1")]
protected internal FileCoverageMetadata[] Files;
    internal int GetOffset(int fileIndex);
}
[ExtensionAttribute]
internal static class Datadog.Trace.Ci.Coverage.Util.ArrayExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static T& FastGetReference(T[] array, int index);
}
[NullableContextAttribute("1")]
[DuckTypeAttribute("Datadog.Trace.Ci.Test", "Datadog.Trace")]
public interface Datadog.Trace.Ci.ITest {
    [NullableAttribute("2")]
public string Name { get; }
    public DateTimeOffset StartTime { get; }
    public ITestSuite Suite { get; }
    [NullableContextAttribute("2")]
public abstract virtual string get_Name();
    public abstract virtual DateTimeOffset get_StartTime();
    public abstract virtual ITestSuite get_Suite();
    public abstract virtual void SetTag(string key, string value);
    public abstract virtual void SetTag(string key, Nullable`1<double> value);
    public abstract virtual void SetErrorInfo(string type, string message, string callStack);
    public abstract virtual void SetErrorInfo(Exception exception);
    public abstract virtual void SetTestMethodInfo(MethodInfo methodInfo);
    public abstract virtual void SetTraits(Dictionary`2<string, List`1<string>> traits);
    public abstract virtual void Close(TestStatus status);
    public abstract virtual void Close(TestStatus status, Nullable`1<TimeSpan> duration);
    [NullableContextAttribute("2")]
public abstract virtual void Close(TestStatus status, Nullable`1<TimeSpan> duration, string skipReason);
}
[NullableContextAttribute("1")]
[DuckTypeAttribute("Datadog.Trace.Ci.TestModule", "Datadog.Trace")]
public interface Datadog.Trace.Ci.ITestModule {
    public string Name { get; }
    public DateTimeOffset StartTime { get; }
    [NullableAttribute("2")]
public string Framework { get; }
    public abstract virtual string get_Name();
    public abstract virtual DateTimeOffset get_StartTime();
    [NullableContextAttribute("2")]
public abstract virtual string get_Framework();
    public abstract virtual void SetTag(string key, string value);
    public abstract virtual void SetTag(string key, Nullable`1<double> value);
    public abstract virtual void SetErrorInfo(string type, string message, string callStack);
    public abstract virtual void SetErrorInfo(Exception exception);
    public abstract virtual void Close();
    public abstract virtual void Close(Nullable`1<TimeSpan> duration);
    public abstract virtual Task CloseAsync();
    public abstract virtual Task CloseAsync(Nullable`1<TimeSpan> duration);
    public abstract virtual ITestSuite GetOrCreateSuite(string name);
    public abstract virtual ITestSuite GetOrCreateSuite(string name, Nullable`1<DateTimeOffset> startDate);
}
[NullableContextAttribute("1")]
[DuckTypeAttribute("Datadog.Trace.Ci.TestSession", "Datadog.Trace")]
public interface Datadog.Trace.Ci.ITestSession {
    [NullableAttribute("2")]
public string Command { get; }
    [NullableAttribute("2")]
public string WorkingDirectory { get; }
    public DateTimeOffset StartTime { get; }
    [NullableAttribute("2")]
public string Framework { get; }
    [NullableContextAttribute("2")]
public abstract virtual string get_Command();
    [NullableContextAttribute("2")]
public abstract virtual string get_WorkingDirectory();
    public abstract virtual DateTimeOffset get_StartTime();
    [NullableContextAttribute("2")]
public abstract virtual string get_Framework();
    public abstract virtual void SetTag(string key, string value);
    public abstract virtual void SetTag(string key, Nullable`1<double> value);
    public abstract virtual void SetErrorInfo(string type, string message, string callStack);
    public abstract virtual void SetErrorInfo(Exception exception);
    public abstract virtual void Close(TestStatus status);
    public abstract virtual void Close(TestStatus status, Nullable`1<TimeSpan> duration);
    public abstract virtual Task CloseAsync(TestStatus status);
    public abstract virtual Task CloseAsync(TestStatus status, Nullable`1<TimeSpan> duration);
    public abstract virtual ITestModule CreateModule(string name);
    public abstract virtual ITestModule CreateModule(string name, string framework, string frameworkVersion);
    public abstract virtual ITestModule CreateModule(string name, string framework, string frameworkVersion, DateTimeOffset startDate);
}
[NullableContextAttribute("1")]
[DuckTypeAttribute("Datadog.Trace.Ci.TestSuite", "Datadog.Trace")]
public interface Datadog.Trace.Ci.ITestSuite {
    public string Name { get; }
    public DateTimeOffset StartTime { get; }
    public ITestModule Module { get; }
    public abstract virtual string get_Name();
    public abstract virtual DateTimeOffset get_StartTime();
    public abstract virtual ITestModule get_Module();
    public abstract virtual void SetTag(string key, string value);
    public abstract virtual void SetTag(string key, Nullable`1<double> value);
    public abstract virtual void SetErrorInfo(string type, string message, string callStack);
    public abstract virtual void SetErrorInfo(Exception exception);
    public abstract virtual void Close();
    public abstract virtual void Close(Nullable`1<TimeSpan> duration);
    public abstract virtual ITest CreateTest(string name);
    public abstract virtual ITest CreateTest(string name, DateTimeOffset startDate);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Datadog.Trace.Ci.Stubs.NullTest : object {
    public static NullTest Instance;
    [NullableAttribute("2")]
public string Name { get; }
    public DateTimeOffset StartTime { get; }
    public ITestSuite Suite { get; }
    private static NullTest();
    [NullableContextAttribute("2")]
public sealed virtual string get_Name();
    public sealed virtual DateTimeOffset get_StartTime();
    public sealed virtual ITestSuite get_Suite();
    public sealed virtual void SetTag(string key, string value);
    public sealed virtual void SetTag(string key, Nullable`1<double> value);
    public sealed virtual void SetErrorInfo(string type, string message, string callStack);
    public sealed virtual void SetErrorInfo(Exception exception);
    public sealed virtual void SetTestMethodInfo(MethodInfo methodInfo);
    public sealed virtual void SetTraits(Dictionary`2<string, List`1<string>> traits);
    public sealed virtual void Close(TestStatus status);
    public sealed virtual void Close(TestStatus status, Nullable`1<TimeSpan> duration);
    [NullableContextAttribute("2")]
public sealed virtual void Close(TestStatus status, Nullable`1<TimeSpan> duration, string skipReason);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Datadog.Trace.Ci.Stubs.NullTestModule : object {
    public static NullTestModule Instance;
    public string Name { get; }
    public DateTimeOffset StartTime { get; }
    [NullableAttribute("2")]
public string Framework { get; }
    private static NullTestModule();
    public sealed virtual string get_Name();
    public sealed virtual DateTimeOffset get_StartTime();
    [NullableContextAttribute("2")]
public sealed virtual string get_Framework();
    public sealed virtual void SetTag(string key, string value);
    public sealed virtual void SetTag(string key, Nullable`1<double> value);
    public sealed virtual void SetErrorInfo(string type, string message, string callStack);
    public sealed virtual void SetErrorInfo(Exception exception);
    public sealed virtual void Close();
    public sealed virtual void Close(Nullable`1<TimeSpan> duration);
    public sealed virtual Task CloseAsync();
    public sealed virtual Task CloseAsync(Nullable`1<TimeSpan> duration);
    public sealed virtual ITestSuite GetOrCreateSuite(string name);
    public sealed virtual ITestSuite GetOrCreateSuite(string name, Nullable`1<DateTimeOffset> startDate);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Datadog.Trace.Ci.Stubs.NullTestSession : object {
    public static NullTestSession Instance;
    [NullableAttribute("2")]
public string Command { get; }
    [NullableAttribute("2")]
public string WorkingDirectory { get; }
    public DateTimeOffset StartTime { get; }
    [NullableAttribute("2")]
public string Framework { get; }
    private static NullTestSession();
    [NullableContextAttribute("2")]
public sealed virtual string get_Command();
    [NullableContextAttribute("2")]
public sealed virtual string get_WorkingDirectory();
    public sealed virtual DateTimeOffset get_StartTime();
    [NullableContextAttribute("2")]
public sealed virtual string get_Framework();
    public sealed virtual void SetTag(string key, string value);
    public sealed virtual void SetTag(string key, Nullable`1<double> value);
    public sealed virtual void SetErrorInfo(string type, string message, string callStack);
    public sealed virtual void SetErrorInfo(Exception exception);
    public sealed virtual void Close(TestStatus status);
    public sealed virtual void Close(TestStatus status, Nullable`1<TimeSpan> duration);
    public sealed virtual Task CloseAsync(TestStatus status);
    public sealed virtual Task CloseAsync(TestStatus status, Nullable`1<TimeSpan> duration);
    private sealed virtual override ITestModule Datadog.Trace.Ci.ITestSession.CreateModule(string name);
    private sealed virtual override ITestModule Datadog.Trace.Ci.ITestSession.CreateModule(string name, string framework, string frameworkVersion);
    private sealed virtual override ITestModule Datadog.Trace.Ci.ITestSession.CreateModule(string name, string framework, string frameworkVersion, DateTimeOffset startDate);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Datadog.Trace.Ci.Stubs.NullTestSuite : object {
    public static NullTestSuite Instance;
    public string Name { get; }
    public DateTimeOffset StartTime { get; }
    public ITestModule Module { get; }
    private static NullTestSuite();
    public sealed virtual string get_Name();
    public sealed virtual DateTimeOffset get_StartTime();
    public sealed virtual ITestModule get_Module();
    public sealed virtual void SetTag(string key, string value);
    public sealed virtual void SetTag(string key, Nullable`1<double> value);
    public sealed virtual void SetErrorInfo(string type, string message, string callStack);
    public sealed virtual void SetErrorInfo(Exception exception);
    public sealed virtual void Close();
    public sealed virtual void Close(Nullable`1<TimeSpan> duration);
    public sealed virtual ITest CreateTest(string name);
    public sealed virtual ITest CreateTest(string name, DateTimeOffset startDate);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Datadog.Trace.Ci.TestExtensions : object {
    [ExtensionAttribute]
[InstrumentedAttribute]
public static void SetParameters(ITest test, TestParameters parameters);
    [ExtensionAttribute]
[InstrumentedAttribute]
public static void SetBenchmarkMetadata(ITest test, BenchmarkHostInfo& hostInfo, BenchmarkJobInfo& jobInfo);
    [ExtensionAttribute]
[InstrumentedAttribute]
public static void AddBenchmarkData(ITest test, BenchmarkMeasureType measureType, string info, BenchmarkDiscreteStats& statistics);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Datadog.Trace.Ci.TestModule : object {
    public static ITestModule Create(string name);
    public static ITestModule Create(string name, string framework, string frameworkVersion);
    public static ITestModule Create(string name, string framework, string frameworkVersion, DateTimeOffset startDate);
    [InstrumentedAttribute]
internal static ITestModule InternalCreate(string name, string framework, string frameworkVersion, Nullable`1<DateTimeOffset> startDate);
}
public class Datadog.Trace.Ci.TestParameters : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Metadata>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Arguments>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Dictionary`2<string, object> Metadata { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Dictionary`2<string, object> Arguments { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Metadata();
    [CompilerGeneratedAttribute]
public void set_Metadata(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Arguments();
    [CompilerGeneratedAttribute]
public void set_Arguments(Dictionary`2<string, object> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Datadog.Trace.Ci.TestSession : object {
    public static ITestSession GetOrCreate(string command);
    public static ITestSession GetOrCreate(string command, string workingDirectory);
    public static ITestSession GetOrCreate(string command, string workingDirectory, string framework);
    public static ITestSession GetOrCreate(string command, string workingDirectory, string framework, DateTimeOffset startDate);
    public static ITestSession GetOrCreate(string command, string workingDirectory, string framework, Nullable`1<DateTimeOffset> startDate, bool propagateEnvironmentVariables);
    [InstrumentedAttribute]
internal static ITestSession InternalGetOrCreate(string command, string workingDirectory, string framework, Nullable`1<DateTimeOffset> startDate, bool propagateEnvironmentVariables);
}
public enum Datadog.Trace.Ci.TestStatus : Enum {
    public int value__;
    public static TestStatus Pass;
    public static TestStatus Fail;
    public static TestStatus Skip;
}
internal static class Datadog.Trace.ClrProfiler.AutoInstrumentation.ManualInstrumentation.IntegrationSettingsSerializationHelper : object {
    public static Object[] SerializeFromAutomatic(Nullable`1<bool> enabled, Nullable`1<bool> analyticsEnabled, double analyticsSampleRate);
    public static bool TryDeserializeFromAutomatic(Object[] values, Nullable`1& enabled, Nullable`1& analyticsEnabled, Double& analyticsSampleRate);
    [NullableContextAttribute("2")]
public static Object[] SerializeFromManual(bool enabledChanged, Nullable`1<bool> enabled, bool analyticsEnabledChanged, Nullable`1<bool> analyticsEnabled, bool analyticsSampleRateChanged, Nullable`1<double> analyticsSampleRate);
    public static bool TryDeserializeFromManual(Object[] values, Boolean& enabledChanged, Nullable`1& enabled, Boolean& analyticsEnabledChanged, Nullable`1& analyticsEnabled, Boolean& analyticsSampleRateChanged, Double& analyticsSampleRate);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Datadog.Trace.ClrProfiler.AutoInstrumentation.ManualInstrumentation.TracerSettingKeyConstants : object {
    public static string IsFromDefaultSourcesKey;
    public static string HttpClientErrorCodesKey;
    public static string HttpServerErrorCodesKey;
    public static string ServiceNameMappingsKey;
    public static string DiagnosticSourceEnabledKey;
    public static string IntegrationSettingsKey;
    public static string AgentUriKey;
    public static string AnalyticsEnabledKey;
    public static string CustomSamplingRules;
    public static string DisabledIntegrationNamesKey;
    public static string EnvironmentKey;
    public static string GlobalSamplingRateKey;
    public static string GlobalTagsKey;
    public static string GrpcTags;
    public static string HeaderTags;
    public static string KafkaCreateConsumerScopeEnabledKey;
    public static string LogsInjectionEnabledKey;
    public static string MaxTracesSubmittedPerSecondKey;
    public static string ServiceNameKey;
    public static string ServiceVersionKey;
    public static string StartupDiagnosticLogEnabledKey;
    public static string StatsComputationEnabledKey;
    public static string TraceEnabledKey;
    public static string TracerMetricsEnabledKey;
}
internal class Datadog.Trace.ClrProfiler.Instrumentation : object {
    public static bool IsManualInstrumentationOnly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Datadog.Trace.Configuration.DeprecationMessages : object {
    public static string AppAnalytics;
    public static string LogPath;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsolete and will be removed in a future version. To set the AgentUri, use the TracerSettings.AgentUri property")]
public class Datadog.Trace.Configuration.ExporterSettings : object {
    private TracerSettings _tracerSettings;
    [ObsoleteAttribute("This property is obsolete and will be removed in a future version. To set the AgentUri, use the TracerSettings.AgentUri property")]
public Uri AgentUri { get; public set; }
    internal ExporterSettings(TracerSettings tracerSettings);
    public Uri get_AgentUri();
    public void set_AgentUri(Uri value);
}
public class Datadog.Trace.Configuration.GlobalSettings : object {
    [InstrumentedAttribute]
public static void SetDebugEnabled(bool enabled);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsolete and will be removed in a future version. To fetch the current AgentUri, use the ImmutableTracerSettings.AgentUri property")]
public class Datadog.Trace.Configuration.ImmutableExporterSettings : object {
    private ImmutableTracerSettings _tracerSettings;
    [ObsoleteAttribute("This property is obsolete and will be removed in a future version. To fetch the current AgentUri, use the ImmutableTracerSettings.AgentUri property")]
public Uri AgentUri { get; }
    internal ImmutableExporterSettings(ImmutableTracerSettings tracerSettings);
    public Uri get_AgentUri();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Datadog.Trace.Configuration.ImmutableIntegrationSettings : object {
    [CompilerGeneratedAttribute]
private string <IntegrationName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AnalyticsEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private double <AnalyticsSampleRate>k__BackingField;
    [InstrumentedAttribute]
public string IntegrationName { get; }
    [InstrumentedAttribute]
public Nullable`1<bool> Enabled { get; }
    [InstrumentedAttribute]
public Nullable`1<bool> AnalyticsEnabled { get; }
    [InstrumentedAttribute]
public double AnalyticsSampleRate { get; }
    internal ImmutableIntegrationSettings(string name, Nullable`1<bool> enabled, Nullable`1<bool> analyticsEnabled, double analyticsSampleRate);
    internal ImmutableIntegrationSettings(string name);
    [CompilerGeneratedAttribute]
public string get_IntegrationName();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Enabled();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AnalyticsEnabled();
    [CompilerGeneratedAttribute]
public double get_AnalyticsSampleRate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class Datadog.Trace.Configuration.ImmutableIntegrationSettingsCollection : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, ImmutableIntegrationSettings> <Settings>k__BackingField;
    internal Dictionary`2<string, ImmutableIntegrationSettings> Settings { get; }
    [InstrumentedAttribute]
public ImmutableIntegrationSettings Item { get; }
    internal ImmutableIntegrationSettingsCollection(Dictionary`2<string, ImmutableIntegrationSettings> settings);
    [CompilerGeneratedAttribute]
internal Dictionary`2<string, ImmutableIntegrationSettings> get_Settings();
    public ImmutableIntegrationSettings get_Item(string integrationName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Datadog.Trace.Configuration.ImmutableTracerSettings : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Environment>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <AgentUri>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableExporterSettings <Exporter>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ServiceName>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ServiceVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TraceEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AnalyticsEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LogsInjectionEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxTracesSubmittedPerSecond>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <CustomSamplingRules>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <GlobalSamplingRate>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableIntegrationSettingsCollection <Integrations>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <GlobalTags>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <GrpcTags>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <HeaderTags>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TracerMetricsEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <StatsComputationEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <KafkaCreateConsumerScopeEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <StartupDiagnosticLogEnabled>k__BackingField;
    [NullableAttribute("2")]
[InstrumentedAttribute]
public string Environment { get; }
    [InstrumentedAttribute]
public Uri AgentUri { get; }
    [ObsoleteAttribute("This property is obsolete and will be removed in a future version. To get the AgentUri, use the AgentUri property")]
[InstrumentedAttribute]
public ImmutableExporterSettings Exporter { get; }
    [NullableAttribute("2")]
[InstrumentedAttribute]
public string ServiceName { get; }
    [NullableAttribute("2")]
[InstrumentedAttribute]
public string ServiceVersion { get; }
    [InstrumentedAttribute]
public bool TraceEnabled { get; }
    [ObsoleteAttribute("App Analytics has been replaced by Tracing without Limits. For more information see https://docs.datadoghq.com/tracing/legacy_app_analytics/")]
[InstrumentedAttribute]
public bool AnalyticsEnabled { get; }
    [InstrumentedAttribute]
public bool LogsInjectionEnabled { get; }
    [InstrumentedAttribute]
public int MaxTracesSubmittedPerSecond { get; }
    [NullableAttribute("2")]
[InstrumentedAttribute]
public string CustomSamplingRules { get; }
    [InstrumentedAttribute]
public Nullable`1<double> GlobalSamplingRate { get; }
    [InstrumentedAttribute]
public ImmutableIntegrationSettingsCollection Integrations { get; }
    [InstrumentedAttribute]
public IReadOnlyDictionary`2<string, string> GlobalTags { get; }
    [InstrumentedAttribute]
public IReadOnlyDictionary`2<string, string> GrpcTags { get; }
    [InstrumentedAttribute]
public IReadOnlyDictionary`2<string, string> HeaderTags { get; }
    [InstrumentedAttribute]
public bool TracerMetricsEnabled { get; }
    [InstrumentedAttribute]
public bool StatsComputationEnabled { get; }
    [InstrumentedAttribute]
public bool KafkaCreateConsumerScopeEnabled { get; }
    [InstrumentedAttribute]
public bool StartupDiagnosticLogEnabled { get; }
    internal ImmutableTracerSettings(Dictionary`2<string, object> initialValues);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Environment();
    [CompilerGeneratedAttribute]
public Uri get_AgentUri();
    [CompilerGeneratedAttribute]
public ImmutableExporterSettings get_Exporter();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ServiceName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ServiceVersion();
    [CompilerGeneratedAttribute]
public bool get_TraceEnabled();
    [CompilerGeneratedAttribute]
public bool get_AnalyticsEnabled();
    [CompilerGeneratedAttribute]
public bool get_LogsInjectionEnabled();
    [CompilerGeneratedAttribute]
public int get_MaxTracesSubmittedPerSecond();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_CustomSamplingRules();
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_GlobalSamplingRate();
    [CompilerGeneratedAttribute]
public ImmutableIntegrationSettingsCollection get_Integrations();
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_GlobalTags();
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_GrpcTags();
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_HeaderTags();
    [CompilerGeneratedAttribute]
public bool get_TracerMetricsEnabled();
    [CompilerGeneratedAttribute]
public bool get_StatsComputationEnabled();
    [CompilerGeneratedAttribute]
public bool get_KafkaCreateConsumerScopeEnabled();
    [CompilerGeneratedAttribute]
public bool get_StartupDiagnosticLogEnabled();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static T <.ctor>g__GetValue|0_0(Dictionary`2<string, object> results, string key, T defaultValue);
}
public class Datadog.Trace.Configuration.IntegrationSettings : object {
    private OverrideValue`1<Nullable`1<bool>> _enabled;
    private OverrideValue`1<Nullable`1<bool>> _analyticsEnabled;
    private OverrideValue`1<double> _analyticsSampleRate;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <IntegrationName>k__BackingField;
    [NullableAttribute("1")]
[InstrumentedAttribute]
public string IntegrationName { get; }
    public Nullable`1<bool> Enabled { get; public set; }
    public Nullable`1<bool> AnalyticsEnabled { get; public set; }
    public double AnalyticsSampleRate { get; public set; }
    [NullableContextAttribute("1")]
internal IntegrationSettings(string integrationName, Nullable`1<bool> enabled, Nullable`1<bool> analyticsEnabled, double analyticsSampleRate);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_IntegrationName();
    [InstrumentedAttribute]
public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    [InstrumentedAttribute]
public Nullable`1<bool> get_AnalyticsEnabled();
    public void set_AnalyticsEnabled(Nullable`1<bool> value);
    [InstrumentedAttribute]
public double get_AnalyticsSampleRate();
    public void set_AnalyticsSampleRate(double value);
    [NullableContextAttribute("2")]
internal Object[] GetChangeDetails();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class Datadog.Trace.Configuration.IntegrationSettingsCollection : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, IntegrationSettings> <Settings>k__BackingField;
    internal Dictionary`2<string, IntegrationSettings> Settings { get; }
    [InstrumentedAttribute]
public IntegrationSettings Item { get; }
    internal IntegrationSettingsCollection(Dictionary`2<string, IntegrationSettings> settings);
    [CompilerGeneratedAttribute]
internal Dictionary`2<string, IntegrationSettings> get_Settings();
    public IntegrationSettings get_Item(string integrationName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Datadog.Trace.Configuration.IntegrationSettingsHelper : object {
    public static IntegrationSettingsCollection ParseFromAutomatic(Dictionary`2<string, object> initialValues);
    public static ImmutableIntegrationSettingsCollection ParseImmutableFromAutomatic(Dictionary`2<string, object> initialValues);
    private static Dictionary`2<string, T> Populate(Dictionary`2<string, object> initialValues, Func`5<string, Nullable`1<bool>, Nullable`1<bool>, double, T> createSettingFunc);
    [CompilerGeneratedAttribute]
internal static IntegrationSettings <ParseFromAutomatic>g__CreateSettingFunc|0_0(string name, Nullable`1<bool> enabled, Nullable`1<bool> analyticsEnabled, double analyticsSampleRate);
    [CompilerGeneratedAttribute]
internal static ImmutableIntegrationSettings <ParseImmutableFromAutomatic>g__CreateSettingFunc|1_0(string name, Nullable`1<bool> enabled, Nullable`1<bool> analyticsEnabled, double analyticsSampleRate);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Datadog.Trace.Configuration.OverrideValue`1 : ValueType {
    public T Initial;
    public bool IsOverridden;
    private T _override;
    public T Value { get; }
    public OverrideValue`1(T initial);
    public OverrideValue`1(T initial, T override);
    public T get_Value();
    public OverrideValue`1<T> Override(T value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Datadog.Trace.Configuration.TracerSettings : object {
    private bool _diagnosticSourceEnabled;
    private bool _isFromDefaultSources;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private OverrideValue`1<string> _environment;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private OverrideValue`1<string> _serviceName;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private OverrideValue`1<string> _serviceVersion;
    [NullableAttribute("0")]
private OverrideValue`1<bool> _analyticsEnabled;
    [NullableAttribute("0")]
private OverrideValue`1<Nullable`1<double>> _globalSamplingRate;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private OverrideValue`1<IDictionary`2<string, string>> _globalTags;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private OverrideValue`1<IDictionary`2<string, string>> _grpcTags;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private OverrideValue`1<IDictionary`2<string, string>> _headerTags;
    [NullableAttribute("0")]
private OverrideValue`1<bool> _kafkaCreateConsumerScopeEnabled;
    [NullableAttribute("0")]
private OverrideValue`1<bool> _logsInjectionEnabled;
    [NullableAttribute("0")]
private OverrideValue`1<int> _maxTracesSubmittedPerSecond;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private OverrideValue`1<string> _customSamplingRules;
    [NullableAttribute("0")]
private OverrideValue`1<bool> _startupDiagnosticLogEnabled;
    [NullableAttribute("0")]
private OverrideValue`1<bool> _traceEnabled;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private OverrideValue`1<HashSet`1<string>> _disabledIntegrationNames;
    [NullableAttribute("0")]
private OverrideValue`1<bool> _tracerMetricsEnabled;
    [NullableAttribute("0")]
private OverrideValue`1<bool> _statsComputationEnabled;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private OverrideValue`1<Uri> _agentUri;
    [NullableAttribute("2")]
private List`1<int> _httpClientErrorCodes;
    [NullableAttribute("2")]
private List`1<int> _httpServerErrorCodes;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<string, string> _serviceNameMappings;
    [CompilerGeneratedAttribute]
private IntegrationSettingsCollection <Integrations>k__BackingField;
    [CompilerGeneratedAttribute]
private ExporterSettings <Exporter>k__BackingField;
    [InstrumentedAttribute]
public bool DiagnosticSourceEnabled { get; public set; }
    [NullableAttribute("2")]
public string Environment { get; public set; }
    [NullableAttribute("2")]
public string ServiceName { get; public set; }
    [NullableAttribute("2")]
public string ServiceVersion { get; public set; }
    [ObsoleteAttribute("App Analytics has been replaced by Tracing without Limits. For more information see https://docs.datadoghq.com/tracing/legacy_app_analytics/")]
public bool AnalyticsEnabled { get; public set; }
    public Nullable`1<double> GlobalSamplingRate { get; public set; }
    public IDictionary`2<string, string> GlobalTags { get; public set; }
    public IDictionary`2<string, string> GrpcTags { get; public set; }
    public IDictionary`2<string, string> HeaderTags { get; public set; }
    public bool KafkaCreateConsumerScopeEnabled { get; public set; }
    public bool LogsInjectionEnabled { get; public set; }
    public int MaxTracesSubmittedPerSecond { get; public set; }
    [NullableAttribute("2")]
public string CustomSamplingRules { get; public set; }
    public bool StartupDiagnosticLogEnabled { get; public set; }
    public bool TraceEnabled { get; public set; }
    public HashSet`1<string> DisabledIntegrationNames { get; public set; }
    public bool TracerMetricsEnabled { get; public set; }
    public bool StatsComputationEnabled { get; public set; }
    public Uri AgentUri { get; public set; }
    [InstrumentedAttribute]
public IntegrationSettingsCollection Integrations { get; }
    [ObsoleteAttribute("This property is obsolete and will be removed in a future version. To set the AgentUri, use the TracerSettings.AgentUri property")]
[InstrumentedAttribute]
public ExporterSettings Exporter { get; }
    [InstrumentedAttribute]
public TracerSettings(bool useDefaultSources);
    internal TracerSettings(Dictionary`2<string, object> initialValues, bool isFromDefaultSources);
    public bool get_DiagnosticSourceEnabled();
    [ObsoleteAttribute("This value cannot be set in code. Instead, set it using the DD_DIAGNOSTIC_SOURCE_ENABLED environment variable, or in configuration files")]
public void set_DiagnosticSourceEnabled(bool value);
    [NullableContextAttribute("2")]
[InstrumentedAttribute]
public string get_Environment();
    [NullableContextAttribute("2")]
public void set_Environment(string value);
    [NullableContextAttribute("2")]
[InstrumentedAttribute]
public string get_ServiceName();
    [NullableContextAttribute("2")]
public void set_ServiceName(string value);
    [NullableContextAttribute("2")]
[InstrumentedAttribute]
public string get_ServiceVersion();
    [NullableContextAttribute("2")]
public void set_ServiceVersion(string value);
    [InstrumentedAttribute]
public bool get_AnalyticsEnabled();
    public void set_AnalyticsEnabled(bool value);
    [InstrumentedAttribute]
public Nullable`1<double> get_GlobalSamplingRate();
    public void set_GlobalSamplingRate(Nullable`1<double> value);
    [InstrumentedAttribute]
public IDictionary`2<string, string> get_GlobalTags();
    public void set_GlobalTags(IDictionary`2<string, string> value);
    [InstrumentedAttribute]
public IDictionary`2<string, string> get_GrpcTags();
    public void set_GrpcTags(IDictionary`2<string, string> value);
    [InstrumentedAttribute]
public IDictionary`2<string, string> get_HeaderTags();
    public void set_HeaderTags(IDictionary`2<string, string> value);
    [InstrumentedAttribute]
public bool get_KafkaCreateConsumerScopeEnabled();
    public void set_KafkaCreateConsumerScopeEnabled(bool value);
    [InstrumentedAttribute]
public bool get_LogsInjectionEnabled();
    public void set_LogsInjectionEnabled(bool value);
    [InstrumentedAttribute]
public int get_MaxTracesSubmittedPerSecond();
    public void set_MaxTracesSubmittedPerSecond(int value);
    [NullableContextAttribute("2")]
[InstrumentedAttribute]
public string get_CustomSamplingRules();
    [NullableContextAttribute("2")]
public void set_CustomSamplingRules(string value);
    [InstrumentedAttribute]
public bool get_StartupDiagnosticLogEnabled();
    public void set_StartupDiagnosticLogEnabled(bool value);
    [InstrumentedAttribute]
public bool get_TraceEnabled();
    public void set_TraceEnabled(bool value);
    [InstrumentedAttribute]
public HashSet`1<string> get_DisabledIntegrationNames();
    public void set_DisabledIntegrationNames(HashSet`1<string> value);
    [InstrumentedAttribute]
public bool get_TracerMetricsEnabled();
    public void set_TracerMetricsEnabled(bool value);
    [InstrumentedAttribute]
public bool get_StatsComputationEnabled();
    public void set_StatsComputationEnabled(bool value);
    [InstrumentedAttribute]
public Uri get_AgentUri();
    public void set_AgentUri(Uri value);
    [CompilerGeneratedAttribute]
public IntegrationSettingsCollection get_Integrations();
    [CompilerGeneratedAttribute]
public ExporterSettings get_Exporter();
    [InstrumentedAttribute]
public static TracerSettings FromDefaultSources();
    public void SetHttpClientErrorStatusCodes(IEnumerable`1<int> statusCodes);
    public void SetHttpServerErrorStatusCodes(IEnumerable`1<int> statusCodes);
    public void SetServiceNameMappings(IEnumerable`1<KeyValuePair`2<string, string>> mappings);
    [InstrumentedAttribute]
private static Dictionary`2<string, object> PopulateDictionary(Dictionary`2<string, object> values, bool useDefaultSources);
    internal Dictionary`2<string, object> ToDictionary();
    [CompilerGeneratedAttribute]
internal static OverrideValue`1<HashSet`1<string>> <.ctor>g__GetAsHashSet|25_0(Dictionary`2<string, object> results, string key);
    [CompilerGeneratedAttribute]
internal static OverrideValue`1<IDictionary`2<string, string>> <.ctor>g__GetAsDictionary|25_1(Dictionary`2<string, object> results, string key);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static OverrideValue`1<T> <.ctor>g__GetValue|25_2(Dictionary`2<string, object> results, string key, T defaultValue);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static Nullable`1<OverrideValue`1<T>> <.ctor>g__TryGetValue|25_3(Dictionary`2<string, object> results, string key);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static void <ToDictionary>g__AddIfChanged|94_0(Dictionary`2<string, object> results, string key, OverrideValue`1& updated);
    [CompilerGeneratedAttribute]
internal static void <ToDictionary>g__AddIfChangedHashSet|94_1(Dictionary`2<string, object> results, string key, OverrideValue`1& updated);
    [CompilerGeneratedAttribute]
internal static void <ToDictionary>g__AddIfChangedDictionary|94_2(Dictionary`2<string, object> results, string key, OverrideValue`1& updated);
    [CompilerGeneratedAttribute]
internal static bool <ToDictionary>g__HasChanges|94_4(OverrideValue`1& updated);
    [CompilerGeneratedAttribute]
internal static Dictionary`2<string, Object[]> <ToDictionary>g__BuildIntegrationSettings|94_3(IntegrationSettingsCollection settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Datadog.Trace.CorrelationIdentifier : object {
    public static string Service { get; }
    public static string Version { get; }
    public static string Env { get; }
    public static ulong TraceId { get; }
    public static ulong SpanId { get; }
    public static string get_Service();
    public static string get_Version();
    public static string get_Env();
    public static ulong get_TraceId();
    public static ulong get_SpanId();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1036")]
internal class Datadog.Trace.DuckTyping.DuckTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <TargetType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetAssembly>k__BackingField;
    public string TargetType { get; public set; }
    public string TargetAssembly { get; public set; }
    [NullableContextAttribute("1")]
public DuckTypeAttribute(string targetType, string targetAssembly);
    [CompilerGeneratedAttribute]
public string get_TargetType();
    [CompilerGeneratedAttribute]
public void set_TargetType(string value);
    [CompilerGeneratedAttribute]
public string get_TargetAssembly();
    [CompilerGeneratedAttribute]
public void set_TargetAssembly(string value);
}
[AttributeUsageAttribute("480")]
internal class Datadog.Trace.DuckTyping.DuckTypeTarget : Attribute {
}
[ExtensionAttribute]
public static class Datadog.Trace.ExtensionMethods.SpanExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
[InstrumentedAttribute]
public static void SetTraceSamplingPriority(ISpan span, SamplingPriority samplingPriority);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Datadog.Trace.HttpHeaderNames : object {
    public static string TraceId;
    public static string ParentId;
    public static string SamplingPriority;
    public static string TracingEnabled;
    public static string Origin;
    public static string UserAgent;
    [ObsoleteAttribute]
public static string DatadogTags;
    internal static string PropagatedTags;
    internal static string SpanId;
    internal static string InvocationError;
    internal static string InvocationErrorMsg;
    internal static string InvocationErrorType;
    internal static string InvocationErrorStack;
}
[NullableContextAttribute("1")]
internal interface Datadog.Trace.IDatadogOpenTracingTracer {
    public string DefaultServiceName { get; }
    public abstract virtual string get_DefaultServiceName();
    public abstract virtual ISpan StartSpan(string operationName, ISpanContext parent, string serviceName, Nullable`1<DateTimeOffset> startTime, bool ignoreActiveScope);
}
[NullableContextAttribute("1")]
[DuckTypeAttribute("Datadog.Trace.Scope", "Datadog.Trace")]
public interface Datadog.Trace.IScope {
    public ISpan Span { get; }
    public abstract virtual ISpan get_Span();
    public abstract virtual void Close();
}
[NullableContextAttribute("2")]
public interface Datadog.Trace.ISpan {
    public string OperationName { get; public set; }
    public string ResourceName { get; public set; }
    public string Type { get; public set; }
    public bool Error { get; public set; }
    public string ServiceName { get; public set; }
    public ulong TraceId { get; }
    public ulong SpanId { get; }
    [NullableAttribute("1")]
public ISpanContext Context { get; }
    public abstract virtual string get_OperationName();
    public abstract virtual void set_OperationName(string value);
    public abstract virtual string get_ResourceName();
    public abstract virtual void set_ResourceName(string value);
    public abstract virtual string get_Type();
    public abstract virtual void set_Type(string value);
    public abstract virtual bool get_Error();
    public abstract virtual void set_Error(bool value);
    public abstract virtual string get_ServiceName();
    public abstract virtual void set_ServiceName(string value);
    public abstract virtual ulong get_TraceId();
    public abstract virtual ulong get_SpanId();
    [NullableContextAttribute("1")]
public abstract virtual ISpanContext get_Context();
    [NullableContextAttribute("1")]
public abstract virtual ISpan SetTag(string key, string value);
    public abstract virtual void Finish();
    public abstract virtual void Finish(DateTimeOffset finishTimestamp);
    [NullableContextAttribute("1")]
public abstract virtual void SetException(Exception exception);
    [NullableContextAttribute("1")]
public abstract virtual string GetTag(string key);
}
[NullableContextAttribute("2")]
[DuckTypeAttribute("Datadog.Trace.SpanContext", "Datadog.Trace")]
public interface Datadog.Trace.ISpanContext {
    public ulong TraceId { get; }
    public ulong SpanId { get; }
    public string ServiceName { get; }
    public abstract virtual ulong get_TraceId();
    public abstract virtual ulong get_SpanId();
    public abstract virtual string get_ServiceName();
}
[NullableContextAttribute("1")]
public interface Datadog.Trace.ITracer {
    [NullableAttribute("2")]
public IScope ActiveScope { get; }
    public ImmutableTracerSettings Settings { get; }
    [NullableContextAttribute("2")]
public abstract virtual IScope get_ActiveScope();
    public abstract virtual ImmutableTracerSettings get_Settings();
    public abstract virtual IScope StartActive(string operationName);
    public abstract virtual IScope StartActive(string operationName, SpanCreationSettings settings);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Datadog.Trace.ReadOnlySpanContext : object {
    [CompilerGeneratedAttribute]
private ulong <TraceId>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <TraceIdUpper>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <SpanId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceName>k__BackingField;
    [DuckTypeTarget]
public ulong TraceId { get; }
    [DuckTypeTarget]
internal ulong TraceIdUpper { get; }
    [DuckTypeTarget]
public ulong SpanId { get; }
    [DuckTypeTarget]
public string ServiceName { get; }
    public ReadOnlySpanContext(ulong traceIdLower, ulong traceIdUpper, ulong spanId, string serviceName);
    [CompilerGeneratedAttribute]
public sealed virtual ulong get_TraceId();
    [CompilerGeneratedAttribute]
internal ulong get_TraceIdUpper();
    [CompilerGeneratedAttribute]
public sealed virtual ulong get_SpanId();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ServiceName();
}
public enum Datadog.Trace.SamplingPriority : Enum {
    public int value__;
    public static SamplingPriority UserReject;
    public static SamplingPriority AutoReject;
    public static SamplingPriority AutoKeep;
    public static SamplingPriority UserKeep;
}
internal static class Datadog.Trace.SamplingPriorityValues : object {
    public static int Default;
    public static int UserReject;
    public static int AutoReject;
    public static int AutoKeep;
    public static int UserKeep;
    [NullableContextAttribute("2")]
internal static string ToString(Nullable`1<int> samplingPriority);
    internal static bool IsKeep(int samplingPriority);
    internal static bool IsDrop(int samplingPriority);
}
[AttributeUsageAttribute("480")]
internal class Datadog.Trace.SourceGenerators.InstrumentedAttribute : Attribute {
}
[ConditionalAttribute("KEEP_ALL_ATTRIBUTES_EVEN_THOUGH_ITS_NOT_NECESSARY")]
internal class Datadog.Trace.SourceGenerators.PublicApiAttribute : Attribute {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Datadog.Trace.SpanContext : object {
    [NullableAttribute("1")]
public static ISpanContext None;
    [CompilerGeneratedAttribute]
private ISpanContext <Parent>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <TraceId>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <TraceIdUpper>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <SpanId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <SamplingPriority>k__BackingField;
    public ISpanContext Parent { get; }
    [DuckTypeTarget]
public ulong TraceId { get; }
    [DuckTypeTarget]
internal ulong TraceIdUpper { get; }
    public Nullable`1<ulong> ParentId { get; }
    [DuckTypeTarget]
public ulong SpanId { get; }
    [DuckTypeTarget]
public string ServiceName { get; public set; }
    [DuckTypeTarget]
internal Nullable`1<int> SamplingPriority { get; }
    public SpanContext(Nullable`1<ulong> traceId, ulong spanId, Nullable`1<SamplingPriority> samplingPriority, string serviceName);
    internal SpanContext(Nullable`1<ulong> traceIdLower, Nullable`1<ulong> traceIdUpper, ulong spanId, string serviceName);
    private static SpanContext();
    [CompilerGeneratedAttribute]
public ISpanContext get_Parent();
    [CompilerGeneratedAttribute]
public sealed virtual ulong get_TraceId();
    [CompilerGeneratedAttribute]
internal ulong get_TraceIdUpper();
    public Nullable`1<ulong> get_ParentId();
    [CompilerGeneratedAttribute]
public sealed virtual ulong get_SpanId();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ServiceName();
    [CompilerGeneratedAttribute]
public void set_ServiceName(string value);
    [CompilerGeneratedAttribute]
internal Nullable`1<int> get_SamplingPriority();
}
public class Datadog.Trace.SpanContextExtractor : object {
    [NullableContextAttribute("2")]
[InstrumentedAttribute]
public ISpanContext Extract(TCarrier carrier, Func`3<TCarrier, string, IEnumerable`1<string>> getter);
    [NullableContextAttribute("1")]
[InstrumentedAttribute]
public ISpanContext ExtractIncludingDsm(TCarrier carrier, Func`3<TCarrier, string, IEnumerable`1<string>> getter, string messageType, string source);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Datadog.Trace.SpanContextInjector : object {
    [InstrumentedAttribute]
public void Inject(TCarrier carrier, Action`3<TCarrier, string, string> setter, ISpanContext context);
    [InstrumentedAttribute]
public void InjectIncludingDsm(TCarrier carrier, Action`3<TCarrier, string, string> setter, ISpanContext context, string messageType, string target);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Datadog.Trace.SpanCreationSettings : ValueType {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanContext <Parent>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <FinishOnClose>k__BackingField;
    public Nullable`1<DateTimeOffset> StartTime { get; public set; }
    public ISpanContext Parent { get; public set; }
    public Nullable`1<bool> FinishOnClose { get; public set; }
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(Nullable`1<DateTimeOffset> value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public ISpanContext get_Parent();
    [CompilerGeneratedAttribute]
public void set_Parent(ISpanContext value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Nullable`1<bool> get_FinishOnClose();
    [CompilerGeneratedAttribute]
public void set_FinishOnClose(Nullable`1<bool> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Datadog.Trace.SpanExtensions : object {
    [ExtensionAttribute]
[InstrumentedAttribute]
public static ISpan SetTag(ISpan span, string key, Nullable`1<double> value);
    [ExtensionAttribute]
public static void SetUser(ISpan span, UserDetails userDetails);
    [NullableContextAttribute("2")]
[InstrumentedAttribute]
private static void SetUser(ISpan span, string email, string name, string id, bool propagateId, string sessionId, string role, string scope);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Datadog.Trace.SpanKinds : object {
    public static string Client;
    public static string Server;
    public static string Producer;
    public static string Consumer;
    public static string Internal;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Datadog.Trace.SpanTypes : object {
    internal static string Redis;
    public static string Sql;
    public static string Web;
    internal static string MongoDb;
    public static string Http;
    internal static string GraphQL;
    public static string Queue;
    public static string Custom;
    public static string Test;
    internal static string TestSuite;
    internal static string TestModule;
    internal static string TestSession;
    public static string Benchmark;
    public static string Build;
    internal static string Aerospike;
    public static string Serverless;
    public static string Db;
    internal static string Grpc;
    internal static string System;
    internal static string IastVulnerability;
    internal static string DynamoDb;
    internal static string Browser;
}
internal class Datadog.Trace.Stubs.NullScope : object {
    [NullableAttribute("1")]
public static NullScope Instance;
    [NullableAttribute("1")]
public ISpan Span { get; }
    private static NullScope();
    [NullableContextAttribute("1")]
public sealed virtual ISpan get_Span();
    public sealed virtual void Dispose();
    public sealed virtual void Close();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Datadog.Trace.Stubs.NullSpan : object {
    [NullableAttribute("1")]
public static NullSpan Instance;
    public string OperationName { get; public set; }
    public string ResourceName { get; public set; }
    public string Type { get; public set; }
    public bool Error { get; public set; }
    public string ServiceName { get; public set; }
    public ulong TraceId { get; }
    public ulong SpanId { get; }
    [NullableAttribute("1")]
public ISpanContext Context { get; }
    private static NullSpan();
    public sealed virtual string get_OperationName();
    public sealed virtual void set_OperationName(string value);
    public sealed virtual string get_ResourceName();
    public sealed virtual void set_ResourceName(string value);
    public sealed virtual string get_Type();
    public sealed virtual void set_Type(string value);
    public sealed virtual bool get_Error();
    public sealed virtual void set_Error(bool value);
    public sealed virtual string get_ServiceName();
    public sealed virtual void set_ServiceName(string value);
    public sealed virtual ulong get_TraceId();
    public sealed virtual ulong get_SpanId();
    [NullableContextAttribute("1")]
public sealed virtual ISpanContext get_Context();
    public sealed virtual void Dispose();
    [NullableContextAttribute("1")]
public sealed virtual ISpan SetTag(string key, string value);
    public sealed virtual void Finish();
    public sealed virtual void Finish(DateTimeOffset finishTimestamp);
    [NullableContextAttribute("1")]
public sealed virtual void SetException(Exception exception);
    [NullableContextAttribute("1")]
public sealed virtual string GetTag(string key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Datadog.Trace.Stubs.NullSpanContext : object {
    public static NullSpanContext Instance;
    public ulong TraceId { get; }
    public ulong SpanId { get; }
    public string ServiceName { get; }
    private static NullSpanContext();
    public sealed virtual ulong get_TraceId();
    public sealed virtual ulong get_SpanId();
    public sealed virtual string get_ServiceName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Datadog.Trace.Tags : object {
    public static string Env;
    public static string Version;
    public static string InstrumentationName;
    public static string InstrumentedMethod;
    public static string SpanKind;
    public static string HttpUrl;
    public static string HttpMethod;
    public static string HttpRequestHeadersHost;
    public static string HttpStatusCode;
    public static string ErrorMsg;
    public static string ErrorType;
    public static string ErrorStack;
    public static string DbType;
    public static string DbUser;
    public static string DbName;
    public static string SqlQuery;
    public static string SqlRows;
    public static string PeerService;
    public static string OutHost;
    public static string PeerHostname;
    public static string OutPort;
    public static string MessageSize;
    public static string SamplingPriority;
    public static string ManualKeep;
    public static string ManualDrop;
    public static string Language;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Datadog.Trace.Tracer : object {
    [NullableAttribute("2")]
private static Tracer _instance;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private object <AutomaticTracer>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableTracerSettings <Settings>k__BackingField;
    [NullableAttribute("2")]
[DuckTypeTarget]
private object AutomaticTracer { get; }
    public static Tracer Instance { get; }
    [NullableAttribute("2")]
[InstrumentedAttribute]
public IScope ActiveScope { get; }
    [InstrumentedAttribute]
public string DefaultServiceName { get; }
    public ImmutableTracerSettings Settings { get; }
    [NullableContextAttribute("2")]
[InstrumentedAttribute]
private Tracer(object automaticTracer, Dictionary`2<string, object> initialValues);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private object get_AutomaticTracer();
    public static Tracer get_Instance();
    [NullableContextAttribute("2")]
public sealed virtual IScope get_ActiveScope();
    public sealed virtual string get_DefaultServiceName();
    [CompilerGeneratedAttribute]
public sealed virtual ImmutableTracerSettings get_Settings();
    public static void Configure(TracerSettings settings);
    [InstrumentedAttribute]
public sealed virtual IScope StartActive(string operationName);
    [InstrumentedAttribute]
public sealed virtual IScope StartActive(string operationName, SpanCreationSettings settings);
    [InstrumentedAttribute]
public Task ForceFlushAsync();
    [InstrumentedAttribute]
private static void Configure(Dictionary`2<string, object> settings);
    [NullableContextAttribute("2")]
[InstrumentedAttribute]
private static object GetAutomaticTracerInstance();
    [InstrumentedAttribute]
private IScope StartActive(string operationName, ISpanContext parent, string serviceName, Nullable`1<DateTimeOffset> startTime, Nullable`1<bool> finishOnClose);
    [InstrumentedAttribute]
private sealed virtual override ISpan Datadog.Trace.IDatadogOpenTracingTracer.StartSpan(string operationName, ISpanContext parent, string serviceName, Nullable`1<DateTimeOffset> startTime, bool ignoreActiveScope);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Datadog.Trace.UserDetails : ValueType {
    [CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PropagateId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Role>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    public string Email { get; public set; }
    public string Name { get; public set; }
    [NullableAttribute("1")]
public string Id { get; public set; }
    public bool PropagateId { get; public set; }
    public string SessionId { get; public set; }
    public string Role { get; public set; }
    public string Scope { get; public set; }
    [NullableContextAttribute("1")]
public UserDetails(string id);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Email();
    [CompilerGeneratedAttribute]
public void set_Email(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Id();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Id(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public bool get_PropagateId();
    [CompilerGeneratedAttribute]
public void set_PropagateId(bool value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_SessionId();
    [CompilerGeneratedAttribute]
public void set_SessionId(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Role();
    [CompilerGeneratedAttribute]
public void set_Role(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Datadog.Trace.Util.ThrowHelper : object {
    [DebuggerHiddenAttribute]
[DoesNotReturnAttribute]
internal static void ThrowArgumentNullException(string paramName);
    [DebuggerHiddenAttribute]
[DoesNotReturnAttribute]
internal static void ThrowArgumentOutOfRangeException(string paramName);
    [DebuggerHiddenAttribute]
[DoesNotReturnAttribute]
internal static void ThrowArgumentOutOfRangeException(string paramName, string message);
    [DebuggerHiddenAttribute]
[DoesNotReturnAttribute]
internal static void ThrowArgumentOutOfRangeException(string paramName, object actualValue, string message);
    [DebuggerHiddenAttribute]
[DoesNotReturnAttribute]
internal static void ThrowArgumentException(string message);
    [DebuggerHiddenAttribute]
[DoesNotReturnAttribute]
internal static void ThrowArgumentException(string message, string paramName);
    [DebuggerHiddenAttribute]
[DoesNotReturnAttribute]
internal static void ThrowInvalidOperationException(string message);
    [DebuggerHiddenAttribute]
[DoesNotReturnAttribute]
internal static void ThrowException(string message);
    [DebuggerHiddenAttribute]
[DoesNotReturnAttribute]
internal static void ThrowInvalidCastException(string message);
    [DebuggerHiddenAttribute]
[DoesNotReturnAttribute]
internal static void ThrowIndexOutOfRangeException(string message);
    [DebuggerHiddenAttribute]
[DoesNotReturnAttribute]
internal static void ThrowNotSupportedException(string message);
    [DebuggerHiddenAttribute]
[DoesNotReturnAttribute]
internal static void ThrowKeyNotFoundException(string message);
    [DebuggerHiddenAttribute]
[DoesNotReturnAttribute]
internal static void ThrowNullReferenceException(string message);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
internal static class System.Runtime.CompilerServices.IsExternalInit : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[AttributeUsageAttribute("1774")]
internal class System.Runtime.CompilerServices.SkipLocalsInitAttribute : Attribute {
}
