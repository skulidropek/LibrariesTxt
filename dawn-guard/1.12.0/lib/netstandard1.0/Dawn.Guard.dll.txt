[ExtensionAttribute]
public static class Dawn.Guard : object {
    private static string HttpUriScheme;
    private static string HttpsUriScheme;
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Initialization", "ga", "1")]
public static ArgumentInfo`1<T> Argument(T value, string name, bool secure);
    [NullableContextAttribute("1")]
[ContractAnnotationAttribute("e:null => halt")]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Initialization", "", "2")]
public static ArgumentInfo`1<T> Argument(Expression`1<Func`1<T>> e, bool secure);
    [NullableContextAttribute("1")]
[GuardFunctionAttribute("Extensibility", "", "0")]
public static Exception Fail(Exception exception);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Boolean", "gtrue", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) True(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Boolean", "gtrue", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) True(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Boolean", "gfalse", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) False(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Boolean", "gfalse", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) False(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("DateTime", "gtks", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) KindSpecified(ArgumentInfo`1& argument, Func`2<DateTime, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("DateTime", "gtks", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) KindSpecified(ArgumentInfo`1& argument, Func`2<DateTime, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("DateTime", "gtku", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) KindUnspecified(ArgumentInfo`1& argument, Func`2<DateTime, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("DateTime", "gtku", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) KindUnspecified(ArgumentInfo`1& argument, Func`2<DateTime, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Double", "gnan", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NaN(ArgumentInfo`1& argument, Func`2<double, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Double", "gnan", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NaN(ArgumentInfo`1& argument, Func`2<Nullable`1<double>, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Double", "gnnan", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotNaN(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Double", "gnnan", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotNaN(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Double", "ginf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Infinity(ArgumentInfo`1& argument, Func`2<double, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Double", "ginf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Infinity(ArgumentInfo`1& argument, Func`2<Nullable`1<double>, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[ObsoleteAttribute("Use the NotInfinity overload that accepts the message as a `Func<double, string>`.")]
[EditorBrowsableAttribute("1")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotInfinity(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Double", "gninf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotInfinity(ArgumentInfo`1& argument, Func`2<double, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[ObsoleteAttribute("Use the NotInfinity overload that accepts the message as a `Func<double?, string>`.")]
[EditorBrowsableAttribute("1")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotInfinity(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Double", "gninf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotInfinity(ArgumentInfo`1& argument, Func`2<Nullable`1<double>, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Double", "gposinf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) PositiveInfinity(ArgumentInfo`1& argument, Func`2<double, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Double", "gposinf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) PositiveInfinity(ArgumentInfo`1& argument, Func`2<Nullable`1<double>, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Double", "gnposinf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotPositiveInfinity(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Double", "gnposinf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotPositiveInfinity(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Double", "gneginf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NegativeInfinity(ArgumentInfo`1& argument, Func`2<double, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Double", "gneginf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NegativeInfinity(ArgumentInfo`1& argument, Func`2<Nullable`1<double>, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Double", "gnneginf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotNegativeInfinity(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Double", "gnneginf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotNegativeInfinity(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Double", "geqd", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Equal(ArgumentInfo`1& argument, double other, double delta, Func`3<double, double, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Double", "geqd", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Equal(ArgumentInfo`1& argument, double other, double delta, Func`3<double, double, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Double", "gneqd", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotEqual(ArgumentInfo`1& argument, double other, double delta, Func`3<double, double, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Double", "gneqd", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotEqual(ArgumentInfo`1& argument, double other, double delta, Func`3<double, double, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Enum", "gdef", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Defined(ArgumentInfo`1& argument, Func`2<T, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Enum", "gdef", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Defined(ArgumentInfo`1& argument, Func`2<Nullable`1<T>, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Enum", "ghf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) HasFlag(ArgumentInfo`1& argument, T flag, Func`3<T, T, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Enum", "ghf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) HasFlag(ArgumentInfo`1& argument, T flag, Func`3<T, T, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Enum", "gnhf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) DoesNotHaveFlag(ArgumentInfo`1& argument, T flag, Func`3<T, T, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Enum", "gnhf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) DoesNotHaveFlag(ArgumentInfo`1& argument, T flag, Func`3<T, T, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[ObsoleteAttribute("Use the enum preconditions directly, e.g. `arg.Defined()` instead of `arg.Enum().Defined()`.")]
public static EnumArgumentInfo`1<T> Enum(ArgumentInfo`1& argument, Func`2<T, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[ObsoleteAttribute("Use the enum preconditions directly, e.g. `arg.Defined()` instead of `arg.Enum().Defined()`.")]
public static NullableEnumArgumentInfo`1<T> Enum(ArgumentInfo`1& argument, Func`2<Nullable`1<T>, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Equality", "gd", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Default(ArgumentInfo`1& argument, Func`2<T, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Equality", "gd", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Default(ArgumentInfo`1& argument, Func`2<Nullable`1<T>, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[ObsoleteAttribute("Use the NotDefault overload that accepts the message as a string.")]
[EditorBrowsableAttribute("1")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotDefault(ArgumentInfo`1& argument, Func`2<T, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Equality", "gnd", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotDefault(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Equality", "gnd", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotDefault(ArgumentInfo`1& argument, string message);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Equality", "geq", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Equal(ArgumentInfo`1& argument, T& other, Func`3<T, T, string> message);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Equality", "geqc", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Equal(ArgumentInfo`1& argument, T& other, IEqualityComparer`1<T> comparer, Func`3<T, T, string> message);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Equality", "gneq", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotEqual(ArgumentInfo`1& argument, T& other, Func`2<T, string> message);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Equality", "gneqc", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotEqual(ArgumentInfo`1& argument, T& other, IEqualityComparer`1<T> comparer, Func`2<T, string> message);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Equality", "gs", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Same(ArgumentInfo`1& argument, object other, Func`3<T, object, string> message);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Equality", "gns", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotSame(ArgumentInfo`1& argument, object other, Func`3<T, object, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Comparison", "gmin", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Min(ArgumentInfo`1& argument, T& minValue, Func`3<T, T, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Comparison", "gmin", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Min(ArgumentInfo`1& argument, T& minValue, Func`3<T, T, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Comparison", "ggt", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) GreaterThan(ArgumentInfo`1& argument, T& other, Func`3<T, T, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Comparison", "ggt", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) GreaterThan(ArgumentInfo`1& argument, T& other, Func`3<T, T, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Comparison", "gmax", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Max(ArgumentInfo`1& argument, T& maxValue, Func`3<T, T, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Comparison", "gmax", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Max(ArgumentInfo`1& argument, T& maxValue, Func`3<T, T, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Comparison", "glt", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) LessThan(ArgumentInfo`1& argument, T& other, Func`3<T, T, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Comparison", "glt", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) LessThan(ArgumentInfo`1& argument, T& other, Func`3<T, T, string> message);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Comparison", "gr", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) InRange(ArgumentInfo`1& argument, T& minValue, T& maxValue, Func`4<T, T, T, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Comparison", "gr", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) InRange(ArgumentInfo`1& argument, T& minValue, T& maxValue, Func`4<T, T, T, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Comparison", "gz", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Zero(ArgumentInfo`1& argument, Func`2<T, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Comparison", "gz", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Zero(ArgumentInfo`1& argument, Func`2<Nullable`1<T>, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[ObsoleteAttribute("Use the NotZero overload that accepts the message as a string.")]
[EditorBrowsableAttribute("1")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotZero(ArgumentInfo`1& argument, Func`2<T, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Comparison", "gnz", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotZero(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[ObsoleteAttribute("Use the NotZero overload that accepts the message as a string.")]
[EditorBrowsableAttribute("1")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotZero(ArgumentInfo`1& argument, Func`2<Nullable`1<T>, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Comparison", "gnz", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotZero(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Comparison", "gpos", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Positive(ArgumentInfo`1& argument, Func`2<T, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Comparison", "gpos", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Positive(ArgumentInfo`1& argument, Func`2<Nullable`1<T>, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Comparison", "gnpos", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotPositive(ArgumentInfo`1& argument, Func`2<T, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Comparison", "gnpos", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotPositive(ArgumentInfo`1& argument, Func`2<Nullable`1<T>, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Comparison", "gneg", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Negative(ArgumentInfo`1& argument, Func`2<T, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Comparison", "gneg", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Negative(ArgumentInfo`1& argument, Func`2<Nullable`1<T>, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Comparison", "gnneg", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotNegative(ArgumentInfo`1& argument, Func`2<T, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Comparison", "gnneg", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotNegative(ArgumentInfo`1& argument, Func`2<Nullable`1<T>, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Collection", "gem", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Empty(ArgumentInfo`1& argument, Func`2<TCollection, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Collection", "gnem", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotEmpty(ArgumentInfo`1& argument, Func`2<TCollection, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Collection", "gc", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Count(ArgumentInfo`1& argument, int count, Func`3<TCollection, int, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Collection", "gnc", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotCount(ArgumentInfo`1& argument, int count, Func`3<TCollection, int, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Collection", "gminc", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) MinCount(ArgumentInfo`1& argument, int minCount, Func`3<TCollection, int, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Collection", "gmaxc", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) MaxCount(ArgumentInfo`1& argument, int maxCount, Func`3<TCollection, int, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Collection", "gcr", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) CountInRange(ArgumentInfo`1& argument, int minCount, int maxCount, Func`4<TCollection, int, int, string> message);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Collection", "gcon", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Contains(ArgumentInfo`1& argument, TItem& item, Func`3<TCollection, TItem, string> message);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Collection", "gconc", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Contains(ArgumentInfo`1& argument, TItem& item, IEqualityComparer`1<TItem> comparer, Func`3<TCollection, TItem, string> message);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Collection", "gncon", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) DoesNotContain(ArgumentInfo`1& argument, TItem& item, Func`3<TCollection, TItem, string> message);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Collection", "gnconc", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) DoesNotContain(ArgumentInfo`1& argument, TItem& item, IEqualityComparer`1<TItem> comparer, Func`3<TCollection, TItem, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Collection", "gconn", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) ContainsNull(ArgumentInfo`1& argument, Func`2<TCollection, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Collection", "gnconn", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) DoesNotContainNull(ArgumentInfo`1& argument, Func`2<TCollection, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Collection", "gncond", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) DoesNotContainDuplicate(ArgumentInfo`1& argument, Func`3<TCollection, object, string> message);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Collection", "gncond", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) DoesNotContainDuplicate(ArgumentInfo`1& argument, IEqualityComparer`1<TItem> comparer, Func`3<TCollection, object, string> message);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Collection", "gin", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) In(ArgumentInfo`1& argument, TCollection collection, Func`3<TItem, TCollection, string> message);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Collection", "ginc", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) In(ArgumentInfo`1& argument, TCollection collection, IEqualityComparer`1<TItem> comparer, Func`3<TItem, TCollection, string> message);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Collection", "gin", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) In(ArgumentInfo`1& argument, TItem[] items);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Collection", "gnin", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotIn(ArgumentInfo`1& argument, TCollection collection, Func`3<TItem, TCollection, string> message);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Collection", "gninc", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotIn(ArgumentInfo`1& argument, TCollection collection, IEqualityComparer`1<TItem> comparer, Func`3<TItem, TCollection, string> message);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Collection", "gnin", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotIn(ArgumentInfo`1& argument, TItem[] items);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
private static bool IsValueType(Type type);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
private static bool IsGenericType(Type type, Type definition);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
private static bool IsEnum(Type type);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
private static Type GetBaseType(Type type);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
private static MethodInfo GetPropertyGetter(Type type, string name);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
private static bool IsAssignableFrom(Type type, Type c);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
private static bool IsSubclassOf(Type type, Type baseType);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
private static Type[] GetGenericArguments(Type type);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
private static IEnumerable`1<Type> GetInterfaces(Type type);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
private static Type GetNestedType(Type type, string name);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
private static FieldInfo GetField(Type type, string name);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
private static ConstructorInfo GetConstructor(Type type, Type[] arguments);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
private static MethodInfo GetMethod(Type type, string name, Type[] arguments);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Member", "gmem", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Member(ArgumentInfo`1& argument, Expression`1<Func`2<T, TMember>> member, Action`1<ArgumentInfo`1<TMember>> validation, Func`4<T, TMember, Exception, string> message);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Member", "gmemr", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Member(ArgumentInfo`1& argument, Expression`1<Func`2<T, TMember>> member, Action`1<ArgumentInfo`1<TMember>> validation, bool validatesRange, Func`4<T, TMember, Exception, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Member", "gmem", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Member(ArgumentInfo`1& argument, Expression`1<Func`2<T, TMember>> member, Action`1<ArgumentInfo`1<TMember>> validation, Func`4<T, TMember, Exception, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Member", "gmemr", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Member(ArgumentInfo`1& argument, Expression`1<Func`2<T, TMember>> member, Action`1<ArgumentInfo`1<TMember>> validation, bool validatesRange, Func`4<T, TMember, Exception, string> message);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Normalization", "gmod", "0")]
public static ArgumentInfo`1<TTarget> Modify(ArgumentInfo`1& argument, TTarget value);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[ContractAnnotationAttribute("convert:null => halt")]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Normalization", "gmod", "0")]
public static ArgumentInfo`1<TTarget> Modify(ArgumentInfo`1& argument, Func`2<TSource, TTarget> convert);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[ContractAnnotationAttribute("convert:null => halt")]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Normalization", "gwrap", "0")]
public static ArgumentInfo`1<TTarget> Wrap(ArgumentInfo`1& argument, Func`2<TSource, TTarget> convert, Func`2<TSource, string> message);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Null", "gn", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Null(ArgumentInfo`1& argument, Func`2<T, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Null", "gn", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Null(ArgumentInfo`1& argument, Func`2<Nullable`1<T>, string> message);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Null", "gnn", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotNull(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Null", "gnn", "0")]
public static ArgumentInfo`1<T> NotNull(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[ObsoleteAttribute("Use the HasValue method to check against null.")]
[EditorBrowsableAttribute("1")]
public static bool NotNull(ArgumentInfo`1& argument, ArgumentInfo`1& result);
    [NullableContextAttribute("2")]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Null", "", "0")]
public static void NotAllNull(ArgumentInfo`1& argument1, ArgumentInfo`1& argument2, string message);
    [NullableContextAttribute("2")]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Null", "", "0")]
public static void NotAllNull(ArgumentInfo`1& argument1, ArgumentInfo`1& argument2, ArgumentInfo`1& argument3, string message);
    [ExtensionAttribute]
[NonGuardAttribute]
public static T GetValueOrDefault(ArgumentInfo`1& argument);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Single", "gnan", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NaN(ArgumentInfo`1& argument, Func`2<float, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Single", "gnan", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NaN(ArgumentInfo`1& argument, Func`2<Nullable`1<float>, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Single", "gnnan", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotNaN(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Single", "gnnan", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotNaN(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Single", "ginf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Infinity(ArgumentInfo`1& argument, Func`2<float, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Single", "ginf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Infinity(ArgumentInfo`1& argument, Func`2<Nullable`1<float>, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[ObsoleteAttribute("Use the NotInfinity overload that accepts the message as a `Func<float, string>`.")]
[EditorBrowsableAttribute("1")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotInfinity(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Single", "gninf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotInfinity(ArgumentInfo`1& argument, Func`2<float, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[ObsoleteAttribute("Use the NotInfinity overload that accepts the message as a `Func<float?, string>`.")]
[EditorBrowsableAttribute("1")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotInfinity(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Single", "gninf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotInfinity(ArgumentInfo`1& argument, Func`2<Nullable`1<float>, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Single", "gposinf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) PositiveInfinity(ArgumentInfo`1& argument, Func`2<float, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Single", "gposinf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) PositiveInfinity(ArgumentInfo`1& argument, Func`2<Nullable`1<float>, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Single", "gnposinf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotPositiveInfinity(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Single", "gnposinf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotPositiveInfinity(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Single", "gneginf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NegativeInfinity(ArgumentInfo`1& argument, Func`2<float, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Single", "gneginf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NegativeInfinity(ArgumentInfo`1& argument, Func`2<Nullable`1<float>, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Single", "gnneginf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotNegativeInfinity(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Single", "gnneginf", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotNegativeInfinity(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Single", "geqd", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Equal(ArgumentInfo`1& argument, float other, float delta, Func`3<float, float, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Single", "geqd", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Equal(ArgumentInfo`1& argument, float other, float delta, Func`3<float, float, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Single", "gneqd", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotEqual(ArgumentInfo`1& argument, float other, float delta, Func`3<float, float, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Single", "gneqd", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotEqual(ArgumentInfo`1& argument, float other, float delta, Func`3<float, float, string> message);
    [NullableContextAttribute("2")]
[AssertionMethodAttribute]
[ContractAnnotationAttribute("valid:false => halt")]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("State", "gop", "0")]
public static void Operation(bool valid, string message, string caller);
    [NullableContextAttribute("2")]
[AssertionMethodAttribute]
[ContractAnnotationAttribute("supported:false => halt")]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("State", "gsup", "0")]
public static void Support(bool supported, string message, string caller);
    [NullableContextAttribute("2")]
[AssertionMethodAttribute]
[ContractAnnotationAttribute("disposed:true => halt")]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("State", "gdis", "0")]
public static void Disposal(bool disposed, string objectName, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "gem", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Empty(ArgumentInfo`1& argument, Func`2<string, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "gnem", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotEmpty(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "gw", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) WhiteSpace(ArgumentInfo`1& argument, Func`2<string, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "gnw", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotWhiteSpace(ArgumentInfo`1& argument, Func`2<string, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "gnw", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotWhiteSpace(ArgumentInfo`1& argument, string message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "gl", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Length(ArgumentInfo`1& argument, int length, Func`3<string, int, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "gnl", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotLength(ArgumentInfo`1& argument, int length, Func`3<string, int, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "gminl", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) MinLength(ArgumentInfo`1& argument, int minLength, Func`3<string, int, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "gmaxl", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) MaxLength(ArgumentInfo`1& argument, int maxLength, Func`3<string, int, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "glr", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) LengthInRange(ArgumentInfo`1& argument, int minLength, int maxLength, Func`4<string, int, int, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "geqs", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Equal(ArgumentInfo`1& argument, string other, StringComparison comparison, Func`3<string, string, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "gneqs", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotEqual(ArgumentInfo`1& argument, string other, StringComparison comparison, Func`2<string, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "gstart", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) StartsWith(ArgumentInfo`1& argument, string value, Func`3<string, string, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "gstarts", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) StartsWith(ArgumentInfo`1& argument, string value, StringComparison comparison, Func`3<string, string, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "gnstart", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) DoesNotStartWith(ArgumentInfo`1& argument, string value, Func`3<string, string, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "gnstarts", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) DoesNotStartWith(ArgumentInfo`1& argument, string value, StringComparison comparison, Func`3<string, string, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "gend", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) EndsWith(ArgumentInfo`1& argument, string value, Func`3<string, string, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "gends", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) EndsWith(ArgumentInfo`1& argument, string value, StringComparison comparison, Func`3<string, string, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "gnend", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) DoesNotEndWith(ArgumentInfo`1& argument, string value, Func`3<string, string, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "gnends", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) DoesNotEndWith(ArgumentInfo`1& argument, string value, StringComparison comparison, Func`3<string, string, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "gm", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Matches(ArgumentInfo`1& argument, string pattern, Func`3<string, bool, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "gmt", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Matches(ArgumentInfo`1& argument, string pattern, TimeSpan matchTimeout, Func`3<string, bool, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "gm", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Matches(ArgumentInfo`1& argument, Regex regex, Func`3<string, bool, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "gnm", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) DoesNotMatch(ArgumentInfo`1& argument, string pattern, Func`3<string, bool, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "gnmt", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) DoesNotMatch(ArgumentInfo`1& argument, string pattern, TimeSpan matchTimeout, Func`3<string, bool, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("String", "gnm", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) DoesNotMatch(ArgumentInfo`1& argument, Regex regex, Func`3<string, bool, string> message);
    private static IEqualityComparer`1<string> StringEqualityComparer(StringComparison comparison);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Type", "", "0")]
public static ArgumentInfo`1<T> Type(ArgumentInfo`1& argument, Func`2<object, string> message);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Type", "", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotType(ArgumentInfo`1& argument, Func`2<T, string> message);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Type", "", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Type(ArgumentInfo`1& argument, Type type, Func`3<object, Type, string> message);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Type", "", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotType(ArgumentInfo`1& argument, Type type, Func`3<object, Type, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Uri", "gabs", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Absolute(ArgumentInfo`1& argument, Func`2<Uri, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Uri", "grel", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Relative(ArgumentInfo`1& argument, Func`2<Uri, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Uri", "gsch", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Scheme(ArgumentInfo`1& argument, string scheme, Func`3<Uri, string, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Uri", "gnsch", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) NotScheme(ArgumentInfo`1& argument, string scheme, Func`3<Uri, string, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Uri", "ghttp", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Http(ArgumentInfo`1& argument, Func`2<Uri, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Uri", "", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Http(ArgumentInfo`1& argument, bool allowHttps, Func`2<Uri, string> message);
    [ExtensionAttribute]
[AssertionMethodAttribute]
[DebuggerStepThroughAttribute]
[GuardFunctionAttribute("Uri", "ghttps", "0")]
public static ArgumentInfo`1& modreq(System.Runtime.InteropServices.InAttribute) Https(ArgumentInfo`1& argument, Func`2<Uri, string> message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("64")]
internal class Dawn.GuardFunctionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Group>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Shortcut>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Order>k__BackingField;
    public string Group { get; }
    public string Shortcut { get; }
    public int Order { get; }
    public GuardFunctionAttribute(string group, string shortcut, int order);
    [CompilerGeneratedAttribute]
public string get_Group();
    [CompilerGeneratedAttribute]
public string get_Shortcut();
    [CompilerGeneratedAttribute]
public int get_Order();
}
[AttributeUsageAttribute("64")]
internal class Dawn.NonGuardAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class JetBrains.Annotations.AssertionMethodAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class JetBrains.Annotations.ContractAnnotationAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Contract>k__BackingField;
    [NotNullAttribute]
public string Contract { get; }
    public ContractAnnotationAttribute(string contract);
    [CompilerGeneratedAttribute]
public string get_Contract();
}
[AttributeUsageAttribute("2048")]
internal class JetBrains.Annotations.InvokerParameterNameAttribute : Attribute {
}
[AttributeUsageAttribute("24516")]
internal class JetBrains.Annotations.NotNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class JetBrains.Annotations.RegexPatternAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5198")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[AttributeUsageAttribute("2048")]
internal class System.Runtime.InteropServices.InAttribute : Attribute {
}
