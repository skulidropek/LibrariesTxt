[DebuggerDisplayAttribute("Id = {Id}, OperationCount = {_outstandingOperations}")]
[DebuggerTypeProxyAttribute("Nito.AsyncEx.AsyncContext/DebugView")]
public class Nito.AsyncEx.AsyncContext : object {
    private TaskQueue _queue;
    private AsyncContextSynchronizationContext _synchronizationContext;
    private AsyncContextTaskScheduler _taskScheduler;
    private TaskFactory _taskFactory;
    private int _outstandingOperations;
    public int Id { get; }
    public static AsyncContext Current { get; }
    [EditorBrowsableAttribute("1")]
public SynchronizationContext SynchronizationContext { get; }
    [EditorBrowsableAttribute("1")]
public TaskScheduler Scheduler { get; }
    [EditorBrowsableAttribute("1")]
public TaskFactory Factory { get; }
    public int get_Id();
    private void OperationStarted();
    private void OperationCompleted();
    private void Enqueue(Task task, bool propagateExceptions);
    public sealed virtual void Dispose();
    [EditorBrowsableAttribute("1")]
public void Execute();
    public static void Run(Action action);
    public static TResult Run(Func`1<TResult> action);
    public static void Run(Func`1<Task> action);
    public static TResult Run(Func`1<Task`1<TResult>> action);
    public static AsyncContext get_Current();
    public SynchronizationContext get_SynchronizationContext();
    public TaskScheduler get_Scheduler();
    public TaskFactory get_Factory();
    [CompilerGeneratedAttribute]
private void <Enqueue>b__10_0(Task _);
    [CompilerGeneratedAttribute]
private void <Execute>b__12_0();
}
[DebuggerTypeProxyAttribute("Nito.AsyncEx.AsyncContextThread/DebugView")]
public class Nito.AsyncEx.AsyncContextThread : SingleDisposable`1<AsyncContext> {
    private Task _thread;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private AsyncContext <Context>k__BackingField;
    public AsyncContext Context { get; }
    public TaskFactory Factory { get; }
    private AsyncContextThread(AsyncContext context);
    private static AsyncContext CreateAsyncContext();
    [CompilerGeneratedAttribute]
public AsyncContext get_Context();
    private void Execute();
    private void AllowThreadToExit();
    public Task JoinAsync();
    public void Join();
    protected virtual void Dispose(AsyncContext context);
    public TaskFactory get_Factory();
}
