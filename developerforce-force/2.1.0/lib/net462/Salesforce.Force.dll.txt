public static class Salesforce.Force.BulkConstants : object {
}
public class Salesforce.Force.ForceClient : object {
    protected XmlHttpClient _xmlHttpClient;
    protected JsonHttpClient _jsonHttpClient;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ISelectListResolver <SelectListResolver>k__BackingField;
    public ISelectListResolver SelectListResolver { get; public set; }
    public ForceClient(string instanceUrl, string accessToken, string apiVersion);
    public ForceClient(string instanceUrl, string accessToken, string apiVersion, HttpClient httpClientForJson, HttpClient httpClientForXml, bool callerWillDisposeHttpClients);
    [CompilerGeneratedAttribute]
public ISelectListResolver get_SelectListResolver();
    [CompilerGeneratedAttribute]
public void set_SelectListResolver(ISelectListResolver value);
    public sealed virtual Task`1<QueryResult`1<T>> QueryAsync(string query);
    public sealed virtual Task`1<QueryResult`1<T>> QueryContinuationAsync(string nextRecordsUrl);
    public sealed virtual Task`1<QueryResult`1<T>> QueryAllAsync(string query);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<GetBlobAsync>d__11")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<Stream> GetBlobAsync(string objectName, string objectId, string fieldName);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<ExecuteRestApiAsync>d__12`1")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<T> ExecuteRestApiAsync(string apiName);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<ExecuteRestApiAsync>d__13`1")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<T> ExecuteRestApiAsync(string apiName, object inputObject);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<QueryByIdAsync>d__14`1")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<T> QueryByIdAsync(string objectName, string recordId);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<QueryAllFieldsByIdAsync>d__15`1")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<T> QueryAllFieldsByIdAsync(string objectName, string recordId);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<QueryAllFieldsByExternalIdAsync>d__16`1")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<T> QueryAllFieldsByExternalIdAsync(string objectName, string externalIdFieldName, string externalId);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<CreateAsync>d__17")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<SuccessResponse> CreateAsync(string objectName, object record);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<CreateAsync>d__18")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<SaveResponse> CreateAsync(string objectName, CreateRequest request);
    public sealed virtual Task`1<SuccessResponse> UpdateAsync(string objectName, string recordId, object record);
    public sealed virtual Task`1<SuccessResponse> UpsertExternalAsync(string objectName, string externalFieldName, string externalId, object record);
    public sealed virtual Task`1<SuccessResponse> UpsertExternalAsync(string objectName, string externalFieldName, string externalId, object record, bool ignoreNull);
    public sealed virtual Task`1<bool> DeleteAsync(string objectName, string recordId);
    public sealed virtual Task`1<bool> DeleteExternalAsync(string objectName, string externalFieldName, string externalId);
    public sealed virtual Task`1<DescribeGlobalResult`1<T>> GetObjectsAsync();
    public sealed virtual Task`1<T> BasicInformationAsync(string objectName);
    public sealed virtual Task`1<T> DescribeAsync(string objectName);
    public sealed virtual Task`1<T> GetDeleted(string objectName, DateTime startDateTime, DateTime endDateTime);
    public sealed virtual Task`1<T> GetUpdated(string objectName, DateTime startDateTime, DateTime endDateTime);
    public sealed virtual Task`1<T> DescribeLayoutAsync(string objectName);
    public sealed virtual Task`1<T> DescribeLayoutAsync(string objectName, string recordTypeId);
    public sealed virtual Task`1<T> RecentAsync(int limit);
    public sealed virtual Task`1<List`1<T>> SearchAsync(string query);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<UserInfo>d__33`1")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<T> UserInfo(string url);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<GetFieldsCommaSeparatedListAsync>d__34")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<string> GetFieldsCommaSeparatedListAsync(string objectName);
    public sealed virtual Task`1<T> ExecuteAnonymousAsync(string apex);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<RunJobAsync>d__36`1")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<List`1<BatchInfoResult>> RunJobAsync(string objectName, OperationType operationType, IEnumerable`1<ISObjectList`1<T>> recordsLists);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<RunJobAsync>d__37`1")]
[DebuggerStepThroughAttribute]
public Task`1<List`1<BatchInfoResult>> RunJobAsync(string objectName, string externalIdFieldName, OperationType operationType, IEnumerable`1<ISObjectList`1<T>> recordsLists);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<RunJobAndPollAsync>d__38`1")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<List`1<BatchResultList>> RunJobAndPollAsync(string objectName, OperationType operationType, IEnumerable`1<ISObjectList`1<T>> recordsLists);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<RunJobAndPollAsync>d__39`1")]
[DebuggerStepThroughAttribute]
public Task`1<List`1<BatchResultList>> RunJobAndPollAsync(string objectName, string externalIdFieldName, OperationType operationType, IEnumerable`1<ISObjectList`1<T>> recordsLists);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<CreateJobAsync>d__40")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<JobInfoResult> CreateJobAsync(string objectName, OperationType operationType);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<CreateJobAsync>d__41")]
[DebuggerStepThroughAttribute]
public Task`1<JobInfoResult> CreateJobAsync(string objectName, string externalIdFieldName, OperationType operationType);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<CreateJobBatchAsync>d__42`1")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<BatchInfoResult> CreateJobBatchAsync(JobInfoResult jobInfo, ISObjectList`1<T> recordsList);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<CreateJobBatchAsync>d__43`1")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<BatchInfoResult> CreateJobBatchAsync(string jobId, ISObjectList`1<T> recordsObject);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<CloseJobAsync>d__44")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<JobInfoResult> CloseJobAsync(JobInfoResult jobInfo);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<CloseJobAsync>d__45")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<JobInfoResult> CloseJobAsync(string jobId);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<PollJobAsync>d__46")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<JobInfoResult> PollJobAsync(JobInfoResult jobInfo);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<PollJobAsync>d__47")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<JobInfoResult> PollJobAsync(string jobId);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<PollBatchAsync>d__48")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<BatchInfoResult> PollBatchAsync(BatchInfoResult batchInfo);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<PollBatchAsync>d__49")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<BatchInfoResult> PollBatchAsync(string batchId, string jobId);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<GetBatchResultAsync>d__50")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<BatchResultList> GetBatchResultAsync(BatchInfoResult batchInfo);
    [AsyncStateMachineAttribute("Salesforce.Force.ForceClient/<GetBatchResultAsync>d__51")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<BatchResultList> GetBatchResultAsync(string batchId, string jobId);
    public sealed virtual void Dispose();
}
public interface Salesforce.Force.IForceClient {
    public abstract virtual Task`1<QueryResult`1<T>> QueryAsync(string query);
    public abstract virtual Task`1<QueryResult`1<T>> QueryContinuationAsync(string nextRecordsUrl);
    public abstract virtual Task`1<QueryResult`1<T>> QueryAllAsync(string query);
    public abstract virtual Task`1<T> QueryByIdAsync(string objectName, string recordId);
    public abstract virtual Task`1<T> QueryAllFieldsByIdAsync(string objectName, string recordId);
    public abstract virtual Task`1<T> QueryAllFieldsByExternalIdAsync(string objectName, string externalIdFieldName, string externalId);
    public abstract virtual Task`1<T> ExecuteRestApiAsync(string apiName);
    public abstract virtual Task`1<T> ExecuteRestApiAsync(string apiName, object inputObject);
    public abstract virtual Task`1<SuccessResponse> CreateAsync(string objectName, object record);
    public abstract virtual Task`1<SaveResponse> CreateAsync(string objectName, CreateRequest request);
    public abstract virtual Task`1<SuccessResponse> UpdateAsync(string objectName, string recordId, object record);
    public abstract virtual Task`1<SuccessResponse> UpsertExternalAsync(string objectName, string externalFieldName, string externalId, object record);
    public abstract virtual Task`1<SuccessResponse> UpsertExternalAsync(string objectName, string externalFieldName, string externalId, object record, bool ignoreNull);
    public abstract virtual Task`1<bool> DeleteAsync(string objectName, string recordId);
    public abstract virtual Task`1<bool> DeleteExternalAsync(string objectName, string externalFieldName, string externalId);
    public abstract virtual Task`1<DescribeGlobalResult`1<T>> GetObjectsAsync();
    public abstract virtual Task`1<T> BasicInformationAsync(string objectName);
    public abstract virtual Task`1<T> DescribeAsync(string objectName);
    public abstract virtual Task`1<T> GetDeleted(string objectName, DateTime startDateTime, DateTime endDateTime);
    public abstract virtual Task`1<T> GetUpdated(string objectName, DateTime startDateTime, DateTime endDateTime);
    public abstract virtual Task`1<T> DescribeLayoutAsync(string objectName);
    public abstract virtual Task`1<T> DescribeLayoutAsync(string objectName, string recordTypeId);
    public abstract virtual Task`1<T> RecentAsync(int limit);
    public abstract virtual Task`1<List`1<T>> SearchAsync(string query);
    public abstract virtual Task`1<T> UserInfo(string url);
    public abstract virtual Task`1<Stream> GetBlobAsync(string objectName, string objectId, string fieldName);
    public abstract virtual Task`1<string> GetFieldsCommaSeparatedListAsync(string objectName);
    public abstract virtual Task`1<T> ExecuteAnonymousAsync(string apex);
    public abstract virtual Task`1<List`1<BatchInfoResult>> RunJobAsync(string objectName, OperationType operationType, IEnumerable`1<ISObjectList`1<T>> recordsLists);
    public abstract virtual Task`1<List`1<BatchResultList>> RunJobAndPollAsync(string objectName, OperationType operationType, IEnumerable`1<ISObjectList`1<T>> recordsLists);
    public abstract virtual Task`1<JobInfoResult> CreateJobAsync(string objectName, OperationType operationType);
    public abstract virtual Task`1<BatchInfoResult> CreateJobBatchAsync(JobInfoResult jobInfo, ISObjectList`1<T> recordsObject);
    public abstract virtual Task`1<BatchInfoResult> CreateJobBatchAsync(string jobId, ISObjectList`1<T> recordsObject);
    public abstract virtual Task`1<JobInfoResult> CloseJobAsync(JobInfoResult jobInfo);
    public abstract virtual Task`1<JobInfoResult> CloseJobAsync(string jobId);
    public abstract virtual Task`1<JobInfoResult> PollJobAsync(JobInfoResult jobInfo);
    public abstract virtual Task`1<JobInfoResult> PollJobAsync(string jobId);
    public abstract virtual Task`1<BatchInfoResult> PollBatchAsync(BatchInfoResult batchInfo);
    public abstract virtual Task`1<BatchInfoResult> PollBatchAsync(string batchId, string jobId);
    public abstract virtual Task`1<BatchResultList> GetBatchResultAsync(BatchInfoResult batchInfo);
    public abstract virtual Task`1<BatchResultList> GetBatchResultAsync(string batchId, string jobId);
}
