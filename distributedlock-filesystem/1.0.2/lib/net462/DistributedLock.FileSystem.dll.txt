[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Medallion.Threading.FileSystem.FileDistributedLock : object {
    private static int MaxUnauthorizedAccessExceptionRetries;
    private static TimeoutValue MinBusyWaitSleepTime;
    private static TimeoutValue MaxBusyWaitSleepTime;
    [NullableAttribute("2")]
private string _cachedDirectory;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; }
    private string Directory { get; }
    public FileDistributedLock(FileInfo lockFile);
    public FileDistributedLock(DirectoryInfo lockFileDirectory, string name);
    private static FileDistributedLock();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    private string get_Directory();
    private sealed virtual override ValueTask`1<FileDistributedLockHandle> Medallion.Threading.Internal.IInternalDistributedLock<Medallion.Threading.FileSystem.FileDistributedLockHandle>.InternalTryAcquireAsync(TimeoutValue timeout, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
private FileDistributedLockHandle TryAcquire(CancellationToken cancellationToken);
    private void EnsureDirectoryExists();
    private static bool CanRetryTransientFileSystemError(Int32& retryCount);
    [NullableContextAttribute("2")]
private sealed virtual override IDistributedSynchronizationHandle Medallion.Threading.IDistributedLock.TryAcquire(TimeSpan timeout, CancellationToken cancellationToken);
    private sealed virtual override IDistributedSynchronizationHandle Medallion.Threading.IDistributedLock.Acquire(Nullable`1<TimeSpan> timeout, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<IDistributedSynchronizationHandle> Medallion.Threading.IDistributedLock.TryAcquireAsync(TimeSpan timeout, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<IDistributedSynchronizationHandle> Medallion.Threading.IDistributedLock.AcquireAsync(Nullable`1<TimeSpan> timeout, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public sealed virtual FileDistributedLockHandle TryAcquire(TimeSpan timeout, CancellationToken cancellationToken);
    public sealed virtual FileDistributedLockHandle Acquire(Nullable`1<TimeSpan> timeout, CancellationToken cancellationToken);
    public sealed virtual ValueTask`1<FileDistributedLockHandle> TryAcquireAsync(TimeSpan timeout, CancellationToken cancellationToken);
    public sealed virtual ValueTask`1<FileDistributedLockHandle> AcquireAsync(Nullable`1<TimeSpan> timeout, CancellationToken cancellationToken);
}
public class Medallion.Threading.FileSystem.FileDistributedLockHandle : object {
    [NullableAttribute("2")]
private FileStream _fileStream;
    private CancellationToken Medallion.Threading.IDistributedSynchronizationHandle.HandleLostToken { get; }
    [NullableContextAttribute("1")]
internal FileDistributedLockHandle(FileStream fileStream);
    private sealed virtual override CancellationToken Medallion.Threading.IDistributedSynchronizationHandle.get_HandleLostToken();
    public sealed virtual void Dispose();
    public sealed virtual ValueTask DisposeAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Medallion.Threading.FileSystem.FileDistributedSynchronizationProvider : object {
    private DirectoryInfo _lockFileDirectory;
    public FileDistributedSynchronizationProvider(DirectoryInfo lockFileDirectory);
    public FileDistributedLock CreateLock(string name);
    private sealed virtual override IDistributedLock Medallion.Threading.IDistributedLockProvider.CreateLock(string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Medallion.Threading.FileSystem.FileNameValidationHelper : object {
    internal static int MinFileNameLength;
    private static int PortableFileNameLength;
    private static int Base32CharBits;
    internal static int HashLengthInChars;
    public static string GetLockFileName(DirectoryInfo lockFileDirectory, string name);
    private static bool IsTooLong(string name);
    private static string ConvertToValidBaseName(string name);
    private static string ComputeHash(Byte[] bytes);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
