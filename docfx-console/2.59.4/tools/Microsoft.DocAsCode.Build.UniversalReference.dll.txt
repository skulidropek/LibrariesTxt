public class Microsoft.DocAsCode.Build.UniversalReference.ApiBuildOutput : object {
    [CompilerGeneratedAttribute]
private string <Uid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CommentId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLanguageValuePair`1<ApiNames>> <Parent>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLanguageValuePair`1<ApiNames>> <Package>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLanguageValuePair`1<List`1<ApiBuildOutput>>> <Children>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Href>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <SupportedLanguages>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLanguageValuePair`1<string>> <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLanguageValuePair`1<string>> <NameWithType>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLanguageValuePair`1<string>> <FullName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLanguageValuePair`1<SourceDetail>> <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private SourceDetail <Documentation>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLanguageValuePair`1<List`1<string>>> <AssemblyNameList>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLanguageValuePair`1<ApiNames>> <NamespaceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Summary>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Remarks>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Examples>k__BackingField;
    [CompilerGeneratedAttribute]
private ApiSyntaxBuildOutput <Syntax>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLanguageValuePair`1<ApiNames>> <Overridden>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLanguageValuePair`1<ApiNames>> <Overload>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLanguageValuePair`1<List`1<ApiExceptionInfoBuildOutput>>> <Exceptions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLinkInfoBuildOutput> <SeeAlsos>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SeeAlsoContent>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLinkInfoBuildOutput> <Sees>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLanguageValuePairWithLevel`1<List`1<ApiInheritanceTreeBuildOutput>>> <Inheritance>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLanguageValuePair`1<List`1<ApiNames>>> <DerivedClasses>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLanguageValuePair`1<List`1<ApiNames>>> <Implements>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLanguageValuePair`1<List`1<ApiNames>>> <InheritedMembers>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLanguageValuePair`1<List`1<ApiNames>>> <ExtensionMethods>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Conceptual>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLanguageValuePair`1<List`1<string>>> <Platform>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Metadata>k__BackingField;
    [YamlMemberAttribute]
[JsonPropertyAttribute("uid")]
public string Uid { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("commentId")]
public string CommentId { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("parent")]
public List`1<ApiLanguageValuePair`1<ApiNames>> Parent { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("package")]
public List`1<ApiLanguageValuePair`1<ApiNames>> Package { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("children")]
public List`1<ApiLanguageValuePair`1<List`1<ApiBuildOutput>>> Children { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("href")]
public string Href { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("langs")]
public String[] SupportedLanguages { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("name")]
public List`1<ApiLanguageValuePair`1<string>> Name { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("nameWithType")]
public List`1<ApiLanguageValuePair`1<string>> NameWithType { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("fullName")]
public List`1<ApiLanguageValuePair`1<string>> FullName { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("type")]
public string Type { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("source")]
public List`1<ApiLanguageValuePair`1<SourceDetail>> Source { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("documentation")]
public SourceDetail Documentation { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("assemblies")]
public List`1<ApiLanguageValuePair`1<List`1<string>>> AssemblyNameList { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("namespace")]
public List`1<ApiLanguageValuePair`1<ApiNames>> NamespaceName { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("summary")]
public string Summary { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("remarks")]
public string Remarks { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("example")]
public List`1<string> Examples { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("syntax")]
public ApiSyntaxBuildOutput Syntax { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("overridden")]
public List`1<ApiLanguageValuePair`1<ApiNames>> Overridden { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("overload")]
public List`1<ApiLanguageValuePair`1<ApiNames>> Overload { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("exceptions")]
public List`1<ApiLanguageValuePair`1<List`1<ApiExceptionInfoBuildOutput>>> Exceptions { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("seealso")]
public List`1<ApiLinkInfoBuildOutput> SeeAlsos { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("seealsoContent")]
public string SeeAlsoContent { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("see")]
public List`1<ApiLinkInfoBuildOutput> Sees { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("inheritance")]
public List`1<ApiLanguageValuePairWithLevel`1<List`1<ApiInheritanceTreeBuildOutput>>> Inheritance { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("derivedClasses")]
public List`1<ApiLanguageValuePair`1<List`1<ApiNames>>> DerivedClasses { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("implements")]
public List`1<ApiLanguageValuePair`1<List`1<ApiNames>>> Implements { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("inheritedMembers")]
public List`1<ApiLanguageValuePair`1<List`1<ApiNames>>> InheritedMembers { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("extensionMethods")]
public List`1<ApiLanguageValuePair`1<List`1<ApiNames>>> ExtensionMethods { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("conceptual")]
public string Conceptual { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("platform")]
public List`1<ApiLanguageValuePair`1<List`1<string>>> Platform { get; public set; }
    [ExtensibleMemberAttribute]
[JsonExtensionDataAttribute]
public Dictionary`2<string, object> Metadata { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Uid();
    [CompilerGeneratedAttribute]
public void set_Uid(string value);
    [CompilerGeneratedAttribute]
public string get_CommentId();
    [CompilerGeneratedAttribute]
public void set_CommentId(string value);
    [CompilerGeneratedAttribute]
public List`1<ApiLanguageValuePair`1<ApiNames>> get_Parent();
    [CompilerGeneratedAttribute]
public void set_Parent(List`1<ApiLanguageValuePair`1<ApiNames>> value);
    [CompilerGeneratedAttribute]
public List`1<ApiLanguageValuePair`1<ApiNames>> get_Package();
    [CompilerGeneratedAttribute]
public void set_Package(List`1<ApiLanguageValuePair`1<ApiNames>> value);
    [CompilerGeneratedAttribute]
public List`1<ApiLanguageValuePair`1<List`1<ApiBuildOutput>>> get_Children();
    [CompilerGeneratedAttribute]
public void set_Children(List`1<ApiLanguageValuePair`1<List`1<ApiBuildOutput>>> value);
    [CompilerGeneratedAttribute]
public string get_Href();
    [CompilerGeneratedAttribute]
public void set_Href(string value);
    [CompilerGeneratedAttribute]
public String[] get_SupportedLanguages();
    [CompilerGeneratedAttribute]
public void set_SupportedLanguages(String[] value);
    [CompilerGeneratedAttribute]
public List`1<ApiLanguageValuePair`1<string>> get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(List`1<ApiLanguageValuePair`1<string>> value);
    [CompilerGeneratedAttribute]
public List`1<ApiLanguageValuePair`1<string>> get_NameWithType();
    [CompilerGeneratedAttribute]
public void set_NameWithType(List`1<ApiLanguageValuePair`1<string>> value);
    [CompilerGeneratedAttribute]
public List`1<ApiLanguageValuePair`1<string>> get_FullName();
    [CompilerGeneratedAttribute]
public void set_FullName(List`1<ApiLanguageValuePair`1<string>> value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public List`1<ApiLanguageValuePair`1<SourceDetail>> get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(List`1<ApiLanguageValuePair`1<SourceDetail>> value);
    [CompilerGeneratedAttribute]
public SourceDetail get_Documentation();
    [CompilerGeneratedAttribute]
public void set_Documentation(SourceDetail value);
    [CompilerGeneratedAttribute]
public List`1<ApiLanguageValuePair`1<List`1<string>>> get_AssemblyNameList();
    [CompilerGeneratedAttribute]
public void set_AssemblyNameList(List`1<ApiLanguageValuePair`1<List`1<string>>> value);
    [CompilerGeneratedAttribute]
public List`1<ApiLanguageValuePair`1<ApiNames>> get_NamespaceName();
    [CompilerGeneratedAttribute]
public void set_NamespaceName(List`1<ApiLanguageValuePair`1<ApiNames>> value);
    [CompilerGeneratedAttribute]
public string get_Summary();
    [CompilerGeneratedAttribute]
public void set_Summary(string value);
    [CompilerGeneratedAttribute]
public string get_Remarks();
    [CompilerGeneratedAttribute]
public void set_Remarks(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Examples();
    [CompilerGeneratedAttribute]
public void set_Examples(List`1<string> value);
    [CompilerGeneratedAttribute]
public ApiSyntaxBuildOutput get_Syntax();
    [CompilerGeneratedAttribute]
public void set_Syntax(ApiSyntaxBuildOutput value);
    [CompilerGeneratedAttribute]
public List`1<ApiLanguageValuePair`1<ApiNames>> get_Overridden();
    [CompilerGeneratedAttribute]
public void set_Overridden(List`1<ApiLanguageValuePair`1<ApiNames>> value);
    [CompilerGeneratedAttribute]
public List`1<ApiLanguageValuePair`1<ApiNames>> get_Overload();
    [CompilerGeneratedAttribute]
public void set_Overload(List`1<ApiLanguageValuePair`1<ApiNames>> value);
    [CompilerGeneratedAttribute]
public List`1<ApiLanguageValuePair`1<List`1<ApiExceptionInfoBuildOutput>>> get_Exceptions();
    [CompilerGeneratedAttribute]
public void set_Exceptions(List`1<ApiLanguageValuePair`1<List`1<ApiExceptionInfoBuildOutput>>> value);
    [CompilerGeneratedAttribute]
public List`1<ApiLinkInfoBuildOutput> get_SeeAlsos();
    [CompilerGeneratedAttribute]
public void set_SeeAlsos(List`1<ApiLinkInfoBuildOutput> value);
    [CompilerGeneratedAttribute]
public string get_SeeAlsoContent();
    [CompilerGeneratedAttribute]
public void set_SeeAlsoContent(string value);
    [CompilerGeneratedAttribute]
public List`1<ApiLinkInfoBuildOutput> get_Sees();
    [CompilerGeneratedAttribute]
public void set_Sees(List`1<ApiLinkInfoBuildOutput> value);
    [CompilerGeneratedAttribute]
public List`1<ApiLanguageValuePairWithLevel`1<List`1<ApiInheritanceTreeBuildOutput>>> get_Inheritance();
    [CompilerGeneratedAttribute]
public void set_Inheritance(List`1<ApiLanguageValuePairWithLevel`1<List`1<ApiInheritanceTreeBuildOutput>>> value);
    [CompilerGeneratedAttribute]
public List`1<ApiLanguageValuePair`1<List`1<ApiNames>>> get_DerivedClasses();
    [CompilerGeneratedAttribute]
public void set_DerivedClasses(List`1<ApiLanguageValuePair`1<List`1<ApiNames>>> value);
    [CompilerGeneratedAttribute]
public List`1<ApiLanguageValuePair`1<List`1<ApiNames>>> get_Implements();
    [CompilerGeneratedAttribute]
public void set_Implements(List`1<ApiLanguageValuePair`1<List`1<ApiNames>>> value);
    [CompilerGeneratedAttribute]
public List`1<ApiLanguageValuePair`1<List`1<ApiNames>>> get_InheritedMembers();
    [CompilerGeneratedAttribute]
public void set_InheritedMembers(List`1<ApiLanguageValuePair`1<List`1<ApiNames>>> value);
    [CompilerGeneratedAttribute]
public List`1<ApiLanguageValuePair`1<List`1<ApiNames>>> get_ExtensionMethods();
    [CompilerGeneratedAttribute]
public void set_ExtensionMethods(List`1<ApiLanguageValuePair`1<List`1<ApiNames>>> value);
    [CompilerGeneratedAttribute]
public string get_Conceptual();
    [CompilerGeneratedAttribute]
public void set_Conceptual(string value);
    [CompilerGeneratedAttribute]
public List`1<ApiLanguageValuePair`1<List`1<string>>> get_Platform();
    [CompilerGeneratedAttribute]
public void set_Platform(List`1<ApiLanguageValuePair`1<List`1<string>>> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Metadata();
    [CompilerGeneratedAttribute]
public void set_Metadata(Dictionary`2<string, object> value);
}
public class Microsoft.DocAsCode.Build.UniversalReference.ApiBuildOutputMetadataResolver : object {
    private IReadOnlyDictionary`2<string, object> _metadata;
    public ApiBuildOutputMetadataResolver(IReadOnlyDictionary`2<string, object> metadata);
    public sealed virtual Dictionary`2<string, object> Resolve(ItemViewModel source, ApiBuildOutput destination, Dictionary`2<string, object> destMember, ResolutionContext context);
    [CompilerGeneratedAttribute]
private bool <Resolve>b__2_0(KeyValuePair`2<string, object> p);
}
public class Microsoft.DocAsCode.Build.UniversalReference.ApiBuildOutputProfile : Profile {
    public ApiBuildOutputProfile(String[] supportedLanguages, IReadOnlyDictionary`2<string, object> metadata, IReadOnlyDictionary`2<string, ApiNames> references);
}
public class Microsoft.DocAsCode.Build.UniversalReference.ApiExceptionInfoBuildOutput : object {
    [CompilerGeneratedAttribute]
private ApiNames <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Metadata>k__BackingField;
    [YamlMemberAttribute]
[JsonPropertyAttribute("type")]
public ApiNames Type { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("description")]
public string Description { get; public set; }
    [ExtensibleMemberAttribute]
[JsonExtensionDataAttribute]
public Dictionary`2<string, object> Metadata { get; public set; }
    [CompilerGeneratedAttribute]
public ApiNames get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(ApiNames value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Metadata();
    [CompilerGeneratedAttribute]
public void set_Metadata(Dictionary`2<string, object> value);
}
public class Microsoft.DocAsCode.Build.UniversalReference.ApiHrefLinkInfoBuildOutputUrlResolver : object {
    public sealed virtual string Resolve(LinkInfo source, ApiLinkInfoBuildOutput destination, string destMember, ResolutionContext context);
}
public class Microsoft.DocAsCode.Build.UniversalReference.ApiInheritanceTreeBuildOutput : object {
    [CompilerGeneratedAttribute]
private ApiNames <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiInheritanceTreeBuildOutput> <Inheritance>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Level>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Metadata>k__BackingField;
    [YamlMemberAttribute]
[JsonPropertyAttribute("type")]
public ApiNames Type { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("inheritance")]
public List`1<ApiInheritanceTreeBuildOutput> Inheritance { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("level")]
public int Level { get; public set; }
    [ExtensibleMemberAttribute]
[JsonExtensionDataAttribute]
public Dictionary`2<string, object> Metadata { get; public set; }
    [CompilerGeneratedAttribute]
public ApiNames get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(ApiNames value);
    [CompilerGeneratedAttribute]
public List`1<ApiInheritanceTreeBuildOutput> get_Inheritance();
    [CompilerGeneratedAttribute]
public void set_Inheritance(List`1<ApiInheritanceTreeBuildOutput> value);
    [CompilerGeneratedAttribute]
public int get_Level();
    [CompilerGeneratedAttribute]
public void set_Level(int value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Metadata();
    [CompilerGeneratedAttribute]
public void set_Metadata(Dictionary`2<string, object> value);
}
public class Microsoft.DocAsCode.Build.UniversalReference.ApiLanguageValuePair`1 : object {
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [YamlMemberAttribute]
[JsonPropertyAttribute("lang")]
public string Language { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("value")]
public T Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Language();
    [CompilerGeneratedAttribute]
public void set_Language(string value);
    [CompilerGeneratedAttribute]
public T get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(T value);
}
public class Microsoft.DocAsCode.Build.UniversalReference.ApiLanguageValuePairWithLevel`1 : ApiLanguageValuePair`1<T> {
    [CompilerGeneratedAttribute]
private int <Level>k__BackingField;
    [YamlMemberAttribute]
[JsonPropertyAttribute("level")]
public int Level { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Level();
    [CompilerGeneratedAttribute]
public void set_Level(int value);
}
public class Microsoft.DocAsCode.Build.UniversalReference.ApiLinkInfoBuildOutput : object {
    [CompilerGeneratedAttribute]
private LinkType <LinkType>k__BackingField;
    [CompilerGeneratedAttribute]
private ApiNames <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [YamlMemberAttribute]
[JsonPropertyAttribute("linkType")]
public LinkType LinkType { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("type")]
public ApiNames Type { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("url")]
public string Url { get; public set; }
    [CompilerGeneratedAttribute]
public LinkType get_LinkType();
    [CompilerGeneratedAttribute]
public void set_LinkType(LinkType value);
    [CompilerGeneratedAttribute]
public ApiNames get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(ApiNames value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
}
public class Microsoft.DocAsCode.Build.UniversalReference.ApiListInDevLangsOfApiNamesTypeConverter : object {
    private String[] _supportedLanguages;
    private IReadOnlyDictionary`2<string, ApiNames> _references;
    public ApiListInDevLangsOfApiNamesTypeConverter(String[] supportedLanguages, IReadOnlyDictionary`2<string, ApiNames> references);
    public sealed virtual List`1<ApiLanguageValuePair`1<ApiNames>> Convert(string source, List`1<ApiLanguageValuePair`1<ApiNames>> destination, ResolutionContext context);
}
public class Microsoft.DocAsCode.Build.UniversalReference.ApiNames : object {
    [CompilerGeneratedAttribute]
private string <Uid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Definition>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLanguageValuePair`1<string>> <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLanguageValuePair`1<string>> <NameWithType>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLanguageValuePair`1<string>> <FullName>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLanguageValuePair`1<string>> <Spec>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Metadata>k__BackingField;
    [YamlMemberAttribute]
[JsonPropertyAttribute("uid")]
public string Uid { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("definition")]
public string Definition { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("name")]
public List`1<ApiLanguageValuePair`1<string>> Name { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("nameWithType")]
public List`1<ApiLanguageValuePair`1<string>> NameWithType { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("fullName")]
public List`1<ApiLanguageValuePair`1<string>> FullName { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("specName")]
public List`1<ApiLanguageValuePair`1<string>> Spec { get; public set; }
    [ExtensibleMemberAttribute]
[JsonExtensionDataAttribute]
public Dictionary`2<string, object> Metadata { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Uid();
    [CompilerGeneratedAttribute]
public void set_Uid(string value);
    [CompilerGeneratedAttribute]
public string get_Definition();
    [CompilerGeneratedAttribute]
public void set_Definition(string value);
    [CompilerGeneratedAttribute]
public List`1<ApiLanguageValuePair`1<string>> get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(List`1<ApiLanguageValuePair`1<string>> value);
    [CompilerGeneratedAttribute]
public List`1<ApiLanguageValuePair`1<string>> get_NameWithType();
    [CompilerGeneratedAttribute]
public void set_NameWithType(List`1<ApiLanguageValuePair`1<string>> value);
    [CompilerGeneratedAttribute]
public List`1<ApiLanguageValuePair`1<string>> get_FullName();
    [CompilerGeneratedAttribute]
public void set_FullName(List`1<ApiLanguageValuePair`1<string>> value);
    [CompilerGeneratedAttribute]
public List`1<ApiLanguageValuePair`1<string>> get_Spec();
    [CompilerGeneratedAttribute]
public void set_Spec(List`1<ApiLanguageValuePair`1<string>> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Metadata();
    [CompilerGeneratedAttribute]
public void set_Metadata(Dictionary`2<string, object> value);
}
public class Microsoft.DocAsCode.Build.UniversalReference.ApiNamesProfile : Profile {
    public ApiNamesProfile(String[] supportedLanguages);
}
public class Microsoft.DocAsCode.Build.UniversalReference.ApiNamesSpecResolver : object {
    private String[] _supportedLanguages;
    public ApiNamesSpecResolver(String[] supportedLanguages);
    public sealed virtual List`1<ApiLanguageValuePair`1<string>> Resolve(ReferenceViewModel source, ApiNames destination, List`1<ApiLanguageValuePair`1<string>> destMember, ResolutionContext context);
    private static string GetSpecName(List`1<SpecViewModel> spec);
    private static string GetCompositeName(SpecViewModel svm);
}
public class Microsoft.DocAsCode.Build.UniversalReference.ApiNamesTypeConverter : object {
    private String[] _supportedLanguages;
    private IReadOnlyDictionary`2<string, ApiNames> _references;
    public ApiNamesTypeConverter(String[] supportedLanguages, IReadOnlyDictionary`2<string, ApiNames> references);
    public sealed virtual ApiNames Convert(string source, ApiNames destination, ResolutionContext context);
}
public class Microsoft.DocAsCode.Build.UniversalReference.ApiParameterBuildOutput : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiNames> <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Optional>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Metadata>k__BackingField;
    [YamlMemberAttribute]
[JsonPropertyAttribute("id")]
public string Name { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("type")]
public List`1<ApiNames> Type { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("description")]
public string Description { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("optional")]
public bool Optional { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("defaultValue")]
public string DefaultValue { get; public set; }
    [ExtensibleMemberAttribute]
[JsonExtensionDataAttribute]
public Dictionary`2<string, object> Metadata { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public List`1<ApiNames> get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(List`1<ApiNames> value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public bool get_Optional();
    [CompilerGeneratedAttribute]
public void set_Optional(bool value);
    [CompilerGeneratedAttribute]
public string get_DefaultValue();
    [CompilerGeneratedAttribute]
public void set_DefaultValue(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Metadata();
    [CompilerGeneratedAttribute]
public void set_Metadata(Dictionary`2<string, object> value);
}
public class Microsoft.DocAsCode.Build.UniversalReference.ApiSyntaxBuildOutput : object {
    [CompilerGeneratedAttribute]
private List`1<ApiLanguageValuePair`1<string>> <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiParameterBuildOutput> <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiParameterBuildOutput> <TypeParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiLanguageValuePair`1<ApiParameterBuildOutput>> <Return>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Metadata>k__BackingField;
    [YamlMemberAttribute]
[JsonPropertyAttribute("content")]
public List`1<ApiLanguageValuePair`1<string>> Content { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("parameters")]
public List`1<ApiParameterBuildOutput> Parameters { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("typeParameters")]
public List`1<ApiParameterBuildOutput> TypeParameters { get; public set; }
    [YamlMemberAttribute]
[JsonPropertyAttribute("return")]
public List`1<ApiLanguageValuePair`1<ApiParameterBuildOutput>> Return { get; public set; }
    [ExtensibleMemberAttribute]
[JsonExtensionDataAttribute]
public Dictionary`2<string, object> Metadata { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<ApiLanguageValuePair`1<string>> get_Content();
    [CompilerGeneratedAttribute]
public void set_Content(List`1<ApiLanguageValuePair`1<string>> value);
    [CompilerGeneratedAttribute]
public List`1<ApiParameterBuildOutput> get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(List`1<ApiParameterBuildOutput> value);
    [CompilerGeneratedAttribute]
public List`1<ApiParameterBuildOutput> get_TypeParameters();
    [CompilerGeneratedAttribute]
public void set_TypeParameters(List`1<ApiParameterBuildOutput> value);
    [CompilerGeneratedAttribute]
public List`1<ApiLanguageValuePair`1<ApiParameterBuildOutput>> get_Return();
    [CompilerGeneratedAttribute]
public void set_Return(List`1<ApiLanguageValuePair`1<ApiParameterBuildOutput>> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Metadata();
    [CompilerGeneratedAttribute]
public void set_Metadata(Dictionary`2<string, object> value);
}
[ExportAttribute("UniversalReferenceDocumentProcessor", "Microsoft.DocAsCode.Plugins.IDocumentBuildStep")]
public class Microsoft.DocAsCode.Build.UniversalReference.ApplyOverwriteDocumentForUref : ApplyOverwriteDocument {
    public string Name { get; }
    public int BuildOrder { get; }
    public virtual string get_Name();
    public virtual int get_BuildOrder();
    public IEnumerable`1<ItemViewModel> GetItemsFromOverwriteDocument(FileModel fileModel, string uid, IHostService host);
    public IEnumerable`1<ItemViewModel> GetItemsToOverwrite(FileModel fileModel, string uid, IHostService host);
    protected virtual void ApplyOverwrite(IHostService host, List`1<FileModel> overwrites, string uid, List`1<FileModel> articles);
}
[ExportAttribute("UniversalReferenceDocumentProcessor", "Microsoft.DocAsCode.Plugins.IDocumentBuildStep")]
public class Microsoft.DocAsCode.Build.UniversalReference.BuildUniversalReferenceDocument : BuildReferenceDocumentBase {
    public string Name { get; }
    public virtual string get_Name();
    protected virtual void BuildArticle(IHostService host, FileModel model);
}
[ExportAttribute("UniversalReferenceDocumentProcessor", "Microsoft.DocAsCode.Plugins.IDocumentBuildStep")]
public class Microsoft.DocAsCode.Build.UniversalReference.FillReferenceInformation : BaseDocumentBuildStep {
    public string Name { get; }
    public int BuildOrder { get; }
    public virtual string get_Name();
    public virtual int get_BuildOrder();
    public virtual void Postbuild(ImmutableList`1<FileModel> models, IHostService host);
    private void FillCore(PageViewModel model, IHostService host, string file);
    private void FillContent(ReferenceViewModel r, object item);
}
public static class Microsoft.DocAsCode.Build.UniversalReference.ModelConverter : object {
    public static ApiBuildOutput ToApiBuildOutput(PageViewModel model);
    public static List`1<ApiLanguageValuePair`1<ApiNames>> ToApiListInDevLangsResolvingApiNames(string defaultValue, SortedList`2<string, string> values, String[] supportedLanguages, IReadOnlyDictionary`2<string, ApiNames> references);
    public static List`1<ApiLanguageValuePairWithLevel`1<List`1<ApiInheritanceTreeBuildOutput>>> ToApiListInDevLangsResolvingApiNames(List`1<InheritanceTree> defaultValue, SortedList`2<string, List`1<InheritanceTree>> values, String[] supportedLanguages, IReadOnlyDictionary`2<string, ApiNames> references);
    public static List`1<ApiLanguageValuePair`1<List`1<ApiExceptionInfoBuildOutput>>> ToApiListInDevlangsResolvingApiNames(List`1<ExceptionInfo> defaultValue, SortedList`2<string, List`1<ExceptionInfo>> values, String[] supportedLanguages, IReadOnlyDictionary`2<string, ApiNames> references);
    public static List`1<ApiLanguageValuePair`1<ApiParameterBuildOutput>> ToApiListInDevLangsResolvingApiNames(ApiParameter defaultValue, SortedList`2<string, ApiParameter> values, String[] supportedLanguages, IReadOnlyDictionary`2<string, ApiNames> references);
    public static List`1<ApiLanguageValuePair`1<List`1<ApiNames>>> ToApiListInDevLangsResolvingApiNames(List`1<string> defaultValue, SortedList`2<string, List`1<string>> values, String[] supportedLanguages, IReadOnlyDictionary`2<string, ApiNames> references);
    public static List`1<ApiLanguageValuePair`1<T>> ToApiListInDevLangs(T defaultValue, SortedList`2<string, T> values, String[] supportedLanguages);
    public static ApiNames ResolveApiNames(string uid, String[] supportedLanguages, IReadOnlyDictionary`2<string, ApiNames> references);
    public static string GetXref(string uid, string text, string alt);
    private static int CalculateInheritanceDepth(InheritanceTree tree);
    private static int CalculateInheritanceDepth(List`1<InheritanceTree> trees);
    private static ApiInheritanceTreeBuildOutput ResolveInheritanceTree(InheritanceTree tree, String[] supportedLanguages, IReadOnlyDictionary`2<string, ApiNames> references, int depth, int maxDepth);
    private static ApiBuildOutput ResolveApiBuildOutput(string uid, IReadOnlyDictionary`2<string, ApiBuildOutput> children);
}
internal static class Microsoft.DocAsCode.Build.UniversalReference.UniversalReferenceConstants : object {
    public static string UniversalReference;
    public static string UniversalReferenceYamlMime;
}
[ExportAttribute("Microsoft.DocAsCode.Plugins.IDocumentProcessor")]
public class Microsoft.DocAsCode.Build.UniversalReference.UniversalReferenceDocumentProcessor : ReferenceDocumentProcessorBase {
    [CompilerGeneratedAttribute]
private string <ProcessedDocumentType>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IDocumentBuildStep> <BuildSteps>k__BackingField;
    protected string ProcessedDocumentType { get; }
    [ImportManyAttribute("UniversalReferenceDocumentProcessor")]
public IEnumerable`1<IDocumentBuildStep> BuildSteps { get; public set; }
    public string Name { get; }
    [CompilerGeneratedAttribute]
protected virtual string get_ProcessedDocumentType();
    protected virtual FileModel LoadArticle(FileAndType file, ImmutableDictionary`2<string, object> metadata);
    [CompilerGeneratedAttribute]
public virtual IEnumerable`1<IDocumentBuildStep> get_BuildSteps();
    [CompilerGeneratedAttribute]
public virtual void set_BuildSteps(IEnumerable`1<IDocumentBuildStep> value);
    public virtual string get_Name();
    public virtual ProcessingPriority GetProcessingPriority(FileAndType file);
    public virtual SaveResult Save(FileModel model);
    protected virtual void UpdateModelContent(FileModel model);
    [IteratorStateMachineAttribute("Microsoft.DocAsCode.Build.UniversalReference.UniversalReferenceDocumentProcessor/<GetXRefFromReference>d__13")]
private IEnumerable`1<XRefSpec> GetXRefFromReference(PageViewModel vm);
    [IteratorStateMachineAttribute("Microsoft.DocAsCode.Build.UniversalReference.UniversalReferenceDocumentProcessor/<GetXRefInfo>d__14")]
private static IEnumerable`1<XRefSpec> GetXRefInfo(ItemViewModel item, string key, List`1<ReferenceViewModel> references);
    private static XRefSpec GetXRefInfo(ReferenceViewModel item, string key);
    private static XRefSpec GetXRefSpecFromReference(ReferenceViewModel item);
}
