public class Docker.DotNet.X509.CertificateCredentials : Credentials {
    private X509Certificate2 _certificate;
    [CompilerGeneratedAttribute]
private RemoteCertificateValidationCallback <ServerCertificateValidationCallback>k__BackingField;
    public RemoteCertificateValidationCallback ServerCertificateValidationCallback { get; public set; }
    public CertificateCredentials(X509Certificate2 clientCertificate);
    [CompilerGeneratedAttribute]
public RemoteCertificateValidationCallback get_ServerCertificateValidationCallback();
    [CompilerGeneratedAttribute]
public void set_ServerCertificateValidationCallback(RemoteCertificateValidationCallback value);
    public virtual HttpMessageHandler GetHandler(HttpMessageHandler innerHandler);
    public virtual bool IsTlsCredentials();
    public virtual void Dispose();
}
public static class Docker.DotNet.X509.RSAUtil : object {
    private static byte Padding;
    public static X509Certificate2 GetCertFromPFX(string pfxFilePath, string password);
    public static X509Certificate2 GetCertFromPFXSecure(string pfxFilePath, SecureString password);
    public static X509Certificate2 GetCertFromPEMFiles(string certFilePath, string keyFilePath);
    private static RSACryptoServiceProvider ReadFromPemFile(string pemFilePath);
    private static int ReadIntegerCount(BinaryReader rdr);
    private static bool TryReadUntil(BinaryReader rdr, string tag);
}
internal static class StrongNamePublicKeys : object {
    public static string DockerDotNetPublicKey;
}
[GeneratedCodeAttribute("Nerdbank.GitVersioning.Tasks", "3.5.108.31086")]
[ExcludeFromCodeCoverageAttribute]
internal static class ThisAssembly : object {
    internal static string AssemblyConfiguration;
    internal static string AssemblyFileVersion;
    internal static string AssemblyInformationalVersion;
    internal static string AssemblyName;
    internal static string AssemblyTitle;
    internal static string AssemblyVersion;
    internal static DateTime GitCommitDate;
    internal static string GitCommitId;
    internal static bool IsPrerelease;
    internal static bool IsPublicRelease;
    internal static string PublicKey;
    internal static string PublicKeyToken;
    internal static string RootNamespace;
    private static ThisAssembly();
}
