public static class Microsoft.Diagnostics.Tracing.Extensions.ETWControl : object {
    public static bool SetCpuSamplingRate(int interval100ns);
    public static void EnableStackCaching(ulong traceHandle);
    internal static int GetHRFromWin32(int dwErr);
    private static int NtSetSystemInformation(SYSTEM_INFORMATION_CLASS SystemInformationClass, Void* SystemInformation, int SystemInformationLength);
}
public static class Microsoft.Diagnostics.Tracing.Extensions.ETWKernelControl : object {
    private static int maxStackTraceProviders;
    internal static Guid ProcessTaskGuid;
    internal static Guid ThreadTaskGuid;
    private static Guid DiskIOTaskGuid;
    private static Guid RegistryTaskGuid;
    private static Guid FileIOTaskGuid;
    private static Guid MemoryTaskGuid;
    private static Guid PerfInfoTaskGuid;
    private static Guid VirtualAllocTaskGuid;
    private static Guid ObjectTaskGuid;
    private static Guid ProviderGuid;
    private static bool s_KernelTraceControlLoaded;
    private static string KernelSessionName { get; }
    private static KernelKeywords NonOSKeywords { get; }
    private static ETWKernelControl();
    public static int StartKernelSession(UInt64& TraceHandle, Void* propertyBuff, int propertyBuffLength, STACK_TRACING_EVENT_ID* stackTracingEventIds, int cStackTracingEventIds);
    public static int StartWindowsHeapSession(UInt64& traceHandle, Void* propertyBuff, int propertyBuffLength, int pid);
    public static int StartWindowsHeapSession(UInt64& traceHandle, Void* propertyBuff, int propertyBuffLength, string exeFileName);
    public static void ResetWindowsHeapTracingFlags(string sessionName, bool noThrow);
    public static void Merge(String[] inputETLFileNames, string outputETLFileName, EVENT_TRACE_MERGE_EXTENDED_DATA flags);
    internal static int StartKernelTrace(UInt64& TraceHandle, Void* Properties, STACK_TRACING_EVENT_ID* StackTracingEventIds, int cStackTracingEventIds);
    internal static int CreateMergedTraceFile(string wszMergedFileName, String[] wszTraceFileNames, int cTraceFileNames, EVENT_TRACE_MERGE_EXTENDED_DATA dwExtendedDataFlags);
    internal static int Wow64DisableWow64FsRedirection(IntPtr& ptr);
    internal static int Wow64RevertWow64FsRedirection(IntPtr ptr);
    private static IntPtr LoadLibrary(string lpFileName);
    internal static int StartTraceW(UInt64& sessionHandle, string sessionName, EVENT_TRACE_PROPERTIES* properties);
    private static void LoadKernelTraceControl();
    private static int ExtensionsOffset(EVENT_TRACE_PROPERTIES* properties, int propertyBuffLength);
    private static void CopyStringToPtr(Char* toPtr, string str);
    private static int SaveExtensions(List`1<ExtensionItem> extensions, EVENT_TRACE_PROPERTIES* properties, int writeOffset);
    private static void PutStacksIntoExtensions(List`1<ExtensionItem> extensions, STACK_TRACING_EVENT_ID* StackTracingEventIds, int cStackTracingEventIds);
    private static void PutEnableFlagsIntoExtensions(List`1<ExtensionItem> extensions, KernelKeywords keywords);
    private static void SetImageTracingFlags(string sessionName, string exeFileName, bool set);
    private static string get_KernelSessionName();
    private static int RtlGetVersion(RTL_OSVERSIONINFOEX& lpVersionInformation);
    private static bool IsWin8orNewer();
    private static KernelKeywords get_NonOSKeywords();
}
public static class Microsoft.Diagnostics.Tracing.Extensions.ETWParsing : object {
    public static int TdhGetAllEventsInformation(Void* pEvent, IntPtr mustBeZero, Int32& index, Int32& count, Byte* pBuffer, Int32& pBufferSize);
}
[FlagsAttribute]
public enum Microsoft.Diagnostics.Tracing.Extensions.EVENT_TRACE_MERGE_EXTENDED_DATA : Enum {
    public int value__;
    public static EVENT_TRACE_MERGE_EXTENDED_DATA NONE;
    public static EVENT_TRACE_MERGE_EXTENDED_DATA IMAGEID;
    public static EVENT_TRACE_MERGE_EXTENDED_DATA BUILDINFO;
    public static EVENT_TRACE_MERGE_EXTENDED_DATA VOLUME_MAPPING;
    public static EVENT_TRACE_MERGE_EXTENDED_DATA WINSAT;
    public static EVENT_TRACE_MERGE_EXTENDED_DATA EVENT_METADATA;
    public static EVENT_TRACE_MERGE_EXTENDED_DATA PERFTRACK_METADATA;
    public static EVENT_TRACE_MERGE_EXTENDED_DATA NETWORK_INTERFACE;
    public static EVENT_TRACE_MERGE_EXTENDED_DATA NGEN_PDB;
    public static EVENT_TRACE_MERGE_EXTENDED_DATA COMPRESS_TRACE;
}
public class Microsoft.Diagnostics.Tracing.Extensions.STACK_TRACING_EVENT_ID : ValueType {
    public Guid EventGuid;
    public byte Type;
    private byte Reserved1;
    private byte Reserved2;
    private byte Reserved3;
    private byte Reserved4;
    private byte Reserved5;
    private byte Reserved6;
    private byte Reserved7;
}
