internal static class FxResources.System.Security.Cryptography.ProtectedData.SR : object {
}
public enum System.Security.Cryptography.DataProtectionScope : Enum {
    public int value__;
    public static DataProtectionScope CurrentUser;
    public static DataProtectionScope LocalMachine;
}
public static class System.Security.Cryptography.ProtectedData : object {
    public static Byte[] Protect(Byte[] userData, Byte[] optionalEntropy, DataProtectionScope scope);
    public static Byte[] Unprotect(Byte[] encryptedData, Byte[] optionalEntropy, DataProtectionScope scope);
}
internal static class System.SR : object {
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string Cryptography_DpApi_ProfileMayNotBeLoaded { get; }
    internal static string PlatformNotSupported_CryptographyProtectedData { get; }
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2, object p3);
    internal static string Format(IFormatProvider provider, string resourceFormat, Object[] args);
    internal static ResourceManager get_ResourceManager();
    internal static string get_Cryptography_DpApi_ProfileMayNotBeLoaded();
    internal static string get_PlatformNotSupported_CryptographyProtectedData();
}
