[FlagsAttribute]
public enum Microsoft.Build.Locator.DiscoveryType : Enum {
    public int value__;
    public static DiscoveryType DeveloperConsole;
    public static DiscoveryType VisualStudioSetup;
    public static DiscoveryType DotNetSdk;
}
internal static class Microsoft.Build.Locator.DotNetSdkLocationHelper : object {
    private static Regex DotNetBasePathRegex;
    private static Regex VersionRegex;
    private static Regex SdkRegex;
    private static DotNetSdkLocationHelper();
    public static VisualStudioInstance GetInstance(string dotNetSdkPath);
    [IteratorStateMachineAttribute("Microsoft.Build.Locator.DotNetSdkLocationHelper/<GetInstances>d__4")]
public static IEnumerable`1<VisualStudioInstance> GetInstances(string workingDirectory);
    [IteratorStateMachineAttribute("Microsoft.Build.Locator.DotNetSdkLocationHelper/<GetDotNetBasePaths>d__5")]
private static IEnumerable`1<string> GetDotNetBasePaths(string workingDirectory);
}
public static class Microsoft.Build.Locator.MSBuildLocator : object {
    private static string MSBuildPublicKeyToken;
    private static String[] s_msBuildAssemblies;
    private static Func`3<AssemblyLoadContext, AssemblyName, Assembly> s_registeredHandler;
    public static bool IsRegistered { get; }
    public static bool CanRegister { get; }
    private static IEnumerable`1<Assembly> LoadedMsBuildAssemblies { get; }
    private static MSBuildLocator();
    public static bool get_IsRegistered();
    public static bool get_CanRegister();
    private static IEnumerable`1<Assembly> get_LoadedMsBuildAssemblies();
    public static IEnumerable`1<VisualStudioInstance> QueryVisualStudioInstances();
    public static IEnumerable`1<VisualStudioInstance> QueryVisualStudioInstances(VisualStudioInstanceQueryOptions options);
    internal static IEnumerable`1<VisualStudioInstance> QueryVisualStudioInstances(IEnumerable`1<VisualStudioInstance> instances, VisualStudioInstanceQueryOptions options);
    public static VisualStudioInstance RegisterDefaults();
    public static void RegisterInstance(VisualStudioInstance instance);
    public static void RegisterMSBuildPath(string msbuildPath);
    public static void RegisterMSBuildPath(String[] msbuildSearchPaths);
    public static void Unregister();
    private static void ApplyDotNetSdkEnvironmentVariables(string dotNetSdkPath);
    private static bool IsMSBuildAssembly(Assembly assembly);
    private static bool IsMSBuildAssembly(AssemblyName assemblyName);
    [IteratorStateMachineAttribute("Microsoft.Build.Locator.MSBuildLocator/<GetInstances>d__20")]
private static IEnumerable`1<VisualStudioInstance> GetInstances(VisualStudioInstanceQueryOptions options);
}
public class Microsoft.Build.Locator.VisualStudioInstance : object {
    [CompilerGeneratedAttribute]
private Version <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VisualStudioRootPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MSBuildPath>k__BackingField;
    [CompilerGeneratedAttribute]
private DiscoveryType <DiscoveryType>k__BackingField;
    public Version Version { get; }
    public string VisualStudioRootPath { get; }
    public string Name { get; }
    public string MSBuildPath { get; }
    public DiscoveryType DiscoveryType { get; }
    internal VisualStudioInstance(string name, string path, Version version, DiscoveryType discoveryType);
    [CompilerGeneratedAttribute]
public Version get_Version();
    [CompilerGeneratedAttribute]
public string get_VisualStudioRootPath();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_MSBuildPath();
    [CompilerGeneratedAttribute]
public DiscoveryType get_DiscoveryType();
}
public class Microsoft.Build.Locator.VisualStudioInstanceQueryOptions : object {
    [CompilerGeneratedAttribute]
private DiscoveryType <DiscoveryTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WorkingDirectory>k__BackingField;
    public static VisualStudioInstanceQueryOptions Default { get; }
    public DiscoveryType DiscoveryTypes { get; public set; }
    public string WorkingDirectory { get; public set; }
    public static VisualStudioInstanceQueryOptions get_Default();
    [CompilerGeneratedAttribute]
public DiscoveryType get_DiscoveryTypes();
    [CompilerGeneratedAttribute]
public void set_DiscoveryTypes(DiscoveryType value);
    [CompilerGeneratedAttribute]
public string get_WorkingDirectory();
    [CompilerGeneratedAttribute]
public void set_WorkingDirectory(string value);
}
internal class ThisAssembly : object {
    internal static string AssemblyVersion;
    internal static string AssemblyFileVersion;
    internal static string AssemblyInformationalVersion;
    internal static string AssemblyName;
    internal static string AssemblyTitle;
    internal static string AssemblyConfiguration;
    internal static string PublicKey;
    internal static string PublicKeyToken;
    internal static string RootNamespace;
}
