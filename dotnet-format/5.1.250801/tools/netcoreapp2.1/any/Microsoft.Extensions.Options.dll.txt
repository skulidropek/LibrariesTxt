internal static class FxResources.Microsoft.Extensions.Options.SR : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddOptions(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection Configure(IServiceCollection services, Action`1<TOptions> configureOptions);
    [ExtensionAttribute]
public static IServiceCollection Configure(IServiceCollection services, string name, Action`1<TOptions> configureOptions);
    [ExtensionAttribute]
public static IServiceCollection ConfigureAll(IServiceCollection services, Action`1<TOptions> configureOptions);
    [ExtensionAttribute]
public static IServiceCollection PostConfigure(IServiceCollection services, Action`1<TOptions> configureOptions);
    [ExtensionAttribute]
public static IServiceCollection PostConfigure(IServiceCollection services, string name, Action`1<TOptions> configureOptions);
    [ExtensionAttribute]
public static IServiceCollection PostConfigureAll(IServiceCollection services, Action`1<TOptions> configureOptions);
    [ExtensionAttribute]
public static IServiceCollection ConfigureOptions(IServiceCollection services);
    private static bool IsAction(Type type);
    private static IEnumerable`1<Type> FindIConfigureOptions(Type type);
    [ExtensionAttribute]
public static IServiceCollection ConfigureOptions(IServiceCollection services, Type configureType);
    [ExtensionAttribute]
public static IServiceCollection ConfigureOptions(IServiceCollection services, object configureInstance);
    [ExtensionAttribute]
public static OptionsBuilder`1<TOptions> AddOptions(IServiceCollection services);
    [ExtensionAttribute]
public static OptionsBuilder`1<TOptions> AddOptions(IServiceCollection services, string name);
}
public class Microsoft.Extensions.Options.ConfigureNamedOptions`1 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<TOptions> <Action>k__BackingField;
    public string Name { get; }
    public Action`1<TOptions> Action { get; }
    public ConfigureNamedOptions`1(string name, Action`1<TOptions> action);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Action`1<TOptions> get_Action();
    public virtual void Configure(string name, TOptions options);
    public sealed virtual void Configure(TOptions options);
}
public class Microsoft.Extensions.Options.ConfigureNamedOptions`2 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`2<TOptions, TDep> <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep <Dependency>k__BackingField;
    public string Name { get; }
    public Action`2<TOptions, TDep> Action { get; }
    public TDep Dependency { get; }
    public ConfigureNamedOptions`2(string name, TDep dependency, Action`2<TOptions, TDep> action);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Action`2<TOptions, TDep> get_Action();
    [CompilerGeneratedAttribute]
public TDep get_Dependency();
    public virtual void Configure(string name, TOptions options);
    public sealed virtual void Configure(TOptions options);
}
public class Microsoft.Extensions.Options.ConfigureNamedOptions`3 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`3<TOptions, TDep1, TDep2> <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep1 <Dependency1>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep2 <Dependency2>k__BackingField;
    public string Name { get; }
    public Action`3<TOptions, TDep1, TDep2> Action { get; }
    public TDep1 Dependency1 { get; }
    public TDep2 Dependency2 { get; }
    public ConfigureNamedOptions`3(string name, TDep1 dependency, TDep2 dependency2, Action`3<TOptions, TDep1, TDep2> action);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Action`3<TOptions, TDep1, TDep2> get_Action();
    [CompilerGeneratedAttribute]
public TDep1 get_Dependency1();
    [CompilerGeneratedAttribute]
public TDep2 get_Dependency2();
    public virtual void Configure(string name, TOptions options);
    public sealed virtual void Configure(TOptions options);
}
public class Microsoft.Extensions.Options.ConfigureNamedOptions`4 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`4<TOptions, TDep1, TDep2, TDep3> <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep1 <Dependency1>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep2 <Dependency2>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep3 <Dependency3>k__BackingField;
    public string Name { get; }
    public Action`4<TOptions, TDep1, TDep2, TDep3> Action { get; }
    public TDep1 Dependency1 { get; }
    public TDep2 Dependency2 { get; }
    public TDep3 Dependency3 { get; }
    public ConfigureNamedOptions`4(string name, TDep1 dependency, TDep2 dependency2, TDep3 dependency3, Action`4<TOptions, TDep1, TDep2, TDep3> action);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Action`4<TOptions, TDep1, TDep2, TDep3> get_Action();
    [CompilerGeneratedAttribute]
public TDep1 get_Dependency1();
    [CompilerGeneratedAttribute]
public TDep2 get_Dependency2();
    [CompilerGeneratedAttribute]
public TDep3 get_Dependency3();
    public virtual void Configure(string name, TOptions options);
    public sealed virtual void Configure(TOptions options);
}
public class Microsoft.Extensions.Options.ConfigureNamedOptions`5 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`5<TOptions, TDep1, TDep2, TDep3, TDep4> <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep1 <Dependency1>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep2 <Dependency2>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep3 <Dependency3>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep4 <Dependency4>k__BackingField;
    public string Name { get; }
    public Action`5<TOptions, TDep1, TDep2, TDep3, TDep4> Action { get; }
    public TDep1 Dependency1 { get; }
    public TDep2 Dependency2 { get; }
    public TDep3 Dependency3 { get; }
    public TDep4 Dependency4 { get; }
    public ConfigureNamedOptions`5(string name, TDep1 dependency1, TDep2 dependency2, TDep3 dependency3, TDep4 dependency4, Action`5<TOptions, TDep1, TDep2, TDep3, TDep4> action);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Action`5<TOptions, TDep1, TDep2, TDep3, TDep4> get_Action();
    [CompilerGeneratedAttribute]
public TDep1 get_Dependency1();
    [CompilerGeneratedAttribute]
public TDep2 get_Dependency2();
    [CompilerGeneratedAttribute]
public TDep3 get_Dependency3();
    [CompilerGeneratedAttribute]
public TDep4 get_Dependency4();
    public virtual void Configure(string name, TOptions options);
    public sealed virtual void Configure(TOptions options);
}
public class Microsoft.Extensions.Options.ConfigureNamedOptions`6 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`6<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5> <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep1 <Dependency1>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep2 <Dependency2>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep3 <Dependency3>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep4 <Dependency4>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep5 <Dependency5>k__BackingField;
    public string Name { get; }
    public Action`6<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5> Action { get; }
    public TDep1 Dependency1 { get; }
    public TDep2 Dependency2 { get; }
    public TDep3 Dependency3 { get; }
    public TDep4 Dependency4 { get; }
    public TDep5 Dependency5 { get; }
    public ConfigureNamedOptions`6(string name, TDep1 dependency1, TDep2 dependency2, TDep3 dependency3, TDep4 dependency4, TDep5 dependency5, Action`6<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5> action);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Action`6<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5> get_Action();
    [CompilerGeneratedAttribute]
public TDep1 get_Dependency1();
    [CompilerGeneratedAttribute]
public TDep2 get_Dependency2();
    [CompilerGeneratedAttribute]
public TDep3 get_Dependency3();
    [CompilerGeneratedAttribute]
public TDep4 get_Dependency4();
    [CompilerGeneratedAttribute]
public TDep5 get_Dependency5();
    public virtual void Configure(string name, TOptions options);
    public sealed virtual void Configure(TOptions options);
}
public class Microsoft.Extensions.Options.ConfigureOptions`1 : object {
    [CompilerGeneratedAttribute]
private Action`1<TOptions> <Action>k__BackingField;
    public Action`1<TOptions> Action { get; }
    public ConfigureOptions`1(Action`1<TOptions> action);
    [CompilerGeneratedAttribute]
public Action`1<TOptions> get_Action();
    public virtual void Configure(TOptions options);
}
public interface Microsoft.Extensions.Options.IConfigureNamedOptions`1 {
    public abstract virtual void Configure(string name, TOptions options);
}
public interface Microsoft.Extensions.Options.IConfigureOptions`1 {
    public abstract virtual void Configure(TOptions options);
}
public interface Microsoft.Extensions.Options.IOptions`1 {
    public TOptions Value { get; }
    public abstract virtual TOptions get_Value();
}
public interface Microsoft.Extensions.Options.IOptionsChangeTokenSource`1 {
    public string Name { get; }
    public abstract virtual IChangeToken GetChangeToken();
    public abstract virtual string get_Name();
}
public interface Microsoft.Extensions.Options.IOptionsFactory`1 {
    public abstract virtual TOptions Create(string name);
}
public interface Microsoft.Extensions.Options.IOptionsMonitor`1 {
    public TOptions CurrentValue { get; }
    public abstract virtual TOptions get_CurrentValue();
    public abstract virtual TOptions Get(string name);
    public abstract virtual IDisposable OnChange(Action`2<TOptions, string> listener);
}
public interface Microsoft.Extensions.Options.IOptionsMonitorCache`1 {
    public abstract virtual TOptions GetOrAdd(string name, Func`1<TOptions> createOptions);
    public abstract virtual bool TryAdd(string name, TOptions options);
    public abstract virtual bool TryRemove(string name);
    public abstract virtual void Clear();
}
public interface Microsoft.Extensions.Options.IOptionsSnapshot`1 {
    public abstract virtual TOptions Get(string name);
}
public interface Microsoft.Extensions.Options.IPostConfigureOptions`1 {
    public abstract virtual void PostConfigure(string name, TOptions options);
}
public interface Microsoft.Extensions.Options.IValidateOptions`1 {
    public abstract virtual ValidateOptionsResult Validate(string name, TOptions options);
}
public static class Microsoft.Extensions.Options.Options : object {
    public static string DefaultName;
    private static Options();
    public static IOptions`1<TOptions> Create(TOptions options);
}
public class Microsoft.Extensions.Options.OptionsBuilder`1 : object {
    private static string DefaultValidationFailureMessage;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceCollection <Services>k__BackingField;
    public string Name { get; }
    public IServiceCollection Services { get; }
    public OptionsBuilder`1(IServiceCollection services, string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public IServiceCollection get_Services();
    public virtual OptionsBuilder`1<TOptions> Configure(Action`1<TOptions> configureOptions);
    public virtual OptionsBuilder`1<TOptions> Configure(Action`2<TOptions, TDep> configureOptions);
    public virtual OptionsBuilder`1<TOptions> Configure(Action`3<TOptions, TDep1, TDep2> configureOptions);
    public virtual OptionsBuilder`1<TOptions> Configure(Action`4<TOptions, TDep1, TDep2, TDep3> configureOptions);
    public virtual OptionsBuilder`1<TOptions> Configure(Action`5<TOptions, TDep1, TDep2, TDep3, TDep4> configureOptions);
    public virtual OptionsBuilder`1<TOptions> Configure(Action`6<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5> configureOptions);
    public virtual OptionsBuilder`1<TOptions> PostConfigure(Action`1<TOptions> configureOptions);
    public virtual OptionsBuilder`1<TOptions> PostConfigure(Action`2<TOptions, TDep> configureOptions);
    public virtual OptionsBuilder`1<TOptions> PostConfigure(Action`3<TOptions, TDep1, TDep2> configureOptions);
    public virtual OptionsBuilder`1<TOptions> PostConfigure(Action`4<TOptions, TDep1, TDep2, TDep3> configureOptions);
    public virtual OptionsBuilder`1<TOptions> PostConfigure(Action`5<TOptions, TDep1, TDep2, TDep3, TDep4> configureOptions);
    public virtual OptionsBuilder`1<TOptions> PostConfigure(Action`6<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5> configureOptions);
    public virtual OptionsBuilder`1<TOptions> Validate(Func`2<TOptions, bool> validation);
    public virtual OptionsBuilder`1<TOptions> Validate(Func`2<TOptions, bool> validation, string failureMessage);
    public virtual OptionsBuilder`1<TOptions> Validate(Func`3<TOptions, TDep, bool> validation);
    public virtual OptionsBuilder`1<TOptions> Validate(Func`3<TOptions, TDep, bool> validation, string failureMessage);
    public virtual OptionsBuilder`1<TOptions> Validate(Func`4<TOptions, TDep1, TDep2, bool> validation);
    public virtual OptionsBuilder`1<TOptions> Validate(Func`4<TOptions, TDep1, TDep2, bool> validation, string failureMessage);
    public virtual OptionsBuilder`1<TOptions> Validate(Func`5<TOptions, TDep1, TDep2, TDep3, bool> validation);
    public virtual OptionsBuilder`1<TOptions> Validate(Func`5<TOptions, TDep1, TDep2, TDep3, bool> validation, string failureMessage);
    public virtual OptionsBuilder`1<TOptions> Validate(Func`6<TOptions, TDep1, TDep2, TDep3, TDep4, bool> validation);
    public virtual OptionsBuilder`1<TOptions> Validate(Func`6<TOptions, TDep1, TDep2, TDep3, TDep4, bool> validation, string failureMessage);
    public virtual OptionsBuilder`1<TOptions> Validate(Func`7<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5, bool> validation);
    public virtual OptionsBuilder`1<TOptions> Validate(Func`7<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5, bool> validation, string failureMessage);
}
public class Microsoft.Extensions.Options.OptionsCache`1 : object {
    private ConcurrentDictionary`2<string, Lazy`1<TOptions>> _cache;
    public sealed virtual void Clear();
    public virtual TOptions GetOrAdd(string name, Func`1<TOptions> createOptions);
    public virtual bool TryAdd(string name, TOptions options);
    public virtual bool TryRemove(string name);
}
public class Microsoft.Extensions.Options.OptionsFactory`1 : object {
    private IEnumerable`1<IConfigureOptions`1<TOptions>> _setups;
    private IEnumerable`1<IPostConfigureOptions`1<TOptions>> _postConfigures;
    private IEnumerable`1<IValidateOptions`1<TOptions>> _validations;
    public OptionsFactory`1(IEnumerable`1<IConfigureOptions`1<TOptions>> setups, IEnumerable`1<IPostConfigureOptions`1<TOptions>> postConfigures);
    public OptionsFactory`1(IEnumerable`1<IConfigureOptions`1<TOptions>> setups, IEnumerable`1<IPostConfigureOptions`1<TOptions>> postConfigures, IEnumerable`1<IValidateOptions`1<TOptions>> validations);
    public sealed virtual TOptions Create(string name);
    protected virtual TOptions CreateInstance(string name);
}
public class Microsoft.Extensions.Options.OptionsManager`1 : object {
    private IOptionsFactory`1<TOptions> _factory;
    private OptionsCache`1<TOptions> _cache;
    public TOptions Value { get; }
    public OptionsManager`1(IOptionsFactory`1<TOptions> factory);
    public sealed virtual TOptions get_Value();
    public virtual TOptions Get(string name);
}
public class Microsoft.Extensions.Options.OptionsMonitor`1 : object {
    private IOptionsMonitorCache`1<TOptions> _cache;
    private IOptionsFactory`1<TOptions> _factory;
    private IEnumerable`1<IOptionsChangeTokenSource`1<TOptions>> _sources;
    private List`1<IDisposable> _registrations;
    [CompilerGeneratedAttribute]
private Action`2<TOptions, string> _onChange;
    public TOptions CurrentValue { get; }
    public OptionsMonitor`1(IOptionsFactory`1<TOptions> factory, IEnumerable`1<IOptionsChangeTokenSource`1<TOptions>> sources, IOptionsMonitorCache`1<TOptions> cache);
    [CompilerGeneratedAttribute]
internal void add__onChange(Action`2<TOptions, string> value);
    [CompilerGeneratedAttribute]
internal void remove__onChange(Action`2<TOptions, string> value);
    private void InvokeChanged(string name);
    public sealed virtual TOptions get_CurrentValue();
    public virtual TOptions Get(string name);
    public sealed virtual IDisposable OnChange(Action`2<TOptions, string> listener);
    public sealed virtual void Dispose();
    [CompilerGeneratedAttribute]
private void <.ctor>b__7_1(string name);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.Options.OptionsMonitorExtensions : object {
    [ExtensionAttribute]
public static IDisposable OnChange(IOptionsMonitor`1<TOptions> monitor, Action`1<TOptions> listener);
}
public class Microsoft.Extensions.Options.OptionsValidationException : Exception {
    [CompilerGeneratedAttribute]
private string <OptionsName>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <OptionsType>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Failures>k__BackingField;
    public string OptionsName { get; }
    public Type OptionsType { get; }
    public IEnumerable`1<string> Failures { get; }
    public string Message { get; }
    public OptionsValidationException(string optionsName, Type optionsType, IEnumerable`1<string> failureMessages);
    [CompilerGeneratedAttribute]
public string get_OptionsName();
    [CompilerGeneratedAttribute]
public Type get_OptionsType();
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Failures();
    public virtual string get_Message();
}
public class Microsoft.Extensions.Options.OptionsWrapper`1 : object {
    [CompilerGeneratedAttribute]
private TOptions <Value>k__BackingField;
    public TOptions Value { get; }
    public OptionsWrapper`1(TOptions options);
    [CompilerGeneratedAttribute]
public sealed virtual TOptions get_Value();
}
public class Microsoft.Extensions.Options.PostConfigureOptions`1 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<TOptions> <Action>k__BackingField;
    public string Name { get; }
    public Action`1<TOptions> Action { get; }
    public PostConfigureOptions`1(string name, Action`1<TOptions> action);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Action`1<TOptions> get_Action();
    public virtual void PostConfigure(string name, TOptions options);
}
public class Microsoft.Extensions.Options.PostConfigureOptions`2 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`2<TOptions, TDep> <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep <Dependency>k__BackingField;
    public string Name { get; }
    public Action`2<TOptions, TDep> Action { get; }
    public TDep Dependency { get; }
    public PostConfigureOptions`2(string name, TDep dependency, Action`2<TOptions, TDep> action);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Action`2<TOptions, TDep> get_Action();
    [CompilerGeneratedAttribute]
public TDep get_Dependency();
    public virtual void PostConfigure(string name, TOptions options);
    public void PostConfigure(TOptions options);
}
public class Microsoft.Extensions.Options.PostConfigureOptions`3 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`3<TOptions, TDep1, TDep2> <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep1 <Dependency1>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep2 <Dependency2>k__BackingField;
    public string Name { get; }
    public Action`3<TOptions, TDep1, TDep2> Action { get; }
    public TDep1 Dependency1 { get; }
    public TDep2 Dependency2 { get; }
    public PostConfigureOptions`3(string name, TDep1 dependency, TDep2 dependency2, Action`3<TOptions, TDep1, TDep2> action);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Action`3<TOptions, TDep1, TDep2> get_Action();
    [CompilerGeneratedAttribute]
public TDep1 get_Dependency1();
    [CompilerGeneratedAttribute]
public TDep2 get_Dependency2();
    public virtual void PostConfigure(string name, TOptions options);
    public void PostConfigure(TOptions options);
}
public class Microsoft.Extensions.Options.PostConfigureOptions`4 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`4<TOptions, TDep1, TDep2, TDep3> <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep1 <Dependency1>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep2 <Dependency2>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep3 <Dependency3>k__BackingField;
    public string Name { get; }
    public Action`4<TOptions, TDep1, TDep2, TDep3> Action { get; }
    public TDep1 Dependency1 { get; }
    public TDep2 Dependency2 { get; }
    public TDep3 Dependency3 { get; }
    public PostConfigureOptions`4(string name, TDep1 dependency, TDep2 dependency2, TDep3 dependency3, Action`4<TOptions, TDep1, TDep2, TDep3> action);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Action`4<TOptions, TDep1, TDep2, TDep3> get_Action();
    [CompilerGeneratedAttribute]
public TDep1 get_Dependency1();
    [CompilerGeneratedAttribute]
public TDep2 get_Dependency2();
    [CompilerGeneratedAttribute]
public TDep3 get_Dependency3();
    public virtual void PostConfigure(string name, TOptions options);
    public void PostConfigure(TOptions options);
}
public class Microsoft.Extensions.Options.PostConfigureOptions`5 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`5<TOptions, TDep1, TDep2, TDep3, TDep4> <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep1 <Dependency1>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep2 <Dependency2>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep3 <Dependency3>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep4 <Dependency4>k__BackingField;
    public string Name { get; }
    public Action`5<TOptions, TDep1, TDep2, TDep3, TDep4> Action { get; }
    public TDep1 Dependency1 { get; }
    public TDep2 Dependency2 { get; }
    public TDep3 Dependency3 { get; }
    public TDep4 Dependency4 { get; }
    public PostConfigureOptions`5(string name, TDep1 dependency1, TDep2 dependency2, TDep3 dependency3, TDep4 dependency4, Action`5<TOptions, TDep1, TDep2, TDep3, TDep4> action);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Action`5<TOptions, TDep1, TDep2, TDep3, TDep4> get_Action();
    [CompilerGeneratedAttribute]
public TDep1 get_Dependency1();
    [CompilerGeneratedAttribute]
public TDep2 get_Dependency2();
    [CompilerGeneratedAttribute]
public TDep3 get_Dependency3();
    [CompilerGeneratedAttribute]
public TDep4 get_Dependency4();
    public virtual void PostConfigure(string name, TOptions options);
    public void PostConfigure(TOptions options);
}
public class Microsoft.Extensions.Options.PostConfigureOptions`6 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`6<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5> <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep1 <Dependency1>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep2 <Dependency2>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep3 <Dependency3>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep4 <Dependency4>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep5 <Dependency5>k__BackingField;
    public string Name { get; }
    public Action`6<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5> Action { get; }
    public TDep1 Dependency1 { get; }
    public TDep2 Dependency2 { get; }
    public TDep3 Dependency3 { get; }
    public TDep4 Dependency4 { get; }
    public TDep5 Dependency5 { get; }
    public PostConfigureOptions`6(string name, TDep1 dependency1, TDep2 dependency2, TDep3 dependency3, TDep4 dependency4, TDep5 dependency5, Action`6<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5> action);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Action`6<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5> get_Action();
    [CompilerGeneratedAttribute]
public TDep1 get_Dependency1();
    [CompilerGeneratedAttribute]
public TDep2 get_Dependency2();
    [CompilerGeneratedAttribute]
public TDep3 get_Dependency3();
    [CompilerGeneratedAttribute]
public TDep4 get_Dependency4();
    [CompilerGeneratedAttribute]
public TDep5 get_Dependency5();
    public virtual void PostConfigure(string name, TOptions options);
    public void PostConfigure(TOptions options);
}
public class Microsoft.Extensions.Options.ValidateOptions`1 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<TOptions, bool> <Validation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FailureMessage>k__BackingField;
    public string Name { get; }
    public Func`2<TOptions, bool> Validation { get; }
    public string FailureMessage { get; }
    public ValidateOptions`1(string name, Func`2<TOptions, bool> validation, string failureMessage);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Func`2<TOptions, bool> get_Validation();
    [CompilerGeneratedAttribute]
public string get_FailureMessage();
    public sealed virtual ValidateOptionsResult Validate(string name, TOptions options);
}
public class Microsoft.Extensions.Options.ValidateOptions`2 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`3<TOptions, TDep, bool> <Validation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FailureMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep <Dependency>k__BackingField;
    public string Name { get; }
    public Func`3<TOptions, TDep, bool> Validation { get; }
    public string FailureMessage { get; }
    public TDep Dependency { get; }
    public ValidateOptions`2(string name, TDep dependency, Func`3<TOptions, TDep, bool> validation, string failureMessage);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Func`3<TOptions, TDep, bool> get_Validation();
    [CompilerGeneratedAttribute]
public string get_FailureMessage();
    [CompilerGeneratedAttribute]
public TDep get_Dependency();
    public sealed virtual ValidateOptionsResult Validate(string name, TOptions options);
}
public class Microsoft.Extensions.Options.ValidateOptions`3 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`4<TOptions, TDep1, TDep2, bool> <Validation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FailureMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep1 <Dependency1>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep2 <Dependency2>k__BackingField;
    public string Name { get; }
    public Func`4<TOptions, TDep1, TDep2, bool> Validation { get; }
    public string FailureMessage { get; }
    public TDep1 Dependency1 { get; }
    public TDep2 Dependency2 { get; }
    public ValidateOptions`3(string name, TDep1 dependency1, TDep2 dependency2, Func`4<TOptions, TDep1, TDep2, bool> validation, string failureMessage);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Func`4<TOptions, TDep1, TDep2, bool> get_Validation();
    [CompilerGeneratedAttribute]
public string get_FailureMessage();
    [CompilerGeneratedAttribute]
public TDep1 get_Dependency1();
    [CompilerGeneratedAttribute]
public TDep2 get_Dependency2();
    public sealed virtual ValidateOptionsResult Validate(string name, TOptions options);
}
public class Microsoft.Extensions.Options.ValidateOptions`4 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`5<TOptions, TDep1, TDep2, TDep3, bool> <Validation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FailureMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep1 <Dependency1>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep2 <Dependency2>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep3 <Dependency3>k__BackingField;
    public string Name { get; }
    public Func`5<TOptions, TDep1, TDep2, TDep3, bool> Validation { get; }
    public string FailureMessage { get; }
    public TDep1 Dependency1 { get; }
    public TDep2 Dependency2 { get; }
    public TDep3 Dependency3 { get; }
    public ValidateOptions`4(string name, TDep1 dependency1, TDep2 dependency2, TDep3 dependency3, Func`5<TOptions, TDep1, TDep2, TDep3, bool> validation, string failureMessage);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Func`5<TOptions, TDep1, TDep2, TDep3, bool> get_Validation();
    [CompilerGeneratedAttribute]
public string get_FailureMessage();
    [CompilerGeneratedAttribute]
public TDep1 get_Dependency1();
    [CompilerGeneratedAttribute]
public TDep2 get_Dependency2();
    [CompilerGeneratedAttribute]
public TDep3 get_Dependency3();
    public sealed virtual ValidateOptionsResult Validate(string name, TOptions options);
}
public class Microsoft.Extensions.Options.ValidateOptions`5 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`6<TOptions, TDep1, TDep2, TDep3, TDep4, bool> <Validation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FailureMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep1 <Dependency1>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep2 <Dependency2>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep3 <Dependency3>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep4 <Dependency4>k__BackingField;
    public string Name { get; }
    public Func`6<TOptions, TDep1, TDep2, TDep3, TDep4, bool> Validation { get; }
    public string FailureMessage { get; }
    public TDep1 Dependency1 { get; }
    public TDep2 Dependency2 { get; }
    public TDep3 Dependency3 { get; }
    public TDep4 Dependency4 { get; }
    public ValidateOptions`5(string name, TDep1 dependency1, TDep2 dependency2, TDep3 dependency3, TDep4 dependency4, Func`6<TOptions, TDep1, TDep2, TDep3, TDep4, bool> validation, string failureMessage);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Func`6<TOptions, TDep1, TDep2, TDep3, TDep4, bool> get_Validation();
    [CompilerGeneratedAttribute]
public string get_FailureMessage();
    [CompilerGeneratedAttribute]
public TDep1 get_Dependency1();
    [CompilerGeneratedAttribute]
public TDep2 get_Dependency2();
    [CompilerGeneratedAttribute]
public TDep3 get_Dependency3();
    [CompilerGeneratedAttribute]
public TDep4 get_Dependency4();
    public sealed virtual ValidateOptionsResult Validate(string name, TOptions options);
}
public class Microsoft.Extensions.Options.ValidateOptions`6 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`7<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5, bool> <Validation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FailureMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep1 <Dependency1>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep2 <Dependency2>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep3 <Dependency3>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep4 <Dependency4>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep5 <Dependency5>k__BackingField;
    public string Name { get; }
    public Func`7<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5, bool> Validation { get; }
    public string FailureMessage { get; }
    public TDep1 Dependency1 { get; }
    public TDep2 Dependency2 { get; }
    public TDep3 Dependency3 { get; }
    public TDep4 Dependency4 { get; }
    public TDep5 Dependency5 { get; }
    public ValidateOptions`6(string name, TDep1 dependency1, TDep2 dependency2, TDep3 dependency3, TDep4 dependency4, TDep5 dependency5, Func`7<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5, bool> validation, string failureMessage);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Func`7<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5, bool> get_Validation();
    [CompilerGeneratedAttribute]
public string get_FailureMessage();
    [CompilerGeneratedAttribute]
public TDep1 get_Dependency1();
    [CompilerGeneratedAttribute]
public TDep2 get_Dependency2();
    [CompilerGeneratedAttribute]
public TDep3 get_Dependency3();
    [CompilerGeneratedAttribute]
public TDep4 get_Dependency4();
    [CompilerGeneratedAttribute]
public TDep5 get_Dependency5();
    public sealed virtual ValidateOptionsResult Validate(string name, TOptions options);
}
public class Microsoft.Extensions.Options.ValidateOptionsResult : object {
    public static ValidateOptionsResult Skip;
    public static ValidateOptionsResult Success;
    [CompilerGeneratedAttribute]
private bool <Succeeded>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Skipped>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Failed>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FailureMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Failures>k__BackingField;
    public bool Succeeded { get; protected set; }
    public bool Skipped { get; protected set; }
    public bool Failed { get; protected set; }
    public string FailureMessage { get; protected set; }
    public IEnumerable`1<string> Failures { get; protected set; }
    private static ValidateOptionsResult();
    [CompilerGeneratedAttribute]
public bool get_Succeeded();
    [CompilerGeneratedAttribute]
protected void set_Succeeded(bool value);
    [CompilerGeneratedAttribute]
public bool get_Skipped();
    [CompilerGeneratedAttribute]
protected void set_Skipped(bool value);
    [CompilerGeneratedAttribute]
public bool get_Failed();
    [CompilerGeneratedAttribute]
protected void set_Failed(bool value);
    [CompilerGeneratedAttribute]
public string get_FailureMessage();
    [CompilerGeneratedAttribute]
protected void set_FailureMessage(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Failures();
    [CompilerGeneratedAttribute]
protected void set_Failures(IEnumerable`1<string> value);
    public static ValidateOptionsResult Fail(string failureMessage);
    public static ValidateOptionsResult Fail(IEnumerable`1<string> failures);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.NullablePublicOnlyAttribute : Attribute {
    public bool IncludesInternals;
    public NullablePublicOnlyAttribute(bool );
}
internal static class System.SR : object {
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string Error_CannotActivateAbstractOrInterface { get; }
    internal static string Error_FailedBinding { get; }
    internal static string Error_FailedToActivate { get; }
    internal static string Error_MissingParameterlessConstructor { get; }
    internal static string Error_NoIConfigureOptions { get; }
    internal static string Error_NoIConfigureOptionsAndAction { get; }
    private static bool UsingResourceKeys();
    [NullableContextAttribute("1")]
internal static string GetResourceString(string resourceKey, string defaultString);
    [NullableContextAttribute("1")]
internal static string Format(string resourceFormat, object p1);
    [NullableContextAttribute("1")]
internal static string Format(string resourceFormat, object p1, object p2);
    [NullableContextAttribute("2")]
internal static string Format(string resourceFormat, object p1, object p2, object p3);
    [NullableContextAttribute("1")]
internal static string Format(string resourceFormat, Object[] args);
    [NullableContextAttribute("1")]
internal static string Format(IFormatProvider provider, string resourceFormat, object p1);
    [NullableContextAttribute("2")]
internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2);
    [NullableContextAttribute("2")]
internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2, object p3);
    [NullableContextAttribute("1")]
internal static string Format(IFormatProvider provider, string resourceFormat, Object[] args);
    internal static ResourceManager get_ResourceManager();
    internal static string get_Error_CannotActivateAbstractOrInterface();
    internal static string get_Error_FailedBinding();
    internal static string get_Error_FailedToActivate();
    internal static string get_Error_MissingParameterlessConstructor();
    internal static string get_Error_NoIConfigureOptions();
    internal static string get_Error_NoIConfigureOptionsAndAction();
}
